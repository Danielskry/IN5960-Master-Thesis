[
    {
        "key": "WT-8149",
        "number": 7301,
        "state": "closed",
        "title": "Revert \"WT-8149 Updating metadata salvage csuite test to handle salvaging table metadata without salvaging file metadata\"",
        "body": "Reverts wiredtiger/wiredtiger#7263",
        "base_ref": "develop",
        "created_at": "Friday Dec 10, 2021 at 00:39 GMT",
        "updated_at": "Friday Dec 10, 2021 at 00:41 GMT",
        "closed_at": "Friday Dec 10, 2021 at 00:41 GMT",
        "merged_at": "Friday Dec 10, 2021 at 00:41 GMT"
    },
    {
        "key": "WT-8511",
        "number": 7300,
        "state": "closed",
        "title": "WT-8511 Remove unnecessary fetching of the cached binaries in evergreen.yml",
        "body": "The short-term solution is to avoid recompiling WiredTiger for the tasks mentioned in the WT-8511 description by calling the compile wiredtiger function once within each task (only the tasks in the description).\r\n\r\nThat said, a long-term solution would be to follow the evergreen best practice to only compile once and let the other tasks fetch the binaries. Since, this approach seems more involved, created WT-8525",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Friday Dec 10, 2021 at 00:31 GMT",
        "updated_at": "Friday Dec 10, 2021 at 05:33 GMT",
        "closed_at": "Friday Dec 10, 2021 at 05:33 GMT",
        "merged_at": "Friday Dec 10, 2021 at 05:33 GMT"
    },
    {
        "key": "WT-8530",
        "number": 7299,
        "state": "closed",
        "title": "WT-8530 MongoDB V4 toolchain can't build ex_col_store example program",
        "body": "Lint: Fix V4 toolchain complaints.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 09, 2021 at 22:22 GMT",
        "updated_at": "Friday Dec 10, 2021 at 15:49 GMT",
        "closed_at": "Friday Dec 10, 2021 at 15:49 GMT",
        "merged_at": "Friday Dec 10, 2021 at 15:49 GMT"
    },
    {
        "key": "WT-8522",
        "number": 7297,
        "state": "closed",
        "title": "WT-8522 Don't report error in Evergreen when there are no Hang Analyzer artifacts to upload",
        "body": "Don't report an error in the `save wt hang analyzer core/debugger files` task when there are no Hang Analyzer artifacts to upload.\r\n\r\nEvergreen now prints the trace\r\n    `file '/data/mci/a4f3beb3412bf6dd9816880952165975/wt-hang-analyzer.tgz' not found but skip missing true`\r\ninstead of the (red font) error \r\n    `Command failed: missing file '/data/mci/a4f3beb3412bf6dd9816880952165975/wt-hang-analyzer.tgz': problem opening file /data/mci/a4f3beb3412bf6dd9816880952165975/wt-hang-analyzer.tgz: open /data/mci/a4f3beb3412bf6dd9816880952165975/wt-hang-analyzer.tgz: no such file or directory`\r\nin the `s3.put` step.",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Thursday Dec 09, 2021 at 06:26 GMT",
        "updated_at": "Friday Dec 10, 2021 at 04:32 GMT",
        "closed_at": "Friday Dec 10, 2021 at 04:32 GMT",
        "merged_at": "Friday Dec 10, 2021 at 04:32 GMT"
    },
    {
        "key": "WT-8519",
        "number": 7295,
        "state": "closed",
        "title": "WT-8519 Use csuite functions in evergreen.yml",
        "body": "The `ftruncate-test` was updated with the following changes:\r\n- Use the `csuite test` function for `test_truncated_log`\r\n- Enable and use the `csuite smoke test` for `random_abort`",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Thursday Dec 09, 2021 at 05:43 GMT",
        "updated_at": "Thursday Dec 09, 2021 at 23:50 GMT",
        "closed_at": "Thursday Dec 09, 2021 at 23:50 GMT",
        "merged_at": "Thursday Dec 09, 2021 at 23:50 GMT"
    },
    {
        "key": "WT-8520",
        "number": 7291,
        "state": "closed",
        "title": "WT-8520 Reorder csuite tests in the long-test task",
        "body": "In Evergreen, variables live within the scope of a task. If a function\r\ndefines a variable once, it will persist and be visible to the\r\nsubsequent function calls within that task. If a test should not use\r\nextra variables, it should be executed before the extra variables are\r\ndefined.",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Wednesday Dec 08, 2021 at 23:25 GMT",
        "updated_at": "Thursday Dec 09, 2021 at 12:28 GMT",
        "closed_at": "Thursday Dec 09, 2021 at 12:28 GMT",
        "merged_at": "Thursday Dec 09, 2021 at 12:28 GMT"
    },
    {
        "key": "WT-8520",
        "number": 7290,
        "state": "closed",
        "title": "WT-8520 Reorder tests in the long-test evergreen task",
        "body": "In Evergreen, variables live within the scope of a task. If a function\r\ndefines a variable once, it will persist and be visible to the\r\nsubsequent function calls within that task. If a test should not use\r\nextra variables, it should be executed before the extra variables are\r\ndefined.",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Wednesday Dec 08, 2021 at 23:02 GMT",
        "updated_at": "Wednesday Dec 08, 2021 at 23:14 GMT",
        "closed_at": "Wednesday Dec 08, 2021 at 23:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8515",
        "number": 7285,
        "state": "closed",
        "title": "WT-8515 Remove unit-test-with-compile function as it is redundant.",
        "body": "the `unit-test-with-compile` task is only called in the` macos-1014` build variant. ",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Wednesday Dec 08, 2021 at 03:12 GMT",
        "updated_at": "Wednesday Dec 08, 2021 at 05:22 GMT",
        "closed_at": "Wednesday Dec 08, 2021 at 05:22 GMT",
        "merged_at": "Wednesday Dec 08, 2021 at 05:22 GMT"
    },
    {
        "key": "WT-8514",
        "number": 7281,
        "state": "closed",
        "title": "WT-8514 Apply an explicit page size limit to FLCS pages",
        "body": "Because the configured page size is used to size the bitmap data and the time windows come along for the ride, and the time windows (if present) are much larger than the data itself, the default page size limit of 512M allows generating pages far larger than 4G.\r\n\r\nThe hard limit on the page size is around 8M; an 8M bitmap in a 1t table has 64 million entries, each of which can in theory have a time window as large as 63 bytes attached, for a total space of just under 4G.\r\n\r\nHowever, because FLCS pages that size perform poorly even when they aren't bloated out with timestamps, set the limit much lower, to a somewhat arbitrarily selected 128K, which is still considerably larger than you'd actually want to use in practice.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 08, 2021 at 00:03 GMT",
        "updated_at": "Thursday Dec 09, 2021 at 16:49 GMT",
        "closed_at": "Thursday Dec 09, 2021 at 16:49 GMT",
        "merged_at": "Thursday Dec 09, 2021 at 16:49 GMT"
    },
    {
        "key": "WT-8501",
        "number": 7278,
        "state": "closed",
        "title": "WT-8501 Create functions to refactor endianness tasks in evergreen.yml",
        "body": "- New function `fetch artifacts from endian` to fetch little and big endian artifacts\r\n- New function `verify wt datafiles` that executes the `verify_wt_datafiles.sh` script",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Tuesday Dec 07, 2021 at 11:04 GMT",
        "updated_at": "Thursday Dec 09, 2021 at 05:45 GMT",
        "closed_at": "Thursday Dec 09, 2021 at 05:45 GMT",
        "merged_at": "Thursday Dec 09, 2021 at 05:45 GMT"
    },
    {
        "key": "WT-8502",
        "number": 7273,
        "state": "closed",
        "title": "WT-8502 Remove duplicate key in Evergreen file",
        "body": "The issue was not detected by the `validate` command from Evergreen. The Evergreen team was informed.",
        "base_ref": "wt-8498-evergreen-improvements",
        "created_at": "Tuesday Dec 07, 2021 at 04:57 GMT",
        "updated_at": "Tuesday Dec 07, 2021 at 06:23 GMT",
        "closed_at": "Tuesday Dec 07, 2021 at 05:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8395",
        "number": 7271,
        "state": "closed",
        "title": "WT-8395 Allow clean shutdown upgrade only from version 10.0.0 (#7239) (v4.4 backport)",
        "body": "WiredTiger version 10.0.0 can possibly write inconsistent data to disk on a checkpoint. To fix the\r\ninconsistent data, WiredTiger started saving a checkpoint snapshot to fix this problem to fix it upon restart.\r\nIn version 10.0.0, a stale version of the checkpoint snapshot is saved and it is corrected in version 10.0.1.\r\nUsing the stale version of the checkpoint snapshot can lead to data corruption issues. To avoid data corruption\r\nissues,  allow unclean shutdown upgrade from only 10.0.1 onwards and error out upgrading the version\r\non an unclean shutdown from the 10.0.0 version.\r\n\r\n(cherry picked from commit 868741b596668cf0000f1b659b2eeb331a1def53)",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday Dec 06, 2021 at 22:16 GMT",
        "updated_at": "Tuesday Dec 07, 2021 at 03:30 GMT",
        "closed_at": "Tuesday Dec 07, 2021 at 03:30 GMT",
        "merged_at": "Tuesday Dec 07, 2021 at 03:30 GMT"
    },
    {
        "key": "WT-8395",
        "number": 7270,
        "state": "closed",
        "title": "WT-8395 Allow clean shutdown upgrade only from version 10.0.0 (#7239) (v5.0 backport)",
        "body": "WiredTiger version 10.0.0 can possibly write inconsistent data to disk on a checkpoint. To fix the\r\ninconsistent data, WiredTiger started saving a checkpoint snapshot to fix this problem to fix it upon restart.\r\nIn version 10.0.0, a stale version of the checkpoint snapshot is saved and it is corrected in version 10.0.1.\r\nUsing the stale version of the checkpoint snapshot can lead to data corruption issues. To avoid data corruption\r\nissues,  allow unclean shutdown upgrade from only 10.0.1 onwards and error out upgrading the version\r\non an unclean shutdown from the 10.0.0 version.\r\n\r\n(cherry picked from commit 868741b596668cf0000f1b659b2eeb331a1def53)",
        "base_ref": "mongodb-5.0",
        "created_at": "Monday Dec 06, 2021 at 22:13 GMT",
        "updated_at": "Tuesday Dec 07, 2021 at 03:16 GMT",
        "closed_at": "Tuesday Dec 07, 2021 at 03:16 GMT",
        "merged_at": "Tuesday Dec 07, 2021 at 03:16 GMT"
    },
    {
        "key": "WT-8487",
        "number": 7264,
        "state": "closed",
        "title": "WT-8487 FLCS reconciliation zeroes the entire disk buffer in advance",
        "body": "Don't zero the whole FLCS disk buffer up front.\r\n- Explicitly zero the leftover bits in the last byte of the bitmap data, if any.\r\n- Explicitly zero the empty/wasted space on odd-sized pages.\r\n- Check both these points in __verify_dsk_col_fix.\r\n\r\nThis requires adjusting the auxiliary header read code slightly to expose the empty space, which previously had been abstracted away.\r\n\r\nWhile here, remove accidental doubled check in __verify_dsk_col_fix.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 02, 2021 at 22:33 GMT",
        "updated_at": "Tuesday Dec 07, 2021 at 04:46 GMT",
        "closed_at": "Monday Dec 06, 2021 at 19:37 GMT",
        "merged_at": "Monday Dec 06, 2021 at 19:37 GMT"
    },
    {
        "key": "WT-8149",
        "number": 7263,
        "state": "closed",
        "title": "WT-8149 Updating metadata salvage csuite test to handle salvaging table metadata without salvaging file metadata",
        "body": "\u2026 file entry",
        "base_ref": "develop",
        "created_at": "Thursday Dec 02, 2021 at 21:46 GMT",
        "updated_at": "Thursday Dec 09, 2021 at 22:53 GMT",
        "closed_at": "Thursday Dec 09, 2021 at 22:53 GMT",
        "merged_at": "Thursday Dec 09, 2021 at 22:53 GMT"
    },
    {
        "key": "WT-8360",
        "number": 7262,
        "state": "closed",
        "title": "WT-8360 Remove WT_TEST output file when test finishes in recovery-test script",
        "body": "Currently our evergreen task, uses the parallel script to run the recovery-test.sh script through multiple iterations of parrallel jobs. We need to clear the WT_TEST.out file after we finish executing the test, because another iteration of the script will grep for WT_TEST.out on a completed test run. This is dangerous behaviour.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 01, 2021 at 23:27 GMT",
        "updated_at": "Friday Dec 03, 2021 at 01:52 GMT",
        "closed_at": "Friday Dec 03, 2021 at 01:52 GMT",
        "merged_at": "Friday Dec 03, 2021 at 01:52 GMT"
    },
    {
        "key": "WT-8485",
        "number": 7259,
        "state": "closed",
        "title": "WT-8485 Revert JSON messages for wt_progress",
        "body": "Upon further evaluation, we've unfortunately misinterpreted the\r\npurpose of the progress interface, where the message passed via the\r\ninterface should just be an operation string. Hence there is no\r\nrequirement for this string to be a complex message string.\r\nThis reverts changes introduced in WT-8396. However manually\r\nreverts changes only relating to '__wt_progress' (as there are some\r\nother general improvements worth keeping in the original commit).",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 01, 2021 at 21:44 GMT",
        "updated_at": "Thursday Dec 02, 2021 at 06:19 GMT",
        "closed_at": "Thursday Dec 02, 2021 at 06:19 GMT",
        "merged_at": "Thursday Dec 02, 2021 at 06:19 GMT"
    },
    {
        "key": "WT-8483",
        "number": 7258,
        "state": "closed",
        "title": "WT-8483 Use diagnostics on CMake wt_objs target",
        "body": "If strict is enabled, the intermediate wt_objs target in CMake\r\nneeds to compile with the diagnostic flag. This change corrects a\r\nbug where our CMake build didn't apply the diagnostic flags to\r\nthe intermediate object library.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 01, 2021 at 21:03 GMT",
        "updated_at": "Thursday Dec 02, 2021 at 06:15 GMT",
        "closed_at": "Thursday Dec 02, 2021 at 06:15 GMT",
        "merged_at": "Thursday Dec 02, 2021 at 06:15 GMT"
    },
    {
        "key": "WT-8476",
        "number": 7252,
        "state": "closed",
        "title": "WT-8476 some refactorings, now that FLCS is less of a special case",
        "body": "The reconciliation changes are by far the largest, so I made that a separate commit.\r\n\r\nNote that because this moves the history cursor involved to the WT_RECONCILE structure, it (potentially) reduces the number of history cursors created, because once one is created it stays around until __rec_destroy. Conversely though this means that __rec_destroy and __rec_destroy_session can now fail (though the failure case is likely theoretical)... which unfortunately reverts some of the cleanup in WT-8074 that was based on noticing that __rec_destroy_session then didn't fail. This feels untidy, but I guess it just reflects poor timing of this change vs. that one.\r\n\r\nAlso, if possible someone please double-check that I didn't drop or mess up any of the WT-8074 changes to the code I moved around, in the course of merging with it; e.g. the failpoint failure rate changed and I think I got that, but it's very easy to slip up when doing such merges.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 30, 2021 at 00:45 GMT",
        "updated_at": "Thursday Dec 02, 2021 at 22:53 GMT",
        "closed_at": "Thursday Dec 02, 2021 at 22:39 GMT",
        "merged_at": "Thursday Dec 02, 2021 at 22:39 GMT"
    },
    {
        "key": "WT-8474",
        "number": 7251,
        "state": "closed",
        "title": "WT-8474 review clang analyzer warnings",
        "body": "This branch fixes all but a few of the clang-scan warnings (there's another branch for WT-8466 that moves some files around and fixes two that remain, the ones in `bt_read.c`  and `bt_io.c`).\r\n\r\nI did a commit per file, hopefully that makes it more obvious what got changed.",
        "base_ref": "develop",
        "created_at": "Monday Nov 29, 2021 at 23:35 GMT",
        "updated_at": "Wednesday Dec 01, 2021 at 21:19 GMT",
        "closed_at": "Wednesday Dec 01, 2021 at 19:33 GMT",
        "merged_at": "Wednesday Dec 01, 2021 at 19:33 GMT"
    },
    {
        "key": "WT-8446",
        "number": 7250,
        "state": "closed",
        "title": "WT-8446 Direct verbose error messages to handle_error",
        "body": "We previously directed all 'wt_verbose' messages through the\r\n'WT_EVENT_HANDLE::handle_message' interface, regardless of\r\nverbosity level. The 'WT_EVENT_HANDLE::handle_message' interface\r\nis the appropriate interface for the bulk of the verbosity levels,\r\nexcept for 'WT_VERBOSE_ERROR'. This change ensures messages\r\nassociated with the 'WT_VERBOSE_ERROR' will be directed through\r\nthe 'WT_EVENT_HANDLE::handle_error' interface.",
        "base_ref": "develop",
        "created_at": "Monday Nov 29, 2021 at 22:58 GMT",
        "updated_at": "Wednesday Dec 01, 2021 at 04:46 GMT",
        "closed_at": "Wednesday Dec 01, 2021 at 04:46 GMT",
        "merged_at": "Wednesday Dec 01, 2021 at 04:46 GMT"
    },
    {
        "key": "WT-8475",
        "number": 7249,
        "state": "closed",
        "title": "WT-8475 isblank() build failure on NetBSD",
        "body": "Fix calls to isblank(); they're supposed to be passed 0..255 (or EOF) but not -2..-128. NetBSD's libc has been arranged to generate a warning (and thus fail statically) if char is passed; it should be cast to unsigned char.",
        "base_ref": "develop",
        "created_at": "Monday Nov 29, 2021 at 22:16 GMT",
        "updated_at": "Tuesday Nov 30, 2021 at 00:46 GMT",
        "closed_at": "Monday Nov 29, 2021 at 23:55 GMT",
        "merged_at": "Monday Nov 29, 2021 at 23:55 GMT"
    },
    {
        "key": "WT-8466",
        "number": 7248,
        "state": "closed",
        "title": "WT-8466 Move btree I/O functionality into the block-cache implementation",
        "body": "The last set of block cache changes (WT-8273), pulled the block cache pieces out of the block manager and put them into a new layer that sits between the btree layer and the block-manager layer. This set of changes pulls the read/write functions out of the btree layer and moves them into the block-cache layer, and completes almost all of the work I planned around the block cache code.\r\n\r\nAlmost all of the real work is in 073af23, the other commits are either minor changes or code shuffling.",
        "base_ref": "develop",
        "created_at": "Monday Nov 29, 2021 at 01:33 GMT",
        "updated_at": "Wednesday Dec 08, 2021 at 01:12 GMT",
        "closed_at": "Wednesday Dec 08, 2021 at 01:12 GMT",
        "merged_at": "Wednesday Dec 08, 2021 at 01:12 GMT"
    },
    {
        "key": "WT-8463",
        "number": 7247,
        "state": "closed",
        "title": "WT-8463 Fix 'format-pedantic' error in ex_verbose",
        "body": "Explicitly cast the session pointer in ex_verbose to meet the\r\nprint format argument. This fixing a warning triggered by the\r\n'format-pedantic' compiler diagnostic.",
        "base_ref": "develop",
        "created_at": "Friday Nov 26, 2021 at 04:06 GMT",
        "updated_at": "Friday Nov 26, 2021 at 05:20 GMT",
        "closed_at": "Friday Nov 26, 2021 at 05:20 GMT",
        "merged_at": "Friday Nov 26, 2021 at 05:20 GMT"
    },
    {
        "key": "WT-8438",
        "number": 7246,
        "state": "closed",
        "title": "WT-8438 - Latencies stat for the perf tests are printed repeatedly",
        "body": "When reporting latency statistics for a perf test only print the entire list of latencies once, instead of attaching the list to each of the top 5 latency results reported.\r\n\r\nAdditionally merge the `PerfStatMin` and `PerfStatMax` classes into a single `PerfStatMinMax` class to reduce similar duplication.",
        "base_ref": "develop",
        "created_at": "Friday Nov 26, 2021 at 01:40 GMT",
        "updated_at": "Monday Nov 29, 2021 at 21:40 GMT",
        "closed_at": "Monday Nov 29, 2021 at 21:40 GMT",
        "merged_at": "Monday Nov 29, 2021 at 21:40 GMT"
    },
    {
        "key": "WT-8460",
        "number": 7245,
        "state": "closed",
        "title": "WT-8460 Remove leaf_item_max and internal_item_max configuration strings.",
        "body": "The leaf_item_max and internal_item_max configuration strings were deprecated in 2014, remove them from the tree. Replace leaf_item_max with \"leaf_key_max=#,leaf_value_max=#\", remove internal_item_max entirely, it's currently ignored by the Btree code.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 25, 2021 at 19:53 GMT",
        "updated_at": "Monday Nov 29, 2021 at 23:46 GMT",
        "closed_at": "Monday Nov 29, 2021 at 23:46 GMT",
        "merged_at": "Monday Nov 29, 2021 at 23:46 GMT"
    },
    {
        "key": "WT-8459",
        "number": 7244,
        "state": "closed",
        "title": "WT-8459 rename test_checksys() to test_assert_errno()",
        "body": "Rename test_checksys() to test_assert_errno(), flipping the sense of the test.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 25, 2021 at 19:04 GMT",
        "updated_at": "Friday Nov 26, 2021 at 14:35 GMT",
        "closed_at": "Friday Nov 26, 2021 at 14:35 GMT",
        "merged_at": "Friday Nov 26, 2021 at 14:35 GMT"
    },
    {
        "key": "WT-8451",
        "number": 7243,
        "state": "closed",
        "title": "WT-8451 Move the block manager's mmap support into the block cache code",
        "body": "* Move the block manager's mmap support into the block cache code.\r\n* Remove the `WT_BLOCK.preload` block manager interface entirely.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 25, 2021 at 15:38 GMT",
        "updated_at": "Friday Nov 26, 2021 at 14:37 GMT",
        "closed_at": "Friday Nov 26, 2021 at 14:37 GMT",
        "merged_at": "Friday Nov 26, 2021 at 14:37 GMT"
    },
    {
        "key": "WT-8261",
        "number": 7242,
        "state": "closed",
        "title": "WT-8261 Update WiredTiger Doxygen documentation to reflect new JSON configuration option and schema",
        "body": "- Creation of a new page: `message-handling.dox`\r\n- Moved the existing content related to `WT_EVENT_HANDLER` from `error-handling.dox` to the new page\r\n- Create a new section in `message-handling.dox` dedicated to flat string and JSON formats.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 25, 2021 at 05:07 GMT",
        "updated_at": "Sunday Nov 28, 2021 at 23:01 GMT",
        "closed_at": "Sunday Nov 28, 2021 at 23:01 GMT",
        "merged_at": "Sunday Nov 28, 2021 at 23:01 GMT"
    },
    {
        "key": "WT-8257",
        "number": 7241,
        "state": "closed",
        "title": "WT-8257 Verbose Messaging Doc Page",
        "body": "This PR updates the doxygen documentation with a new page on WiredTiger's verbose messaging system. This reflecting the recent changes to the configuration interface, including a discussion about the verbosity levels and categories. \r\nThis PR specifically adds:\r\n* A new doc page under `Writing WiredTiger applications` describing the verbose messaging system\r\n* A new `C` example: To demonstrate basic usage of the verbose messaging API and provide code snippets that can be used in the accompanying doxygen page.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 25, 2021 at 03:04 GMT",
        "updated_at": "Friday Nov 26, 2021 at 00:18 GMT",
        "closed_at": "Friday Nov 26, 2021 at 00:18 GMT",
        "merged_at": "Friday Nov 26, 2021 at 00:18 GMT"
    },
    {
        "key": "WT-8320",
        "number": 7240,
        "state": "closed",
        "title": "WT-8320 Remove existing prepared update before restoring update chain",
        "body": "@kommiharibabu @quchenhao @bvpvamsikrishna, this is the alternate approach I have implemented. We explicitly remove existing update chain with prepared update in update-restore scenario using a new function `__wt_page_inmem_remove_prepared()` ",
        "base_ref": "develop",
        "created_at": "Thursday Nov 25, 2021 at 03:00 GMT",
        "updated_at": "Wednesday Dec 01, 2021 at 22:57 GMT",
        "closed_at": "Wednesday Dec 01, 2021 at 22:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8395",
        "number": 7239,
        "state": "closed",
        "title": "WT-8395 Consider checkpoint snapshot as valid only from version 10.0.1 onward",
        "body": "WiredTiger stated saving a proper snapshot from version 10.0.1 onward/MongoDB 4.4.5\r\nversion onward. Read the on-disk checkpoint snapshot whenever the WiredTiger version\r\nis 10.0.1 or greater.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 25, 2021 at 01:30 GMT",
        "updated_at": "Friday Dec 03, 2021 at 07:10 GMT",
        "closed_at": "Friday Dec 03, 2021 at 07:10 GMT",
        "merged_at": "Friday Dec 03, 2021 at 07:10 GMT"
    },
    {
        "key": "WT-8448",
        "number": 7238,
        "state": "closed",
        "title": "WT-8448 - s_mentions finds content that should not be matching",
        "body": "Generated build scripts in `build_posix` and `cmake_build` will contain wiredtiger's filepath, and when the filepath contains the ticket that `s_mentions` is checking for (e.g. `~/src/wt-8448/wiredtiger`) then `s_mentions` will return false positive matches.\r\n\r\nUpdate `s_mentions` to handle this case.\r\n\r\nAdditionally ensure that any reported matches by `s_mentions` are treated as warnings only and `s_all` does not fail when they are detected. ",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 24, 2021 at 23:09 GMT",
        "updated_at": "Sunday Nov 28, 2021 at 22:47 GMT",
        "closed_at": "Sunday Nov 28, 2021 at 22:47 GMT",
        "merged_at": "Sunday Nov 28, 2021 at 22:47 GMT"
    },
    {
        "key": "WT-8016",
        "number": 7237,
        "state": "closed",
        "title": "WT-8016 Re-enable FLCS tests in coverage report.",
        "body": "Re-enable FLCS tests in coverage report.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 24, 2021 at 17:25 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 23:32 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 23:32 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 23:32 GMT"
    },
    {
        "key": "WT-8015",
        "number": 7236,
        "state": "closed",
        "title": "WT-8015 Re-enable FLCS evergreen endianness tests.",
        "body": "Re-enable FLCS evergreen endianness tests.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 24, 2021 at 17:21 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 23:27 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 23:27 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 23:27 GMT"
    },
    {
        "key": "WT-8013",
        "number": 7235,
        "state": "closed",
        "title": "WT-8013 Re-enable FLCS smoke testing in format.",
        "body": "Re-enable FLCS smoke testing in format.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 24, 2021 at 17:16 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 23:26 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 23:26 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 23:26 GMT"
    },
    {
        "key": "WT-8384",
        "number": 7234,
        "state": "closed",
        "title": "WT-8384 Coverity analysis defect 121118: Explicit null dereferenced",
        "body": "Setting a side-effect variable to NULL makes Coverity think it can be NULL when the function returns, remove the set to NULL.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 17:27 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 16:12 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 16:11 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 16:11 GMT"
    },
    {
        "key": "WT-8386",
        "number": 7233,
        "state": "closed",
        "title": "WT-8386 Coverity analysis defect 121104: Dereference after null check",
        "body": "Fix a bug in format (which is  one of the principle reasons RTS can't acquire exclusive handlelocks), found by Coverity, where a test was swapped and we weren't closing WT_SESSION handles.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 17:15 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 16:13 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 16:13 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 16:13 GMT"
    },
    {
        "key": "WT-8387",
        "number": 7232,
        "state": "closed",
        "title": "WT-8387 Assert table cannot be NULL when tables_apply is used in test/format",
        "body": "Coverity doesn't understand the relationship between ntables and the tables array, clarify it.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 17:06 GMT",
        "updated_at": "Tuesday Nov 23, 2021 at 22:58 GMT",
        "closed_at": "Tuesday Nov 23, 2021 at 22:58 GMT",
        "merged_at": "Tuesday Nov 23, 2021 at 22:58 GMT"
    },
    {
        "key": "WT-8388",
        "number": 7231,
        "state": "closed",
        "title": "WT-8388 Increase variable type size to avoid Coverity complaint that the value could overflow in test/format",
        "body": "Increase variable type size to avoid Coverity complaint that the value could overflow.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 16:50 GMT",
        "updated_at": "Tuesday Nov 23, 2021 at 22:57 GMT",
        "closed_at": "Tuesday Nov 23, 2021 at 22:57 GMT",
        "merged_at": "Tuesday Nov 23, 2021 at 22:57 GMT"
    },
    {
        "key": "WT-8389",
        "number": 7230,
        "state": "closed",
        "title": "WT-8389 Coverity analysis defect 121099: Untrusted loop bound",
        "body": "Simplify an input loop to avoid any tainted-scalar reports from Coverity.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 16:45 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 16:14 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 16:14 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 16:14 GMT"
    },
    {
        "key": "WT-8390",
        "number": 7229,
        "state": "closed",
        "title": "WT-8390 Assert table cannot be NULL within config_table in test/format",
        "body": "Coverity doesn't understand the relationship between ntables and the tables array, clarify it.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 15:53 GMT",
        "updated_at": "Tuesday Nov 23, 2021 at 22:59 GMT",
        "closed_at": "Tuesday Nov 23, 2021 at 22:59 GMT",
        "merged_at": "Tuesday Nov 23, 2021 at 22:59 GMT"
    },
    {
        "key": "WT-8395",
        "number": 7227,
        "state": "closed",
        "title": "WT-8395 Save connection write generation number along with checkpoint snapshot",
        "body": "To identify the saved checkpoint snapshot in the metadata file during recovery,\r\nWiredTiger calculates the connection level write generation number from all the\r\nbtree checkpoints and compares it against the saved write generation number in\r\nthe checkpoint snapshot before proceeding with RTS based on that checkpoint\r\nsnapshot.\r\n\r\nThe versions where the connection write generation number is not saved, during\r\nthe restart, the comparison fails and RTS doesn't perform using the checkpoint\r\nsnapshot.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 06:42 GMT",
        "updated_at": "Tuesday Nov 30, 2021 at 07:06 GMT",
        "closed_at": "Tuesday Nov 30, 2021 at 07:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8385",
        "number": 7226,
        "state": "closed",
        "title": "WT-8385 Fix unused value in test format backup",
        "body": "This ticket involves fixing a previously unused return value. This error was happening on line 66, and was never used afterwards. Coverity found that the variable was being unused afterwards.\r\n\r\nI have employed a solution where we don't need to reset ret, and instead change the if condition to check if unlink failed with errno being set other than ENOENT.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 23, 2021 at 04:30 GMT",
        "updated_at": "Tuesday Nov 23, 2021 at 15:31 GMT",
        "closed_at": "Tuesday Nov 23, 2021 at 15:31 GMT",
        "merged_at": "Tuesday Nov 23, 2021 at 15:31 GMT"
    },
    {
        "key": "WT-8397",
        "number": 7224,
        "state": "closed",
        "title": "WT-8397 Integrate individual uses '__wt_msg' into the verbose messaging subsystem",
        "body": "With the introduction of WT-8254 & WT-8258, the WiredTiger verbose messaging system can now use verbosity levels and produce JSON encoded message strings.\r\n\r\nCurrently `__wt_msg` does not follow the same code paths as the other internal message interfaces (i.e. doesn't call `eventv`), rather short circuits and calls the `WT_EVENT_HANDLER:handle_message`interface function directly. The intention of this ticket is to more closely integrate individual uses of `wt_msg` with the verbose messaging system (such that it unifies the message interfaces), allowing it to benefit from the new additions introduced in verbose messaging project (e.g. JSON-encoded strings). \r\nTo achieve such, this change introduces a new verbosity level i.e. `WT_VERBOSE_NOTICE` (in-between `WT_VERBOSE_INFO` & `WT_VERBOSE_WARNING`). `WT_VERBOSE_NOTICE` is an always-on verbosity level used for printing messages, this matching the always-on visibility requirements of a `wt_msg` style message, with the added benefit of integrating with the verbose messaging system.\r\n\r\n_Note: this PR doesn't convert uses of `__wt_msg` used under the `WT_CONNECTION::debug_info` interface. A number of the verbose dump implementations make use `wt_msg` to construct custom formatted messages. Converting these calls to the `__eventv` format (flat-string or JSON) would break that special formatting._ ",
        "base_ref": "develop",
        "created_at": "Monday Nov 22, 2021 at 23:49 GMT",
        "updated_at": "Thursday Nov 25, 2021 at 04:46 GMT",
        "closed_at": "Thursday Nov 25, 2021 at 04:46 GMT",
        "merged_at": "Thursday Nov 25, 2021 at 04:46 GMT"
    },
    {
        "key": "WT-8430",
        "number": 7221,
        "state": "closed",
        "title": "WT-8430 Add sleep back in to allow thread to run for testing on slower",
        "body": "systems.",
        "base_ref": "develop",
        "created_at": "Monday Nov 22, 2021 at 17:21 GMT",
        "updated_at": "Monday Nov 22, 2021 at 21:03 GMT",
        "closed_at": "Monday Nov 22, 2021 at 21:03 GMT",
        "merged_at": "Monday Nov 22, 2021 at 21:03 GMT"
    },
    {
        "key": "WT-8396",
        "number": 7220,
        "state": "closed",
        "title": "WT-8396 Integrate '__wt_progress' to support JSON-encoded messages",
        "body": "With the introduction of WT-8258, the `WT_EVENT_HANDLER` interface can now produce JSON-encoded message strings.\r\n\r\nCurrently `wt_progress` does not follow the same code paths as the other event handler interfaces (i.e. doesn't call `__eventv`), and thus does not adhere to the new JSON-encoded message format when the configuration option is enabled. \r\n\r\nThe key changes are:\r\n\r\n- Creation of a new option to enable JSON output for progress messages: `progress` (also referenced as `WT_JSON_OUTPUT_PROGRESS` as a JSON type for verbose messages)\r\n- Creation of new verbose categories to represent progress messages\r\n- `__wt_progress` now takes a `WT_VERBOSE_CATEGORY` as an arg so we can specify the type of progress that is being done. For simplicity, any `__wt_progress` has the verbosity level set to `WT_VERBOSE_INFO`.\r\n- Generation of a more detailed message within `__wt_progress` using `__eventv_gen_msg` that can generate JSON encoded strings",
        "base_ref": "develop",
        "created_at": "Monday Nov 22, 2021 at 08:13 GMT",
        "updated_at": "Monday Nov 29, 2021 at 01:51 GMT",
        "closed_at": "Monday Nov 29, 2021 at 01:51 GMT",
        "merged_at": "Monday Nov 29, 2021 at 01:51 GMT"
    },
    {
        "key": "WT-8417",
        "number": 7219,
        "state": "closed",
        "title": "WT-8417 Restructure assert testing in search near 01 cpp for concurrency",
        "body": "Historically search near 01 has suffered through quite alot of concurrency issues when testing the number of expected traversals of a prefix search near. The problem is that testing expects only at max `thread_count` number of search nears to be happening at once. This is a large mistake, because one thread can actually not be scheduled for a long while. \r\n\r\nI have implemented an idea, where we have one read thread that manages the spawning and joining of all threads then checking the statistics. This allows us to be confident that there are no search nears being performed while we are testing the expected number of traversals.",
        "base_ref": "develop",
        "created_at": "Monday Nov 22, 2021 at 06:18 GMT",
        "updated_at": "Monday Nov 29, 2021 at 01:43 GMT",
        "closed_at": "Monday Nov 29, 2021 at 01:43 GMT",
        "merged_at": "Monday Nov 29, 2021 at 01:43 GMT"
    },
    {
        "key": "WT-8292",
        "number": 7218,
        "state": "closed",
        "title": "WT-8292 - switched the WiredTiger performance tests from running on ubuntu2004-large to ubuntu2004-medium instances.",
        "body": "WT-8292 - switched the WiredTiger performance tests from running on ubuntu2004-large to ubuntu2004-medium instances.",
        "base_ref": "develop",
        "created_at": "Monday Nov 22, 2021 at 03:46 GMT",
        "updated_at": "Monday Nov 22, 2021 at 21:03 GMT",
        "closed_at": "Monday Nov 22, 2021 at 21:03 GMT",
        "merged_at": "Monday Nov 22, 2021 at 21:03 GMT"
    },
    {
        "key": "WT-8273",
        "number": 7217,
        "state": "closed",
        "title": "WT-8273 Restructure the block cache",
        "body": "This is a set of changes to move the block-cache work out of the block manager into its own layer.\r\n\r\nOnce this set of changes is approved, I plan to create a new directory `src/block_cache` that will have the two files `block_mgr.c` and `block_cache.c`. Additionally, I'll move the block cache statistics into their own name space. I've not done that work yet to make review simpler.\r\n\r\nI've tagged Sasha as the author of this work, the tiered storage team as they are considering using the block cache in their tiered work, and Alex because this is a pretty clear architectural change.\r\n\r\nThere are  three general changes:\r\n\r\n1. Move the block cache code out of the block manager: instead of using the fid, and unpacked checksum, size and offset fields to uniquely identify a cached block, use the fid and addr/addr_size pair (where a addr/addr_size pair contain packed checksum, size and offset). The specific calls to the block cache code move out of the block manager's read/write code and into the block manager methods.\r\n\r\n2. Restructure error handling to match WiredTiger practice:\r\n    Remove explicit returns of `-1` and the `WT_BLKCACHE_FULL` and `WT_BLKCACHE_BYPASS` return values as they step on the application name space in bad ways and can potentially be returned to applications, violating error handling rules.\r\n\r\n    The only path I can find for the `WT_BLKCACHE_FULL` error is from the `__wt_blkcache_put()` call, and all callers of that function ignore the `WT_BLKCACHE_FULL` return.\r\n\r\n    The `WT_BLKCACHE_BYPASS` error can be returned from `__wt_blkcache_get()` and it's checked there, so I replaced the return value with a side-effect return to the caller.  The `WT_BLKCACHE_BYPASS` error can also be returned from `__wt_blkcache_put()` and I'm concerned about this as no callers of that function check for that error, it will simply fail at that point. The fact that we've never seen this failure is worrisome: there are three different code paths in `__wt_blkcache_put()` that return `WT_BLKCACHE_BYPASS`, and the fact that we're not seeing failures means those paths aren't getting hit, and they're fairly expensive paths in terms of performance. We should figure out what's happening here.\r\n\r\n3. Move some processing outside of the block cache's spinlocks.\r\n\r\nDetails follow.\r\n\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nStatistics changes:\r\n\r\nRemoved the phrase \"including existence checks\" for the block_cache_hits and block_cache_misses statistics, they do not include any existence checks as far as I can tell.\r\n\r\nRename the block_cache_data_refs to be block_cache_lookups to better match the description string.\r\n\r\nSort items.\r\n\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nChanges in the block_cache.c file:\r\n\r\nCreate a new inlined function __blkcache_verbose() to handle a class of verbose messages for the block cache. This is because it requires additional processing to display an addr/addr-size pair in a verbose message, and I didn't want to duplicate that code and error handling.\r\n\r\nRework a few places that passed around explicit data/data_size pairs with WT_ITEM buffers.\r\n\r\n__wt_blkcache_get_or_check():\r\nRename `__wt_blkcache_get_or_check()` to `__wt_blkcache_get()`, as far as I can tell, it's not used to check anything.\r\n\r\nAdd two side effect returns, `*foundp` and `*skip_cachep`, so returns are all either 0 or an error condition.\r\n\r\nMove the verbose \"block not found\" message out of the spinlock.\r\n\r\n__wt_blkcache_put():\r\nCheck for an existing block match when doing reads (I suspect the only place this can happen is when reading overflow records), only check in writes in HAVE_DIAGNOSTIC mode.\r\n\r\nAllocate both structures, and do the data copy, outside of the spinlock to reduce the amount of time the lock is held.",
        "base_ref": "develop",
        "created_at": "Sunday Nov 21, 2021 at 23:26 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 23:58 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 23:58 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 23:58 GMT"
    },
    {
        "key": "WT-8424",
        "number": 7216,
        "state": "closed",
        "title": "WT-8424 Use consistent toolchain in little-endian",
        "body": "When compiling WiredTiger in the Evergreen little-endian variant,\r\nthe build is configured with the v3 mongodbtoolchain. We\r\nsubsequently need to ensure the PATH is set to point to the mongodb\r\ntoolchain when running make. Otherwise build scripts invoked\r\nduring the compilation process i.e. workgen's 'setup.py', will\r\nbe called with a mis-matched toolchain.",
        "base_ref": "develop",
        "created_at": "Friday Nov 19, 2021 at 04:59 GMT",
        "updated_at": "Sunday Nov 21, 2021 at 21:55 GMT",
        "closed_at": "Sunday Nov 21, 2021 at 21:55 GMT",
        "merged_at": "Sunday Nov 21, 2021 at 21:55 GMT"
    },
    {
        "key": "WT-8250",
        "number": 7215,
        "state": "closed",
        "title": "WT-8250 size_check_res failure in test_wt7989_compact_checkpoint",
        "body": "Compaction is a best-effort algorithm. It moves blocks from the end to the beginning of the file but there is no guarantee that all empty space at the beginning will be filled. The logic in the algorithm checks if at least 20% of the file is available in the first 80% of the file, we'll try compaction on the last 20% of the file. Else if at least 10% of the total file is available in the first 90% of the file, we'll try compaction on the last 10% of the file. It may well happen that 9.9% of the space is available for reuse in the first 90% of the file. And 9.9% available in the last 10% of the file. In this case, the algorithm would give up. But total available space in the file would be 19.8%. So we need to check that there is a maximum of 20% space available for reuse after compaction.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 18, 2021 at 11:26 GMT",
        "updated_at": "Monday Nov 22, 2021 at 05:57 GMT",
        "closed_at": "Monday Nov 22, 2021 at 05:57 GMT",
        "merged_at": "Monday Nov 22, 2021 at 05:57 GMT"
    },
    {
        "key": "WT-8422",
        "number": 7214,
        "state": "closed",
        "title": "WT-8422 Clear the on-disk cell time window if it is obsolete",
        "body": "When rewriting an existing page image with newer content clear any of the\r\ntime windows exist from the older content on the page if they are obsolete.\r\n\r\nClearing the time window will decrease the size required to store the\r\nsame cell and also improves the performance.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 18, 2021 at 06:29 GMT",
        "updated_at": "Tuesday Nov 23, 2021 at 23:40 GMT",
        "closed_at": "Tuesday Nov 23, 2021 at 23:40 GMT",
        "merged_at": "Tuesday Nov 23, 2021 at 23:40 GMT"
    },
    {
        "key": "WT-8320",
        "number": 7212,
        "state": "closed",
        "title": "WT-8320 Do not append the on-disk update if it was an aborted prepared update",
        "body": "While restoring a new update chain to the key for an update-restore eviction path, do not append the on-disk update if it was an aborted prepared update. There shouldn't be an update newer than a prepared update on the update chain and in this case the the prepared update should be discarded as it is not required anymore.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 18, 2021 at 05:02 GMT",
        "updated_at": "Wednesday Dec 01, 2021 at 22:57 GMT",
        "closed_at": "Wednesday Dec 01, 2021 at 22:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8418",
        "number": 7210,
        "state": "closed",
        "title": "WT-8418 Patch CMake to better support CI/CD testing",
        "body": "This ticket is to support the work in WT-8020 (CMake Evergreen conversion), covering a set of CMake patches, fixes & improvements to support better integration with Evergreen. The changes in this PR are miscellaneous and varied, mostly discovered whilst porting different Evergreen tests to run with a CMake build. To make it easier to review, I broke up each change into individual commits (each commit should represent a self contained change, reviewable on its own).\r\nSpecifically the changes in this PR:\r\n- Fixing config name when using pthread_adaptive in CMake\r\n-  Refactor CMake Build Mode configs to support MSan and TSan\r\n-  Add Python 'ex_access' as CMake CTest\r\n-  Add wt2719_reconfig csuite CMake test\r\n-  Drop '_encrypt' suffix for 'rotn' module\r\n-  Force the test_util+windows_shim libs to be static\r\n-  Export private libraries via the pkg-config file\r\n-  Provide the ability to specify toolchain versions\r\n-  Specify an ext subpath in the cppsuite\r\n- Specify an ext subpath in the test/format\r\n- Add an additional CTest label to cppsuite tests\r\n- Support passing CMake build path in python tools: 'syscall.py' and 'test_conf_dump.py'\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 17, 2021 at 23:28 GMT",
        "updated_at": "Monday Nov 22, 2021 at 04:41 GMT",
        "closed_at": "Monday Nov 22, 2021 at 04:41 GMT",
        "merged_at": "Monday Nov 22, 2021 at 04:41 GMT"
    },
    {
        "key": "WT-8420",
        "number": 7209,
        "state": "closed",
        "title": "WT-8420 FLCS support for test_checkpoint",
        "body": "I've added FLCS support to test_checkpoint.\r\n\r\nSee the first changeset's change message for the gory details.\r\n\r\nThe second changeset does a cosmetic reorganization of the options in the test lists; if people don't like it I'm fine with dropping it, but I think it improves the legibility a good deal.\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 17, 2021 at 18:44 GMT",
        "updated_at": "Wednesday Nov 24, 2021 at 03:41 GMT",
        "closed_at": "Wednesday Nov 24, 2021 at 01:47 GMT",
        "merged_at": "Wednesday Nov 24, 2021 at 01:47 GMT"
    },
    {
        "key": "WT-8419",
        "number": 7208,
        "state": "closed",
        "title": "WT-8419 Disable test_inmem01.test_insert_over_delete_replace for FLCS",
        "body": "Always skip the inmem01.insert_over_delete_replace test on FLCS.\r\n\r\nWhile I'm pretty sure the previous change was sound in principle, it seems that the threshold that works for me is not portable to the test environment, and since I don't myself have direct access tracking down a suitable threshold value is not currently worthwhile.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 17, 2021 at 18:40 GMT",
        "updated_at": "Wednesday Nov 17, 2021 at 21:46 GMT",
        "closed_at": "Wednesday Nov 17, 2021 at 21:46 GMT",
        "merged_at": "Wednesday Nov 17, 2021 at 21:46 GMT"
    },
    {
        "key": "WT-8343",
        "number": 7207,
        "state": "closed",
        "title": "WT-8343 Fix variable \"__ignored_ret\" set, never used in cppsuite",
        "body": "WiredTiger uses WT_UNUSED inside C, to stop compiler warnings or coverity warning worrying about unused variables. Alternatively we can set it to testutil_assert instead, since it should be guaranteed that we transaction commit succeeds if `can_commit` returns true.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 17, 2021 at 01:45 GMT",
        "updated_at": "Monday Nov 22, 2021 at 03:22 GMT",
        "closed_at": "Monday Nov 22, 2021 at 03:22 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8371",
        "number": 7205,
        "state": "closed",
        "title": "WT-8371 Simplify overflow key block frees (#7179) (v5.0 backport)",
        "body": "Now that we no longer store overflow cookies on internal pages, we can free backing overflow key blocks in all cases without further consideration.\r\n\r\n(cherry picked from commit af898a825c610f57c54e7475426b150f4372e3ab)",
        "base_ref": "mongodb-5.0",
        "created_at": "Tuesday Nov 16, 2021 at 23:50 GMT",
        "updated_at": "Wednesday Nov 17, 2021 at 09:01 GMT",
        "closed_at": "Wednesday Nov 17, 2021 at 09:01 GMT",
        "merged_at": "Wednesday Nov 17, 2021 at 09:01 GMT"
    },
    {
        "key": "WT-8369",
        "number": 7204,
        "state": "closed",
        "title": "WT-8369 - Filter perf stats on PerfStatCollection construction",
        "body": "Instead of reading all PerfStats and then filtering them out at the reporting stage, define the list of required PerfStats when we build PerfStatCollection and only read these values.\r\n\r\nAdditionally wtperf_run.py::main() has been split into subfunctions to make things cleaner\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 16, 2021 at 23:07 GMT",
        "updated_at": "Thursday Nov 18, 2021 at 22:31 GMT",
        "closed_at": "Thursday Nov 18, 2021 at 22:31 GMT",
        "merged_at": "Thursday Nov 18, 2021 at 22:31 GMT"
    },
    {
        "key": "WT-8208",
        "number": 7203,
        "state": "closed",
        "title": "Revert \"WT-8208 Add a new debug config in session to evict pages as released\"",
        "body": "Reverts wiredtiger/wiredtiger#7172",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 16, 2021 at 05:56 GMT",
        "updated_at": "Tuesday Nov 16, 2021 at 05:57 GMT",
        "closed_at": "Tuesday Nov 16, 2021 at 05:57 GMT",
        "merged_at": "Tuesday Nov 16, 2021 at 05:57 GMT"
    },
    {
        "key": "WT-8260",
        "number": 7202,
        "state": "closed",
        "title": "WT-8260 Python test to validate new EVENT_HANDLER JSON schema",
        "body": "Added a python suite test to assert valid JSON messages are produced when enabling them via the event handler interface.\r\nValid messages are those that can be successfully parsed as JSON (meeting the JSON standard) and subscribe to an expected schema (i.e. contain expected fields and types).",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 16, 2021 at 03:32 GMT",
        "updated_at": "Friday Nov 19, 2021 at 02:49 GMT",
        "closed_at": "Friday Nov 19, 2021 at 02:49 GMT",
        "merged_at": "Friday Nov 19, 2021 at 02:49 GMT"
    },
    {
        "key": "WT-8361",
        "number": 7201,
        "state": "closed",
        "title": "WT-8361 Increase assert limit in search near 01 cppsuite test",
        "body": "The fix involved in the PR, regards to increasing the assert limit for search near 01 cppsuite test. The reason for this change is because we previously didn't account if a thread would perform multiple search nears before another thread completing one. To account for this fact, I have doubled the expected entries to account for this anomaly. Now this change presumes that it is not possible to have all threads performing two search nears which on theory is impossible.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 16, 2021 at 02:29 GMT",
        "updated_at": "Thursday Nov 18, 2021 at 07:06 GMT",
        "closed_at": "Thursday Nov 18, 2021 at 07:06 GMT",
        "merged_at": "Thursday Nov 18, 2021 at 07:06 GMT"
    },
    {
        "key": "WT-8264",
        "number": 7200,
        "state": "closed",
        "title": "WT-8264 Add a CMake build support for workgen",
        "body": "Currently, we're missing support for building workgen with CMake. This was missed in the initial pass when CMake support was introduced. This ticket will introduce a CMake build script to support compiling workgen. Specifically this PR adds the following changes:\r\n* A CMakeLists.txt script to compile the workgen sources. Similar to the Python API, the script executes SWIG to generate the workgen wrapper python sources.\r\n* Refactored out the Python package & install sourcing as a general helper macro. We need this common code to build our Python workgen library.\r\n***\r\n_This is one of a series of CMake changes needed to complete WT-8020._",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 16, 2021 at 02:28 GMT",
        "updated_at": "Wednesday Nov 17, 2021 at 23:12 GMT",
        "closed_at": "Wednesday Nov 17, 2021 at 23:12 GMT",
        "merged_at": "Wednesday Nov 17, 2021 at 23:12 GMT"
    },
    {
        "key": null,
        "number": 7199,
        "state": "closed",
        "title": "Added a check for duplicate operations and exit with an error if duplicates are found.",
        "body": "* Added a check for duplicate operations and exit with an error if duplicates are found.\r\n* Tidied the code.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 16, 2021 at 01:27 GMT",
        "updated_at": "Tuesday Nov 16, 2021 at 04:13 GMT",
        "closed_at": "Tuesday Nov 16, 2021 at 04:13 GMT",
        "merged_at": "Tuesday Nov 16, 2021 at 04:13 GMT"
    },
    {
        "key": "WT-8259",
        "number": 7198,
        "state": "closed",
        "title": "WT-8259 Expose verbose categories and levels through WT_EVENT_HANDLER message strings",
        "body": "We want to expose the verbose category and verbosity level as additional metadata in the message.\r\n\r\nThe key changes are:\r\n\r\n- Update the internal '__eventv' method to take in a verbose category and level metadata fields.\r\n- Support internal message paths (using the event handler interface) that don't specify verbose categories & levels - i.e. \u2018wt_err\u2019 & \u2018wt_panic\u2019 \r\n- Define a default verbose category these paths can fall back on.\r\n- Default uses of these methods to the appropriate verbosity level i.e.  \u2018WT_VERBOSE_ERROR\u2019.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 16, 2021 at 00:45 GMT",
        "updated_at": "Thursday Nov 18, 2021 at 21:12 GMT",
        "closed_at": "Thursday Nov 18, 2021 at 21:12 GMT",
        "merged_at": "Thursday Nov 18, 2021 at 21:12 GMT"
    },
    {
        "key": "WT-8395",
        "number": 7197,
        "state": "closed",
        "title": "WT-8395 Add a version information to the checkpoint snapshot",
        "body": "Adding a version information flag to identify whether the metadata\r\nhave a proper snapshot information or not by comparing the retrieved\r\nversion information with the binary version.\r\n\r\nWith this new flag, all the older versions that don't have this flag\r\nare treated having not proper snapshots and ignored them during rollback\r\nto stable operation.",
        "base_ref": "develop",
        "created_at": "Monday Nov 15, 2021 at 23:17 GMT",
        "updated_at": "Tuesday Nov 23, 2021 at 06:30 GMT",
        "closed_at": "Tuesday Nov 23, 2021 at 06:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8410",
        "number": 7196,
        "state": "closed",
        "title": "WT-8410 Conversion from floats to integers changed overhead computation formula in block cache.",
        "body": "The rewriting of the formula caused it to report no overhead when the number of lookups was smaller than the number of insertions and removals, but this is precisely the situation when the overhead is high. As a result, performance dropped by 30-70%. The proposed changed reverses the performance regression.",
        "base_ref": "develop",
        "created_at": "Monday Nov 15, 2021 at 18:46 GMT",
        "updated_at": "Monday Nov 15, 2021 at 22:35 GMT",
        "closed_at": "Monday Nov 15, 2021 at 22:35 GMT",
        "merged_at": "Monday Nov 15, 2021 at 22:35 GMT"
    },
    {
        "key": "WT-8361",
        "number": 7194,
        "state": "closed",
        "title": "WT-8361 Restructure assert limit in search near 01 cppsuite test",
        "body": "This PR aims to improve the assert we are performing in search near 01. This method employed aims to account for concurrent threads perform search near, using an atomic variable to track the number of search near calls occuring.",
        "base_ref": "develop",
        "created_at": "Monday Nov 15, 2021 at 02:35 GMT",
        "updated_at": "Tuesday Nov 16, 2021 at 00:55 GMT",
        "closed_at": "Tuesday Nov 16, 2021 at 00:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8401",
        "number": 7191,
        "state": "closed",
        "title": "WT-8401 test_inmem01.test_insert_over_delete_replace fails under load on FLCS",
        "body": "Update test_inmem01.test_insert_over_delete_replace to avoid a degenerate case in FLCS.\r\n\r\nSee the comment in the test (or the ticket) for the full explanation.",
        "base_ref": "develop",
        "created_at": "Saturday Nov 13, 2021 at 04:47 GMT",
        "updated_at": "Wednesday Nov 17, 2021 at 04:52 GMT",
        "closed_at": "Saturday Nov 13, 2021 at 17:57 GMT",
        "merged_at": "Saturday Nov 13, 2021 at 17:57 GMT"
    },
    {
        "key": "WT-8400",
        "number": 7190,
        "state": "closed",
        "title": "WT-8400 Disable test_rollback_to_stable28 for VLCS",
        "body": "Disable rts28 on VLCS as well as FLCS.\r\n\r\nIt seems the test is timing-dependent and fails sometimes on the test machines because it doesn't always trigger the update restore eviction it's supposed to exercise.",
        "base_ref": "develop",
        "created_at": "Saturday Nov 13, 2021 at 02:19 GMT",
        "updated_at": "Saturday Nov 13, 2021 at 05:35 GMT",
        "closed_at": "Saturday Nov 13, 2021 at 05:35 GMT",
        "merged_at": "Saturday Nov 13, 2021 at 05:35 GMT"
    },
    {
        "key": "WT-8399",
        "number": 7189,
        "state": "closed",
        "title": "WT-8399 test_hs24.test_zero_ts fails on FLCS on lagged test machines",
        "body": "Fix test_hs24.zero_ts_deletes for FLCS deleted rows reading back as 0.\r\n\r\nAlso add a sleep before starting the checkpoint so the removes running asynchronously in the background have a chance to get started. This makes it much more likely that any of them will actually be seen afterwards. (That they aren't is how this got missed.)",
        "base_ref": "develop",
        "created_at": "Saturday Nov 13, 2021 at 02:02 GMT",
        "updated_at": "Saturday Nov 13, 2021 at 05:31 GMT",
        "closed_at": "Saturday Nov 13, 2021 at 05:31 GMT",
        "merged_at": "Saturday Nov 13, 2021 at 05:31 GMT"
    },
    {
        "key": "WT-8372",
        "number": 7188,
        "state": "closed",
        "title": "WT-8372 format mirror objects",
        "body": "This is a set of changes to add mirrored objects to format, that is, when there are multiple tables, format randomly picks a subset of them and mirrors content between them. Normal verify of the tables is enhanced so that after each individual object is verified, mirrored objects are compared to each other, asserting if they contain different content. The changes are relatively isolated, but there's one big change where the primary format operations loop was split into two parts, the table, transaction and operation selection loop, and the per-table code to perform a single operation.\r\n\r\nI've requested a lot of reviewers (I'm listing the same reviewers as I did for WT-3445, since if you dug into that change, well, this is more of the same), plus a few others. Please don't hesitate to remove yourself from the review list, or limit your review to specific areas you're interested in (or to areas where I've called you out below with a request for your review).\r\n\r\nNotable changes I think people might disagree with:\r\n\r\n1. Previously, format tried to dump the cursor's pages if it ever found an unexpected key/value pair, based on the `g.page_dump_cursor` value when it exited. After discussions with @keitharnoldsmith, I've hooked that work into the WiredTiger library itself: there's a field in the `WT_SESSION_IMPL` structure, and it's set to a callback function called from `__wt_btcur_search()`. I've resisted this change for a long time, because connecting test programs to the library seems ugly, but I know that @kommiharibabu and @sueloverso wanted to decrease the chance of format simply dropping core when dumping pages, and this should minimize the chances of getting a core dump instead of useful information when format fails. @sueloverso, @kommiharibabu, would you two please review that change? It's in commit 1973cb6.\r\n\r\n2. I've removed all of the cursor order checking in format, that is, when moving a cursor around in the table, it doesn't check that rows are returned in the correct order. I did this because it made another change easier, but also because when the library build is `HAVE_DIAGNOSTIC`, the library does stronger order checking that format ever did, and it seemed reasonable to let the library own that problem.\r\n\r\n3. In `WT_CURSOR.modify` calls, if there's a chunk of data that's not being set by the modify call, the bytes are set to a default, nul byte. That makes debugging format more difficult that it needs to be because that's the only key/value characters that aren't printable. Further, when tracking operations in format, there's a lot of wasted effort converting those strings to printable records. I've added a hack that allows test programs to set the modify pad byte, mostly because I'm just tired of seeing escaped nul bytes in format output. @quchenhao, that change is in commit 15c3c63 and I think you're the most familiar of us with that area, would you please take a look?\r\n\r\n4. Previously, there was a `-T` option to format that configured how tracing is done. I removed the `-T` option in favor of finer granularity of tracing by using configuration options. I don't think the `-T` option is widely used, so I don't think this will be a backward compatibility problem for users, and the new configuration options will be ignored by any previous versions of format.\r\n\r\nFinally, @lukech, there's a change to `format.sh` in 8edd94f that replaces the calls to the `wt` utility for abort/recovery testing with calls to format, using a new `-v` option that, when combined with the existing `-R` option opens the databases, verifies them, and then exits. That's because the format utility knows how to compare mirror groups against each other, and `wt` doesn't. @lukech, would you please review that change?\r\n\r\nUPDATE:\r\nWe merged the first set FLCS changes a couple of days ago, so I went ahead and included the changes to once again support FLCS in format (FLCS in format hadn't been updated in a long time because the WiredTiger library hasn't supported FLCS in years, and there had been extensive bit rot). This branch currently supports FLCS to some extent, although it hasn't been stress tested at all.",
        "base_ref": "develop",
        "created_at": "Saturday Nov 13, 2021 at 00:11 GMT",
        "updated_at": "Wednesday Nov 17, 2021 at 15:36 GMT",
        "closed_at": "Tuesday Nov 16, 2021 at 23:03 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8398",
        "number": 7186,
        "state": "closed",
        "title": "WT-8398 test_rollback_to_stable10 is timing-dependent",
        "body": "Adjust HS assertions in the \"prepare\" test of rts10.\r\n\r\nCurrently, adding time.sleep(50) before stopping the background checkpointer makes the hs_sweep > 0 assertion fail. This is because under these circmstances all the outdated HS entries are removed by the data-store RTS and counted in hs_removed instead of hs_sweep. Since tests shouldn't be timing-dependent, assert about the sum of hs_removed and hs_sweep instead of each individually.",
        "base_ref": "develop",
        "created_at": "Friday Nov 12, 2021 at 03:05 GMT",
        "updated_at": "Wednesday Nov 17, 2021 at 03:57 GMT",
        "closed_at": "Monday Nov 15, 2021 at 01:00 GMT",
        "merged_at": "Monday Nov 15, 2021 at 01:00 GMT"
    },
    {
        "key": "WT-8246",
        "number": 7185,
        "state": "closed",
        "title": "Revert \"WT-8246 Create a csuite test to run compact and RTS\"",
        "body": "Reverts wiredtiger/wiredtiger#7093",
        "base_ref": "develop",
        "created_at": "Friday Nov 12, 2021 at 01:17 GMT",
        "updated_at": "Friday Nov 12, 2021 at 01:19 GMT",
        "closed_at": "Friday Nov 12, 2021 at 01:19 GMT",
        "merged_at": "Friday Nov 12, 2021 at 01:19 GMT"
    },
    {
        "key": "WT-8363",
        "number": 7184,
        "state": "closed",
        "title": "WT-8363 Redeliver Validate stats output by perf tests",
        "body": "Redelivery of https://github.com/wiredtiger/wiredtiger/pull/7173 (Reverted here https://github.com/wiredtiger/wiredtiger/pull/7183).\r\n\r\nThis change is identical to the original review, but moves the `perf.send` and `s3.put` commands back into `upload-perf-test-stats` with new commit 11f6785. ",
        "base_ref": "develop",
        "created_at": "Thursday Nov 11, 2021 at 22:32 GMT",
        "updated_at": "Friday Nov 12, 2021 at 02:16 GMT",
        "closed_at": "Friday Nov 12, 2021 at 02:16 GMT",
        "merged_at": "Friday Nov 12, 2021 at 02:16 GMT"
    },
    {
        "key": "WT-8363",
        "number": 7183,
        "state": "closed",
        "title": "Revert \"WT-8363 - Validate stats output by performance tests (#7173)\"",
        "body": "This reverts WT-8383 commit cd0d06df067e90e3767b619bdd74439e5c38ce4e.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 11, 2021 at 06:31 GMT",
        "updated_at": "Thursday Nov 11, 2021 at 06:39 GMT",
        "closed_at": "Thursday Nov 11, 2021 at 06:39 GMT",
        "merged_at": "Thursday Nov 11, 2021 at 06:39 GMT"
    },
    {
        "key": "WT-8091",
        "number": 7182,
        "state": "closed",
        "title": "WT-8091 Create cpp test performing unique indexes insertions",
        "body": "This involves creating a cppsuite test which aims to test Mongodb's method of performing unique index insertions. For making this test to work, we needed to add remove functionality to the cpp test framework.\r\n\r\nI have also created a stressful config in evergreen file.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 11, 2021 at 05:23 GMT",
        "updated_at": "Monday Nov 22, 2021 at 22:07 GMT",
        "closed_at": "Monday Nov 22, 2021 at 22:07 GMT",
        "merged_at": "Monday Nov 22, 2021 at 22:07 GMT"
    },
    {
        "key": "WT-7915",
        "number": 7180,
        "state": "closed",
        "title": "WT-7915 Change WT_CURSTD_IGNORE_TOMBSTONE flag to something more intuitive",
        "body": "WT_CURSTD_IGNORE_TOMBSTONE to WT_CURSTD_RETURN_TOMBSTONE\r\n\r\nThis flag now tells that the caller is okay if the underlying cursor returns a value with a visible tombstone.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 10, 2021 at 22:48 GMT",
        "updated_at": "Tuesday Nov 16, 2021 at 23:11 GMT",
        "closed_at": "Tuesday Nov 16, 2021 at 23:11 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8371",
        "number": 7179,
        "state": "closed",
        "title": "WT-8371 row-store internal page overflow key blocks are not being freed",
        "body": "Simplify overflow key block frees: now that we no longer store overflow cookies on internal pages, we can free backing overflow key blocks in all cases without further consideration.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 10, 2021 at 19:34 GMT",
        "updated_at": "Monday Nov 15, 2021 at 04:48 GMT",
        "closed_at": "Monday Nov 15, 2021 at 04:48 GMT",
        "merged_at": "Monday Nov 15, 2021 at 04:48 GMT"
    },
    {
        "key": "WT-8166",
        "number": 7177,
        "state": "closed",
        "title": "WT-8166 Check for comments related to the ticket being worked on",
        "body": "This script checks for potential FIXME comments left behind that are\r\nrelated to the ticket being worked on.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 10, 2021 at 11:25 GMT",
        "updated_at": "Monday Nov 15, 2021 at 22:30 GMT",
        "closed_at": "Monday Nov 15, 2021 at 22:29 GMT",
        "merged_at": "Monday Nov 15, 2021 at 22:29 GMT"
    },
    {
        "key": "WT-8303",
        "number": 7176,
        "state": "closed",
        "title": "WT-8303 Implement weak hazard pointers",
        "body": "(cherry picked from commit 155772173f502601254b7d146f8d14aa2b2c8361)",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 10, 2021 at 08:33 GMT",
        "updated_at": "Tuesday Nov 16, 2021 at 05:21 GMT",
        "closed_at": "Tuesday Nov 16, 2021 at 05:21 GMT",
        "merged_at": "Tuesday Nov 16, 2021 at 05:21 GMT"
    },
    {
        "key": "WT-5580",
        "number": 7174,
        "state": "closed",
        "title": "WT-5580 Dump the wtperf command into logs in Evergreen wtperf test",
        "body": "In the wtperf-test Evergreen task, display the path of the wtperf config file in the logs for each test executed.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 10, 2021 at 06:18 GMT",
        "updated_at": "Wednesday Nov 10, 2021 at 08:34 GMT",
        "closed_at": "Wednesday Nov 10, 2021 at 08:34 GMT",
        "merged_at": "Wednesday Nov 10, 2021 at 08:34 GMT"
    },
    {
        "key": "WT-8363",
        "number": 7173,
        "state": "closed",
        "title": "WT-8363 - Validate stats output by perf tests",
        "body": "Add an evergreen function to validate that performance tests return an expected values for each stat.\r\n`perf-test-evict-fairness` will now fail if \"Pages seen by eviction\" is not exactly 200.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 10, 2021 at 03:51 GMT",
        "updated_at": "Thursday Nov 11, 2021 at 22:09 GMT",
        "closed_at": "Thursday Nov 11, 2021 at 01:03 GMT",
        "merged_at": "Thursday Nov 11, 2021 at 01:03 GMT"
    },
    {
        "key": "WT-8208",
        "number": 7172,
        "state": "closed",
        "title": "WT-8208 Add a new debug config in session to evict pages as released",
        "body": "I have modified the configuration to test with one of our existing RTS tests, but let me know if there is a better way to test this new functionality.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 10, 2021 at 00:39 GMT",
        "updated_at": "Friday Nov 12, 2021 at 03:19 GMT",
        "closed_at": "Friday Nov 12, 2021 at 03:19 GMT",
        "merged_at": "Friday Nov 12, 2021 at 03:19 GMT"
    },
    {
        "key": "WT-8368",
        "number": 7171,
        "state": "closed",
        "title": "WT-8368 Avoid using wrapper in __wt_verbose_multi",
        "body": "Letting 'wt_verbose_multi' wrap over another macro results in the category field completely expanding, rather than its intermediate string representation. For various uses of the macro this ends up being a string representation of the entire\r\nWT_VERBOSE_MULTI_CATEGORY struct definition, resulting in an overly verbose message. To fix this, avoid calling an underlying macro, performing the multi-check inline.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 09, 2021 at 22:00 GMT",
        "updated_at": "Wednesday Nov 10, 2021 at 00:46 GMT",
        "closed_at": "Wednesday Nov 10, 2021 at 00:46 GMT",
        "merged_at": "Wednesday Nov 10, 2021 at 00:46 GMT"
    },
    {
        "key": "WT-8364",
        "number": 7169,
        "state": "closed",
        "title": "WT-8364 Fix CMake bug for TCMalloc cppsuite builds",
        "body": "On CMake builds of WiredTiger with TCMalloc enabled, the cppsuite crashes due to an invalid pointer error when free()'ing memory. \r\nWhen the tcmalloc config is enabled, CMake builds the cppsuite without linking tcmalloc (defaulting to the standard libc allocator), whilst the WiredTiger library is linked against tcmalloc. This meaning two different allocators are being used at runtime. \r\nThis becomes problematic as it appears the cppsuite is allocating/freeing/sharing memory between itself and WiredTiger, thus leading to an invalid pointer free() error. \r\n\r\nTo fix this, update the cppsuite to also link against TCMalloc (if WiredTiger is using TCMalloc). This keeping the allocator runtime uniform between the two artifacts.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 09, 2021 at 06:26 GMT",
        "updated_at": "Wednesday Nov 10, 2021 at 00:37 GMT",
        "closed_at": "Wednesday Nov 10, 2021 at 00:37 GMT",
        "merged_at": "Wednesday Nov 10, 2021 at 00:37 GMT"
    },
    {
        "key": "WT-8359",
        "number": 7168,
        "state": "closed",
        "title": "WT-8359 Separate smoke tests from stress tests in Evergreen",
        "body": "WT-8321 made changes to let smoke test tasks run the test once (instead of multiple times). Those tasks are no longer suitable to be included in the stress test builders. \r\n\r\nChanges in this PR include:\r\n- Move the smoke test tasks from the stress test builders into the base Ubuntu and Ubuntu ASAN builders. \r\n- Remove the task tags from smoke test tasks and add the tasks into PPC & zSeries builders explicitly.\r\n- Reduce the times of run to 1 for the smoke test PPC task. ",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 09, 2021 at 05:00 GMT",
        "updated_at": "Wednesday Nov 10, 2021 at 04:19 GMT",
        "closed_at": "Wednesday Nov 10, 2021 at 04:19 GMT",
        "merged_at": "Wednesday Nov 10, 2021 at 04:19 GMT"
    },
    {
        "key": "WT-8358",
        "number": 7167,
        "state": "closed",
        "title": "WT-8358 Pass args via command line",
        "body": "Pass the `operations` and `arguments` parameters to wtperf_run.py via command line instead of through an `arg_file`. Now these parameters can be passed via `-ops` and `-args` instead of via `-a path/to/arg_file.json`\r\n\r\nAdditionally `arg_file` (-a) has been renamed to `batch_file` (-bf) to indicate it is intended for running multiple jobs with slightly different wtperf arguments, and shouldn't be used for a single test",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 09, 2021 at 04:56 GMT",
        "updated_at": "Wednesday Nov 10, 2021 at 05:15 GMT",
        "closed_at": "Wednesday Nov 10, 2021 at 05:15 GMT",
        "merged_at": "Wednesday Nov 10, 2021 at 05:15 GMT"
    },
    {
        "key": "WT-7733",
        "number": 7164,
        "state": "closed",
        "title": "WT-7733 Flush tier should skip flushing tables and switching object for",
        "body": "tables that have not changed since the previous flush tier call.",
        "base_ref": "develop",
        "created_at": "Monday Nov 08, 2021 at 21:23 GMT",
        "updated_at": "Thursday Nov 18, 2021 at 14:02 GMT",
        "closed_at": "Thursday Nov 18, 2021 at 14:02 GMT",
        "merged_at": "Thursday Nov 18, 2021 at 14:02 GMT"
    },
    {
        "key": "WT-8357",
        "number": 7163,
        "state": "closed",
        "title": "WT-8357 Add more Evergreen expansions into the performance test output",
        "body": "Added ${distro_id} to the Evergreen info included in the test output.",
        "base_ref": "develop",
        "created_at": "Monday Nov 08, 2021 at 06:03 GMT",
        "updated_at": "Monday Nov 08, 2021 at 07:05 GMT",
        "closed_at": "Monday Nov 08, 2021 at 07:05 GMT",
        "merged_at": "Monday Nov 08, 2021 at 07:05 GMT"
    },
    {
        "key": "WT-8076",
        "number": 7162,
        "state": "closed",
        "title": "WT-8076 Modify tiered_abort csuite test to work with cmake",
        "body": "This PR involves fixing the tiered abort test to work with the cmake builds. Currently the required libraries and build directory only adheres to the build_posix system. This ticket aims to make it work for both, meaning we will need to return the correct library location and build directory based on the system.",
        "base_ref": "develop",
        "created_at": "Monday Nov 08, 2021 at 01:32 GMT",
        "updated_at": "Wednesday Nov 10, 2021 at 04:09 GMT",
        "closed_at": "Wednesday Nov 10, 2021 at 04:09 GMT",
        "merged_at": "Wednesday Nov 10, 2021 at 04:09 GMT"
    },
    {
        "key": "WT-6116",
        "number": 7161,
        "state": "closed",
        "title": "WT-6116 test_schema_abort failed with data loss",
        "body": "Turn non-timestamp testing back on.",
        "base_ref": "develop",
        "created_at": "Saturday Nov 06, 2021 at 20:34 GMT",
        "updated_at": "Monday Nov 08, 2021 at 15:37 GMT",
        "closed_at": "Monday Nov 08, 2021 at 15:37 GMT",
        "merged_at": "Monday Nov 08, 2021 at 15:37 GMT"
    },
    {
        "key": "WT-8291",
        "number": 7160,
        "state": "closed",
        "title": "WT-8291 AddressSanitizer reported attempting double-free during test_wt4803_history_store_abort",
        "body": "Don't call exit() without an exec, call _exit() instead.\r\n\r\nWhile I'm in the area...\r\n\r\nClose the WiredTiger connection when we're done, that cleans up everything else.\r\nRemove/re-create the WiredTiger directory near where we open it.\r\nSimplify a couple of failure checks.",
        "base_ref": "develop",
        "created_at": "Saturday Nov 06, 2021 at 18:32 GMT",
        "updated_at": "Monday Nov 08, 2021 at 16:19 GMT",
        "closed_at": "Monday Nov 08, 2021 at 16:19 GMT",
        "merged_at": "Monday Nov 08, 2021 at 16:19 GMT"
    },
    {
        "key": "WT-8317",
        "number": 7159,
        "state": "closed",
        "title": "WT-8317 Cache stuck with updates when thread performing checkpoint",
        "body": "Never store overflow keys on row-store internal pages.",
        "base_ref": "develop",
        "created_at": "Saturday Nov 06, 2021 at 00:13 GMT",
        "updated_at": "Wednesday Nov 10, 2021 at 01:42 GMT",
        "closed_at": "Wednesday Nov 10, 2021 at 01:42 GMT",
        "merged_at": "Wednesday Nov 10, 2021 at 01:42 GMT"
    },
    {
        "key": "WT-8321",
        "number": 7158,
        "state": "closed",
        "title": "WT-8321 Fix format-stress-smoke-test timeout condition",
        "body": "Only do one format smoke test run in each Evergreen test run.",
        "base_ref": "develop",
        "created_at": "Friday Nov 05, 2021 at 23:16 GMT",
        "updated_at": "Monday Nov 08, 2021 at 21:29 GMT",
        "closed_at": "Monday Nov 08, 2021 at 21:29 GMT",
        "merged_at": "Monday Nov 08, 2021 at 21:28 GMT"
    },
    {
        "key": "WT-8355",
        "number": 7157,
        "state": "closed",
        "title": "WT-8355 Coverity analysis defect 121096: Uninitialized pointer read",
        "body": "Coverity reports the statistics cursors can be used uninitialized because it's not seeing that the WiredTiger library will return an error in any path where a cursor isn't initialized. Change the statistics functions to use format's underlying cursor-open function and change that function to initialize the returned cursor for clarity and to hopefully avoid these complaints in the future.\r\n\r\nWhile I'm in the area:\r\n\r\nAbstract out the code to dump a cursor's worth of statistics, it's identical between tables and the connection, no need to have two copies.\r\n\r\nAssert the printf's into the output file succeed.",
        "base_ref": "develop",
        "created_at": "Friday Nov 05, 2021 at 17:50 GMT",
        "updated_at": "Friday Nov 05, 2021 at 21:27 GMT",
        "closed_at": "Friday Nov 05, 2021 at 21:26 GMT",
        "merged_at": "Friday Nov 05, 2021 at 21:26 GMT"
    },
    {
        "key": "WT-8339",
        "number": 7156,
        "state": "closed",
        "title": "WT-8339 wtperf monitor missing comma",
        "body": "Addition of missing comma to csv header for wtperf monitor file",
        "base_ref": "develop",
        "created_at": "Friday Nov 05, 2021 at 16:19 GMT",
        "updated_at": "Monday Nov 08, 2021 at 03:49 GMT",
        "closed_at": "Monday Nov 08, 2021 at 03:49 GMT",
        "merged_at": "Monday Nov 08, 2021 at 03:49 GMT"
    },
    {
        "key": "WT-8256",
        "number": 7155,
        "state": "closed",
        "title": "WT-8256 Create new tests capturing different verbose configuration scenarios",
        "body": "Implementation of new tests to verify the new verbose API is working as expected when specific categories along with verbosity levels are set. The main changes are:\r\n\r\n- Creation of a class that defines common helpers that are used across the different verbose test classes.\r\n- Creation of a new file that contains the tests related to the new verbose API",
        "base_ref": "develop",
        "created_at": "Friday Nov 05, 2021 at 05:10 GMT",
        "updated_at": "Tuesday Nov 09, 2021 at 01:55 GMT",
        "closed_at": "Tuesday Nov 09, 2021 at 01:55 GMT",
        "merged_at": "Tuesday Nov 09, 2021 at 01:55 GMT"
    },
    {
        "key": "WT-8354",
        "number": 7154,
        "state": "closed",
        "title": "WT-8354 Historic format builds used in compatibility runs need their previous syntax",
        "body": "Switching from a mixture of \"none\" and \"off\" for \"not configured\" or \"configured off\" strings to always using \"off\" leads to problems in the historic format builds used in compatibility runs. For the 3 configurations that used \"none\" previously (logging.compression, btree.compression and disk.encryption), output \"none\" instead of \"off\".",
        "base_ref": "develop",
        "created_at": "Friday Nov 05, 2021 at 04:01 GMT",
        "updated_at": "Friday Nov 05, 2021 at 05:01 GMT",
        "closed_at": "Friday Nov 05, 2021 at 05:01 GMT",
        "merged_at": "Friday Nov 05, 2021 at 05:01 GMT"
    },
    {
        "key": "WT-5011",
        "number": 7153,
        "state": "closed",
        "title": "WT-5011 - Migrate log consolidation tests to Evergreen",
        "body": "Migration of the log-consolidation performance tests from Jenkins to Evergreen.\r\nAlso in the commit:\r\n- In Arg files (e.g. update-btree.json) multiple arguments can now be passed into wtperf\r\n- Introduction of the min/max_throughput stats\r\n- When wtperf fails print the stderr output for debugging purposes",
        "base_ref": "develop",
        "created_at": "Friday Nov 05, 2021 at 01:25 GMT",
        "updated_at": "Monday Nov 08, 2021 at 05:44 GMT",
        "closed_at": "Monday Nov 08, 2021 at 05:44 GMT",
        "merged_at": "Monday Nov 08, 2021 at 05:44 GMT"
    },
    {
        "key": "WT-8349",
        "number": 7150,
        "state": "closed",
        "title": "WT-8349 In-memory format runs can create a CONFIG with illegal cache size",
        "body": "In-memory runs have to constrain the rows and key/value min/max sizes for all tables, not just the global settings, otherwise we can blow out any cache.\r\n\r\nMinor cleanups to the in-memory configuration functions.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 04, 2021 at 20:59 GMT",
        "updated_at": "Friday Nov 05, 2021 at 03:54 GMT",
        "closed_at": "Friday Nov 05, 2021 at 03:54 GMT",
        "merged_at": "Friday Nov 05, 2021 at 03:54 GMT"
    },
    {
        "key": "WT-8350",
        "number": 7149,
        "state": "closed",
        "title": "WT-8350 format uses the wrong syntax to turn off common prefix configuration",
        "body": "Fix problems where the wrong type of value was used to turn a configuration value off.\r\n\r\nAdd new functionality to configure a value \"off\" so we don't have to do it manually.\r\n\r\nSwitch from a mixture of \"none\" and \"off\" for \"not configured\" or \"configured off\" strings, always use \"off\".",
        "base_ref": "develop",
        "created_at": "Thursday Nov 04, 2021 at 19:42 GMT",
        "updated_at": "Friday Nov 05, 2021 at 00:53 GMT",
        "closed_at": "Friday Nov 05, 2021 at 00:53 GMT",
        "merged_at": "Friday Nov 05, 2021 at 00:53 GMT"
    },
    {
        "key": "WT-8258",
        "number": 7148,
        "state": "closed",
        "title": "WT-8258 Implement JSON encoded strings to be produced by the WT_EVENT_HANDLER API",
        "body": "Currently, messages produced by the event handler interface are formatted as \u201cflat\u201d-style strings, prepended with a list of comma-separated attributes. As a means to improve the structure of our event handler messages, we updated the event handler to optionally allow the formatting of messages as JSON-encoded strings. This introduces a structured, reliable, and easy to parse message format that can be flexibly extended to expose new metadata attributes.\r\n\r\nThe key changes in the PR:\r\n- Introducing a JSON connection configuration option\r\n- Parsing the JSON connection configuration option\r\n- Refactoring the `__eventv` function to be able to use different message formats\r\n- Introducing a new function to generate JSON encoded messages through the event handler\r\n- Updating test_verbose01.py to trigger the new code paths",
        "base_ref": "develop",
        "created_at": "Thursday Nov 04, 2021 at 04:40 GMT",
        "updated_at": "Tuesday Nov 16, 2021 at 00:20 GMT",
        "closed_at": "Tuesday Nov 16, 2021 at 00:20 GMT",
        "merged_at": "Tuesday Nov 16, 2021 at 00:20 GMT"
    },
    {
        "key": "WT-8347",
        "number": 7147,
        "state": "closed",
        "title": "WT-8347 Slipup in test_checkpoint modify changes",
        "body": "Fix slipup in test_checkpoint that made it immediately overwrite all its modifies.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 04, 2021 at 02:06 GMT",
        "updated_at": "Thursday Nov 04, 2021 at 21:24 GMT",
        "closed_at": "Thursday Nov 04, 2021 at 06:26 GMT",
        "merged_at": "Thursday Nov 04, 2021 at 06:26 GMT"
    },
    {
        "key": "WT-8232",
        "number": 7145,
        "state": "closed",
        "title": "WT-8232 Fix test_hs18.py test to use release evict cursor to evict the page",
        "body": "test_hs18.py test depends on the page eviction to validate the\r\ntimestamp weirdness due to out of order or mixed mode timestamps.\r\nUse the debug evict cursor to evict the page to let the test to\r\nhave consistent behaviour.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 03, 2021 at 23:33 GMT",
        "updated_at": "Thursday Nov 04, 2021 at 00:53 GMT",
        "closed_at": "Thursday Nov 04, 2021 at 00:53 GMT",
        "merged_at": "Thursday Nov 04, 2021 at 00:53 GMT"
    },
    {
        "key": "WT-8114",
        "number": 7144,
        "state": "closed",
        "title": "WT-8114 Revert allow setting the prepare timestamp smaller than or equal to the latest active read timestamp with roundup prepare config",
        "body": "This reverts commit c371a9cd2ac4ced5790fe256bfa4408d1973d77b.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 03, 2021 at 22:44 GMT",
        "updated_at": "Thursday Nov 04, 2021 at 00:59 GMT",
        "closed_at": "Thursday Nov 04, 2021 at 00:59 GMT",
        "merged_at": "Thursday Nov 04, 2021 at 00:59 GMT"
    },
    {
        "key": "WT-8342",
        "number": 7143,
        "state": "closed",
        "title": "WT-8342 Coverity: CID 121074: UNINTENDED_INTEGER_DIVISION in src/support/float.c",
        "body": "Replace floating point arithmetic with integer.\r\n\r\n@fedorova, please forgive me if I'm just missing something terribly obvious, but can't we switch out the float/double calculations for integer calculations?",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 03, 2021 at 22:20 GMT",
        "updated_at": "Friday Nov 05, 2021 at 00:48 GMT",
        "closed_at": "Friday Nov 05, 2021 at 00:48 GMT",
        "merged_at": "Friday Nov 05, 2021 at 00:48 GMT"
    },
    {
        "key": "WT-8157",
        "number": 7142,
        "state": "closed",
        "title": "WT-8157 Fix format-abort-recovery-stress-test timeout condition",
        "body": "Increase evergreen timeout to 1 hr to allow time for test to do recovery.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 03, 2021 at 20:47 GMT",
        "updated_at": "Thursday Nov 04, 2021 at 13:37 GMT",
        "closed_at": "Thursday Nov 04, 2021 at 13:37 GMT",
        "merged_at": "Thursday Nov 04, 2021 at 13:37 GMT"
    },
    {
        "key": "WT-8337",
        "number": 7141,
        "state": "closed",
        "title": "WT-8337 format direct I/O test fails to turn off backups",
        "body": "Fix a bug in the configuration check macros, was stringifying a name instead of concatenating it.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 03, 2021 at 15:36 GMT",
        "updated_at": "Wednesday Nov 03, 2021 at 16:39 GMT",
        "closed_at": "Wednesday Nov 03, 2021 at 16:39 GMT",
        "merged_at": "Wednesday Nov 03, 2021 at 16:39 GMT"
    },
    {
        "key": "WT-8336",
        "number": 7140,
        "state": "closed",
        "title": "WT-8336 Disable unsafe-loop-optimizations flag when compiling c++ files",
        "body": "- We don't enable the `unsafe-loop-optimizations` flag for c++ compilation\r\n- it is only enabled when compiling C files for specific GCC versions.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 03, 2021 at 06:47 GMT",
        "updated_at": "Thursday Nov 04, 2021 at 22:37 GMT",
        "closed_at": "Thursday Nov 04, 2021 at 22:37 GMT",
        "merged_at": "Thursday Nov 04, 2021 at 22:37 GMT"
    },
    {
        "key": "WT-8253",
        "number": 7139,
        "state": "closed",
        "title": "WT-8253 Fix disk space issue in stress tests",
        "body": "- Reduced the number of test iterations for those stress tests that have been running out of disk space.\r\n- Log disk usage info at the start of each iteration to help diagnose future disk space issues.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 03, 2021 at 01:37 GMT",
        "updated_at": "Wednesday Nov 03, 2021 at 07:36 GMT",
        "closed_at": "Wednesday Nov 03, 2021 at 07:36 GMT",
        "merged_at": "Wednesday Nov 03, 2021 at 07:36 GMT"
    },
    {
        "key": "WT-8335",
        "number": 7138,
        "state": "closed",
        "title": "WT-8335 Support compiling both a static and shared WiredTiger library in CMake",
        "body": "Currently we only support compiling either a static or shared build of the WiredTiger library in CMake (being a binary option). For some uses case, it can be ideal to compile both the static and shared artifacts in a single build e.g. for a system installation. This change overhauls the CMake build of the wiredtiger target such that we can compile both a static and shared wiredtiger in the same build run i.e. no longer limited to either a static or shared build. This change brings a bit more feature parity with autoconf (before we officially deprecate it).\r\nMore specifically, the key changes this PR introduces:\r\n- CMake configuration option `ENABLE_SHARED` : Introduces a seperate configuration option, `ENABLE_SHARED`, in conjunction to `ENABLE_STATIC`. The intention is to support the capability for building both shared and static wiredtiger artifacts in a single build.\r\n- CMake configuration option `WITH_PIC` : Introduces a new configuration option, `WITH_PIC`, which can be used to force compile all build objects as position independent sources. The motivation behind this option is to provide a means for the end user to manually control the way libwiredtiger is compiled. If building a static version of wiredtiger, `WITH_PIC` allows the end user to configure whether the sources should be position independent, based on their needs for linking the wiredtiger artifact i.e. needed if wanting to link a static wiredtiger archive into a dynamic library.\r\n- A macro to define the libwiredtiger target, having a common set of targets and properties we want to associate to any given 'libwiredtiger' target. Having this as a macro allows us to  de-duplicate common definitions if wanting to create multiple versions of libwiredtiger within the same build.\r\n- Namespace wiredtiger ALIAS target: As the 'wiredtiger' library target is now an alias target, we should namespace the target under `wt::`. This having the benefit of letting CMake throw diagnostic errors if `wt::wiredtiger` is not found when using `target_link_libraries`.\r\n- Other miscellaneous fixes ",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 02, 2021 at 23:09 GMT",
        "updated_at": "Sunday Nov 07, 2021 at 22:53 GMT",
        "closed_at": "Sunday Nov 07, 2021 at 22:53 GMT",
        "merged_at": "Sunday Nov 07, 2021 at 22:53 GMT"
    },
    {
        "key": "WT-8331",
        "number": 7137,
        "state": "closed",
        "title": "WT-8331 change format to allow quote characters",
        "body": "Change format to allow single and double quote characters, evergreen scripts use them.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 02, 2021 at 19:39 GMT",
        "updated_at": "Tuesday Nov 02, 2021 at 21:51 GMT",
        "closed_at": "Tuesday Nov 02, 2021 at 21:51 GMT",
        "merged_at": "Tuesday Nov 02, 2021 at 21:51 GMT"
    },
    {
        "key": "WT-8327",
        "number": 7135,
        "state": "closed",
        "title": "WT-8327 Temporarily disable parallel script catching failure",
        "body": "This ticket is to temporarily disable the failure until the underlying bug in WT-8253 is solved.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 02, 2021 at 05:45 GMT",
        "updated_at": "Tuesday Nov 02, 2021 at 07:00 GMT",
        "closed_at": "Tuesday Nov 02, 2021 at 07:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5012",
        "number": 7134,
        "state": "closed",
        "title": "WT-5012 - Migrate wiredtiger-perf-evict to Evergreen",
        "body": "Migration of the wiredtiger-perf-evict Jenkins job into Evergreen",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 02, 2021 at 03:34 GMT",
        "updated_at": "Tuesday Nov 02, 2021 at 23:07 GMT",
        "closed_at": "Tuesday Nov 02, 2021 at 23:07 GMT",
        "merged_at": "Tuesday Nov 02, 2021 at 23:07 GMT"
    },
    {
        "key": "WT-8318",
        "number": 7133,
        "state": "closed",
        "title": "WT-8318 Add format.sh support for a directory of CONFIG files",
        "body": "Add the -D option to read a directory for CONFIG files.\r\nFix a bug where -c with an absolute path name argument would fail.",
        "base_ref": "develop",
        "created_at": "Monday Nov 01, 2021 at 18:30 GMT",
        "updated_at": "Wednesday Nov 03, 2021 at 23:53 GMT",
        "closed_at": "Wednesday Nov 03, 2021 at 23:53 GMT",
        "merged_at": "Wednesday Nov 03, 2021 at 23:53 GMT"
    },
    {
        "key": "WT-5010",
        "number": 7131,
        "state": "closed",
        "title": "WT-5010 migrate wiredtiger perf checkpoint to evergreen",
        "body": "Implemented the update-checkpoint-btree and update-checkpoint-lsm tests. Added the ability to capture more than one result per argument (ie to have multiple 'operations' per argument) when using an argument file.",
        "base_ref": "develop",
        "created_at": "Monday Nov 01, 2021 at 09:42 GMT",
        "updated_at": "Tuesday Nov 02, 2021 at 02:08 GMT",
        "closed_at": "Tuesday Nov 02, 2021 at 02:08 GMT",
        "merged_at": "Tuesday Nov 02, 2021 at 02:08 GMT"
    },
    {
        "key": "WT-8314",
        "number": 7129,
        "state": "closed",
        "title": "WT-8314 the block cache can return blocks for the wrong table",
        "body": "Add the file ID to the WT_BLKCACHE_ID structure: checksum, offset and size aren't unique by themselves, the file ID has to be included in the comparison.\r\n\r\nDon't bother clearing the WT_BLKCACHE_ID structure, assert during the build it hasn't been padded, re-order the structure members to avoid padding.\r\n\r\nDon't bother creating a local connection variable when all we need is the block cache structure.\r\n\r\nDon't initialize WT_BLKCACHE_ITEM variables before using them in a linked-list walk, avoid static analyzer complaints that variables are set to a value that's never read.\r\n\r\nRemove trailing periods from messages.",
        "base_ref": "develop",
        "created_at": "Friday Oct 29, 2021 at 21:07 GMT",
        "updated_at": "Monday Nov 01, 2021 at 22:35 GMT",
        "closed_at": "Monday Nov 01, 2021 at 22:35 GMT",
        "merged_at": "Monday Nov 01, 2021 at 22:35 GMT"
    },
    {
        "key": "WT-8169",
        "number": 7128,
        "state": "closed",
        "title": "WT-8169 - Restrict the timestamp API to avoid transactions with timestamped and non-timestamped updates",
        "body": "A restriction of the timestamp API such that timestamp_transactions cannot be called on transactions containing a non-timestamped update.\r\nIn previous behaviour WT would backfill un-timestamped updates with the transaction commit time, which could result in out-of-order timestamps.\r\n\r\nNote with this change prepared transactions can only set `durable_timestamp` at commit time, and `all_durable` can no longer be impacted by the `durable_timestamp` of a running prepared transaction.",
        "base_ref": "develop",
        "created_at": "Friday Oct 29, 2021 at 03:26 GMT",
        "updated_at": "Friday Nov 12, 2021 at 05:14 GMT",
        "closed_at": "Friday Nov 12, 2021 at 05:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8285",
        "number": 7127,
        "state": "closed",
        "title": "WT-8285 Simplify CMake's usage of third party libraries",
        "body": "The intent of this PR is to mainly simplify and clean up how we link third party libraries in CMake. These changes mainly include:\r\n* Removal of global includes in the CMake project: Specifically cleans up the `config_lib` helper to avoid appending a libraries include path to the global CMake project scope. We ideally only want to use the include path if the library is going to be linked to a target (i.e. `config_lib` is only for finding a library). As such updated `config_lib` to export an additional configuration variable containing the libraries include paths. This allowing us to explicitly use the include paths if we are actually going to link the library.\r\n* Create third-party imported library targets: This change centralizes the associated paths under a single shared library target to avoid de referencing the 'HAVE_LIB_X' and 'HAVE_LIB_X_INCLUDES' across the project. This greatly simplifying the dependencies of a library to a single target, which in turn can be easily linked across the CMake project. \r\n* Split library dependencies for wiredtiger over its PUBLIC/PRIVATE interface: Currently all targets that link against the libwiredtiger target transitively inherit any library wiredtiger links against. Ideally we want to make this more explicit, controlling whether a binary actually needs to inherit a particular library.\r\n* Avoid linking tcmalloc in our test binaries: If libwiredtiger is already using tcmalloc, linking tcmalloc again into the binary is potentially error prone. This could result in two instances of tcmalloc running. A majority of our tests are\r\nsimple enough that we generally don't need tcmalloc running in the test binaries, particularly if wiredtiger is already using tcmalloc.",
        "base_ref": "develop",
        "created_at": "Friday Oct 29, 2021 at 02:21 GMT",
        "updated_at": "Monday Nov 01, 2021 at 03:03 GMT",
        "closed_at": "Monday Nov 01, 2021 at 03:03 GMT",
        "merged_at": "Monday Nov 01, 2021 at 03:03 GMT"
    },
    {
        "key": "WT-3445",
        "number": 7125,
        "state": "closed",
        "title": "WT-3445 format multiple tables",
        "body": "Reverted based on WT-8312, WT-8313, WT-8314.\r\nRe-opening for merge after fixes.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 29, 2021 at 01:20 GMT",
        "updated_at": "Sunday Oct 31, 2021 at 22:11 GMT",
        "closed_at": "Sunday Oct 31, 2021 at 22:11 GMT",
        "merged_at": "Sunday Oct 31, 2021 at 22:11 GMT"
    },
    {
        "key": "WT-3445",
        "number": 7124,
        "state": "closed",
        "title": "Revert \"WT-3445 Add multiple tables to format tester.\"",
        "body": "Reverts wiredtiger/wiredtiger#7079",
        "base_ref": "develop",
        "created_at": "Friday Oct 29, 2021 at 01:16 GMT",
        "updated_at": "Friday Oct 29, 2021 at 01:17 GMT",
        "closed_at": "Friday Oct 29, 2021 at 01:17 GMT",
        "merged_at": "Friday Oct 29, 2021 at 01:17 GMT"
    },
    {
        "key": "04-",
        "number": 7121,
        "state": "closed",
        "title": "Switch Evergreen performance tests to use ubuntu2004-large instance",
        "body": "WT-8298 Switch Evergreen performance tests to use ubuntu2004-large instance",
        "base_ref": "develop",
        "created_at": "Thursday Oct 28, 2021 at 06:08 GMT",
        "updated_at": "Thursday Oct 28, 2021 at 06:35 GMT",
        "closed_at": "Thursday Oct 28, 2021 at 06:35 GMT",
        "merged_at": "Thursday Oct 28, 2021 at 06:35 GMT"
    },
    {
        "key": "WT-8283",
        "number": 7120,
        "state": "closed",
        "title": "WT-8283 Use the new verbose messaging API in the compact subsystem",
        "body": "Given the recent introduction of the new verbose messaging API, allowing verbosity levels to be associated with messages & categories, this change re-visits the verbose messages in the compact subsystem. More specifically, this change goes over the compact verbose messages and assigns explicit verbosity levels. This differentiating messages into `debug`, `informational` and `warning` verbosity levels.\r\n\r\nI tried to apply the following reasoning when assigning levels:\r\n- `debug`: Highly verbose messages, only useful for debugging purposes\r\n- `info`: Informational style messages, usually containing important runtime status information.\r\n- `warning`: Potentially incorrect/invalid behaviour (though not necessarily an error that requires a DB restart)\r\n- `error`: Failure (something pretty wrong happened, usually requires a DB restart).\r\n\r\nI was fairly conservative with the level assignments, but let me know if you think anything should be moved around!",
        "base_ref": "develop",
        "created_at": "Thursday Oct 28, 2021 at 05:59 GMT",
        "updated_at": "Friday Oct 29, 2021 at 03:16 GMT",
        "closed_at": "Friday Oct 29, 2021 at 03:16 GMT",
        "merged_at": "Friday Oct 29, 2021 at 03:16 GMT"
    },
    {
        "key": "WT-8284",
        "number": 7119,
        "state": "closed",
        "title": "WT-8284 Improve verbose logging for transactions when rollback is required",
        "body": "Added debug verbose messages related to transactions that need to be rolled back.\r\nWe decided to keep to the ones listed in the ticket and are hoping for a dynamic approach. Every time additional verbose messages are required during an investigation, testing, etc, we should add them in the same ticket.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 28, 2021 at 05:30 GMT",
        "updated_at": "Monday Nov 01, 2021 at 09:52 GMT",
        "closed_at": "Monday Nov 01, 2021 at 09:52 GMT",
        "merged_at": "Monday Nov 01, 2021 at 09:52 GMT"
    },
    {
        "key": "WT-8280",
        "number": 7116,
        "state": "closed",
        "title": "WT-8280 Temporarily disable prefix assert",
        "body": "Temporarily disable the prefix stat, since the WT-7912 bug is causing the assert to be flaky.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 27, 2021 at 22:17 GMT",
        "updated_at": "Thursday Oct 28, 2021 at 01:15 GMT",
        "closed_at": "Thursday Oct 28, 2021 at 01:15 GMT",
        "merged_at": "Thursday Oct 28, 2021 at 01:15 GMT"
    },
    {
        "key": "WT-8281",
        "number": 7114,
        "state": "closed",
        "title": "WT-8281 Fix out of order timestamp with HS stop timestamp",
        "body": "Handle the scenarios of new history store insert start timestamp\r\nis an out of order to the existing history store entry stop timestamp\r\nby fixing its stop timestamp before procedding to correct any\r\nnewer updates.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 27, 2021 at 07:44 GMT",
        "updated_at": "Friday Oct 29, 2021 at 05:16 GMT",
        "closed_at": "Friday Oct 29, 2021 at 05:16 GMT",
        "merged_at": "Friday Oct 29, 2021 at 05:16 GMT"
    },
    {
        "key": "WT-7993",
        "number": 7113,
        "state": "closed",
        "title": "WT-7993 If gathering handles and not in aggressive eviction mode, have eviction sleep to let checkpoint grab a contentious spinlock (v4.2 backport).",
        "body": "\u2026e (#6954)\r\n\r\n* WT-7993 If gathering handles and not in aggressive eviction mode, have\r\neviction sleep to let checkpoint grab a contentious spinlock.\r\n\r\n* Add statistic for sleeping in eviction.\r\n\r\n* Use CONN only stat macro.\r\n\r\n* Accumulate sleeps in local counter and set stat at end.\r\n\r\n* Remove throttling in many dhandle test.\r\n\r\n* Go back to statistics increment rather than set.\r\nSetting it from a local variable made it stay at zero\r\nimplying we returned from the function from within the loop.\r\n\r\n* Reinstall the insert throttle for workgen.\r\n\r\n(cherry picked from commit 13f1d4ae9e50ae840b1e327d91b3c8c6f43d962a)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Oct 27, 2021 at 04:59 GMT",
        "updated_at": "Thursday Oct 28, 2021 at 21:40 GMT",
        "closed_at": "Thursday Oct 28, 2021 at 21:40 GMT",
        "merged_at": "Thursday Oct 28, 2021 at 21:40 GMT"
    },
    {
        "key": "WT-8285",
        "number": 7111,
        "state": "closed",
        "title": "WT-8285 Simplify CMake's usage of third party libraries",
        "body": "The intent of this PR is to mainly simplify and clean up how we link third party libraries in CMake. These changes mainly include:\r\n* Removal of global includes in the CMake project: Specifically cleans up the `config_lib` helper to avoid appending a libraries include path to the global CMake project scope. We ideally only want to use the include path if the library is going to be linked to a target (i.e. `config_lib` is only for finding a library). As such updated `config_lib` to export an additional configuration variable containing the libraries include paths. This allowing us to explicitly use the include paths if we are actually going to link the library.\r\n* Create third-party imported library targets: This change centralizes the associated paths under a single shared library target to avoid de referencing the 'HAVE_LIB_X' and 'HAVE_LIB_X_INCLUDES' across the project. This greatly simplifying the dependencies of a library to a single target, which in turn can be easily linked across the CMake project. \r\n* Split library dependencies for wiredtiger over its PUBLIC/PRIVATE interface: Currently all targets that link against the libwiredtiger target transitively inherit any library wiredtiger links against. Ideally we want to make this more explicit, controlling whether a binary actually needs to inherit a particular library.\r\n* Avoid linking tcmalloc in our test binaries: If libwiredtiger is already using tcmalloc, linking tcmalloc again into the binary is potentially error prone. This could result in two instances of tcmalloc running. A majority of our tests are\r\nsimple enough that we generally don't need tcmalloc running in the test binaries, particularly if wiredtiger is already using tcmalloc.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 27, 2021 at 02:42 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 04:55 GMT",
        "closed_at": "Wednesday Oct 27, 2021 at 04:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6022",
        "number": 7110,
        "state": "closed",
        "title": "Revert \"WT-6022 NVRAM cache\"",
        "body": "Reverts wiredtiger/wiredtiger#7047",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 27, 2021 at 02:16 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 02:17 GMT",
        "closed_at": "Wednesday Oct 27, 2021 at 02:17 GMT",
        "merged_at": "Wednesday Oct 27, 2021 at 02:17 GMT"
    },
    {
        "key": "WT-8280",
        "number": 7108,
        "state": "closed",
        "title": "WT-8280 Tune down entries traversal for search_near_01 cpp test",
        "body": "This ticket is a quick solution to make our CI system green. A quick hack fix before the known problem WT-7912 is fixed.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 27, 2021 at 01:44 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 22:10 GMT",
        "closed_at": "Wednesday Oct 27, 2021 at 22:04 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8255",
        "number": 7106,
        "state": "closed",
        "title": "WT-8255 Python suite test for 'legacy' verbose configuration uses",
        "body": "Added a python suite test to assert basic uses of the verbose configuration API work as intended i.e. passing single & multiple valid and invalid verbose categories. This test is mainly focused on uses of the interface prior to the introduction of verbosity levels, ensuring 'legacy'-style uses of the interface are still supported.\r\n(An additional test will be introduced in WT-8256, to test the new verbosity levels interface)",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 26, 2021 at 23:30 GMT",
        "updated_at": "Thursday Oct 28, 2021 at 05:07 GMT",
        "closed_at": "Thursday Oct 28, 2021 at 05:07 GMT",
        "merged_at": "Thursday Oct 28, 2021 at 05:07 GMT"
    },
    {
        "key": "WT-8254",
        "number": 7104,
        "state": "closed",
        "title": "WT-8254 Implementation of new WiredTiger internal API to define verbose messages with an associated severity level",
        "body": "- Creation of new verbose macros that consider a verbosity level and a category\r\n- Those definitions are defined in a new file `verbose.h`\r\n\r\nNote:\r\nCurrently, those macros are added to the s_define.list as they are not used. They will be removed from that list as soon as they are being used (could be done in WT-8283)",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 26, 2021 at 07:57 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 11:32 GMT",
        "closed_at": "Wednesday Oct 27, 2021 at 11:32 GMT",
        "merged_at": "Wednesday Oct 27, 2021 at 11:32 GMT"
    },
    {
        "key": "WT-8046",
        "number": 7103,
        "state": "closed",
        "title": "WT-8046 Keep non persistent configuration settings between wiredtiger_open calls in test/format",
        "body": "Some configuration settings don't persist between `wiredtiger_open` calls:\r\n\r\n- The timing stress settings, created `configure_timing_stress`\r\n- `error_prefix` and `mmap_all` too",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 26, 2021 at 00:43 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 00:32 GMT",
        "closed_at": "Wednesday Oct 27, 2021 at 00:32 GMT",
        "merged_at": "Wednesday Oct 27, 2021 at 00:32 GMT"
    },
    {
        "key": "WT-8271",
        "number": 7100,
        "state": "closed",
        "title": "WT-8271 Capture git branch and commit status in perf test result output",
        "body": "Added Git branch and commit status into the performance test results output. Filter stats from the output for which every collected value is 0.",
        "base_ref": "develop",
        "created_at": "Monday Oct 25, 2021 at 21:03 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 01:15 GMT",
        "closed_at": "Wednesday Oct 27, 2021 at 01:15 GMT",
        "merged_at": "Wednesday Oct 27, 2021 at 01:15 GMT"
    },
    {
        "key": "WT-8270",
        "number": 7099,
        "state": "closed",
        "title": "WT-8270 Updating the time window clear obsolete stage of reconciliation to be consistent wit\u2026",
        "body": "\u2026h other global visibility checks",
        "base_ref": "develop",
        "created_at": "Monday Oct 25, 2021 at 03:09 GMT",
        "updated_at": "Tuesday Oct 26, 2021 at 02:41 GMT",
        "closed_at": "Tuesday Oct 26, 2021 at 02:41 GMT",
        "merged_at": "Tuesday Oct 26, 2021 at 02:41 GMT"
    },
    {
        "key": "WT-8196",
        "number": 7094,
        "state": "closed",
        "title": "WT-8196 Add warning options to the cppsuite files",
        "body": "- This ticket adds a set of warning options when compiling our cpp files.\r\n- The changes impact the autoconf files as well as the CMake files.\r\n- I tried to break the changes down in multiple commit so it is easier to digest.\r\n\r\n**Please read**:\r\nMy first attempt at fixing the warnings related to -Wreorder did not work out as expected, please disregard the commit e0bb9ce6bf0d587e47f5f5ecf70e98e811cbfdec. It was later reverted by 7ef8f697f6f1f63008bc81f8fe983ca30f06e52e. The second attempt that looks better was done in 5403362dbfcfcb3f7d53c4007d05aa7e654a8105, please review this one.\r\n\r\n_Note:\r\nSome flags were descoped, a dedicated ticket has been created: WT-8247\r\nSince fixing the warnings related to workgen files is out of scope, a dedicated ticket has been created: WT-8263\r\nI reverted c9b5808ad5b7f99da48f9c51de5c275ba25c3d75 (Fix typos) as it will be addressed in a different ticket: WT-8266_",
        "base_ref": "develop",
        "created_at": "Thursday Oct 21, 2021 at 15:01 GMT",
        "updated_at": "Tuesday Oct 26, 2021 at 04:11 GMT",
        "closed_at": "Tuesday Oct 26, 2021 at 04:11 GMT",
        "merged_at": "Tuesday Oct 26, 2021 at 04:11 GMT"
    },
    {
        "key": "WT-8074",
        "number": 7092,
        "state": "closed",
        "title": "WT-8074 Panic in reconciliation if the call to rec_write_wrapup fails.",
        "body": "Summary:\r\n\r\n1. The main change is in rec_write.c where we **panic** if the call to `__rec_write_wrapup` fails, and if any subsequent call fails. **This does not take into account whether history store reconciliation was enabled or not**, it could be extended to consider that.\r\n2. The time window clearing function was checking global visibility incorrectly and has been updated, it has been moved to `reconcile_inline.h`.\r\n3. Two new global visibility checking macros have been added to `reconcile_inline.h` these are different from the ones in `txn_inline.h` as they check against the global state saved on the reconciliation structure.\r\n3. As a result of the panic I've removed 2 failpoints as they are no longer meaningful. This has resulted in changes to **at least 10** files, including the removal of tests from the evergreen.yml.\r\n3. I've added a failpoint to rec_col.c to make it consistent with rec_row.c.\r\n4. The python test `test_empty_value` has been disabled as the change to the time window clearing function breaks it. ",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 20, 2021 at 23:11 GMT",
        "updated_at": "Thursday Nov 25, 2021 at 21:48 GMT",
        "closed_at": "Thursday Nov 25, 2021 at 21:48 GMT",
        "merged_at": "Thursday Nov 25, 2021 at 21:48 GMT"
    },
    {
        "key": "WT-7694",
        "number": 7091,
        "state": "closed",
        "title": "WT-7694 Fixes to have bucket prefixes properly used in object names.",
        "body": "@ddanderson I cannot yet get `test_tiered10.py` past the wiredtiger_open call because I'm trying to open with the local_store extension in a subdirectory of `test_tiered10.0/`. Otherwise this is ready for review. ",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 20, 2021 at 18:52 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 12:23 GMT",
        "closed_at": "Wednesday Oct 27, 2021 at 12:23 GMT",
        "merged_at": "Wednesday Oct 27, 2021 at 12:23 GMT"
    },
    {
        "key": "WT-8233",
        "number": 7090,
        "state": "closed",
        "title": "WT-8233 Fix data-validation-stress-test-checkpoint ignoring failures",
        "body": "Changed bash script to wait on specific process, this allows us to check the error code when the process is finished.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 20, 2021 at 01:02 GMT",
        "updated_at": "Wednesday Oct 20, 2021 at 02:44 GMT",
        "closed_at": "Wednesday Oct 20, 2021 at 02:44 GMT",
        "merged_at": "Wednesday Oct 20, 2021 at 02:44 GMT"
    },
    {
        "key": "WT-8194",
        "number": 7089,
        "state": "closed",
        "title": "WT-8194 Fix ASAN leaks when tcmalloc is enabled",
        "body": "There was a leak memory error coming from TCMalloc library. I have added a suppression file and have suppressed that leak from coming.\r\nI have also changed free() to __wt_free() since WT mallocs the memory with tcmalloc, but the application frees with default allocator.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 19, 2021 at 22:24 GMT",
        "updated_at": "Thursday Oct 21, 2021 at 00:04 GMT",
        "closed_at": "Thursday Oct 21, 2021 at 00:04 GMT",
        "merged_at": "Thursday Oct 21, 2021 at 00:04 GMT"
    },
    {
        "key": "WT-8178",
        "number": 7087,
        "state": "closed",
        "title": "WT-8178 Push results to Cedar/Evergreen",
        "body": "The main purpose of this ticket is to include `perf.send` in `evergreen.yml` to send the output file (statistics) generated from `wt_perf_run.py` to evergreen for the visualization of the data.\r\n\r\nThe format accepted by evergreen is not accepted by Atlas and vice-versa, hence, we need two output files, one for evergreen and another for Atlas.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 19, 2021 at 06:17 GMT",
        "updated_at": "Monday Oct 25, 2021 at 06:04 GMT",
        "closed_at": "Monday Oct 25, 2021 at 06:04 GMT",
        "merged_at": "Monday Oct 25, 2021 at 06:04 GMT"
    },
    {
        "key": "WT-8151",
        "number": 7084,
        "state": "closed",
        "title": "Revert \"WT-8151 WiredTiger crashes if commit timestamp is in between any previous durable and commit timestamps\"",
        "body": "Reverts wiredtiger/wiredtiger#7071",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 19, 2021 at 02:10 GMT",
        "updated_at": "Tuesday Oct 19, 2021 at 02:56 GMT",
        "closed_at": "Tuesday Oct 19, 2021 at 02:56 GMT",
        "merged_at": "Tuesday Oct 19, 2021 at 02:56 GMT"
    },
    {
        "key": "WT-7820",
        "number": 7083,
        "state": "closed",
        "title": "WT-7820 Retrieve the on-disk durable timestamp to compare",
        "body": "Retrieve the on-disk durable timestamp to compare the\r\ntimestamp ordering, consistency and etc.",
        "base_ref": "develop",
        "created_at": "Monday Oct 18, 2021 at 06:27 GMT",
        "updated_at": "Tuesday Oct 19, 2021 at 01:44 GMT",
        "closed_at": "Tuesday Oct 19, 2021 at 01:44 GMT",
        "merged_at": "Tuesday Oct 19, 2021 at 01:44 GMT"
    },
    {
        "key": "WT-8004",
        "number": 7082,
        "state": "closed",
        "title": "WT-8004 Create a read order for the architecture guide",
        "body": "Organized the Architecture Guide pages into a user-friendly ordering.",
        "base_ref": "develop",
        "created_at": "Monday Oct 18, 2021 at 05:59 GMT",
        "updated_at": "Thursday Oct 21, 2021 at 02:51 GMT",
        "closed_at": "Thursday Oct 21, 2021 at 02:51 GMT",
        "merged_at": "Thursday Oct 21, 2021 at 02:51 GMT"
    },
    {
        "key": "WT-8188",
        "number": 7080,
        "state": "closed",
        "title": "Revert \"WT-8188 Use new stats that track progress of compact operation\"",
        "body": "Reverts wiredtiger/wiredtiger#7073",
        "base_ref": "develop",
        "created_at": "Monday Oct 18, 2021 at 02:29 GMT",
        "updated_at": "Monday Oct 18, 2021 at 02:46 GMT",
        "closed_at": "Monday Oct 18, 2021 at 02:46 GMT",
        "merged_at": "Monday Oct 18, 2021 at 02:46 GMT"
    },
    {
        "key": "WT-8192",
        "number": 7076,
        "state": "closed",
        "title": "WT-8192 Extend the verbose API to support the assignment of verbosity levels per event category",
        "body": "The `verbose` configuration string (used when configuring a WiredTiger connection) currently only supports passing a list of event categories to indicate what verbose messages should be enabled. We want to optionally provide the ability to associate a verbosity level to any event category defined under the  `verbose` configuration. \r\n\r\nFor example, the new verbose severity levels can be passed as:  \r\n```\r\nverbose = [checkpoint:1,rts:0,api]\r\n```\r\n\r\nTo avoid introducing breaking changes to current uses of the verbose configuration API, when a verbose event is passed without a verbosity level, we will interpret the verbosity levels of the given event to be `WT_VERBOSE_DEBUG` e.g. `api` in the above example.\r\n\r\nThis main changes this PR specifically introduces:\r\n- Definitions for the new verbosity levels: `DEBUG` (1), `INFO` (0), `WARNING` (-1), `ERROR` (-2).\r\n- Refactors verbosity event definitions into an enum. This redefining the event values as an enumeration of identifiers that can be used to uniquely access a given events verbosity.\r\n- Extends the verbose configuration initialization to parse verbosity levels per event definition.\r\n    -  Passing verbosity levels remains optional, still supporting the pre-existing legacy verbose configuration definition style (where no level is defined for a given event). In this case the event will default to the `WT_VERBOSE_DEBUG` option.\r\n    - All other unspecified events will default to the `WT_VERBOSE_INFO` level. \r\n    - External levels are bounded to `WT_VERBOSE_INFO` and `WT_VERBOSE_DEBUG`. We don't want to mask `WT_VERBOSE_WARNING` & `WT_VERBOSE_ERROR` verbosity levels as that could contain valuable diagnostic info.\r\n- Added verbose helper macro `__wt_verbose_with_events`: Since moving out the event definitions into an enum, it no longer is valid to treat the definitions as flag/mask values. As such uses of `__wt_verbose` will be limited to one event category per message. In order to still accommodate the uses of `__wt_verbose` that would logically `OR` multiple events, we've added an extra verbose helper, `__wt_verbose_with_events`. This accepting a set of verbose events as a compound-literal array. The macro will display a verbose message if at least one event in the set satisfies the required verbosity level.\r\n\r\nThe main intention behind this PR/ticket is to to create the initial framework for the verbose messaging project. As such, this PR does not introduce the following (being left to future tickets):\r\n* Redefinition of messages and uses of the new verbosity levels. For the time being, all verbose messages are assigned to `WT_VERBOSE_DEBUG` .\r\n* An internal API to define messages with the new verbosity levels. The focus in this PR was to just initially support our current uses of `__wt_verbose`.\r\n* Changes to the verbose messaging string format & event handler.",
        "base_ref": "develop",
        "created_at": "Friday Oct 15, 2021 at 03:05 GMT",
        "updated_at": "Monday Oct 25, 2021 at 03:46 GMT",
        "closed_at": "Monday Oct 25, 2021 at 03:46 GMT",
        "merged_at": "Monday Oct 25, 2021 at 03:46 GMT"
    },
    {
        "key": "WT-8228",
        "number": 7074,
        "state": "closed",
        "title": "WT-8228 Add variable-length column store support to the compact tests.",
        "body": "Updated two CSuite tests: \r\n* wt7989_compact_checkpoint \r\n* wt8057_compact_stress",
        "base_ref": "develop",
        "created_at": "Thursday Oct 14, 2021 at 06:14 GMT",
        "updated_at": "Monday Oct 18, 2021 at 05:33 GMT",
        "closed_at": "Monday Oct 18, 2021 at 05:33 GMT",
        "merged_at": "Monday Oct 18, 2021 at 05:33 GMT"
    },
    {
        "key": "WT-8221",
        "number": 7072,
        "state": "closed",
        "title": "WT-8221 Compare write generation number before performing RTS",
        "body": "Due to the use of global checkpoint snapshot as a mechanism to\r\ndecide to consider to perform RTS on a table and this global\r\ncheckpoint snapshot varies for consecutive restarts. RTS must\r\nconsider verifying the write generation number with the last\r\ncheckpoint connection level base write generation before deciding\r\nwhether the table has more updates than the checkpoint snapshot.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 14, 2021 at 04:57 GMT",
        "updated_at": "Sunday Oct 17, 2021 at 23:24 GMT",
        "closed_at": "Sunday Oct 17, 2021 at 23:24 GMT",
        "merged_at": "Sunday Oct 17, 2021 at 23:24 GMT"
    },
    {
        "key": "WT-5743",
        "number": 7070,
        "state": "closed",
        "title": "WT-5743 Rewrite cells when the transaction ids are cleared for VLCS",
        "body": "I/we had thought that this was not necessary, but it turns out that it is in some cases for column-internal pages, so do that.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 13, 2021 at 01:46 GMT",
        "updated_at": "Thursday Oct 14, 2021 at 08:49 GMT",
        "closed_at": "Wednesday Oct 13, 2021 at 03:25 GMT",
        "merged_at": "Wednesday Oct 13, 2021 at 03:25 GMT"
    },
    {
        "key": "WT-8147",
        "number": 7069,
        "state": "closed",
        "title": "WT-8147 Detect invalid syntax in cppsuite configs",
        "body": "Updated the cppsuite parsing logic to detect syntax errors when defining key/value definitions. This changes detects and raises errors for the following syntax mistakes:\r\n- If we start parsing a new key without having resolved the value of the previous key i.e. due to a missing comma ','.\r\n- Incomplete key/value pair definitions i.e due to a missing equals '='.\r\n- Detect when empty string is used for a key.\r\n- Detect when empty string is used for a value.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 12, 2021 at 04:44 GMT",
        "updated_at": "Wednesday Oct 13, 2021 at 04:37 GMT",
        "closed_at": "Wednesday Oct 13, 2021 at 04:37 GMT",
        "merged_at": "Wednesday Oct 13, 2021 at 04:37 GMT"
    },
    {
        "key": "WT-8189",
        "number": 7067,
        "state": "closed",
        "title": "WT-8189 Add information useful for compact analysis to WT verbose messaging",
        "body": "* Added used space statistics\r\n* Added total reviewed/skipped/written pages number to each iteration message\r\n* Added message for files smaller than 1MB. These files are skipped.",
        "base_ref": "develop",
        "created_at": "Monday Oct 11, 2021 at 05:01 GMT",
        "updated_at": "Monday Oct 18, 2021 at 06:13 GMT",
        "closed_at": "Monday Oct 18, 2021 at 06:13 GMT",
        "merged_at": "Monday Oct 18, 2021 at 06:13 GMT"
    },
    {
        "key": "WT-6022",
        "number": 7065,
        "state": "closed",
        "title": "WT-6022 Investigate how to restructure WT to use NVRAM as a cache",
        "body": "Hook the NVRAM block cache code into format, supporting the checkpoint_write_bypass, eviction_on, size and  write_allocate configuration options.\r\n\r\nRemove explicit newline characters in __wt_verbose() messages.",
        "base_ref": "wt-6022-nvram-cache",
        "created_at": "Friday Oct 08, 2021 at 20:52 GMT",
        "updated_at": "Friday Oct 08, 2021 at 20:54 GMT",
        "closed_at": "Friday Oct 08, 2021 at 20:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8214",
        "number": 7064,
        "state": "closed",
        "title": "WT-8214 Only publish the docs from the WiredTiger develop Evergreen project",
        "body": "The failure reported in the ticket was due to a failure of \"git push\" under the WiredTiger (mongodb-5.0) or WiredTiger (mongodb-4.4) project, as by design we only expect the task to take effect under the WiredTiger (develop) project. \r\n\r\nThe solution is to add a check in the 2nd shell command of the `update wiredtiger docs` function, and only run \"git push\" if the task is running under the WiredTiger (develop) Evergreen project. ",
        "base_ref": "develop",
        "created_at": "Friday Oct 08, 2021 at 04:08 GMT",
        "updated_at": "Friday Oct 08, 2021 at 05:03 GMT",
        "closed_at": "Friday Oct 08, 2021 at 05:03 GMT",
        "merged_at": "Friday Oct 08, 2021 at 05:03 GMT"
    },
    {
        "key": "WT-8067",
        "number": 7062,
        "state": "closed",
        "title": "Revert \"WT-8067 Fix the code that ensures writing the newest history store value as a full value\"",
        "body": "Reverts wiredtiger/wiredtiger#6984",
        "base_ref": "develop",
        "created_at": "Friday Oct 08, 2021 at 00:25 GMT",
        "updated_at": "Friday Oct 08, 2021 at 00:26 GMT",
        "closed_at": "Friday Oct 08, 2021 at 00:26 GMT",
        "merged_at": "Friday Oct 08, 2021 at 00:26 GMT"
    },
    {
        "key": "WT-7693",
        "number": 7060,
        "state": "closed",
        "title": "WT-7693 Fix local store and customize_file_system to support bucket",
        "body": "prefix.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 07, 2021 at 19:11 GMT",
        "updated_at": "Thursday Oct 07, 2021 at 19:27 GMT",
        "closed_at": "Thursday Oct 07, 2021 at 19:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8026",
        "number": 7059,
        "state": "closed",
        "title": "WT-8026 Run PPC/zSeries/macOS mainline builds less frequently in Evergreen",
        "body": "Right now we have a project-level \"batchtime\" set to 0 in the Evergreen \"WiredTiger (develop)\" project, which means by default all build variants would get scheduled for each commit unless there's a different build-variant-level \"batchtime\" setting (which overwrites the project-level setting). As PPC, zSeries, and macOS all have limited building resources, to reduce pressure on those Evergreen distro pools, we could run our corresponding build variants less frequently (once every a few commits) by setting a non-zero build-variant-level \"batchtime\".\r\n\r\nIn order to keep test failure triaging easy, the [stepback feature](https://github.com/evergreen-ci/evergreen/wiki/Project-Configuration-Files#stepback) will be turned on at the project level, so that the Evergreen system could automatically schedule the same task in the previous commit build in case of a task failure, saving the manual efforts to pinpoint the offending commit for the given failing task.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 07, 2021 at 04:57 GMT",
        "updated_at": "Thursday Oct 07, 2021 at 23:40 GMT",
        "closed_at": "Thursday Oct 07, 2021 at 23:40 GMT",
        "merged_at": "Thursday Oct 07, 2021 at 23:40 GMT"
    },
    {
        "key": "WT-8116",
        "number": 7058,
        "state": "closed",
        "title": "WT-8116 Fix issues related to inheritance in the cpp testing framework",
        "body": "An initial PR to get a first round of feedback. I am currently unsure about how we should go about creating a destructor inside the connection_manager class itself rather than having it in the test.h code. It seems like the static instance of this persists and is not implicitly deleted. ",
        "base_ref": "develop",
        "created_at": "Thursday Oct 07, 2021 at 04:02 GMT",
        "updated_at": "Thursday Oct 14, 2021 at 03:06 GMT",
        "closed_at": "Thursday Oct 14, 2021 at 03:06 GMT",
        "merged_at": "Thursday Oct 14, 2021 at 03:06 GMT"
    },
    {
        "key": "WT-7250",
        "number": 7056,
        "state": "closed",
        "title": "WT-7250 Fix the test to perform explicit eviction instead of relying on low cache size",
        "body": "Instead of relying on low cache size to trigger the eviction in\r\nparallel to the checkpoint, better to control the eviction explicitly\r\nwith the debug cursor",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 06, 2021 at 03:18 GMT",
        "updated_at": "Thursday Oct 07, 2021 at 03:23 GMT",
        "closed_at": "Thursday Oct 07, 2021 at 03:23 GMT",
        "merged_at": "Thursday Oct 07, 2021 at 03:23 GMT"
    },
    {
        "key": "WT-5009",
        "number": 7055,
        "state": "closed",
        "title": "WT-5009 Migrate wiredtiger-perf-lsm tests to Evergreen",
        "body": "Added the remaining wiredtiger-perf-lsm tests (perf-test-parallel-pop-lsm and perf-test-update-lsm) to evergreen.yml.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 06, 2021 at 01:49 GMT",
        "updated_at": "Wednesday Oct 06, 2021 at 04:39 GMT",
        "closed_at": "Wednesday Oct 06, 2021 at 04:39 GMT",
        "merged_at": "Wednesday Oct 06, 2021 at 04:39 GMT"
    },
    {
        "key": "WT-8204",
        "number": 7054,
        "state": "closed",
        "title": "WT-8204 Fix possible race condition in \"wt7989_compact_checkpoint\" CSuite test",
        "body": "Spawn compact thread from checkpoint thread to make sure both threads are ready for the synced start.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 06, 2021 at 01:22 GMT",
        "updated_at": "Thursday Oct 07, 2021 at 00:27 GMT",
        "closed_at": "Thursday Oct 07, 2021 at 00:27 GMT",
        "merged_at": "Thursday Oct 07, 2021 at 00:27 GMT"
    },
    {
        "key": "WT-8199",
        "number": 7053,
        "state": "closed",
        "title": "WT-8199 Make s_all accept Python PEP8 compliant line breaks",
        "body": "* Removed Python checking from s_whitespace as it was rejecting PEP8 compliant line-break usage.\r\n* Modified the wtperf_run_py Python code to be PEP8 compatible, as checked by the pycodestyle tool. This includes introducing double line-breaks where required to comply with the PEP8 requirement to \"Surround top-level function and class definitions with two blank lines.\".",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 06, 2021 at 01:12 GMT",
        "updated_at": "Wednesday Oct 06, 2021 at 03:27 GMT",
        "closed_at": "Wednesday Oct 06, 2021 at 03:27 GMT",
        "merged_at": "Wednesday Oct 06, 2021 at 03:27 GMT"
    },
    {
        "key": "WT-8203",
        "number": 7052,
        "state": "closed",
        "title": "WT-8203 Fix the layering violation in accessing the page",
        "body": "Mark the page dirty after the prepared updates are resolved can solve\r\nthe problem, so there is no need to set it in the eviction failure code flow.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 06, 2021 at 01:08 GMT",
        "updated_at": "Tuesday Oct 12, 2021 at 23:27 GMT",
        "closed_at": "Tuesday Oct 12, 2021 at 23:27 GMT",
        "merged_at": "Tuesday Oct 12, 2021 at 23:27 GMT"
    },
    {
        "key": "WT-7984",
        "number": 7051,
        "state": "closed",
        "title": "WT-7984 Fix a bug that could cause a checkpoint to omit a page of data (v4.2 backport) (#6926)",
        "body": "* WT-7984 Fix a bug that could cause a checkpoint to omit a page of data.\r\n\r\nHere are the steps involved:\r\n\r\n1. page P exists on disk with address A and is clean\r\n2. checkpoint starts running\r\n3. page P is modified, setting first_dirty_txn ahead of the checkpoint\r\n4. eviction chooses P to evict (in some tree ahead of the checkpoint)\r\n5. eviction reconciles P\r\n6. the main part of reconciliation succeeds but _rec_hs_wrapup fails\r\n   with EBUSY\r\n7. at this point, ref->addr == NULL && mod->rec_result == 0 and the\r\n   block for A has been freed, the page is dirty but first_dirty_txn is\r\n   ahead of the checkpoint\r\n8. checkpoint skips writing P, and when it writes P\u2019s parent, it\r\n   considers P, sees the missing address and takes the WT_CHILD_IGNORE\r\n   path \u2014 i.e., nothing is written and the original content of P (from\r\n   step 1) is missing from the checkpoint\r\n\r\nThe fix is to reorder __rec_write_wrapup to call __rec_hs_wrapup before\r\nit clears out the address.\r\n\r\n* Add an assert that reconciliation doesn't free the already written image to disk\r\n\r\nCo-authored-by: Luke Pearson <luke.pearson@mongodb.com>\r\nCo-authored-by: Haribabu Kommi <haribabu.kommi@mongodb.com>\r\n(cherry picked from commit 405b72fc4387a15a40718af02d726cfd9eeaf0e2)",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Oct 05, 2021 at 06:02 GMT",
        "updated_at": "Tuesday Oct 05, 2021 at 22:00 GMT",
        "closed_at": "Tuesday Oct 05, 2021 at 22:00 GMT",
        "merged_at": "Tuesday Oct 05, 2021 at 22:00 GMT"
    },
    {
        "key": "WT-8030",
        "number": 7048,
        "state": "closed",
        "title": "WT-8030 Add sanity checks related to eviction trigger setting",
        "body": "Added sanity checks:\r\n- `eviction_dirty_target` has to be less than `eviction_dirty_trigger`\r\n- `eviction_updates_target` has to be less than `eviction_updates_trigger`\r\n\r\nFixed the existing tests and added new ones to check the new changes.\r\n\r\n**Note**: WT-8030 only mentions `eviction_dirty_target` and `eviction_dirty_trigger` but I thought it would make sense to also fix `eviction_updates_target` and `eviction_updates_trigger`. If you think it should be part of another ticket, please let me know and I will revert.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 05, 2021 at 00:44 GMT",
        "updated_at": "Tuesday Oct 19, 2021 at 22:26 GMT",
        "closed_at": "Tuesday Oct 19, 2021 at 22:26 GMT",
        "merged_at": "Tuesday Oct 19, 2021 at 22:26 GMT"
    },
    {
        "key": "WT-6022",
        "number": 7047,
        "state": "closed",
        "title": "WT-6022 NVRAM cache",
        "body": "Add a NVRAM-resident block cache.",
        "base_ref": "develop",
        "created_at": "Monday Oct 04, 2021 at 23:49 GMT",
        "updated_at": "Wednesday Oct 27, 2021 at 02:16 GMT",
        "closed_at": "Tuesday Oct 26, 2021 at 21:57 GMT",
        "merged_at": "Tuesday Oct 26, 2021 at 21:57 GMT"
    },
    {
        "key": "WT-8070",
        "number": 7046,
        "state": "closed",
        "title": "WT-8070 Remove discrepancy between prefix_key and prefix_search",
        "body": "This removes the discrepancy we had as we were using both `prefix_search` and `prefix_key` in our code.\r\nIt was decided in WT-8070 to keep `prefix_search`.",
        "base_ref": "develop",
        "created_at": "Sunday Oct 03, 2021 at 23:29 GMT",
        "updated_at": "Tuesday Oct 05, 2021 at 22:20 GMT",
        "closed_at": "Tuesday Oct 05, 2021 at 22:20 GMT",
        "merged_at": "Tuesday Oct 05, 2021 at 22:20 GMT"
    },
    {
        "key": "WT-8115",
        "number": 7044,
        "state": "closed",
        "title": "WT-8115 Define macros only when necessary in cpp files",
        "body": "The macros are `__STDC_LIMIT_MACROS` and `__STDC_FORMAT_MACROS`, we now check if they are already defined before defining them.",
        "base_ref": "develop",
        "created_at": "Sunday Oct 03, 2021 at 22:38 GMT",
        "updated_at": "Tuesday Oct 05, 2021 at 00:38 GMT",
        "closed_at": "Tuesday Oct 05, 2021 at 00:38 GMT",
        "merged_at": "Tuesday Oct 05, 2021 at 00:38 GMT"
    },
    {
        "key": "WT-8101",
        "number": 7043,
        "state": "closed",
        "title": "WT-8101 Enable diagnostic mode for the CPP tests in evergreen",
        "body": "- Added `--enable-diagnostic` to `cppsuite-stress-tests` in evergreen\r\n- Alphabetized the flags",
        "base_ref": "develop",
        "created_at": "Sunday Oct 03, 2021 at 22:34 GMT",
        "updated_at": "Tuesday Oct 05, 2021 at 03:38 GMT",
        "closed_at": "Tuesday Oct 05, 2021 at 03:37 GMT",
        "merged_at": "Tuesday Oct 05, 2021 at 03:37 GMT"
    },
    {
        "key": "WT-8059",
        "number": 7042,
        "state": "closed",
        "title": "WT-8059 Add a check in salvage when no overflow items are found",
        "body": "- Added a check on `ss->ovfl` to avoid passing a NULL pointer to `bsearch` when there are no overflow items.",
        "base_ref": "develop",
        "created_at": "Saturday Oct 02, 2021 at 03:20 GMT",
        "updated_at": "Sunday Oct 03, 2021 at 22:23 GMT",
        "closed_at": "Sunday Oct 03, 2021 at 22:23 GMT",
        "merged_at": "Sunday Oct 03, 2021 at 22:23 GMT"
    },
    {
        "key": "WT-7885",
        "number": 7039,
        "state": "closed",
        "title": "WT-7885 Ensure WiredTiger testing uses tcmalloc where possible",
        "body": "Currently evergreen builds don't have gperftools binaries installed in the machines. Part of this ticket regards how we can install the tcmalloc binaries per machine. I have added a script which downloads the tcmalloc binaries from S3 Bucket. If the tcmalloc binaries isn't present for the machine, we download gperftools 2.9.1 sources, build the binaries, and upload the binaries into the S3 Bucket.\r\n\r\nCurrently the S3 bucket in this ticket is using `build_external`. This will change to `boxes.10gen.com` S3 bucket once the credentials are available.",
        "base_ref": "develop",
        "created_at": "Friday Oct 01, 2021 at 02:11 GMT",
        "updated_at": "Sunday Oct 10, 2021 at 22:53 GMT",
        "closed_at": "Sunday Oct 10, 2021 at 22:53 GMT",
        "merged_at": "Sunday Oct 10, 2021 at 22:53 GMT"
    },
    {
        "key": "WT-8193",
        "number": 7038,
        "state": "closed",
        "title": "WT-8193 Wrong corner case in VLCS rollback-to-stable",
        "body": "Fix a corner case of VLCS rollback-to-stable.\r\n\r\nIt turns out that just the presence of a stable update for one key in the cell isn't sufficient to skip the whole cell. While it's true that in a fully timestamped world, if there's a stable update it must be newer than the cell's on-disk value and therefore the cell's on-disk value must be stable, this breaks down if the stable update isn't timestamped. We can skip iterating the cell if _every_ key in it has a stable update; otherwise we need to check each key.\r\n\r\nIt's also incorrect to call downstream to __rollback_abort_ondisk_kv for keys that have a stable update; the downstream code assumes that no stable update exists and will in some cases (e.g. in-memory databases) do the wrong thing if one does.\r\n\r\nTherefore:\r\n   - have __rollback_abort_insert_list return a count of keys with stable updates instead of just a flag;\r\n   - add a __rollback_has_stable_update to report if an already processed update chain still has a valid and non-aborted (therefore stable) update on it;\r\n   - rework the comment about this logic;\r\n   - skip iterating the cell only as described above (or if the cell is deleted, as before);\r\n   - when iterating the keys in the cell, also iterate the cell's update list to check for stable updates;\r\n   - add a test that exhibits the failing case.\r\n\r\nNote that because there's no way to prevent a page being reconciled before you're ready, without the changes the test might still occasionally pass. (Reconciling the page breaks the RLE cell in which things are supposed to happen and this makes the failure inaccessible.)\r\n\r\nThis test fails reliably for me without the fixes, but a more elaborate one I also wrote that tests a lot of related scenarios does\r\nnot. (So I'm not including that one.)",
        "base_ref": "develop",
        "created_at": "Friday Oct 01, 2021 at 00:29 GMT",
        "updated_at": "Wednesday Oct 06, 2021 at 04:21 GMT",
        "closed_at": "Tuesday Oct 05, 2021 at 02:43 GMT",
        "merged_at": "Tuesday Oct 05, 2021 at 02:43 GMT"
    },
    {
        "key": "WT-7980",
        "number": 7036,
        "state": "closed",
        "title": "WT-7980 Always switch log files when getting names for backup.",
        "body": "This is an alternative PR for the ticket. If we can switch the log file when opening up the duplicate target all the time, then the change is much simpler (and less risky).",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 29, 2021 at 20:36 GMT",
        "updated_at": "Monday Oct 04, 2021 at 14:20 GMT",
        "closed_at": "Monday Oct 04, 2021 at 14:20 GMT",
        "merged_at": "Monday Oct 04, 2021 at 14:20 GMT"
    },
    {
        "key": "WT-7494",
        "number": 7033,
        "state": "closed",
        "title": "WT-7494 Add Python test to trigger update restore eviction during recovery",
        "body": "Introduces a python suite test that enables the debug mode setting for update restore evict during recovery. The debug mode forces update restore eviction whenever we evict a page. We want to perform this in recovery to ensure that all the in-memory images have the proper write generation number and we don't end up reading stale transaction ID's stored on the page.\r\n\r\nLet me know if I should expand the test in any way, wasn't super sure if I covered all the important behaviors/scenarios/edge cases :)",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 29, 2021 at 07:59 GMT",
        "updated_at": "Wednesday Oct 06, 2021 at 04:04 GMT",
        "closed_at": "Wednesday Oct 06, 2021 at 04:04 GMT",
        "merged_at": "Wednesday Oct 06, 2021 at 04:04 GMT"
    },
    {
        "key": "WT-8171",
        "number": 7032,
        "state": "closed",
        "title": "WT-8171 Implement a C style test in the CPP testing framework",
        "body": "- Added the `run` function to `example_test.cxx` file. This way, when one creates a test with the script `create_test.sh`, they will be given the possibility to override the `run` function and have more control over their test. This was already possible before this change since `run` is a virtual function but now it is more explicit.\r\n- Added a new test `csuite_style_example .cxx` that barely uses the framework.\r\n- Modified the CMake build for the cpp suite.\r\n- API change for the `connection_manager` where `create` now returns a `WT_CONNECTION*`\r\n- Corrected a bug when a specified test with the command `./run -t` would not exist\r\n- Improved some code in the random generator helper class",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 29, 2021 at 03:39 GMT",
        "updated_at": "Tuesday Oct 05, 2021 at 02:48 GMT",
        "closed_at": "Tuesday Oct 05, 2021 at 02:48 GMT",
        "merged_at": "Tuesday Oct 05, 2021 at 02:48 GMT"
    },
    {
        "key": "WT-7494",
        "number": 7031,
        "state": "closed",
        "title": "WT-7494 Add Python test to trigger update restore eviction during recovery",
        "body": "Introduces a python suite test that enables the debug mode setting for update restore evict during recovery. The debug mode forces update restore eviction whenever we evict a page. We want to perform this in recovery to ensure that all the in-memory images have the proper write generation number and we don't end up reading stale transaction ID's stored on the page.\r\n\r\nLet me know if I should expand the test in any way, wasn't super sure if I covered all the important behaviors/scenarios/edge cases :) ",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 29, 2021 at 03:20 GMT",
        "updated_at": "Wednesday Sep 29, 2021 at 04:36 GMT",
        "closed_at": "Wednesday Sep 29, 2021 at 04:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8119",
        "number": 7030,
        "state": "closed",
        "title": "WT-8119 Add targeted compact testing to the existing testing framework",
        "body": "I am adding targeted compact testing as follows:\r\n\r\n1 - Add a new format test config that will exercise compact operation more often\r\n2 - Add compact operation to the existing random_abort csuite test.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 28, 2021 at 06:00 GMT",
        "updated_at": "Wednesday Sep 29, 2021 at 23:47 GMT",
        "closed_at": "Wednesday Sep 29, 2021 at 23:47 GMT",
        "merged_at": "Wednesday Sep 29, 2021 at 23:47 GMT"
    },
    {
        "key": "WT-8162",
        "number": 7028,
        "state": "closed",
        "title": "WT-8162 Remove SMOKE arg in 'define_c_test' helper",
        "body": "We currently use a CMake helper, `define_c_test`, for defining our csuite tests. An argument you can give is `SMOKE`, which is shorthand for \"execute the test with a script named smoke.sh, where the script is located in the tests source sub-directory\". Using `SMOKE` can be quite confusing as it assumes multiple things about the test and abstracts important details e.g. test arguments, script location (mistakes have been made in the past using `SMOKE`). \r\nDefining test definitions should be clear and easy to read, i.e. should be easy to determine how the test is run from its definition,  where uses of `SMOKE` achieves the opposite of this (for background, `define_c_test` used to be a macro where uses of `SMOKE` in context of the csuite tests was useful. However`define_c_test` has since been redefined as a general purpose function, meaning it needs to be usable/flexible outside the context of the csuite).\r\n\r\nRemoving `SMOKE` and replacing it with a parameter to define a custom script `EXEC_SCRIPT`, introduces additional flexibility to define any custom wrapper script i.e. a script not named 'smoke.sh'. \r\n\r\nThough this change adds extra verbosity and duplicate code patterns, I think its necessary so each test definition is clear, defining the exact command and arguments to run when ctest is invoked. There's been a couple of issues & errors in the past when it comes to using `define_c_test` (since the function abstracted important execution details). These changes should hopefully make it a bit more clear and predictable when defining a C test.",
        "base_ref": "develop",
        "created_at": "Friday Sep 24, 2021 at 01:42 GMT",
        "updated_at": "Tuesday Sep 28, 2021 at 23:10 GMT",
        "closed_at": "Tuesday Sep 28, 2021 at 23:10 GMT",
        "merged_at": "Tuesday Sep 28, 2021 at 23:10 GMT"
    },
    {
        "key": "WT-8036",
        "number": 7027,
        "state": "closed",
        "title": "WT-8036 Added connection panic flag in two assert statements in wt_evict_thread_run and _wt_evict_thread_stop.",
        "body": "I believe that since the eviction threads are also stopped (or __wt_evict_thread_stop is called) if an error has occurred in __thread_run, we should also expect the same. Hence, added the WT_CONN_PANIC flag in two assert statements in wt_evict_thread_run and _wt_evict_thread_stop.",
        "base_ref": "develop",
        "created_at": "Friday Sep 24, 2021 at 00:36 GMT",
        "updated_at": "Monday Sep 27, 2021 at 01:14 GMT",
        "closed_at": "Monday Sep 27, 2021 at 01:14 GMT",
        "merged_at": "Monday Sep 27, 2021 at 01:14 GMT"
    },
    {
        "key": "WT-8161",
        "number": 7026,
        "state": "closed",
        "title": "WT-8161 Reduce verbosity of CMake Evergreen smoke",
        "body": "Currently when ctest executes the smoke target, it does so with the verbosity option '-VV'. When parsing the logs for potential failures, this gets extremely noisy and hard to parse, since multiple parallel test outputs are interleaved with each other. \r\n\r\nTo simplify this, remove the 'VV' option and replace it with 'output-on-failure'. This ensures all the output for a failing test will be logged, whilst successful test output will not be logged.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 23, 2021 at 23:33 GMT",
        "updated_at": "Friday Sep 24, 2021 at 03:18 GMT",
        "closed_at": "Friday Sep 24, 2021 at 03:18 GMT",
        "merged_at": "Friday Sep 24, 2021 at 03:18 GMT"
    },
    {
        "key": "WT-7757",
        "number": 7025,
        "state": "closed",
        "title": "WT-7757 Skip obsolete leaf pages without having to read them.",
        "body": "This is the second attempt at WT-7757. The first one resulted in a data consistency bug and was backed out. For reference, the older PR is here https://github.com/wiredtiger/wiredtiger/pull/6842.\r\n\r\nThe attempt with the previous change was to skip internal pages if as per the read timestamp the page's aggregated stop timestamp information makes the page obsolete. The issue with the change was that the internal pages are not marked dirty when leaf pages get new data, so a clean internal page's aggregated timestamp information could be outdated. Effectively we can not skip internal pages from reading.\r\n\r\nIn the current change here, we can still gain performance by using the stop timestamp information from the leaf page's addr to determine if we can skip it - but without needing to load the page in the memory first.\r\n\r\nAlso, I have made the change where if the stop timestamp and txn are not set yet, we do not skip the page.\r\n\r\nFinally, we do not need to consider stop_durable_tx and stop_durable_txn.\r\n\r\nI have done extensive WT stress testing, and ran MongoDB's functional test that failed several thousand times to gain confidence.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 23, 2021 at 06:28 GMT",
        "updated_at": "Monday Sep 27, 2021 at 02:00 GMT",
        "closed_at": "Monday Sep 27, 2021 at 02:00 GMT",
        "merged_at": "Monday Sep 27, 2021 at 02:00 GMT"
    },
    {
        "key": "WT-8048",
        "number": 7024,
        "state": "closed",
        "title": "WT-8048 Remove split_8 timing stress configuration",
        "body": "Removing the split_8 timing configuration given this particular stress timing option hasn't really be useful in finding/detecting\r\nany race conditions (since being added). Additionally using the split_8 timing stress during stress tests runs adds a significant\r\nrun time i.e multiple hours, slowing the system down to a crawl.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 23, 2021 at 01:46 GMT",
        "updated_at": "Thursday Sep 23, 2021 at 22:19 GMT",
        "closed_at": "Thursday Sep 23, 2021 at 22:19 GMT",
        "merged_at": "Thursday Sep 23, 2021 at 22:19 GMT"
    },
    {
        "key": "WT-8069",
        "number": 7023,
        "state": "closed",
        "title": "WT-8069 Coverity analysis defect 120706: Redundant test",
        "body": "In the current implementation, there's no way `ret` can be non-zero. It's safe to just remove the redundant check.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 22, 2021 at 12:27 GMT",
        "updated_at": "Thursday Sep 23, 2021 at 00:57 GMT",
        "closed_at": "Thursday Sep 23, 2021 at 00:57 GMT",
        "merged_at": "Thursday Sep 23, 2021 at 00:57 GMT"
    },
    {
        "key": "WT-8055",
        "number": 7022,
        "state": "closed",
        "title": "WT-8055 Fix issue when compact quits when running at the same time as a checkpoint",
        "body": "This pull request implements the following changes:\r\n1. Change all checkpoints in compact to \"wait\" checkpoints. This eliminates all conflicts between external (system/application) and internal compact checkpoints. If wait happens, additional checkpoint call shouldn't add too much overhead. Compact operation is expected to take a fairly long time. Adding a little extra delay shouldn't affect general performance too much.\r\n2. \"wt7989_compact_checkpoint\" test now runs multiple checkpoints in parallel with compact. The first one starts immediately and the following checkpoints start after a random delay.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 22, 2021 at 09:03 GMT",
        "updated_at": "Friday Sep 24, 2021 at 01:25 GMT",
        "closed_at": "Friday Sep 24, 2021 at 01:25 GMT",
        "merged_at": "Friday Sep 24, 2021 at 01:25 GMT"
    },
    {
        "key": "WT-8086",
        "number": 7019,
        "state": "closed",
        "title": "Revert \"WT-8086 Create cpp test for prefix search near entries\"",
        "body": "Reverts wiredtiger/wiredtiger#6994",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 22, 2021 at 00:50 GMT",
        "updated_at": "Wednesday Sep 22, 2021 at 00:50 GMT",
        "closed_at": "Wednesday Sep 22, 2021 at 00:50 GMT",
        "merged_at": "Wednesday Sep 22, 2021 at 00:50 GMT"
    },
    {
        "key": "WT-8108",
        "number": 7016,
        "state": "closed",
        "title": "WT-8108 Use temporary files and rename in local store",
        "body": "Includes checking error returns from all snprintf calls.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 21, 2021 at 14:53 GMT",
        "updated_at": "Tuesday Sep 21, 2021 at 19:07 GMT",
        "closed_at": "Tuesday Sep 21, 2021 at 19:07 GMT",
        "merged_at": "Tuesday Sep 21, 2021 at 19:07 GMT"
    },
    {
        "key": "WT-8148",
        "number": 7015,
        "state": "closed",
        "title": "WT-8148 Fix comment typo in util_verify.c",
        "body": "@Sue, this is about the simplest possible PR.  I trust it won't take you long to review :-) ",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 21, 2021 at 14:00 GMT",
        "updated_at": "Tuesday Sep 21, 2021 at 14:45 GMT",
        "closed_at": "Tuesday Sep 21, 2021 at 14:45 GMT",
        "merged_at": "Tuesday Sep 21, 2021 at 14:45 GMT"
    },
    {
        "key": "WT-8068",
        "number": 7013,
        "state": "closed",
        "title": "WT-8068 Improve __rollback_row_modify control flow",
        "body": "`__rollback_row_modify` now calls `__wt_row_modify`",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 21, 2021 at 02:02 GMT",
        "updated_at": "Friday Sep 24, 2021 at 00:11 GMT",
        "closed_at": "Friday Sep 24, 2021 at 00:11 GMT",
        "merged_at": "Friday Sep 24, 2021 at 00:11 GMT"
    },
    {
        "key": "WT-8126",
        "number": 7012,
        "state": "closed",
        "title": "WT-8126 Mark btree as dirty only if not newly created when instantiating a deleted row-store leaf page",
        "body": "- The `WT_BTREE_READONLY` flag is already checked within `__wt_page_modify_set`\r\n- Only set the `btree` as modified if `original` is not true",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 21, 2021 at 01:11 GMT",
        "updated_at": "Tuesday Sep 21, 2021 at 22:29 GMT",
        "closed_at": "Tuesday Sep 21, 2021 at 22:29 GMT",
        "merged_at": "Tuesday Sep 21, 2021 at 22:29 GMT"
    },
    {
        "key": "WT-8121",
        "number": 7009,
        "state": "closed",
        "title": "WT-8121 Adding a new cppsuite test that does a large number of insertions over a long period of time.",
        "body": "- Changing the thread_context logic so that true means success and false means failure, this is because when a wiredtiger transaction commit fails it rolls back the transaction internally which I didn't anticipate when I wrote the \"rollback_required\" logic.\r\n- Adding a new test.\r\n- Modifying logic that relies on the thread context logic.\r\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 20, 2021 at 03:25 GMT",
        "updated_at": "Monday Sep 20, 2021 at 09:48 GMT",
        "closed_at": "Monday Sep 20, 2021 at 09:48 GMT",
        "merged_at": "Monday Sep 20, 2021 at 09:48 GMT"
    },
    {
        "key": "WT-7924",
        "number": 7008,
        "state": "closed",
        "title": "WT-7924 Create a stress test for prefix search near key validation",
        "body": "- Creation of a test to verify `search_near` returns the correct key when the configuration `prefix_key` is enabled.",
        "base_ref": "develop",
        "created_at": "Monday Sep 20, 2021 at 02:34 GMT",
        "updated_at": "Monday Sep 27, 2021 at 23:29 GMT",
        "closed_at": "Monday Sep 27, 2021 at 23:29 GMT",
        "merged_at": "Monday Sep 27, 2021 at 23:29 GMT"
    },
    {
        "key": "WT-7750",
        "number": 7007,
        "state": "closed",
        "title": "WT-7750 Mark btree as dirty only if not newly created when instantiating a deleted row-store leaf page",
        "body": "- The `WT_BTREE_READONLY` flag is already checked within `__wt_page_modify_set`\r\n- Only set the btree as modified if `original` is not `true`",
        "base_ref": "develop",
        "created_at": "Sunday Sep 19, 2021 at 09:17 GMT",
        "updated_at": "Tuesday Sep 21, 2021 at 01:14 GMT",
        "closed_at": "Tuesday Sep 21, 2021 at 01:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8093",
        "number": 7006,
        "state": "closed",
        "title": "WT-8093 Improve the CPP testing framework for better flexibility",
        "body": "On top of https://github.com/wiredtiger/wiredtiger/pull/6997:\r\n\r\n- Added required macros for old gcc versions, see a4d5132e0f81962b8d36c730d5c913ee2b9d33d8",
        "base_ref": "develop",
        "created_at": "Friday Sep 17, 2021 at 02:50 GMT",
        "updated_at": "Friday Sep 17, 2021 at 04:55 GMT",
        "closed_at": "Friday Sep 17, 2021 at 04:55 GMT",
        "merged_at": "Friday Sep 17, 2021 at 04:55 GMT"
    },
    {
        "key": "WT-8093",
        "number": 7005,
        "state": "closed",
        "title": "Revert \"WT-8093 Improve the CPP testing framework for better flexibility\"",
        "body": "Reverts wiredtiger/wiredtiger#6997",
        "base_ref": "develop",
        "created_at": "Thursday Sep 16, 2021 at 23:44 GMT",
        "updated_at": "Thursday Sep 16, 2021 at 23:45 GMT",
        "closed_at": "Thursday Sep 16, 2021 at 23:45 GMT",
        "merged_at": "Thursday Sep 16, 2021 at 23:45 GMT"
    },
    {
        "key": "WT-8092",
        "number": 7004,
        "state": "closed",
        "title": "WT-8092 prefix enabled search_near does not return the correct key when in memory",
        "body": "This ticket covers performing a prefix search near early exit when we are traversing in the insert list. This benefits two causes:\r\n1. This ticket will increase performance when we are doing a prefix search near, if there are a lot of inserts in the list.\r\n2. The cursor can potentially returns an entry outside of the prefix key range when we are performing a prefix search near. This change will fix that behaviour as we double check if the prefix matches between the tree entry and the search key.\r\n\r\nFurthermore this ticket also addresses fixes from WT-8044. When we are performing prefix search near on an insert list, cbt->tmp is NULL. Therefore we change this behaviour to check if the valid key matches the prefix of search near after we gather the key `__cursor_kv_return `",
        "base_ref": "develop",
        "created_at": "Thursday Sep 16, 2021 at 06:54 GMT",
        "updated_at": "Sunday Sep 26, 2021 at 23:51 GMT",
        "closed_at": "Sunday Sep 26, 2021 at 23:51 GMT",
        "merged_at": "Sunday Sep 26, 2021 at 23:51 GMT"
    },
    {
        "key": "WT-8057",
        "number": 7003,
        "state": "closed",
        "title": "WT-8057 Add a test to verify that changing compact is not resulting in data loss",
        "body": "This test verifies that there are no data inconsistencies if compact operation is interrupted by an unclean shutdown. To achieve this, the main process spawns a child process. The child process perform certain operations on two identical tables. The parent process randomly kills child process and verifies that the data across two tables match after restart.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 16, 2021 at 04:09 GMT",
        "updated_at": "Thursday Sep 16, 2021 at 05:46 GMT",
        "closed_at": "Thursday Sep 16, 2021 at 05:46 GMT",
        "merged_at": "Thursday Sep 16, 2021 at 05:46 GMT"
    },
    {
        "key": "WT-8057",
        "number": 7002,
        "state": "closed",
        "title": "Revert \"WT-8057 New test to verify the data after aborted compaction\"",
        "body": "Reverts wiredtiger/wiredtiger#6986",
        "base_ref": "develop",
        "created_at": "Thursday Sep 16, 2021 at 02:43 GMT",
        "updated_at": "Thursday Sep 16, 2021 at 02:51 GMT",
        "closed_at": "Thursday Sep 16, 2021 at 02:51 GMT",
        "merged_at": "Thursday Sep 16, 2021 at 02:51 GMT"
    },
    {
        "key": "WT-8093",
        "number": 6997,
        "state": "closed",
        "title": "WT-8093 Improve the CPP testing framework for better flexibility",
        "body": "All changes and their motivation are described in WT-8093. The commits tried to reflect each change.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 14, 2021 at 23:02 GMT",
        "updated_at": "Thursday Sep 16, 2021 at 23:44 GMT",
        "closed_at": "Thursday Sep 16, 2021 at 22:35 GMT",
        "merged_at": "Thursday Sep 16, 2021 at 22:35 GMT"
    },
    {
        "key": "WT-8081",
        "number": 6996,
        "state": "closed",
        "title": "WT-8081 Fix tiered hook functions to provide default for config string",
        "body": "Also disable the `modify_smoke_recover` test from `test_cursor12.py` as it doesn't work with the tiered hook due to WT-8096.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 14, 2021 at 14:46 GMT",
        "updated_at": "Tuesday Sep 14, 2021 at 17:58 GMT",
        "closed_at": "Tuesday Sep 14, 2021 at 17:58 GMT",
        "merged_at": "Tuesday Sep 14, 2021 at 17:58 GMT"
    },
    {
        "key": "WT-8086",
        "number": 6994,
        "state": "closed",
        "title": "WT-8086 Create cpp test for prefix search near entries",
        "body": "This ticket plans to validate that the prefix search near performs less traversals. This test has two main phases:\r\n\r\n1. Populate phase:\r\n- Create keys of prefix aaa -> zzz\r\n- Force evict on all the keys so they are on disk\r\n2. Read phase:\r\n- Perform search near calls on a random length prefix\r\n- Validate that number of entries is within bounds of prefix search near",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 14, 2021 at 06:10 GMT",
        "updated_at": "Wednesday Sep 22, 2021 at 00:50 GMT",
        "closed_at": "Wednesday Sep 22, 2021 at 00:44 GMT",
        "merged_at": "Wednesday Sep 22, 2021 at 00:44 GMT"
    },
    {
        "key": "WT-8077",
        "number": 6993,
        "state": "closed",
        "title": "WT-8077 Mark the page dirty once the prepared updates are resolved",
        "body": "Marking the page dirty to reconcile the page that have resolved\r\nprepared updates.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 14, 2021 at 05:53 GMT",
        "updated_at": "Monday Sep 20, 2021 at 12:09 GMT",
        "closed_at": "Monday Sep 20, 2021 at 12:09 GMT",
        "merged_at": "Monday Sep 20, 2021 at 12:09 GMT"
    },
    {
        "key": "WT-7169",
        "number": 6991,
        "state": "closed",
        "title": "WT-7169 Fix test_timestamp22.test_timestamp_randomizer failure in time window validation.",
        "body": "I have gone ahead and modified the test_timestamp22, i.e., the commit timestamp generated randomly cannot be lesser than the recent durable timestamp. \r\n\r\nOOD does not work well with prepared updates as WiredTiger crashes if the commit timestamp is lesser than the durable timestamp. ",
        "base_ref": "develop",
        "created_at": "Monday Sep 13, 2021 at 23:56 GMT",
        "updated_at": "Wednesday Sep 22, 2021 at 03:41 GMT",
        "closed_at": "Wednesday Sep 22, 2021 at 03:41 GMT",
        "merged_at": "Wednesday Sep 22, 2021 at 03:41 GMT"
    },
    {
        "key": "WT-8075",
        "number": 6990,
        "state": "closed",
        "title": "WT-8075 Coverity analysis defect 120712: 'Constant' variable guards d\u2026",
        "body": "\u2026ead code\r\n\r\nRemove an unused variable.",
        "base_ref": "develop",
        "created_at": "Monday Sep 13, 2021 at 19:59 GMT",
        "updated_at": "Tuesday Sep 14, 2021 at 14:01 GMT",
        "closed_at": "Tuesday Sep 14, 2021 at 14:01 GMT",
        "merged_at": "Tuesday Sep 14, 2021 at 14:01 GMT"
    },
    {
        "key": "WT-8079",
        "number": 6989,
        "state": "closed",
        "title": "WT-8079 add breakpoint to verify error macros, clean up API processing",
        "body": "Add a call to WT_SESSION.breakpoint in the verify disk image verification code so it's easy to\r\n\r\nset a breakpoint in gdb when debugging page format changes.\r\n\r\nClean up the API process macros:\r\n- Change the thread-check publish macro to a full barrier; there isn't any reason to flush\r\nwrites BEFORE assigning to WT_SESSION.api_tid, what you want is that assignment to be flushed\r\nbefore another thread uses the session.\r\n\r\n- Don't hard-code \"session\" use. It's probably safe, but the session is a macro argument, use\r\nthe argument instead.\r\n\r\n- Use the standard cursor-to-session macros instead of hard-coding the call.",
        "base_ref": "develop",
        "created_at": "Monday Sep 13, 2021 at 16:38 GMT",
        "updated_at": "Monday Sep 13, 2021 at 20:57 GMT",
        "closed_at": "Monday Sep 13, 2021 at 20:57 GMT",
        "merged_at": "Monday Sep 13, 2021 at 20:57 GMT"
    },
    {
        "key": "WT-7745",
        "number": 6988,
        "state": "closed",
        "title": "WT-7745 Add macro to identify uris for btree objects",
        "body": "I've added a new macro, `WT_BTREE_PREFIX` for checking if a uri starts with `file:` or `tiered:`.  I wasn't sure of the best place to put the macro.  It's in `meta.h`, but I could imagine it going in `btree.h`, as well, or maybe elsewhere.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 13, 2021 at 14:47 GMT",
        "updated_at": "Monday Sep 13, 2021 at 17:32 GMT",
        "closed_at": "Monday Sep 13, 2021 at 17:32 GMT",
        "merged_at": "Monday Sep 13, 2021 at 17:32 GMT"
    },
    {
        "key": "WT-8057",
        "number": 6986,
        "state": "closed",
        "title": "WT-8057 New test to verify the data after aborted compaction",
        "body": "This test verifies that there are no data inconsistencies if compact operation is interrupted by an unclean shutdown. To achieve this, the main process spawns a child process. The child process perform certain operations on two identical tables. The parent process randomly kills child process and verifies that the data across two tables match after restart.",
        "base_ref": "develop",
        "created_at": "Monday Sep 13, 2021 at 04:00 GMT",
        "updated_at": "Thursday Sep 16, 2021 at 02:43 GMT",
        "closed_at": "Thursday Sep 16, 2021 at 02:25 GMT",
        "merged_at": "Thursday Sep 16, 2021 at 02:25 GMT"
    },
    {
        "key": "WT-8000",
        "number": 6985,
        "state": "closed",
        "title": "WT-8000 Allow s_docs to compile even if doxygen version is not supported.",
        "body": "The changes in the PR allow both Doxygen versions (1.8.13 and 1.8.17) to run successfully and generate documentation. \r\n\r\n- Removed unsupported (v1.8.13) tags.\r\n- Replaced ^^ with @_linebr, seems to work for both versions as the documentation generated contains the images. ",
        "base_ref": "develop",
        "created_at": "Friday Sep 10, 2021 at 06:36 GMT",
        "updated_at": "Tuesday Sep 14, 2021 at 23:32 GMT",
        "closed_at": "Tuesday Sep 14, 2021 at 23:32 GMT",
        "merged_at": "Tuesday Sep 14, 2021 at 23:32 GMT"
    },
    {
        "key": "WT-7853",
        "number": 6982,
        "state": "closed",
        "title": "WT-7853 Validate the update chain before we attempt to insert it into the history store.",
        "body": "Along with validating the time window against the last update in the chain.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 09, 2021 at 06:50 GMT",
        "updated_at": "Saturday Sep 18, 2021 at 03:57 GMT",
        "closed_at": "Wednesday Sep 15, 2021 at 03:45 GMT",
        "merged_at": "Wednesday Sep 15, 2021 at 03:45 GMT"
    },
    {
        "key": "WT-7925",
        "number": 6981,
        "state": "closed",
        "title": "WT-7925 Add rollback reason logging before WT_ROLLBACK error is returned",
        "body": "I propose that we log the exact rollback reason before returning the WT_ROLLBACK error code. The __wt_wiredtiger_error function which checks for WiredTiger specific errors only seems to return a \"WT_ROLLBACK: conflict between concurrent operations\" message, leading me to believe that the real rollback reason is being lost. The __wt_txn_rollback_required function looks like the only one that is setting the rollback_reason. ",
        "base_ref": "develop",
        "created_at": "Thursday Sep 09, 2021 at 04:47 GMT",
        "updated_at": "Tuesday Sep 14, 2021 at 01:15 GMT",
        "closed_at": "Tuesday Sep 14, 2021 at 01:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7957",
        "number": 6980,
        "state": "closed",
        "title": "WT-7957 Check the local system if a bucket object isn't found (yet).",
        "body": "Also remove WT_ prefix from extension code macros.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 08, 2021 at 20:09 GMT",
        "updated_at": "Monday Sep 13, 2021 at 17:33 GMT",
        "closed_at": "Monday Sep 13, 2021 at 17:33 GMT",
        "merged_at": "Monday Sep 13, 2021 at 17:33 GMT"
    },
    {
        "key": "WT-8044",
        "number": 6978,
        "state": "closed",
        "title": "WT-8044 Prefix enabled search near only returns matching keys",
        "body": "- Even though a valid key is found, when prefix search is enabled, make sure the key matches the prefix.\r\n- Add a check on the length of the prefix when comparing a prefix and another key in the tree.\r\n- Fixed tests added in #6975 that were left commented out and add more",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 07, 2021 at 07:45 GMT",
        "updated_at": "Monday Sep 13, 2021 at 04:34 GMT",
        "closed_at": "Monday Sep 13, 2021 at 04:34 GMT",
        "merged_at": "Monday Sep 13, 2021 at 04:34 GMT"
    },
    {
        "key": "WT-7989",
        "number": 6977,
        "state": "closed",
        "title": "WT-7989 Compact quits when running at the same time as a system checkpoint",
        "body": "This change adds a csuite test to check that compact and checkpoint can run in parallel. This test is not compatible with windows.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 07, 2021 at 06:09 GMT",
        "updated_at": "Wednesday Sep 08, 2021 at 00:59 GMT",
        "closed_at": "Wednesday Sep 08, 2021 at 00:59 GMT",
        "merged_at": "Wednesday Sep 08, 2021 at 00:59 GMT"
    },
    {
        "key": "WT-7989",
        "number": 6976,
        "state": "closed",
        "title": "Revert \"WT-7989 Compact quits when running at the same time as a system checkpoint\"",
        "body": "Reverts wiredtiger/wiredtiger#6961",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 07, 2021 at 06:04 GMT",
        "updated_at": "Tuesday Sep 07, 2021 at 06:06 GMT",
        "closed_at": "Tuesday Sep 07, 2021 at 06:06 GMT",
        "merged_at": "Tuesday Sep 07, 2021 at 06:06 GMT"
    },
    {
        "key": "WT-8035",
        "number": 6975,
        "state": "closed",
        "title": "WT-8035 Handle prefix enabled lexicographical comparisons for string key formats.",
        "body": "Currently prefix search near doesn't work correctly when using strings as the key format. The problem comes when we are comparing the null character of two strings. In the normal case that is fine, however when prefix is enabled, we want to only compare the prefix portion of both keys (in this case userp). This means we shouldn't compare null characters in prefix comparison, since we are only interesting if comparing the prefix portion of the keys.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 07, 2021 at 00:30 GMT",
        "updated_at": "Friday Sep 10, 2021 at 00:54 GMT",
        "closed_at": "Friday Sep 10, 2021 at 00:54 GMT",
        "merged_at": "Friday Sep 10, 2021 at 00:54 GMT"
    },
    {
        "key": "WT-8056",
        "number": 6973,
        "state": "closed",
        "title": "WT-8056 Fix RTS to avoid restoring obsolete updates",
        "body": "History store may have obsolete updates in the order greater than\r\nthe stable update. Restoring obsolete updates will eventually lead\r\nto the key removal from the data store during the reconciliation.\r\nRTS have to ignore these obsolete updates and proceed to the previous\r\nupdates.",
        "base_ref": "develop",
        "created_at": "Monday Sep 06, 2021 at 06:28 GMT",
        "updated_at": "Wednesday Sep 08, 2021 at 01:45 GMT",
        "closed_at": "Wednesday Sep 08, 2021 at 01:45 GMT",
        "merged_at": "Wednesday Sep 08, 2021 at 01:45 GMT"
    },
    {
        "key": "WT-7059",
        "number": 6972,
        "state": "closed",
        "title": "WT-7059 Upgrade Evergreen distros to Ubuntu 20.04.",
        "body": "All the test groups are running on ubuntu 2004,  except for the three cases below:\r\n\r\n- Large-scale tests: The dependent build ticket is still not scheduled, the large-scale tests would run on ubuntu-1804 for the time being. However, I have created a follow-up ticket WT-8050 to run large-scale tests on ubuntu-2004.\r\n\r\n- Compatibility tests (less frequent):  It is decided to run the compatibility tests (less frequent) on ubuntu-1804 instead of ubuntu-2004 as the Doxygen version 1.8.17 requires changes in the scripts, this is not possible for the recent releases as we are not able to change the contents of those versions after they are tagged!  (compatibility-test-for-wt-standalone-releases test clones the recent releases and then runs the stress tests on those releases).\r\n\r\n- Since there are no distros `ubuntu2004-zseries-test` or `ubuntu2004-power8-test` we will keep running zSeries and PPC on Ubuntu1804. No follow-on ticket is needed since the mid/long term plan is to switch to RHEL distro\u2019s.",
        "base_ref": "develop",
        "created_at": "Monday Sep 06, 2021 at 00:50 GMT",
        "updated_at": "Wednesday Sep 08, 2021 at 01:05 GMT",
        "closed_at": "Wednesday Sep 08, 2021 at 01:05 GMT",
        "merged_at": "Wednesday Sep 08, 2021 at 01:05 GMT"
    },
    {
        "key": "WT-8045",
        "number": 6970,
        "state": "closed",
        "title": "WT-8045 Fail eviction with EBUSY if we detect OOO timestamps and a checkpoint is running.",
        "body": "\u2026 timestamps while a checkpoint is running",
        "base_ref": "develop",
        "created_at": "Saturday Sep 04, 2021 at 03:13 GMT",
        "updated_at": "Monday Sep 06, 2021 at 00:35 GMT",
        "closed_at": "Monday Sep 06, 2021 at 00:35 GMT",
        "merged_at": "Monday Sep 06, 2021 at 00:35 GMT"
    },
    {
        "key": "WT-8032",
        "number": 6969,
        "state": "closed",
        "title": "Revert \"WT-8032 Add failpoints to the history store update insert path\"",
        "body": "Reverts wiredtiger/wiredtiger#6959",
        "base_ref": "develop",
        "created_at": "Friday Sep 03, 2021 at 04:16 GMT",
        "updated_at": "Friday Sep 03, 2021 at 04:16 GMT",
        "closed_at": "Friday Sep 03, 2021 at 04:16 GMT",
        "merged_at": "Friday Sep 03, 2021 at 04:16 GMT"
    },
    {
        "key": "WT-7853",
        "number": 6967,
        "state": "closed",
        "title": "Revert \"WT-7853 Clear the update datastore flag if reconciliation fails\"",
        "body": "Reverts wiredtiger/wiredtiger#6948",
        "base_ref": "develop",
        "created_at": "Friday Sep 03, 2021 at 04:06 GMT",
        "updated_at": "Friday Sep 03, 2021 at 04:06 GMT",
        "closed_at": "Friday Sep 03, 2021 at 04:06 GMT",
        "merged_at": "Friday Sep 03, 2021 at 04:06 GMT"
    },
    {
        "key": "WT-8043",
        "number": 6965,
        "state": "closed",
        "title": "WT-8043 Tidy the \"ripcip\" argument into the visibility code",
        "body": "The \"ripcip\" argument into the visibility mechanism can just be \"rip\".\r\n\r\nIt is only used by the row code. There was one case where it was being\r\nused as \"cip\", but that code was wrong, and (fortunately, then) also\r\nunreachable. (\"ins\" is never null for column-store.)\r\n\r\nChange it to be a WT_ROW * instead of a void *. It turns out that the\r\ncorresponding entry in WT_SAVE_UPD was already a WT_ROW *, so just\r\nrename that (ripcip -> rip) for clarity.\r\n\r\nIt turns out this also allows removing the unsafe casts in WT_ROW_SLOT\r\nand WT_COL_SLOT.",
        "base_ref": "develop",
        "created_at": "Friday Sep 03, 2021 at 02:11 GMT",
        "updated_at": "Saturday Sep 04, 2021 at 00:28 GMT",
        "closed_at": "Saturday Sep 04, 2021 at 00:28 GMT",
        "merged_at": "Saturday Sep 04, 2021 at 00:28 GMT"
    },
    {
        "key": "WT-7959",
        "number": 6964,
        "state": "closed",
        "title": "WT-7959 Remove cursor-skip-pages python test",
        "body": "It is hard to measure the skipped pages correctly and in the future we\r\nwant to remove the statistic counting skipped pages. We will also\r\nintroduce the code to skip internal pages - which makes a skipped page\r\ncount impractical to have.",
        "base_ref": "develop",
        "created_at": "Friday Sep 03, 2021 at 00:29 GMT",
        "updated_at": "Friday Sep 03, 2021 at 01:33 GMT",
        "closed_at": "Friday Sep 03, 2021 at 01:33 GMT",
        "merged_at": "Friday Sep 03, 2021 at 01:33 GMT"
    },
    {
        "key": "WT-8041",
        "number": 6963,
        "state": "closed",
        "title": "WT-8041 Rollback to stable unpacks values repeatedly",
        "body": "The rollback to stable code unpacks values up to three times (for column store) or twice (for row store), and also under some circumstances sometimes unpacks row store keys twice. This is a bit wasteful and fairly readily tidied.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 02, 2021 at 23:46 GMT",
        "updated_at": "Saturday Sep 04, 2021 at 07:04 GMT",
        "closed_at": "Friday Sep 03, 2021 at 08:32 GMT",
        "merged_at": "Friday Sep 03, 2021 at 08:32 GMT"
    },
    {
        "key": "WT-7942",
        "number": 6962,
        "state": "closed",
        "title": "WT-7942 Release timestamp lock in test/format when all_durable timestamp is not found",
        "body": "- Added a missed unlock from WT-7708",
        "base_ref": "develop",
        "created_at": "Thursday Sep 02, 2021 at 08:39 GMT",
        "updated_at": "Friday Sep 03, 2021 at 01:37 GMT",
        "closed_at": "Friday Sep 03, 2021 at 01:37 GMT",
        "merged_at": "Friday Sep 03, 2021 at 01:37 GMT"
    },
    {
        "key": "WT-7989",
        "number": 6961,
        "state": "closed",
        "title": "WT-7989 Compact quits when running at the same time as a system checkpoint",
        "body": "The scope of this change is to implement a test that reproduces the issue.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 02, 2021 at 07:10 GMT",
        "updated_at": "Tuesday Sep 07, 2021 at 06:04 GMT",
        "closed_at": "Tuesday Sep 07, 2021 at 04:12 GMT",
        "merged_at": "Tuesday Sep 07, 2021 at 04:12 GMT"
    },
    {
        "key": "WT-7294",
        "number": 6960,
        "state": "closed",
        "title": "WT-7294 Re-enable VLCS evergreen endianness tests",
        "body": "Enable variable-length column-store access method in `test/format/CONFIG.endian`, and increase the running frequency for endian-related Evergreen tasks.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 02, 2021 at 05:49 GMT",
        "updated_at": "Friday Sep 03, 2021 at 14:06 GMT",
        "closed_at": "Friday Sep 03, 2021 at 14:06 GMT",
        "merged_at": "Friday Sep 03, 2021 at 14:06 GMT"
    },
    {
        "key": "WT-8024",
        "number": 6955,
        "state": "closed",
        "title": "WT-8024 Add link text to cross-references in Arch Guide",
        "body": "Update architecture guide pages so that references between them use link text, rather than defaulting to the title of each page.  Reworded text in some places to better integrate the references, often by providing the link in running text, rather than in a \"See such-and-such\" parenthetical.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 31, 2021 at 20:56 GMT",
        "updated_at": "Wednesday Sep 01, 2021 at 14:11 GMT",
        "closed_at": "Wednesday Sep 01, 2021 at 14:09 GMT",
        "merged_at": "Wednesday Sep 01, 2021 at 14:09 GMT"
    },
    {
        "key": "WT-7993",
        "number": 6954,
        "state": "closed",
        "title": "WT-7993 If gathering handles and not in aggressive eviction mode, have",
        "body": "eviction sleep to let checkpoint grab a contentious spinlock.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 31, 2021 at 16:12 GMT",
        "updated_at": "Wednesday Sep 01, 2021 at 20:01 GMT",
        "closed_at": "Wednesday Sep 01, 2021 at 20:01 GMT",
        "merged_at": "Wednesday Sep 01, 2021 at 20:01 GMT"
    },
    {
        "key": "WT-8019",
        "number": 6952,
        "state": "closed",
        "title": "WT-8019  VLCS snapshot-isolation search mismatch",
        "body": "Fix accidentally row-specific code in __wt_txn_modify_check.\r\n\r\n__wt_txn_modify_check wants to check if an on-disk value exists before\r\nlooking at its timestamps. It was checking that cbt->ins is NULL,\r\nwhich is sufficient for row-store but too enthusiastic for\r\ncolumn-store, leading to acceptance of out-of-order writes and\r\nconsequent data corruption.\r\n\r\nTo fix this, change __wt_read_cell_time_window to report whether it\r\nfound anything, and only check the results if it did. Determine this\r\nby checking whether the slot is UINT32_MAX and also whether the slots\r\narray exists at all. For FLCS, return failure instead of the default\r\ntimestamp. (Note that __wt_txn_modify_check is the only caller of this\r\ncode.)\r\n\r\nWhile here, tidy the interface a bit, and in __wt_txn_modify_check\r\ndon't bother checking that the cursor isn't NULL; it's not.\r\n\r\nAdd a Python test (timestamp24) that tickles the problem.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 31, 2021 at 02:04 GMT",
        "updated_at": "Tuesday Aug 31, 2021 at 04:42 GMT",
        "closed_at": "Tuesday Aug 31, 2021 at 04:41 GMT",
        "merged_at": "Tuesday Aug 31, 2021 at 04:41 GMT"
    },
    {
        "key": "WT-8022",
        "number": 6951,
        "state": "closed",
        "title": "WT-8022 Verify WT_CURSOR.modify return values in format test program.",
        "body": "@quchenhao, based on our discussions on WT-8019, I added code to format to validate the returned data from `WT_CURSOR.modify()`. I think it's generally useful, so this is a branch for that work.",
        "base_ref": "develop",
        "created_at": "Monday Aug 30, 2021 at 16:59 GMT",
        "updated_at": "Thursday Sep 30, 2021 at 19:15 GMT",
        "closed_at": "Thursday Sep 30, 2021 at 19:15 GMT",
        "merged_at": "Thursday Sep 30, 2021 at 19:15 GMT"
    },
    {
        "key": "WT-7630",
        "number": 6950,
        "state": "closed",
        "title": "WT-7630 Fix a history store entry remove with checkpoint next transaction id",
        "body": "As part of prepared transaction rollback, remove the history entry\r\nduring a checkpoint is in progress with the transaction id greater than\r\nthe checkpoint can lead to that entry stop time window is not visible\r\nto the RTS and also to GC. So if these data files are loaded as part\r\nof the recovery, the restored entry doesn't get lost.",
        "base_ref": "develop",
        "created_at": "Monday Aug 30, 2021 at 09:53 GMT",
        "updated_at": "Thursday Sep 09, 2021 at 04:01 GMT",
        "closed_at": "Thursday Sep 09, 2021 at 04:01 GMT",
        "merged_at": "Thursday Sep 09, 2021 at 04:01 GMT"
    },
    {
        "key": "WT-7630",
        "number": 6947,
        "state": "closed",
        "title": "WT-7630 Fix a bug of history store losing an entry",
        "body": "To fix the problem of history store store losing the entry\r\nWhen the checkpoint is running performing a prepared transaction\r\nrollback, the history store entry is not removed if the data store\r\nis already checkpointed the history store entry is marked with\r\na tombstone. These kind of history store entries is later removed\r\nby the rollback to stable operation or by the next reconciliation.",
        "base_ref": "develop",
        "created_at": "Saturday Aug 28, 2021 at 11:23 GMT",
        "updated_at": "Monday Aug 30, 2021 at 09:54 GMT",
        "closed_at": "Monday Aug 30, 2021 at 09:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8017",
        "number": 6946,
        "state": "closed",
        "title": "WT-8017 Re-enable VLCS format stress testing in evergreen.",
        "body": "Re-enable VLCS format stress testing in evergreen.",
        "base_ref": "develop",
        "created_at": "Friday Aug 27, 2021 at 19:53 GMT",
        "updated_at": "Wednesday Sep 01, 2021 at 06:10 GMT",
        "closed_at": "Wednesday Sep 01, 2021 at 06:10 GMT",
        "merged_at": "Wednesday Sep 01, 2021 at 06:10 GMT"
    },
    {
        "key": "WT-6193",
        "number": 6945,
        "state": "closed",
        "title": "WT-6193 Re-enable VLCS testing in format-test",
        "body": "Enable VLCS format testing in \"make check'.\r\n\r\nWhile I'm in the area, pick a minimum cache size so we don't time out during the run and increase\r\nthe number of rows/operations to a larger number so there's at least a little work being done.",
        "base_ref": "develop",
        "created_at": "Friday Aug 27, 2021 at 19:24 GMT",
        "updated_at": "Wednesday Sep 01, 2021 at 14:55 GMT",
        "closed_at": "Wednesday Sep 01, 2021 at 14:55 GMT",
        "merged_at": "Wednesday Sep 01, 2021 at 14:55 GMT"
    },
    {
        "key": "WT-8011",
        "number": 6944,
        "state": "closed",
        "title": "WT-8011 add format support for randomly choosing RS or VLCS",
        "body": "Add support for multiple access types so can specify 2 of the 3 available.",
        "base_ref": "develop",
        "created_at": "Friday Aug 27, 2021 at 16:48 GMT",
        "updated_at": "Friday Aug 27, 2021 at 19:00 GMT",
        "closed_at": "Friday Aug 27, 2021 at 19:00 GMT",
        "merged_at": "Friday Aug 27, 2021 at 19:00 GMT"
    },
    {
        "key": "WT-8006",
        "number": 6942,
        "state": "closed",
        "title": "WT-8006 sync/checkpoint cleanup code isn't appropriate for VLCS",
        "body": "The cleanup of pages during checkpoint based on their stop timestamp isn't appropriate for column-store, you can't simply delete chunks of a column-store name space.\r\n\r\n@kommiharibabu, I don't think there's any code in this path that's useful for column-store, but please confirm that just to be sure!",
        "base_ref": "develop",
        "created_at": "Thursday Aug 26, 2021 at 23:31 GMT",
        "updated_at": "Friday Aug 27, 2021 at 01:08 GMT",
        "closed_at": "Friday Aug 27, 2021 at 01:08 GMT",
        "merged_at": "Friday Aug 27, 2021 at 01:08 GMT"
    },
    {
        "key": "WT-8005",
        "number": 6941,
        "state": "closed",
        "title": "WT-8005 Fix a prepare commit bug that could leave the history store entry unresolved",
        "body": "The history store entry was left out without resolving by the prepared transaction\r\ncommit when the on-disk written key has both the start and stop time pairs and they are\r\nfrom the same prepared transaction.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 26, 2021 at 04:42 GMT",
        "updated_at": "Friday Aug 27, 2021 at 04:06 GMT",
        "closed_at": "Friday Aug 27, 2021 at 04:06 GMT",
        "merged_at": "Friday Aug 27, 2021 at 04:06 GMT"
    },
    {
        "key": "WT-7914",
        "number": 6940,
        "state": "closed",
        "title": "WT-7914 Update the documentation correctly and only when required",
        "body": "- The task `compile wiredtiger docs` does not process all branches anymore, it takes an input arg which defines the branches where the doc needs to be compiled. When it is triggered as part of the PR testing, it should only try to compile the current branch with the current changes. When it is triggered through `update wiredtiger docs`, it should compile all branches.\r\n- The task `update wiredtiger docs` is now triggered once a week.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 25, 2021 at 12:22 GMT",
        "updated_at": "Wednesday Sep 01, 2021 at 00:22 GMT",
        "closed_at": "Wednesday Sep 01, 2021 at 00:22 GMT",
        "merged_at": "Wednesday Sep 01, 2021 at 00:22 GMT"
    },
    {
        "key": "WT-7999",
        "number": 6938,
        "state": "closed",
        "title": "WT-7999 Fix the assert to handle an update in the middle with max stop timestamp",
        "body": "It is possible that there can be an update in the history store with\r\nmax stop timestamp in the middle of same key updates when checkpoint\r\nwrites the committed update and its following updates including the\r\nhistory store changes before the transaction fixes the history store\r\nupdate to have a proper stop timestamp.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 25, 2021 at 07:14 GMT",
        "updated_at": "Thursday Aug 26, 2021 at 21:55 GMT",
        "closed_at": "Thursday Aug 26, 2021 at 21:55 GMT",
        "merged_at": "Thursday Aug 26, 2021 at 21:55 GMT"
    },
    {
        "key": "WT-7964",
        "number": 6936,
        "state": "closed",
        "title": "WT-7964 Fix rollback to stable incorrectly not rolling back updates at snap_max (v5.0 backport) (#6908)",
        "body": "(cherry picked from commit d384ce4385d1827e36fd4eeed893cc9b45b42111)",
        "base_ref": "mongodb-5.0",
        "created_at": "Wednesday Aug 25, 2021 at 04:29 GMT",
        "updated_at": "Wednesday Aug 25, 2021 at 04:39 GMT",
        "closed_at": "Wednesday Aug 25, 2021 at 04:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7566",
        "number": 6934,
        "state": "closed",
        "title": "WT-7566 Fix write after free error for dead dhandles. (v4.2 backport) (#6583)",
        "body": "(cherry picked from commit 02da3990fb1d9da925ff5ba5e0ba7042b48f5c46)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Aug 25, 2021 at 01:46 GMT",
        "updated_at": "Wednesday Aug 25, 2021 at 23:08 GMT",
        "closed_at": "Wednesday Aug 25, 2021 at 23:08 GMT",
        "merged_at": "Wednesday Aug 25, 2021 at 23:08 GMT"
    },
    {
        "key": "WT-7998",
        "number": 6933,
        "state": "closed",
        "title": "WT-7998 Minor fixes on Cache subpage of Architecture Guide",
        "body": "Fix a typo, add description of modify structures for column-store\r\nleaf pages, and clean up a couple formatting details.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 24, 2021 at 16:23 GMT",
        "updated_at": "Tuesday Aug 24, 2021 at 18:06 GMT",
        "closed_at": "Tuesday Aug 24, 2021 at 18:06 GMT",
        "merged_at": "Tuesday Aug 24, 2021 at 18:06 GMT"
    },
    {
        "key": "WT-7996",
        "number": 6932,
        "state": "closed",
        "title": "WT-7996 More column-store C tests",
        "body": "Make the wt{2447,2535,2853,2909,4105} tests honor -t c for columns. Add these cases to make check.\r\n\r\nAlso handle -t f for fixed-length columns in wt2535 as the change was simple and the test appears to work.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 24, 2021 at 04:25 GMT",
        "updated_at": "Friday Aug 27, 2021 at 03:53 GMT",
        "closed_at": "Friday Aug 27, 2021 at 03:53 GMT",
        "merged_at": "Friday Aug 27, 2021 at 03:53 GMT"
    },
    {
        "key": "WT-7995",
        "number": 6931,
        "state": "closed",
        "title": "WT-7995 Use checkpoint visibility as global visibility when running",
        "body": "Always use the checkpoint visibility to decide the global visibility\r\nwhen the checkpoint is running. This is to avoid inconsistent data visiblity\r\nwhen the checkpoint has finished checkpointing the data store and before it\r\ncheckpoints the history store.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 24, 2021 at 03:05 GMT",
        "updated_at": "Wednesday Aug 25, 2021 at 01:33 GMT",
        "closed_at": "Wednesday Aug 25, 2021 at 01:33 GMT",
        "merged_at": "Wednesday Aug 25, 2021 at 01:33 GMT"
    },
    {
        "key": "WT-7973",
        "number": 6928,
        "state": "closed",
        "title": "WT-7973 Skip deleting updates in the history store if all the record in history store for that key is obsolete",
        "body": "I noticed that a lot of times we are unnecessarily failing eviction when we try to remove already obsolete updates from the history store. With this change, we should be able to mitigate this problem.",
        "base_ref": "develop",
        "created_at": "Monday Aug 23, 2021 at 08:57 GMT",
        "updated_at": "Thursday Oct 07, 2021 at 17:53 GMT",
        "closed_at": "Monday Aug 23, 2021 at 10:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6911",
        "number": 6927,
        "state": "closed",
        "title": "Revert \"WT-6911 Block manager page for the architecture guide.\"",
        "body": "Reverts wiredtiger/wiredtiger#6814",
        "base_ref": "develop",
        "created_at": "Monday Aug 23, 2021 at 06:22 GMT",
        "updated_at": "Monday Aug 23, 2021 at 06:22 GMT",
        "closed_at": "Monday Aug 23, 2021 at 06:22 GMT",
        "merged_at": "Monday Aug 23, 2021 at 06:22 GMT"
    },
    {
        "key": "WT-7984",
        "number": 6926,
        "state": "closed",
        "title": "WT-7984 Fix a bug that could cause a checkpoint to omit a page of data",
        "body": "Here are the steps involved:\r\n\r\n1. page P exists on disk with address A and is clean\r\n2. checkpoint starts running\r\n3. page P is modified, setting first_dirty_txn ahead of the checkpoint\r\n4. eviction chooses P to evict (in some tree ahead of the checkpoint)\r\n5. eviction reconciles P\r\n6. the main part of reconciliation succeeds but _rec_hs_wrapup fails\r\n   with EBUSY\r\n7. at this point, ref->addr == NULL && mod->rec_result == 0 and the\r\n   block for A has been freed, the page is dirty but first_dirty_txn is\r\n   ahead of the checkpoint\r\n8. checkpoint skips writing P, and when it writes P\u2019s parent, it\r\n   considers P, sees the missing address and takes the WT_CHILD_IGNORE\r\n   path \u2014 i.e., nothing is written and the original content of P (from\r\n   step 1) is missing from the checkpoint\r\n\r\nThe fix is to reorder __rec_write_wrapup to call __rec_hs_wrapup before it clears out the address.",
        "base_ref": "develop",
        "created_at": "Monday Aug 23, 2021 at 05:50 GMT",
        "updated_at": "Wednesday Aug 25, 2021 at 01:27 GMT",
        "closed_at": "Wednesday Aug 25, 2021 at 01:27 GMT",
        "merged_at": "Wednesday Aug 25, 2021 at 01:27 GMT"
    },
    {
        "key": "WT-7974",
        "number": 6925,
        "state": "closed",
        "title": "WT-7974 More column fixes and tests.",
        "body": "Fix RLE counting bug in column rollback to stable, and an error-path\r\nfree twice in __rollback_ondisk_fixup_key.\r\n\r\nAdd column support to C tests: schema_abort, timestamp_abort,\r\ntruncated_log, wt6185_modify_ts, wt6616_checkpoint_oldest_ts.\r\nRe-enable wt2246_col_append.\r\n\r\nAdd two new Python tests, one for the RLE-counting bug and the other\r\nthat exercises various cases of rollback-to-stable vs. column-store\r\nRLE cells.\r\n\r\nCondense the commit message; so far this is the same as the previous\r\nversion of this changeset.",
        "base_ref": "develop",
        "created_at": "Friday Aug 20, 2021 at 19:20 GMT",
        "updated_at": "Monday Aug 23, 2021 at 22:07 GMT",
        "closed_at": "Sunday Aug 22, 2021 at 00:41 GMT",
        "merged_at": "Sunday Aug 22, 2021 at 00:41 GMT"
    },
    {
        "key": "WT-7909",
        "number": 6922,
        "state": "closed",
        "title": "Revert \"WT-7909 Use a new method to check concurrent user transactions before starting rollback to stable\"",
        "body": "Reverts wiredtiger/wiredtiger#6896",
        "base_ref": "develop",
        "created_at": "Friday Aug 20, 2021 at 04:13 GMT",
        "updated_at": "Friday Aug 20, 2021 at 04:14 GMT",
        "closed_at": "Friday Aug 20, 2021 at 04:14 GMT",
        "merged_at": "Friday Aug 20, 2021 at 04:14 GMT"
    },
    {
        "key": "WT-7437",
        "number": 6921,
        "state": "closed",
        "title": "Revert \"WT-7437 Upgrade documentation to doxygen 1.8.17 (3.6 backport) (#6614)\"",
        "body": "Reverts wiredtiger/wiredtiger#6919",
        "base_ref": "mongodb-3.6",
        "created_at": "Friday Aug 20, 2021 at 03:56 GMT",
        "updated_at": "Friday Aug 20, 2021 at 05:21 GMT",
        "closed_at": "Friday Aug 20, 2021 at 05:21 GMT",
        "merged_at": "Friday Aug 20, 2021 at 05:21 GMT"
    },
    {
        "key": "WT-7974",
        "number": 6920,
        "state": "closed",
        "title": "Revert \"WT-7974 More column fixes and tests\"",
        "body": "Reverts wiredtiger/wiredtiger#6915",
        "base_ref": "develop",
        "created_at": "Friday Aug 20, 2021 at 02:38 GMT",
        "updated_at": "Friday Aug 20, 2021 at 02:38 GMT",
        "closed_at": "Friday Aug 20, 2021 at 02:38 GMT",
        "merged_at": "Friday Aug 20, 2021 at 02:38 GMT"
    },
    {
        "key": "WT-7437",
        "number": 6919,
        "state": "closed",
        "title": "WT-7437 Upgrade documentation to doxygen 1.8.17 (3.6 backport) (#6614)",
        "body": "(cherry picked from commit f34c50a7b1ed4a3e021a63fd44478a03f29c2552)",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Aug 19, 2021 at 05:32 GMT",
        "updated_at": "Friday Aug 20, 2021 at 03:43 GMT",
        "closed_at": "Thursday Aug 19, 2021 at 23:24 GMT",
        "merged_at": "Thursday Aug 19, 2021 at 23:24 GMT"
    },
    {
        "key": "WT-7974",
        "number": 6915,
        "state": "closed",
        "title": "WT-7974 More column fixes and tests",
        "body": "This changeset fixes two bugs in column-store rollback to stable (one a RLE counting issue that can cause data corruption, one an error-path free-twice), adds three new Python tests related to the interaction of rollback to stable with column-store RLE cells (including one for a base case of the performance issue in WT-7956), and adds column support to several more csuite tests.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 18, 2021 at 22:28 GMT",
        "updated_at": "Friday Aug 20, 2021 at 01:49 GMT",
        "closed_at": "Friday Aug 20, 2021 at 01:49 GMT",
        "merged_at": "Friday Aug 20, 2021 at 01:49 GMT"
    },
    {
        "key": "WT-7970",
        "number": 6914,
        "state": "closed",
        "title": "WT-7970 startup race in test_checkpoint produces WT_NOTFOUND",
        "body": "Set the stable timestamp before starting the checkpointer and clock threads.\r\n\r\nAvoids a race where the checkpointer starts up before the clock thread\r\nand then chokes because there's no stable timestamp yet. Seen in WT-7970.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 18, 2021 at 20:28 GMT",
        "updated_at": "Friday Aug 20, 2021 at 16:38 GMT",
        "closed_at": "Thursday Aug 19, 2021 at 15:32 GMT",
        "merged_at": "Thursday Aug 19, 2021 at 15:32 GMT"
    },
    {
        "key": "WT-7006",
        "number": 6912,
        "state": "closed",
        "title": "Revert \"WT-7006 Write connection subpage for Architecture Guide\"",
        "body": "Reverts wiredtiger/wiredtiger#6873",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 18, 2021 at 01:29 GMT",
        "updated_at": "Wednesday Aug 18, 2021 at 01:30 GMT",
        "closed_at": "Wednesday Aug 18, 2021 at 01:30 GMT",
        "merged_at": "Wednesday Aug 18, 2021 at 01:30 GMT"
    },
    {
        "key": "WT-7941",
        "number": 6911,
        "state": "closed",
        "title": "WT-7941 Add an Evergreen task to test abort/recovery using test/format",
        "body": "- Added evergreen test\r\n- Added configuration check to avoid in_memory field to be set to 1 when abort/recovery is enabled",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 18, 2021 at 00:48 GMT",
        "updated_at": "Thursday Aug 19, 2021 at 23:58 GMT",
        "closed_at": "Thursday Aug 19, 2021 at 23:57 GMT",
        "merged_at": "Thursday Aug 19, 2021 at 23:57 GMT"
    },
    {
        "key": "WT-7905",
        "number": 6910,
        "state": "closed",
        "title": "WT-7905 Fix incorrect builtin behaviour for builds in CMake",
        "body": "Currently the CMake build doesn't have correct builtin behaviour, the extension libraries that have been configured for builtins, show no symbols within the wiredtiger library. This ticket aims to fix that via compiling extension libraries for builtins as OBJECTS.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 17, 2021 at 23:25 GMT",
        "updated_at": "Thursday Aug 19, 2021 at 04:38 GMT",
        "closed_at": "Thursday Aug 19, 2021 at 04:38 GMT",
        "merged_at": "Thursday Aug 19, 2021 at 04:38 GMT"
    },
    {
        "key": "WT-7965",
        "number": 6909,
        "state": "closed",
        "title": "WT-7965 Update connection base write generation number at the end of recovery checkpoint",
        "body": "During WiredTiger recovery, all the existing transaction ids are reset\r\nbased on the page write generation numbers present on the page after\r\nrollback to stable is successfully finished. To avoid having transaction ids\r\non the pages that are written during recovery, WiredTiger uses the same\r\nwrite generation number of the page that exists for the new page image\r\nthat is going write to disk. With this approach, when this page gets\r\nloaded during the process of rollback to stable, it preserves the transaction\r\nids and resets only upon the next restart.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 17, 2021 at 08:36 GMT",
        "updated_at": "Friday Aug 20, 2021 at 02:13 GMT",
        "closed_at": "Friday Aug 20, 2021 at 02:13 GMT",
        "merged_at": "Friday Aug 20, 2021 at 02:13 GMT"
    },
    {
        "key": "WT-7961",
        "number": 6907,
        "state": "closed",
        "title": "WT-7961 Sometimes lag oldest timestamp in timestamp_abort.",
        "body": "Here's a small change to sometimes lag the oldest timestamp. @bvpvamsikrishna and @kommiharibabu please review and decide if this change is worthwhile.",
        "base_ref": "develop",
        "created_at": "Monday Aug 16, 2021 at 15:49 GMT",
        "updated_at": "Tuesday Aug 17, 2021 at 18:12 GMT",
        "closed_at": "Tuesday Aug 17, 2021 at 18:12 GMT",
        "merged_at": "Tuesday Aug 17, 2021 at 18:12 GMT"
    },
    {
        "key": "WT-7955",
        "number": 6906,
        "state": "closed",
        "title": "WT-7955 Copy format.sh and CONFIG.stress to the build directory with CMake",
        "body": "- When `format.sh` is executed, it looks for the binary `t` within the same directory or under `build_posix/test/format`. \r\n- `CONFIG.stress` is the default configuration used by `format.sh`, both are under `test/format`.\r\n-  When building with CMake, a different build directory could be used, hence `t` is not found. By copying `format.sh` to `<build_dir>/test/format`, where `t` is, we can tackle this issue. We copy the default test configuration for the same reason. ",
        "base_ref": "develop",
        "created_at": "Monday Aug 16, 2021 at 10:41 GMT",
        "updated_at": "Wednesday Aug 18, 2021 at 01:16 GMT",
        "closed_at": "Wednesday Aug 18, 2021 at 01:16 GMT",
        "merged_at": "Wednesday Aug 18, 2021 at 01:16 GMT"
    },
    {
        "key": "WT-7907",
        "number": 6905,
        "state": "closed",
        "title": "WT-7907 Add dependencies to swig module definition in CMake build",
        "body": "The [CMake documentation](https://cmake.org/cmake/help/latest/module/UseSWIG.html) describes the possibility of adding extra dependencies through `SWIG_MODULE_<name>_EXTRA_DEPS` when defining the swig module.\r\nThe change made in this PR will ensure the last version of `wiredtiger.in` is used to generate `wiredtigerPYTHON_wrap.c`.",
        "base_ref": "develop",
        "created_at": "Monday Aug 16, 2021 at 07:59 GMT",
        "updated_at": "Wednesday Aug 18, 2021 at 01:12 GMT",
        "closed_at": "Wednesday Aug 18, 2021 at 01:12 GMT",
        "merged_at": "Wednesday Aug 18, 2021 at 01:12 GMT"
    },
    {
        "key": "WT-6907",
        "number": 6903,
        "state": "closed",
        "title": "WT-6907 Snapshot subpage for Architecture Guide",
        "body": "Rework the snapshot sub-page entry for the Architecture Guide. This being expanded to discuss the role of snapshots when using transactions, the internals of snapshots and how snapshots are used when checkpointing.\r\n\r\nPlease let me know if I should add any additional sections on snapshots or expand on any points! I was a bit uncertain with what exact areas should be covered under this topic. Happy to iterate on anything :)",
        "base_ref": "develop",
        "created_at": "Monday Aug 16, 2021 at 03:16 GMT",
        "updated_at": "Monday Aug 30, 2021 at 00:52 GMT",
        "closed_at": "Monday Aug 30, 2021 at 00:52 GMT",
        "merged_at": "Monday Aug 30, 2021 at 00:52 GMT"
    },
    {
        "key": "WT-6926",
        "number": 6901,
        "state": "closed",
        "title": "WT-6926 Update WiredTiger source code to include 2021 copyright notices (v4.0 backport) ",
        "body": "These changes backport WT-6926, which is a ticket to update the WiredTiger source code to include 2021 copyright notices.",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Aug 16, 2021 at 00:44 GMT",
        "updated_at": "Tuesday Aug 17, 2021 at 03:39 GMT",
        "closed_at": "Tuesday Aug 17, 2021 at 03:39 GMT",
        "merged_at": "Tuesday Aug 17, 2021 at 03:39 GMT"
    },
    {
        "key": "WT-6908",
        "number": 6899,
        "state": "closed",
        "title": "WT-6908 Write \"cache\" subpage for Architecture Guide",
        "body": "Draft of cache page for Architecture Guide.\r\n\r\nThe boundaries of what belongs here as opposed to related pages in the Arch Guide was fuzzy. I debated including a description of read generations here, but decided that would be a better fit on the eviction page. Let me know if there are more topics or details that you think belong here.\r\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 12, 2021 at 21:33 GMT",
        "updated_at": "Tuesday Aug 24, 2021 at 01:03 GMT",
        "closed_at": "Tuesday Aug 24, 2021 at 01:03 GMT",
        "merged_at": "Tuesday Aug 24, 2021 at 01:03 GMT"
    },
    {
        "key": "WT-7956",
        "number": 6898,
        "state": "closed",
        "title": "WT-7956 RTS to skip deleted or stable RLE cells",
        "body": "Rollback to stable doesn't fix any of the deleted or stable\r\nRLE cells as part aborting any unstable updates present on the\r\npage. Skipping them improves the rollback to stable performance.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 12, 2021 at 14:00 GMT",
        "updated_at": "Thursday Aug 12, 2021 at 23:02 GMT",
        "closed_at": "Thursday Aug 12, 2021 at 23:02 GMT",
        "merged_at": "Thursday Aug 12, 2021 at 23:02 GMT"
    },
    {
        "key": "WT-7902",
        "number": 6897,
        "state": "closed",
        "title": "WT-7902 Retry the alter command after a system wide checkpoint",
        "body": "It is possible that alter command may return EBUSY error when the\r\ntable is modified in parallel by eviction threads. Retry it once\r\nafter a system wide checkpoint.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 12, 2021 at 09:37 GMT",
        "updated_at": "Wednesday Sep 01, 2021 at 09:17 GMT",
        "closed_at": "Wednesday Sep 01, 2021 at 09:17 GMT",
        "merged_at": "Wednesday Sep 01, 2021 at 09:17 GMT"
    },
    {
        "key": "WT-7953",
        "number": 6894,
        "state": "closed",
        "title": "WT-7953 Teach s_string to not look inside getopt option lists.",
        "body": "Teach s_string to not look at option lists in __wt_getopt calls.\r\n\r\nPurge a bunch of unwanted spelling words that are no longer needed. (This doesn't get rid of all of them, because a few also appear in usage messages and those are not so easily filtered. But it helps.)",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 11, 2021 at 21:16 GMT",
        "updated_at": "Tuesday Aug 17, 2021 at 14:15 GMT",
        "closed_at": "Tuesday Aug 17, 2021 at 14:15 GMT",
        "merged_at": "Tuesday Aug 17, 2021 at 14:15 GMT"
    },
    {
        "key": "WT-7952",
        "number": 6893,
        "state": "closed",
        "title": "WT-7952 Minor docs build fixes.",
        "body": "Minor docs build fixes:\r\n    (1) sort --ignore-case is a gnuism; -f is portable.\r\n    (2) handle another case of needing a space at the end of @plantuml_start{file.png }  (seems to be required in doxygen 1.8.20, dunno why)",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 11, 2021 at 20:54 GMT",
        "updated_at": "Wednesday Aug 11, 2021 at 22:18 GMT",
        "closed_at": "Wednesday Aug 11, 2021 at 22:18 GMT",
        "merged_at": "Wednesday Aug 11, 2021 at 22:18 GMT"
    },
    {
        "key": "WT-7928",
        "number": 6892,
        "state": "closed",
        "title": "WT-7928 VLCS checkpoint and additional test suite improvements (redux)",
        "body": "Second go, with a fix for the ubsan issue that cropped up (WT-7951)\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 11, 2021 at 19:58 GMT",
        "updated_at": "Thursday Aug 12, 2021 at 18:55 GMT",
        "closed_at": "Thursday Aug 12, 2021 at 06:36 GMT",
        "merged_at": "Thursday Aug 12, 2021 at 06:36 GMT"
    },
    {
        "key": "WT-7928",
        "number": 6890,
        "state": "closed",
        "title": "Revert \"WT-7928 VLCS checkpoint and additional test suite improvements\"",
        "body": "Reverts wiredtiger/wiredtiger#6870",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 11, 2021 at 06:56 GMT",
        "updated_at": "Wednesday Aug 11, 2021 at 07:47 GMT",
        "closed_at": "Wednesday Aug 11, 2021 at 07:47 GMT",
        "merged_at": "Wednesday Aug 11, 2021 at 07:47 GMT"
    },
    {
        "key": "WT-7858",
        "number": 6888,
        "state": "closed",
        "title": "WT-7858 Fix malloc writing out of bounds in compatibility-test-for-newer-releases",
        "body": "This pull request aims to fix the memory out of bounds failure occurring within WT-7858. This problem comes from not being able to allocate enough memory from the buffer grow function. Recent changes from WT-7234 needs to be back ported, to account for the fact of overflow items, and to allocate enough memory.",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Aug 11, 2021 at 00:58 GMT",
        "updated_at": "Sunday Aug 15, 2021 at 23:48 GMT",
        "closed_at": "Sunday Aug 15, 2021 at 23:48 GMT",
        "merged_at": "Sunday Aug 15, 2021 at 23:48 GMT"
    },
    {
        "key": "WT-7947",
        "number": 6887,
        "state": "closed",
        "title": "WT-7947 Allow CMake to take in a specific Python version",
        "body": "If a users system has multiple python installations, when building the Python API, CMake will preference using the highest python version found in the system path. This may be un-ideal if the user wants to preference a specific python version to build the API with e.g. ignore another installation.\r\n    \r\nThis change adds the ability to pass a preferred Python version through a CMake config option. If unset, behaviour will default to the previous functionality, taking the newest Python version it can find.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 10, 2021 at 07:24 GMT",
        "updated_at": "Monday Aug 16, 2021 at 00:23 GMT",
        "closed_at": "Monday Aug 16, 2021 at 00:23 GMT",
        "merged_at": "Monday Aug 16, 2021 at 00:23 GMT"
    },
    {
        "key": "WT-7866",
        "number": 6885,
        "state": "closed",
        "title": "WT-7866 Update cache_hs_insert limits in cppsuite-hs-cleanup-stress",
        "body": "- Updated limits for cache_hs_insert\r\n- Updated logs for timestamps\r\n- Added the units to the duration of the test in the logs",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 10, 2021 at 01:25 GMT",
        "updated_at": "Tuesday Aug 10, 2021 at 23:15 GMT",
        "closed_at": "Tuesday Aug 10, 2021 at 23:15 GMT",
        "merged_at": "Tuesday Aug 10, 2021 at 23:15 GMT"
    },
    {
        "key": "WT-7718",
        "number": 6884,
        "state": "closed",
        "title": "WT-7718 Rename 'build_cmake'",
        "body": "We have been using directories prefixed with name `build_` to indicate that it's the directory to build inside of.\r\nThe `build_cmake` directory contains CMake source code for the build system and should generally not be used as a build directory. This could be problematic as building inside `build_cmake` could clobber and delete sources that are needed to execute the build.\r\n\r\nThis change primarily renames the `build_cmake` directory to just `cmake` as to avoid potential confusion. I've chosen the name `cmake` as most open source projects I've found that need a separate directory for CMake scripts often just call the directory 'cmake' or 'CMake'. It would be generally better to align to community conventions, making it less confusing (particularly to external users). ",
        "base_ref": "develop",
        "created_at": "Monday Aug 09, 2021 at 22:29 GMT",
        "updated_at": "Tuesday Aug 10, 2021 at 06:48 GMT",
        "closed_at": "Tuesday Aug 10, 2021 at 06:48 GMT",
        "merged_at": "Tuesday Aug 10, 2021 at 06:48 GMT"
    },
    {
        "key": "WT-7943",
        "number": 6883,
        "state": "closed",
        "title": "WT-7943: Do not assert timestamps when rolling back a prepared transactions.",
        "body": "I'm struggling to get the python tests running locally (a constant struggle to import `_wiredtiger`, but for the first time I couldn't figure out how to move forward). Meaning I haven't run the test I wrote -- nor have I verified that test fails as expected without the patch.\r\n\r\nHoping to get partial confirmation from the automated testing. In the meantime I'll dive into the problem on my machine.",
        "base_ref": "develop",
        "created_at": "Monday Aug 09, 2021 at 20:50 GMT",
        "updated_at": "Tuesday Aug 10, 2021 at 17:30 GMT",
        "closed_at": "Tuesday Aug 10, 2021 at 17:30 GMT",
        "merged_at": "Tuesday Aug 10, 2021 at 17:30 GMT"
    },
    {
        "key": "WT-6568",
        "number": 6881,
        "state": "closed",
        "title": "WT-6568 Fix split generation use(v4.0 backport). (#6174)",
        "body": "* WT-6568 Fix split generation use.\r\n\r\nSplits rely on a generation (aka epoch) to prevent data structures being\r\nfreed when they are reachable by a reader.  The pattern when overwriting\r\nneeds to be: (1) overwrite a data structure; (2) read the current\r\ngeneration; (3) queue old data structures to be freed; (4) (optional)\r\nswitch to a new generation.\r\n\r\nThat is, we need to accept during splits that data structures cannot be\r\nfreed immediately.  Also, since other threads may be splitting in\r\nparallel, the global split generation can be incremented at any time\r\n(and new readers can start in the new generation).  So it is critical\r\nthat we read the generation after all new data has been published.\r\nSubsequent readers (in at least that generation) will see the new data.\r\n\r\nIncrementing the split generation could be deferred until a thread is\r\nperforming garbage collection.  However, since every eviction involves\r\nsome garbage collection and we don't want any thread to wait for all\r\nreaders to drain, this change bumps the generation after the split has\r\ncompleted (and all overwritten data is queued to be freed in the current\r\ngeneration).\r\n\r\n* Add failing CONFIG to format directory.\r\n\r\n* Add comment, refactor some gen code.\r\n\r\n* wt_gen_next return void.\r\n\r\n* Revert the refactoring of gen_oldest and wt_gen_active.\r\n\r\n* Remove spurious comma.\r\n\r\nCo-authored-by: Susan LoVerso <sue@mongodb.com>\r\n(cherry picked from commit 7efc96d9b2e4ef4899f65eef28de4aab3e06ded2)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Aug 09, 2021 at 04:48 GMT",
        "updated_at": "Thursday Aug 12, 2021 at 00:35 GMT",
        "closed_at": "Thursday Aug 12, 2021 at 00:35 GMT",
        "merged_at": "Thursday Aug 12, 2021 at 00:35 GMT"
    },
    {
        "key": "WT-7938",
        "number": 6877,
        "state": "closed",
        "title": "WT-7938 Fix rollback-to-stable memory leak on error",
        "body": "On error, __rollback_abort_ondisk_kv() can fail to release allocated memory returned in the value buffer. Don't crack the underlying value unless we actually need it and restructure error handling to avoid leaking the memory. Use a scratch buffer instead of allocating new memory on each iteration.",
        "base_ref": "develop",
        "created_at": "Saturday Aug 07, 2021 at 20:05 GMT",
        "updated_at": "Sunday Aug 08, 2021 at 15:02 GMT",
        "closed_at": "Sunday Aug 08, 2021 at 15:02 GMT",
        "merged_at": "Sunday Aug 08, 2021 at 15:02 GMT"
    },
    {
        "key": "WT-7936",
        "number": 6875,
        "state": "closed",
        "title": "WT-7936 format.sh fails running recovery tests",
        "body": "@raviprakashgiri29, @lukech, I tried to run the format.sh abort/recovery tests today and they failed with some odd errors. It turned out format.sh needed to be upgraded to check for the updated format CONFIG strings, and with that change, the script runs.",
        "base_ref": "develop",
        "created_at": "Friday Aug 06, 2021 at 21:45 GMT",
        "updated_at": "Monday Aug 09, 2021 at 23:05 GMT",
        "closed_at": "Monday Aug 09, 2021 at 23:05 GMT",
        "merged_at": "Monday Aug 09, 2021 at 23:05 GMT"
    },
    {
        "key": "WT-7908",
        "number": 6874,
        "state": "closed",
        "title": "WT-7908 Make variable-length column store work again with the static tests (try 2)",
        "body": "Since it turns out the failure in WT-7931 isn't caused by these changes, I added a clause to skip the offending part of the failing test (hs18) until WT-7931 is sorted. Otherwise this is the same as before after a rebase.",
        "base_ref": "develop",
        "created_at": "Friday Aug 06, 2021 at 19:21 GMT",
        "updated_at": "Friday Aug 06, 2021 at 20:00 GMT",
        "closed_at": "Friday Aug 06, 2021 at 20:00 GMT",
        "merged_at": "Friday Aug 06, 2021 at 20:00 GMT"
    },
    {
        "key": "WT-7908",
        "number": 6871,
        "state": "closed",
        "title": "Revert \"WT-7908 Make variable-length column store work again with the static tests\"",
        "body": "Reverts wiredtiger/wiredtiger#6853",
        "base_ref": "develop",
        "created_at": "Friday Aug 06, 2021 at 04:43 GMT",
        "updated_at": "Friday Aug 06, 2021 at 05:38 GMT",
        "closed_at": "Friday Aug 06, 2021 at 05:38 GMT",
        "merged_at": "Friday Aug 06, 2021 at 05:38 GMT"
    },
    {
        "key": "WT-7928",
        "number": 6870,
        "state": "closed",
        "title": "WT-7928 VLCS checkpoint and additional test suite improvements",
        "body": "Found a column-store bug that was not captured by the Python tests. The accompanying changeset adds a Python test for that problem, and contains additional improvements to both the C and Python test suites; mostly further or re-enabled column-store test cases, but also fixes test_checkpoint and enables previously-broken row-store cases as well.",
        "base_ref": "develop",
        "created_at": "Friday Aug 06, 2021 at 02:12 GMT",
        "updated_at": "Wednesday Aug 11, 2021 at 20:55 GMT",
        "closed_at": "Wednesday Aug 11, 2021 at 04:43 GMT",
        "merged_at": "Wednesday Aug 11, 2021 at 04:43 GMT"
    },
    {
        "key": "WT-6755",
        "number": 6869,
        "state": "closed",
        "title": "WT-6755 Add a glossary to the architecture guide.",
        "body": "Included a way to have sortable tables.\r\nIncluded \\sic, a new way to indicate that the chosen spelling is correct,\r\nwithout entering it into the dictionary.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 05, 2021 at 19:28 GMT",
        "updated_at": "Friday Aug 06, 2021 at 21:11 GMT",
        "closed_at": "Friday Aug 06, 2021 at 21:11 GMT",
        "merged_at": "Friday Aug 06, 2021 at 21:11 GMT"
    },
    {
        "key": "WT-7757",
        "number": 6868,
        "state": "closed",
        "title": "Revert \"WT-7757 Skip internal and leaf pages with content obsolete to the reader\"",
        "body": "Reverts wiredtiger/wiredtiger#6842",
        "base_ref": "develop",
        "created_at": "Thursday Aug 05, 2021 at 05:25 GMT",
        "updated_at": "Thursday Aug 05, 2021 at 05:28 GMT",
        "closed_at": "Thursday Aug 05, 2021 at 05:28 GMT",
        "merged_at": "Thursday Aug 05, 2021 at 05:28 GMT"
    },
    {
        "key": "WT-6913",
        "number": 6867,
        "state": "closed",
        "title": "WT-6913 file system and os interface architecture guide",
        "body": "The architecture guide for how WiredTiger's file systems and os interface. ",
        "base_ref": "develop",
        "created_at": "Thursday Aug 05, 2021 at 00:50 GMT",
        "updated_at": "Monday Sep 20, 2021 at 01:29 GMT",
        "closed_at": "Wednesday Sep 01, 2021 at 07:06 GMT",
        "merged_at": "Wednesday Sep 01, 2021 at 07:06 GMT"
    },
    {
        "key": "WT-7408",
        "number": 6866,
        "state": "closed",
        "title": " WT-7408 API to return row and byte counts for objects and cursor ranges",
        "body": "Re-open pull request for WT-7408.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 04, 2021 at 18:19 GMT",
        "updated_at": "Tuesday Nov 02, 2021 at 20:36 GMT",
        "closed_at": "Tuesday Nov 02, 2021 at 20:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6083",
        "number": 6861,
        "state": "closed",
        "title": "WT-6083 Fix test/checkpoint problem and enable associated row-store test cases.",
        "body": "The test code thought it could rewind time to 0 on each run, but that doesn't work, so any invocation asking for multiple runs blew up. Instead, just let time(stamps) roll forward from one run to the next.\r\n\r\nEnable the cases in smoke.sh that had been disabled due to this problem, and also add them to the corresponding cmake test run.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 03, 2021 at 20:15 GMT",
        "updated_at": "Friday Aug 06, 2021 at 00:23 GMT",
        "closed_at": "Friday Aug 06, 2021 at 00:23 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7935",
        "number": 6860,
        "state": "closed",
        "title": "WT-7935 add arm64 implementation of rdtsc equivalent instruction",
        "body": "The instruction isn't exactly the same as instead of cpu cycles its a system\r\nclock. However, this is the same clocksource used for clock_gettime() and\r\nsimilar calls so it has the same true resolution as those.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 03, 2021 at 16:36 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:14 GMT",
        "closed_at": "Friday Aug 06, 2021 at 17:14 GMT",
        "merged_at": "Friday Aug 06, 2021 at 17:14 GMT"
    },
    {
        "key": "WT-7517",
        "number": 6859,
        "state": "closed",
        "title": "WT-7517 Add a field to mark a checkpoint a part of a checkpoint array",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 03, 2021 at 04:26 GMT",
        "updated_at": "Tuesday Aug 03, 2021 at 23:31 GMT",
        "closed_at": "Tuesday Aug 03, 2021 at 23:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7521",
        "number": 6858,
        "state": "closed",
        "title": "WT-7521 Remove excess cached checkpoint list invalidations",
        "body": "There are a few places in the code where we unnecessarily invalidate the cached checkpoint list - remove these invalidations.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 03, 2021 at 02:59 GMT",
        "updated_at": "Tuesday Aug 03, 2021 at 23:36 GMT",
        "closed_at": "Tuesday Aug 03, 2021 at 23:36 GMT",
        "merged_at": "Tuesday Aug 03, 2021 at 23:36 GMT"
    },
    {
        "key": "WT-7898",
        "number": 6857,
        "state": "closed",
        "title": "WT-7898 Upload many-coll-test artifacts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 03, 2021 at 01:32 GMT",
        "updated_at": "Wednesday Aug 04, 2021 at 03:15 GMT",
        "closed_at": "Wednesday Aug 04, 2021 at 03:15 GMT",
        "merged_at": "Wednesday Aug 04, 2021 at 03:15 GMT"
    },
    {
        "key": "WT-7663",
        "number": 6856,
        "state": "closed",
        "title": "WT-7663 The local store extension allows only readonly FS operations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 02, 2021 at 20:42 GMT",
        "updated_at": "Tuesday Aug 10, 2021 at 16:31 GMT",
        "closed_at": "Tuesday Aug 10, 2021 at 16:31 GMT",
        "merged_at": "Tuesday Aug 10, 2021 at 16:31 GMT"
    },
    {
        "key": "WT-7352",
        "number": 6855,
        "state": "closed",
        "title": "WT-7352 Fix test_hs01 conflict between concurrent operations in cursor modify.",
        "body": "Rollback error at small cache (often at 5MB cache). Hence, increased the cache from 50MB to 200MB, as an extremely constrained cache is not necessary for the test. (As with the large_modify(), where the error occurs, we are not testing eviction but checking for the modified content in the history store after recovery. )",
        "base_ref": "develop",
        "created_at": "Monday Aug 02, 2021 at 03:38 GMT",
        "updated_at": "Wednesday Aug 04, 2021 at 06:21 GMT",
        "closed_at": "Wednesday Aug 04, 2021 at 06:21 GMT",
        "merged_at": "Wednesday Aug 04, 2021 at 06:21 GMT"
    },
    {
        "key": "WT-7363",
        "number": 6854,
        "state": "closed",
        "title": "WT-7363 Add support for dumping history store output in hex format",
        "body": "Added support for a combination of `-p` and `-x` options to `wt dump` command. In this case, the output will be the same as with `-p` except the raw data arrays. They will be formatted the way hex does that - without leading escape symbols before each byte and without trying to convert each byte to a char. For example this raw bytes dump in pretty format `\\0a\\1c@\\0b\\1fG\\0c\"N\\00` will look like this in pretty hex `0a1c400b1f470c224e00`",
        "base_ref": "develop",
        "created_at": "Friday Jul 30, 2021 at 08:55 GMT",
        "updated_at": "Saturday Aug 14, 2021 at 10:24 GMT",
        "closed_at": "Saturday Aug 14, 2021 at 10:24 GMT",
        "merged_at": "Saturday Aug 14, 2021 at 10:24 GMT"
    },
    {
        "key": "WT-7908",
        "number": 6853,
        "state": "closed",
        "title": "WT-7908 Make variable-length column store work again with the static tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 29, 2021 at 23:59 GMT",
        "updated_at": "Friday Aug 06, 2021 at 18:46 GMT",
        "closed_at": "Friday Aug 06, 2021 at 00:13 GMT",
        "merged_at": "Friday Aug 06, 2021 at 00:13 GMT"
    },
    {
        "key": "WT-7844",
        "number": 6852,
        "state": "closed",
        "title": "WT-7844 Add tiered_abort stress test for tiered storage.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 29, 2021 at 18:27 GMT",
        "updated_at": "Wednesday Sep 08, 2021 at 14:02 GMT",
        "closed_at": "Wednesday Sep 08, 2021 at 14:02 GMT",
        "merged_at": "Wednesday Sep 08, 2021 at 14:02 GMT"
    },
    {
        "key": "WT-7757",
        "number": 6851,
        "state": "closed",
        "title": "WT-7757 Skip internal and leaf pages with content obsolete to the reader - modify check without locking",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 28, 2021 at 05:58 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:26 GMT",
        "closed_at": "Wednesday Jul 28, 2021 at 13:40 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7757",
        "number": 6850,
        "state": "closed",
        "title": "WT-7757 Incremental change - Move check for page modify outside the lock",
        "body": "",
        "base_ref": "wt-7757-reduce-int-walk",
        "created_at": "Wednesday Jul 28, 2021 at 05:56 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:26 GMT",
        "closed_at": "Wednesday Jul 28, 2021 at 05:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7776",
        "number": 6849,
        "state": "closed",
        "title": "WT-7776 Add a hard limit on the number of modify updates before we instantiate a complete update (v4.2 backport)",
        "body": "(cherry picked from commit 1235ec5a646243d5fe9fcdfd21ece082cd16f646)\r\n\r\nPlease note this is not a clean cherry-pick.",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Jul 28, 2021 at 01:33 GMT",
        "updated_at": "Thursday Jul 29, 2021 at 06:49 GMT",
        "closed_at": "Thursday Jul 29, 2021 at 06:49 GMT",
        "merged_at": "Thursday Jul 29, 2021 at 06:49 GMT"
    },
    {
        "key": "WT-7895",
        "number": 6848,
        "state": "closed",
        "title": "WT-7895 Fix Doxygen error on data file page",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 27, 2021 at 07:51 GMT",
        "updated_at": "Wednesday Jul 28, 2021 at 00:33 GMT",
        "closed_at": "Wednesday Jul 28, 2021 at 00:33 GMT",
        "merged_at": "Wednesday Jul 28, 2021 at 00:33 GMT"
    },
    {
        "key": "WT-7876",
        "number": 6847,
        "state": "closed",
        "title": "WT-7876 Update rollback to stable test to use correct boolean values and update statistic checking logic.",
        "body": "\u2026se in the restart options.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 27, 2021 at 06:45 GMT",
        "updated_at": "Thursday Jul 29, 2021 at 04:44 GMT",
        "closed_at": "Thursday Jul 29, 2021 at 04:44 GMT",
        "merged_at": "Thursday Jul 29, 2021 at 04:44 GMT"
    },
    {
        "key": "WT-7901",
        "number": 6846,
        "state": "closed",
        "title": "WT-7901 test suite cleanup",
        "body": "Remove unnecessary `timestamp_str` implementations and statistics configurations.\r\n\r\nSecond pass, create a generally available `timestamp_str` implementation (if somebody hates this for some reason, it can be separately reverted).",
        "base_ref": "develop",
        "created_at": "Monday Jul 26, 2021 at 20:01 GMT",
        "updated_at": "Tuesday Jul 27, 2021 at 05:53 GMT",
        "closed_at": "Tuesday Jul 27, 2021 at 05:53 GMT",
        "merged_at": "Tuesday Jul 27, 2021 at 05:53 GMT"
    },
    {
        "key": "WT-7900",
        "number": 6845,
        "state": "closed",
        "title": "WT-7900 format test program column-store mode doesn't correctly insert new records",
        "body": "Clear the list of inserted records between individual runs of operations (inside a larger, single run): the numbers left in the list can conceivably overlap leading to races, or more likely, the list is entirely filled between runs and an insert in a subsequent run would fail because the count says there are empty slots in the table, and there aren't.\r\n\r\nIncrement the pointer into the table of inserted records, otherwise we'll never resolve any inserted record that isn't in the first slot of the table. This means we haven't been testing inserts of more than 256 records per thread (and only testing that lightly, this is a significant change).",
        "base_ref": "develop",
        "created_at": "Monday Jul 26, 2021 at 18:40 GMT",
        "updated_at": "Monday Jul 26, 2021 at 21:12 GMT",
        "closed_at": "Monday Jul 26, 2021 at 21:12 GMT",
        "merged_at": "Monday Jul 26, 2021 at 21:12 GMT"
    },
    {
        "key": "WT-7897",
        "number": 6844,
        "state": "closed",
        "title": "WT-7897 Enable verbose logging for test_backup15",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 26, 2021 at 04:52 GMT",
        "updated_at": "Tuesday Jul 27, 2021 at 02:37 GMT",
        "closed_at": "Tuesday Jul 27, 2021 at 02:37 GMT",
        "merged_at": "Tuesday Jul 27, 2021 at 02:37 GMT"
    },
    {
        "key": "WT-7842",
        "number": 6843,
        "state": "closed",
        "title": "WT-7842 Remove explicit ulimit call for many-coll-test",
        "body": "`ulimit -n 1000000` is no longer needed as it is by default now.",
        "base_ref": "develop",
        "created_at": "Monday Jul 26, 2021 at 02:32 GMT",
        "updated_at": "Monday Jul 26, 2021 at 07:20 GMT",
        "closed_at": "Monday Jul 26, 2021 at 07:20 GMT",
        "merged_at": "Monday Jul 26, 2021 at 07:20 GMT"
    },
    {
        "key": "WT-7757",
        "number": 6842,
        "state": "closed",
        "title": "WT-7757 Skip internal and leaf pages with content obsolete to the reader",
        "body": "In WT-7619 we attempted to skip those leaf pages that have obsolete content as per the aggregated information for this particular reader. There is a cost to doing this check per leaf page when the same check done at a higher level could have helped in avoiding that entire sub-tree. In this change, I am using the function __wt_btcur_skip_page, as a custom skip function to the tree walk. This generalising the check over the whole walk, offers us an ability to skip larger portions of the tree. In my local reproduction of the reported performance issue, I see a significant performance improvement. ",
        "base_ref": "develop",
        "created_at": "Monday Jul 26, 2021 at 01:48 GMT",
        "updated_at": "Tuesday Aug 03, 2021 at 11:19 GMT",
        "closed_at": "Tuesday Aug 03, 2021 at 11:19 GMT",
        "merged_at": "Tuesday Aug 03, 2021 at 11:19 GMT"
    },
    {
        "key": "WT-7893",
        "number": 6841,
        "state": "closed",
        "title": "WT-7893 test_encrypt08 fails after merge of wiredtiger_open fixes",
        "body": "Catch up to run.py no longer printing wiredtiger_open failures on stdout.",
        "base_ref": "develop",
        "created_at": "Friday Jul 23, 2021 at 23:32 GMT",
        "updated_at": "Tuesday Jul 27, 2021 at 20:59 GMT",
        "closed_at": "Monday Jul 26, 2021 at 20:02 GMT",
        "merged_at": "Monday Jul 26, 2021 at 20:02 GMT"
    },
    {
        "key": "WT-6905",
        "number": 6840,
        "state": "closed",
        "title": "WT-6905 Row-store and column-store subpage for Architecture Guide",
        "body": "This PR reworks the row-store subpage from the Architecture Guide.\r\nIt has been decided to include both row-stores and column-stores within the same page, highlighting the differences of each.\r\nHappy to include/talk about more sections if required.",
        "base_ref": "develop",
        "created_at": "Friday Jul 23, 2021 at 21:32 GMT",
        "updated_at": "Wednesday Aug 04, 2021 at 02:55 GMT",
        "closed_at": "Wednesday Aug 04, 2021 at 02:55 GMT",
        "merged_at": "Wednesday Aug 04, 2021 at 02:55 GMT"
    },
    {
        "key": "WT-7890",
        "number": 6839,
        "state": "closed",
        "title": "WT-7890 Fix CMake syntax error in config_lib",
        "body": "The config_lib incorrectly dereferences \"has_lib_${config_name}\"\r\nin a verbose log/print. This being a small typo incorrectly\r\nordering an underscore '_' after a '$' dereference. This leading\r\nto a CMake runtime error when encountering this specific path.",
        "base_ref": "develop",
        "created_at": "Friday Jul 23, 2021 at 00:17 GMT",
        "updated_at": "Friday Jul 23, 2021 at 03:25 GMT",
        "closed_at": "Friday Jul 23, 2021 at 03:25 GMT",
        "merged_at": "Friday Jul 23, 2021 at 03:25 GMT"
    },
    {
        "key": "WT-7889",
        "number": 6838,
        "state": "closed",
        "title": "WT-7889 Remove uses of WT and other doc cleanup.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 22, 2021 at 18:32 GMT",
        "updated_at": "Thursday Jul 22, 2021 at 19:05 GMT",
        "closed_at": "Thursday Jul 22, 2021 at 19:05 GMT",
        "merged_at": "Thursday Jul 22, 2021 at 19:05 GMT"
    },
    {
        "key": "WT-7830",
        "number": 6837,
        "state": "closed",
        "title": "WT-7830 test (a test pr)",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 22, 2021 at 07:36 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:39 GMT",
        "closed_at": "Thursday Jul 22, 2021 at 07:43 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7007",
        "number": 6836,
        "state": "closed",
        "title": "WT-7007 Backup architecture guide",
        "body": "This architecture guide explain the details of how WT backup\r\nis supported with internals.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 22, 2021 at 07:05 GMT",
        "updated_at": "Wednesday Jul 28, 2021 at 03:33 GMT",
        "closed_at": "Wednesday Jul 28, 2021 at 03:33 GMT",
        "merged_at": "Wednesday Jul 28, 2021 at 03:33 GMT"
    },
    {
        "key": "WT-6910",
        "number": 6835,
        "state": "closed",
        "title": "WT-6910 History Store architecture guide page",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 22, 2021 at 04:47 GMT",
        "updated_at": "Thursday Aug 05, 2021 at 03:17 GMT",
        "closed_at": "Thursday Aug 05, 2021 at 03:17 GMT",
        "merged_at": "Thursday Aug 05, 2021 at 03:17 GMT"
    },
    {
        "key": "WT-7759",
        "number": 6834,
        "state": "closed",
        "title": "WT-7759 Reduce number of calls to update obsolete function",
        "body": "This ticket originally investigates the regression that was occuring in genny workloads. This change attempts to improve the regression, by restricting the number of calls made to the obsolete call functions, by grabbing the minimum timestamp within the update list, and using that as the more restrict limit. \r\n\r\nPreviously we would use the pinned timestamp and whenever we decide to call the obsolete function again, it would check the global pinned timestamp within the __wt_txn_visible_all function. This means that this predicate would always hold true.  ",
        "base_ref": "develop",
        "created_at": "Thursday Jul 22, 2021 at 01:40 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:26 GMT",
        "closed_at": "Friday Jul 30, 2021 at 02:46 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7882",
        "number": 6833,
        "state": "closed",
        "title": "WT-7882 Fix discrepancy for wiredtiger.in on mongodb-4.4 branch",
        "body": "Some discrepancy was detected by `s_all` check for the `wiredtiger.in` file, after the recent branch syncing between `mongodb-4.4` and `mongodb-5.0` branches. Fix the discrepancy to make `mongodb-4.4` branch truly in sync with `mongodb-5.0`.",
        "base_ref": "mongodb-4.4",
        "created_at": "Thursday Jul 22, 2021 at 00:41 GMT",
        "updated_at": "Thursday Jul 22, 2021 at 03:45 GMT",
        "closed_at": "Thursday Jul 22, 2021 at 03:45 GMT",
        "merged_at": "Thursday Jul 22, 2021 at 03:45 GMT"
    },
    {
        "key": "WT-7860",
        "number": 6832,
        "state": "closed",
        "title": "WT-7860 Improve code coverage reporting",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 21, 2021 at 22:15 GMT",
        "updated_at": "Tuesday Jul 27, 2021 at 00:11 GMT",
        "closed_at": "Tuesday Jul 27, 2021 at 00:11 GMT",
        "merged_at": "Tuesday Jul 27, 2021 at 00:11 GMT"
    },
    {
        "key": "WT-7592",
        "number": 6831,
        "state": "closed",
        "title": "WT-7592 Remove support for WT_SESSION::transaction_sync and background sync.",
        "body": "@agorrod Here are the changes to remove support for background sync in log_flush and transactions, to give you an idea of what/how much code it removes. AFAIK no one has ever used this interface, but it is possible my knowledge is incomplete. We can either take this branch or close it and leave it in the code.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 21, 2021 at 19:15 GMT",
        "updated_at": "Thursday Jul 29, 2021 at 13:21 GMT",
        "closed_at": "Thursday Jul 29, 2021 at 13:21 GMT",
        "merged_at": "Thursday Jul 29, 2021 at 13:21 GMT"
    },
    {
        "key": "WT-7883",
        "number": 6830,
        "state": "closed",
        "title": "WT-7883 Remove incorrect wt_free statement.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 21, 2021 at 16:17 GMT",
        "updated_at": "Wednesday Jul 21, 2021 at 17:24 GMT",
        "closed_at": "Wednesday Jul 21, 2021 at 17:24 GMT",
        "merged_at": "Wednesday Jul 21, 2021 at 17:24 GMT"
    },
    {
        "key": "WT-7865",
        "number": 6829,
        "state": "closed",
        "title": "WT-7865 Disable timeout assert while waiting for eviction to quiesce prior to RTS and test",
        "body": "Enable this assert and the test once the reason behind the active transactions\r\nthat are still clearing the cache for more than two minutes in an idle system of \r\nno more operations.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 21, 2021 at 01:18 GMT",
        "updated_at": "Wednesday Jul 21, 2021 at 05:26 GMT",
        "closed_at": "Wednesday Jul 21, 2021 at 05:26 GMT",
        "merged_at": "Wednesday Jul 21, 2021 at 05:26 GMT"
    },
    {
        "key": "WT-7871",
        "number": 6828,
        "state": "closed",
        "title": "WT-7871 Remove barrier comment that is no longer true (v4.2 backport)",
        "body": "This is a bulk backport of the following related changes:\r\n\r\n- WT-7871 Remove barrier comment that is no longer true\r\n- WT-7874 Remove two other stale barrier comments",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Jul 21, 2021 at 01:15 GMT",
        "updated_at": "Wednesday Jul 21, 2021 at 13:09 GMT",
        "closed_at": "Wednesday Jul 21, 2021 at 13:09 GMT",
        "merged_at": "Wednesday Jul 21, 2021 at 13:09 GMT"
    },
    {
        "key": "WT-7830",
        "number": 6827,
        "state": "closed",
        "title": "WT-7830 Migrate the python setup scripts to use cmake",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 21, 2021 at 00:29 GMT",
        "updated_at": "Friday Jul 30, 2021 at 04:43 GMT",
        "closed_at": "Friday Jul 30, 2021 at 04:43 GMT",
        "merged_at": "Friday Jul 30, 2021 at 04:43 GMT"
    },
    {
        "key": "WT-7870",
        "number": 6826,
        "state": "closed",
        "title": "WT-7870 Fix measurement of cyclomatic code complexity (take 2, with the correct JIRA ticket number)",
        "body": "Modified the setup for the code complexity measurements (by moving the install of Metrix++ to outside the 'src' directory. This ensures that our complexity measurements don't accidentally include the Metrix++ source code too.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 20, 2021 at 07:42 GMT",
        "updated_at": "Wednesday Jul 21, 2021 at 00:01 GMT",
        "closed_at": "Wednesday Jul 21, 2021 at 00:01 GMT",
        "merged_at": "Wednesday Jul 21, 2021 at 00:01 GMT"
    },
    {
        "key": "WT-6926",
        "number": 6825,
        "state": "closed",
        "title": "WT-6926 Update WiredTiger source code to include 2021 copyright notices (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Jul 20, 2021 at 07:22 GMT",
        "updated_at": "Tuesday Jul 20, 2021 at 08:11 GMT",
        "closed_at": "Tuesday Jul 20, 2021 at 08:11 GMT",
        "merged_at": "Tuesday Jul 20, 2021 at 08:11 GMT"
    },
    {
        "key": null,
        "number": 6824,
        "state": "closed",
        "title": "Wt 7870 fix measurement of cyclomatic code complexity",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 20, 2021 at 06:48 GMT",
        "updated_at": "Tuesday Jul 20, 2021 at 07:35 GMT",
        "closed_at": "Tuesday Jul 20, 2021 at 07:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-8970",
        "number": 6823,
        "state": "closed",
        "title": "Revert \"WT-8970 Fix measurement of cyclomatic code complexity\"",
        "body": "Reverts wiredtiger/wiredtiger#6820",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 20, 2021 at 06:43 GMT",
        "updated_at": "Tuesday Jul 20, 2021 at 06:44 GMT",
        "closed_at": "Tuesday Jul 20, 2021 at 06:44 GMT",
        "merged_at": "Tuesday Jul 20, 2021 at 06:44 GMT"
    },
    {
        "key": "WT-7787",
        "number": 6822,
        "state": "closed",
        "title": "WT-7787 Don't read pages for checkpoint cleanup when the cache is in aggressive mode",
        "body": "When a checkpoint is tasked with garbage collection, it has to\r\nclean up the older content from a file that is now obsolete. To\r\ndo so, the checkpoint-cleanup process can effectively visit and\r\nload all of the internal pages in a file. Doing so when the cache\r\nhas already reached an aggressive state can be counterproductive.\r\nNot only reading of the pages into the cache for the cleanup can\r\nbe slower, but the checkpoint itself could hold eviction in the\r\naggressive state longer.\r\n\r\nWhen the eviction is set to aggressive, this change allows\r\ncheckpointing to skip loading the internal pages that are not\r\nalready in cache. This will help a faster checkpoint, and a higher\r\nchance for the cache to get back to normal.\r\n\r\nCo-authored-by: Haribabu Kommi <haribabu.kommi@mongodb.com>\r\nCo-authored-by: Sulabh Mahajan <sulabh.mahajan@mongodb.com>",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 20, 2021 at 05:39 GMT",
        "updated_at": "Wednesday Jul 21, 2021 at 00:48 GMT",
        "closed_at": "Wednesday Jul 21, 2021 at 00:48 GMT",
        "merged_at": "Wednesday Jul 21, 2021 at 00:48 GMT"
    },
    {
        "key": "WT-7599",
        "number": 6821,
        "state": "closed",
        "title": "WT-7599 Compatibility test - create multiple config files for each release",
        "body": "Updated the compatibility script to create multiple config files each per release, so that each branch is provided a CONFIG file that it understands.\r\nRemoved fixed length and variable length runs type.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 20, 2021 at 02:11 GMT",
        "updated_at": "Saturday Jul 31, 2021 at 10:14 GMT",
        "closed_at": "Saturday Jul 31, 2021 at 10:14 GMT",
        "merged_at": "Saturday Jul 31, 2021 at 10:14 GMT"
    },
    {
        "key": "WT-7870",
        "number": 6820,
        "state": "closed",
        "title": "WT-7870 Fix measurement of cyclomatic code complexity",
        "body": "Modified the setup for the code complexity measurements (by moving the install of Metrix++ to outside the 'src' directory. This ensures that our complexity measurements don't accidentally include the Metrix++ source code too.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 20, 2021 at 01:27 GMT",
        "updated_at": "Tuesday Jul 20, 2021 at 07:35 GMT",
        "closed_at": "Tuesday Jul 20, 2021 at 02:18 GMT",
        "merged_at": "Tuesday Jul 20, 2021 at 02:18 GMT"
    },
    {
        "key": "WT-7675",
        "number": 6819,
        "state": "closed",
        "title": "WT-7675 Query last ckpt timestamp changes without taking checkpoint (#6672) (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Jul 20, 2021 at 01:06 GMT",
        "updated_at": "Tuesday Jul 20, 2021 at 01:41 GMT",
        "closed_at": "Tuesday Jul 20, 2021 at 01:41 GMT",
        "merged_at": "Tuesday Jul 20, 2021 at 01:41 GMT"
    },
    {
        "key": "WT-7874",
        "number": 6818,
        "state": "closed",
        "title": "WT-7874 Remove two other stale comments.",
        "body": "@keithbostic in this PR I removed the comments that are stale. If you want different text instead, let me know.",
        "base_ref": "develop",
        "created_at": "Monday Jul 19, 2021 at 18:58 GMT",
        "updated_at": "Monday Jul 19, 2021 at 19:56 GMT",
        "closed_at": "Monday Jul 19, 2021 at 19:56 GMT",
        "merged_at": "Monday Jul 19, 2021 at 19:56 GMT"
    },
    {
        "key": "WT-7871",
        "number": 6817,
        "state": "closed",
        "title": "WT-7871 Remove comment that is no longer true.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 19, 2021 at 17:00 GMT",
        "updated_at": "Monday Jul 19, 2021 at 18:19 GMT",
        "closed_at": "Monday Jul 19, 2021 at 18:19 GMT",
        "merged_at": "Monday Jul 19, 2021 at 18:19 GMT"
    },
    {
        "key": "WT-6914",
        "number": 6816,
        "state": "closed",
        "title": "WT-6914 Write database files subpage for architecture guide",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 19, 2021 at 07:03 GMT",
        "updated_at": "Thursday Jul 22, 2021 at 05:11 GMT",
        "closed_at": "Thursday Jul 22, 2021 at 05:11 GMT",
        "merged_at": "Thursday Jul 22, 2021 at 05:11 GMT"
    },
    {
        "key": "WT-7703",
        "number": 6815,
        "state": "closed",
        "title": "WT-7703 Fix timeout in test_checkpoint_snapshot04",
        "body": "If the page gets evicted by an eviction thread all the written updates can be written to disk, because eviction threads operate with a transaction snapshot. It seems that all the pages are trying to evict with the application thread after the transaction is finished can write only the globally visible updates. As this issue is happening only on Z-series machines, this could be the reason behind the cache stuck issue.\r\n\r\nThe better solution to fix this problem is to increase the cache size of the test to not let the eviction be triggered. The test intention is to verify the backup database, so there is no point in triggering the eviction.",
        "base_ref": "develop",
        "created_at": "Monday Jul 19, 2021 at 06:10 GMT",
        "updated_at": "Monday Jul 19, 2021 at 23:32 GMT",
        "closed_at": "Monday Jul 19, 2021 at 23:32 GMT",
        "merged_at": "Monday Jul 19, 2021 at 23:32 GMT"
    },
    {
        "key": "WT-6911",
        "number": 6814,
        "state": "closed",
        "title": "WT-6911 Block manager page for the architecture guide.",
        "body": "The original PR is quite old and due to git difficulties now contains 300 unrelated commits so I'm going to close it and move across open conversations to this PR. Apologies for any confusion.\r\n\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 19, 2021 at 04:24 GMT",
        "updated_at": "Monday Aug 23, 2021 at 06:23 GMT",
        "closed_at": "Friday Aug 20, 2021 at 05:36 GMT",
        "merged_at": "Friday Aug 20, 2021 at 05:36 GMT"
    },
    {
        "key": "WT-7607",
        "number": 6813,
        "state": "closed",
        "title": "WT-7607 Add the possibility to use an existing database for many-coll-test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 19, 2021 at 02:00 GMT",
        "updated_at": "Tuesday Jul 20, 2021 at 05:38 GMT",
        "closed_at": "Tuesday Jul 20, 2021 at 05:38 GMT",
        "merged_at": "Tuesday Jul 20, 2021 at 05:38 GMT"
    },
    {
        "key": "WT-7864",
        "number": 6812,
        "state": "closed",
        "title": "WT-7864 Add support to run.py for running lists/ranges of scenarios in a test",
        "body": "Add support to run.py for running lists/ranges of scenarios with -s.\r\n\r\nThe syntax supported matches e.g. 1-3,5,7-9. A single number is handled\r\nas a trivial list.",
        "base_ref": "develop",
        "created_at": "Saturday Jul 17, 2021 at 01:13 GMT",
        "updated_at": "Wednesday Jul 21, 2021 at 23:58 GMT",
        "closed_at": "Wednesday Jul 21, 2021 at 13:11 GMT",
        "merged_at": "Wednesday Jul 21, 2021 at 13:11 GMT"
    },
    {
        "key": "WT-6568",
        "number": 6811,
        "state": "closed",
        "title": "WT-6568 Fix split generation use (v4.2 backport)",
        "body": "Splits rely on a generation (aka epoch) to prevent data structures being freed when they are reachable by a reader. The pattern when overwriting needs to be: (1) overwrite a data structure; (2) read the current generation; (3) queue old data structures to be freed; (4) (optional) switch to a new generation.\r\n\r\nThat is, we need to accept during splits that data structures cannot be freed immediately. Also, since other threads may be splitting in parallel, the global split generation can be incremented at any time (and new readers can start in the new generation). So it is critical that we read the generation after all new data has been published. Subsequent readers (in at least that generation) will see the new data.\r\n\r\nIncrementing the split generation could be deferred until a thread is performing garbage collection. However, since every eviction involves some garbage collection and we don't want any thread to wait for all readers to drain, this change bumps the generation after the split has completed (and all overwritten data is queued to be freed in the current generation).\r\n\r\n**Note:** During backport I had to replace `F_ISSET(ref, WT_REF_FLAG_INTERNAL)` with `WT_PAGE_IS_INTERNAL(ref->page)` since in 4.2 WT_REF structure doesn't have `flags` data member. It was added in https://github.com/wiredtiger/wiredtiger/commit/12ef251cbbeaabf5ecb6ba5e587265f85579cec9",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Jul 16, 2021 at 07:57 GMT",
        "updated_at": "Wednesday Jul 21, 2021 at 00:04 GMT",
        "closed_at": "Wednesday Jul 21, 2021 at 00:04 GMT",
        "merged_at": "Wednesday Jul 21, 2021 at 00:04 GMT"
    },
    {
        "key": "RT-8685",
        "number": 6810,
        "state": "closed",
        "title": "BACKPORT-8685 WT-5766 and WT-6709 ",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Jul 16, 2021 at 06:38 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:37 GMT",
        "closed_at": "Friday Aug 06, 2021 at 17:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7629",
        "number": 6809,
        "state": "closed",
        "title": "WT-7629 Run clang format on `.cxx` files in the codebase",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 16, 2021 at 05:34 GMT",
        "updated_at": "Friday Jul 16, 2021 at 06:10 GMT",
        "closed_at": "Friday Jul 16, 2021 at 06:10 GMT",
        "merged_at": "Friday Jul 16, 2021 at 06:10 GMT"
    },
    {
        "key": "RT-8685",
        "number": 6808,
        "state": "closed",
        "title": "BACKPORT-8685 WT-5766 and WT-6709",
        "body": "Moved transaction state that is read from non-owning sessions to a separate WT_TXN_SHARED structure and use this for the read and durable queues. This means that after being placed in the read and durable queues, this shared transaction state is not written to.\r\n\r\nThe main functional change here is that we've added a pinned read timestamp which is used to calculate how far we can move oldest. We were previously hitting a problem when reading history store modifies since we need to shift our read timestamp forward to read earlier modifies or the base update itself. If the oldest timestamp is updated during that process, it's possible to obsolete data that we aren't allowed to yet. This issue is solved by maintaining an immutable pinned read timestamp in the shared transaction state and only modifying the read timestamp of the local transaction state.\r\n\r\nCo-authored-by: Michael Cahill <michael.cahill@mongodb.com>\r\nCo-authored-by: Keith Bostic <keith.bostic@mongodb.com>\r\n(cherry picked from commit 2f13fa75ea16abb06b3abbdcf8481364bcce5514)",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Jul 16, 2021 at 05:26 GMT",
        "updated_at": "Friday Jul 16, 2021 at 06:37 GMT",
        "closed_at": "Friday Jul 16, 2021 at 06:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6902",
        "number": 6807,
        "state": "closed",
        "title": "WT-6902 Metadata subpage for Architecture Guide",
        "body": "This PR reworks the metadata subpage entry for the Architecture Guide. This subpage being expanded to discuss the format of the WiredTiger.wt table, the role of metadata when checkpointing and how to read WiredTiger metadata.\r\n\r\nPlease let me know if I should add any additional sections on WT metadata or expand on any points! I was a bit uncertain with what areas should be covered under this topic. Happy to iterate on anything :) ",
        "base_ref": "develop",
        "created_at": "Friday Jul 16, 2021 at 04:33 GMT",
        "updated_at": "Thursday Jul 22, 2021 at 00:59 GMT",
        "closed_at": "Thursday Jul 22, 2021 at 00:59 GMT",
        "merged_at": "Thursday Jul 22, 2021 at 00:59 GMT"
    },
    {
        "key": "WT-7856",
        "number": 6806,
        "state": "closed",
        "title": "WT-7856 Enable flush test with open cursor in test_tiered04",
        "body": "I should have removed this code when I fixed WT-7591.  I'm addressing that now.\r\n\r\nI ran the test a few thousand times without incident.  (I.e., left it running while I made a some tea)",
        "base_ref": "develop",
        "created_at": "Thursday Jul 15, 2021 at 22:07 GMT",
        "updated_at": "Friday Jul 16, 2021 at 02:13 GMT",
        "closed_at": "Friday Jul 16, 2021 at 02:08 GMT",
        "merged_at": "Friday Jul 16, 2021 at 02:08 GMT"
    },
    {
        "key": "WT-7852",
        "number": 6805,
        "state": "closed",
        "title": "WT-7852 Don't release eviction server lock when evicting pages",
        "body": "This is waiting on #6089.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 15, 2021 at 07:23 GMT",
        "updated_at": "Friday Jul 16, 2021 at 00:46 GMT",
        "closed_at": "Friday Jul 16, 2021 at 00:46 GMT",
        "merged_at": "Friday Jul 16, 2021 at 00:46 GMT"
    },
    {
        "key": "WT-7843",
        "number": 6804,
        "state": "closed",
        "title": "WT-7843 Add missing macros in cxx files to define PRIxMAX",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 15, 2021 at 06:10 GMT",
        "updated_at": "Thursday Jul 15, 2021 at 23:24 GMT",
        "closed_at": "Thursday Jul 15, 2021 at 23:24 GMT",
        "merged_at": "Thursday Jul 15, 2021 at 23:24 GMT"
    },
    {
        "key": "WT-7851",
        "number": 6803,
        "state": "closed",
        "title": "WT-7851 Fix illegal checksum configuration in compatibility-test-for-newer-releases",
        "body": "Force checksums \"on\" in the run, there are choices that aren't backward compatible.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 15, 2021 at 01:15 GMT",
        "updated_at": "Thursday Jul 15, 2021 at 21:19 GMT",
        "closed_at": "Thursday Jul 15, 2021 at 21:19 GMT",
        "merged_at": "Thursday Jul 15, 2021 at 21:19 GMT"
    },
    {
        "key": "WT-7848",
        "number": 6802,
        "state": "closed",
        "title": "WT-7848 Upping cache size limit of hs cleanup stress test until issue with limits is fixed.",
        "body": "\u2026d in WT",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 14, 2021 at 23:35 GMT",
        "updated_at": "Monday Jul 19, 2021 at 04:12 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 23:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7732",
        "number": 6801,
        "state": "closed",
        "title": "WT-7732 Add a timeout configuration for flush_tier.",
        "body": "@keitharnoldsmith I asked a question in the ticket about whether to leave in `lock_wait` while adding `timeout`. This first version keeps both. ",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 14, 2021 at 20:17 GMT",
        "updated_at": "Monday Jul 19, 2021 at 20:39 GMT",
        "closed_at": "Monday Jul 19, 2021 at 20:39 GMT",
        "merged_at": "Monday Jul 19, 2021 at 20:39 GMT"
    },
    {
        "key": "WT-7846",
        "number": 6800,
        "state": "closed",
        "title": "WT-7846 Disable test_tiered08",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 14, 2021 at 19:27 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 20:24 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 20:24 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 20:24 GMT"
    },
    {
        "key": "WT-7799",
        "number": 6799,
        "state": "closed",
        "title": "WT-7799 In python tests, when wiredtiger_open fails, print no extra output",
        "body": "The exception resulting from the wiredtiger_open failure will still be thrown, so the fact that there is a failure will not be lost.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 14, 2021 at 17:40 GMT",
        "updated_at": "Friday Jul 16, 2021 at 17:16 GMT",
        "closed_at": "Friday Jul 16, 2021 at 17:16 GMT",
        "merged_at": "Friday Jul 16, 2021 at 17:16 GMT"
    },
    {
        "key": "WT-7603",
        "number": 6798,
        "state": "closed",
        "title": "WT-7603 Sort statistics to fix JSON output (v4.4 backport)",
        "body": "(cherry picked from commit 52ae846abb9e2002f1c8cfa4cf399edc641d6f53)",
        "base_ref": "mongodb-4.4",
        "created_at": "Wednesday Jul 14, 2021 at 07:38 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 23:38 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 23:38 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 23:38 GMT"
    },
    {
        "key": "WT-7778",
        "number": 6797,
        "state": "closed",
        "title": "WT-7778 Fix null dereferencing, and return of incorrect allocation size",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 14, 2021 at 03:49 GMT",
        "updated_at": "Thursday Jul 15, 2021 at 03:24 GMT",
        "closed_at": "Thursday Jul 15, 2021 at 03:24 GMT",
        "merged_at": "Thursday Jul 15, 2021 at 03:24 GMT"
    },
    {
        "key": "WT-7632",
        "number": 6796,
        "state": "closed",
        "title": "WT-7632 Fix invalid argument in test_rollback_to_stable14",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 14, 2021 at 02:15 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 23:27 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 23:27 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 23:27 GMT"
    },
    {
        "key": "WT-7626",
        "number": 6795,
        "state": "closed",
        "title": "WT-7626 We can only ensure update restore eviction happened in test debug mode09",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 14, 2021 at 01:42 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 04:01 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 03:50 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 03:50 GMT"
    },
    {
        "key": "WT-7762",
        "number": 6794,
        "state": "closed",
        "title": "WT-7762 Create stressful configs for the two tests add them to evergreen.",
        "body": "I had to use the large scale tests variant here as it doesn't specify a -j which is what I want, @etienneptl you worked on this recently let me know if that's an issue.\r\n\r\nAdditionally the default configs have been updated to act as code coverage tests, so they check stats but have gigantic ranges so they won't hit.\r\n\r\nDue to merging in the fixes branch here the commit history is a bit odd.\r\n\r\nThe stressful configs will change somewhat as I run a number of evergreen patch builds and adjust them to suit.\r\n\r\nI also handled rollback errors in a few locations, including cursor next which was a bit unexpected.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 23:51 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 22:39 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 22:39 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 22:39 GMT"
    },
    {
        "key": "WT-7841",
        "number": 6793,
        "state": "closed",
        "title": "WT-7841 add \"only unencrypted\" checksum configuration, switch checksum default to \"on\"",
        "body": "Add the \"unencrypted\" checksum configuration, to checksum only unencrypted blocks.\r\n\r\nSwitch default checksum configuration to \"on\".\r\n\r\n@sueloverso, @agorrod hasn't approved the change to the default configuration, if/when that's done can you please do the review?",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 21:22 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 22:37 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 22:37 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 22:37 GMT"
    },
    {
        "key": "WT-7758",
        "number": 6792,
        "state": "closed",
        "title": "WT-7758 Force evict a page when the update chain is too long.",
        "body": "This ticket is created as part of BF-21313, to fix the 156% increase in write latency. ",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 11:38 GMT",
        "updated_at": "Monday Jul 19, 2021 at 15:30 GMT",
        "closed_at": "Monday Jul 19, 2021 at 15:30 GMT",
        "merged_at": "Monday Jul 19, 2021 at 15:30 GMT"
    },
    {
        "key": "WT-7837",
        "number": 6791,
        "state": "closed",
        "title": "WT-7837 Clear updates structure in wt_hs_insert_updates after processing each key",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 08:11 GMT",
        "updated_at": "Friday Jul 16, 2021 at 01:22 GMT",
        "closed_at": "Friday Jul 16, 2021 at 01:22 GMT",
        "merged_at": "Friday Jul 16, 2021 at 01:22 GMT"
    },
    {
        "key": "WT-7836",
        "number": 6790,
        "state": "closed",
        "title": "WT-7836 Fixing a number of small issues in the cppsuite test framework.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 07:54 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 00:45 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 00:45 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 00:45 GMT"
    },
    {
        "key": "WT-7836",
        "number": 6789,
        "state": "closed",
        "title": "Revert \"WT-7836 Fixing a number of small cppsuite issues\"",
        "body": "Reverts wiredtiger/wiredtiger#6787",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 07:45 GMT",
        "updated_at": "Tuesday Jul 13, 2021 at 07:45 GMT",
        "closed_at": "Tuesday Jul 13, 2021 at 07:45 GMT",
        "merged_at": "Tuesday Jul 13, 2021 at 07:45 GMT"
    },
    {
        "key": "WT-7723",
        "number": 6788,
        "state": "closed",
        "title": "WT-7723 Delete the updates in the history store if they are rolled back or is the first stable update on the update chain ",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 06:05 GMT",
        "updated_at": "Thursday Jul 15, 2021 at 00:46 GMT",
        "closed_at": "Thursday Jul 15, 2021 at 00:46 GMT",
        "merged_at": "Thursday Jul 15, 2021 at 00:46 GMT"
    },
    {
        "key": "WT-7836",
        "number": 6787,
        "state": "closed",
        "title": "WT-7836 Fixing a number of small cppsuite issues",
        "body": "Each issue is a in a separate commit, so please look commit by commit. The thread context change came about as the {{hs_cleanup}} test was using the wrong session. \r\n\r\nThe idea is that the only session available now is the one in the thread context, which is also shared with the transaction context.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 04:52 GMT",
        "updated_at": "Tuesday Jul 13, 2021 at 07:15 GMT",
        "closed_at": "Tuesday Jul 13, 2021 at 07:15 GMT",
        "merged_at": "Tuesday Jul 13, 2021 at 07:15 GMT"
    },
    {
        "key": "WT-7763",
        "number": 6786,
        "state": "closed",
        "title": "WT-7763 Coverity issues found in the stress testing framework",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 03:58 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 01:37 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 01:37 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 01:37 GMT"
    },
    {
        "key": "WT-7831",
        "number": 6785,
        "state": "closed",
        "title": "WT-7831 Clear transaction ids from previous run when repack the cell",
        "body": "To support transaction id based rollback to stable, WT didn't reset\r\nthe transaction ids stored on the pages by not incrementing the\r\nbase_write_gen of each btree upon page access until rollback to stable\r\noperates on that page. Once RTS operates on that page and reset the\r\nremaining transaction ids that are present on the page that are stable.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 02:34 GMT",
        "updated_at": "Thursday Jul 15, 2021 at 02:15 GMT",
        "closed_at": "Thursday Jul 15, 2021 at 02:15 GMT",
        "merged_at": "Thursday Jul 15, 2021 at 02:15 GMT"
    },
    {
        "key": "WT-7619",
        "number": 6784,
        "state": "closed",
        "title": "WT-7619 Add a new optimization to skip pages in cursor traversal when all entries on the page are deleted",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 01:37 GMT",
        "updated_at": "Friday Jul 16, 2021 at 14:31 GMT",
        "closed_at": "Friday Jul 16, 2021 at 14:31 GMT",
        "merged_at": "Friday Jul 16, 2021 at 14:31 GMT"
    },
    {
        "key": "WT-7828",
        "number": 6783,
        "state": "closed",
        "title": "WT-7828 Run many-coll-test on different variant",
        "body": "Moved many-collection-tests to run on `ubuntu1804-wt-large` to be able to set `ulimit -n` to a greater value than the default one.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 13, 2021 at 00:03 GMT",
        "updated_at": "Friday Jul 16, 2021 at 01:18 GMT",
        "closed_at": "Friday Jul 16, 2021 at 01:18 GMT",
        "merged_at": "Friday Jul 16, 2021 at 01:18 GMT"
    },
    {
        "key": "WT-7673",
        "number": 6782,
        "state": "closed",
        "title": "WT-7673 Investigate and fix manydbs test failure on Windows",
        "body": "The error is coming from spurious wake ups from the condition variables. These spurious wakeups can potentially act as being signalled, in which increments the reset counter within the test.",
        "base_ref": "develop",
        "created_at": "Monday Jul 12, 2021 at 22:40 GMT",
        "updated_at": "Wednesday Jul 28, 2021 at 00:16 GMT",
        "closed_at": "Wednesday Jul 28, 2021 at 00:16 GMT",
        "merged_at": "Wednesday Jul 28, 2021 at 00:16 GMT"
    },
    {
        "key": "WT-7815",
        "number": 6781,
        "state": "closed",
        "title": "WT-7815: Properly initialize prev_upd_ts for ordered timestamp assertion.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 12, 2021 at 19:50 GMT",
        "updated_at": "Tuesday Jul 13, 2021 at 03:46 GMT",
        "closed_at": "Tuesday Jul 13, 2021 at 03:46 GMT",
        "merged_at": "Tuesday Jul 13, 2021 at 03:46 GMT"
    },
    {
        "key": "WT-7832",
        "number": 6780,
        "state": "closed",
        "title": "WT-7832 Add an encryptor extension that uses the libsodium cryptography library.",
        "body": "It should really be audited by a cryptographer before being used, but\r\nis expected to be usable with at worst minor adjustments.\r\n\r\nIt uses the aead_xchacha20poly1305_ietf construction from libsodium to\r\nencrypt and checksum blocks.\r\n\r\nIt does not support retrieving keys from a key manager, there not\r\nbeing any obvious open-source choices that I'm aware of. This means\r\nthat it can, for the time being anyway, only be configured with\r\nsecretkey= and not keyid=, which is perhaps unfortunate but better\r\nthan nothing.\r\n\r\nBesides the encryptor itself, this changeset includes the following\r\nrelated changes:\r\n   - Add the new extension to both the cmake and autotools builds.\r\n   - Rework the encryption page in the documentation, adding the new\r\n     encryptor and expanding on some of the other material, and also\r\n     add some bits/make some improvements to the WT_ENCRYPTOR docs.\r\n   - In util_main.c, add a wt_explicit_zero function for zeroing\r\n     memory that takes precautions against being removed by the\r\n     compiler, and use it to clear copies of the secret key. Zero and\r\n     free the secret key (and open config string, which contains the\r\n     secret key when there is one) earlier.\r\n   - In nop_encryptor.c, since this is supposed to be a template for\r\n     application developers to fill in, add a blank customize method.\r\n     Without a customize method you can't configure keys, so even\r\n     though it's officially optional it seems like the example should\r\n     have one.\r\n   - Add support for the new extension to:\r\n        -- test_format\r\n        -- test_encrypt0[126].py\r\n        -- test_import0[69].py\r\n     (Note that test_encrypt05 doesn't exist, test_encrypt0[34] are\r\n     for testing the config plumbing and not any particular extension,\r\n     and test_encrypt07 needs to be able to munge the \"encrypted\" data\r\n     and doesn't work with real encryption.)\r\n   - Add new test_encrypt0[89].py that checks the error paths in the\r\n     new extension's customize method.\r\n   - Add an example snippet for how to configure the new extension to\r\n     ex_all.c for use in the docs.\r\n   - Add the encryptor directory to Doxyfile so it can be an example.\r\n   - Add the new encryptor to the examples page in the documentation.\r\n   - Add a bunch of spelling words.\r\n   - Add some of the functions to the exception list in s_void (like\r\n     other extensions).\r\n\r\nIt also includes the following change that is not related but directly\r\nadjacent to a piece of the above:\r\n   - In the cmake build of test_format, pass the path to the zstd\r\n     library with -D, like the other extensions.",
        "base_ref": "develop",
        "created_at": "Monday Jul 12, 2021 at 17:19 GMT",
        "updated_at": "Thursday Jul 15, 2021 at 01:42 GMT",
        "closed_at": "Thursday Jul 15, 2021 at 01:30 GMT",
        "merged_at": "Thursday Jul 15, 2021 at 01:30 GMT"
    },
    {
        "key": "WT-7599",
        "number": 6779,
        "state": "closed",
        "title": "Revert \"WT-7599 Compatibility test - create multiple config files for each release\"",
        "body": "Reverts wiredtiger/wiredtiger#6695",
        "base_ref": "develop",
        "created_at": "Monday Jul 12, 2021 at 08:12 GMT",
        "updated_at": "Monday Jul 12, 2021 at 08:12 GMT",
        "closed_at": "Monday Jul 12, 2021 at 08:12 GMT",
        "merged_at": "Monday Jul 12, 2021 at 08:12 GMT"
    },
    {
        "key": "WT-7692",
        "number": 6778,
        "state": "closed",
        "title": "WT-7692 fix make check test failure on osx10 14 cmake",
        "body": "Re-ordered the steps to match the paths for cmake and ctest. This does\u00a0two things:\r\n1. The order of steps is more consistent with the code from https://github.com/mongodb/mongo-c-driver/blob/master/.evergreen/find-cmake.sh \r\n2. The code doesn't assume that as a first step that if cmake is found on the path, that ctest is also available on the path.\r\n\r\nIn addition, the code now logs\u00a0the CMake and CTest environment variables, paths and versions.\r\nThis makes it easier to check that CMake and CTest are configured correctly and being used consistently. It will assist should problems such as WT-7692 occur again in the future.",
        "base_ref": "develop",
        "created_at": "Monday Jul 12, 2021 at 08:10 GMT",
        "updated_at": "Tuesday Jul 13, 2021 at 04:20 GMT",
        "closed_at": "Tuesday Jul 13, 2021 at 04:20 GMT",
        "merged_at": "Tuesday Jul 13, 2021 at 04:20 GMT"
    },
    {
        "key": "WT-7825",
        "number": 6777,
        "state": "closed",
        "title": "WT-7825 Fix test_hs24 key order",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 12, 2021 at 04:39 GMT",
        "updated_at": "Monday Jul 12, 2021 at 05:14 GMT",
        "closed_at": "Monday Jul 12, 2021 at 05:14 GMT",
        "merged_at": "Monday Jul 12, 2021 at 05:14 GMT"
    },
    {
        "key": "WT-7752",
        "number": 6776,
        "state": "closed",
        "title": "WT-7752 Update packing code according to documentation",
        "body": "- Remove the Java column as no longer supported.\r\n- Update the packing as per the [schema doc](https://source.wiredtiger.com/develop/schema.html)",
        "base_ref": "develop",
        "created_at": "Monday Jul 12, 2021 at 03:39 GMT",
        "updated_at": "Tuesday Aug 10, 2021 at 01:48 GMT",
        "closed_at": "Wednesday Jul 14, 2021 at 23:47 GMT",
        "merged_at": "Wednesday Jul 14, 2021 at 23:47 GMT"
    },
    {
        "key": "WT-7816",
        "number": 6775,
        "state": "closed",
        "title": "Revert \"WT-7816 Disable test_tiered08 on macOS.\"",
        "body": "Reverts wiredtiger/wiredtiger#6773\r\n\r\nFound the reason the tiered08 test was failing.  It is an old (and fixed) bug. So we don't need this change to disable the test.",
        "base_ref": "develop",
        "created_at": "Friday Jul 09, 2021 at 21:17 GMT",
        "updated_at": "Friday Jul 09, 2021 at 21:18 GMT",
        "closed_at": "Friday Jul 09, 2021 at 21:18 GMT",
        "merged_at": "Friday Jul 09, 2021 at 21:18 GMT"
    },
    {
        "key": "WT-7817",
        "number": 6774,
        "state": "closed",
        "title": "WT-7817 make tiered storage address cookies backward compatible",
        "body": "Move the file ID to the end of the address cookie and to the end of the checkpoint cookie.\r\n\r\nThis allows old releases to detect address/checkpoint cookies they cannot understand and fail gracefully, that is, they won't interpret the file ID as the block offset and drop core or return a corruption failure. Use the length of the address/checkpoint cookie to detect if there is a file ID included in the cookie (this means passing the cookie sizes around; we've always had those sizes in hand, we've just never needed them before). In all cases, assert the entire cookie is consumed.\r\n\r\nRename the block address cookie buffer-to-addr and addr-to-buffer functions as unpack and pack functions to match other parts of WiredTiger.\r\n\r\nDon't do misplaced block checks, or verbose messages, when freeing blocks that were read from other objects. We can't free them, but we shouldn't do anything else, either.\r\n\r\nDefine WT_TIERED_CURRENT_ID as the maxium 4B value instead of a bit pattern.\r\n\r\nRemove minor unnecessary error handling and scratch buffer logic from tiered storage functions.",
        "base_ref": "develop",
        "created_at": "Friday Jul 09, 2021 at 19:04 GMT",
        "updated_at": "Friday Jul 23, 2021 at 23:37 GMT",
        "closed_at": "Friday Jul 23, 2021 at 23:37 GMT",
        "merged_at": "Friday Jul 23, 2021 at 23:37 GMT"
    },
    {
        "key": "WT-7816",
        "number": 6773,
        "state": "closed",
        "title": "WT-7816 Disable test_tiered08 on macOS.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 09, 2021 at 17:34 GMT",
        "updated_at": "Friday Jul 09, 2021 at 19:38 GMT",
        "closed_at": "Friday Jul 09, 2021 at 19:38 GMT",
        "merged_at": "Friday Jul 09, 2021 at 19:38 GMT"
    },
    {
        "key": "WT-7782",
        "number": 6772,
        "state": "closed",
        "title": "WT-7782 Separate implementation from headers in cppsuite test framework",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 09, 2021 at 04:46 GMT",
        "updated_at": "Monday Jul 12, 2021 at 04:36 GMT",
        "closed_at": "Monday Jul 12, 2021 at 04:36 GMT",
        "merged_at": "Monday Jul 12, 2021 at 04:36 GMT"
    },
    {
        "key": "WT-7813",
        "number": 6771,
        "state": "closed",
        "title": "WT-7813 Stop inserting to history store if we see a prepared update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 09, 2021 at 03:08 GMT",
        "updated_at": "Friday Jul 09, 2021 at 05:20 GMT",
        "closed_at": "Friday Jul 09, 2021 at 05:20 GMT",
        "merged_at": "Friday Jul 09, 2021 at 05:20 GMT"
    },
    {
        "key": "WT-7802",
        "number": 6770,
        "state": "closed",
        "title": "WT-7802 Remove data store same transaction update squash logic",
        "body": "The logic of stable update in RTS and reconciliation select is\r\ndiverged due to the data store squash logic. The history store\r\nproperly handles the squash logic, there is no point in having\r\nit multiple places. Removing it from the reconciliation select makes\r\nthe code in sync with RTS.",
        "base_ref": "develop",
        "created_at": "Friday Jul 09, 2021 at 02:38 GMT",
        "updated_at": "Friday Jul 09, 2021 at 05:10 GMT",
        "closed_at": "Friday Jul 09, 2021 at 05:10 GMT",
        "merged_at": "Friday Jul 09, 2021 at 05:10 GMT"
    },
    {
        "key": "WT-7811",
        "number": 6769,
        "state": "closed",
        "title": "WT-7811 Fix test_hs24 not committing from 0 timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 09, 2021 at 01:14 GMT",
        "updated_at": "Friday Jul 09, 2021 at 02:10 GMT",
        "closed_at": "Friday Jul 09, 2021 at 02:10 GMT",
        "merged_at": "Friday Jul 09, 2021 at 02:10 GMT"
    },
    {
        "key": "WT-7807",
        "number": 6768,
        "state": "closed",
        "title": "WT-7807 Remove unused arg in backup_config.",
        "body": "Minor fix I saw while reading through backup code. (Plus a small grammar fix in the backup docs.)",
        "base_ref": "develop",
        "created_at": "Thursday Jul 08, 2021 at 21:28 GMT",
        "updated_at": "Friday Jul 09, 2021 at 01:35 GMT",
        "closed_at": "Friday Jul 09, 2021 at 01:35 GMT",
        "merged_at": "Friday Jul 09, 2021 at 01:35 GMT"
    },
    {
        "key": "WT-7609",
        "number": 6767,
        "state": "closed",
        "title": "WT-7609 Add log file to the many collection test.",
        "body": "Added the new argument due to this change: https://github.com/wiredtiger/mongo-tests/pull/22",
        "base_ref": "develop",
        "created_at": "Thursday Jul 08, 2021 at 06:34 GMT",
        "updated_at": "Monday Jul 12, 2021 at 01:28 GMT",
        "closed_at": "Monday Jul 12, 2021 at 01:28 GMT",
        "merged_at": "Monday Jul 12, 2021 at 01:28 GMT"
    },
    {
        "key": "WT-7804",
        "number": 6766,
        "state": "closed",
        "title": "WT-7804 Fix test_hs24 committing mixed mode update from the wrong value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 08, 2021 at 03:54 GMT",
        "updated_at": "Thursday Jul 08, 2021 at 05:14 GMT",
        "closed_at": "Thursday Jul 08, 2021 at 05:14 GMT",
        "merged_at": "Thursday Jul 08, 2021 at 05:14 GMT"
    },
    {
        "key": "WT-7796",
        "number": 6765,
        "state": "closed",
        "title": "WT-7796 Scan the tracking table and delete parts of it that are obsolete.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 08, 2021 at 00:50 GMT",
        "updated_at": "Friday Jul 09, 2021 at 02:22 GMT",
        "closed_at": "Friday Jul 09, 2021 at 02:22 GMT",
        "merged_at": "Friday Jul 09, 2021 at 02:22 GMT"
    },
    {
        "key": "WT-7789",
        "number": 6764,
        "state": "closed",
        "title": "WT-7789 Change tiered python tests to fail without extension library",
        "body": "Quick change so the tiered tests will fail rather than skip if the `local_store` library isn't found.\r\n\r\nI removed `libwiredtiger_local_store.so` in my tree and confirmed that the tests complain about it.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 07, 2021 at 14:19 GMT",
        "updated_at": "Monday Jul 19, 2021 at 20:27 GMT",
        "closed_at": "Monday Jul 19, 2021 at 20:27 GMT",
        "merged_at": "Monday Jul 19, 2021 at 20:27 GMT"
    },
    {
        "key": "WT-7797",
        "number": 6763,
        "state": "closed",
        "title": "WT-7797 Disable postrun stats in CppSuite testing",
        "body": "Temporarily disable postrun statistics since it's causing fallout.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 07, 2021 at 07:50 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 23:58 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 23:58 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 23:58 GMT"
    },
    {
        "key": "WT-7746",
        "number": 6762,
        "state": "closed",
        "title": "WT-7746 Improve directory syncing with CMake helper 'create_test_executable'",
        "body": "The CMake helper `create_test_executable` supports an option to sync a directory over to the build directory:  `ADDITIONAL_DIRECTORIES`. When creating a test executable we may want to sync the contents of a directory (such as a set of configs). Additionally we want this directory to be re-synced on subsequent builds. CMake didn't detect and sync over new files and changes added to the source directory. The commit overhauls the `ADDITIONAL_DIRECTORIES` feature to ensure new files & changes get synced over if present. \r\n\r\nThe slight downside of this change is this process needs to be added to the `all` target since CMake can't automatically detect if new files have been added (which is reasonable). \r\n\r\nThis PR additionally fixes up issues in the `define_test_variants` helper and SWIG compilation to avoid constantly being re-run on clean builds. This just cleaning up the commands being run on our `all` target every build invocation (adding extra care/maintenance since introducing the directory syncing).",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 07, 2021 at 05:38 GMT",
        "updated_at": "Tuesday Jul 13, 2021 at 21:47 GMT",
        "closed_at": "Tuesday Jul 13, 2021 at 21:47 GMT",
        "merged_at": "Tuesday Jul 13, 2021 at 21:47 GMT"
    },
    {
        "key": "WT-7795",
        "number": 6761,
        "state": "closed",
        "title": "WT-7795 CppSuite fails on Jenkins with \"expected ) before PRIxMAX\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 07, 2021 at 05:33 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 06:54 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 06:54 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 06:54 GMT"
    },
    {
        "key": "WT-7795",
        "number": 6760,
        "state": "closed",
        "title": "WT-7795 CppSuite fails on Jenkins with \"expected ) before PRIxMAX\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 07, 2021 at 04:35 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:33 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 05:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7783",
        "number": 6759,
        "state": "closed",
        "title": "WT-7783 Fix restore tombstone assert and condition for non timestamp tables",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 07, 2021 at 03:11 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 04:44 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 04:44 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 04:44 GMT"
    },
    {
        "key": "WT-7670",
        "number": 6758,
        "state": "closed",
        "title": "WT-7670 Modify test tag format and tag additional python tests.",
        "body": "I will continue to tag more python tests @etienneptl, I was hoping you could review my python script changes in the meantime.\r\n\r\nI thought about making the `test_coverage.md` an html file instead so we can support merging of cells and improve overall readability however that is not the purpose of this ticket.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 07, 2021 at 01:44 GMT",
        "updated_at": "Thursday Jul 08, 2021 at 05:28 GMT",
        "closed_at": "Thursday Jul 08, 2021 at 05:28 GMT",
        "merged_at": "Thursday Jul 08, 2021 at 05:28 GMT"
    },
    {
        "key": "WT-7790",
        "number": 6757,
        "state": "closed",
        "title": "WT-7790 Revert prefix-compressed keys and memory amplification changes",
        "body": "Revert prefix-compressed keys and memory amplification changes.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 06, 2021 at 21:27 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:33 GMT",
        "closed_at": "Sunday Jul 11, 2021 at 22:50 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7683",
        "number": 6756,
        "state": "closed",
        "title": "WT-7683 Add python hook to call flush_tier during connection.close()",
        "body": "Also remove some dead code that set up a hook for session.close().",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 06, 2021 at 21:17 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 18:27 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 18:27 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 18:27 GMT"
    },
    {
        "key": "WT-7780",
        "number": 6755,
        "state": "closed",
        "title": "WT-7780 Guarantee log message sequencing in the test framework.",
        "body": "This change is wrapping the use of `std::cout` and `std::cerr` behind a mutex. Since the utility header is used everywhere, we need to make the mutex global (which I've put in the `run` translation unit).",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 06, 2021 at 06:57 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 02:12 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 02:12 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 02:12 GMT"
    },
    {
        "key": "WT-7761",
        "number": 6754,
        "state": "closed",
        "title": "WT-7761 Improve debug_print to include timestamp, thread_id and reorder args in cppsuite.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 06, 2021 at 03:53 GMT",
        "updated_at": "Tuesday Jul 06, 2021 at 04:22 GMT",
        "closed_at": "Tuesday Jul 06, 2021 at 04:22 GMT",
        "merged_at": "Tuesday Jul 06, 2021 at 04:22 GMT"
    },
    {
        "key": "WT-7761",
        "number": 6753,
        "state": "closed",
        "title": "Revert \"WT-7761 Improve debug_print to include timestamp, thread_id and reorder args.\"",
        "body": "Reverts wiredtiger/wiredtiger#6749 because it caused regression.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 06, 2021 at 03:39 GMT",
        "updated_at": "Tuesday Jul 06, 2021 at 03:39 GMT",
        "closed_at": "Tuesday Jul 06, 2021 at 03:39 GMT",
        "merged_at": "Tuesday Jul 06, 2021 at 03:39 GMT"
    },
    {
        "key": "WT-7784",
        "number": 6752,
        "state": "closed",
        "title": "WT-7784 Enable RTS to use checkpoint snapshot on timestamp tables",
        "body": "Usually for timestamped tables, the commit/durable timestamp will be\r\nalways greater than the stable timestamp and there is no need of\r\ncheckpoint snapshot to abort unstable updates. Allowing it to use\r\ncheckpoint snapshot shouldn't be a problem unless the commit/durable\r\ntimestamp doesn't adhere to the condition of that it must be less\r\nthan the stable timestamp.",
        "base_ref": "develop",
        "created_at": "Monday Jul 05, 2021 at 08:42 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 23:13 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 23:13 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 23:13 GMT"
    },
    {
        "key": "WT-7783",
        "number": 6751,
        "state": "closed",
        "title": "WT-7783 Fix RTS to restore tombstone when an on-disk update is out of order prepared",
        "body": "When a prepared update is an out of order update, as part of reconciliation\r\nthe earlier updates doesn't modified until it gets committed. while aborting these\r\nuncommitted prepared updates by RTS, it missed to restore the tombstone\r\nfrom the history store as it is greater than the on-disk update.",
        "base_ref": "develop",
        "created_at": "Monday Jul 05, 2021 at 07:03 GMT",
        "updated_at": "Tuesday Jul 06, 2021 at 10:56 GMT",
        "closed_at": "Tuesday Jul 06, 2021 at 10:56 GMT",
        "merged_at": "Tuesday Jul 06, 2021 at 10:56 GMT"
    },
    {
        "key": "WT-7781",
        "number": 6750,
        "state": "closed",
        "title": "WT-7781 Check for CMake ext path in findExtension",
        "body": "The CMake build exports the extension libraries to a different build path than libtool/autoconf. This results in the tests that\r\ndepend on extension libraries/modules being skipped when used with CMake builds. When searching for extension libraries in the python unit test framework, we want to also search for the location CMake will store the library/module binaries.",
        "base_ref": "develop",
        "created_at": "Monday Jul 05, 2021 at 03:40 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 03:11 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 03:11 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 03:11 GMT"
    },
    {
        "key": "WT-7761",
        "number": 6749,
        "state": "closed",
        "title": "WT-7761 Improve debug_print to include timestamp, thread_id and reorder args.",
        "body": "1. Changed order of arguments in debug_print(). \r\n2. Added date, time and thread ID prefix to every message. \r\n3. Renamed log level constants.\r\n4. Added `_include_date` boolean flag to control whether you want to see date in the message suffix.\r\n\r\nEven though this solution works well with multiple threads in my test environment, it requires more research and testing on other platforms. Also it may not work well with very long messages, but I haven't tested that.",
        "base_ref": "develop",
        "created_at": "Monday Jul 05, 2021 at 01:39 GMT",
        "updated_at": "Wednesday Aug 18, 2021 at 02:58 GMT",
        "closed_at": "Tuesday Jul 06, 2021 at 02:54 GMT",
        "merged_at": "Tuesday Jul 06, 2021 at 02:54 GMT"
    },
    {
        "key": "WT-7776",
        "number": 6748,
        "state": "closed",
        "title": "WT-7776 Add a hard limit on the number of modify updates before we instantiate a complete update",
        "body": "Add a hard limit on the number of modify updates before we instantiate a complete update",
        "base_ref": "develop",
        "created_at": "Monday Jul 05, 2021 at 00:51 GMT",
        "updated_at": "Tuesday Jul 13, 2021 at 21:25 GMT",
        "closed_at": "Tuesday Jul 13, 2021 at 21:25 GMT",
        "merged_at": "Tuesday Jul 13, 2021 at 21:25 GMT"
    },
    {
        "key": "WT-7754",
        "number": 6747,
        "state": "closed",
        "title": "WT-7754 Fix race when updating block manager file handle",
        "body": "This patch ensures that the block manager file handle is always valid when we switch files during `flush_tier`. The issue was that both `wt_open()` and `wt_close` set their file handle arg to NULL. The change uses temp variables so we avoid passing the block manager's file handle pointer to those functions.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 21:24 GMT",
        "updated_at": "Tuesday Jul 06, 2021 at 15:01 GMT",
        "closed_at": "Tuesday Jul 06, 2021 at 15:01 GMT",
        "merged_at": "Tuesday Jul 06, 2021 at 15:01 GMT"
    },
    {
        "key": "WT-7765",
        "number": 6746,
        "state": "closed",
        "title": "WT-7765 Fix signed integer overflow in intpack-test3",
        "body": "The C standard specifies that overflow in signed integers has undefined behaviour.\r\n\r\nThis test code tests a range of values around a signed start value. If the test value is (or close to) the maximum value for that int type (in this case INT64_MAX) then the range will overflow, and this is what was being detected by the UBSAN test.\r\n\r\nThe fix is to change the test ranges where required so that overflows are no longer possible.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 12:18 GMT",
        "updated_at": "Thursday Jul 01, 2021 at 23:04 GMT",
        "closed_at": "Thursday Jul 01, 2021 at 23:04 GMT",
        "merged_at": "Thursday Jul 01, 2021 at 23:04 GMT"
    },
    {
        "key": "WT-7766",
        "number": 6745,
        "state": "closed",
        "title": "WT-7766 Fix null pointer passed to memset in test_wt3338_partial_update",
        "body": "The cause and fix are similar to WT-7744.\r\n\r\nThe C standard states that the behaviour of memset (and other mem* functions) is undefined when NULL pointers are passed to them. This is the case even if the 'n' count parameter is 0.\r\n\r\nThe UBSAN tests were picking up a case where a NULL pointer was being passed into this memset call. This was occurring when the 'n' count parameter was 0.\r\n\r\nTo address this, a conditional guard has been added around the call to memset that was generating an UBSAN error to ensure that the 'n' count parameter is greater than 0.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 12:10 GMT",
        "updated_at": "Thursday Jul 01, 2021 at 23:03 GMT",
        "closed_at": "Thursday Jul 01, 2021 at 23:03 GMT",
        "merged_at": "Thursday Jul 01, 2021 at 23:03 GMT"
    },
    {
        "key": "WT-7720",
        "number": 6744,
        "state": "closed",
        "title": "WT-7720 Fix POSIX CMAKE doxygen documentation ",
        "body": "* Fixes CC_OPTIMIZE_LEVEL typo in doxygen: The flag value should be 'O1' instead of '01'\r\n* Doxygen description on running CTest: Expanded the CMake doxygen docs to also describe on how to run the CTest smoke tests.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 08:14 GMT",
        "updated_at": "Friday Jul 02, 2021 at 01:31 GMT",
        "closed_at": "Friday Jul 02, 2021 at 01:31 GMT",
        "merged_at": "Friday Jul 02, 2021 at 01:31 GMT"
    },
    {
        "key": "WT-7770",
        "number": 6743,
        "state": "closed",
        "title": "WT-7770 Fix issue linking TCMalloc in CMake",
        "body": "This PR fixes the following issues:\r\n* CMake didn't link TCMalloc when the `ENABLE_TCMALLOC` option. Updated CMake to link the tcmalloc library when tcmalloc builds are enabled.\r\n* If CMake detects tcmalloc on the user system it will set the `HAVE_LIBTCMALLOC` CPP variable. This is an issue since our C sources will include the tcmalloc headers when `HAVE_LIBTCMALLOC` is defined (Autoconf and SCons will define `HAVE_LIBTCMALLOC` to indicate enabling tcmalloc build). In CMake, we want to reserve the CPP definition `HAVE_LIBTCMALLOC` to just check if the library exists, not to necessarily enable a tcmalloc build. We  want to use the `ENABLE_TCMALLOC` option to actually create a tcmalloc build.\r\n* Removes some dead code in `config_lib` helper",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 07:21 GMT",
        "updated_at": "Monday Jul 05, 2021 at 03:59 GMT",
        "closed_at": "Monday Jul 05, 2021 at 03:56 GMT",
        "merged_at": "Monday Jul 05, 2021 at 03:56 GMT"
    },
    {
        "key": "WT-7719",
        "number": 6742,
        "state": "closed",
        "title": "WT-7719 Change default value of \"ENABLE_STRICT\" to \"OFF\" in CMake",
        "body": "We want to avoid assuming the default build environment requires a development/debug configuration for WiredTiger standalone builds. Change the default value of ENABLE_STRICT to 'OFF' to avoid bringing random warnings and diagnostics into default standalone builds.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 06:11 GMT",
        "updated_at": "Friday Jul 02, 2021 at 01:23 GMT",
        "closed_at": "Friday Jul 02, 2021 at 01:23 GMT",
        "merged_at": "Friday Jul 02, 2021 at 01:23 GMT"
    },
    {
        "key": "WT-7690",
        "number": 6741,
        "state": "closed",
        "title": "WT-7690 Fix coverity error when enum is compared against 0 (incr_backup:table_changes)",
        "body": "Extracted logic of generation of operation type into a separate method. The method does boundary test. All asserts outside of the method are removed as they are redundant now.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 05:35 GMT",
        "updated_at": "Friday Jul 02, 2021 at 00:26 GMT",
        "closed_at": "Friday Jul 02, 2021 at 00:26 GMT",
        "merged_at": "Friday Jul 02, 2021 at 00:26 GMT"
    },
    {
        "key": "WT-7767",
        "number": 6740,
        "state": "closed",
        "title": "WT-7767 Cleanup __curhs_remove and __txn_fixup_prepared_update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 04:37 GMT",
        "updated_at": "Thursday Jul 01, 2021 at 23:57 GMT",
        "closed_at": "Thursday Jul 01, 2021 at 23:57 GMT",
        "merged_at": "Thursday Jul 01, 2021 at 23:57 GMT"
    },
    {
        "key": "WT-7317",
        "number": 6739,
        "state": "closed",
        "title": "WT-7317 Improve the `runtime_monitor` component to track history store cleanup statistics",
        "body": "This PR is adding a `postrun_statistics` option to check values that we expect to be increasing over time through the duration of a workload.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 01, 2021 at 04:36 GMT",
        "updated_at": "Friday Jul 02, 2021 at 03:09 GMT",
        "closed_at": "Friday Jul 02, 2021 at 03:09 GMT",
        "merged_at": "Friday Jul 02, 2021 at 03:09 GMT"
    },
    {
        "key": "WT-7721",
        "number": 6738,
        "state": "closed",
        "title": "WT-7721 Update test-format to reopen an existing database with different config (v4.2 backport) (#6697) (#6711) (#6715)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Jul 01, 2021 at 04:33 GMT",
        "updated_at": "Thursday Jul 01, 2021 at 23:26 GMT",
        "closed_at": "Thursday Jul 01, 2021 at 23:26 GMT",
        "merged_at": "Thursday Jul 01, 2021 at 23:26 GMT"
    },
    {
        "key": "WT-7675",
        "number": 6737,
        "state": "closed",
        "title": "WT-7675 Query last ckpt timestamp changes without taking checkpoint (v4.4 backport)",
        "body": "4822a6ed33c19cf093dd0de13ad4631a1f4a829d",
        "base_ref": "mongodb-4.4",
        "created_at": "Thursday Jul 01, 2021 at 01:46 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 23:53 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 23:53 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 23:53 GMT"
    },
    {
        "key": "WT-7729",
        "number": 6736,
        "state": "closed",
        "title": "WT-7729 Fix to write out correct tiered information on checkpoint.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 30, 2021 at 17:30 GMT",
        "updated_at": "Tuesday Jul 06, 2021 at 13:10 GMT",
        "closed_at": "Tuesday Jul 06, 2021 at 13:10 GMT",
        "merged_at": "Tuesday Jul 06, 2021 at 13:10 GMT"
    },
    {
        "key": "WT-7741",
        "number": 6735,
        "state": "closed",
        "title": "WT-7741 Fix misaligned address in crc32-x86.c",
        "body": "UBSAN complains about loading of misaligned address during  the second step of the algorithm where we process 8B chunks. It stops complaining if during the first step we go to the first 8 bytes boundary instead of 4.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 30, 2021 at 13:54 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 23:36 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 23:36 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 23:36 GMT"
    },
    {
        "key": "WT-7760",
        "number": 6734,
        "state": "closed",
        "title": "WT-7760 Support array parsing in CppSuite config handling",
        "body": "This seems to do the trick. I don't think we want to merge array contents so we just need to ignore the commas within the array.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 30, 2021 at 03:14 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 08:22 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 08:22 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 08:22 GMT"
    },
    {
        "key": "WT-7756",
        "number": 6733,
        "state": "closed",
        "title": "WT-7756 RTS to clear the HS flag of an update following a stable tombstone",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 30, 2021 at 01:18 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 05:59 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 05:59 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 05:59 GMT"
    },
    {
        "key": "WT-7743",
        "number": 6732,
        "state": "closed",
        "title": "WT-7743 Fix integer overflow within wt2999_join_extractor csuite test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 30, 2021 at 01:04 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 10:25 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 10:25 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 10:25 GMT"
    },
    {
        "key": "WT-7755",
        "number": 6731,
        "state": "closed",
        "title": "WT-7755 YSCB: Add a native implementation of YCSB to WTPERF.",
        "body": "Created a native implementation of YCSB in WTPERF. This includes small changes to WTPERF, such as enhanced support for range reads and a new \"select-latest\" random distribution, as well as new runners for workloads YCSB-A through YCSB-E. There is no runner for YCSB-F, because in WTPERF it is the same as YCSB-A: YCSB-A is 50% reads / 50% updates, and YCSB-F is 50% reads / 50% read-modify-write.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 22:05 GMT",
        "updated_at": "Thursday Jul 01, 2021 at 17:41 GMT",
        "closed_at": "Thursday Jul 01, 2021 at 17:41 GMT",
        "merged_at": "Thursday Jul 01, 2021 at 17:41 GMT"
    },
    {
        "key": "WT-7742",
        "number": 6730,
        "state": "closed",
        "title": "WT-7742 Fix misaligned address in wt3184_dup_index_collator/main.c",
        "body": "Replaced type cast with memcpy to avoid UBSAN error.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 09:35 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 02:02 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 02:02 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 02:02 GMT"
    },
    {
        "key": "WT-7744",
        "number": 6729,
        "state": "closed",
        "title": "WT-7744 Fix null pointer within wt3338_partial_update csuite",
        "body": "The C standard states that the behaviour of memset (and other mem* functions) is undefined when NULL pointers are passed to them. This is the case even if the 'n' count parameter is 0.\r\n\r\nThe UBSAN tests were picking up a case where a NULL pointer was being passed into this memset call. This was occurring when the 'n' count parameter was 0.\r\n\r\nTo address this, a conditional guard has been added around the call to memset that was generating an UBSAN error to ensure that the 'n' count parameter is greater than 0.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 08:29 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 23:27 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 23:27 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 23:27 GMT"
    },
    {
        "key": "WT-7727",
        "number": 6728,
        "state": "closed",
        "title": "WT-7727 Fix null pointer passed to memcpy() during 'format' test.",
        "body": "The C standard states that the behaviour of memcpy and memcmp (and other mem* functions) is undefined when NULL pointers are passed to them. This is the case even if the 'n' count parameter is 0.\r\n\r\nThe UBSAN tests were picking up some cases where NULL pointers were being passed into memcpy and memcmp calls. This was occurring sometimes when the 'n' count parameter was 0.\r\n\r\nTo address this, conditional guards have been added around the calls to memcpy and memcmp that were generating UBSAN errors to ensure that the 'n' count parameter is greater than 0.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 08:06 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 04:33 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 04:33 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 04:33 GMT"
    },
    {
        "key": "WT-7543",
        "number": 6727,
        "state": "closed",
        "title": "WT-7543 Pass in the correct test name when constructing the default config path",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 03:57 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 05:47 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 05:47 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 05:47 GMT"
    },
    {
        "key": "WT-7751",
        "number": 6726,
        "state": "closed",
        "title": "WT-7751 Add an assert to ensure we never select an update has been written to the history store for data store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 03:50 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 10:27 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 10:27 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 10:27 GMT"
    },
    {
        "key": "WT-7539",
        "number": 6725,
        "state": "closed",
        "title": "WT-7539 Adding a way to supply wiredtiger open config to the test fra\u2026",
        "body": "\u2026mework",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 03:27 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 22:51 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 22:51 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 22:51 GMT"
    },
    {
        "key": "WT-7543",
        "number": 6724,
        "state": "closed",
        "title": "WT-7543 Always use default configurations when no config is provided",
        "body": "We were previously overwriting the `cfg` and `config_filename` variables between each loop iteration which was giving weird behaviour when running the full suite of tests.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 02:06 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 03:13 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 03:13 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 03:13 GMT"
    },
    {
        "key": "WT-7628",
        "number": 6723,
        "state": "closed",
        "title": "WT-7628 Return an error message when we detect invalid command line a\u2026",
        "body": "\u2026rguments",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 00:55 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 02:11 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 02:11 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 02:11 GMT"
    },
    {
        "key": "WT-7603",
        "number": 6722,
        "state": "closed",
        "title": "WT-7603 Sort statistics to fix JSON output.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 29, 2021 at 00:19 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 23:48 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 23:48 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 23:48 GMT"
    },
    {
        "key": "WT-7749",
        "number": 6721,
        "state": "closed",
        "title": "WT-7749 Assorted fixes for (and from) building and testing on NetBSD",
        "body": "- in test/evergreen/evg_cfg.py, allow repos cloned anonymously from github\r\n- minor fixes for doxygen 1.8.20\r\n- fix dist/s_export to work with both the autotools and cmake configury\r\n- some minor portability fixes\r\n- don't allow ancient versions of swig\r\n- fix build failure seen with gcc8 and gcc10 and -Werror=sign-conversion\r\n- build config for netbsd on x86\r\n- fix test/random_directio to honor the configured O_DIRECT blocksize\r\n- typo in build_posix.dox ",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 23:54 GMT",
        "updated_at": "Friday Jul 02, 2021 at 20:29 GMT",
        "closed_at": "Friday Jul 02, 2021 at 03:12 GMT",
        "merged_at": "Friday Jul 02, 2021 at 03:12 GMT"
    },
    {
        "key": "WT-7748",
        "number": 6720,
        "state": "closed",
        "title": "WT-7748 cmake: fix library probes for libs not on the default linker path",
        "body": "On a lot of systems external libraries are in places like /usr/local\r\nor /usr/pkg or /opt that aren't in the default linker path. Use\r\nfind_library() instead of check_library_exists() so they can be found\r\naccording to user-supplied cmake paths.\r\n\r\nWhen linking with the library, use the path found instead of just the\r\nlibrary name. This is what the cmake manual recommends, rather than\r\nadding to the library path and generating -L linker options.\r\n\r\nAlso add a HEADER option to config_lib(), use it to look for the\r\nlibrary's header files, and add the resulting dir to the include\r\npath. Pass a header name to uses of config_lib() where this makes\r\nsense.\r\n\r\nAnd, print what's happening in config_lib() since otherwise it's\r\ncompletely silent.",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 23:47 GMT",
        "updated_at": "Friday Jul 02, 2021 at 00:13 GMT",
        "closed_at": "Thursday Jul 01, 2021 at 03:27 GMT",
        "merged_at": "Thursday Jul 01, 2021 at 03:27 GMT"
    },
    {
        "key": "WT-7447",
        "number": 6719,
        "state": "closed",
        "title": "WT-7447 minor bugs (ctype, puts) in WT tests",
        "body": "Patches for two bugs: (1) use of <ctype.h> functions without casting to unsigned char (possibly undefined behavior) and (2) wrong assertion about the return value of puts().",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 23:33 GMT",
        "updated_at": "Friday Jul 02, 2021 at 00:12 GMT",
        "closed_at": "Thursday Jul 01, 2021 at 23:47 GMT",
        "merged_at": "Thursday Jul 01, 2021 at 23:47 GMT"
    },
    {
        "key": "WT-7710",
        "number": 6718,
        "state": "closed",
        "title": "WT-7710 Fix to use history store btree while initialising HS cursor (#6694) (v4.4 backport)",
        "body": "(cherry picked from commit 88250b7a3ad29d4338b9d529c277c852889e9bdf)\r\n(cherry picked from commit a41345737223a2432b548566b516ea5f3bd06131)",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday Jun 28, 2021 at 22:52 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 03:38 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 03:38 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 03:38 GMT"
    },
    {
        "key": "WT-7699",
        "number": 6717,
        "state": "closed",
        "title": "WT-7699 Fix RTS handling to abort an out of order prepared transaction (#6684) (v4.4 backport)",
        "body": "When an out of order update is performed by a prepared transaction\r\nthe earlier updates are not adjusted to the out of order prepared\r\ntimestamp. While aborting these updates properly frame the update\r\nthat needs to be restored.\r\n\r\n(cherry picked from commit c5620904105f2e2f092f0d08d13e610d1fc39c97)\r\n(cherry picked from commit 086b09040dbd291ebf82eba7ccd2012ac2523718)",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday Jun 28, 2021 at 22:50 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 03:37 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 03:37 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 03:37 GMT"
    },
    {
        "key": "WT-7706",
        "number": 6716,
        "state": "closed",
        "title": "WT-7706 Prepared transaction abort should restore correct update from the history store. (#6687) (v4.4 backport)",
        "body": "* Use same transaction update when on-disk value is an aborted prepared update\r\n\r\n* add a test to verify correct restoration of update from HS after prepared transaction abort\r\n\r\n(cherry picked from commit 7074f12888e3e7e93c7ca2fc6f541ebd40b58749)\r\n(cherry picked from commit f63a096cf08f8b5e72b3b36bbaba9bf54c7ba5a9)",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday Jun 28, 2021 at 22:47 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 03:37 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 03:37 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 03:37 GMT"
    },
    {
        "key": "WT-7721",
        "number": 6715,
        "state": "closed",
        "title": "WT-7721 Update test-format to reopen an existing database with different config (v4.4 backport)",
        "body": "",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday Jun 28, 2021 at 07:18 GMT",
        "updated_at": "Monday Jun 28, 2021 at 07:46 GMT",
        "closed_at": "Monday Jun 28, 2021 at 07:46 GMT",
        "merged_at": "Monday Jun 28, 2021 at 07:46 GMT"
    },
    {
        "key": "WT-7715",
        "number": 6714,
        "state": "closed",
        "title": "WT-7715 Fix uninitialized bool in txn_ckpt.c",
        "body": "Fixed uninitalized variable in txn_ckpt.c ",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 07:03 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 00:04 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 00:04 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 00:04 GMT"
    },
    {
        "key": "WT-7726",
        "number": 6713,
        "state": "closed",
        "title": "WT-7726 Separating out the validation portion from the database model.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 05:10 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 07:11 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 07:11 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 07:11 GMT"
    },
    {
        "key": "WT-7739",
        "number": 6712,
        "state": "closed",
        "title": "WT-7739 Switch back to using MacOS 10.14 for Evergreen compile task",
        "body": "Since we've disabled MacOS PR testing, let's switch back to 10.14. MacOS 10.12 is giving us issues because the system compilers are quite old (don't support the `thread_local` keyword) and the MongoDB toolchain seems busted.",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 04:12 GMT",
        "updated_at": "Monday Jun 28, 2021 at 05:17 GMT",
        "closed_at": "Monday Jun 28, 2021 at 05:17 GMT",
        "merged_at": "Monday Jun 28, 2021 at 05:17 GMT"
    },
    {
        "key": "WT-7721",
        "number": 6711,
        "state": "closed",
        "title": "WT-7721 Update test-format to reopen an existing database with different config (v5.0 backport)",
        "body": "",
        "base_ref": "mongodb-5.0",
        "created_at": "Monday Jun 28, 2021 at 04:11 GMT",
        "updated_at": "Monday Jun 28, 2021 at 06:18 GMT",
        "closed_at": "Monday Jun 28, 2021 at 06:18 GMT",
        "merged_at": "Monday Jun 28, 2021 at 06:18 GMT"
    },
    {
        "key": "WT-7343",
        "number": 6710,
        "state": "closed",
        "title": "WT-7343 Created evergreen task for many-collection test.",
        "body": "This change comes after the creation of the script run_many_coll.sh: https://github.com/wiredtiger/mongo-tests/pull/16\r\nWe are waiting for a solution to be able to set `ulimit -n` on ubuntu.\r\nEDIT: We will reduce the number of collections in this test to avoid the issues related to `ulimit`.",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 02:59 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 04:10 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 04:09 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 04:09 GMT"
    },
    {
        "key": "WT-7738",
        "number": 6709,
        "state": "closed",
        "title": "WT-7738 Fix thread-safety issue in `random_generator`",
        "body": "Neither `std::uniform_int_distribution` or `std::mt19937` are thread-safe so it's not ok to be calling `random_generator::generate_string` concurrently. To fix this, I've marked the singleton instance as `thread_local` so each thread has its own copy.",
        "base_ref": "develop",
        "created_at": "Monday Jun 28, 2021 at 01:45 GMT",
        "updated_at": "Monday Jun 28, 2021 at 08:32 GMT",
        "closed_at": "Monday Jun 28, 2021 at 08:32 GMT",
        "merged_at": "Monday Jun 28, 2021 at 08:32 GMT"
    },
    {
        "key": null,
        "number": 6708,
        "state": "closed",
        "title": "Add UBSAN to automated WT testing",
        "body": "The original merge was reverted due to a naming conflict (`poc-test-cpp` -> `cppsuite-base-test`) introduced in WT-7660. The test name is updated to `cppsuite-base-test` in `evergreen.yml`.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 27, 2021 at 02:29 GMT",
        "updated_at": "Sunday Jun 27, 2021 at 23:06 GMT",
        "closed_at": "Sunday Jun 27, 2021 at 23:06 GMT",
        "merged_at": "Sunday Jun 27, 2021 at 23:06 GMT"
    },
    {
        "key": "WT-7473",
        "number": 6707,
        "state": "closed",
        "title": "WT-7473 Resolve \"TODO: tiered\" comments in code",
        "body": "The ticket has an itemization of the items I found and how they are covered (i.e., new ticket, Appendix E, etc.)\r\n\r\nThis PR is for the removal of the relevant comments, ifdefs, etc.",
        "base_ref": "develop",
        "created_at": "Friday Jun 25, 2021 at 21:08 GMT",
        "updated_at": "Monday Jun 28, 2021 at 20:53 GMT",
        "closed_at": "Monday Jun 28, 2021 at 20:53 GMT",
        "merged_at": "Monday Jun 28, 2021 at 20:53 GMT"
    },
    {
        "key": "WT-7552",
        "number": 6706,
        "state": "closed",
        "title": "Revert \"WT-7552 Add UBSAN to automated WT testing (#6661)\" (#6704)",
        "body": "This reverts commit 29e7796d47fd886c928a0cbb452ed08cc5390b4d.",
        "base_ref": "wt-7725-add-missing-brackets-in-macro",
        "created_at": "Friday Jun 25, 2021 at 07:32 GMT",
        "updated_at": "Friday Jun 25, 2021 at 07:34 GMT",
        "closed_at": "Friday Jun 25, 2021 at 07:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7725",
        "number": 6705,
        "state": "closed",
        "title": "WT-7725 Add missing brackets around parameter in macro definition",
        "body": "In the definition of macro `WT_CHECK_RECOVERY_FLAG_TS_TXNID`, the `durablets` parameter is not surrounded by parentheses in the implementation. This could cause unexpected behaviour should an expression be passed in as a parameter. \r\n\r\nThe macro is used three times in the .c file that it is declared in. Each of the three uses passes a single variable (ie not an unbracketed expression) as the `duablets` parameter, so the missing parentheses in the macro definition do not currently result in incorrect behaviour in the code that uses the macro.\r\n\r\nHowever, subsequent code changes could change the parameters to the macro and expose the missing parentheses.\r\n\r\nHence the code has been changed to add the parentheses, but there is no immediate concern that the un-corrected code is causing bugs right now.",
        "base_ref": "develop",
        "created_at": "Friday Jun 25, 2021 at 07:23 GMT",
        "updated_at": "Monday Jun 28, 2021 at 00:45 GMT",
        "closed_at": "Monday Jun 28, 2021 at 00:45 GMT",
        "merged_at": "Monday Jun 28, 2021 at 00:45 GMT"
    },
    {
        "key": "WT-7552",
        "number": 6704,
        "state": "closed",
        "title": "Revert \"WT-7552 Add UBSAN to automated WT testing\"",
        "body": "Reverts wiredtiger/wiredtiger#6661",
        "base_ref": "develop",
        "created_at": "Friday Jun 25, 2021 at 07:03 GMT",
        "updated_at": "Friday Jun 25, 2021 at 07:03 GMT",
        "closed_at": "Friday Jun 25, 2021 at 07:03 GMT",
        "merged_at": "Friday Jun 25, 2021 at 07:03 GMT"
    },
    {
        "key": "WT-7696",
        "number": 6703,
        "state": "closed",
        "title": "WT-7696 Fix coverity error - Unused variable in _rollback_to_stable_btree_apply_all",
        "body": "A visual inspection of the code shows that the Coverity analysis is correct, and the variable rollback_txnid is not used after it is set. \r\n\r\nThe issue is not detected by the compiler because of the chained assignment used to initialise the three variables. The compiler thinks that rollback_txnid is being used to assign to rollback_msg_count. If rollback_txnid were the left-most variable in the chained assignment (ie assigned last) then the compiler would display an error because it would consider rollback_txnid unused. \r\n\r\nSo, whether the error is triggered in the case of one of the variables being unused after being set is entirely dependent on the order of variables in the chained assignment. This means that the correct fix is to both remove rollback_txnid and, to avoid potential issues generated by subsequent code changes, to break the chained assignment for those variables that are required.\r\n\r\nThere is a longer discussion on this issue in the JIRA ticket.",
        "base_ref": "develop",
        "created_at": "Friday Jun 25, 2021 at 04:39 GMT",
        "updated_at": "Monday Jun 28, 2021 at 00:01 GMT",
        "closed_at": "Monday Jun 28, 2021 at 00:01 GMT",
        "merged_at": "Monday Jun 28, 2021 at 00:01 GMT"
    },
    {
        "key": "WT-7730",
        "number": 6702,
        "state": "closed",
        "title": "WT-7730 Shifting the oldest and stable timestamps to match the commit timestamp format.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 25, 2021 at 04:12 GMT",
        "updated_at": "Sunday Jun 27, 2021 at 22:38 GMT",
        "closed_at": "Sunday Jun 27, 2021 at 22:38 GMT",
        "merged_at": "Sunday Jun 27, 2021 at 22:38 GMT"
    },
    {
        "key": "WT-7724",
        "number": 6701,
        "state": "closed",
        "title": "WT-7724 Fix race when running concurrent checkpoint and flush_tier",
        "body": "@ddanderson and @sueloverso. This is a heavy handed way of solving a race between checkpoint and flush_tier. But I think it's better as we wrap up the project to support this functionality.  I will create a follow-on ticket to understand and fix the underlying issue with flush-tier and the cached checkpoint metadata and tag it for POC2.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 24, 2021 at 18:06 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 16:55 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 16:55 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 16:55 GMT"
    },
    {
        "key": "WT-7708",
        "number": 6700,
        "state": "closed",
        "title": "WT-7708 Add an assert to ensure stable timestamp is not moved during prepared commit and fix test format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 24, 2021 at 07:51 GMT",
        "updated_at": "Monday Jun 28, 2021 at 03:04 GMT",
        "closed_at": "Monday Jun 28, 2021 at 03:04 GMT",
        "merged_at": "Monday Jun 28, 2021 at 03:04 GMT"
    },
    {
        "key": "WT-6782",
        "number": 6699,
        "state": "closed",
        "title": "WT-6782 test_prepare_hs02 WT_ROLLBACK failure: conflict between concurrent operations",
        "body": "Even though it's not enforced at the moment but documentation clearly states that during commit in unprepared transaction **commit_timestamp** must be greater than **stable_timestamp**. To avoid ambiguity and possible crashes in the future changing commit timestamp from 301 to 302. ",
        "base_ref": "develop",
        "created_at": "Thursday Jun 24, 2021 at 05:14 GMT",
        "updated_at": "Friday Jun 25, 2021 at 06:00 GMT",
        "closed_at": "Friday Jun 25, 2021 at 06:00 GMT",
        "merged_at": "Friday Jun 25, 2021 at 06:00 GMT"
    },
    {
        "key": "WT-7636",
        "number": 6698,
        "state": "closed",
        "title": "WT-7636 Fix leaked cursors by implementing scoped cursor and session types",
        "body": "Implement some RAII types to manage the lifetimes of cursors and sessions in our system. I've introduced two classes in particular: `scoped_cursor` and `scoped_session`.\r\n\r\nThey automatically close themselves when they fall out of scope and their destructor is invoked.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 23, 2021 at 13:23 GMT",
        "updated_at": "Saturday Jun 26, 2021 at 02:12 GMT",
        "closed_at": "Saturday Jun 26, 2021 at 02:12 GMT",
        "merged_at": "Saturday Jun 26, 2021 at 02:12 GMT"
    },
    {
        "key": "WT-7721",
        "number": 6697,
        "state": "closed",
        "title": "WT-7721 Update test-format to reopen an existing database with different config",
        "body": "The test-format binary can now reopen an already existing database with different CONFIG files because some configurations are not supported by the older release. In compatibility testing, we want the test format binary to operate on the CONFIG that it understands.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 23, 2021 at 11:10 GMT",
        "updated_at": "Monday Jun 28, 2021 at 00:57 GMT",
        "closed_at": "Monday Jun 28, 2021 at 00:57 GMT",
        "merged_at": "Monday Jun 28, 2021 at 00:57 GMT"
    },
    {
        "key": "WT-7717",
        "number": 6696,
        "state": "closed",
        "title": "WT-7717 Change macros in local_store.c to use WT namespace",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 22, 2021 at 16:01 GMT",
        "updated_at": "Tuesday Jun 22, 2021 at 16:57 GMT",
        "closed_at": "Tuesday Jun 22, 2021 at 16:57 GMT",
        "merged_at": "Tuesday Jun 22, 2021 at 16:57 GMT"
    },
    {
        "key": "WT-7599",
        "number": 6695,
        "state": "closed",
        "title": "WT-7599 Compatibility test - create multiple config files for each release",
        "body": "Updated the compatibility script to create multiple config files each per release, so that each branch is provided a CONFIG file that it understands.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 22, 2021 at 15:57 GMT",
        "updated_at": "Monday Jul 12, 2021 at 08:12 GMT",
        "closed_at": "Sunday Jul 11, 2021 at 12:14 GMT",
        "merged_at": "Sunday Jul 11, 2021 at 12:14 GMT"
    },
    {
        "key": "WT-7710",
        "number": 6694,
        "state": "closed",
        "title": "WT-7710 Fix to use history store btree while initialising HS cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 22, 2021 at 08:38 GMT",
        "updated_at": "Thursday Jun 24, 2021 at 06:29 GMT",
        "closed_at": "Thursday Jun 24, 2021 at 06:29 GMT",
        "merged_at": "Thursday Jun 24, 2021 at 06:29 GMT"
    },
    {
        "key": "WT-7714",
        "number": 6693,
        "state": "closed",
        "title": " WT-7714 Fix prepared commit race with moving stable timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 22, 2021 at 03:52 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:32 GMT",
        "closed_at": "Wednesday Jun 23, 2021 at 00:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7443",
        "number": 6692,
        "state": "closed",
        "title": "Revert \"WT-7443 Add error message when bulk cursor can't get exclusive access to dhandle\"",
        "body": "Reverts wiredtiger/wiredtiger#6668\r\nThis change created a fallout in a MongoDB which led to BF-21629",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 22, 2021 at 01:13 GMT",
        "updated_at": "Tuesday Jun 22, 2021 at 01:45 GMT",
        "closed_at": "Tuesday Jun 22, 2021 at 01:45 GMT",
        "merged_at": "Tuesday Jun 22, 2021 at 01:45 GMT"
    },
    {
        "key": "WT-7708",
        "number": 6691,
        "state": "closed",
        "title": "Revert \"WT-7708 Add an assert to ensure stable timestamp is not moved during prepared commit\"",
        "body": "Reverts wiredtiger/wiredtiger#6689",
        "base_ref": "develop",
        "created_at": "Monday Jun 21, 2021 at 23:05 GMT",
        "updated_at": "Monday Jun 21, 2021 at 23:06 GMT",
        "closed_at": "Monday Jun 21, 2021 at 23:06 GMT",
        "merged_at": "Monday Jun 21, 2021 at 23:06 GMT"
    },
    {
        "key": "WT-7679",
        "number": 6690,
        "state": "closed",
        "title": "WT-7679 Create an evergreen test for many-dhandle-stress",
        "body": "Creation of a new evergreen buildvariant to run the many dhandles perf test.\r\nThe executed script will be merged in #6659.\r\nThe thresholds have been set high for now while we are waiting to gather more results.",
        "base_ref": "develop",
        "created_at": "Monday Jun 21, 2021 at 05:44 GMT",
        "updated_at": "Wednesday Jun 23, 2021 at 04:20 GMT",
        "closed_at": "Wednesday Jun 23, 2021 at 04:20 GMT",
        "merged_at": "Wednesday Jun 23, 2021 at 04:20 GMT"
    },
    {
        "key": "WT-7708",
        "number": 6689,
        "state": "closed",
        "title": "WT-7708 Add an assert to ensure stable timestamp is not moved during prepared commit",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 21, 2021 at 05:08 GMT",
        "updated_at": "Monday Jun 21, 2021 at 23:04 GMT",
        "closed_at": "Monday Jun 21, 2021 at 06:21 GMT",
        "merged_at": "Monday Jun 21, 2021 at 06:21 GMT"
    },
    {
        "key": "WT-7640",
        "number": 6688,
        "state": "closed",
        "title": "WT-7640 Fix test_backup02 where checkpoint tables differ due to checkpoint cursor not supported",
        "body": "I removed the use of \"checkpoint=WiredTigerCheckpoint\" in compare tables as checkpoint cursor is not supported. This may need to be revisited once PM-1982 project is completed.",
        "base_ref": "develop",
        "created_at": "Monday Jun 21, 2021 at 01:45 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 03:39 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 03:39 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 03:39 GMT"
    },
    {
        "key": "WT-7706",
        "number": 6687,
        "state": "closed",
        "title": "WT-7706 Prepared transaction abort should restore correct update from the history store.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 21, 2021 at 00:33 GMT",
        "updated_at": "Tuesday Jun 22, 2021 at 00:20 GMT",
        "closed_at": "Tuesday Jun 22, 2021 at 00:20 GMT",
        "merged_at": "Tuesday Jun 22, 2021 at 00:20 GMT"
    },
    {
        "key": "WT-7660",
        "number": 6686,
        "state": "closed",
        "title": "WT-7660 Rename poc_test to base_test and support insertion of new keys.",
        "body": "So this is another big-ish change, mainly due to the requirement of inserting new keys and trying to make the database model a bit more concurrent because of that requirement. \r\n\r\nI'll try to summarise all my changes here but my commits also have details:\r\n1. Refactored database model such that thread's can hold shared ptr's to collections. This way we can track the key_count per collection and access it relatively quickly without having to go through the top level database mutex. The database model doesn't allow for dropping, though it could be updated to as you can't drop anything that has an open cursor. So there's not much probability in that in the standard test you'd be able to drop anyway.\r\n2. Refactored database_operation.h, moved `update` and `insert` into the thread_context.h class 90% of the what we were passing into the static function could be handled there. Additionally it allowed for the operations in database_operation.h to be cleaned up substantially.\r\n3. Removed the random cursor for the `update_operation`, now that we know the key range we can be a bit more efficient and just access the key directly.\r\n4. Modified the tracking table to take collection_ids instead of collection URI's.\r\n5. Made statistic logging the default.\r\n6. Removed the config_ prefix on all config files, added an insert workload configuration. (These configurations will likely change a bit still so don't pay too much attention to them.)\r\n7. Renamed poc_test to base_test, updated the evergreen.yml to match.\r\n8. Gave collection creation power to the database so its not confusing as to where that happens, in doing so I also had to give it the tracking / timestamp manager.\r\n9. Added an optional sub_config get function, simply as somethings donot define subconfigs.\r\n10. Coded a basic `insert_operation`.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 20, 2021 at 05:08 GMT",
        "updated_at": "Friday Jun 25, 2021 at 02:46 GMT",
        "closed_at": "Friday Jun 25, 2021 at 02:46 GMT",
        "merged_at": "Friday Jun 25, 2021 at 02:46 GMT"
    },
    {
        "key": "WT-7707",
        "number": 6685,
        "state": "closed",
        "title": "WT-7707 Simplify insert splits to use the splitting WT_REFs key",
        "body": "Simplify the first child page's key when doing an insert split, there's no reason not to use the original WT_REF's key, rather than taking if from the split page.\r\n\r\nMinor cleanup of fast-truncate page checks and comments, re-order structure initialization to match structure declarations.",
        "base_ref": "develop",
        "created_at": "Friday Jun 18, 2021 at 17:56 GMT",
        "updated_at": "Saturday Jun 19, 2021 at 15:18 GMT",
        "closed_at": "Saturday Jun 19, 2021 at 15:18 GMT",
        "merged_at": "Saturday Jun 19, 2021 at 15:18 GMT"
    },
    {
        "key": "WT-7699",
        "number": 6684,
        "state": "closed",
        "title": "WT-7699 Fix RTS handling to abort an out of order prepared transaction",
        "body": "When an out of order update is performed by a prepared transaction\r\nthe earlier updates are not adjusted to the out of order prepared\r\ntimestamp. While aborting these updates properly frame the update\r\nthat needs to be restored.",
        "base_ref": "develop",
        "created_at": "Friday Jun 18, 2021 at 07:06 GMT",
        "updated_at": "Wednesday Jun 23, 2021 at 01:36 GMT",
        "closed_at": "Wednesday Jun 23, 2021 at 01:36 GMT",
        "merged_at": "Wednesday Jun 23, 2021 at 01:36 GMT"
    },
    {
        "key": "WT-7665",
        "number": 6683,
        "state": "closed",
        "title": "WT-7665 Apply op tracking inserts in the workload transaction",
        "body": "This PR attaches the operation tracking cursor to the thread context so that inserts are applied as part of the same transaction that the workload itself is using.\r\n\r\nThis allows rollbacks to also rollback tracking table inserts at the same time.",
        "base_ref": "develop",
        "created_at": "Friday Jun 18, 2021 at 04:56 GMT",
        "updated_at": "Tuesday Jun 22, 2021 at 01:06 GMT",
        "closed_at": "Tuesday Jun 22, 2021 at 01:06 GMT",
        "merged_at": "Tuesday Jun 22, 2021 at 01:06 GMT"
    },
    {
        "key": "WT-7705",
        "number": 6682,
        "state": "closed",
        "title": "WT-7705 Add an assert to ensure that there are no updates on the new disk image in update restore",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 18, 2021 at 04:51 GMT",
        "updated_at": "Wednesday Jun 30, 2021 at 10:27 GMT",
        "closed_at": "Wednesday Jun 30, 2021 at 10:27 GMT",
        "merged_at": "Wednesday Jun 30, 2021 at 10:27 GMT"
    },
    {
        "key": "WT-7605",
        "number": 6681,
        "state": "closed",
        "title": "WT-7605 Disable million collection and corresponding large scaled tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 18, 2021 at 01:03 GMT",
        "updated_at": "Friday Jun 18, 2021 at 02:06 GMT",
        "closed_at": "Friday Jun 18, 2021 at 02:06 GMT",
        "merged_at": "Friday Jun 18, 2021 at 02:06 GMT"
    },
    {
        "key": "WT-7279",
        "number": 6680,
        "state": "closed",
        "title": "WT-7279 Allow multiple WT_STORAGE_SOURCE.terminate calls via ref counting",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 17, 2021 at 17:31 GMT",
        "updated_at": "Thursday Jun 17, 2021 at 20:05 GMT",
        "closed_at": "Thursday Jun 17, 2021 at 20:05 GMT",
        "merged_at": "Thursday Jun 17, 2021 at 20:05 GMT"
    },
    {
        "key": null,
        "number": 6679,
        "state": "closed",
        "title": "Wt 7591 Fixes to allow cursors to be open during flush_tier",
        "body": "Eliminated a pair of places where we don't need exclusive dhandles (i.e., we now get shared dhandles instead).  Also updated the `tiered02` test to hold an open cursor across a bunch of flush_tier and other operations.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 17, 2021 at 15:45 GMT",
        "updated_at": "Thursday Jun 17, 2021 at 17:57 GMT",
        "closed_at": "Thursday Jun 17, 2021 at 17:57 GMT",
        "merged_at": "Thursday Jun 17, 2021 at 17:57 GMT"
    },
    {
        "key": "WT-7524",
        "number": 6678,
        "state": "closed",
        "title": "WT-7524 Refactor functions to obtain checkpoint list; Clear delete on skipping checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 17, 2021 at 06:52 GMT",
        "updated_at": "Tuesday Jun 29, 2021 at 06:21 GMT",
        "closed_at": "Tuesday Jun 29, 2021 at 06:21 GMT",
        "merged_at": "Tuesday Jun 29, 2021 at 06:21 GMT"
    },
    {
        "key": "WT-7520",
        "number": 6677,
        "state": "closed",
        "title": "WT-7520 Add start and stop values to automatic flag generation code",
        "body": "This ticket involves adding the start and stop values to the automatic flag generation code. I found the best way to represent the start and stop is through setting the values of start on the start generation line, and values of stop on the stop generation line. I have then done further checks to see if there are more flags than the stop limit, and to start of an offest from start.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 17, 2021 at 03:57 GMT",
        "updated_at": "Friday Jun 18, 2021 at 06:37 GMT",
        "closed_at": "Friday Jun 18, 2021 at 06:37 GMT",
        "merged_at": "Friday Jun 18, 2021 at 06:37 GMT"
    },
    {
        "key": "WT-7698",
        "number": 6676,
        "state": "closed",
        "title": "WT-7698 Reduce max_latency value in many-dhandle-stress.py.",
        "body": "This PR is to set the threshold max_latency that is used for Jenkins plots: http://build.wiredtiger.com:8080/job/wiredtiger-many-dhandles/plot/",
        "base_ref": "develop",
        "created_at": "Thursday Jun 17, 2021 at 03:51 GMT",
        "updated_at": "Sunday Jun 20, 2021 at 23:20 GMT",
        "closed_at": "Sunday Jun 20, 2021 at 23:20 GMT",
        "merged_at": "Sunday Jun 20, 2021 at 23:20 GMT"
    },
    {
        "key": "WT-6280",
        "number": 6675,
        "state": "closed",
        "title": "WT-6280 Fail eviction if out of order handling races with checkpoint",
        "body": "The solution is to fail eviction when we detect either mixed mode or out of order updates when checkpoint is running.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 17, 2021 at 00:54 GMT",
        "updated_at": "Wednesday Jul 07, 2021 at 07:37 GMT",
        "closed_at": "Wednesday Jul 07, 2021 at 05:56 GMT",
        "merged_at": "Wednesday Jul 07, 2021 at 05:56 GMT"
    },
    {
        "key": "WT-7687",
        "number": 6674,
        "state": "closed",
        "title": "WT-7687 Stop tiered manager thread before internal thread.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 16, 2021 at 18:45 GMT",
        "updated_at": "Wednesday Jun 16, 2021 at 20:12 GMT",
        "closed_at": "Wednesday Jun 16, 2021 at 20:12 GMT",
        "merged_at": "Wednesday Jun 16, 2021 at 20:12 GMT"
    },
    {
        "key": "WT-7667",
        "number": 6673,
        "state": "closed",
        "title": "WT-7667 Fix workgen json output",
        "body": "The following changes have been done to the output JSON format:\r\n\r\n1. \"workgen\" entries are now packed into array\r\n2. \"localTime\" element belongs to entry and should be placed inside\r\n3. \"version\" does not belong to any entry and should be placed into the root element\r\n\r\nAlso, in order to reduce complexity and improve readability of Monitor::run, several methods were extracted from the function.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 16, 2021 at 06:54 GMT",
        "updated_at": "Thursday Jun 17, 2021 at 07:44 GMT",
        "closed_at": "Thursday Jun 17, 2021 at 07:44 GMT",
        "merged_at": "Thursday Jun 17, 2021 at 07:44 GMT"
    },
    {
        "key": "WT-7675",
        "number": 6672,
        "state": "closed",
        "title": "WT-7675 Query last ckpt timestamp changes without taking checkpoint",
        "body": "Using barrier call before querying last_checkpoint timestamp to make sure we are not reading a stale or cached value.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 16, 2021 at 05:59 GMT",
        "updated_at": "Thursday Jun 17, 2021 at 09:52 GMT",
        "closed_at": "Thursday Jun 17, 2021 at 09:52 GMT",
        "merged_at": "Thursday Jun 17, 2021 at 09:52 GMT"
    },
    {
        "key": "WT-7668",
        "number": 6671,
        "state": "closed",
        "title": "WT-7668 Initial implementation of the overloaded update method",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 16, 2021 at 02:35 GMT",
        "updated_at": "Wednesday Jun 16, 2021 at 08:03 GMT",
        "closed_at": "Wednesday Jun 16, 2021 at 08:03 GMT",
        "merged_at": "Wednesday Jun 16, 2021 at 08:03 GMT"
    },
    {
        "key": "WT-7689",
        "number": 6670,
        "state": "closed",
        "title": "WT-7689 Fix double free in `__curhs_insert`",
        "body": "If the insertion code path fails in the history store cursor, we can free the same update twice. We can easily reproduce this by injecting an error with a patch like this:\r\n\r\n```\r\nmodified   src/cursor/cur_hs.c                                                                                                                                                        \r\n@@ -914,6 +914,11 @@ __curhs_insert(WT_CURSOR *cursor)                                                                                                                                \r\n         hs_upd = hs_tombstone;                                                                                                                                                       \r\n     }                                                                                                                                                                                \r\n                                                                                                                                                                                      \r\n+    /* Randomly produce errors. */                                                                                                                                                   \r\n+    if (rand() % 5 == 0)                                                                                                                                                             \r\n+        ret = EBUSY;                                                                                                                                                                 \r\n+    WT_ERR(ret);                                                                                                                                                                     \r\n+                                                                                                                                                                                     \r\n     do {                                                                                                                                                                             \r\n         WT_WITH_PAGE_INDEX(session, ret = __curhs_search(cbt, true));                                                                                                                \r\n         WT_ERR(ret);\r\n```",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 16, 2021 at 00:59 GMT",
        "updated_at": "Wednesday Jun 16, 2021 at 04:54 GMT",
        "closed_at": "Wednesday Jun 16, 2021 at 04:54 GMT",
        "merged_at": "Wednesday Jun 16, 2021 at 04:54 GMT"
    },
    {
        "key": "WT-7686",
        "number": 6669,
        "state": "closed",
        "title": "WT-7686 Fix config call, allowing \"sync\" option to work for flush_tier.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 15, 2021 at 22:35 GMT",
        "updated_at": "Tuesday Jun 15, 2021 at 23:46 GMT",
        "closed_at": "Tuesday Jun 15, 2021 at 23:46 GMT",
        "merged_at": "Tuesday Jun 15, 2021 at 23:46 GMT"
    },
    {
        "key": "WT-7443",
        "number": 6668,
        "state": "closed",
        "title": "WT-7443 Add error message when bulk cursor can't get exclusive access to dhandle",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 15, 2021 at 04:22 GMT",
        "updated_at": "Wednesday Aug 18, 2021 at 02:58 GMT",
        "closed_at": "Wednesday Jun 16, 2021 at 00:35 GMT",
        "merged_at": "Wednesday Jun 16, 2021 at 00:35 GMT"
    },
    {
        "key": "WT-7676",
        "number": 6667,
        "state": "closed",
        "title": "WT-7676 Reformat wtperf backup to only read in files instead of wt_copy_and_sync",
        "body": "This ticket involves the comments made inside WT-7431 Backup analysis report. This is to mimic more of the performance of the machine, as usually backup is done across two different disks. Therefore the impact of which the machine backup is performing on, would only be affected by the read component inside the copy command. The write command is usually done by the second disk, that is not running backup.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 15, 2021 at 02:51 GMT",
        "updated_at": "Sunday Jun 20, 2021 at 23:08 GMT",
        "closed_at": "Sunday Jun 20, 2021 at 23:08 GMT",
        "merged_at": "Sunday Jun 20, 2021 at 23:08 GMT"
    },
    {
        "key": "WT-7685",
        "number": 6666,
        "state": "closed",
        "title": "WT-7685 : Fix invalid values and units for latencies in workgen.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 15, 2021 at 02:28 GMT",
        "updated_at": "Tuesday Jun 15, 2021 at 07:11 GMT",
        "closed_at": "Tuesday Jun 15, 2021 at 07:11 GMT",
        "merged_at": "Tuesday Jun 15, 2021 at 07:11 GMT"
    },
    {
        "key": "WT-7557",
        "number": 6665,
        "state": "closed",
        "title": "WT-7557 Fix wiredtiger-perf-long backup max latency",
        "body": "This ticket involves fixing a regression in latency total warnings graph inside the jenkins plot. ",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 15, 2021 at 02:06 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:32 GMT",
        "closed_at": "Friday Jun 25, 2021 at 04:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7646",
        "number": 6664,
        "state": "closed",
        "title": "WT-7646 Remove unneeded uses of WT_WITH_BUCKET_STORAGE macro.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 14, 2021 at 19:10 GMT",
        "updated_at": "Tuesday Jun 15, 2021 at 17:18 GMT",
        "closed_at": "Tuesday Jun 15, 2021 at 17:18 GMT",
        "merged_at": "Tuesday Jun 15, 2021 at 17:18 GMT"
    },
    {
        "key": "WT-7644",
        "number": 6663,
        "state": "closed",
        "title": "WT-7644 Implement python hooks for tiered storage",
        "body": "Updated test to add tiered storage options to config for\r\nwiredtiger_open().  The test then ignores tiered storage\r\nfor tests that aren't on simple row-store tables.  It also\r\ncalls flush_tier() after every checkpoint call.",
        "base_ref": "develop",
        "created_at": "Monday Jun 14, 2021 at 15:15 GMT",
        "updated_at": "Tuesday Jun 15, 2021 at 18:48 GMT",
        "closed_at": "Tuesday Jun 15, 2021 at 18:48 GMT",
        "merged_at": "Tuesday Jun 15, 2021 at 18:48 GMT"
    },
    {
        "key": "WT-7552",
        "number": 6661,
        "state": "closed",
        "title": "WT-7552 Add UBSAN to automated WT testing",
        "body": "Added new variants for MSAN and UBSAN to Evergreen testing.",
        "base_ref": "develop",
        "created_at": "Monday Jun 14, 2021 at 13:27 GMT",
        "updated_at": "Sunday Jun 27, 2021 at 02:03 GMT",
        "closed_at": "Friday Jun 25, 2021 at 05:50 GMT",
        "merged_at": "Friday Jun 25, 2021 at 05:50 GMT"
    },
    {
        "key": "WT-7680",
        "number": 6660,
        "state": "closed",
        "title": "WT-7680 refactor rollback-to-stable to support operating on individual files",
        "body": "Refactor __rollback_to_stable_btree_apply() into two separate functions, __rollback_to_stable_btree_apply_all() which performs RTS on all files, and __rollback_to_stable_btree_apply() which performs RTS on a single file.\r\n\r\nWrap __rollback_to_stable_btree_apply() in a set/clear of WT_SESSION_QUIET_CORRUPT_FILE.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 13, 2021 at 00:03 GMT",
        "updated_at": "Tuesday Jun 15, 2021 at 16:48 GMT",
        "closed_at": "Tuesday Jun 15, 2021 at 16:48 GMT",
        "merged_at": "Tuesday Jun 15, 2021 at 16:48 GMT"
    },
    {
        "key": "WT-7616",
        "number": 6659,
        "state": "closed",
        "title": "WT-7616 Create a pass or fail test based on many collection workgen workload",
        "body": "Creation of a script for workgen perf assessment.",
        "base_ref": "develop",
        "created_at": "Friday Jun 11, 2021 at 04:33 GMT",
        "updated_at": "Wednesday Jun 23, 2021 at 04:21 GMT",
        "closed_at": "Wednesday Jun 23, 2021 at 04:21 GMT",
        "merged_at": "Wednesday Jun 23, 2021 at 04:21 GMT"
    },
    {
        "key": "WT-7674",
        "number": 6658,
        "state": "closed",
        "title": "WT-7674 reduce rollback-to-stable work for fast-truncate pages",
        "body": "Rollback-to-stable rolls back instantiated fast-truncate pages twice, once when processing the parent internal page and a second time when processing the child leaf page.\r\n\r\nI don't see a problem in the current code, but it's dangerous because rollback-to-stable uses the WT_PAGE_DELETED.durable_timestamp value to determine if rollback is needed. When a page is instantiated, the WT_PAGE_DELETED.durable_timestamp moves from the WT_PAGE_DELETED structure to the individual WT_UPDATE structures, so after instantiation rollback-to-stable is taking the value from the wrong source.\r\n\r\nChange rollback-to-stable to only check WT_PAGE_DELETED.durable_timestamp for pages that have not yet been instantiated.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 10, 2021 at 15:42 GMT",
        "updated_at": "Tuesday Jun 15, 2021 at 03:40 GMT",
        "closed_at": "Tuesday Jun 15, 2021 at 03:40 GMT",
        "merged_at": "Tuesday Jun 15, 2021 at 03:40 GMT"
    },
    {
        "key": "WT-7672",
        "number": 6657,
        "state": "closed",
        "title": "WT-7672 Remove make-check-test from Windows CMake Evergreen build variant",
        "body": "We did not turn \"make check\" tests on Windows previously, and it's not very surprising certain tests fail. Let's disable the make-check-test task from Windows CMake builder for now to address the test (manydbs) fallout. ",
        "base_ref": "develop",
        "created_at": "Thursday Jun 10, 2021 at 05:08 GMT",
        "updated_at": "Thursday Jun 10, 2021 at 07:44 GMT",
        "closed_at": "Thursday Jun 10, 2021 at 07:44 GMT",
        "merged_at": "Thursday Jun 10, 2021 at 07:44 GMT"
    },
    {
        "key": "WT-7666",
        "number": 6656,
        "state": "closed",
        "title": "WT-7666 Add assertion to check whether duplicate history store inserts are modifies",
        "body": "We're currently having issues with duplicate insertions into the history store. This is not harmful in the case of full updates but could cause invalid values to be read for modifies.\r\n\r\nWhile we're trying to solve this, I want to gain an understanding of whether this can only happen with full updates so I'm adding an assertion to distinguish between these two cases.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 10, 2021 at 02:03 GMT",
        "updated_at": "Friday Jun 11, 2021 at 04:28 GMT",
        "closed_at": "Friday Jun 11, 2021 at 04:28 GMT",
        "merged_at": "Friday Jun 11, 2021 at 04:28 GMT"
    },
    {
        "key": "WT-7383",
        "number": 6655,
        "state": "closed",
        "title": "WT-7383 Adding framework for new hs_cleanup test, refactoring the workload generator and database operation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 10, 2021 at 00:46 GMT",
        "updated_at": "Friday Jun 11, 2021 at 04:13 GMT",
        "closed_at": "Friday Jun 11, 2021 at 04:13 GMT",
        "merged_at": "Friday Jun 11, 2021 at 04:13 GMT"
    },
    {
        "key": "WT-7649",
        "number": 6654,
        "state": "closed",
        "title": "WT-7649 Skip timestamp assert during recovery",
        "body": "We don't expect recovery to be using timestamps when applying commits. If a table is configured with write timestamp asserts, being `assert=(write_timestamp=on),write_timestamp_usage=always)`, the recovery process will trigger asserts and fail. To avoid failing/blocking recovery, updated the timestamp assert to be skipped on a recovery connection.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 09, 2021 at 23:25 GMT",
        "updated_at": "Tuesday Jun 15, 2021 at 02:42 GMT",
        "closed_at": "Tuesday Jun 15, 2021 at 02:42 GMT",
        "merged_at": "Tuesday Jun 15, 2021 at 02:42 GMT"
    },
    {
        "key": "WT-7639",
        "number": 6653,
        "state": "closed",
        "title": "WT-7639 Alter test_tiered02.py to collect more data before asserting for missing file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 09, 2021 at 19:24 GMT",
        "updated_at": "Friday Jun 11, 2021 at 12:57 GMT",
        "closed_at": "Friday Jun 11, 2021 at 12:57 GMT",
        "merged_at": "Friday Jun 11, 2021 at 12:57 GMT"
    },
    {
        "key": "WT-7659",
        "number": 6652,
        "state": "closed",
        "title": "WT-7659 Rename of tiered table is not supported.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 09, 2021 at 16:46 GMT",
        "updated_at": "Wednesday Jun 09, 2021 at 20:12 GMT",
        "closed_at": "Wednesday Jun 09, 2021 at 20:12 GMT",
        "merged_at": "Wednesday Jun 09, 2021 at 20:12 GMT"
    },
    {
        "key": "WT-7556",
        "number": 6651,
        "state": "closed",
        "title": "WT-7556 Fix test_rollback_to_stable10 failure cache_hs_ondisk is 0",
        "body": "Fix the assertion failure by changing where we update the statistic that measures the history store file size.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 09, 2021 at 02:19 GMT",
        "updated_at": "Wednesday Jun 16, 2021 at 03:57 GMT",
        "closed_at": "Wednesday Jun 16, 2021 at 03:57 GMT",
        "merged_at": "Wednesday Jun 16, 2021 at 03:57 GMT"
    },
    {
        "key": "WT-7656",
        "number": 6650,
        "state": "closed",
        "title": "WT-7656 Destroy condition variable after threads join.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 08, 2021 at 18:39 GMT",
        "updated_at": "Tuesday Jun 08, 2021 at 23:37 GMT",
        "closed_at": "Tuesday Jun 08, 2021 at 23:37 GMT",
        "merged_at": "Tuesday Jun 08, 2021 at 23:37 GMT"
    },
    {
        "key": "WT-7583",
        "number": 6649,
        "state": "closed",
        "title": "WT-7583 Coverity analysis defect",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 08, 2021 at 09:18 GMT",
        "updated_at": "Thursday Jun 10, 2021 at 22:14 GMT",
        "closed_at": "Thursday Jun 10, 2021 at 22:14 GMT",
        "merged_at": "Thursday Jun 10, 2021 at 22:14 GMT"
    },
    {
        "key": "WT-7583",
        "number": 6648,
        "state": "closed",
        "title": "WT-7583 Coverity analysis defect",
        "body": "Added default case to all switch blocks that deal with OPERATION_TYPE and removed boundary check before them.\r\nAlso, _s_all_ script fixed some comments.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 08, 2021 at 05:50 GMT",
        "updated_at": "Tuesday Jun 08, 2021 at 07:54 GMT",
        "closed_at": "Tuesday Jun 08, 2021 at 07:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7648",
        "number": 6647,
        "state": "closed",
        "title": "WT-7648 Improve error messaging in the test framework",
        "body": "Hitting an assert in the test framework now looks like this:\r\n```\r\n$ ./run \r\nexample_test: FAILED: void test_harness::connection_manager::create(const string&, const string&)/72: false\r\nexample_test: process aborting\r\nAborted (core dumped)\r\n```\r\n\r\nIn C code, it remains unchanged. Here's an example in `format`:\r\n```\r\nt: FAILED: row_update/1601: false\r\nt: process aborting\r\n```",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 08, 2021 at 04:23 GMT",
        "updated_at": "Thursday Jun 10, 2021 at 01:51 GMT",
        "closed_at": "Thursday Jun 10, 2021 at 01:51 GMT",
        "merged_at": "Thursday Jun 10, 2021 at 01:51 GMT"
    },
    {
        "key": "WT-7594",
        "number": 6646,
        "state": "closed",
        "title": "WT-7594 Use key_consistent mode on format TS runs",
        "body": "Updated test/format to configure the table with 'write_timestamp_usage=key_consistent' when doing timestamp runs.\r\nUsing 'write_timestamp_usage=always' end up being incompatible when trying to use the test/format produced database with other wt utilities and applications that are not timestamp aware. Resulting in assertion failures.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 08, 2021 at 00:44 GMT",
        "updated_at": "Tuesday Jun 08, 2021 at 03:49 GMT",
        "closed_at": "Tuesday Jun 08, 2021 at 03:49 GMT",
        "merged_at": "Tuesday Jun 08, 2021 at 03:49 GMT"
    },
    {
        "key": "WT-7517",
        "number": 6645,
        "state": "closed",
        "title": "WT-7517 Code cleanup: Introduce a is-part-of-ckpt-array field",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 07, 2021 at 23:49 GMT",
        "updated_at": "Friday Jun 18, 2021 at 00:58 GMT",
        "closed_at": "Friday Jun 18, 2021 at 00:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7651",
        "number": 6644,
        "state": "closed",
        "title": "WT-7651 Add synchronization for flush_tier calls.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 07, 2021 at 16:47 GMT",
        "updated_at": "Tuesday Jun 08, 2021 at 14:55 GMT",
        "closed_at": "Tuesday Jun 08, 2021 at 14:55 GMT",
        "merged_at": "Tuesday Jun 08, 2021 at 14:55 GMT"
    },
    {
        "key": "WT-7585",
        "number": 6643,
        "state": "closed",
        "title": "WT-7585 Cyclomatic-complexity test failing",
        "body": "In order to reduce complexity of __wt_rec_upd_select two methods were extracted: ___timestamp_sanity_check_ and ___rec_need_save_upd_ Ideally, there should be more refactoring done. The method is still quite long.",
        "base_ref": "develop",
        "created_at": "Monday Jun 07, 2021 at 08:03 GMT",
        "updated_at": "Thursday Jun 10, 2021 at 00:47 GMT",
        "closed_at": "Thursday Jun 10, 2021 at 00:47 GMT",
        "merged_at": "Thursday Jun 10, 2021 at 00:47 GMT"
    },
    {
        "key": "WT-7625",
        "number": 6642,
        "state": "closed",
        "title": "WT-7625 Updating throttle configuration to be more user friendly",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 07, 2021 at 03:17 GMT",
        "updated_at": "Monday Jun 07, 2021 at 05:43 GMT",
        "closed_at": "Monday Jun 07, 2021 at 05:43 GMT",
        "merged_at": "Monday Jun 07, 2021 at 05:43 GMT"
    },
    {
        "key": "WT-7579",
        "number": 6641,
        "state": "closed",
        "title": "WT-7579 Disable prefix testing in compatibility test due to snapshot isolation search mismatch",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 07, 2021 at 00:47 GMT",
        "updated_at": "Monday Jun 07, 2021 at 01:23 GMT",
        "closed_at": "Monday Jun 07, 2021 at 01:23 GMT",
        "merged_at": "Monday Jun 07, 2021 at 01:23 GMT"
    },
    {
        "key": "WT-7228",
        "number": 6640,
        "state": "closed",
        "title": "WT-7228 Do not call next if we don't find the key in the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 07, 2021 at 00:25 GMT",
        "updated_at": "Monday Jun 07, 2021 at 04:40 GMT",
        "closed_at": "Monday Jun 07, 2021 at 04:40 GMT",
        "merged_at": "Monday Jun 07, 2021 at 04:40 GMT"
    },
    {
        "key": "WT-7647",
        "number": 6639,
        "state": "closed",
        "title": "WT-7647 Change Zstandard wrapper to include context management",
        "body": "This is an initial attempt to adapt context management for Zstandard.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 06, 2021 at 15:47 GMT",
        "updated_at": "Thursday Jun 10, 2021 at 03:54 GMT",
        "closed_at": "Thursday Jun 10, 2021 at 03:54 GMT",
        "merged_at": "Thursday Jun 10, 2021 at 03:54 GMT"
    },
    {
        "key": "WT-7553",
        "number": 6638,
        "state": "closed",
        "title": "WT-7553 cache stuck when fast-delete pages cannot be evicted or rewritten",
        "body": "Loosen the restrictions around evicting fast-truncate pages to avoid cache-stuck failures.\r\n\r\nAdd a WT_PAGE_DELETED.resolved field that's non-zero once the truncate has been committed or aborted (but says nothing about which resolution happened or data visibility).\r\n\r\nWhen instantiating a fast-truncate page, use the WT_PAGE_DELETED.resolved field to determine if we need to create the WT_PAGE_DELETED.update_list array of update references. This doesn't directly help with evicting fast-truncate pages, but it avoids allocating an additional 8B of memory for every page entry.\r\n\r\nIf failing to instantiate a fast-truncate page, don't increment the page's memory footprint.\r\n\r\nDon't require global visibility before attempting to evict fast-truncate pages, instead permit eviction to be attempted as soon as the fast-truncate resolves. This allows fully instantiated pages to be reconciled and evicted and their memory reclaimed in the cache.\r\n\r\nWe free the WT_REF.page_del structure in 6 different places, add a small inline function to do the work.",
        "base_ref": "develop",
        "created_at": "Saturday Jun 05, 2021 at 20:27 GMT",
        "updated_at": "Thursday Jun 17, 2021 at 18:27 GMT",
        "closed_at": "Thursday Jun 17, 2021 at 00:37 GMT",
        "merged_at": "Thursday Jun 17, 2021 at 00:37 GMT"
    },
    {
        "key": "WT-7589",
        "number": 6637,
        "state": "closed",
        "title": "WT-7589 Fixes to allow connection reopen after flush_tier",
        "body": "Tiered metadata now inherits from file metadata, so it will get version,\r\ncheckpoint, etc. and we can remove the ugly copying of configuration from\r\nthe file: metadata to the tiered: metadata.\r\n\r\nFixed block_tiered_load - the block manager's notion of the current objectid\r\nobjectid is set explicitly, it is not derived from the root checkpoint.\r\n\r\nMade tiered_close and (new function) tiered_discard behave like btree_close\r\nand btree_discard, so they can be called in analogous places.\r\n\r\nFor a newly created .wtobj local file, close the btree immediately. Otherwise\r\nOtherwise we have two Btrees that are reading/writing the same file.\r\n\r\nWhen walking metadata looking for btrees, include tiered files, else they\r\nwon't be checkpointed.\r\n\r\nRecovery now considers tiered files.\r\n\r\nWhen creating config for a tiered object, allocate a new unique Btree id,\r\nand give it a version number.\r\n\r\nSet up the local entry in the tiers array when reopening.\r\n\r\nStrip out checkpoint when we're creating the (dummy) local file.  Otherwise\r\nit gets the checkpoint from the tiered btree, which definitely does not apply.\r\n\r\nEnabled portion of test_tiered02 that does reopens, extended the test as far\r\nas it can go before breaking.",
        "base_ref": "develop",
        "created_at": "Friday Jun 04, 2021 at 18:44 GMT",
        "updated_at": "Wednesday Jun 09, 2021 at 15:43 GMT",
        "closed_at": "Wednesday Jun 09, 2021 at 15:43 GMT",
        "merged_at": "Wednesday Jun 09, 2021 at 15:43 GMT"
    },
    {
        "key": "WT-7588",
        "number": 6636,
        "state": "closed",
        "title": "WT-7588 Make object id numbers 32 bits.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 03, 2021 at 19:59 GMT",
        "updated_at": "Monday Jun 07, 2021 at 10:43 GMT",
        "closed_at": "Monday Jun 07, 2021 at 10:43 GMT",
        "merged_at": "Monday Jun 07, 2021 at 10:43 GMT"
    },
    {
        "key": "WT-7643",
        "number": 6635,
        "state": "closed",
        "title": "WT-7643 Update checkpoint decode tool for tiered storage",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 03, 2021 at 19:22 GMT",
        "updated_at": "Friday Jun 04, 2021 at 18:21 GMT",
        "closed_at": "Friday Jun 04, 2021 at 18:21 GMT",
        "merged_at": "Friday Jun 04, 2021 at 18:21 GMT"
    },
    {
        "key": "WT-7517",
        "number": 6634,
        "state": "closed",
        "title": "WT-7517 Creation of an end of list WT_CKPT field.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 03, 2021 at 13:55 GMT",
        "updated_at": "Tuesday Jun 08, 2021 at 00:15 GMT",
        "closed_at": "Tuesday Jun 08, 2021 at 00:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7634",
        "number": 6633,
        "state": "closed",
        "title": "WT-7634 Disable man page generation in Doxygen",
        "body": "The test failure reported in the ticket was related to the recent Doxygen version upgrade change, that when the `test/evergreen/configure_combinations.sh` script is called the \"make install\" step found non-existed manpage directory (doc build was skipped due to unsupported Doxygen version 1.8.13 running on the Ubuntu 18.04 host). \r\n\r\nHad a discussion with @keithbostic and we think the man pages built by Doxygen are not very useful nowadays. We'd like to get it disabled in Doxygen configuration file as a way to address the test failure. The related makefile and s_docs contents are removed as well. ",
        "base_ref": "develop",
        "created_at": "Thursday Jun 03, 2021 at 07:10 GMT",
        "updated_at": "Friday Jun 04, 2021 at 00:21 GMT",
        "closed_at": "Friday Jun 04, 2021 at 00:21 GMT",
        "merged_at": "Friday Jun 04, 2021 at 00:21 GMT"
    },
    {
        "key": "WT-7642",
        "number": 6632,
        "state": "closed",
        "title": "WT-7642 Fix the insert search flag in history store insert key order check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 03, 2021 at 06:08 GMT",
        "updated_at": "Friday Jun 04, 2021 at 00:02 GMT",
        "closed_at": "Friday Jun 04, 2021 at 00:02 GMT",
        "merged_at": "Friday Jun 04, 2021 at 00:02 GMT"
    },
    {
        "key": "WT-6737",
        "number": 6631,
        "state": "closed",
        "title": "WT-6737 Add explicit checkpoints to test_hs14",
        "body": "I have done some testing on Linux and MacOS and looks like the test failure was just a blip instead of an actual regression. This change is adding explicit checkpoints to the test to ensure that results are more predictable.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 03, 2021 at 05:16 GMT",
        "updated_at": "Friday Jun 04, 2021 at 01:05 GMT",
        "closed_at": "Friday Jun 04, 2021 at 01:05 GMT",
        "merged_at": "Friday Jun 04, 2021 at 01:05 GMT"
    },
    {
        "key": "WT-7320",
        "number": 6630,
        "state": "closed",
        "title": "WT-7320 Add the ability to check database size to the test framework",
        "body": "This PR implements a statistic for checking the size of the database so that we can add constraints to check that it doesn't outgrow what we expect from a given dataset.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 02, 2021 at 12:32 GMT",
        "updated_at": "Monday Jun 07, 2021 at 05:10 GMT",
        "closed_at": "Monday Jun 07, 2021 at 05:10 GMT",
        "merged_at": "Monday Jun 07, 2021 at 05:10 GMT"
    },
    {
        "key": "WT-7633",
        "number": 6629,
        "state": "closed",
        "title": "WT-7633 Switch doc-update Evergreen task to newer Ubuntu 20.04 distro",
        "body": "Switch distro to Ubuntu 20.04 for the `doc-update` Evergreen task.\r\nSwap mongodb-3.6 with mongodb-5.0 branch in `update wiredtiger docs` function.\r\nSwitch distro back to Ubuntu 18.04 for the little-endian builder (undesired to switch).",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 02, 2021 at 07:57 GMT",
        "updated_at": "Wednesday Jun 02, 2021 at 23:37 GMT",
        "closed_at": "Wednesday Jun 02, 2021 at 23:37 GMT",
        "merged_at": "Wednesday Jun 02, 2021 at 23:37 GMT"
    },
    {
        "key": "WT-7531",
        "number": 6628,
        "state": "closed",
        "title": "WT-7531 Consider scrub update restore eviction as a progress",
        "body": "When the cache is configured for scrub dirty pages, consider the\r\nupdate restore eviction as a progress when the page doesn't have\r\nany skipped updates.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 02, 2021 at 02:54 GMT",
        "updated_at": "Thursday Jun 03, 2021 at 12:03 GMT",
        "closed_at": "Thursday Jun 03, 2021 at 12:03 GMT",
        "merged_at": "Thursday Jun 03, 2021 at 12:03 GMT"
    },
    {
        "key": "WT-7480",
        "number": 6627,
        "state": "closed",
        "title": "WT-7480 Cleanup thread contexts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 01, 2021 at 23:41 GMT",
        "updated_at": "Thursday Jun 03, 2021 at 04:43 GMT",
        "closed_at": "Thursday Jun 03, 2021 at 04:43 GMT",
        "merged_at": "Thursday Jun 03, 2021 at 04:43 GMT"
    },
    {
        "key": "WT-7231",
        "number": 6626,
        "state": "closed",
        "title": "WT-7231 Evergreen jobs for compiling WiredTiger using CMAKE",
        "body": "This PR adds evergreen support for building WiredTiger with CMake. It also adds build variants that run the compilation & unit testing tasks with our CMake builds.\r\n\r\nWhilst we continue to support autoconf and SCons, I've left most of the evergreen build tasks as they currently are. The tests under the CMake variants are only a small subset of what is currently being tested. This is done to avoid unnecessary duplicate test runs. The main objective of these new tests are to ensure the CMake builds are always working as expected and correctly configures+compiles the WiredTiger library and its associated binaries.\r\n\r\n---\r\n\r\nMore specifically this PR adds the following features:\r\n- Updated the evergreen configure and build functions to optionally support a CMake build.\r\n- Extended 'make check' and 'unit test' for CMake\r\n-  Added CMake Evergreen build variants\r\n- Added specific CMake toolchain files to source the installed MongoDB V3 toolchain. This being the toolchain we use to build WiredTiger on evergreen.\r\n- Evergreen CMake helper scripts:\r\n   - Added evergreen 'find_cmake.sh' script - Due to inconsistent CMake installation locations across different evergreen testing instances\r\n   - Added a powershell script to configure and compile our CMake build on our Windows evergreen instance\r\n- CMake Bug Fix: Provide the ability to pass the path of the extension libraries e.g. compressors, as a CPP compiliation flags. This avoiding assuming the build location of the libraries e.g. static locations in build_posix. This is needed to run the format smoke/check test on evergreen.\r\n---\r\n\r\nAs with the previous PR's, to make it a bit easier to review I broke this PR into individual feature-based commits. This should highlight the different changes; hopefully making it easier to assess.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 01, 2021 at 07:06 GMT",
        "updated_at": "Thursday Jun 10, 2021 at 01:23 GMT",
        "closed_at": "Thursday Jun 10, 2021 at 01:23 GMT",
        "merged_at": "Thursday Jun 10, 2021 at 01:23 GMT"
    },
    {
        "key": "WT-7310",
        "number": 6625,
        "state": "closed",
        "title": "WT-7310 Test conflict in concurrent inserts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 01, 2021 at 06:44 GMT",
        "updated_at": "Tuesday Aug 17, 2021 at 05:32 GMT",
        "closed_at": "Tuesday Aug 17, 2021 at 05:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7319",
        "number": 6624,
        "state": "closed",
        "title": "WT-7319 Implement a checkpoint_manager class that creates checkpoints at configurable intervals",
        "body": "This PR adds a new component to call a checkpoint repeatedly. We can use the existing throttle capabilities to configure the interval.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 01, 2021 at 04:39 GMT",
        "updated_at": "Tuesday Jun 01, 2021 at 22:06 GMT",
        "closed_at": "Tuesday Jun 01, 2021 at 22:06 GMT",
        "merged_at": "Tuesday Jun 01, 2021 at 22:06 GMT"
    },
    {
        "key": "WT-6436",
        "number": 6623,
        "state": "closed",
        "title": "Repro WT-6436",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 01, 2021 at 01:55 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:31 GMT",
        "closed_at": "Monday Jun 07, 2021 at 23:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7135",
        "number": 6622,
        "state": "closed",
        "title": "WT-7135 Additional checks to detect when writing corrupted metadata (v4.0 backport)",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday May 31, 2021 at 23:36 GMT",
        "updated_at": "Wednesday Jun 02, 2021 at 00:02 GMT",
        "closed_at": "Wednesday Jun 02, 2021 at 00:02 GMT",
        "merged_at": "Wednesday Jun 02, 2021 at 00:02 GMT"
    },
    {
        "key": "WT-7135",
        "number": 6621,
        "state": "closed",
        "title": "WT-7135 Additional checks to detect when writing corrupted metadata (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday May 31, 2021 at 23:34 GMT",
        "updated_at": "Tuesday Jun 01, 2021 at 23:59 GMT",
        "closed_at": "Tuesday Jun 01, 2021 at 23:59 GMT",
        "merged_at": "Tuesday Jun 01, 2021 at 23:59 GMT"
    },
    {
        "key": "WT-7528",
        "number": 6620,
        "state": "closed",
        "title": "WT-7528 Fix WT_SESSION alter returns EBUSY",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 31, 2021 at 04:24 GMT",
        "updated_at": "Thursday Jun 03, 2021 at 06:14 GMT",
        "closed_at": "Thursday Jun 03, 2021 at 06:14 GMT",
        "merged_at": "Thursday Jun 03, 2021 at 06:14 GMT"
    },
    {
        "key": "WT-7602",
        "number": 6619,
        "state": "closed",
        "title": "WT-7602 Fix MacOS CMake Compilation Issues",
        "body": "This PR adds some small fixes encountered with newer toolchains on MacOS. This PR adds the following:\r\n* The CMake 'test_big_endian' can return an unset variable, capture this case as to avoid having an empty default value. This will fail to configure otherwise.\r\n* The SWIG generated code for the Python API triggers additional on-by-default Clang diagnostic errors on newer versions of Clang on MacOS. Turn these off to avoid compilation failures.",
        "base_ref": "develop",
        "created_at": "Monday May 31, 2021 at 03:26 GMT",
        "updated_at": "Monday May 31, 2021 at 06:00 GMT",
        "closed_at": "Monday May 31, 2021 at 06:00 GMT",
        "merged_at": "Monday May 31, 2021 at 06:00 GMT"
    },
    {
        "key": "ER-57174",
        "number": 6618,
        "state": "closed",
        "title": "Test to repro SERVER-57174",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 31, 2021 at 00:57 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:30 GMT",
        "closed_at": "Tuesday Jun 01, 2021 at 01:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7493",
        "number": 6617,
        "state": "closed",
        "title": "WT-7493 Add a new connection config to control the page eviction with update restore eviction",
        "body": "Add a new connection configuration to control dirty page evictions to do update restore evictions.\r\n\r\nThis commit was reverted, and should be fixed now.",
        "base_ref": "develop",
        "created_at": "Monday May 31, 2021 at 00:39 GMT",
        "updated_at": "Monday May 31, 2021 at 22:55 GMT",
        "closed_at": "Monday May 31, 2021 at 22:55 GMT",
        "merged_at": "Monday May 31, 2021 at 22:55 GMT"
    },
    {
        "key": null,
        "number": 6616,
        "state": "closed",
        "title": "Wt 7578 fix debug mode test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 31, 2021 at 00:29 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:30 GMT",
        "closed_at": "Monday May 31, 2021 at 00:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7437",
        "number": 6615,
        "state": "closed",
        "title": "WT-7437 Upgrade documentation to doxygen 1.8.17 (5.0 backport)",
        "body": "",
        "base_ref": "mongodb-5.0",
        "created_at": "Friday May 28, 2021 at 16:09 GMT",
        "updated_at": "Tuesday Jun 01, 2021 at 16:19 GMT",
        "closed_at": "Tuesday Jun 01, 2021 at 16:19 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7437",
        "number": 6614,
        "state": "closed",
        "title": "WT-7437 Upgrade documentation to doxygen 1.8.17 (4.4 backport)",
        "body": "",
        "base_ref": "mongodb-4.4",
        "created_at": "Friday May 28, 2021 at 16:09 GMT",
        "updated_at": "Wednesday Jun 02, 2021 at 06:58 GMT",
        "closed_at": "Wednesday Jun 02, 2021 at 06:58 GMT",
        "merged_at": "Wednesday Jun 02, 2021 at 06:58 GMT"
    },
    {
        "key": "WT-7437",
        "number": 6613,
        "state": "closed",
        "title": "WT-7437 Upgrade documentation to doxygen 1.8.17 (4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday May 28, 2021 at 16:08 GMT",
        "updated_at": "Wednesday Jun 02, 2021 at 06:59 GMT",
        "closed_at": "Wednesday Jun 02, 2021 at 06:59 GMT",
        "merged_at": "Wednesday Jun 02, 2021 at 06:59 GMT"
    },
    {
        "key": "WT-7437",
        "number": 6612,
        "state": "closed",
        "title": "WT-7437 Upgrade documentation to doxygen 1.8.17 (4.0 backport)",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday May 28, 2021 at 16:07 GMT",
        "updated_at": "Wednesday Jun 02, 2021 at 06:59 GMT",
        "closed_at": "Wednesday Jun 02, 2021 at 06:59 GMT",
        "merged_at": "Wednesday Jun 02, 2021 at 06:59 GMT"
    },
    {
        "key": "WT-7503",
        "number": 6611,
        "state": "closed",
        "title": "WT-7503 Change the history store compressor from snappy to ZStandard",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 28, 2021 at 03:45 GMT",
        "updated_at": "Tuesday Sep 28, 2021 at 00:47 GMT",
        "closed_at": "Tuesday Sep 28, 2021 at 00:46 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7503",
        "number": 6610,
        "state": "closed",
        "title": "Revert \"WT-7503 Change the history store compressor from snappy to ZStandard.\"",
        "body": "Reverts wiredtiger/wiredtiger#6540",
        "base_ref": "develop",
        "created_at": "Friday May 28, 2021 at 03:38 GMT",
        "updated_at": "Friday May 28, 2021 at 03:38 GMT",
        "closed_at": "Friday May 28, 2021 at 03:38 GMT",
        "merged_at": "Friday May 28, 2021 at 03:38 GMT"
    },
    {
        "key": "WT-7545",
        "number": 6609,
        "state": "closed",
        "title": "WT-7545 Limit upgrade/downgrade testing to timestamp transactions at snapshot isolation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 28, 2021 at 01:18 GMT",
        "updated_at": "Sunday May 30, 2021 at 22:51 GMT",
        "closed_at": "Sunday May 30, 2021 at 22:51 GMT",
        "merged_at": "Sunday May 30, 2021 at 22:51 GMT"
    },
    {
        "key": "WT-7595",
        "number": 6608,
        "state": "closed",
        "title": "WT-7595 Add flag to history store cursor to track whether underlying table insertion was successful",
        "body": "Our history store cursor insert implementation performs a few calls after the actual insertion into the history store stable. If these fail, the insert will return non-zero.\r\n\r\nThis means that we may bail out of reconciliation without marking the inserted update with the `WT_UPDATE_HS` flag, leading us to try inserting it again in a subsequent reconciliation.\r\n\r\nUnfortunately, this punches a hole through our cursor abstraction... but I think it's necessary for now. The priority is to fix this but we should come up with a cleaner way to deal with this in the future.",
        "base_ref": "develop",
        "created_at": "Thursday May 27, 2021 at 14:46 GMT",
        "updated_at": "Monday May 31, 2021 at 06:10 GMT",
        "closed_at": "Monday May 31, 2021 at 06:10 GMT",
        "merged_at": "Monday May 31, 2021 at 06:10 GMT"
    },
    {
        "key": "WT-7575",
        "number": 6607,
        "state": "closed",
        "title": "WT-7575 Run python test suite for macos in parallel on evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 26, 2021 at 23:37 GMT",
        "updated_at": "Tuesday Jun 01, 2021 at 23:48 GMT",
        "closed_at": "Tuesday Jun 01, 2021 at 23:48 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7577",
        "number": 6606,
        "state": "closed",
        "title": "WT-7577 Add sync configuration to flush_tier.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 26, 2021 at 18:41 GMT",
        "updated_at": "Monday Jun 07, 2021 at 11:27 GMT",
        "closed_at": "Monday Jun 07, 2021 at 11:27 GMT",
        "merged_at": "Monday Jun 07, 2021 at 11:27 GMT"
    },
    {
        "key": "WT-7531",
        "number": 6605,
        "state": "closed",
        "title": "Revert \"WT-7531 Consider update restore eviction as a progress\"",
        "body": "Reverts wiredtiger/wiredtiger#6581",
        "base_ref": "develop",
        "created_at": "Wednesday May 26, 2021 at 08:34 GMT",
        "updated_at": "Wednesday May 26, 2021 at 08:35 GMT",
        "closed_at": "Wednesday May 26, 2021 at 08:35 GMT",
        "merged_at": "Wednesday May 26, 2021 at 08:35 GMT"
    },
    {
        "key": "WT-7348",
        "number": 6604,
        "state": "closed",
        "title": "WT-7348 Fix Darwin POSIX issues",
        "body": "Adds two small fixes to the Darwin POSIX support merged as a result of WT-7348. This changes include:\r\n* Check whether compiling with GCC or Clang for ASAN and UBSAN since they have slightly different linker definition. We also need to move the inclusion of the modes config file to after the project definition to ensure 'CMAKE_C_COMPILER_ID' has been defined.\r\n* Older versions of CMake 3.10 & 3.11 are unable to have install definitions referring to subdirectory projects. We need to have these definitions at the same project scope when defining extension install targets.",
        "base_ref": "develop",
        "created_at": "Wednesday May 26, 2021 at 05:57 GMT",
        "updated_at": "Wednesday May 26, 2021 at 08:35 GMT",
        "closed_at": "Wednesday May 26, 2021 at 08:35 GMT",
        "merged_at": "Wednesday May 26, 2021 at 08:35 GMT"
    },
    {
        "key": "WT-7504",
        "number": 6603,
        "state": "closed",
        "title": "WT-7504 test_hs21 cache stuck dirty",
        "body": "After investigating, it seems like a lot of the failures are happening on PPC machines where checkpoint is hanging after the test completes but before shutdown. The idea is to make the Python test less intensive. ",
        "base_ref": "develop",
        "created_at": "Wednesday May 26, 2021 at 04:06 GMT",
        "updated_at": "Thursday May 27, 2021 at 03:45 GMT",
        "closed_at": "Thursday May 27, 2021 at 03:45 GMT",
        "merged_at": "Thursday May 27, 2021 at 03:45 GMT"
    },
    {
        "key": "WT-7493",
        "number": 6602,
        "state": "closed",
        "title": "Revert \"WT-7493 Add a new connection config to control the page eviction with update restore eviction\"",
        "body": "Reverts wiredtiger/wiredtiger#6580",
        "base_ref": "develop",
        "created_at": "Wednesday May 26, 2021 at 02:19 GMT",
        "updated_at": "Wednesday May 26, 2021 at 02:19 GMT",
        "closed_at": "Wednesday May 26, 2021 at 02:19 GMT",
        "merged_at": "Wednesday May 26, 2021 at 02:19 GMT"
    },
    {
        "key": "WT-7578",
        "number": 6601,
        "state": "closed",
        "title": "WT-7578 fix debug mode test",
        "body": "This ticket involves fixing the test by adding more pages to evict. ",
        "base_ref": "develop",
        "created_at": "Wednesday May 26, 2021 at 02:16 GMT",
        "updated_at": "Wednesday May 26, 2021 at 02:17 GMT",
        "closed_at": "Wednesday May 26, 2021 at 02:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7535",
        "number": 6600,
        "state": "closed",
        "title": "WT-7535 Complete CMake Windows support",
        "body": "This PR completes the main Windows support for building the WiredTiger library with CMake.\r\n\r\n---\r\n\r\nMore specifically this PR adds the following features:\r\n- Updated various CMake scripts to also account for Windows targets e.g. `cl` command line flags\r\n- Adds support to compile and execute WiredTiger tests on Windows (e.g Python tests, subset of the C tests)\r\n- Adds additional CMake build support for examples and wtperf\r\n- Miscellaneous refactors and improvements\r\n- Updated README\r\n\r\nThis PR does not add the following features (being left to future tickets/PR's):\r\n\r\n- Evergreen jobs to use the CMake build\r\n\r\n---\r\n\r\nThis work in this ticket is quite large and may need some time to review and discuss. As with the previous PR's, to make it a bit easier to review I broke this PR into individual feature-based commits. This should highlight the major design decisions and key pieces of functionality; hopefully making it easier to assess the key changes to the build system individually.",
        "base_ref": "develop",
        "created_at": "Tuesday May 25, 2021 at 22:35 GMT",
        "updated_at": "Tuesday Jun 01, 2021 at 06:38 GMT",
        "closed_at": "Tuesday Jun 01, 2021 at 06:38 GMT",
        "merged_at": "Tuesday Jun 01, 2021 at 06:38 GMT"
    },
    {
        "key": "WT-7567",
        "number": 6599,
        "state": "closed",
        "title": "WT-7567 Rework tiered storage reconfigure.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 25, 2021 at 15:02 GMT",
        "updated_at": "Wednesday May 26, 2021 at 13:44 GMT",
        "closed_at": "Wednesday May 26, 2021 at 13:44 GMT",
        "merged_at": "Wednesday May 26, 2021 at 13:44 GMT"
    },
    {
        "key": "WT-7581",
        "number": 6598,
        "state": "closed",
        "title": "WT-7581 Make wt_cache_config args consistent with other config functions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 25, 2021 at 14:15 GMT",
        "updated_at": "Tuesday May 25, 2021 at 16:35 GMT",
        "closed_at": "Tuesday May 25, 2021 at 16:35 GMT",
        "merged_at": "Tuesday May 25, 2021 at 16:35 GMT"
    },
    {
        "key": "WT-6436",
        "number": 6597,
        "state": "closed",
        "title": "WT-6436 Fix not resetting the key when retrying to search the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 25, 2021 at 06:50 GMT",
        "updated_at": "Monday May 31, 2021 at 11:57 GMT",
        "closed_at": "Monday May 31, 2021 at 11:57 GMT",
        "merged_at": "Monday May 31, 2021 at 11:57 GMT"
    },
    {
        "key": "WT-6555",
        "number": 6596,
        "state": "closed",
        "title": "WT-6555 Fix memory error in test_txn13",
        "body": "I updated `evergreen.yml` to use the `ubuntu1804-large` and `rhel80-large` distros for `unit-test-long`. These distros have 64GB of memory which should be more than enough to resolve the memory issues in the tests.",
        "base_ref": "develop",
        "created_at": "Tuesday May 25, 2021 at 03:30 GMT",
        "updated_at": "Thursday May 27, 2021 at 03:27 GMT",
        "closed_at": "Thursday May 27, 2021 at 03:27 GMT",
        "merged_at": "Thursday May 27, 2021 at 03:27 GMT"
    },
    {
        "key": "WT-7437",
        "number": 6595,
        "state": "closed",
        "title": "WT-7437 Upgrade documentation to doxygen 1.8.17",
        "body": "@lukech, @jiechenbo: e1adc17 and 06b1413 upgrade the docs to doxygen 1.8.17 and skips building the documentation if the installed doxygen isn't that version or newer. (That means the documentation won't build until we build on a system with 1.8.17 installed, of course.)\r\n\r\n@ddanderson, 65d64c8 and 298b964 are yours. I ended up leaving the architecture files in the `src/docs` directory, as that seemed simplest. I labeled them with a \"warning: maybe not correct\" message, and de-emphasized them in the introductory documentation page.",
        "base_ref": "develop",
        "created_at": "Monday May 24, 2021 at 22:50 GMT",
        "updated_at": "Tuesday Jun 01, 2021 at 23:29 GMT",
        "closed_at": "Tuesday Jun 01, 2021 at 23:29 GMT",
        "merged_at": "Tuesday Jun 01, 2021 at 23:29 GMT"
    },
    {
        "key": "WT-7510",
        "number": 6594,
        "state": "closed",
        "title": "WT-7510 Disable import when direct I/O is enabled in test/format.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 24, 2021 at 07:01 GMT",
        "updated_at": "Tuesday May 25, 2021 at 23:21 GMT",
        "closed_at": "Tuesday May 25, 2021 at 23:21 GMT",
        "merged_at": "Tuesday May 25, 2021 at 23:21 GMT"
    },
    {
        "key": "WT-7569",
        "number": 6593,
        "state": "closed",
        "title": "WT-7569 Check commit timestamp against the current commit timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 24, 2021 at 06:04 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:31 GMT",
        "closed_at": "Monday May 24, 2021 at 23:46 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7573",
        "number": 6592,
        "state": "closed",
        "title": "WT-7573 Print an error message and exit for invalid backup configurations in wtperf tests.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 24, 2021 at 01:42 GMT",
        "updated_at": "Monday May 24, 2021 at 07:03 GMT",
        "closed_at": "Monday May 24, 2021 at 07:03 GMT",
        "merged_at": "Monday May 24, 2021 at 07:03 GMT"
    },
    {
        "key": "WT-7348",
        "number": 6591,
        "state": "closed",
        "title": "WT-7348 WT_BUILDDIR option in python test runner",
        "body": "When running the python test suite with a CMake generated build we can no longer depend on falling back to a build directory of `build_posix`. Users can dynamically define the name of their CMake build directory and create multiple working builds of varying names. To avoid incorrectly assuming the build exists in `build_posix`, provide an opportunity to read an env variable 'WT_BUILDDIR' indicating the location of the build we want to use for the test.\r\n\r\nNote: We can mostly depend on invoking the python test in the working build directory e.g. `python3 ../test/suite/run.py`, however this approach doesn't work when the test starts spawning sub processes from different working directories e.g. invoking `run_subprocess_function`(or the user generally wants to invoke the test in a different working directory).",
        "base_ref": "wt-7348-cmake-exotic-archs",
        "created_at": "Monday May 24, 2021 at 01:19 GMT",
        "updated_at": "Monday May 24, 2021 at 22:44 GMT",
        "closed_at": "Monday May 24, 2021 at 22:44 GMT",
        "merged_at": "Monday May 24, 2021 at 22:44 GMT"
    },
    {
        "key": "WT-7507",
        "number": 6590,
        "state": "closed",
        "title": "WT-7507 Update salvage for a history store and timestamp world",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 23, 2021 at 00:02 GMT",
        "updated_at": "Thursday Jul 08, 2021 at 02:07 GMT",
        "closed_at": "Thursday Jul 08, 2021 at 02:07 GMT",
        "merged_at": "Thursday Jul 08, 2021 at 02:07 GMT"
    },
    {
        "key": "WT-7574",
        "number": 6589,
        "state": "closed",
        "title": "WT-7574 disable compact tests for OS/X.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 21, 2021 at 15:28 GMT",
        "updated_at": "Friday May 21, 2021 at 18:05 GMT",
        "closed_at": "Friday May 21, 2021 at 18:05 GMT",
        "merged_at": "Friday May 21, 2021 at 18:05 GMT"
    },
    {
        "key": "WT-7565",
        "number": 6588,
        "state": "closed",
        "title": "WT-7565 Update invalid backup configurations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 21, 2021 at 07:58 GMT",
        "updated_at": "Monday May 24, 2021 at 03:08 GMT",
        "closed_at": "Monday May 24, 2021 at 03:08 GMT",
        "merged_at": "Monday May 24, 2021 at 03:08 GMT"
    },
    {
        "key": "WT-7569",
        "number": 6587,
        "state": "closed",
        "title": "WT-7569 Fix wrongly squash an out of order timestamp update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 21, 2021 at 02:01 GMT",
        "updated_at": "Wednesday May 26, 2021 at 23:36 GMT",
        "closed_at": "Wednesday May 26, 2021 at 23:36 GMT",
        "merged_at": "Wednesday May 26, 2021 at 23:36 GMT"
    },
    {
        "key": "WT-7542",
        "number": 6586,
        "state": "closed",
        "title": "WT-7542 Add a Python test to reconfigure zstd compression level after restart",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 21, 2021 at 00:12 GMT",
        "updated_at": "Wednesday May 26, 2021 at 00:41 GMT",
        "closed_at": "Wednesday May 26, 2021 at 00:41 GMT",
        "merged_at": "Wednesday May 26, 2021 at 00:41 GMT"
    },
    {
        "key": "WT-7532",
        "number": 6585,
        "state": "closed",
        "title": "WT-7532 Hold schema lock when tiered manager calls flush_tier_once.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 19:06 GMT",
        "updated_at": "Monday May 24, 2021 at 15:48 GMT",
        "closed_at": "Monday May 24, 2021 at 15:48 GMT",
        "merged_at": "Monday May 24, 2021 at 15:48 GMT"
    },
    {
        "key": "WT-7549",
        "number": 6584,
        "state": "closed",
        "title": "WT-7549 change identifiers in block manager to use \"objects\"",
        "body": "Identifier change: log_structured -> has_objects\r\nIdentifier change: lfh -> ofh\r\nRemove block_allocation=log-structured config.\r\nChanged tests that used log-structured to use tiered tables.\r\nChanged \"wt list\" from looking at log-structured config to looking at\r\n  \"tiered:\" uri to decide if the block manager has objects.",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 14:58 GMT",
        "updated_at": "Thursday May 20, 2021 at 19:16 GMT",
        "closed_at": "Thursday May 20, 2021 at 19:16 GMT",
        "merged_at": "Thursday May 20, 2021 at 19:16 GMT"
    },
    {
        "key": "WT-7566",
        "number": 6583,
        "state": "closed",
        "title": "WT-7566 Fix modify after free memory error for dead dhandles.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 13:57 GMT",
        "updated_at": "Thursday May 20, 2021 at 17:38 GMT",
        "closed_at": "Thursday May 20, 2021 at 17:38 GMT",
        "merged_at": "Thursday May 20, 2021 at 17:38 GMT"
    },
    {
        "key": "WT-7541",
        "number": 6582,
        "state": "closed",
        "title": "WT-7541 Updated evergreen command to parse folder names with undesirable characters",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 08:10 GMT",
        "updated_at": "Sunday May 23, 2021 at 22:19 GMT",
        "closed_at": "Sunday May 23, 2021 at 22:19 GMT",
        "merged_at": "Sunday May 23, 2021 at 22:19 GMT"
    },
    {
        "key": "WT-7531",
        "number": 6581,
        "state": "closed",
        "title": "WT-7531 Consider update restore eviction as a progress",
        "body": "When the cache is configured for scrub dirty pages, consider the\r\nupdate restore eviction as a progress when the page doesn't have\r\nany skipped updates.",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 06:51 GMT",
        "updated_at": "Tuesday May 25, 2021 at 02:29 GMT",
        "closed_at": "Tuesday May 25, 2021 at 02:29 GMT",
        "merged_at": "Tuesday May 25, 2021 at 02:29 GMT"
    },
    {
        "key": "WT-7493",
        "number": 6580,
        "state": "closed",
        "title": "WT-7493 Add a new connection config to control the page eviction with update restore eviction",
        "body": "This ticket involves adding a new connection config called `update_restore_evict` which forces update restore evictions on pages whenever eviction happens. ",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 06:17 GMT",
        "updated_at": "Monday May 24, 2021 at 06:16 GMT",
        "closed_at": "Monday May 24, 2021 at 06:16 GMT",
        "merged_at": "Monday May 24, 2021 at 06:16 GMT"
    },
    {
        "key": "WT-7549",
        "number": 6579,
        "state": "closed",
        "title": "Revert \"WT-7549 change uses of logid to objectid, log_structured to has_objects.\"",
        "body": "Reverts wiredtiger/wiredtiger#6575",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 03:24 GMT",
        "updated_at": "Thursday May 20, 2021 at 03:24 GMT",
        "closed_at": "Thursday May 20, 2021 at 03:24 GMT",
        "merged_at": "Thursday May 20, 2021 at 03:24 GMT"
    },
    {
        "key": "WT-7523",
        "number": 6578,
        "state": "closed",
        "title": "WT-7523 Test to verify mutiple prepared updates either commit/rollback",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 20, 2021 at 03:19 GMT",
        "updated_at": "Wednesday Jun 02, 2021 at 00:48 GMT",
        "closed_at": "Wednesday Jun 02, 2021 at 00:48 GMT",
        "merged_at": "Wednesday Jun 02, 2021 at 00:48 GMT"
    },
    {
        "key": "WT-7348",
        "number": 6577,
        "state": "closed",
        "title": "WT-7348 CMake Complete POSIX support fixes",
        "body": "This PR appends some additional fixes to the final CMake POSIX support, to be merged with all the other changes under WT-7348.\r\nMore specifically, this PR adds:\r\n* Fixes to `define_csuite_test` helper so we can run csuite tests in parallel without them running over each other\r\n* Adjustments to the following C tests:\r\n   *  Prevent `wt2909_checkpoint_integrity` & `wt3120_filesys` from assuming the build location of the fail fs extension\r\nlibrary/module\r\n   * Avoid `syscall` test assuming the layout of `build_posix`\r\n* Avoid compiling with `fPIC` for static builds\r\n*  Respect CMake Build Modes: Making it IDE friendly\r\n*  ASAN and UBSan build mode ",
        "base_ref": "wt-7348-cmake-final-posix",
        "created_at": "Thursday May 20, 2021 at 01:11 GMT",
        "updated_at": "Monday May 24, 2021 at 00:55 GMT",
        "closed_at": "Monday May 24, 2021 at 00:55 GMT",
        "merged_at": "Monday May 24, 2021 at 00:55 GMT"
    },
    {
        "key": "WT-7379",
        "number": 6576,
        "state": "closed",
        "title": "WT-7379 Disable column store tests in compatibility test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 19, 2021 at 01:09 GMT",
        "updated_at": "Wednesday May 19, 2021 at 07:58 GMT",
        "closed_at": "Wednesday May 19, 2021 at 07:58 GMT",
        "merged_at": "Wednesday May 19, 2021 at 07:58 GMT"
    },
    {
        "key": "WT-7549",
        "number": 6575,
        "state": "closed",
        "title": "WT-7549 change uses of logid to objectid, log_structured to has_objects.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 18, 2021 at 20:30 GMT",
        "updated_at": "Wednesday Jun 23, 2021 at 05:28 GMT",
        "closed_at": "Thursday May 20, 2021 at 00:28 GMT",
        "merged_at": "Thursday May 20, 2021 at 00:28 GMT"
    },
    {
        "key": "WT-7548",
        "number": 6574,
        "state": "closed",
        "title": "WT-7548 Create macro to identify dhandles that behave as a Btree",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 18, 2021 at 12:57 GMT",
        "updated_at": "Tuesday May 18, 2021 at 18:33 GMT",
        "closed_at": "Tuesday May 18, 2021 at 18:33 GMT",
        "merged_at": "Tuesday May 18, 2021 at 18:33 GMT"
    },
    {
        "key": "WT-7452",
        "number": 6573,
        "state": "closed",
        "title": "WT-7452 Add addtional verbose messaging to rollback to stable.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 18, 2021 at 06:54 GMT",
        "updated_at": "Friday May 21, 2021 at 00:07 GMT",
        "closed_at": "Friday May 21, 2021 at 00:07 GMT",
        "merged_at": "Friday May 21, 2021 at 00:07 GMT"
    },
    {
        "key": "WT-7452",
        "number": 6572,
        "state": "closed",
        "title": "WT-7452 Add addtional verbose messaging to rollback to stable.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 18, 2021 at 06:44 GMT",
        "updated_at": "Monday Jun 07, 2021 at 02:49 GMT",
        "closed_at": "Thursday May 20, 2021 at 04:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7135",
        "number": 6571,
        "state": "closed",
        "title": "WT-7135 Additional checks to detect when writing corrupted metadata.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 18, 2021 at 05:06 GMT",
        "updated_at": "Sunday May 23, 2021 at 22:14 GMT",
        "closed_at": "Sunday May 23, 2021 at 22:14 GMT",
        "merged_at": "Sunday May 23, 2021 at 22:14 GMT"
    },
    {
        "key": "WT-7550",
        "number": 6570,
        "state": "closed",
        "title": "WT-7550 Properly check pinned page and fix not resetting cursor if error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 18, 2021 at 00:37 GMT",
        "updated_at": "Wednesday May 19, 2021 at 00:23 GMT",
        "closed_at": "Wednesday May 19, 2021 at 00:23 GMT",
        "merged_at": "Wednesday May 19, 2021 at 00:23 GMT"
    },
    {
        "key": "WT-7440",
        "number": 6569,
        "state": "closed",
        "title": "WT-7440 Integrate file cursor with tiered storage",
        "body": "Add code so we open a file cursor when the user calls open_cursor()\r\non a \"tiered:\" uri.",
        "base_ref": "develop",
        "created_at": "Monday May 17, 2021 at 19:30 GMT",
        "updated_at": "Tuesday May 18, 2021 at 18:38 GMT",
        "closed_at": "Tuesday May 18, 2021 at 18:38 GMT",
        "merged_at": "Tuesday May 18, 2021 at 18:38 GMT"
    },
    {
        "key": "WT-6230",
        "number": 6568,
        "state": "closed",
        "title": "WT-6230 Sanitize python test suite directory naming",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 17, 2021 at 18:27 GMT",
        "updated_at": "Tuesday May 18, 2021 at 10:30 GMT",
        "closed_at": "Tuesday May 18, 2021 at 10:30 GMT",
        "merged_at": "Tuesday May 18, 2021 at 10:30 GMT"
    },
    {
        "key": "WT-7546",
        "number": 6567,
        "state": "closed",
        "title": "WT-7546 Coverity: Minor issues in CppSuite test harness",
        "body": "I figured I may as well just make the changes since I'm already triaging them.",
        "base_ref": "develop",
        "created_at": "Monday May 17, 2021 at 11:20 GMT",
        "updated_at": "Tuesday May 18, 2021 at 00:43 GMT",
        "closed_at": "Tuesday May 18, 2021 at 00:43 GMT",
        "merged_at": "Tuesday May 18, 2021 at 00:43 GMT"
    },
    {
        "key": "WT-7267",
        "number": 6566,
        "state": "closed",
        "title": "WT-7267 Compare entire history store key when inferring cursor position in `search_near`",
        "body": "I have a WiredTiger patch build (incl. stress tests) + about 2k successful runs on my spawn hosts. I'm going to continue running testing to gain confidence, but I think we can begin reviewing and looking at getting this merged.",
        "base_ref": "develop",
        "created_at": "Monday May 17, 2021 at 01:21 GMT",
        "updated_at": "Tuesday May 18, 2021 at 03:53 GMT",
        "closed_at": "Tuesday May 18, 2021 at 03:53 GMT",
        "merged_at": "Tuesday May 18, 2021 at 03:53 GMT"
    },
    {
        "key": "WT-7446",
        "number": 6565,
        "state": "closed",
        "title": "WT-7446 Tests run only after the populating phase is done.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 17, 2021 at 00:01 GMT",
        "updated_at": "Monday May 17, 2021 at 08:34 GMT",
        "closed_at": "Monday May 17, 2021 at 08:34 GMT",
        "merged_at": "Monday May 17, 2021 at 08:34 GMT"
    },
    {
        "key": "WT-7381",
        "number": 6564,
        "state": "closed",
        "title": "WT-7381 Cache btree's ckptlist between checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 14, 2021 at 12:52 GMT",
        "updated_at": "Tuesday May 18, 2021 at 01:33 GMT",
        "closed_at": "Tuesday May 18, 2021 at 01:33 GMT",
        "merged_at": "Tuesday May 18, 2021 at 01:33 GMT"
    },
    {
        "key": "WT-7542",
        "number": 6563,
        "state": "closed",
        "title": "WT-7542 Add a Python test to reconfigure zstd compression level after restart",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 14, 2021 at 05:58 GMT",
        "updated_at": "Tuesday May 18, 2021 at 00:13 GMT",
        "closed_at": "Tuesday May 18, 2021 at 00:13 GMT",
        "merged_at": "Tuesday May 18, 2021 at 00:13 GMT"
    },
    {
        "key": "WT-7469",
        "number": 6562,
        "state": "closed",
        "title": "WT-7469 Potential hot backup read lock never unlocked",
        "body": "This ticket is fixing a potential resource lock by removing the early exit.",
        "base_ref": "develop",
        "created_at": "Friday May 14, 2021 at 04:32 GMT",
        "updated_at": "Wednesday May 19, 2021 at 23:38 GMT",
        "closed_at": "Wednesday May 19, 2021 at 23:38 GMT",
        "merged_at": "Wednesday May 19, 2021 at 23:38 GMT"
    },
    {
        "key": "WT-6576",
        "number": 6561,
        "state": "closed",
        "title": "WT-6576 Remove/restore on-disk prepared key that is aborted",
        "body": "Fix the missing of removing/restoring on-disk key that contains\r\nboth insert and remove from the same prepared transaction.",
        "base_ref": "develop",
        "created_at": "Friday May 14, 2021 at 01:44 GMT",
        "updated_at": "Monday May 17, 2021 at 02:09 GMT",
        "closed_at": "Monday May 17, 2021 at 02:09 GMT",
        "merged_at": "Monday May 17, 2021 at 02:09 GMT"
    },
    {
        "key": "WT-7296",
        "number": 6560,
        "state": "closed",
        "title": "WT-7296 Merging default configuration with user provided configuration.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 14, 2021 at 00:29 GMT",
        "updated_at": "Friday May 14, 2021 at 04:07 GMT",
        "closed_at": "Friday May 14, 2021 at 04:07 GMT",
        "merged_at": "Friday May 14, 2021 at 04:07 GMT"
    },
    {
        "key": "WT-7416",
        "number": 6559,
        "state": "closed",
        "title": "WT-7416 Backup cursor has a key, but incr backup cursor returns WT_NOTFOUND",
        "body": "This ticket was reverted from #6524 ",
        "base_ref": "develop",
        "created_at": "Friday May 14, 2021 at 00:04 GMT",
        "updated_at": "Monday May 17, 2021 at 02:01 GMT",
        "closed_at": "Monday May 17, 2021 at 02:01 GMT",
        "merged_at": "Monday May 17, 2021 at 02:01 GMT"
    },
    {
        "key": "WT-7296",
        "number": 6558,
        "state": "closed",
        "title": "Revert \"WT-7296 Implementing configuration merging\"",
        "body": "Reverts wiredtiger/wiredtiger#6550",
        "base_ref": "develop",
        "created_at": "Thursday May 13, 2021 at 23:46 GMT",
        "updated_at": "Thursday May 13, 2021 at 23:47 GMT",
        "closed_at": "Thursday May 13, 2021 at 23:47 GMT",
        "merged_at": "Thursday May 13, 2021 at 23:47 GMT"
    },
    {
        "key": "WT-7381",
        "number": 6557,
        "state": "closed",
        "title": "Revert \"WT-7381 Cache btree's ckptlist between checkpoints.\"",
        "body": "Reverts wiredtiger/wiredtiger#6507",
        "base_ref": "develop",
        "created_at": "Thursday May 13, 2021 at 23:40 GMT",
        "updated_at": "Thursday May 13, 2021 at 23:40 GMT",
        "closed_at": "Thursday May 13, 2021 at 23:40 GMT",
        "merged_at": "Thursday May 13, 2021 at 23:40 GMT"
    },
    {
        "key": "WT-7416",
        "number": 6556,
        "state": "closed",
        "title": "Revert \"WT-7416 Backup cursor has a key, but incr backup cursor returns WT_NOTFOUND\"",
        "body": "Reverts wiredtiger/wiredtiger#6524",
        "base_ref": "develop",
        "created_at": "Thursday May 13, 2021 at 23:37 GMT",
        "updated_at": "Thursday May 13, 2021 at 23:38 GMT",
        "closed_at": "Thursday May 13, 2021 at 23:38 GMT",
        "merged_at": "Thursday May 13, 2021 at 23:38 GMT"
    },
    {
        "key": "WT-7498",
        "number": 6555,
        "state": "closed",
        "title": "WT-7498 Add tiered work unit queues.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 13, 2021 at 20:52 GMT",
        "updated_at": "Monday May 24, 2021 at 20:51 GMT",
        "closed_at": "Monday May 24, 2021 at 20:51 GMT",
        "merged_at": "Monday May 24, 2021 at 20:51 GMT"
    },
    {
        "key": "WT-7537",
        "number": 6554,
        "state": "closed",
        "title": "WT-7537 Use wtobj as the local suffix.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 13, 2021 at 18:00 GMT",
        "updated_at": "Thursday May 13, 2021 at 20:11 GMT",
        "closed_at": "Thursday May 13, 2021 at 20:11 GMT",
        "merged_at": "Thursday May 13, 2021 at 20:11 GMT"
    },
    {
        "key": "WT-7348",
        "number": 6553,
        "state": "closed",
        "title": "WT-7348 CMake Complete POSIX support",
        "body": "This PR completes the main POSIX support for building the WiredTiger library with CMake (for all architectures). \r\n\r\n---\r\n\r\nMore specifically this PR adds the following features:\r\n- Build support for the Python API.\r\n- Build support for all the tools and test suites\r\n  - CMake helpers to define test executables. \r\n  - Additionally integrated the [CTest](https://cmake.org/cmake/help/latest/module/CTest.html).\r\n- Updated README and Doxygen docs.\r\n- Miscellaneous small bug fixes.\r\n\r\nThis PR does not add the following features (being left to future tickets/PR's):\r\n\r\n- CMake support for Windows\r\n- Evergreen jobs to use the CMake build\r\n\r\n---\r\n\r\nThis work in this ticket is quite large and I split it over two PR's to make it a bit easier to focus on the different changes. I expect it will need a significant amount of time to review and discuss. This PR sits on-top of #6552. Together both PRs complete the necessary CMake POSIX support.\r\n\r\nTo also make it a bit easier to review I broke this PR into individual feature-based commits. This should highlight the major design decisions and key pieces of functionality; hopefully making it easier to assess the key changes to the build system individually.",
        "base_ref": "wt-7348-cmake-exotic-archs",
        "created_at": "Thursday May 13, 2021 at 00:57 GMT",
        "updated_at": "Monday May 24, 2021 at 01:04 GMT",
        "closed_at": "Monday May 24, 2021 at 01:04 GMT",
        "merged_at": "Monday May 24, 2021 at 01:04 GMT"
    },
    {
        "key": "WT-7348",
        "number": 6552,
        "state": "closed",
        "title": "WT-7348 Complete CMake POSIX support",
        "body": "This PR completes the main POSIX support for building the WiredTiger library with CMake (for all architectures). \r\n\r\n---\r\n\r\nMore specifically this PR adds the following features:\r\n- Build support for the Python API.\r\n- Build support for all the tools and test suites\r\n  - CMake helpers to define test executables. \r\n  - Additionally integrated the [CTest](https://cmake.org/cmake/help/latest/module/CTest.html).\r\n- Updated README and Doxygen docs.\r\n- Miscellaneous small bug fixes.\r\n- aarch64, PPC, ZSeries support\r\n\r\nThis PR does not add the following features (being left to future tickets/PR's):\r\n\r\n- CMake support for Windows\r\n- Evergreen jobs to use the CMake build\r\n\r\n\r\n---\r\n\r\nThis work in this ticket is quite large and I split it over two PR's to make it a bit easier to focus on the different changes. I expect it will need a significant amount of time to review and discuss. The following PR (which is based on-top of this PR), completes the POSIX support with the Python API and various test suite support.\r\n\r\nTo also make it a bit easier to review I broke this PR into individual feature-based commits. This should highlight the major design decisions and key pieces of functionality; hopefully making it easier to assess the key changes to the build system individually.",
        "base_ref": "develop",
        "created_at": "Thursday May 13, 2021 at 00:51 GMT",
        "updated_at": "Tuesday May 25, 2021 at 21:59 GMT",
        "closed_at": "Tuesday May 25, 2021 at 21:59 GMT",
        "merged_at": "Tuesday May 25, 2021 at 21:59 GMT"
    },
    {
        "key": "WT-7204",
        "number": 6551,
        "state": "closed",
        "title": "WT-7204 update cursor-backward walks key instantiation support",
        "body": "Rework code to instantiate keys when doing cursor-previous walks.\r\n\r\nDon't bother trying to match the binary page-search key placement, just instantiate every Nth key reading forward through the page (the probability of a page we've not searched before being read by a cursor in the backward direction, followed by searches, doesn't seem high).\r\n\r\nTake the recent prefix compression work in WT-7234 into consideration, keys which can be quickly built from the page's largest group of prefix-compressed keys don't need to be instantiated.\r\n\r\nAdditionally, there's no reason to do this work if the page doesn't have long runs of prefix-compressed keys.\r\n\r\nAdditionally, we should never instantiate overflow keys.",
        "base_ref": "develop",
        "created_at": "Wednesday May 12, 2021 at 21:54 GMT",
        "updated_at": "Tuesday May 18, 2021 at 00:11 GMT",
        "closed_at": "Tuesday May 18, 2021 at 00:11 GMT",
        "merged_at": "Tuesday May 18, 2021 at 00:11 GMT"
    },
    {
        "key": "WT-7296",
        "number": 6550,
        "state": "closed",
        "title": "WT-7296 Implementing configuration merging",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 12, 2021 at 05:54 GMT",
        "updated_at": "Thursday May 13, 2021 at 23:21 GMT",
        "closed_at": "Thursday May 13, 2021 at 23:21 GMT",
        "merged_at": "Thursday May 13, 2021 at 23:21 GMT"
    },
    {
        "key": "WT-7332",
        "number": 6549,
        "state": "closed",
        "title": "WT-7332 Add ability to cycle through create and drop tables in workgen (v4.4 backport)",
        "body": "716858f654e00175114f754b5c299bcce91bf276",
        "base_ref": "mongodb-4.4",
        "created_at": "Wednesday May 12, 2021 at 05:44 GMT",
        "updated_at": "Wednesday May 12, 2021 at 05:49 GMT",
        "closed_at": "Wednesday May 12, 2021 at 05:46 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7525",
        "number": 6548,
        "state": "closed",
        "title": "WT-7525 Add key order check after hs insert",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 12, 2021 at 03:00 GMT",
        "updated_at": "Friday May 14, 2021 at 05:55 GMT",
        "closed_at": "Friday May 14, 2021 at 05:55 GMT",
        "merged_at": "Friday May 14, 2021 at 05:55 GMT"
    },
    {
        "key": "WT-7519",
        "number": 6547,
        "state": "closed",
        "title": "WT-7519 Fix flags field overflow in WT_DATA_HANDLE",
        "body": "Repartition division of flags between WT_DATA_HANDLE and WT_BTREE.\r\n\r\nWT_DATA_HANDLE now has 12 available flags and WT_BTREE has 20.\r\n\r\nAlso added a max flag (WT_DHANDLE_ZZZ_ENDFLAG) that we can use to assert\r\nthat the dhandle flags haven't grown into the space reserved for btree\r\nflags.",
        "base_ref": "develop",
        "created_at": "Tuesday May 11, 2021 at 21:27 GMT",
        "updated_at": "Wednesday May 12, 2021 at 18:07 GMT",
        "closed_at": "Wednesday May 12, 2021 at 18:07 GMT",
        "merged_at": "Wednesday May 12, 2021 at 18:07 GMT"
    },
    {
        "key": "WT-7497",
        "number": 6546,
        "state": "closed",
        "title": "WT-7497 Add (currently false) flush setting in object metadata.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 11, 2021 at 19:07 GMT",
        "updated_at": "Wednesday May 12, 2021 at 18:16 GMT",
        "closed_at": "Wednesday May 12, 2021 at 18:16 GMT",
        "merged_at": "Wednesday May 12, 2021 at 18:16 GMT"
    },
    {
        "key": "WT-7382",
        "number": 6545,
        "state": "closed",
        "title": "WT-7382 Refactor of database validation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 11, 2021 at 02:45 GMT",
        "updated_at": "Sunday May 16, 2021 at 23:41 GMT",
        "closed_at": "Sunday May 16, 2021 at 23:41 GMT",
        "merged_at": "Sunday May 16, 2021 at 23:41 GMT"
    },
    {
        "key": "WT-7514",
        "number": 6544,
        "state": "closed",
        "title": "WT-7514 Let tiered subsystem open files on behalf of block manager.",
        "body": "I've based this branch off of wt-7499 changes, which have not yet been merged.\r\nIt shows how I expect the block manager to open files based on their object id.\r\nThis does not yet addressed flush_tier changes for the block manager.",
        "base_ref": "develop",
        "created_at": "Monday May 10, 2021 at 21:20 GMT",
        "updated_at": "Wednesday Jun 02, 2021 at 22:52 GMT",
        "closed_at": "Wednesday Jun 02, 2021 at 22:52 GMT",
        "merged_at": "Wednesday Jun 02, 2021 at 22:52 GMT"
    },
    {
        "key": "WT-7487",
        "number": 6543,
        "state": "closed",
        "title": "WT-7487 Coverity explicit NULL dereferenced",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 10, 2021 at 10:00 GMT",
        "updated_at": "Wednesday May 12, 2021 at 01:26 GMT",
        "closed_at": "Wednesday May 12, 2021 at 01:26 GMT",
        "merged_at": "Wednesday May 12, 2021 at 01:26 GMT"
    },
    {
        "key": "WT-7511",
        "number": 6542,
        "state": "closed",
        "title": "WT-7511 Add assert to ensure the history store page is pinned before search",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 10, 2021 at 06:08 GMT",
        "updated_at": "Wednesday May 12, 2021 at 02:52 GMT",
        "closed_at": "Wednesday May 12, 2021 at 02:52 GMT",
        "merged_at": "Wednesday May 12, 2021 at 02:52 GMT"
    },
    {
        "key": "WT-7486",
        "number": 6541,
        "state": "closed",
        "title": "WT-7486 Coverity explcit NULL dereferenced",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 10, 2021 at 03:28 GMT",
        "updated_at": "Wednesday May 12, 2021 at 01:26 GMT",
        "closed_at": "Wednesday May 12, 2021 at 01:26 GMT",
        "merged_at": "Wednesday May 12, 2021 at 01:26 GMT"
    },
    {
        "key": "WT-7503",
        "number": 6540,
        "state": "closed",
        "title": "WT-7503 Change the history store compressor from snappy to ZStandard.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 10, 2021 at 02:08 GMT",
        "updated_at": "Tuesday Sep 28, 2021 at 00:47 GMT",
        "closed_at": "Tuesday May 11, 2021 at 23:37 GMT",
        "merged_at": "Tuesday May 11, 2021 at 23:37 GMT"
    },
    {
        "key": "WT-7506",
        "number": 6539,
        "state": "closed",
        "title": "WT-7506 Allow single and double quotes inside auto-formatted comments.",
        "body": "Allow single and double quotes inside auto-formatted comments.",
        "base_ref": "develop",
        "created_at": "Sunday May 09, 2021 at 19:21 GMT",
        "updated_at": "Monday May 10, 2021 at 23:42 GMT",
        "closed_at": "Monday May 10, 2021 at 23:42 GMT",
        "merged_at": "Monday May 10, 2021 at 23:42 GMT"
    },
    {
        "key": "WT-7499",
        "number": 6538,
        "state": "closed",
        "title": "WT-7499 Change WT_STORAGE_SOURCE.flush API and add flush_finish.",
        "body": "Remove \"file system\" prefixes from the API.\r\nRemove tracking of \"items not yet flushed\" from the local_store.",
        "base_ref": "develop",
        "created_at": "Friday May 07, 2021 at 15:56 GMT",
        "updated_at": "Tuesday May 11, 2021 at 23:24 GMT",
        "closed_at": "Tuesday May 11, 2021 at 23:24 GMT",
        "merged_at": "Tuesday May 11, 2021 at 23:24 GMT"
    },
    {
        "key": "WT-7325",
        "number": 6537,
        "state": "closed",
        "title": "WT-7325 Created a script to generate a new test in the WT test framework",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 07, 2021 at 05:59 GMT",
        "updated_at": "Tuesday May 11, 2021 at 09:14 GMT",
        "closed_at": "Tuesday May 11, 2021 at 09:14 GMT",
        "merged_at": "Tuesday May 11, 2021 at 09:14 GMT"
    },
    {
        "key": "WT-7496",
        "number": 6536,
        "state": "closed",
        "title": "WT-7496 Add operations each tier can support to data structure.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 06, 2021 at 19:15 GMT",
        "updated_at": "Thursday May 06, 2021 at 23:42 GMT",
        "closed_at": "Thursday May 06, 2021 at 23:42 GMT",
        "merged_at": "Thursday May 06, 2021 at 23:42 GMT"
    },
    {
        "key": "WT-7500",
        "number": 6535,
        "state": "closed",
        "title": "WT-7500 Refactor starting flush thread.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 06, 2021 at 18:00 GMT",
        "updated_at": "Thursday May 06, 2021 at 20:00 GMT",
        "closed_at": "Thursday May 06, 2021 at 20:00 GMT",
        "merged_at": "Thursday May 06, 2021 at 20:00 GMT"
    },
    {
        "key": "WT-7411",
        "number": 6534,
        "state": "closed",
        "title": "WT-7411 Stats and counter to track prepared updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 06, 2021 at 06:27 GMT",
        "updated_at": "Monday May 10, 2021 at 06:21 GMT",
        "closed_at": "Monday May 10, 2021 at 06:21 GMT",
        "merged_at": "Monday May 10, 2021 at 06:21 GMT"
    },
    {
        "key": "WT-7106",
        "number": 6533,
        "state": "closed",
        "title": "WT-7106 Reverse deltas are performed on standard updates",
        "body": "Updated the history store reconciliation code to increase the frequency of reverse modifies by allowing standard updates to be stored as deltas. Additionally, ensure the most recent update in the chain gets reconciled as a full update through checking if it has already been written on the data store.\r\n\r\nIn addition, when reconciling history store standard updates, limit the number of consecutive reverse modifies as to avoid impacting reading performance.",
        "base_ref": "develop",
        "created_at": "Thursday May 06, 2021 at 01:58 GMT",
        "updated_at": "Monday May 10, 2021 at 05:48 GMT",
        "closed_at": "Monday May 10, 2021 at 05:48 GMT",
        "merged_at": "Monday May 10, 2021 at 05:48 GMT"
    },
    {
        "key": "WT-6893",
        "number": 6532,
        "state": "closed",
        "title": "WT-6893 Disable huffman config in compatibility test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 06, 2021 at 01:48 GMT",
        "updated_at": "Thursday May 06, 2021 at 23:39 GMT",
        "closed_at": "Thursday May 06, 2021 at 23:39 GMT",
        "merged_at": "Thursday May 06, 2021 at 23:39 GMT"
    },
    {
        "key": "WT-7489",
        "number": 6531,
        "state": "closed",
        "title": "WT-7489 rollback to stable can fail if running concurrently with a checkpoint",
        "body": "RTS cannot run concurrently with checkpoints, lock them out.",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 23:31 GMT",
        "updated_at": "Friday May 07, 2021 at 02:47 GMT",
        "closed_at": "Friday May 07, 2021 at 02:47 GMT",
        "merged_at": "Friday May 07, 2021 at 02:47 GMT"
    },
    {
        "key": "WT-7076",
        "number": 6530,
        "state": "closed",
        "title": "WT-7076 Add internal tiered storage server thread separate from flush",
        "body": "tier manager.",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 21:16 GMT",
        "updated_at": "Thursday May 06, 2021 at 17:27 GMT",
        "closed_at": "Thursday May 06, 2021 at 17:27 GMT",
        "merged_at": "Thursday May 06, 2021 at 17:27 GMT"
    },
    {
        "key": "WT-7488",
        "number": 6529,
        "state": "closed",
        "title": "WT-7488 Remove verbose output for Coverity.",
        "body": "Removed some debugging code I left in because Coverity doesn't like it. We don't need to have it.",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 18:30 GMT",
        "updated_at": "Wednesday May 05, 2021 at 19:47 GMT",
        "closed_at": "Wednesday May 05, 2021 at 19:47 GMT",
        "merged_at": "Wednesday May 05, 2021 at 19:47 GMT"
    },
    {
        "key": "WT-7485",
        "number": 6528,
        "state": "closed",
        "title": "WT-7485 Coverity resource leak",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 18:25 GMT",
        "updated_at": "Wednesday May 05, 2021 at 19:47 GMT",
        "closed_at": "Wednesday May 05, 2021 at 19:47 GMT",
        "merged_at": "Wednesday May 05, 2021 at 19:47 GMT"
    },
    {
        "key": "WT-7478",
        "number": 6527,
        "state": "closed",
        "title": "WT-7478 Fix coverity printf arg type to match format.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 12:56 GMT",
        "updated_at": "Wednesday May 05, 2021 at 15:33 GMT",
        "closed_at": "Wednesday May 05, 2021 at 15:33 GMT",
        "merged_at": "Wednesday May 05, 2021 at 15:33 GMT"
    },
    {
        "key": "WT-7477",
        "number": 6526,
        "state": "closed",
        "title": "WT-7477 Fix coverity bug: possible NULL dereference.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 12:38 GMT",
        "updated_at": "Wednesday May 05, 2021 at 18:12 GMT",
        "closed_at": "Wednesday May 05, 2021 at 18:12 GMT",
        "merged_at": "Wednesday May 05, 2021 at 18:12 GMT"
    },
    {
        "key": "WT-7484",
        "number": 6525,
        "state": "closed",
        "title": "WT-7484 Fixed uninitialized value and removed unused values",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 09:30 GMT",
        "updated_at": "Thursday May 06, 2021 at 04:41 GMT",
        "closed_at": "Thursday May 06, 2021 at 04:41 GMT",
        "merged_at": "Thursday May 06, 2021 at 04:41 GMT"
    },
    {
        "key": "WT-7416",
        "number": 6524,
        "state": "closed",
        "title": "WT-7416 Backup cursor has a key, but incr backup cursor returns WT_NOTFOUND",
        "body": "This ticket involves fixing a bug that was originally happening in test/format. The bug happens as described:\r\n1. Perform full backup\r\n2. Perform drop on a table\r\n3. Import same table\r\n4. Perform incremental backup\r\n\r\nAfter #4 we find that, the incremental backup cursor either doesn't copy the file at all because there is no checkpoint_backup_info config or the checkpoint_backup_info only copies the header of the file. ",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 07:23 GMT",
        "updated_at": "Thursday May 13, 2021 at 23:37 GMT",
        "closed_at": "Thursday May 13, 2021 at 05:21 GMT",
        "merged_at": "Thursday May 13, 2021 at 05:21 GMT"
    },
    {
        "key": "WT-7415",
        "number": 6523,
        "state": "closed",
        "title": "WT-7415 Add new configuration files with backup option",
        "body": "This ticket involves adding new wtperf configurations as part of testing backup. The idea is to add backup to existing configurations and doing analysis on the original configuration and new configuration with backup. Will need to add the configs to jenkin after PR is merged",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 01:43 GMT",
        "updated_at": "Thursday May 06, 2021 at 07:04 GMT",
        "closed_at": "Thursday May 06, 2021 at 07:04 GMT",
        "merged_at": "Thursday May 06, 2021 at 07:04 GMT"
    },
    {
        "key": "WT-7481",
        "number": 6522,
        "state": "closed",
        "title": "WT-7481 Fix the wrong assert of disk image write gen comparison with btree base write gen",
        "body": "For the pages that are in-memory restored during recovery can fail\r\nwhen they get evicted later after the base write generation number is\r\nincremented",
        "base_ref": "develop",
        "created_at": "Wednesday May 05, 2021 at 00:52 GMT",
        "updated_at": "Friday May 07, 2021 at 03:49 GMT",
        "closed_at": "Friday May 07, 2021 at 03:49 GMT",
        "merged_at": "Friday May 07, 2021 at 03:49 GMT"
    },
    {
        "key": "WT-7468",
        "number": 6521,
        "state": "closed",
        "title": "WT-7468 Fix tiered file and object metadata configuration.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 04, 2021 at 18:51 GMT",
        "updated_at": "Wednesday May 05, 2021 at 18:13 GMT",
        "closed_at": "Wednesday May 05, 2021 at 18:13 GMT",
        "merged_at": "Wednesday May 05, 2021 at 18:13 GMT"
    },
    {
        "key": "WT-7241",
        "number": 6520,
        "state": "closed",
        "title": "WT-7241 Add asserts to ensure prepared transaction abort mechanism is working as expected",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 04, 2021 at 04:09 GMT",
        "updated_at": "Friday May 07, 2021 at 00:03 GMT",
        "closed_at": "Friday May 07, 2021 at 00:02 GMT",
        "merged_at": "Friday May 07, 2021 at 00:02 GMT"
    },
    {
        "key": "WT-7425",
        "number": 6519,
        "state": "closed",
        "title": "WT-7425 Fix for the -C command line option",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 04, 2021 at 02:43 GMT",
        "updated_at": "Tuesday May 04, 2021 at 23:21 GMT",
        "closed_at": "Tuesday May 04, 2021 at 23:21 GMT",
        "merged_at": "Tuesday May 04, 2021 at 23:21 GMT"
    },
    {
        "key": "WT-7316",
        "number": 6518,
        "state": "closed",
        "title": "WT-7316 Adding operation throttles, and modifying component functionality to separate core loop.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 03, 2021 at 07:26 GMT",
        "updated_at": "Tuesday May 04, 2021 at 21:15 GMT",
        "closed_at": "Tuesday May 04, 2021 at 21:15 GMT",
        "merged_at": "Tuesday May 04, 2021 at 21:15 GMT"
    },
    {
        "key": "WT-7186",
        "number": 6517,
        "state": "closed",
        "title": "WT-7186 Correct expected in-memory abort updates in prepare scenario",
        "body": "Prepared updates are restored on to the page when the page gets loaded\r\ninto memory, so it is possible that there can be in-memory abort updates.",
        "base_ref": "develop",
        "created_at": "Monday May 03, 2021 at 02:33 GMT",
        "updated_at": "Wednesday May 05, 2021 at 04:02 GMT",
        "closed_at": "Wednesday May 05, 2021 at 04:02 GMT",
        "merged_at": "Wednesday May 05, 2021 at 04:02 GMT"
    },
    {
        "key": "WT-6538",
        "number": 6516,
        "state": "closed",
        "title": "WT-6538 Fix onpage prepare visibility check if the start and stop are from the same prepared transaction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 03, 2021 at 01:19 GMT",
        "updated_at": "Monday May 03, 2021 at 05:01 GMT",
        "closed_at": "Monday May 03, 2021 at 05:01 GMT",
        "merged_at": "Monday May 03, 2021 at 05:01 GMT"
    },
    {
        "key": "WT-7442",
        "number": 6515,
        "state": "closed",
        "title": "WT-7442 RTS to open dhandle only when the dhandle has unstable updates (#6506) (v4.4 backport)",
        "body": "The main changes are for rollback to stable to open dhandles only when the dhandle has unstable updates.\r\n\r\n(cherry picked from commit e3efbee8a31d9802b20f96f67a2f0f6191aeedb0)",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday May 03, 2021 at 00:32 GMT",
        "updated_at": "Monday May 03, 2021 at 04:22 GMT",
        "closed_at": "Monday May 03, 2021 at 04:22 GMT",
        "merged_at": "Monday May 03, 2021 at 04:22 GMT"
    },
    {
        "key": "WT-7460",
        "number": 6514,
        "state": "closed",
        "title": "WT-7460 RTS to abort all the updates from a prepared transaction (#6496) (v4.4 backport)",
        "body": "It is only possible for the prepared transactions to have an on-disk\r\ndata with both start and stop time windows are the same and the\r\nprepared timestamp is less than the stable timestamp. RTS must\r\nabort all the updates from the prepared transaction either by\r\nreplacing it with stable data or remove the key.\r\n\r\n(cherry picked from commit cf79d062ecdaa7509ca80c4a643268ee5303e915)",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday May 03, 2021 at 00:06 GMT",
        "updated_at": "Monday May 03, 2021 at 01:53 GMT",
        "closed_at": "Monday May 03, 2021 at 01:53 GMT",
        "merged_at": "Monday May 03, 2021 at 01:53 GMT"
    },
    {
        "key": "WT-7476",
        "number": 6513,
        "state": "closed",
        "title": "WT-7476 Refactoring configuration to allow for optional configurations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 02, 2021 at 23:46 GMT",
        "updated_at": "Monday May 03, 2021 at 03:07 GMT",
        "closed_at": "Monday May 03, 2021 at 03:07 GMT",
        "merged_at": "Monday May 03, 2021 at 03:07 GMT"
    },
    {
        "key": "WT-7475",
        "number": 6512,
        "state": "closed",
        "title": "WT-7475 update format to use the new history-store cursor type",
        "body": "Update format to use the new history-store cursor type.",
        "base_ref": "develop",
        "created_at": "Saturday May 01, 2021 at 23:08 GMT",
        "updated_at": "Saturday May 08, 2021 at 15:23 GMT",
        "closed_at": "Saturday May 08, 2021 at 15:23 GMT",
        "merged_at": "Saturday May 08, 2021 at 15:23 GMT"
    },
    {
        "key": "WT-7474",
        "number": 6511,
        "state": "closed",
        "title": "WT-7474 Reset cursor-order checks whenever a search is performed",
        "body": "Turn off cursor-order checks in all cases on search. The search/search-near functions turn them back on after a successful search.",
        "base_ref": "develop",
        "created_at": "Saturday May 01, 2021 at 00:56 GMT",
        "updated_at": "Monday May 03, 2021 at 15:23 GMT",
        "closed_at": "Monday May 03, 2021 at 15:23 GMT",
        "merged_at": "Monday May 03, 2021 at 15:23 GMT"
    },
    {
        "key": "WT-7458",
        "number": 6510,
        "state": "closed",
        "title": "WT-7458 Coverity redundant condition check in evict page",
        "body": "The modified variable will always be true if this part of the code is reached.",
        "base_ref": "develop",
        "created_at": "Friday Apr 30, 2021 at 05:31 GMT",
        "updated_at": "Monday May 03, 2021 at 03:06 GMT",
        "closed_at": "Monday May 03, 2021 at 03:06 GMT",
        "merged_at": "Monday May 03, 2021 at 03:06 GMT"
    },
    {
        "key": "WT-6403",
        "number": 6509,
        "state": "closed",
        "title": "WT-6403 restore format non-timestamp transactional testing ",
        "body": "Restore non-timestamp transaction testing in format. Format now runs in one of two modes, either timestamp (TS) transactions or non-timestamp (non-TS) transactions, governed by the transaction.timestamp configuration string, turning that configuration string off configures non-TS runs.\r\n\r\nTS transactions only use snapshot isolation, non-TS transactions do all updates in snapshot isolation, but do reads in both snapshot and lower-level isolations.\r\n\r\nWT_CURSOR.remove inside an implicit transaction could fail with \"key not set\" if the underlying btree routine returned rollback.  The current behavior is we must fail if the cursor position is initially set and we lose that position somehow, change the API's implicit transaction macros to return WT_ROLLBACK in the case where retry isn't an option.\r\n    Remove the TXN_API_END_RETRY macro, it has only one caller, rename TXN_API_END.\r\n    Remove a test in TXN_API_END() of ret == 0, it cannot be 0 at that point.\r\n\r\nUpdate method documentation to note that all object updates and calls to WT_SESSION.query_timestamp must be done at snapshot isolation.\r\n\r\nRemove documentation note that all uncommitted transactions must fit into memory, that is no longer true (for example, prepared transactions).\r\n\r\nUpdate format to not configure the isolation level where the default level (snapshot) is correct.\r\n\r\nRemove disabled lower-level isolation test from evergreen.yml, TS runs are never going to support isolation levels other than snapshot.\r\n\r\nRemove format's transaction.isolation configuration string, TS runs will never support isolation levels other than snapshot, and non-TS runs will only do reads at lower-levels than snapshot.\r\n\r\nRename format's \"transaction.frequency\" configuration string to \"transation.implicit\", as TS runs do not support implicit transactions. The new configuration string sets the percentage of non-TS operations that are done inside implicit transactions, rather than explicit transactions.\r\n\r\nRemove the assert.commit_timestamp string, it's no longer supported by the library.\r\n\r\nAdd an assert.read_timestamp configuration string to support \"assert=(read_timestamp=VALUE)\", with the value of always in the case of TS runs, and never in the case of non-TS runs.\r\n\r\nAdd an assert.write_timestamp configuration string to support the library configuration \"assert=(write_timestamp=on), write_timestamp_usage=VALUE\", with the value of always in the case of TS runs, and never in the case of non-TS runs.\r\n\r\nRemove the transaction.rollback_to_stable configuration string and change it to always be called in both TS and non-TS runs. Change rollback-to-stable to not do additional checks against saved operations unless in a TS run.",
        "base_ref": "develop",
        "created_at": "Friday Apr 30, 2021 at 02:11 GMT",
        "updated_at": "Sunday May 16, 2021 at 23:47 GMT",
        "closed_at": "Sunday May 16, 2021 at 23:47 GMT",
        "merged_at": "Sunday May 16, 2021 at 23:47 GMT"
    },
    {
        "key": "WT-7346",
        "number": 6508,
        "state": "closed",
        "title": "WT-7346 Change block manager to connect the tiered storage API to the storage source",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 29, 2021 at 13:45 GMT",
        "updated_at": "Wednesday May 05, 2021 at 21:22 GMT",
        "closed_at": "Wednesday May 05, 2021 at 21:22 GMT",
        "merged_at": "Wednesday May 05, 2021 at 21:22 GMT"
    },
    {
        "key": "WT-7381",
        "number": 6507,
        "state": "closed",
        "title": "WT-7381 Cache btree's ckptlist between checkpoints.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 29, 2021 at 13:25 GMT",
        "updated_at": "Thursday May 13, 2021 at 23:40 GMT",
        "closed_at": "Wednesday May 12, 2021 at 08:27 GMT",
        "merged_at": "Wednesday May 12, 2021 at 08:27 GMT"
    },
    {
        "key": "WT-7442",
        "number": 6506,
        "state": "closed",
        "title": "WT-7442 RTS to open dhandle only when the dhandle has unstable updates",
        "body": "The main changes are to open dhandles only on tables with checkpoint unstable updates or if the table's dhandle is present in the cache and is modified.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 29, 2021 at 05:50 GMT",
        "updated_at": "Friday Apr 30, 2021 at 04:42 GMT",
        "closed_at": "Friday Apr 30, 2021 at 04:42 GMT",
        "merged_at": "Friday Apr 30, 2021 at 04:42 GMT"
    },
    {
        "key": "WT-7423",
        "number": 6505,
        "state": "closed",
        "title": "WT-7423 Clear checkpoint LSN and backup metadata on import",
        "body": "This involves clearing the checkpoint LSN and the backup information when importing a table. These values are only relevant from old database.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 29, 2021 at 05:33 GMT",
        "updated_at": "Monday May 03, 2021 at 06:09 GMT",
        "closed_at": "Monday May 03, 2021 at 06:09 GMT",
        "merged_at": "Monday May 03, 2021 at 06:09 GMT"
    },
    {
        "key": "WT-7281",
        "number": 6504,
        "state": "closed",
        "title": "WT-7281 Add metric to record total sessions scanned",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 29, 2021 at 05:15 GMT",
        "updated_at": "Monday May 03, 2021 at 01:51 GMT",
        "closed_at": "Monday May 03, 2021 at 01:51 GMT",
        "merged_at": "Monday May 03, 2021 at 01:51 GMT"
    },
    {
        "key": "WT-6204",
        "number": 6503,
        "state": "closed",
        "title": "WT-6204 Possible race between backup and checkpoint at file close",
        "body": "This ticket involves researching if there could be a potential race condition between backup and checkpoint at file close. This race condition can only happen if:\r\n\r\n- It is not the last checkpoint for the system\r\n- We don't have the schema lock\r\n- We don't have the checkpoint lock\r\n\r\nThus, upon researching, the assert was never hit. It would be useful to still include this assert to prevent future possible race conditions.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 29, 2021 at 01:44 GMT",
        "updated_at": "Monday May 03, 2021 at 04:27 GMT",
        "closed_at": "Monday May 03, 2021 at 04:25 GMT",
        "merged_at": "Monday May 03, 2021 at 04:25 GMT"
    },
    {
        "key": "WT-6204",
        "number": 6502,
        "state": "closed",
        "title": "Revert \"WT-6204 Possible race between backup and checkpoint at file close\"",
        "body": "Reverts wiredtiger/wiredtiger#6495",
        "base_ref": "develop",
        "created_at": "Thursday Apr 29, 2021 at 01:39 GMT",
        "updated_at": "Thursday Apr 29, 2021 at 01:41 GMT",
        "closed_at": "Thursday Apr 29, 2021 at 01:41 GMT",
        "merged_at": "Thursday Apr 29, 2021 at 01:41 GMT"
    },
    {
        "key": "WT-7428",
        "number": 6501,
        "state": "closed",
        "title": "WT-7428 Move bstorage usage out of btree and into tiered structure.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 28, 2021 at 18:57 GMT",
        "updated_at": "Tuesday May 04, 2021 at 01:58 GMT",
        "closed_at": "Tuesday May 04, 2021 at 01:58 GMT",
        "merged_at": "Tuesday May 04, 2021 at 01:58 GMT"
    },
    {
        "key": "WT-7459",
        "number": 6500,
        "state": "closed",
        "title": "WT-7459 Coverity redundant \"if\" fix in local storage",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 28, 2021 at 14:35 GMT",
        "updated_at": "Wednesday Apr 28, 2021 at 14:56 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 14:39 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 14:39 GMT"
    },
    {
        "key": "WT-7457",
        "number": 6499,
        "state": "closed",
        "title": "WT-7457 Coverity: fix error in local store rename",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 28, 2021 at 13:48 GMT",
        "updated_at": "Wednesday Apr 28, 2021 at 14:56 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 14:37 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 14:37 GMT"
    },
    {
        "key": "WT-7463",
        "number": 6498,
        "state": "closed",
        "title": "WT-7463 Use wt_off_t to avoid incompatible pointer types",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 28, 2021 at 11:37 GMT",
        "updated_at": "Wednesday Apr 28, 2021 at 14:01 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 14:01 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 14:01 GMT"
    },
    {
        "key": "WT-7345",
        "number": 6497,
        "state": "closed",
        "title": "WT-7345 Fix incorrect and missing copyright notices",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 28, 2021 at 03:54 GMT",
        "updated_at": "Monday May 03, 2021 at 00:49 GMT",
        "closed_at": "Monday May 03, 2021 at 00:49 GMT",
        "merged_at": "Monday May 03, 2021 at 00:49 GMT"
    },
    {
        "key": "WT-7460",
        "number": 6496,
        "state": "closed",
        "title": "WT-7460 RTS to abort all the updates from prepared transaction",
        "body": "It is only possible for the preapred transactions to have an on-disk\r\ndata with both start and stop time windows are same and their prepared\r\ntimestamp is less than the stable timestamp. RTS must abort all the\r\nupdates from the prepared transaction either by replace it with stable\r\ndata or remove the key.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 28, 2021 at 02:48 GMT",
        "updated_at": "Thursday Apr 29, 2021 at 05:23 GMT",
        "closed_at": "Thursday Apr 29, 2021 at 05:23 GMT",
        "merged_at": "Thursday Apr 29, 2021 at 05:23 GMT"
    },
    {
        "key": "WT-6204",
        "number": 6495,
        "state": "closed",
        "title": "WT-6204 Possible race between backup and checkpoint at file close",
        "body": "This ticket involves researching if there could be a potential race condition between backup and checkpoint at file close. This race condition can only happen if:\r\n\r\n- It is not the last checkpoint for the system\r\n- We don't have the schema lock\r\n- We don't have the checkpoint lock \r\n\r\nThus, upon researching, the assert was never hit. It would be useful to still include this assert to prevent future possible race conditions.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 28, 2021 at 00:01 GMT",
        "updated_at": "Monday May 03, 2021 at 04:25 GMT",
        "closed_at": "Thursday Apr 29, 2021 at 01:34 GMT",
        "merged_at": "Thursday Apr 29, 2021 at 01:34 GMT"
    },
    {
        "key": "WT-7453",
        "number": 6494,
        "state": "closed",
        "title": "WT-7453 Coverity: NO_EFFECT 119968 Statement \"continue\" does not have\u2026",
        "body": "\u2026 any effect.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 27, 2021 at 17:32 GMT",
        "updated_at": "Tuesday Apr 27, 2021 at 18:22 GMT",
        "closed_at": "Tuesday Apr 27, 2021 at 18:22 GMT",
        "merged_at": "Tuesday Apr 27, 2021 at 18:22 GMT"
    },
    {
        "key": "WT-7456",
        "number": 6493,
        "state": "closed",
        "title": "WT-7456 Declaring variable \"tiered\" without initializer.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 27, 2021 at 15:50 GMT",
        "updated_at": "Tuesday Apr 27, 2021 at 18:42 GMT",
        "closed_at": "Tuesday Apr 27, 2021 at 18:42 GMT",
        "merged_at": "Tuesday Apr 27, 2021 at 18:42 GMT"
    },
    {
        "key": "WT-7455",
        "number": 6492,
        "state": "closed",
        "title": "WT-7455 The condition \"need_local\" must be true.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 27, 2021 at 15:45 GMT",
        "updated_at": "Tuesday Apr 27, 2021 at 17:15 GMT",
        "closed_at": "Tuesday Apr 27, 2021 at 17:15 GMT",
        "merged_at": "Tuesday Apr 27, 2021 at 17:15 GMT"
    },
    {
        "key": "WT-7454",
        "number": 6491,
        "state": "closed",
        "title": "WT-7454 Coverity: 119967 Statement \"continue\" does not have any effect.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 27, 2021 at 15:31 GMT",
        "updated_at": "Tuesday Apr 27, 2021 at 18:22 GMT",
        "closed_at": "Tuesday Apr 27, 2021 at 18:22 GMT",
        "merged_at": "Tuesday Apr 27, 2021 at 18:22 GMT"
    },
    {
        "key": "WT-7420",
        "number": 6490,
        "state": "closed",
        "title": "WT-7420 Tiered local storage changed to flush files to bucket directory.",
        "body": "A new \"cache_directory\" config parameter is now available when\r\ncustomizing a file system. New files are placed there, and copied\r\nto the bucket directory only when flushed.  Currently no files\r\nare \"aged out\" of cache nor are \"paged in\" to cache.",
        "base_ref": "develop",
        "created_at": "Monday Apr 26, 2021 at 20:37 GMT",
        "updated_at": "Tuesday Apr 27, 2021 at 23:26 GMT",
        "closed_at": "Tuesday Apr 27, 2021 at 23:26 GMT",
        "merged_at": "Tuesday Apr 27, 2021 at 23:26 GMT"
    },
    {
        "key": "WT-7092",
        "number": 6489,
        "state": "closed",
        "title": "WT-7092 Reduce hash calls during cursor open/close",
        "body": "This change is to set the computed hash value in `cursor->uri_hash`while opening a cursor and with this approach, we will reduce one hash computation during cursor close.",
        "base_ref": "develop",
        "created_at": "Monday Apr 26, 2021 at 12:17 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:24 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 03:38 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 03:38 GMT"
    },
    {
        "key": "WT-7447",
        "number": 6488,
        "state": "closed",
        "title": "WT-7447 Fix the assert fire because onpage out of order update is not popped from the stack",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 26, 2021 at 11:30 GMT",
        "updated_at": "Tuesday May 04, 2021 at 04:24 GMT",
        "closed_at": "Tuesday May 04, 2021 at 04:24 GMT",
        "merged_at": "Tuesday May 04, 2021 at 04:24 GMT"
    },
    {
        "key": "WT-7413",
        "number": 6487,
        "state": "closed",
        "title": "WT-7413 Support running backup in wtperf",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 26, 2021 at 06:56 GMT",
        "updated_at": "Wednesday Apr 28, 2021 at 22:37 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 22:37 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 22:37 GMT"
    },
    {
        "key": "WT-7191",
        "number": 6486,
        "state": "closed",
        "title": "WT-7191 Use of hash_city64 over hash_fnv64",
        "body": "Replacement of FNV hash function to City hash function as the latter hashes 8 bytes at a time, while the former hashes 1 byte at a time.",
        "base_ref": "develop",
        "created_at": "Monday Apr 26, 2021 at 06:05 GMT",
        "updated_at": "Monday May 03, 2021 at 03:53 GMT",
        "closed_at": "Monday May 03, 2021 at 03:53 GMT",
        "merged_at": "Monday May 03, 2021 at 03:53 GMT"
    },
    {
        "key": "WT-7426",
        "number": 6485,
        "state": "closed",
        "title": "WT-7426 Set write generation number when the page image gets created (#6474) (v4.4 backport)",
        "body": "Set write generation number whenever the page image is created instead of\r\nwaiting for it to be written to disk. In scenarios, when the page image is instantiated\r\nit can lead to misuse of the stale transaction ids present on the page.\r\n\r\n(cherry picked from commit b3e3b2580ce14e7609e7ba269d3c7432f81339b7)",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday Apr 26, 2021 at 05:38 GMT",
        "updated_at": "Wednesday Apr 28, 2021 at 06:14 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 06:14 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 06:14 GMT"
    },
    {
        "key": "WT-7400",
        "number": 6484,
        "state": "closed",
        "title": "WT-7400 Set WT_CURSTD_HS_READ_ALL flag for the search before fixing the out of order timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 26, 2021 at 00:24 GMT",
        "updated_at": "Wednesday Apr 28, 2021 at 03:49 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 03:49 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 03:49 GMT"
    },
    {
        "key": "WT-7234",
        "number": 6483,
        "state": "closed",
        "title": "WT-7234 prefix-compressed keys and memory amplification",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 23, 2021 at 16:02 GMT",
        "updated_at": "Wednesday May 12, 2021 at 05:49 GMT",
        "closed_at": "Wednesday May 12, 2021 at 05:49 GMT",
        "merged_at": "Wednesday May 12, 2021 at 05:49 GMT"
    },
    {
        "key": "WT-7356",
        "number": 6482,
        "state": "closed",
        "title": "WT-7356 Implement bulk load for tiered tables",
        "body": "Add support for bulk load for tiered cursors.  \r\n\r\nPasses the `test_bulk*.py` tests with the tiered cursor hooks.  (Or it did before WT-7173.  WT-7440 will fix that.)\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 23, 2021 at 13:25 GMT",
        "updated_at": "Monday Apr 26, 2021 at 13:38 GMT",
        "closed_at": "Monday Apr 26, 2021 at 13:38 GMT",
        "merged_at": "Monday Apr 26, 2021 at 13:38 GMT"
    },
    {
        "key": "WT-7429",
        "number": 6481,
        "state": "closed",
        "title": "WT-7429 Set readonly=true in tiered metadata when switching.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 22, 2021 at 21:06 GMT",
        "updated_at": "Wednesday Apr 28, 2021 at 18:53 GMT",
        "closed_at": "Wednesday Apr 28, 2021 at 18:53 GMT",
        "merged_at": "Wednesday Apr 28, 2021 at 18:53 GMT"
    },
    {
        "key": "WT-7381",
        "number": 6480,
        "state": "closed",
        "title": "WT-7381 Initial draft/proposal for saving ckptlist between checkpoints.",
        "body": "",
        "base_ref": "wt-7285-maintain-most-recent-ckptlist",
        "created_at": "Thursday Apr 22, 2021 at 12:54 GMT",
        "updated_at": "Friday Apr 30, 2021 at 04:35 GMT",
        "closed_at": "Friday Apr 23, 2021 at 00:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7282",
        "number": 6479,
        "state": "closed",
        "title": "WT-7282 Make backup debugging messages into verbose messages",
        "body": "This ticket involves adding more verbose messages in backup. Having more messages to better debug future potential errors created by backup cursors.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 22, 2021 at 06:37 GMT",
        "updated_at": "Monday Apr 26, 2021 at 03:30 GMT",
        "closed_at": "Monday Apr 26, 2021 at 03:30 GMT",
        "merged_at": "Monday Apr 26, 2021 at 03:30 GMT"
    },
    {
        "key": "WT-6362",
        "number": 6478,
        "state": "closed",
        "title": "WT-6362 Ensure that history store inserts from reconciliation do not use application thread snapshot for visibility checks",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 22, 2021 at 03:47 GMT",
        "updated_at": "Monday May 03, 2021 at 03:00 GMT",
        "closed_at": "Monday May 03, 2021 at 03:00 GMT",
        "merged_at": "Monday May 03, 2021 at 03:00 GMT"
    },
    {
        "key": "WT-7373",
        "number": 6477,
        "state": "closed",
        "title": "WT-7373 Improve slow random cursor operations on oplog (#6466) (#6476) (v4.2 backport)",
        "body": "If the tree is entirely populated with large items (MongoDB configures the maximum leaf page item to avoid overflow objects), we can still end up reading huge amounts of data on every random cursor sample. If the page is clean (that is, just read from disk), it can't be fully populated with deleted items, use it as our sample.\r\n\r\n(cherry picked from commit a809a25052cf614f2d8fbcb4ff93a136b6d9a84f)\r\n\r\nCo-authored-by: Keith Bostic <keith.bostic@mongodb.com>\r\n(cherry picked from commit 885403077cfdbabc8107b9522af57513952e6f85)",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Apr 22, 2021 at 00:59 GMT",
        "updated_at": "Tuesday Apr 27, 2021 at 23:06 GMT",
        "closed_at": "Tuesday Apr 27, 2021 at 23:06 GMT",
        "merged_at": "Tuesday Apr 27, 2021 at 23:06 GMT"
    },
    {
        "key": "WT-7373",
        "number": 6476,
        "state": "closed",
        "title": "WT-7373 Improve slow random cursor operations on oplog (#6466) (v4.4 backport)",
        "body": "If the tree is entirely populated with large items (MongoDB configures the maximum leaf page item to avoid overflow objects), we can still end up reading huge amounts of data on every random cursor sample. If the page is clean (that is, just read from disk), it can't be fully populated with deleted items, use it as our sample.\r\n\r\n(cherry picked from commit a809a25052cf614f2d8fbcb4ff93a136b6d9a84f)",
        "base_ref": "mongodb-4.4",
        "created_at": "Thursday Apr 22, 2021 at 00:31 GMT",
        "updated_at": "Thursday Apr 22, 2021 at 00:51 GMT",
        "closed_at": "Thursday Apr 22, 2021 at 00:51 GMT",
        "merged_at": "Thursday Apr 22, 2021 at 00:51 GMT"
    },
    {
        "key": "WT-7229",
        "number": 6475,
        "state": "closed",
        "title": "WT-7229 Align out of order and mixed mode handling",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 23:31 GMT",
        "updated_at": "Thursday Apr 22, 2021 at 01:14 GMT",
        "closed_at": "Thursday Apr 22, 2021 at 01:14 GMT",
        "merged_at": "Thursday Apr 22, 2021 at 01:14 GMT"
    },
    {
        "key": "WT-7426",
        "number": 6474,
        "state": "closed",
        "title": "WT-7426 Set write generation number when the page image gets created",
        "body": "Using of minimum btree write generation number will avoid resetting\r\nthe transaction ids that are written to disk during the normal execution\r\nand let them reset for the page images that are in-memory restored\r\nduring recovery process.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 08:02 GMT",
        "updated_at": "Friday Apr 23, 2021 at 06:53 GMT",
        "closed_at": "Friday Apr 23, 2021 at 06:53 GMT",
        "merged_at": "Friday Apr 23, 2021 at 06:53 GMT"
    },
    {
        "key": "WT-7264",
        "number": 6473,
        "state": "closed",
        "title": "WT-7264 Creating a new configuration for search near that allows it to exit quickly when searching for prefixes.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 05:07 GMT",
        "updated_at": "Monday May 03, 2021 at 07:33 GMT",
        "closed_at": "Monday May 03, 2021 at 07:33 GMT",
        "merged_at": "Monday May 03, 2021 at 07:33 GMT"
    },
    {
        "key": "WT-6387",
        "number": 6472,
        "state": "closed",
        "title": "WT-6387 WT_CURSTD_UPDATE_LOCAL flag is no longer used",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 03:55 GMT",
        "updated_at": "Thursday Apr 22, 2021 at 23:41 GMT",
        "closed_at": "Thursday Apr 22, 2021 at 23:41 GMT",
        "merged_at": "Thursday Apr 22, 2021 at 23:41 GMT"
    },
    {
        "key": "WT-7106",
        "number": 6471,
        "state": "closed",
        "title": "WT-7106 Increase how often delta encoding is used for history store records",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 03:27 GMT",
        "updated_at": "Wednesday May 12, 2021 at 05:09 GMT",
        "closed_at": "Wednesday May 12, 2021 at 05:08 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6387",
        "number": 6470,
        "state": "closed",
        "title": "WT-6387 WT_CURSTD_UPDATE_LOCAL flag is no longer used",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 02:07 GMT",
        "updated_at": "Wednesday Apr 21, 2021 at 03:46 GMT",
        "closed_at": "Wednesday Apr 21, 2021 at 03:40 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7297",
        "number": 6469,
        "state": "closed",
        "title": "WT-7297 Fix search_near assertion",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 01:39 GMT",
        "updated_at": "Tuesday May 04, 2021 at 08:24 GMT",
        "closed_at": "Tuesday May 04, 2021 at 08:24 GMT",
        "merged_at": "Tuesday May 04, 2021 at 08:24 GMT"
    },
    {
        "key": "WT-7230",
        "number": 6468,
        "state": "closed",
        "title": "WT-7230 CMake build system support for x86 POSIX targets",
        "body": "This PR includes the CMake changes first added in #6418 + fixes issues when originally merging. The top commit fixes a problem with having changed the autoconf variable names. This leading to external (Mongo) SCons builds breaking (as it assumed a specific header template). The top commit reverts this change and makes the CMake build adhere to the current template scheme. The rest of the commits are from the original PR (original description below).\r\n\r\n---\r\nThis PR adds the initial support for building the WiredTiger library with CMake for x86-based POSIX targets (ARM64, PPC, ZSeries support + Windows support coming in a future PR). The build system is designed to co-exist with autoconf. Autoconf builds still work as expected (and it will be highly encouraged to keep using it until more CMake support is added).",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 21, 2021 at 00:37 GMT",
        "updated_at": "Thursday Apr 22, 2021 at 05:21 GMT",
        "closed_at": "Thursday Apr 22, 2021 at 05:21 GMT",
        "merged_at": "Thursday Apr 22, 2021 at 05:21 GMT"
    },
    {
        "key": "WT-7419",
        "number": 6467,
        "state": "closed",
        "title": "WT-7419 Tiered local storage changes to use WT file system.",
        "body": "For the local file system open, use the WT file system to get a file handle, rather than using POSIX file descriptors directly.\r\nThis makes for a cleaner implementation.  Get rid of marker files and temp files. We don't need temp files because our model is to behave exactly like a \"regular\" file system until flush occurs. We also don't need a flush marker, when a flush occurs, we chmod the file to readonly.  That matches the semantics - flushed files are by definition immutable.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 20, 2021 at 18:16 GMT",
        "updated_at": "Thursday Apr 22, 2021 at 00:06 GMT",
        "closed_at": "Thursday Apr 22, 2021 at 00:06 GMT",
        "merged_at": "Thursday Apr 22, 2021 at 00:06 GMT"
    },
    {
        "key": "WT-7373",
        "number": 6466,
        "state": "closed",
        "title": "WT-7373 Investigate slow random cursor operations on oplog",
        "body": "If the tree is entirely populated with large items (MongoDB configures the maximum leaf page item to avoid overflow objects), we can still end up reading huge amounts of data on every random cursor sample. If the page is clean (that is, just read from disk), it can't be fully populated with deleted items, use it as our sample.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 20, 2021 at 17:20 GMT",
        "updated_at": "Tuesday Apr 20, 2021 at 19:14 GMT",
        "closed_at": "Tuesday Apr 20, 2021 at 19:14 GMT",
        "merged_at": "Tuesday Apr 20, 2021 at 19:14 GMT"
    },
    {
        "key": "WT-7414",
        "number": 6465,
        "state": "closed",
        "title": "WT-7414 Create a python test to ensure that all tables that are dropped during backup are exists in the backup",
        "body": "This ticket involves creating a python test to testing create/drop operations while a backup is ongoing. The behaviour is that no changes should occur while analysing the backup cursor files. ",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 20, 2021 at 08:29 GMT",
        "updated_at": "Thursday Apr 22, 2021 at 04:53 GMT",
        "closed_at": "Thursday Apr 22, 2021 at 04:53 GMT",
        "merged_at": "Thursday Apr 22, 2021 at 04:53 GMT"
    },
    {
        "key": "WT-7133",
        "number": 6464,
        "state": "closed",
        "title": "WT-7133 Fix bug in stat collection when target pages are reduced due to high HS cache pressure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 20, 2021 at 04:58 GMT",
        "updated_at": "Tuesday Apr 20, 2021 at 23:52 GMT",
        "closed_at": "Tuesday Apr 20, 2021 at 23:52 GMT",
        "merged_at": "Tuesday Apr 20, 2021 at 23:52 GMT"
    },
    {
        "key": "WT-7365",
        "number": 6463,
        "state": "closed",
        "title": "WT-7365 Configuration file syntax changes",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 20, 2021 at 02:32 GMT",
        "updated_at": "Tuesday Apr 20, 2021 at 12:04 GMT",
        "closed_at": "Tuesday Apr 20, 2021 at 12:04 GMT",
        "merged_at": "Tuesday Apr 20, 2021 at 12:04 GMT"
    },
    {
        "key": "WT-7377",
        "number": 6462,
        "state": "closed",
        "title": "WT-7377 Fix illegal aliases format in unit-test-with-compile",
        "body": "This ticket just involves correcting the ALIASES format in doxygen.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 20, 2021 at 01:46 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:24 GMT",
        "closed_at": "Wednesday Apr 21, 2021 at 03:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7229",
        "number": 6461,
        "state": "closed",
        "title": "Revert \"WT-7229 Align out of order and mixed mode handling\"",
        "body": "This reverts commit 44b3f8b8c259381273da948591059c406bd2b2f4.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 20, 2021 at 01:14 GMT",
        "updated_at": "Tuesday Apr 20, 2021 at 01:57 GMT",
        "closed_at": "Tuesday Apr 20, 2021 at 01:57 GMT",
        "merged_at": "Tuesday Apr 20, 2021 at 01:57 GMT"
    },
    {
        "key": "WT-7394",
        "number": 6460,
        "state": "closed",
        "title": "WT-7394 Fix uninitialized scalar variable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 19, 2021 at 08:32 GMT",
        "updated_at": "Tuesday Apr 20, 2021 at 00:54 GMT",
        "closed_at": "Tuesday Apr 20, 2021 at 00:54 GMT",
        "merged_at": "Tuesday Apr 20, 2021 at 00:54 GMT"
    },
    {
        "key": "WT-7230",
        "number": 6459,
        "state": "closed",
        "title": "Revert \"WT-7230 CMake build system support for x86 POSIX targets\"",
        "body": "Reverts wiredtiger/wiredtiger#6418",
        "base_ref": "develop",
        "created_at": "Monday Apr 19, 2021 at 05:09 GMT",
        "updated_at": "Monday Apr 19, 2021 at 05:11 GMT",
        "closed_at": "Monday Apr 19, 2021 at 05:11 GMT",
        "merged_at": "Monday Apr 19, 2021 at 05:11 GMT"
    },
    {
        "key": "WT-7410",
        "number": 6458,
        "state": "closed",
        "title": "WT-7410 Split session flags into flags and lock_flags",
        "body": "Splitting the existing session flags into two flags can\r\naccommodate more future flags",
        "base_ref": "develop",
        "created_at": "Thursday Apr 15, 2021 at 12:32 GMT",
        "updated_at": "Tuesday Apr 20, 2021 at 07:05 GMT",
        "closed_at": "Tuesday Apr 20, 2021 at 07:05 GMT",
        "merged_at": "Tuesday Apr 20, 2021 at 07:05 GMT"
    },
    {
        "key": "WT-7185",
        "number": 6457,
        "state": "closed",
        "title": "WT-7185 Avoid aborting a transaction if it is force evicting and oldest",
        "body": "This PR is to revert changes of WT-6444 to address transaction rollback issues customers reported when upgrading from MongoDB 4.2 to 4.4 with lots of documents included a transaction. The perf implication is minor according to the testing result.\r\n\r\nThe Python test change from WT-6444 was retained.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 15, 2021 at 06:22 GMT",
        "updated_at": "Monday Apr 19, 2021 at 06:40 GMT",
        "closed_at": "Monday Apr 19, 2021 at 06:40 GMT",
        "merged_at": "Monday Apr 19, 2021 at 06:40 GMT"
    },
    {
        "key": "WT-7409",
        "number": 6456,
        "state": "closed",
        "title": "WT-7409 Remove dead code",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 15, 2021 at 05:36 GMT",
        "updated_at": "Monday Apr 19, 2021 at 02:10 GMT",
        "closed_at": "Monday Apr 19, 2021 at 02:10 GMT",
        "merged_at": "Monday Apr 19, 2021 at 02:10 GMT"
    },
    {
        "key": "WT-7223",
        "number": 6455,
        "state": "closed",
        "title": "WT-7223 WT_CALL_FUNCTION should not print out a message (v4.4 backport)",
        "body": "eb71b5604e50d526ed0dee82dccf5030fddc0784",
        "base_ref": "mongodb-4.4",
        "created_at": "Thursday Apr 15, 2021 at 00:13 GMT",
        "updated_at": "Thursday May 06, 2021 at 06:44 GMT",
        "closed_at": "Monday Apr 19, 2021 at 04:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7408",
        "number": 6454,
        "state": "closed",
        "title": "WT-7408 API to return row and byte counts for objects and cursor ranges",
        "body": "Add leaf page row- and byte-counts to each address cookie stored in the internal pages during reconciliation, and then aggregate those counts into each new internal page to the root. At checkpoint, the counts are stored with the metadata information for the object. Add a new API, `WT_SESSION.range_stat` to return row- and byte-counts for either objects or cursor-specified key ranges.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 14, 2021 at 17:21 GMT",
        "updated_at": "Wednesday Aug 04, 2021 at 18:17 GMT",
        "closed_at": "Saturday Apr 17, 2021 at 17:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7355",
        "number": 6453,
        "state": "closed",
        "title": "WT-7355 Create python hooks to valudate tiered cursor implementation",
        "body": "Python hook file (see WT-7329) to repurpose existing cursor tests to use cursors on tiered tables.  Currently this will not be included in automated PR or Evergreen tests.  I'm just merging it so we have the tools for future Tiered Storage work.\r\n\r\nFeedback on my Python usage welcome.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 14, 2021 at 14:53 GMT",
        "updated_at": "Wednesday Apr 14, 2021 at 18:03 GMT",
        "closed_at": "Wednesday Apr 14, 2021 at 18:03 GMT",
        "merged_at": "Wednesday Apr 14, 2021 at 18:03 GMT"
    },
    {
        "key": "WT-7332",
        "number": 6452,
        "state": "closed",
        "title": "WT-7332 Add ability to cycle through create and drop tables in workgen (v4.4 backport)",
        "body": "716858f654e00175114f754b5c299bcce91bf276",
        "base_ref": "mongodb-4.4",
        "created_at": "Wednesday Apr 14, 2021 at 07:02 GMT",
        "updated_at": "Thursday May 06, 2021 at 06:44 GMT",
        "closed_at": "Monday Apr 19, 2021 at 04:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7332",
        "number": 6451,
        "state": "closed",
        "title": "WT-7332 Add ability to cycle through create and drop tables in workgen (v4.4 backport)",
        "body": "716858f654e00175114f754b5c299bcce91bf276",
        "base_ref": "mongodb-4.4",
        "created_at": "Wednesday Apr 14, 2021 at 07:00 GMT",
        "updated_at": "Wednesday Apr 14, 2021 at 07:02 GMT",
        "closed_at": "Wednesday Apr 14, 2021 at 07:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7332",
        "number": 6450,
        "state": "closed",
        "title": "WT-7332 Add ability to cycle through create and drop tables in workgen (v4.4 backport)",
        "body": "716858f654e00175114f754b5c299bcce91bf276",
        "base_ref": "mongodb-4.4",
        "created_at": "Wednesday Apr 14, 2021 at 06:41 GMT",
        "updated_at": "Wednesday Apr 14, 2021 at 06:59 GMT",
        "closed_at": "Wednesday Apr 14, 2021 at 06:59 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6559",
        "number": 6449,
        "state": "closed",
        "title": "WT-6559 Use the session id from the new session to determine statistics bucket (v4.0 backport)",
        "body": "cb2fa3547fa15efcf632426627aedd90e703ed24",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Apr 14, 2021 at 03:42 GMT",
        "updated_at": "Wednesday Apr 14, 2021 at 06:57 GMT",
        "closed_at": "Wednesday Apr 14, 2021 at 06:16 GMT",
        "merged_at": null
    },
    {
        "key": "db-4",
        "number": 6448,
        "state": "closed",
        "title": "backport for cb2fa3547fa15efcf632426627aedd90e703ed24 mongodb-4.0",
        "body": "cb2fa3547fa15efcf632426627aedd90e703ed24",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Apr 14, 2021 at 03:27 GMT",
        "updated_at": "Wednesday Apr 14, 2021 at 03:40 GMT",
        "closed_at": "Wednesday Apr 14, 2021 at 03:40 GMT",
        "merged_at": null
    },
    {
        "key": "db-4",
        "number": 6447,
        "state": "closed",
        "title": "backport for cb2fa3547fa15efcf632426627aedd90e703ed24 mongodb-4.0",
        "body": "cb2fa3547fa15efcf632426627aedd90e703ed24",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Apr 14, 2021 at 03:13 GMT",
        "updated_at": "Wednesday Apr 14, 2021 at 03:27 GMT",
        "closed_at": "Wednesday Apr 14, 2021 at 03:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7407",
        "number": 6446,
        "state": "closed",
        "title": "WT-7407 test/format failure classifier",
        "body": "This ticket is created as part of the Skunkworks project and is aimed to assist the test/format failure analysis/triaging with a \u201cclassifier\u201d to generate a human-readable output for critical configuration properties.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 14, 2021 at 00:16 GMT",
        "updated_at": "Monday May 17, 2021 at 11:36 GMT",
        "closed_at": "Monday May 17, 2021 at 11:36 GMT",
        "merged_at": "Monday May 17, 2021 at 11:36 GMT"
    },
    {
        "key": "db-4",
        "number": 6445,
        "state": "closed",
        "title": "backport for 81d3d794071b4ae6dbde611e472fa504f8a7d1ad mongodb-4.2",
        "body": "81d3d794071b4ae6dbde611e472fa504f8a7d1ad",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Apr 13, 2021 at 02:46 GMT",
        "updated_at": "Wednesday Apr 14, 2021 at 00:31 GMT",
        "closed_at": "Wednesday Apr 14, 2021 at 00:30 GMT",
        "merged_at": null
    },
    {
        "key": "db-4",
        "number": 6444,
        "state": "closed",
        "title": "backport for 540e8502d00cd4b6630957ca188a34ce59a2a252 mongodb-4.2",
        "body": "540e8502d00cd4b6630957ca188a34ce59a2a252",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Apr 13, 2021 at 00:53 GMT",
        "updated_at": "Tuesday Apr 13, 2021 at 01:15 GMT",
        "closed_at": "Tuesday Apr 13, 2021 at 01:12 GMT",
        "merged_at": null
    },
    {
        "key": "db-4",
        "number": 6443,
        "state": "closed",
        "title": "backport change for 26cedb6a3294b9372c944b6203a5be86ff8200f4 mongodb-4.2",
        "body": "123",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Apr 12, 2021 at 22:43 GMT",
        "updated_at": "Tuesday Apr 13, 2021 at 00:52 GMT",
        "closed_at": "Tuesday Apr 13, 2021 at 00:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7403",
        "number": 6442,
        "state": "closed",
        "title": "WT-7403 Random cursor on empty tiered table loops forever",
        "body": "To ensure that a random tiered cursor doesn't search forever on an empty table, only check each tier once.  If all tiers return `WT_NOTFOUND` then the table is empty and we're done.  The implementation accomplishes this by creating a table with the per-tier cursors in a random order. Then it iterates through the table requesting a random item from each tier until it either finds something or runs out of tiers. \r\n\r\nPotentially inefficient if we have a very large number of tiers, as we have to allocate and permute the table before we start looking for the random item.  So we do the work for the uncommon case (an empty table) on every call to `cursor->next()` on a random tiered cursor.  But we don't currently expect to have more than a handful of tiers.  And it is likely that we will need to revisit this implementation in any event as it doesn't balance for different numbers of items in different tiers. (See `TODO` in comments.)",
        "base_ref": "develop",
        "created_at": "Monday Apr 12, 2021 at 17:45 GMT",
        "updated_at": "Tuesday Apr 13, 2021 at 21:36 GMT",
        "closed_at": "Tuesday Apr 13, 2021 at 21:36 GMT",
        "merged_at": "Tuesday Apr 13, 2021 at 21:36 GMT"
    },
    {
        "key": "db-4",
        "number": 6441,
        "state": "closed",
        "title": "backport change for 26cedb6a3294b9372c944b6203a5be86ff8200f4 mongodb-4.2",
        "body": "123",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Apr 12, 2021 at 08:57 GMT",
        "updated_at": "Tuesday Apr 13, 2021 at 00:52 GMT",
        "closed_at": "Monday Apr 12, 2021 at 22:43 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 6440,
        "state": "closed",
        "title": "Experiment with using expect intrinsics with WT_RET and WT_ERR",
        "body": "While I was away, I had an idea that this might improve perf since our code is very \"branchy\" due to the `WT_RET` and `WT_ERR` macros and most function calls should be successful.\r\n\r\nHaven't perf tested this yet. I'll run some `wtperf` workloads and report back.",
        "base_ref": "develop",
        "created_at": "Monday Apr 12, 2021 at 01:51 GMT",
        "updated_at": "Friday Jul 02, 2021 at 12:27 GMT",
        "closed_at": "Friday Jul 02, 2021 at 12:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7346",
        "number": 6439,
        "state": "closed",
        "title": "WT-7346 Connect the tiered storage API to the storage source",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 09, 2021 at 18:36 GMT",
        "updated_at": "Friday Apr 30, 2021 at 12:34 GMT",
        "closed_at": "Friday Apr 30, 2021 at 12:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7286",
        "number": 6438,
        "state": "closed",
        "title": "WT-7286 Avoid bucket walking when gathering checkpoint handles",
        "body": "Skip walking the session's dhandle cache and connection's hash bucket if we are the checkpoint thread (via WT_SESSION_IS_CHECKPOINT()) and the checkpoint string prefix matches WT_CHECKPOINT.\r\nAssert that the checkpoint dhandle does not exist in connections list in diagnostic mode after acquiring the lock.",
        "base_ref": "develop",
        "created_at": "Friday Apr 09, 2021 at 02:24 GMT",
        "updated_at": "Friday Apr 30, 2021 at 04:36 GMT",
        "closed_at": "Tuesday Apr 27, 2021 at 08:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7389",
        "number": 6437,
        "state": "closed",
        "title": "WT-7389 Remove on positioned tiered cursor should leave cursor positioned",
        "body": "Rather than always using `cursor->insert()` to store the tombstone, we should use `insert()` or `update()` according to whether we need to leave the cursor positioned (i.e., whether it was positioned at the time of the `remove()`). This happens in `curtiered_put()` which is the common code for inserting something into the tables under the tiered cursor.\r\n\r\nThis change basically copies the relevant code from {{clam_put()}}.  After puzzling over what to do for a reserve operation that wants an unpositioned cursor, I realized that's impossible give the current implementation and API. So I've added an ASSERT that this doesn't happen.  ",
        "base_ref": "develop",
        "created_at": "Thursday Apr 08, 2021 at 21:31 GMT",
        "updated_at": "Monday Apr 12, 2021 at 17:06 GMT",
        "closed_at": "Monday Apr 12, 2021 at 17:06 GMT",
        "merged_at": "Monday Apr 12, 2021 at 17:06 GMT"
    },
    {
        "key": "WT-7395",
        "number": 6436,
        "state": "closed",
        "title": "WT-7395 Fix coverity error for NULL pointer in local storage extension.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 07, 2021 at 20:11 GMT",
        "updated_at": "Wednesday Apr 07, 2021 at 21:56 GMT",
        "closed_at": "Wednesday Apr 07, 2021 at 21:56 GMT",
        "merged_at": "Wednesday Apr 07, 2021 at 21:56 GMT"
    },
    {
        "key": "WT-7190",
        "number": 6435,
        "state": "closed",
        "title": "WT-7190 Limit eviction of non-history store pages when checkpoint is operating on history store",
        "body": "If we are trying to evict a dirty page that does not belong to history store(HS) and checkpoint is processing HS file, then avoid evicting the dirty non-HS page for now if the cache is already dominated by dirty HS content. Evicting a non-HS dirty page can generate even more HS content. As we can not evict HS pages while checkpoint is operating on the HS file, we can end up in a situation where we exceed the cache size limits.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 06, 2021 at 04:56 GMT",
        "updated_at": "Wednesday Apr 21, 2021 at 05:57 GMT",
        "closed_at": "Wednesday Apr 21, 2021 at 05:57 GMT",
        "merged_at": "Wednesday Apr 21, 2021 at 05:57 GMT"
    },
    {
        "key": "WT-7384",
        "number": 6434,
        "state": "closed",
        "title": "WT-7384 Fix an assert fire when inserting to the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 06, 2021 at 04:35 GMT",
        "updated_at": "Wednesday Apr 07, 2021 at 02:51 GMT",
        "closed_at": "Wednesday Apr 07, 2021 at 02:51 GMT",
        "merged_at": "Wednesday Apr 07, 2021 at 02:51 GMT"
    },
    {
        "key": "WT-7266",
        "number": 6433,
        "state": "closed",
        "title": "WT-7266  Test to validate re-reading files that were closed with active history",
        "body": "Added a new test to validate we don't lose any data when idle files with an active history are closed/sweeped. With WT-6819\r\nfiles with active history, ie content newer than the oldest timestamp, can be closed when idle. This test ensures that when an\r\nactive history file is idle closed we can continue reading the correct version of data and their base write generation hasn't changed (since we haven't restarted the system)",
        "base_ref": "develop",
        "created_at": "Monday Apr 05, 2021 at 23:50 GMT",
        "updated_at": "Thursday Apr 08, 2021 at 04:05 GMT",
        "closed_at": "Thursday Apr 08, 2021 at 04:05 GMT",
        "merged_at": "Thursday Apr 08, 2021 at 04:05 GMT"
    },
    {
        "key": "WT-7105",
        "number": 6432,
        "state": "closed",
        "title": "WT-7105 Add recovery error messages to include the URI.",
        "body": "I must've forgotten to hit the \"create pull request\" button. Here is the PR I mentioned.",
        "base_ref": "develop",
        "created_at": "Monday Apr 05, 2021 at 17:29 GMT",
        "updated_at": "Monday Apr 05, 2021 at 18:21 GMT",
        "closed_at": "Monday Apr 05, 2021 at 18:21 GMT",
        "merged_at": "Monday Apr 05, 2021 at 18:21 GMT"
    },
    {
        "key": "WT-7390",
        "number": 6431,
        "state": "closed",
        "title": "WT-7390 Add --noremove flag to Python test runner.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 05, 2021 at 15:39 GMT",
        "updated_at": "Monday Apr 05, 2021 at 17:13 GMT",
        "closed_at": "Monday Apr 05, 2021 at 17:13 GMT",
        "merged_at": "Monday Apr 05, 2021 at 17:13 GMT"
    },
    {
        "key": "WT-7173",
        "number": 6430,
        "state": "closed",
        "title": "WT-7173 Implement data structures and metadata for tiered storage.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 05, 2021 at 15:37 GMT",
        "updated_at": "Thursday Apr 22, 2021 at 20:15 GMT",
        "closed_at": "Thursday Apr 22, 2021 at 20:15 GMT",
        "merged_at": "Thursday Apr 22, 2021 at 20:15 GMT"
    },
    {
        "key": "WT-7388",
        "number": 6429,
        "state": "closed",
        "title": "WT-7388 Add parens to assignment in conditional.",
        "body": "@ddanderson Please review this one-line change. I grabbed this ticket so that I can get clean builds locally.",
        "base_ref": "develop",
        "created_at": "Monday Apr 05, 2021 at 15:31 GMT",
        "updated_at": "Monday Apr 05, 2021 at 17:15 GMT",
        "closed_at": "Monday Apr 05, 2021 at 17:15 GMT",
        "merged_at": "Monday Apr 05, 2021 at 17:15 GMT"
    },
    {
        "key": "WT-7376",
        "number": 6428,
        "state": "closed",
        "title": "WT-7376 Initialize tiered cursor name",
        "body": "Eliminate the name field of WT_TIERED in favor of the table name/uri which is already stored in the dhandle within WT_TIERED.\r\n\r\nAlso, since there are multiple places in the cursor code that assume `cursor->uri_internal` hold a valid string, add assert that it is set in `wt_cursor_init()`.\r\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 02, 2021 at 20:57 GMT",
        "updated_at": "Monday Apr 05, 2021 at 14:45 GMT",
        "closed_at": "Monday Apr 05, 2021 at 14:45 GMT",
        "merged_at": "Monday Apr 05, 2021 at 14:45 GMT"
    },
    {
        "key": "WT-7387",
        "number": 6427,
        "state": "closed",
        "title": "WT-7387 Replace cluster/member with hostid.",
        "body": "Naming consideration for this review: I replaced the API with `hostid` but the internal storage is calling it `uniqueid`. Is `hostid` what we really want in the API configuration string? `id`? `uniqueid`? something else?",
        "base_ref": "develop",
        "created_at": "Thursday Apr 01, 2021 at 19:33 GMT",
        "updated_at": "Monday Apr 05, 2021 at 14:37 GMT",
        "closed_at": "Monday Apr 05, 2021 at 14:37 GMT",
        "merged_at": "Monday Apr 05, 2021 at 14:37 GMT"
    },
    {
        "key": "WT-7385",
        "number": 6426,
        "state": "closed",
        "title": "WT-7385 Remove 'auth_token' from being reconfigurable.",
        "body": "I modified (but did not commit) `test_tiered04.py` to reconfigure `auth_token`. It passed in the current tree and failed with the expected invalid configuration on this branch. ",
        "base_ref": "develop",
        "created_at": "Thursday Apr 01, 2021 at 16:22 GMT",
        "updated_at": "Thursday Apr 01, 2021 at 20:17 GMT",
        "closed_at": "Thursday Apr 01, 2021 at 19:34 GMT",
        "merged_at": "Thursday Apr 01, 2021 at 19:34 GMT"
    },
    {
        "key": "WT-7380",
        "number": 6425,
        "state": "closed",
        "title": "WT-7380 Fix wiredtiger connection string to clear statistics",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 01, 2021 at 02:41 GMT",
        "updated_at": "Monday Apr 05, 2021 at 23:02 GMT",
        "closed_at": "Monday Apr 05, 2021 at 23:02 GMT",
        "merged_at": "Monday Apr 05, 2021 at 23:02 GMT"
    },
    {
        "key": "WT-7312",
        "number": 6424,
        "state": "closed",
        "title": "WT-7312 Keys/Values updated to String type and save the created keys",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 29, 2021 at 02:32 GMT",
        "updated_at": "Tuesday Mar 30, 2021 at 11:08 GMT",
        "closed_at": "Tuesday Mar 30, 2021 at 11:08 GMT",
        "merged_at": "Tuesday Mar 30, 2021 at 11:08 GMT"
    },
    {
        "key": "WT-7367",
        "number": 6423,
        "state": "closed",
        "title": "WT-7367 Do not remove unstable updates of an in-memory database btree page",
        "body": "Remove the updates from the page only when both the start and stop time windows\r\nare globally visible if the update has both time windows. Otherwise, the start time window.\r\n\r\nChange the default value of rollback to stable to check for any unstable updates of a page\r\nwhen the page doesn't have any aggregated time window information to avoid\r\nrollback to stable skipping any pages with unstable updates.",
        "base_ref": "develop",
        "created_at": "Friday Mar 26, 2021 at 12:09 GMT",
        "updated_at": "Thursday Apr 01, 2021 at 02:55 GMT",
        "closed_at": "Thursday Apr 01, 2021 at 02:55 GMT",
        "merged_at": "Thursday Apr 01, 2021 at 02:55 GMT"
    },
    {
        "key": "WT-7374",
        "number": 6422,
        "state": "closed",
        "title": "WT-7374 Add missing branch checking logic for doc-update task",
        "body": "There is a build failure reported against doc-update [task](https://evergreen.mongodb.com/task/wiredtiger_mongo_v4.4_doc_update_doc_update_8f90c3c2923040725fb424b3a5c510bacc4ce380_21_03_26_04_39_34) on the `mongodb-4.4` branch waterfall page, regarding the non-existent `wiredtiger.github.com` directory. The directory is supposed to be created when checking out the corresponding git repo, only if the task is running on the Evergreen project that's configured for the wiredtiger 'develop' branch. \r\n\r\nThe shell that is to run git push command did not have the branch checking logic in place to bypass the remaining code, and ran into this directory-not-found issue. \r\n\r\nThe fix is simply adding the branch checking logic in for the affected Evergreen shell. ",
        "base_ref": "develop",
        "created_at": "Friday Mar 26, 2021 at 05:47 GMT",
        "updated_at": "Monday Mar 29, 2021 at 02:33 GMT",
        "closed_at": "Monday Mar 29, 2021 at 02:33 GMT",
        "merged_at": "Monday Mar 29, 2021 at 02:33 GMT"
    },
    {
        "key": "WT-7368",
        "number": 6421,
        "state": "closed",
        "title": "WT-7368 Add WT_STORAGE_SOURCE.customize_file_system in place of locations",
        "body": "This change looks big, but basically, `WT_LOCATION_HANDLE` grew up, it became a `WT_FILE_SYSTEM`.  And the \"file system-y\" methods that were on `WT_STORAGE_SOURCE` are no longer needed, because the file system has them.\r\nThis is the first time that `WT_FILE_SYSTEM` has been exposed to SWIG, so SWIG needed to forget about `WT_LOCATION_HANDLE` and learn about `WT_FILE_SYSTEM`.\r\n\r\nFor the moment, I removed the building of `ex_storage_source.c` until we agree that this is the right approach.  And maybe the right thing is to get rid of `ex_storage_source.c` and just use ext/local_storage as our \"example\".  I'll make one of those changes soon before this is finally reviewed.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 25, 2021 at 19:30 GMT",
        "updated_at": "Friday Apr 02, 2021 at 18:59 GMT",
        "closed_at": "Friday Apr 02, 2021 at 18:59 GMT",
        "merged_at": "Friday Apr 02, 2021 at 18:59 GMT"
    },
    {
        "key": "WT-7312",
        "number": 6420,
        "state": "closed",
        "title": "WT-7312 Allow generic key/value formats",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 25, 2021 at 06:21 GMT",
        "updated_at": "Sunday Mar 28, 2021 at 23:18 GMT",
        "closed_at": "Sunday Mar 28, 2021 at 23:18 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7176",
        "number": 6419,
        "state": "closed",
        "title": "WT-7176 Adding Ubuntu 18.04 ASAN variant to wiredtiger build",
        "body": "So theres a few extra fixes in here, mostly around working directories being wrong.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 25, 2021 at 04:51 GMT",
        "updated_at": "Friday Mar 26, 2021 at 04:22 GMT",
        "closed_at": "Friday Mar 26, 2021 at 04:22 GMT",
        "merged_at": "Friday Mar 26, 2021 at 04:22 GMT"
    },
    {
        "key": "WT-7230",
        "number": 6418,
        "state": "closed",
        "title": "WT-7230 CMake build system support for x86 POSIX targets",
        "body": "This PR adds the initial support for building the WiredTiger library with CMake for x86-based POSIX targets (ARM64, PPC, ZSeries support + Windows support coming in a future PR). The build system is designed to co-exist with autoconf. Autoconf builds still work as expected (and it will be highly encouraged to keep using it until more CMake support is added).\r\n\r\n---\r\nMore specifically this PR **adds the following features**:\r\n*  CMake support to successfully configure/generate a Ninja build on:\r\n    * Linux/Darwin environments\r\n    * For supported architectures: X86_64\r\n    * For supported compilers: GCC & Clang\r\n* Compiles the WiredTiger library and extension libraries/modules\r\n* Support for the WiredTiger installation target (e.g 'make install' equivalent)\r\n* Initial documentation on how to build library with CMake\r\n\r\nThis PR **does not add the following features** (being left to future tickets/PR's):\r\n* CMake support for Windows and non-x86 platforms\r\n* Build support for all the tools, examples and test suites\r\n* Build support for the Python API\r\n* Evergreen jobs to use the CMake build\r\n---\r\n\r\nThis PR is quite large and I expect it will need a significant amount of time to review and discuss. Most of what is introduced in this PR is the initial boilerplate necessary to get a complete WiredTiger library build. I expect future PRs to be significantly smaller!\r\n\r\nTo make it a bit easier to review I broke the PR into individual feature-based commits. This should highlight the major design decisions and key pieces of functionality; hopefully making it easier to assess the key parts of the build system individually. ",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 24, 2021 at 23:23 GMT",
        "updated_at": "Monday Apr 19, 2021 at 05:08 GMT",
        "closed_at": "Monday Apr 19, 2021 at 01:40 GMT",
        "merged_at": "Monday Apr 19, 2021 at 01:40 GMT"
    },
    {
        "key": "WT-7332",
        "number": 6417,
        "state": "closed",
        "title": "WT-7332 Add ability to create and drop tables in workgen",
        "body": "Added `max_idle_table_cycle ` and `max_idle_table_cycle_fatal` options in workgen similar to [wtperf](https://source.wiredtiger.com/develop/wtperf.html) .",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 24, 2021 at 12:20 GMT",
        "updated_at": "Monday Mar 29, 2021 at 22:20 GMT",
        "closed_at": "Monday Mar 29, 2021 at 22:20 GMT",
        "merged_at": "Monday Mar 29, 2021 at 22:20 GMT"
    },
    {
        "key": "WT-7361",
        "number": 6416,
        "state": "closed",
        "title": "WT-7361 Remove doc-update task from patch build",
        "body": "According to [Evergreen wiki](https://github.com/evergreen-ci/evergreen/wiki/Project-Configuration-Files#commit-only-patch-only-and-git-tag-only-tasks), the `patchable: false` attribute setting can be used to make a task run only in commit builds (not patch builds). \r\n\r\nThe `doc-update` task is such a task that we expect to run only in commit builds. ",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 24, 2021 at 08:40 GMT",
        "updated_at": "Wednesday Mar 24, 2021 at 23:00 GMT",
        "closed_at": "Wednesday Mar 24, 2021 at 23:00 GMT",
        "merged_at": "Wednesday Mar 24, 2021 at 23:00 GMT"
    },
    {
        "key": "WT-7315",
        "number": 6415,
        "state": "closed",
        "title": "WT-7315 Implementation of the update thread operation in the test framework",
        "body": "- Creation of a database_operation class to define the database operations (populate, read, update, ...).\r\n- The test class inherits from this class so each database operation can be overridden in a custom test.\r\n- It is the user's responsibility to handle commit transactions correctly.\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 24, 2021 at 07:37 GMT",
        "updated_at": "Thursday Apr 01, 2021 at 03:11 GMT",
        "closed_at": "Thursday Apr 01, 2021 at 03:09 GMT",
        "merged_at": "Thursday Apr 01, 2021 at 03:09 GMT"
    },
    {
        "key": "WT-7360",
        "number": 6414,
        "state": "closed",
        "title": "WT-7360 Fix batchtime setting for some Evergreen builders",
        "body": "The comment and `batchtime` setting conflict with each others. Fix the batchtime setting to line up with the comment (intended testing frequency) for the 2 builders.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 24, 2021 at 03:51 GMT",
        "updated_at": "Wednesday Mar 24, 2021 at 10:05 GMT",
        "closed_at": "Wednesday Mar 24, 2021 at 10:05 GMT",
        "merged_at": "Wednesday Mar 24, 2021 at 10:05 GMT"
    },
    {
        "key": "WT-7349",
        "number": 6413,
        "state": "closed",
        "title": "WT-7349 Free memory access when walking through HS during eviction",
        "body": "This ticket involves removing running **__wt_update_obsolete_check** when dealing with the history store. This is because it is possible that we access freed memory when there are two internal readers reading the history store. The ticket describes the scenario in detail on how this can be possible.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 24, 2021 at 03:42 GMT",
        "updated_at": "Thursday Mar 25, 2021 at 06:23 GMT",
        "closed_at": "Thursday Mar 25, 2021 at 06:23 GMT",
        "merged_at": "Thursday Mar 25, 2021 at 06:23 GMT"
    },
    {
        "key": "WT-7307",
        "number": 6412,
        "state": "closed",
        "title": "WT-7307 Rework the visibility checks for history store cursor previous and next calls",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 24, 2021 at 02:16 GMT",
        "updated_at": "Thursday Mar 25, 2021 at 06:26 GMT",
        "closed_at": "Thursday Mar 25, 2021 at 06:26 GMT",
        "merged_at": "Thursday Mar 25, 2021 at 06:26 GMT"
    },
    {
        "key": "WT-7354",
        "number": 6411,
        "state": "closed",
        "title": "WT-7354 Refactor tiered schema code to follow conventions.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 23, 2021 at 17:46 GMT",
        "updated_at": "Tuesday Mar 23, 2021 at 19:59 GMT",
        "closed_at": "Tuesday Mar 23, 2021 at 19:59 GMT",
        "merged_at": "Tuesday Mar 23, 2021 at 19:59 GMT"
    },
    {
        "key": "WT-7060",
        "number": 6410,
        "state": "closed",
        "title": "WT-7060 Set the history store file size stat on startup",
        "body": "- The history store file size stat is now set in __wt_txn_recover.\r\n- The test test_rollback_to_stable10.py has been edited to check the history store file size stat before and after a simulated crash.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 23, 2021 at 03:33 GMT",
        "updated_at": "Wednesday Mar 24, 2021 at 22:53 GMT",
        "closed_at": "Wednesday Mar 24, 2021 at 22:53 GMT",
        "merged_at": "Wednesday Mar 24, 2021 at 22:53 GMT"
    },
    {
        "key": "WT-7095",
        "number": 6409,
        "state": "closed",
        "title": "WT-7095 Checkpoint generation update during history store checkpoint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 23, 2021 at 02:45 GMT",
        "updated_at": "Friday Mar 26, 2021 at 11:08 GMT",
        "closed_at": "Wednesday Mar 24, 2021 at 07:22 GMT",
        "merged_at": "Wednesday Mar 24, 2021 at 07:22 GMT"
    },
    {
        "key": "WT-7339",
        "number": 6408,
        "state": "closed",
        "title": "WT-7339 Coverity: Incorrect deallocator",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 22, 2021 at 05:08 GMT",
        "updated_at": "Tuesday Mar 23, 2021 at 07:47 GMT",
        "closed_at": "Tuesday Mar 23, 2021 at 07:47 GMT",
        "merged_at": "Tuesday Mar 23, 2021 at 07:47 GMT"
    },
    {
        "key": "WT-7338",
        "number": 6407,
        "state": "closed",
        "title": "WT-7338 Updating test framework makefile to copy default configuration files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 22, 2021 at 04:35 GMT",
        "updated_at": "Monday Mar 22, 2021 at 09:31 GMT",
        "closed_at": "Monday Mar 22, 2021 at 09:31 GMT",
        "merged_at": "Monday Mar 22, 2021 at 09:31 GMT"
    },
    {
        "key": "WT-7331",
        "number": 6406,
        "state": "closed",
        "title": "WT-7331 Fix exact return when we place the history store cursor on e exact key initially",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 22, 2021 at 03:36 GMT",
        "updated_at": "Tuesday Mar 23, 2021 at 00:09 GMT",
        "closed_at": "Tuesday Mar 23, 2021 at 00:09 GMT",
        "merged_at": "Tuesday Mar 23, 2021 at 00:09 GMT"
    },
    {
        "key": "WT-7311",
        "number": 6405,
        "state": "closed",
        "title": "WT-7311 New option to specify test to run in the test framework",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 22, 2021 at 03:28 GMT",
        "updated_at": "Tuesday Mar 23, 2021 at 05:49 GMT",
        "closed_at": "Tuesday Mar 23, 2021 at 05:49 GMT",
        "merged_at": "Tuesday Mar 23, 2021 at 05:49 GMT"
    },
    {
        "key": "WT-7290",
        "number": 6404,
        "state": "closed",
        "title": "WT-7290 Import many-dhandle-stress.wtperf to workload",
        "body": "Imported `many-dhandle-stress.wtperf` to `many-dhandle-stress.py` from `wtperf.py` script. \r\nIncreased `random_range` and `icount` because `wtperf.py` does some divisibility checking with these numbers and expect it to be divisible with `table_count`. (random_range+icount)/table_count.",
        "base_ref": "develop",
        "created_at": "Monday Mar 22, 2021 at 01:14 GMT",
        "updated_at": "Monday Mar 22, 2021 at 06:38 GMT",
        "closed_at": "Monday Mar 22, 2021 at 06:38 GMT",
        "merged_at": "Monday Mar 22, 2021 at 06:38 GMT"
    },
    {
        "key": "WT-7307",
        "number": 6403,
        "state": "closed",
        "title": "WT-7307 Optimize history store cursor previous calls",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 21, 2021 at 23:05 GMT",
        "updated_at": "Thursday Mar 25, 2021 at 06:27 GMT",
        "closed_at": "Thursday Mar 25, 2021 at 06:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7329",
        "number": 6402,
        "state": "closed",
        "title": "WT-7329 Add hook capability to Python testing.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 19, 2021 at 16:04 GMT",
        "updated_at": "Thursday Apr 01, 2021 at 21:14 GMT",
        "closed_at": "Thursday Apr 01, 2021 at 21:14 GMT",
        "merged_at": "Thursday Apr 01, 2021 at 21:14 GMT"
    },
    {
        "key": "WT-7289",
        "number": 6401,
        "state": "closed",
        "title": "WT-7289 Add warning and fatal wtperf options for idle_table_cycle",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 19, 2021 at 05:07 GMT",
        "updated_at": "Friday Mar 19, 2021 at 05:40 GMT",
        "closed_at": "Friday Mar 19, 2021 at 05:39 GMT",
        "merged_at": "Friday Mar 19, 2021 at 05:39 GMT"
    },
    {
        "key": "WT-7268",
        "number": 6400,
        "state": "closed",
        "title": "WT-7268 Fixes of coverity issues related to the test harness files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 19, 2021 at 04:24 GMT",
        "updated_at": "Monday Mar 22, 2021 at 00:13 GMT",
        "closed_at": "Monday Mar 22, 2021 at 00:12 GMT",
        "merged_at": "Monday Mar 22, 2021 at 00:12 GMT"
    },
    {
        "key": "WT-7328",
        "number": 6399,
        "state": "closed",
        "title": "WT-7328 Coverity: Multiple warnings in local_storage extension",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 19, 2021 at 03:25 GMT",
        "updated_at": "Sunday Mar 21, 2021 at 14:31 GMT",
        "closed_at": "Sunday Mar 21, 2021 at 14:31 GMT",
        "merged_at": "Sunday Mar 21, 2021 at 14:31 GMT"
    },
    {
        "key": "WT-7302",
        "number": 6398,
        "state": "closed",
        "title": "WT-7302 Use last connection base write generation as a minimum base write generation for a btree",
        "body": "Use connection base write generation as btree base write generation\r\nwhen the checkpoint run write generation is less than the last checkpointed\r\nconnection base write generation number. This scenario is possible only\r\nwhen rollback to stable doesn't get performed during the recovery.",
        "base_ref": "develop",
        "created_at": "Friday Mar 19, 2021 at 02:27 GMT",
        "updated_at": "Tuesday Mar 23, 2021 at 00:52 GMT",
        "closed_at": "Tuesday Mar 23, 2021 at 00:52 GMT",
        "merged_at": "Tuesday Mar 23, 2021 at 00:52 GMT"
    },
    {
        "key": "WT-7308",
        "number": 6397,
        "state": "closed",
        "title": "WT-7308 Updating configuration layout to use a subconfig per component",
        "body": "Opening this PR a bit early to give an overview of the changes coming in.",
        "base_ref": "develop",
        "created_at": "Friday Mar 19, 2021 at 02:11 GMT",
        "updated_at": "Monday Mar 22, 2021 at 06:03 GMT",
        "closed_at": "Monday Mar 22, 2021 at 06:03 GMT",
        "merged_at": "Monday Mar 22, 2021 at 06:03 GMT"
    },
    {
        "key": "WT-6911",
        "number": 6396,
        "state": "closed",
        "title": "WT-6911 Write \"block manager\" subpage for Architecture Guide",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 18, 2021 at 06:03 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:34 GMT",
        "closed_at": "Monday Jul 19, 2021 at 04:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6856",
        "number": 6395,
        "state": "closed",
        "title": "WT-6856 Test configuration can be retrieved from file + Logging activation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 18, 2021 at 04:29 GMT",
        "updated_at": "Saturday Mar 20, 2021 at 07:02 GMT",
        "closed_at": "Saturday Mar 20, 2021 at 07:02 GMT",
        "merged_at": "Saturday Mar 20, 2021 at 07:02 GMT"
    },
    {
        "key": null,
        "number": 6394,
        "state": "closed",
        "title": "WT 7268 Fixes of coverity issues related to the test harness files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 18, 2021 at 00:02 GMT",
        "updated_at": "Friday Mar 19, 2021 at 04:23 GMT",
        "closed_at": "Friday Mar 19, 2021 at 04:23 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7288",
        "number": 6393,
        "state": "closed",
        "title": "WT-7288 Construct many-dhandle-wtperf workload",
        "body": "Initial many dhandle wtperf workload ",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 17, 2021 at 05:34 GMT",
        "updated_at": "Thursday Mar 18, 2021 at 00:44 GMT",
        "closed_at": "Thursday Mar 18, 2021 at 00:44 GMT",
        "merged_at": "Thursday Mar 18, 2021 at 00:44 GMT"
    },
    {
        "key": "WT-7160",
        "number": 6392,
        "state": "closed",
        "title": "WT-7160 Migrate wiredtiger-doc-build job to Evergreen",
        "body": "The documentation build task is currently performed by a Jenkins job `wiredtiger-doc-build` with a special setup that can only run on a given machine. A cron job was run hourly to pick up the build result and \"git push\" to the `wiredtiger.github.com` repo using people's Github credential. We need to migrate the job out of Jenkins, and taking the chance to implement it in a proper way. \r\n\r\n- A new Github bot user `svc-bot-doc-build` (together with credential) is created, which we'll use to run git push.  \r\n- A new Evergreen task `doc-update` is created calling 2 sub functions to build & update documentation into wiredtiger website, for all supported branches - similar as what we currently adopt in the Jenkins job and cron script. \r\n- `doc-update-github-token` is provisioned as a private variable in the WiredTiger (develop) Evergreen project, and the \"git push\" command is put into a separate Evergreen shell with `silent` directive set in order to avoid exposing token into task logs. \r\n- The new task will be scheduled to run \"daily\", instead of for each commit merge (previously). \r\n- The new task will execute the doc build & update work only against WiredTiger \"develop\" branch (on the corresponding Evergreen project). On stable branches (e.g. mongodb-4.4) this task will be a no-op to avoid duplication. \r\n- The Jenkins job and crontab entry will be disabled prior to merge of this PR.\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 17, 2021 at 04:32 GMT",
        "updated_at": "Friday Mar 19, 2021 at 04:39 GMT",
        "closed_at": "Friday Mar 19, 2021 at 04:39 GMT",
        "merged_at": "Friday Mar 19, 2021 at 04:39 GMT"
    },
    {
        "key": "WT-7298",
        "number": 6391,
        "state": "closed",
        "title": "WT-7298 Remove LSM references from tiered cursor code",
        "body": "This is a strictly mechanical change that changes \"LSM\" in comments and variable names to \"tiered\" and \"chunk\" to \"tier.\r\n\r\nI've also removed the chunk_size parameter from test_tiered01.py since tiered tables don't use that value.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 16, 2021 at 16:24 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 19:32 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 19:32 GMT",
        "merged_at": "Tuesday Mar 16, 2021 at 19:32 GMT"
    },
    {
        "key": "WT-7269",
        "number": 6390,
        "state": "closed",
        "title": "WT-7269 Add column store to existing RTS tests",
        "body": "A couple of fixes along with added tests:\r\n- Mark the page dirty whenever RTS aborted updates on the page to let the reconcile to write a stable update to disk\r\n- Pass the restored update as a base update for column store search instead of on-disk value",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 16, 2021 at 12:59 GMT",
        "updated_at": "Sunday Mar 21, 2021 at 23:42 GMT",
        "closed_at": "Sunday Mar 21, 2021 at 23:42 GMT",
        "merged_at": "Sunday Mar 21, 2021 at 23:42 GMT"
    },
    {
        "key": "WT-7300",
        "number": 6389,
        "state": "closed",
        "title": "WT-7300 Creating distinct populate function, updating workload tracki\u2026",
        "body": "\u2026ng to be self contained",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 16, 2021 at 05:52 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 06:34 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 06:34 GMT",
        "merged_at": "Tuesday Mar 16, 2021 at 06:34 GMT"
    },
    {
        "key": "WT-7275",
        "number": 6388,
        "state": "closed",
        "title": "WT-7275 Implementation of the timestamp manager and transaction management",
        "body": "Main changes:\r\n\r\n- New configuration parameters for timestamp and transaction operations.\r\n- Timestamps are based on the date and are using a counter for uniqueness in multi thread env.\r\n- Thread will execute a random number of operations per transaction.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 16, 2021 at 05:10 GMT",
        "updated_at": "Wednesday Mar 17, 2021 at 22:34 GMT",
        "closed_at": "Wednesday Mar 17, 2021 at 22:34 GMT",
        "merged_at": "Wednesday Mar 17, 2021 at 22:34 GMT"
    },
    {
        "key": "WT-7301",
        "number": 6387,
        "state": "closed",
        "title": "WT-7301 Reverting changes to configuration that caused search near as\u2026",
        "body": "\u2026sert to fire",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 16, 2021 at 01:49 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 02:23 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 02:23 GMT",
        "merged_at": "Tuesday Mar 16, 2021 at 02:23 GMT"
    },
    {
        "key": "WT-7295",
        "number": 6386,
        "state": "closed",
        "title": "WT-7295 Compatibility with older versions of WT",
        "body": "The WT-5886 change caused MongoDB multi-version tests to fail in windows machines. WT-5886 changes are reverted, this ticket would incorporate the WT-5886 changes with other fixes.",
        "base_ref": "develop",
        "created_at": "Monday Mar 15, 2021 at 22:31 GMT",
        "updated_at": "Wednesday Mar 17, 2021 at 22:41 GMT",
        "closed_at": "Wednesday Mar 17, 2021 at 22:41 GMT",
        "merged_at": "Wednesday Mar 17, 2021 at 22:41 GMT"
    },
    {
        "key": "WT-7299",
        "number": 6385,
        "state": "closed",
        "title": "WT-7299 Remove extraneous output from results.txt",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 15, 2021 at 19:20 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 13:06 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 13:06 GMT",
        "merged_at": "Tuesday Mar 16, 2021 at 13:06 GMT"
    },
    {
        "key": "WT-6855",
        "number": 6384,
        "state": "closed",
        "title": "WT-6855 Initial implementation of runtime monitor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 15, 2021 at 05:29 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 00:52 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 00:52 GMT",
        "merged_at": "Tuesday Mar 16, 2021 at 00:52 GMT"
    },
    {
        "key": "WT-7239",
        "number": 6383,
        "state": "closed",
        "title": "WT-7239 Fix unit-test of OS X 10.14 machine.",
        "body": "With this change `unit-test` does not depend on the compile task, it gets the project and compiles it in the current machine.",
        "base_ref": "develop",
        "created_at": "Monday Mar 15, 2021 at 01:15 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 09:23 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 09:23 GMT",
        "merged_at": "Tuesday Mar 16, 2021 at 09:23 GMT"
    },
    {
        "key": "WT-5886",
        "number": 6382,
        "state": "closed",
        "title": "Revert \"WT-5886 Compatibility with older versions of WT\"",
        "body": "Reverts wiredtiger/wiredtiger#6366",
        "base_ref": "develop",
        "created_at": "Thursday Mar 11, 2021 at 23:19 GMT",
        "updated_at": "Thursday Mar 11, 2021 at 23:19 GMT",
        "closed_at": "Thursday Mar 11, 2021 at 23:19 GMT",
        "merged_at": "Thursday Mar 11, 2021 at 23:19 GMT"
    },
    {
        "key": "WT-7278",
        "number": 6381,
        "state": "closed",
        "title": "Revert \"WT-7278 Compatibility tests failure\"",
        "body": "Reverts wiredtiger/wiredtiger#6374",
        "base_ref": "develop",
        "created_at": "Thursday Mar 11, 2021 at 23:17 GMT",
        "updated_at": "Thursday Mar 11, 2021 at 23:17 GMT",
        "closed_at": "Thursday Mar 11, 2021 at 23:17 GMT",
        "merged_at": "Thursday Mar 11, 2021 at 23:17 GMT"
    },
    {
        "key": "WT-7150",
        "number": 6380,
        "state": "closed",
        "title": "WT-7150 Trailing uninitialized mem in schema_project_in",
        "body": "When performing a schema project on a set of input columns we grow our input cursors buffer with more memory than is required to write out a given applications columns. Whilst this doesn't impact the overall functionality we do create trailing uninitialised memory that will be flagged by Clang's 'msan' as it gets reconciled.\r\n\r\nThe following changes adjust the buffer allocation calculations to account for when the schema projection is re-using/overwriting the memory of a previously allocated column.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 11, 2021 at 07:01 GMT",
        "updated_at": "Monday Mar 15, 2021 at 04:14 GMT",
        "closed_at": "Monday Mar 15, 2021 at 04:14 GMT",
        "merged_at": "Monday Mar 15, 2021 at 04:14 GMT"
    },
    {
        "key": "WT-6066",
        "number": 6379,
        "state": "closed",
        "title": "WT-6066 Re-enable endianness tests on evergreen",
        "body": "The aim is to enable the tests for Evergreen testing. There are two major changes:\r\n- `format` doesn't support column store configs at the moment and therefore I have disabled them by explicitly adding row-store config.\r\n- Although we have logging selected in config, `format` can override that config if it's incompatible with other randomly selected config options. I have modified the script to look for log files only if they were created.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 11, 2021 at 04:51 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 01:06 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 01:04 GMT",
        "merged_at": "Tuesday Mar 16, 2021 at 01:04 GMT"
    },
    {
        "key": "WT-7253",
        "number": 6378,
        "state": "closed",
        "title": "WT-7253 Add import functionality to test/format",
        "body": "The idea of this ticket, is to add import functionality into test/format. This involves creating a new thread, and inside that thread we perform:\r\n1. Create a separate import database connection\r\n2. Add new table from import database connection\r\n3. Populate the new table\r\n4. Allow usual test/format database to import the table from import database.\r\n5. Drop imported table",
        "base_ref": "develop",
        "created_at": "Thursday Mar 11, 2021 at 04:09 GMT",
        "updated_at": "Tuesday Apr 20, 2021 at 01:12 GMT",
        "closed_at": "Tuesday Apr 20, 2021 at 01:12 GMT",
        "merged_at": "Tuesday Apr 20, 2021 at 01:12 GMT"
    },
    {
        "key": "WT-7275",
        "number": 6377,
        "state": "closed",
        "title": "WT-7275 Implementation of the timestamp manager and transaction management",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 11, 2021 at 03:54 GMT",
        "updated_at": "Tuesday Mar 16, 2021 at 04:45 GMT",
        "closed_at": "Tuesday Mar 16, 2021 at 04:41 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7223",
        "number": 6376,
        "state": "closed",
        "title": "WT-7223 WT_CALL_FUNCTION should not print out a message",
        "body": "This ticket involves removing the printing of an error message when calling WT_CALL_FUNCTION. WT_CALL_FUNCTION is used for checking suitable `fallocate` functions. The reason is that customers are worried with the error messages that are produced, is that wiredtiger tests multiple `fallocate` solutions, and when they don't exist an ENOTSUP error message is printed towards the logs. \r\n\r\nTherefore it has been requested that the error messages to be removed, to remove confusion. This functionality has been tested with the `mongod` binary inside a testing machine, and successfully removed the messages.\r\nAssumption: System configurations are all setup for ENOTSUPP messages to occur.(For more information refer to ticket).\r\nSteps taken to confirm fix:\r\n1. Tested mongod 4.2 and found no ENOTSUP messages (Expected)\r\n2. Tested mongod 4.4 and found ENOTSUPP messages\r\n3. Tested mongod (with requested changes) and found no ENOTSUPP messages",
        "base_ref": "develop",
        "created_at": "Thursday Mar 11, 2021 at 00:45 GMT",
        "updated_at": "Monday Mar 15, 2021 at 22:05 GMT",
        "closed_at": "Monday Mar 15, 2021 at 22:05 GMT",
        "merged_at": "Monday Mar 15, 2021 at 22:05 GMT"
    },
    {
        "key": "WT-6525",
        "number": 6375,
        "state": "closed",
        "title": "WT-6525 New parameter in __wt_hs_insert_updates to indicate successful write to history",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 10, 2021 at 03:45 GMT",
        "updated_at": "Thursday Mar 11, 2021 at 00:10 GMT",
        "closed_at": "Thursday Mar 11, 2021 at 00:10 GMT",
        "merged_at": "Thursday Mar 11, 2021 at 00:10 GMT"
    },
    {
        "key": "WT-7278",
        "number": 6374,
        "state": "closed",
        "title": "WT-7278 Compatibility tests failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 09, 2021 at 22:50 GMT",
        "updated_at": "Tuesday Mar 09, 2021 at 23:25 GMT",
        "closed_at": "Tuesday Mar 09, 2021 at 23:25 GMT",
        "merged_at": "Tuesday Mar 09, 2021 at 23:25 GMT"
    },
    {
        "key": "WT-7108",
        "number": 6373,
        "state": "closed",
        "title": "WT-7108 Added col_store_example to WT documentation",
        "body": "Added col_store_example.c to be included in the examples at source.wiredtiger.com. Also added snippets of the column store example to the column groups and cursor join pages as relevant examples.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 09, 2021 at 00:44 GMT",
        "updated_at": "Tuesday Mar 09, 2021 at 04:04 GMT",
        "closed_at": "Tuesday Mar 09, 2021 at 04:04 GMT",
        "merged_at": "Tuesday Mar 09, 2021 at 04:04 GMT"
    },
    {
        "key": "WT-7234",
        "number": 6372,
        "state": "closed",
        "title": "WT-7234 prefix compressed memory amplification",
        "body": "Reduce memory amplification for sets of prefix-compressed keys by tracking the \"base\" key for the longest string of prefix-compressed keys on each row-store leaf page.\r\n\r\nStore encoded information about prefix-compressed keys in each row-store leaf page index to avoid decoding cells on every access of a prefix-compressed key.",
        "base_ref": "develop",
        "created_at": "Monday Mar 08, 2021 at 19:15 GMT",
        "updated_at": "Friday Apr 23, 2021 at 15:56 GMT",
        "closed_at": "Wednesday Mar 24, 2021 at 16:44 GMT",
        "merged_at": null
    },
    {
        "key": "on-",
        "number": 6371,
        "state": "closed",
        "title": "Give threads names when on non-ancient pthreads",
        "body": "These are convenient for quick diagnostics,\r\nin particular in incident situation.\r\n\r\nWhile thread names don't replace backtraces/process dumps/etc,\r\nthese names can help build candidate theories about cause of issue faster.",
        "base_ref": "develop",
        "created_at": "Saturday Mar 06, 2021 at 16:52 GMT",
        "updated_at": "Friday Apr 16, 2021 at 04:33 GMT",
        "closed_at": "Friday Apr 16, 2021 at 04:33 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7271",
        "number": 6370,
        "state": "closed",
        "title": "WT-7271 Coverity: Resource leak",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 05, 2021 at 21:16 GMT",
        "updated_at": "Tuesday Mar 09, 2021 at 14:57 GMT",
        "closed_at": "Tuesday Mar 09, 2021 at 14:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7177",
        "number": 6369,
        "state": "closed",
        "title": "WT-7177 Added a \"local_store\" storage source that stores objects locally",
        "body": "Include some basic tests.",
        "base_ref": "develop",
        "created_at": "Friday Mar 05, 2021 at 15:13 GMT",
        "updated_at": "Wednesday Mar 10, 2021 at 14:50 GMT",
        "closed_at": "Wednesday Mar 10, 2021 at 14:50 GMT",
        "merged_at": "Wednesday Mar 10, 2021 at 14:50 GMT"
    },
    {
        "key": "WT-6854",
        "number": 6368,
        "state": "closed",
        "title": "WT-6854 Implementation of the test harness validation component",
        "body": "Main changes are:\r\n\r\n- Tracking is enabled from the configuration\r\n- workload_validation class now inherits from the component class\r\n- workload_validation class contains all the methods to:\r\n  - Represent in memory the state of the collections using the tracking tables\r\n  - Compare the memory representation of the collections to what is actually on disk and vice-versa",
        "base_ref": "develop",
        "created_at": "Friday Mar 05, 2021 at 06:47 GMT",
        "updated_at": "Thursday Mar 11, 2021 at 02:35 GMT",
        "closed_at": "Thursday Mar 11, 2021 at 02:35 GMT",
        "merged_at": "Thursday Mar 11, 2021 at 02:35 GMT"
    },
    {
        "key": "WT-7270",
        "number": 6367,
        "state": "closed",
        "title": "WT-7270 Missing include in test harness for older g++ versions to compile",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 05, 2021 at 05:35 GMT",
        "updated_at": "Friday Mar 05, 2021 at 06:05 GMT",
        "closed_at": "Friday Mar 05, 2021 at 06:05 GMT",
        "merged_at": "Friday Mar 05, 2021 at 06:05 GMT"
    },
    {
        "key": "WT-5886",
        "number": 6366,
        "state": "closed",
        "title": "WT-5886 Compatibility with older versions of WT",
        "body": "The overall changes are \r\n- Enable WT_STANDALONE_BUILD by default in WiredTiger build.\r\n- Check for a version mismatch if WT_STANDALONE_BUILD is defined and if compatibility has not been configured.\r\n- Add a configuration option --disable-standalone-build to build WiredTiger similar to MongoDB.\r\n- Update documentation page.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 04, 2021 at 23:25 GMT",
        "updated_at": "Tuesday Mar 09, 2021 at 01:49 GMT",
        "closed_at": "Tuesday Mar 09, 2021 at 01:49 GMT",
        "merged_at": "Tuesday Mar 09, 2021 at 01:49 GMT"
    },
    {
        "key": "WT-6935",
        "number": 6365,
        "state": "closed",
        "title": "WT-6935 Update connection base write generation from all files of metadata",
        "body": "At the end of the recovery, the connection base write generation must be\r\nupdated with the latest checkpoint data from all the files. In some scenarios,\r\nit is possible that the connection base write generation is already up to date\r\nwhen no rollback to stable or roll forward occurs as part of recovery.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 04, 2021 at 02:32 GMT",
        "updated_at": "Thursday Mar 11, 2021 at 03:45 GMT",
        "closed_at": "Thursday Mar 11, 2021 at 03:45 GMT",
        "merged_at": "Thursday Mar 11, 2021 at 03:45 GMT"
    },
    {
        "key": "WT-7235",
        "number": 6364,
        "state": "closed",
        "title": "WT-7235 Extend API for per-table tiered information.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 03, 2021 at 16:37 GMT",
        "updated_at": "Monday Mar 22, 2021 at 15:51 GMT",
        "closed_at": "Monday Mar 22, 2021 at 15:51 GMT",
        "merged_at": "Monday Mar 22, 2021 at 15:51 GMT"
    },
    {
        "key": "WT-7263",
        "number": 6363,
        "state": "closed",
        "title": "WT-7263 Move comment to be with its code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 03, 2021 at 15:48 GMT",
        "updated_at": "Wednesday Mar 03, 2021 at 16:44 GMT",
        "closed_at": "Wednesday Mar 03, 2021 at 16:44 GMT",
        "merged_at": "Wednesday Mar 03, 2021 at 16:44 GMT"
    },
    {
        "key": "WT-7261",
        "number": 6362,
        "state": "closed",
        "title": "WT-7261 Review HS cursor open/close scenarios",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Tuesday Mar 02, 2021 at 23:17 GMT",
        "updated_at": "Wednesday Mar 03, 2021 at 01:00 GMT",
        "closed_at": "Wednesday Mar 03, 2021 at 01:00 GMT",
        "merged_at": "Wednesday Mar 03, 2021 at 01:00 GMT"
    },
    {
        "key": "WT-7237",
        "number": 6361,
        "state": "closed",
        "title": "WT-7237 Creating component interface to improve class heirachy in the test framework.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 02, 2021 at 22:54 GMT",
        "updated_at": "Friday Mar 05, 2021 at 00:42 GMT",
        "closed_at": "Friday Mar 05, 2021 at 00:42 GMT",
        "merged_at": "Friday Mar 05, 2021 at 00:42 GMT"
    },
    {
        "key": "WT-7249",
        "number": 6360,
        "state": "closed",
        "title": "WT-7249 Improve the storage source extension API.",
        "body": "Add a way to get a storage source by name.\r\nGive WT_LOCATION_HANDLE a close method.\r\nAdd API doc comments to tighten up the API behavior.\r\nAdjust the example according to the new API.\r\nMade some small style fixes in the example as well.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 02, 2021 at 18:37 GMT",
        "updated_at": "Wednesday Mar 03, 2021 at 17:51 GMT",
        "closed_at": "Wednesday Mar 03, 2021 at 17:51 GMT",
        "merged_at": "Wednesday Mar 03, 2021 at 17:51 GMT"
    },
    {
        "key": "WT-7072",
        "number": 6359,
        "state": "closed",
        "title": "WT-7072 Column store example",
        "body": "ex_col_store.c provides an example use case of the column-store API. A table is defined with columns to store weather data and column groups to allow multiple columns to be accessed through a single cursor. The data is randomly populated and example operations are performed on the table:\r\nOp 1: Find average data given a location\r\nOp 2: Find max/min temperature data given a time range\r\nOp 3: Update temperature from Celsius to Fahrenheit\r\nOp 4: Calculate chance of rain given humidity and pressure\r\nOp 5: Remove the data for a given country",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 02, 2021 at 05:50 GMT",
        "updated_at": "Monday Mar 08, 2021 at 00:20 GMT",
        "closed_at": "Monday Mar 08, 2021 at 00:20 GMT",
        "merged_at": "Monday Mar 08, 2021 at 00:20 GMT"
    },
    {
        "key": "WT-7229",
        "number": 6358,
        "state": "closed",
        "title": "WT-7229 Align out of order and mixed mode handling",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 02, 2021 at 05:30 GMT",
        "updated_at": "Tuesday Apr 13, 2021 at 11:18 GMT",
        "closed_at": "Tuesday Apr 13, 2021 at 11:18 GMT",
        "merged_at": "Tuesday Apr 13, 2021 at 11:18 GMT"
    },
    {
        "key": "WT-7120",
        "number": 6357,
        "state": "closed",
        "title": "WT-7120 Add variable-length column store to RTS for updates written to the data store with history",
        "body": "This PR extends upon WT-7119 by adding support to RTS for updates in the data store that have history. The logic for searching the history store is similar to __rollback_row_ondisk_fixup_key with changes made to how the key is used and how the updates are applied. ",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 02, 2021 at 04:46 GMT",
        "updated_at": "Monday Mar 08, 2021 at 03:51 GMT",
        "closed_at": "Monday Mar 08, 2021 at 03:51 GMT",
        "merged_at": "Monday Mar 08, 2021 at 03:51 GMT"
    },
    {
        "key": "WT-7120",
        "number": 6356,
        "state": "closed",
        "title": "WT-7120 Add variable-length column store to RTS for updates written to the data store with history",
        "body": "",
        "base_ref": "master",
        "created_at": "Tuesday Mar 02, 2021 at 04:43 GMT",
        "updated_at": "Tuesday Mar 02, 2021 at 04:44 GMT",
        "closed_at": "Tuesday Mar 02, 2021 at 04:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7254",
        "number": 6355,
        "state": "closed",
        "title": "WT-7254 clean function names inside cur_hs",
        "body": "This ticket involves renaming some of the functions inside cur_hs.c, some of the functions need **__wt** removed as it is only used inside the file. This ticket also involves changing the **hs_cursor** name back to old convention of **curhs**",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Monday Mar 01, 2021 at 22:41 GMT",
        "updated_at": "Tuesday Mar 02, 2021 at 03:26 GMT",
        "closed_at": "Tuesday Mar 02, 2021 at 03:26 GMT",
        "merged_at": "Tuesday Mar 02, 2021 at 03:26 GMT"
    },
    {
        "key": "WT-7257",
        "number": 6354,
        "state": "closed",
        "title": "WT-7257 RTS test to skip pages that don't have unstable updates",
        "body": "Scenario when the database is restarted multiple times with having\r\nmore transaction ids than the saved checkpoint information shouldn't\r\nload unnecessary pages that are modified a few restarts earlier.",
        "base_ref": "develop",
        "created_at": "Monday Mar 01, 2021 at 10:21 GMT",
        "updated_at": "Wednesday Mar 03, 2021 at 04:46 GMT",
        "closed_at": "Wednesday Mar 03, 2021 at 04:46 GMT",
        "merged_at": "Wednesday Mar 03, 2021 at 04:46 GMT"
    },
    {
        "key": "WT-6819",
        "number": 6353,
        "state": "closed",
        "title": "WT-6819 Allowing sweeping handles with active history.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 01, 2021 at 09:45 GMT",
        "updated_at": "Thursday Mar 04, 2021 at 02:23 GMT",
        "closed_at": "Thursday Mar 04, 2021 at 02:23 GMT",
        "merged_at": "Thursday Mar 04, 2021 at 02:23 GMT"
    },
    {
        "key": "WT-6163",
        "number": 6352,
        "state": "closed",
        "title": "WT-6163 Fold pinned existence check into __wt_txn_pinned_timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 01, 2021 at 00:14 GMT",
        "updated_at": "Tuesday Mar 02, 2021 at 04:32 GMT",
        "closed_at": "Tuesday Mar 02, 2021 at 04:32 GMT",
        "merged_at": "Tuesday Mar 02, 2021 at 04:32 GMT"
    },
    {
        "key": "WT-6926",
        "number": 6351,
        "state": "closed",
        "title": "WT-6926 2021 Copyright notices",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 28, 2021 at 23:13 GMT",
        "updated_at": "Monday Mar 01, 2021 at 10:01 GMT",
        "closed_at": "Monday Mar 01, 2021 at 10:01 GMT",
        "merged_at": "Monday Mar 01, 2021 at 10:01 GMT"
    },
    {
        "key": "WT-7252",
        "number": 6350,
        "state": "closed",
        "title": "WT-7252 Remove redundant code",
        "body": "Remove redundant code which was pushed as part of WT-6673",
        "base_ref": "develop",
        "created_at": "Sunday Feb 28, 2021 at 22:53 GMT",
        "updated_at": "Sunday Feb 28, 2021 at 23:59 GMT",
        "closed_at": "Sunday Feb 28, 2021 at 23:59 GMT",
        "merged_at": "Sunday Feb 28, 2021 at 23:59 GMT"
    },
    {
        "key": "WT-7210",
        "number": 6349,
        "state": "closed",
        "title": "WT-7210 Add testing for import/export while a backup cursor is open",
        "body": "This ticket involves adding a python test that tests doing a live import while a backup cursor is open.",
        "base_ref": "develop",
        "created_at": "Friday Feb 26, 2021 at 05:18 GMT",
        "updated_at": "Tuesday Mar 02, 2021 at 04:23 GMT",
        "closed_at": "Tuesday Mar 02, 2021 at 04:23 GMT",
        "merged_at": "Tuesday Mar 02, 2021 at 04:23 GMT"
    },
    {
        "key": "WT-7246",
        "number": 6348,
        "state": "closed",
        "title": "WT-7246 Remove old HS cursor from session",
        "body": "Remove the deprecated HS cursor as part of the history store project. This also involves the code that affects running the **hs_cursor** from the session. Also added in some close to cursors that would be left open. Ran a patch build to make sure that deleted changes are fine.",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Friday Feb 26, 2021 at 05:11 GMT",
        "updated_at": "Monday Mar 01, 2021 at 21:48 GMT",
        "closed_at": "Monday Mar 01, 2021 at 21:48 GMT",
        "merged_at": "Monday Mar 01, 2021 at 21:48 GMT"
    },
    {
        "key": "WT-6853",
        "number": 6347,
        "state": "closed",
        "title": "WT-6853 Creation of workload operation tracking component",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 26, 2021 at 01:27 GMT",
        "updated_at": "Monday Mar 01, 2021 at 03:58 GMT",
        "closed_at": "Monday Mar 01, 2021 at 03:58 GMT",
        "merged_at": "Monday Mar 01, 2021 at 03:58 GMT"
    },
    {
        "key": "WT-7243",
        "number": 6346,
        "state": "closed",
        "title": "WT-7243 Fix test_bug025, don't expect RTS to always issue an error message",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 25, 2021 at 21:24 GMT",
        "updated_at": "Thursday Feb 25, 2021 at 22:44 GMT",
        "closed_at": "Thursday Feb 25, 2021 at 22:44 GMT",
        "merged_at": "Thursday Feb 25, 2021 at 22:44 GMT"
    },
    {
        "key": "WT-7242",
        "number": 6345,
        "state": "closed",
        "title": "WT-7242 Fix example to correctly use API for system and no encryption.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 25, 2021 at 17:17 GMT",
        "updated_at": "Thursday Feb 25, 2021 at 23:02 GMT",
        "closed_at": "Thursday Feb 25, 2021 at 23:02 GMT",
        "merged_at": "Thursday Feb 25, 2021 at 23:02 GMT"
    },
    {
        "key": "WT-7200",
        "number": 6344,
        "state": "closed",
        "title": "WT-7200 Fix incorrect stop transaction id for record in HS",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Thursday Feb 25, 2021 at 04:15 GMT",
        "updated_at": "Sunday Feb 28, 2021 at 22:43 GMT",
        "closed_at": "Sunday Feb 28, 2021 at 22:43 GMT",
        "merged_at": "Sunday Feb 28, 2021 at 22:43 GMT"
    },
    {
        "key": "WT-7047",
        "number": 6343,
        "state": "closed",
        "title": "WT-7047 Use stable timestamp as required in test_prepare_hs04",
        "body": "In the current state, the test_prepare_hs04 can reach uncertain state if some of the pages with prepared updates are evicted due to cache pressure. I root caused this to absence of explicit stable timestamp. The aim of this PR is to use stable timestamp when required to make sure that the database will be in a defined state after crash and we can test the database in a more predictable manner.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 24, 2021 at 05:01 GMT",
        "updated_at": "Thursday Feb 25, 2021 at 22:56 GMT",
        "closed_at": "Thursday Feb 25, 2021 at 22:56 GMT",
        "merged_at": "Thursday Feb 25, 2021 at 22:56 GMT"
    },
    {
        "key": "WT-7238",
        "number": 6342,
        "state": "closed",
        "title": "WT-7238 Invalid memory address after constructing a thread_context object",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 24, 2021 at 03:14 GMT",
        "updated_at": "Wednesday Feb 24, 2021 at 03:52 GMT",
        "closed_at": "Wednesday Feb 24, 2021 at 03:52 GMT",
        "merged_at": "Wednesday Feb 24, 2021 at 03:52 GMT"
    },
    {
        "key": "WT-7208",
        "number": 6341,
        "state": "closed",
        "title": "WT-7208 Leave table cursor in a valid state when subordinate index fails to open",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2021 at 15:31 GMT",
        "updated_at": "Wednesday Feb 24, 2021 at 16:10 GMT",
        "closed_at": "Wednesday Feb 24, 2021 at 16:10 GMT",
        "merged_at": "Wednesday Feb 24, 2021 at 16:10 GMT"
    },
    {
        "key": "WT-7225",
        "number": 6340,
        "state": "closed",
        "title": "WT-7225 Restructure verify key function for the history store",
        "body": "This ticket refactors **__verify_key_hs** to use the new history store interface. Also included in this ticket is how we grab the hs cursor when printing out the page values from the btree, and adding a read committed flag, to allow history see the values visibly when running wt verify. ",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Tuesday Feb 23, 2021 at 03:35 GMT",
        "updated_at": "Thursday Feb 25, 2021 at 23:14 GMT",
        "closed_at": "Thursday Feb 25, 2021 at 23:14 GMT",
        "merged_at": "Thursday Feb 25, 2021 at 23:14 GMT"
    },
    {
        "key": "WT-7224",
        "number": 6339,
        "state": "closed",
        "title": "WT-7224 Moved test_config.c to src/config",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2021 at 02:24 GMT",
        "updated_at": "Tuesday Feb 23, 2021 at 02:53 GMT",
        "closed_at": "Tuesday Feb 23, 2021 at 02:53 GMT",
        "merged_at": "Tuesday Feb 23, 2021 at 02:53 GMT"
    },
    {
        "key": "WT-6430",
        "number": 6338,
        "state": "closed",
        "title": "WT-6430 and WT-7028 backported through BACKPORT-8558 and BACKPORT-8526",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Feb 23, 2021 at 00:55 GMT",
        "updated_at": "Tuesday Feb 23, 2021 at 01:25 GMT",
        "closed_at": "Tuesday Feb 23, 2021 at 01:25 GMT",
        "merged_at": "Tuesday Feb 23, 2021 at 01:25 GMT"
    },
    {
        "key": "WT-6851",
        "number": 6337,
        "state": "closed",
        "title": "WT-6851 Add thread management library",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2021 at 00:53 GMT",
        "updated_at": "Wednesday Feb 24, 2021 at 00:29 GMT",
        "closed_at": "Wednesday Feb 24, 2021 at 00:29 GMT",
        "merged_at": "Wednesday Feb 24, 2021 at 00:29 GMT"
    },
    {
        "key": "WT-6430",
        "number": 6336,
        "state": "closed",
        "title": "WT-6430 and WT-7028 backported through BACKPORT-8558 and BACKPORT-8526",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Feb 22, 2021 at 06:04 GMT",
        "updated_at": "Tuesday Feb 23, 2021 at 00:56 GMT",
        "closed_at": "Tuesday Feb 23, 2021 at 00:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6709",
        "number": 6335,
        "state": "closed",
        "title": "WT-6709 Remove timestamp queues that used to store read/durable timestamps",
        "body": "The locks around timestamp queues are causing performance problems when\r\nthere are multiple threads doing the queue insertion. Instead of queues,\r\neach session updates its own shared transaction structure with read and\r\ndurable timestamps. The readers pay penality of scanning all the sessions\r\nto find out the min/max durable and read timestamps.",
        "base_ref": "develop",
        "created_at": "Monday Feb 22, 2021 at 03:50 GMT",
        "updated_at": "Monday Mar 08, 2021 at 00:29 GMT",
        "closed_at": "Monday Mar 08, 2021 at 00:29 GMT",
        "merged_at": "Monday Mar 08, 2021 at 00:29 GMT"
    },
    {
        "key": "WT-5886",
        "number": 6334,
        "state": "closed",
        "title": "WT-5886 Compatibility with older versions of WT",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 22, 2021 at 00:12 GMT",
        "updated_at": "Thursday Mar 04, 2021 at 22:11 GMT",
        "closed_at": "Thursday Mar 04, 2021 at 22:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7028",
        "number": 6333,
        "state": "closed",
        "title": "WT-7028 Skip sweep if checkpoint is gathering handles (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Feb 19, 2021 at 03:56 GMT",
        "updated_at": "Saturday Feb 20, 2021 at 03:15 GMT",
        "closed_at": "Saturday Feb 20, 2021 at 03:15 GMT",
        "merged_at": "Saturday Feb 20, 2021 at 03:15 GMT"
    },
    {
        "key": "WT-6389",
        "number": 6332,
        "state": "closed",
        "title": "WT-6389 Assert that history store cursor lifespan is as expected",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Friday Feb 19, 2021 at 00:57 GMT",
        "updated_at": "Friday Feb 26, 2021 at 04:04 GMT",
        "closed_at": "Friday Feb 26, 2021 at 04:04 GMT",
        "merged_at": "Friday Feb 26, 2021 at 04:04 GMT"
    },
    {
        "key": "WT-7119",
        "number": 6331,
        "state": "closed",
        "title": "WT-7119 RTS Var-length col store no hs",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 19, 2021 at 00:08 GMT",
        "updated_at": "Tuesday Mar 02, 2021 at 01:58 GMT",
        "closed_at": "Tuesday Mar 02, 2021 at 01:58 GMT",
        "merged_at": "Tuesday Mar 02, 2021 at 01:58 GMT"
    },
    {
        "key": "WT-6430",
        "number": 6330,
        "state": "closed",
        "title": "WT-6430 Move WT_CONN_SERVER flags into their own field (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Feb 18, 2021 at 23:39 GMT",
        "updated_at": "Friday Feb 19, 2021 at 03:11 GMT",
        "closed_at": "Friday Feb 19, 2021 at 02:44 GMT",
        "merged_at": "Friday Feb 19, 2021 at 02:44 GMT"
    },
    {
        "key": "WT-7164",
        "number": 6329,
        "state": "closed",
        "title": "WT-7164 Merge Restructure history store project branch to develop",
        "body": "This is the project branch from Restructure history store project.\r\n\r\nI tried to summarise the changes done as part of the restructure history store project [here](https://docs.google.com/document/d/1NC8VdyJD7B6lUZ8ojMGK9laHJDkJU9nek3mHbQvTk7c/edit?usp=sharing). \r\n\r\nThe implementation of history store cursor is already part of the develop and hence those changes will not appear in this PR diff.\r\nThey can be found in files [src/cursor/cur_hs.c](https://github.com/wiredtiger/wiredtiger/blob/develop/src/cursor/cur_hs.c).\r\n \r\nThe changes in this PR represent the changes to the users of the history store from \"old way of accessing the history store\" --> \"using new history store cursor\".\r\n\r\nFeel free to tag me if anyone needs more context for the review.\r\nThis project branch is also under complete WT testing for the past two weeks successfully. \r\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 18, 2021 at 23:38 GMT",
        "updated_at": "Wednesday Mar 03, 2021 at 22:40 GMT",
        "closed_at": "Wednesday Mar 03, 2021 at 22:39 GMT",
        "merged_at": "Wednesday Mar 03, 2021 at 22:39 GMT"
    },
    {
        "key": "WT-7028",
        "number": 6328,
        "state": "closed",
        "title": "WT-7028 Skip sweep if checkpoint is gathering handles. (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Feb 18, 2021 at 04:38 GMT",
        "updated_at": "Friday Feb 19, 2021 at 03:41 GMT",
        "closed_at": "Friday Feb 19, 2021 at 03:41 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7045",
        "number": 6327,
        "state": "closed",
        "title": "WT-7045 Fix FileNotFoundError in simulate_crash_restart",
        "body": "This PR updates usages of the `simulate_crash_restart` and `copy_wiredtiger_home` helpers to be able to tolerate a potential race condition in the python tests. The error more specifically being a `FileNotFoundError` as a testing thread starts copying wiredtiger log files whilst they are being archived/removed by a background log server thread. In particular this PR adds the following key changes:\r\n* Try/Except block in`copy_wiredtiger_home` : To catch the case when a wiredtiger log file gets removed as its being copied\r\n* Updated the implementation of `simulate_crash_restart` to be a small wrapper around `copy_wiredtiger_home` due to near identical functionality + centralized the helper to remove code duplication.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 18, 2021 at 03:46 GMT",
        "updated_at": "Friday Feb 19, 2021 at 04:40 GMT",
        "closed_at": "Friday Feb 19, 2021 at 04:40 GMT",
        "merged_at": "Friday Feb 19, 2021 at 04:40 GMT"
    },
    {
        "key": "WT-7104",
        "number": 6326,
        "state": "closed",
        "title": "WT-7104 Redact user data from printlog output (v4.0 backport)",
        "body": "WT-7104 Redact user data from printlog output. (v4.2 backport) (#6308)\r\n    \r\n    \r\n\r\n-  WT-7104 Redact user data from printlog output.\r\n    \r\n- Reverse -W meaning so redaction is the default.\r\n    \r\n- Fix typo and use macro value.\r\n    \r\n- Fix printlog usage in test_txn08.py for redacting.\r\n    \r\n- Change -W to -u since it now means \"print user data\".\r\n    \r\n- Add more usage information.\r\n   \r\n- Rename and change the default conditional for redacting.\r\n    \r\n    (cherry picked from commit a64cc4a1666cc592db040e2136960840db56988c)\r\n    \r\n    Co-authored-by: sueloverso <sue@mongodb.com>\r\n    (cherry picked from commit a02d87c1385ca3408eea556fa9a59716ede35581)",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Feb 18, 2021 at 01:22 GMT",
        "updated_at": "Friday Feb 19, 2021 at 00:11 GMT",
        "closed_at": "Friday Feb 19, 2021 at 00:11 GMT",
        "merged_at": "Friday Feb 19, 2021 at 00:11 GMT"
    },
    {
        "key": "WT-7206",
        "number": 6325,
        "state": "closed",
        "title": "WT-7206 Update test framework to align with C++ style ",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 17, 2021 at 23:46 GMT",
        "updated_at": "Thursday Feb 18, 2021 at 22:19 GMT",
        "closed_at": "Thursday Feb 18, 2021 at 22:19 GMT",
        "merged_at": "Thursday Feb 18, 2021 at 22:19 GMT"
    },
    {
        "key": "WT-7217",
        "number": 6324,
        "state": "closed",
        "title": "WT-7217 Coverity: possible uninitialized variables.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 17, 2021 at 21:04 GMT",
        "updated_at": "Thursday Feb 18, 2021 at 16:03 GMT",
        "closed_at": "Thursday Feb 18, 2021 at 16:03 GMT",
        "merged_at": "Thursday Feb 18, 2021 at 16:03 GMT"
    },
    {
        "key": "WT-7214",
        "number": 6323,
        "state": "closed",
        "title": "WT-7214 Run macOS compile task on macos-1012 Evergreen distro",
        "body": "Switch the compile task back to using the older but more stable `macos-1012` Evergreen disto, to avoid being hit by the long queue issue on the newer `macos-1014` distro. Will add macOS compile task back into the PR testing scope once this change is merged.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 17, 2021 at 04:04 GMT",
        "updated_at": "Thursday Feb 18, 2021 at 04:26 GMT",
        "closed_at": "Thursday Feb 18, 2021 at 04:26 GMT",
        "merged_at": "Thursday Feb 18, 2021 at 04:26 GMT"
    },
    {
        "key": "WT-7099",
        "number": 6322,
        "state": "closed",
        "title": "WT-7099 Fix the assert not considering reinsert to history store after a prepared rollback",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 17, 2021 at 02:08 GMT",
        "updated_at": "Thursday Feb 18, 2021 at 09:59 GMT",
        "closed_at": "Thursday Feb 18, 2021 at 09:59 GMT",
        "merged_at": "Thursday Feb 18, 2021 at 09:59 GMT"
    },
    {
        "key": "WT-7211",
        "number": 6321,
        "state": "closed",
        "title": "WT-7211 Missing return statement in poc_test run()",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 16, 2021 at 23:49 GMT",
        "updated_at": "Wednesday Feb 17, 2021 at 00:26 GMT",
        "closed_at": "Wednesday Feb 17, 2021 at 00:26 GMT",
        "merged_at": "Wednesday Feb 17, 2021 at 00:26 GMT"
    },
    {
        "key": "WT-6180",
        "number": 6320,
        "state": "closed",
        "title": "WT-6180 Remove lower isolation level tests from join visibility test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 16, 2021 at 00:21 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:24 GMT",
        "closed_at": "Tuesday Feb 16, 2021 at 05:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6715",
        "number": 6319,
        "state": "closed",
        "title": "WT-6715 Document the behaviour of logged/non-logged tables",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 16, 2021 at 00:10 GMT",
        "updated_at": "Sunday Feb 21, 2021 at 23:45 GMT",
        "closed_at": "Sunday Feb 21, 2021 at 23:45 GMT",
        "merged_at": "Sunday Feb 21, 2021 at 23:45 GMT"
    },
    {
        "key": "WT-6850",
        "number": 6318,
        "state": "closed",
        "title": "WT-6850 Creation of the workload generator class",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 15, 2021 at 04:56 GMT",
        "updated_at": "Tuesday Feb 16, 2021 at 22:58 GMT",
        "closed_at": "Tuesday Feb 16, 2021 at 22:58 GMT",
        "merged_at": "Tuesday Feb 16, 2021 at 22:58 GMT"
    },
    {
        "key": "WT-6309",
        "number": 6317,
        "state": "closed",
        "title": "WT-6309 Add support for start/stop arguments to wt printlog command (v4.0 backport)",
        "body": "WT-6309 Add support for start/stop arguments to wt printlog command\r\n\r\n* Added optional arguments [-l start-file,start-offset]|[-l start-file,start-offset,end-file,end-offset] to start and stop the printlog at given LSN's. Details included in the printlog usage string.\r\n* Added python tests to test_txn08 to test the start, stop functionality.\r\n\r\n(cherry picked from commit e39ffb554160de902060cd063c4b1547ff6d5e1e)\r\nCo-authored-by: Sean Watt <sean.watt@mongodb.com>\r\n(cherry picked from commit 11457083d426362de4528ed9aee024d86f090dc2)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Feb 15, 2021 at 02:29 GMT",
        "updated_at": "Wednesday Feb 17, 2021 at 05:39 GMT",
        "closed_at": "Wednesday Feb 17, 2021 at 05:39 GMT",
        "merged_at": "Wednesday Feb 17, 2021 at 05:39 GMT"
    },
    {
        "key": "WT-7162",
        "number": 6316,
        "state": "closed",
        "title": "WT-7162 Removing c++ test frameworks for memory sanitizer testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 15, 2021 at 01:59 GMT",
        "updated_at": "Monday Feb 15, 2021 at 04:54 GMT",
        "closed_at": "Monday Feb 15, 2021 at 04:54 GMT",
        "merged_at": "Monday Feb 15, 2021 at 04:54 GMT"
    },
    {
        "key": "WT-7202",
        "number": 6315,
        "state": "closed",
        "title": "WT-7202 Check for no count in assertion.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 12, 2021 at 19:11 GMT",
        "updated_at": "Friday Feb 12, 2021 at 21:30 GMT",
        "closed_at": "Friday Feb 12, 2021 at 21:30 GMT",
        "merged_at": "Friday Feb 12, 2021 at 21:30 GMT"
    },
    {
        "key": "WT-6513",
        "number": 6314,
        "state": "closed",
        "title": "WT-6513 Increase HS internal page size, add stats for HS overflow keys",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 12, 2021 at 05:30 GMT",
        "updated_at": "Wednesday Feb 17, 2021 at 00:04 GMT",
        "closed_at": "Wednesday Feb 17, 2021 at 00:04 GMT",
        "merged_at": "Wednesday Feb 17, 2021 at 00:04 GMT"
    },
    {
        "key": "WT-6897",
        "number": 6313,
        "state": "closed",
        "title": "WT-6897 Create test with the functionality of history store dump",
        "body": "This ticket just creates a test to add coverage of the behaviour behind dumping the history store file. Currently the history store dump would print all values (including values older the globally visible tombstone). More information about how a globally visible tombstone is in the JIRA ticket.",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Friday Feb 12, 2021 at 05:06 GMT",
        "updated_at": "Sunday Feb 21, 2021 at 23:02 GMT",
        "closed_at": "Sunday Feb 21, 2021 at 23:02 GMT",
        "merged_at": "Sunday Feb 21, 2021 at 23:02 GMT"
    },
    {
        "key": "WT-7045",
        "number": 6312,
        "state": "closed",
        "title": "WT-7045 Disable log archiving in test_backup13 ",
        "body": "Added a small mitigation fix to test_backup13 to avoid a potential race condition after the backup test force stops an incremental backup. A race condition occurs as the python testing thread starts copying visible database files in the backup directory (at the OS-level) whilst a WT thread is archiving log files.\r\n\r\nThe race condition was hard to consistently reproduce leaving the code as it is. However I was able tweak the timing in testing to confirm the race was occurring between the test thread detecting the file (`os.listdir` & `os.path.isfile`) and it being archived by the time it attempts to copy the file `shutil.copy`. More specifically, if you modify the python test to very briefly yield/sleep between `os.path.isfile` and `shutil.copy` (in `simulate_crash_restart`) it reproduces the error consistently. \r\n\r\nI adopted a similar fix seen in WT-6425 to ensure the log files don't get archived before they get copied. ",
        "base_ref": "develop",
        "created_at": "Friday Feb 12, 2021 at 02:33 GMT",
        "updated_at": "Monday Feb 15, 2021 at 22:53 GMT",
        "closed_at": "Monday Feb 15, 2021 at 22:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7183",
        "number": 6311,
        "state": "closed",
        "title": "WT-7183 Updating test tagging documentation script to sort test file list prior to generation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 12, 2021 at 00:57 GMT",
        "updated_at": "Friday Feb 12, 2021 at 22:33 GMT",
        "closed_at": "Friday Feb 12, 2021 at 22:33 GMT",
        "merged_at": "Friday Feb 12, 2021 at 22:33 GMT"
    },
    {
        "key": "WT-6714",
        "number": 6310,
        "state": "closed",
        "title": "WT-6714 Remove usages of parblock in docs",
        "body": "This is incompatible with older versions of doxygen that we want\r\nto make the wiredtiger docs compatible with. This simply reverts\r\na change introduced in e99db726.",
        "base_ref": "develop",
        "created_at": "Friday Feb 12, 2021 at 00:54 GMT",
        "updated_at": "Friday Feb 12, 2021 at 01:47 GMT",
        "closed_at": "Friday Feb 12, 2021 at 01:47 GMT",
        "merged_at": "Friday Feb 12, 2021 at 01:47 GMT"
    },
    {
        "key": "WT-7192",
        "number": 6309,
        "state": "closed",
        "title": "WT-7192 Fixes for cached cursor sweep.",
        "body": "Simplify the WT_DHANDLE_CAN_REOPEN macro, it will no longer return true for some\r\nweird flag combinations.  Use this macro when reopening as a final check.\r\nWhen doing the sweep check, even if the cursor is otherwise\r\n\"reopenable\", don't allow sweeping of a cursor that is using the current\r\ndhandle. Remove the assertion that used to protect that case, as it\r\ncan no longer happen.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 11, 2021 at 19:36 GMT",
        "updated_at": "Friday Feb 12, 2021 at 00:35 GMT",
        "closed_at": "Friday Feb 12, 2021 at 00:14 GMT",
        "merged_at": "Friday Feb 12, 2021 at 00:14 GMT"
    },
    {
        "key": "WT-7104",
        "number": 6308,
        "state": "closed",
        "title": "WT-7104 Redact user data from printlog output. (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Feb 11, 2021 at 10:34 GMT",
        "updated_at": "Friday Feb 12, 2021 at 02:53 GMT",
        "closed_at": "Friday Feb 12, 2021 at 02:53 GMT",
        "merged_at": "Friday Feb 12, 2021 at 02:53 GMT"
    },
    {
        "key": "WT-6309",
        "number": 6307,
        "state": "closed",
        "title": "WT-6309 Add support for start/stop arguments to wt printlog command (v4.2 backport)",
        "body": "* Added optional arguments [-l start-file,start-offset]|[-l start-file,start-offset,end-file,end-offset] to start and stop the printlog at given LSN's. Details included in the printlog usage string.\r\n* Added python tests to test_txn08 to test the start, stop functionality.\r\n\r\n(cherry picked from commit e39ffb554160de902060cd063c4b1547ff6d5e1e)",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Feb 11, 2021 at 06:52 GMT",
        "updated_at": "Friday Feb 12, 2021 at 00:41 GMT",
        "closed_at": "Friday Feb 12, 2021 at 00:41 GMT",
        "merged_at": "Friday Feb 12, 2021 at 00:41 GMT"
    },
    {
        "key": "WT-4296",
        "number": 6306,
        "state": "closed",
        "title": "WT-4296 and WT-4614 v4.0 backports",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Feb 11, 2021 at 06:09 GMT",
        "updated_at": "Thursday Feb 11, 2021 at 23:06 GMT",
        "closed_at": "Thursday Feb 11, 2021 at 23:06 GMT",
        "merged_at": "Thursday Feb 11, 2021 at 23:06 GMT"
    },
    {
        "key": "WT-4296",
        "number": 6305,
        "state": "closed",
        "title": "WT-4296 WT-4614 v4.0 backports",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Feb 11, 2021 at 06:07 GMT",
        "updated_at": "Thursday Feb 11, 2021 at 23:06 GMT",
        "closed_at": "Thursday Feb 11, 2021 at 06:08 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7120",
        "number": 6304,
        "state": "closed",
        "title": "WT-7120 RTS Var-Length Col Store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 11, 2021 at 02:58 GMT",
        "updated_at": "Monday Mar 08, 2021 at 05:32 GMT",
        "closed_at": "Thursday Feb 25, 2021 at 05:45 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6673",
        "number": 6303,
        "state": "closed",
        "title": "WT-6673 RTS Fix inconsistent checkpoint",
        "body": "Rollback to stable to fix the inconsistent checkpoint by removing updates outside of the checkpoint snapshot.\r\n\r\n- All the RTS mechanisms will be modified for an additional transaction id check(only during recovery) in addition to the current timestamp check on each page/record level.\r\n- During RTS in recovery reset transaction ids based on write gen, re-initialize the connection's base write generation after rollback to stable, and update write_gens and base_write_gen of all the open dhandles to the connection's base write generation.\r\n- Add a new inconsistent checkpoint stats counter.\r\n- Add a new test to simulate the inconsistent checkpoint behavior.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 11, 2021 at 01:32 GMT",
        "updated_at": "Thursday Feb 25, 2021 at 04:26 GMT",
        "closed_at": "Thursday Feb 25, 2021 at 04:26 GMT",
        "merged_at": "Thursday Feb 25, 2021 at 04:26 GMT"
    },
    {
        "key": "WT-7184",
        "number": 6302,
        "state": "closed",
        "title": "WT-7184 add check for non-ASCII chars in documentation input files",
        "body": "The github diff doesn't show the bad characters very well, here's what they look like with `git diff`:\r\n```\r\n$ git diff develop src/docs/\r\ndiff --git a/src/docs/backup.dox b/src/docs/backup.dox\r\nindex 265253d89..5f333eca1 100644\r\n--- a/src/docs/backup.dox\r\n+++ b/src/docs/backup.dox\r\n@@ -121,7 +121,7 @@ The following is the procedure for incrementally backing up a database\r\n using block modifications:\r\n \r\n 1. Perform a full backup of the database (as described above), with the\r\n-additional configuration \\c incremental=(enabled=true,this_id=<E2><80><9D>ID1<E2><80><9D>).\r\n+additional configuration \\c incremental=(enabled=true,this_id=\"ID1\").\r\n The identifier specified in \\c this_id starts block tracking and that\r\n identifier can be used in the future as the source of an incremental\r\n backup.\r\ndiff --git a/src/docs/tool-xray.dox b/src/docs/tool-xray.dox\r\nindex 176fcaca7..b5e1d535d 100644\r\n--- a/src/docs/tool-xray.dox\r\n+++ b/src/docs/tool-xray.dox\r\n@@ -35,7 +35,7 @@ $ cd bench/wtperf\r\n $ ../../../bench/wtperf/runners/wtperf_xray.sh  ../../../bench/wtperf/runners/small-btree.wtperf\r\n @endcode\r\n \r\n-In general the usage is:<E2><80><A8><E2><80><A8>\r\n+In general the usage is:\r\n \r\n @code\r\n wtperf_xray.sh <wtperf-config-file> [-h output-directory] [wtperf other arguments]\r\n@@ -99,7 +99,7 @@ $ sudo apt install llvm\r\n LLVM needs to be version 8 or higher. Check the version like this:\r\n \r\n @code\r\n-$ llvm-config <E2><80><93>version\r\n+$ llvm-config -version\r\n @endcode\r\n \r\n If your distribution's default \\c llvm-config isn't from the 8 series, you'll\r\n\r\n```\r\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 11, 2021 at 00:38 GMT",
        "updated_at": "Friday Feb 12, 2021 at 00:56 GMT",
        "closed_at": "Thursday Feb 11, 2021 at 15:24 GMT",
        "merged_at": "Thursday Feb 11, 2021 at 15:24 GMT"
    },
    {
        "key": "WT-7181",
        "number": 6301,
        "state": "closed",
        "title": "WT-7181 Turn off LSM test",
        "body": "This PR will revert the WT-6717 [changes](https://github.com/wiredtiger/wiredtiger/pull/6224/files).",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 10, 2021 at 10:32 GMT",
        "updated_at": "Thursday Feb 11, 2021 at 01:00 GMT",
        "closed_at": "Thursday Feb 11, 2021 at 01:00 GMT",
        "merged_at": "Thursday Feb 11, 2021 at 01:00 GMT"
    },
    {
        "key": "WT-6714",
        "number": 6300,
        "state": "closed",
        "title": "WT-6714 Update API documentation for WT exposed APIs",
        "body": "This PR adds a small series of miscellaneous API doc updates to ensure descriptions are consistent with the implementation (+ minor formatting fixes). \r\nThis mostly touches the doc descriptions in `wiredtiger.in`and `api_data.py`. If there's anything I obviously missed, please let me know and I will add it to the PR!\r\n\r\n_When modifying the doc description I tried my best to refer to the ticket that made the change in the commit description (if preferred, will make sure to scrub the ticket number to avoid unnecessary githooks when squashing)_",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 10, 2021 at 03:02 GMT",
        "updated_at": "Thursday Feb 11, 2021 at 23:07 GMT",
        "closed_at": "Thursday Feb 11, 2021 at 23:07 GMT",
        "merged_at": "Thursday Feb 11, 2021 at 23:07 GMT"
    },
    {
        "key": "WT-6717",
        "number": 6299,
        "state": "closed",
        "title": "WT-6717 Restrict usage of LSM with compatible functionality",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 10, 2021 at 02:17 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:23 GMT",
        "closed_at": "Wednesday Feb 10, 2021 at 02:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7026",
        "number": 6298,
        "state": "closed",
        "title": "WT-7026 Atomically read and set ref->addr in case of race (v4.0 backport)",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Feb 09, 2021 at 23:15 GMT",
        "updated_at": "Wednesday Feb 10, 2021 at 07:45 GMT",
        "closed_at": "Wednesday Feb 10, 2021 at 07:45 GMT",
        "merged_at": "Wednesday Feb 10, 2021 at 07:45 GMT"
    },
    {
        "key": "WT-7026",
        "number": 6297,
        "state": "closed",
        "title": "WT-7026 Atomically read and set ref->addr in case of race (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Feb 09, 2021 at 03:28 GMT",
        "updated_at": "Tuesday Feb 09, 2021 at 23:11 GMT",
        "closed_at": "Tuesday Feb 09, 2021 at 23:11 GMT",
        "merged_at": "Tuesday Feb 09, 2021 at 23:11 GMT"
    },
    {
        "key": "WT-7174",
        "number": 6296,
        "state": "closed",
        "title": "WT-7174 Freeing configuration object, changing from std string to const char to avoid msan false positives.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 09, 2021 at 01:51 GMT",
        "updated_at": "Tuesday Feb 09, 2021 at 02:19 GMT",
        "closed_at": "Tuesday Feb 09, 2021 at 02:19 GMT",
        "merged_at": "Tuesday Feb 09, 2021 at 02:19 GMT"
    },
    {
        "key": "WT-7028",
        "number": 6295,
        "state": "closed",
        "title": "WT-7028 Skip sweep if checkpoint is gathering handles.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 08, 2021 at 20:15 GMT",
        "updated_at": "Tuesday Feb 09, 2021 at 18:45 GMT",
        "closed_at": "Tuesday Feb 09, 2021 at 18:45 GMT",
        "merged_at": "Tuesday Feb 09, 2021 at 18:45 GMT"
    },
    {
        "key": "WT-6950",
        "number": 6294,
        "state": "closed",
        "title": "WT-6950 Update of WiredTiger testing documentation sections",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 08, 2021 at 06:21 GMT",
        "updated_at": "Tuesday Feb 16, 2021 at 04:15 GMT",
        "closed_at": "Tuesday Feb 16, 2021 at 04:15 GMT",
        "merged_at": "Tuesday Feb 16, 2021 at 04:15 GMT"
    },
    {
        "key": "WT-6950",
        "number": 6293,
        "state": "closed",
        "title": "WT-6950 Create test coverage documentation landing page",
        "body": "Definition of the different sections of the test/README.md",
        "base_ref": "develop",
        "created_at": "Monday Feb 08, 2021 at 06:00 GMT",
        "updated_at": "Monday Feb 08, 2021 at 06:05 GMT",
        "closed_at": "Monday Feb 08, 2021 at 06:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5137",
        "number": 6292,
        "state": "closed",
        "title": "WT-5137 Switch to macos-1014 Evergreen distro",
        "body": "My testing patch build ran into the failure of WT-7045 3 times in a row, which may indicate the failure would become more frequently hit after switching to macos-1014. WT-7045 failed frequent enough on waterfall builds, and I labelled it as a CI-blocker so that it could be planned for the next sprint. ",
        "base_ref": "develop",
        "created_at": "Monday Feb 08, 2021 at 04:20 GMT",
        "updated_at": "Tuesday Feb 09, 2021 at 01:38 GMT",
        "closed_at": "Tuesday Feb 09, 2021 at 01:38 GMT",
        "merged_at": "Tuesday Feb 09, 2021 at 01:38 GMT"
    },
    {
        "key": "WT-7102",
        "number": 6291,
        "state": "closed",
        "title": "WT-7102 migrate full and incremental backup test functionalities",
        "body": "This PR is created from #6252, merging again due to not pushing PR final changes",
        "base_ref": "develop",
        "created_at": "Sunday Feb 07, 2021 at 23:33 GMT",
        "updated_at": "Sunday Feb 07, 2021 at 23:58 GMT",
        "closed_at": "Sunday Feb 07, 2021 at 23:58 GMT",
        "merged_at": "Sunday Feb 07, 2021 at 23:58 GMT"
    },
    {
        "key": "WT-7102",
        "number": 6290,
        "state": "closed",
        "title": "i Revert \"WT-7102 Migrate full and incremental backup functionalities into wtbackup class\"",
        "body": "Reverts wiredtiger/wiredtiger#6252",
        "base_ref": "develop",
        "created_at": "Sunday Feb 07, 2021 at 23:23 GMT",
        "updated_at": "Sunday Feb 07, 2021 at 23:23 GMT",
        "closed_at": "Sunday Feb 07, 2021 at 23:23 GMT",
        "merged_at": "Sunday Feb 07, 2021 at 23:23 GMT"
    },
    {
        "key": "WT-7039",
        "number": 6289,
        "state": "closed",
        "title": "WT-7039 Creating test configuration framework using the WiredTiger configuration API",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 07, 2021 at 22:46 GMT",
        "updated_at": "Sunday Feb 07, 2021 at 23:38 GMT",
        "closed_at": "Sunday Feb 07, 2021 at 23:38 GMT",
        "merged_at": "Sunday Feb 07, 2021 at 23:38 GMT"
    },
    {
        "key": "WT-7143",
        "number": 6288,
        "state": "closed",
        "title": "WT-7143 Collect data on failing assert for sweep current dhandle.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 05, 2021 at 21:32 GMT",
        "updated_at": "Tuesday Feb 09, 2021 at 22:22 GMT",
        "closed_at": "Tuesday Feb 09, 2021 at 22:22 GMT",
        "merged_at": "Tuesday Feb 09, 2021 at 22:22 GMT"
    },
    {
        "key": "WT-7163",
        "number": 6287,
        "state": "closed",
        "title": "WT-7163 Document printlog redacting.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 05, 2021 at 19:40 GMT",
        "updated_at": "Monday Feb 08, 2021 at 15:39 GMT",
        "closed_at": "Monday Feb 08, 2021 at 14:15 GMT",
        "merged_at": "Monday Feb 08, 2021 at 14:15 GMT"
    },
    {
        "key": "WT-7167",
        "number": 6286,
        "state": "closed",
        "title": "WT-7167 Do not perform forward compatibility test with wt dump/load",
        "body": "WT doesn't support dump and load from a newer version database by\r\nolder version of WT due to incompatibility with newer configuration\r\noptions that are added in newer releases. Don't test dump/load for\r\nforward compatibility.",
        "base_ref": "develop",
        "created_at": "Friday Feb 05, 2021 at 09:11 GMT",
        "updated_at": "Tuesday Feb 09, 2021 at 01:00 GMT",
        "closed_at": "Tuesday Feb 09, 2021 at 01:00 GMT",
        "merged_at": "Tuesday Feb 09, 2021 at 01:00 GMT"
    },
    {
        "key": "WT-7039",
        "number": 6285,
        "state": "closed",
        "title": "Revert \"WT-7039 Creating test configuration framework using the WiredTiger configuration API\"",
        "body": "Reverts wiredtiger/wiredtiger#6279",
        "base_ref": "develop",
        "created_at": "Friday Feb 05, 2021 at 03:12 GMT",
        "updated_at": "Friday Feb 05, 2021 at 03:13 GMT",
        "closed_at": "Friday Feb 05, 2021 at 03:13 GMT",
        "merged_at": "Friday Feb 05, 2021 at 03:13 GMT"
    },
    {
        "key": "WT-7159",
        "number": 6284,
        "state": "closed",
        "title": "WT-7159 Always write on-disk update as a full update to history store",
        "body": "The updates written to the data store are always full updates, but\r\nwhen these updates are moved into the history store by eviction due\r\nto further updates on the key, make sure that on-disk update is always\r\nwritten as full update even in the update list it is a modify, because\r\nthe on-disk update will be the base update for all the history store\r\nupdates that are previous to the on-disk update.\r\n\r\nDue to concurrent operation of checkpoint and eviction, it is possible\r\nthat history store may have more recent versions of a key than the\r\non-disk version. Without a proper base value in the history store,\r\nit can lead to wrong value being restored by the RTS.",
        "base_ref": "develop",
        "created_at": "Friday Feb 05, 2021 at 02:13 GMT",
        "updated_at": "Monday Feb 08, 2021 at 00:11 GMT",
        "closed_at": "Monday Feb 08, 2021 at 00:11 GMT",
        "merged_at": "Monday Feb 08, 2021 at 00:11 GMT"
    },
    {
        "key": "WT-7137",
        "number": 6283,
        "state": "closed",
        "title": "WT-7137 Update an assert to consider globally visible stop time for HS values",
        "body": "We added a new assert WT-6751 to verify we are not inserting duplicate key-value pairs to history store. This check doesn't consider the globally visible stop time on the existing values.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 04, 2021 at 21:59 GMT",
        "updated_at": "Friday Feb 05, 2021 at 00:14 GMT",
        "closed_at": "Thursday Feb 04, 2021 at 23:55 GMT",
        "merged_at": "Thursday Feb 04, 2021 at 23:55 GMT"
    },
    {
        "key": "WT-6840",
        "number": 6282,
        "state": "closed",
        "title": "WT-6840 Only build with LibFuzzer when configured with --enable-libfuzzer",
        "body": "There's been some fallout on the PPC machines due to some difference in the toolchain.\r\n\r\nIt's not worth getting into a discussion with the build team about what packages need to be installed on that variant. So I'm just going to disable it on PPC and make WT-7158 in case we see value in the future.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 04, 2021 at 00:40 GMT",
        "updated_at": "Friday Feb 05, 2021 at 03:01 GMT",
        "closed_at": "Friday Feb 05, 2021 at 03:01 GMT",
        "merged_at": "Friday Feb 05, 2021 at 03:01 GMT"
    },
    {
        "key": "WT-7087",
        "number": 6281,
        "state": "closed",
        "title": "WT-7087 Initial shared storage general API changes.",
        "body": "Here's an initial API. @ddanderson there is probably some overlap or conflict with some of your extension changes, either in files or naming.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2021 at 20:47 GMT",
        "updated_at": "Tuesday Feb 16, 2021 at 22:14 GMT",
        "closed_at": "Tuesday Feb 16, 2021 at 22:14 GMT",
        "merged_at": "Tuesday Feb 16, 2021 at 22:14 GMT"
    },
    {
        "key": "WT-7138",
        "number": 6280,
        "state": "closed",
        "title": "WT-7138 Do not perform fast truncate on pages with prepared updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2021 at 08:04 GMT",
        "updated_at": "Thursday Feb 04, 2021 at 00:02 GMT",
        "closed_at": "Thursday Feb 04, 2021 at 00:02 GMT",
        "merged_at": "Thursday Feb 04, 2021 at 00:02 GMT"
    },
    {
        "key": "WT-7039",
        "number": 6279,
        "state": "closed",
        "title": "WT-7039 Creating test configuration framework using the WiredTiger configuration API",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2021 at 02:09 GMT",
        "updated_at": "Friday Feb 05, 2021 at 02:43 GMT",
        "closed_at": "Friday Feb 05, 2021 at 02:43 GMT",
        "merged_at": "Friday Feb 05, 2021 at 02:43 GMT"
    },
    {
        "key": "WT-4649",
        "number": 6278,
        "state": "closed",
        "title": "WT-4649 Updating build system to allow for different C++ compilers",
        "body": "Added a check so C++ compilation is also enabled when gcc and g++ have the same version",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 02, 2021 at 23:14 GMT",
        "updated_at": "Sunday Feb 07, 2021 at 22:24 GMT",
        "closed_at": "Sunday Feb 07, 2021 at 22:24 GMT",
        "merged_at": "Sunday Feb 07, 2021 at 22:24 GMT"
    },
    {
        "key": "WT-7088",
        "number": 6277,
        "state": "closed",
        "title": "WT-7088 Shared Storage extension API.",
        "body": "Here's a first draft of the Shared Storage API, to elicit comments.  The example only tests creation of a shared storage handle, but there's no way currently to look one up.  I suspect the lookup will be done internally as a side effect of moving an object to shared storage, or creating a 'remote tiered' thing, but none of that is available yet.\r\n\r\nThe part that's most interesting to review now is `struct __wt_shared_storage` in `wiredtiger.in` .",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 02, 2021 at 16:41 GMT",
        "updated_at": "Friday Feb 19, 2021 at 22:46 GMT",
        "closed_at": "Friday Feb 19, 2021 at 22:46 GMT",
        "merged_at": "Friday Feb 19, 2021 at 22:46 GMT"
    },
    {
        "key": "WT-6354",
        "number": 6276,
        "state": "closed",
        "title": "WT-6354 Increase wt utility coverage with printlog, downgrade, upgrade tests",
        "body": "Extended the python util test set (test_utilX.py) with a series of small tests for the `upgrade`, `downgrade`, `printlog` functionality. This is intended to extend the wt utility test coverage where it was missing specific test coverage for the above functions.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 02, 2021 at 05:40 GMT",
        "updated_at": "Sunday Feb 07, 2021 at 23:41 GMT",
        "closed_at": "Sunday Feb 07, 2021 at 23:41 GMT",
        "merged_at": "Sunday Feb 07, 2021 at 23:41 GMT"
    },
    {
        "key": "WT-7146",
        "number": 6275,
        "state": "closed",
        "title": "WT-7146 Fix compile after syncing with develop",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Tuesday Feb 02, 2021 at 03:51 GMT",
        "updated_at": "Tuesday Feb 02, 2021 at 04:16 GMT",
        "closed_at": "Tuesday Feb 02, 2021 at 04:16 GMT",
        "merged_at": "Tuesday Feb 02, 2021 at 04:16 GMT"
    },
    {
        "key": "WT-5545",
        "number": 6274,
        "state": "closed",
        "title": "WT-5545 fixed length col store rts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 01, 2021 at 23:56 GMT",
        "updated_at": "Friday Feb 05, 2021 at 02:12 GMT",
        "closed_at": "Friday Feb 05, 2021 at 02:12 GMT",
        "merged_at": "Friday Feb 05, 2021 at 02:12 GMT"
    },
    {
        "key": "WT-6800",
        "number": 6273,
        "state": "closed",
        "title": "WT-6800 Insert one key per transaction to make test_txn24 pass on macOS",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 01, 2021 at 22:36 GMT",
        "updated_at": "Wednesday Feb 03, 2021 at 02:24 GMT",
        "closed_at": "Wednesday Feb 03, 2021 at 02:24 GMT",
        "merged_at": "Wednesday Feb 03, 2021 at 02:24 GMT"
    },
    {
        "key": "WT-6912",
        "number": 6272,
        "state": "closed",
        "title": "WT-6912 Architecture Guide - logging page.",
        "body": "This is ready for the first round of review.",
        "base_ref": "develop",
        "created_at": "Monday Feb 01, 2021 at 20:03 GMT",
        "updated_at": "Wednesday Feb 24, 2021 at 16:03 GMT",
        "closed_at": "Wednesday Feb 24, 2021 at 16:03 GMT",
        "merged_at": "Wednesday Feb 24, 2021 at 16:03 GMT"
    },
    {
        "key": "WT-7070",
        "number": 6271,
        "state": "closed",
        "title": "WT-7070 Triage column store HS test failures",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 01, 2021 at 02:13 GMT",
        "updated_at": "Thursday Feb 11, 2021 at 05:20 GMT",
        "closed_at": "Thursday Feb 11, 2021 at 05:20 GMT",
        "merged_at": "Thursday Feb 11, 2021 at 05:20 GMT"
    },
    {
        "key": "WT-6947",
        "number": 6270,
        "state": "closed",
        "title": "WT-6947 Auto generate test coverage documentation from test tags",
        "body": "- Created new script test_tag.py to generate documentation from tags in test files.\r\n- Added test_tag.py to the s_all script.\r\n- Valid tags are in test_tags.ok\r\n- Added more tags to test files and fixed some from WT-6946\r\n- Output is test_coverage.md ",
        "base_ref": "develop",
        "created_at": "Sunday Jan 31, 2021 at 23:39 GMT",
        "updated_at": "Tuesday Feb 02, 2021 at 05:04 GMT",
        "closed_at": "Tuesday Feb 02, 2021 at 05:04 GMT",
        "merged_at": "Tuesday Feb 02, 2021 at 05:04 GMT"
    },
    {
        "key": "WT-6901",
        "number": 6269,
        "state": "closed",
        "title": "WT-6901 Fix warning for doc spelling check",
        "body": "A doc spelling check warning was captured by the \"aws-perf\" machine which was running a relatively old version of aspell. Adding the related word into the spell.ok list to make spelling check happy. \r\n```\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nDocumentation spelling notes\r\nUpdate src/docs/spell.ok to remove warnings.\r\n\tdecrement\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\n```",
        "base_ref": "develop",
        "created_at": "Sunday Jan 31, 2021 at 22:13 GMT",
        "updated_at": "Sunday Jan 31, 2021 at 22:51 GMT",
        "closed_at": "Sunday Jan 31, 2021 at 22:51 GMT",
        "merged_at": "Sunday Jan 31, 2021 at 22:51 GMT"
    },
    {
        "key": "WT-7116",
        "number": 6268,
        "state": "closed",
        "title": "WT-7116 Add a wt dump/load to the compatibility test",
        "body": "This test is to ensure the newer version can able to dump an older\r\nversion database table and load it back.",
        "base_ref": "develop",
        "created_at": "Friday Jan 29, 2021 at 04:43 GMT",
        "updated_at": "Thursday Feb 04, 2021 at 00:03 GMT",
        "closed_at": "Thursday Feb 04, 2021 at 00:03 GMT",
        "merged_at": "Thursday Feb 04, 2021 at 00:03 GMT"
    },
    {
        "key": "WT-6567",
        "number": 6267,
        "state": "closed",
        "title": "WT-6567 Doc build spell check fix",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 28, 2021 at 22:45 GMT",
        "updated_at": "Friday Jan 29, 2021 at 01:43 GMT",
        "closed_at": "Friday Jan 29, 2021 at 01:43 GMT",
        "merged_at": "Friday Jan 29, 2021 at 01:43 GMT"
    },
    {
        "key": "WT-7072",
        "number": 6266,
        "state": "closed",
        "title": "Revert \"WT-7072 Add a column store example\"",
        "body": "Reverts wiredtiger/wiredtiger#6228",
        "base_ref": "develop",
        "created_at": "Thursday Jan 28, 2021 at 06:08 GMT",
        "updated_at": "Thursday Jan 28, 2021 at 06:08 GMT",
        "closed_at": "Thursday Jan 28, 2021 at 06:08 GMT",
        "merged_at": "Thursday Jan 28, 2021 at 06:08 GMT"
    },
    {
        "key": "WT-6772",
        "number": 6265,
        "state": "closed",
        "title": "WT-6772 Add support for prepared updates in datastore for test_hs09",
        "body": "This change allows the test to skip prepared updates in the datastore if eviction runs. ",
        "base_ref": "develop",
        "created_at": "Thursday Jan 28, 2021 at 02:47 GMT",
        "updated_at": "Thursday Jan 28, 2021 at 05:06 GMT",
        "closed_at": "Thursday Jan 28, 2021 at 05:06 GMT",
        "merged_at": "Thursday Jan 28, 2021 at 05:06 GMT"
    },
    {
        "key": "WT-6430",
        "number": 6264,
        "state": "closed",
        "title": "WT-6430 Move WT_CONN_SERVER flags into their own field.",
        "body": "@ddanderson and @keitharnoldsmith I needed to do this old ticket first for my API work as I was using up more conn->flags bits and we were running out. There should not be any surprises here and we have lots of bits available now.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 27, 2021 at 19:15 GMT",
        "updated_at": "Wednesday Jan 27, 2021 at 20:17 GMT",
        "closed_at": "Wednesday Jan 27, 2021 at 20:17 GMT",
        "merged_at": "Wednesday Jan 27, 2021 at 20:17 GMT"
    },
    {
        "key": "WT-7091",
        "number": 6263,
        "state": "closed",
        "title": "WT-7091 Restrict lsm tests with compatible backup increment.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 27, 2021 at 14:23 GMT",
        "updated_at": "Friday Jan 29, 2021 at 03:06 GMT",
        "closed_at": "Friday Jan 29, 2021 at 03:06 GMT",
        "merged_at": "Friday Jan 29, 2021 at 03:06 GMT"
    },
    {
        "key": "WT-6673",
        "number": 6262,
        "state": "closed",
        "title": "Revert \"WT-6673 RTS Fix inconsistent checkpoint\"",
        "body": "Reverts wiredtiger/wiredtiger#6146",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 27, 2021 at 07:51 GMT",
        "updated_at": "Wednesday Jan 27, 2021 at 07:51 GMT",
        "closed_at": "Wednesday Jan 27, 2021 at 07:51 GMT",
        "merged_at": "Wednesday Jan 27, 2021 at 07:51 GMT"
    },
    {
        "key": "WT-7117",
        "number": 6261,
        "state": "closed",
        "title": "WT-7117 RTS to apply modifies that are less than on-disk base update while restoring an update",
        "body": "Rollback to stable restores the full update from the history store modifies to replace\r\nan on-disk data store update. During this process, it must apply only the history store\r\nmodifies that are less than the on-disk data store update. Otherwise, it can lead to\r\na corrupted update that is being restored.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 27, 2021 at 03:39 GMT",
        "updated_at": "Monday Feb 01, 2021 at 04:23 GMT",
        "closed_at": "Monday Feb 01, 2021 at 04:23 GMT",
        "merged_at": "Monday Feb 01, 2021 at 04:23 GMT"
    },
    {
        "key": "WT-7091",
        "number": 6260,
        "state": "closed",
        "title": "Revert \"WT-7091 Restrict LSM tests with compatible backup configuration\"",
        "body": "Reverts wiredtiger/wiredtiger#6232",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 27, 2021 at 02:42 GMT",
        "updated_at": "Wednesday Jan 27, 2021 at 02:42 GMT",
        "closed_at": "Wednesday Jan 27, 2021 at 02:42 GMT",
        "merged_at": "Wednesday Jan 27, 2021 at 02:42 GMT"
    },
    {
        "key": "WT-7131",
        "number": 6259,
        "state": "closed",
        "title": "WT-7131 Tiered cursor should return error if configured with zero tiers",
        "body": "Add a couple of asserts where to verify the number of tiers is greater than zero.\r\n\r\nIncludes new test case to cover error handling.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 26, 2021 at 20:02 GMT",
        "updated_at": "Tuesday Jan 26, 2021 at 22:03 GMT",
        "closed_at": "Tuesday Jan 26, 2021 at 22:02 GMT",
        "merged_at": "Tuesday Jan 26, 2021 at 22:02 GMT"
    },
    {
        "key": "WT-7128",
        "number": 6258,
        "state": "closed",
        "title": "WT-7128 Coverity analysis defect 116993: Resource leak",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 26, 2021 at 15:46 GMT",
        "updated_at": "Tuesday Jan 26, 2021 at 19:29 GMT",
        "closed_at": "Tuesday Jan 26, 2021 at 19:29 GMT",
        "merged_at": "Tuesday Jan 26, 2021 at 19:29 GMT"
    },
    {
        "key": "WT-7127",
        "number": 6257,
        "state": "closed",
        "title": "WT-7127 Coverity analysis defect 116992: Unchecked return value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 26, 2021 at 15:38 GMT",
        "updated_at": "Tuesday Jan 26, 2021 at 18:04 GMT",
        "closed_at": "Tuesday Jan 26, 2021 at 18:04 GMT",
        "merged_at": "Tuesday Jan 26, 2021 at 18:04 GMT"
    },
    {
        "key": "WT-7126",
        "number": 6256,
        "state": "closed",
        "title": "WT-7126 Coverity analysis defect 116991: Explicit null dereferenced",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 26, 2021 at 15:32 GMT",
        "updated_at": "Tuesday Jan 26, 2021 at 20:26 GMT",
        "closed_at": "Tuesday Jan 26, 2021 at 20:26 GMT",
        "merged_at": "Tuesday Jan 26, 2021 at 20:26 GMT"
    },
    {
        "key": "WT-6901",
        "number": 6255,
        "state": "closed",
        "title": "WT-6901 Fill content for the cursor subpage in the architecture guide",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 25, 2021 at 19:30 GMT",
        "updated_at": "Friday Jan 29, 2021 at 16:24 GMT",
        "closed_at": "Friday Jan 29, 2021 at 16:24 GMT",
        "merged_at": "Friday Jan 29, 2021 at 16:24 GMT"
    },
    {
        "key": "WT-7121",
        "number": 6254,
        "state": "closed",
        "title": "WT-7121 Include log-structured allocation python tests in WT",
        "body": "Adding two missing of prototype log-structured allocation code.\r\n\r\nBoth pass without change.",
        "base_ref": "develop",
        "created_at": "Monday Jan 25, 2021 at 19:28 GMT",
        "updated_at": "Monday Jan 25, 2021 at 22:23 GMT",
        "closed_at": "Monday Jan 25, 2021 at 22:23 GMT",
        "merged_at": "Monday Jan 25, 2021 at 22:23 GMT"
    },
    {
        "key": "WT-7069",
        "number": 6253,
        "state": "closed",
        "title": "WT-7069 Adding column store support to tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 25, 2021 at 04:35 GMT",
        "updated_at": "Thursday Jan 28, 2021 at 05:52 GMT",
        "closed_at": "Thursday Jan 28, 2021 at 05:52 GMT",
        "merged_at": "Thursday Jan 28, 2021 at 05:52 GMT"
    },
    {
        "key": "WT-7102",
        "number": 6252,
        "state": "closed",
        "title": "WT-7102 Migrate full and incremental backup functionalities into wtbackup class",
        "body": "This ticket aims to improve on the refactoring of the backup classes, being a follow-up ticket from WT-6866. The functionality of **take_full_backup**, **take_incr_backup** and a new functionality called **take_log_backup** is now used as common code in the wtbackup class. The functionalities of what to return, and what to pass into the backup functions varied across different test files, thus the functions don't look exactly the same, and there were modifications need to be done, to allow commonality between different tests. ",
        "base_ref": "develop",
        "created_at": "Sunday Jan 24, 2021 at 23:16 GMT",
        "updated_at": "Sunday Feb 07, 2021 at 22:51 GMT",
        "closed_at": "Sunday Feb 07, 2021 at 22:51 GMT",
        "merged_at": "Sunday Feb 07, 2021 at 22:51 GMT"
    },
    {
        "key": "WT-7104",
        "number": 6251,
        "state": "closed",
        "title": "WT-7104 Redact user data from printlog, 4.2 branch.",
        "body": "@agorrod and @quchenhao here's a 4.2 version of the printlog redact changes. Again, this is only lightly tested and may not be what we want for the final code changes. But it gets the job done and can be used against a 4.2 generated log. Again this is NOT ready for merge.",
        "base_ref": "mongodb-4.2",
        "created_at": "Saturday Jan 23, 2021 at 01:30 GMT",
        "updated_at": "Monday Feb 01, 2021 at 21:36 GMT",
        "closed_at": "Monday Feb 01, 2021 at 21:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7104",
        "number": 6250,
        "state": "closed",
        "title": "WT-7104 Redact user data from printlog output.",
        "body": "@agorrod and @quchenhao here's a change to have printlog redact out all user data from printlog output, but still printing all WiredTiger related log records. It is only lightly tested and is NOT ready for merge. I ran `examples/c/ex_log` and then ran `wt -h ... printlog > prlog` and looked at the output and it seems correct. I'll put this in the ticket. ",
        "base_ref": "develop",
        "created_at": "Saturday Jan 23, 2021 at 01:02 GMT",
        "updated_at": "Tuesday Feb 02, 2021 at 20:53 GMT",
        "closed_at": "Tuesday Feb 02, 2021 at 20:10 GMT",
        "merged_at": "Tuesday Feb 02, 2021 at 20:10 GMT"
    },
    {
        "key": "WT-7114",
        "number": 6249,
        "state": "closed",
        "title": "WT-7114 Revert Makefile code to always run the prototype script.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 22, 2021 at 20:23 GMT",
        "updated_at": "Friday Jan 22, 2021 at 21:35 GMT",
        "closed_at": "Friday Jan 22, 2021 at 21:35 GMT",
        "merged_at": "Friday Jan 22, 2021 at 21:35 GMT"
    },
    {
        "key": "WT-7109",
        "number": 6248,
        "state": "closed",
        "title": "WT-7109 Retain no longer supported configuration options for backward compatibility",
        "body": "The removed options that exist as part of metadata of older versions.\r\nusing these older configuration string with newer versions can lead to\r\nproblems. To avoid unnecessary failures, parse the removed options and\r\nignore them.",
        "base_ref": "develop",
        "created_at": "Friday Jan 22, 2021 at 05:33 GMT",
        "updated_at": "Monday Jan 25, 2021 at 01:57 GMT",
        "closed_at": "Monday Jan 25, 2021 at 01:57 GMT",
        "merged_at": "Monday Jan 25, 2021 at 01:57 GMT"
    },
    {
        "key": "WT-0000",
        "number": 6247,
        "state": "closed",
        "title": "WT-0000 New History store cursor implementation for review",
        "body": "This is Project branch of PM-1981 new history store cursor implementation.\r\nThe new history store cursor implementation is part of develop as well, hence you will not find the implementation in this diff.\r\n\r\nThe diff shows the \"usage of old history store implementation\" VS \"usage of new history store implementation\"\r\n\r\nHistory store cursor implementation can be found at src/cursor/cur_hs.c\r\n\r\nReorganised history store code can be found at history",
        "base_ref": "develop",
        "created_at": "Friday Jan 22, 2021 at 05:29 GMT",
        "updated_at": "Thursday Feb 18, 2021 at 21:28 GMT",
        "closed_at": "Thursday Feb 18, 2021 at 21:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6946",
        "number": 6246,
        "state": "closed",
        "title": "WT-6946 Adding test tags to an initial set of test programs",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 22, 2021 at 00:56 GMT",
        "updated_at": "Friday Jan 22, 2021 at 03:34 GMT",
        "closed_at": "Friday Jan 22, 2021 at 03:34 GMT",
        "merged_at": "Friday Jan 22, 2021 at 03:34 GMT"
    },
    {
        "key": "WT-0000",
        "number": 6245,
        "state": "closed",
        "title": "WT-0000 New History store cursor implementation for review",
        "body": "This is Project branch of PM-1981 new history store cursor implementation.\r\nThe new history store cursor implementation is part of develop as well, hence you will not find the implementation in this diff.\r\n\r\nThe diff shows the \"usage of old history store implementation\" VS \"usage of new history store implementation\"\r\n\r\nHistory store cursor implementation can be found at [src/cursor/cur_hs.c](https://github.com/wiredtiger/wiredtiger/blob/pm-1981-hs-cursor-migration/src/cursor/cur_hs.c) \r\n\r\nReorganised history store code can be found at [history](https://github.com/wiredtiger/wiredtiger/blob/pm-1981-hs-cursor-migration/src/history)",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2021 at 22:57 GMT",
        "updated_at": "Friday Jan 22, 2021 at 05:28 GMT",
        "closed_at": "Friday Jan 22, 2021 at 05:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6504",
        "number": 6244,
        "state": "closed",
        "title": "WT-6504 Don't fallback to onpage value as base value if we see the onpage value in the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2021 at 22:17 GMT",
        "updated_at": "Friday Jan 29, 2021 at 01:43 GMT",
        "closed_at": "Friday Jan 29, 2021 at 01:43 GMT",
        "merged_at": "Friday Jan 29, 2021 at 01:43 GMT"
    },
    {
        "key": "WT-7068",
        "number": 6243,
        "state": "closed",
        "title": "WT-7068 Add column store support to test_hs03",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2021 at 03:58 GMT",
        "updated_at": "Friday Jan 22, 2021 at 02:20 GMT",
        "closed_at": "Friday Jan 22, 2021 at 02:20 GMT",
        "merged_at": "Friday Jan 22, 2021 at 02:20 GMT"
    },
    {
        "key": null,
        "number": 6242,
        "state": "closed",
        "title": "Wt 7068 add column store support to test hs03",
        "body": "",
        "base_ref": "master",
        "created_at": "Thursday Jan 21, 2021 at 03:39 GMT",
        "updated_at": "Thursday Jan 21, 2021 at 03:44 GMT",
        "closed_at": "Thursday Jan 21, 2021 at 03:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7004",
        "number": 6241,
        "state": "closed",
        "title": "WT-7004 Architecture guide page for checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 20, 2021 at 05:14 GMT",
        "updated_at": "Tuesday Feb 02, 2021 at 00:39 GMT",
        "closed_at": "Tuesday Feb 02, 2021 at 00:39 GMT",
        "merged_at": "Tuesday Feb 02, 2021 at 00:39 GMT"
    },
    {
        "key": "WT-2144",
        "number": 6240,
        "state": "closed",
        "title": "WT-2144 Deprecate support of overflow items",
        "body": "WT stores large values in the page itself and having overflow items\r\nis adding an additional I/O causing performance problems. Stop storing\r\nthe large key/values are overflow items and store them in the same\r\npage. Existing databases with overflow items still possible to read\r\nand we never write new large key/values are overflow items.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 20, 2021 at 02:17 GMT",
        "updated_at": "Tuesday Feb 09, 2021 at 00:28 GMT",
        "closed_at": "Tuesday Feb 09, 2021 at 00:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6898",
        "number": 6239,
        "state": "closed",
        "title": "WT-6898 Migrate dump to use the new history store cursor",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Wednesday Jan 20, 2021 at 02:10 GMT",
        "updated_at": "Thursday Feb 04, 2021 at 22:28 GMT",
        "closed_at": "Thursday Feb 04, 2021 at 22:28 GMT",
        "merged_at": "Thursday Feb 04, 2021 at 22:28 GMT"
    },
    {
        "key": "WT-7113",
        "number": 6238,
        "state": "closed",
        "title": "WT-7113 Integrate prototype tiered storage code into WT",
        "body": "Initial commit contains the basic tiered changes from LABS-19.\r\n\r\nOriginally not intended for merge, but after discussion with @agorrod we agreed the tiered storage work should periodically merge into develop.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2021 at 19:58 GMT",
        "updated_at": "Friday Jan 22, 2021 at 18:40 GMT",
        "closed_at": "Friday Jan 22, 2021 at 18:40 GMT",
        "merged_at": "Friday Jan 22, 2021 at 18:40 GMT"
    },
    {
        "key": "WT-7067",
        "number": 6237,
        "state": "closed",
        "title": "WT-7067 Add column store to test_hs01",
        "body": "Added column store configurations to make scenarios, however, found that scenario 3 fails, so, added a conditional statement on scenario 3, as durable check when timestamp is true is not supported in columnar store yet. \r\n\r\nThere is already a ticket to make durable check (timestamp = true) work. (WT-5545 Fix rollback to stable for fixed length columnar storage type objects)",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2021 at 05:56 GMT",
        "updated_at": "Wednesday Jan 20, 2021 at 02:38 GMT",
        "closed_at": "Wednesday Jan 20, 2021 at 02:38 GMT",
        "merged_at": "Wednesday Jan 20, 2021 at 02:38 GMT"
    },
    {
        "key": "WT-7071",
        "number": 6236,
        "state": "closed",
        "title": "WT-7071 Add column store support to test_hs16",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2021 at 05:29 GMT",
        "updated_at": "Wednesday Jan 20, 2021 at 03:43 GMT",
        "closed_at": "Wednesday Jan 20, 2021 at 03:43 GMT",
        "merged_at": "Wednesday Jan 20, 2021 at 03:43 GMT"
    },
    {
        "key": "WT-7086",
        "number": 6235,
        "state": "closed",
        "title": "WT-7086 Migrate rollback-to-stable code to new history store cursor interface",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Monday Jan 18, 2021 at 05:12 GMT",
        "updated_at": "Thursday Jan 21, 2021 at 03:13 GMT",
        "closed_at": "Thursday Jan 21, 2021 at 03:13 GMT",
        "merged_at": "Thursday Jan 21, 2021 at 03:13 GMT"
    },
    {
        "key": "WT-7038",
        "number": 6234,
        "state": "closed",
        "title": "WT-7038 Update headers to be C++ compatible",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 18, 2021 at 01:47 GMT",
        "updated_at": "Wednesday Jan 20, 2021 at 02:16 GMT",
        "closed_at": "Wednesday Jan 20, 2021 at 02:16 GMT",
        "merged_at": "Wednesday Jan 20, 2021 at 02:16 GMT"
    },
    {
        "key": "WT-6309",
        "number": 6233,
        "state": "closed",
        "title": "WT-6309 Add support for start/stop arguments to wt printlog command",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 18, 2021 at 01:40 GMT",
        "updated_at": "Monday Jan 25, 2021 at 03:16 GMT",
        "closed_at": "Monday Jan 25, 2021 at 03:16 GMT",
        "merged_at": "Monday Jan 25, 2021 at 03:16 GMT"
    },
    {
        "key": "WT-7091",
        "number": 6232,
        "state": "closed",
        "title": "WT-7091 Restrict LSM tests with compatible backup configuration",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 15, 2021 at 03:13 GMT",
        "updated_at": "Wednesday Jan 27, 2021 at 02:42 GMT",
        "closed_at": "Wednesday Jan 20, 2021 at 23:09 GMT",
        "merged_at": "Wednesday Jan 20, 2021 at 23:09 GMT"
    },
    {
        "key": "WT-7089",
        "number": 6231,
        "state": "closed",
        "title": "WT-7089 Do not skip checkpointing objects with obsolete pages",
        "body": "WiredTiger skips checkpointing objects that are not modified to speed\r\nup the checkpoint process, but this can lead to problems to the objects\r\n(like history store) that have obsolete pages that are needs to be\r\nremoved as part of checkpoint garbage collection.\r\n\r\nTo address the obsolete page cleanup from tables that are not modified,\r\ncheck for any obsolete pages on the tables from a previous checkpoint\r\nand do not skip them if there exists any.",
        "base_ref": "develop",
        "created_at": "Friday Jan 15, 2021 at 03:06 GMT",
        "updated_at": "Sunday Jan 31, 2021 at 23:55 GMT",
        "closed_at": "Sunday Jan 31, 2021 at 23:55 GMT",
        "merged_at": "Sunday Jan 31, 2021 at 23:55 GMT"
    },
    {
        "key": "WT-7085",
        "number": 6230,
        "state": "closed",
        "title": "WT-7085 Migrate prepare commit and rollback to use the new hs cursor",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Friday Jan 15, 2021 at 02:04 GMT",
        "updated_at": "Thursday Jun 24, 2021 at 08:58 GMT",
        "closed_at": "Wednesday Jan 20, 2021 at 06:32 GMT",
        "merged_at": "Wednesday Jan 20, 2021 at 06:32 GMT"
    },
    {
        "key": "WT-7020",
        "number": 6229,
        "state": "closed",
        "title": "WT-7020 Assert the previous update timestamp of an item",
        "body": "Validate the previous update timestamps of an item that was already\r\nupdated by another transaction while updating it by current transaction.",
        "base_ref": "develop",
        "created_at": "Friday Jan 15, 2021 at 00:47 GMT",
        "updated_at": "Sunday Jan 17, 2021 at 22:50 GMT",
        "closed_at": "Sunday Jan 17, 2021 at 22:50 GMT",
        "merged_at": "Sunday Jan 17, 2021 at 22:50 GMT"
    },
    {
        "key": "WT-7072",
        "number": 6228,
        "state": "closed",
        "title": "WT-7072 Add a column store example",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 15, 2021 at 00:08 GMT",
        "updated_at": "Thursday Jan 28, 2021 at 06:10 GMT",
        "closed_at": "Thursday Jan 28, 2021 at 02:50 GMT",
        "merged_at": "Thursday Jan 28, 2021 at 02:50 GMT"
    },
    {
        "key": "WT-7072",
        "number": 6227,
        "state": "closed",
        "title": "WT-7072-col-store-example",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2021 at 23:39 GMT",
        "updated_at": "Thursday Jan 14, 2021 at 23:51 GMT",
        "closed_at": "Thursday Jan 14, 2021 at 23:48 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6567",
        "number": 6226,
        "state": "closed",
        "title": "WT-6567 Rollback to stable architecture guide",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2021 at 05:53 GMT",
        "updated_at": "Thursday Jan 28, 2021 at 11:33 GMT",
        "closed_at": "Thursday Jan 28, 2021 at 11:33 GMT",
        "merged_at": "Thursday Jan 28, 2021 at 11:33 GMT"
    },
    {
        "key": "WT-6963",
        "number": 6225,
        "state": "closed",
        "title": "WT-6963 Migrate hs verify to use the new history store cursor",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Thursday Jan 14, 2021 at 02:29 GMT",
        "updated_at": "Thursday Jan 21, 2021 at 21:48 GMT",
        "closed_at": "Thursday Jan 21, 2021 at 21:48 GMT",
        "merged_at": "Thursday Jan 21, 2021 at 21:48 GMT"
    },
    {
        "key": "WT-6717",
        "number": 6224,
        "state": "closed",
        "title": "WT-6717 Restrict usage of LSM with compatible functionality",
        "body": "I ran the patch build with these changes and I found 3 different failures but all these failures have already been reported and tracked with the tickets WT-6504, WT-7065, and WT-7010",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2021 at 02:04 GMT",
        "updated_at": "Wednesday Feb 10, 2021 at 00:53 GMT",
        "closed_at": "Thursday Jan 14, 2021 at 11:39 GMT",
        "merged_at": "Thursday Jan 14, 2021 at 11:39 GMT"
    },
    {
        "key": "WT-7038",
        "number": 6223,
        "state": "closed",
        "title": "Revert \"WT-7038 Update headers to be C++ compatible\"",
        "body": "Reverts wiredtiger/wiredtiger#6205",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2021 at 01:29 GMT",
        "updated_at": "Thursday Jan 14, 2021 at 01:29 GMT",
        "closed_at": "Thursday Jan 14, 2021 at 01:29 GMT",
        "merged_at": "Thursday Jan 14, 2021 at 01:29 GMT"
    },
    {
        "key": "WT-7083",
        "number": 6222,
        "state": "closed",
        "title": "WT-7083 Fixing compilation for older version of g++, adding cpp style\u2026",
        "body": "\u2026 header include and passing -std=c++11",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2021 at 01:14 GMT",
        "updated_at": "Wednesday Jan 20, 2021 at 05:22 GMT",
        "closed_at": "Thursday Jan 14, 2021 at 01:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6965",
        "number": 6221,
        "state": "closed",
        "title": "WT-6965 Migrate search to use the new hs cursor implementation",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Thursday Jan 14, 2021 at 01:09 GMT",
        "updated_at": "Monday Jan 18, 2021 at 04:51 GMT",
        "closed_at": "Monday Jan 18, 2021 at 04:51 GMT",
        "merged_at": "Monday Jan 18, 2021 at 04:51 GMT"
    },
    {
        "key": null,
        "number": 6220,
        "state": "closed",
        "title": "Fix build with clang",
        "body": "Rename src/checksum/power8/crc32.sx to src/checksum/power8/crc32.S.\r\nThe reason is that Clang refuses to build .sx files and needs .S for assembly.\r\n\r\nClang doesn't have ppc-asm.h header. When building with Clang, use the\r\nbundled ppc-asm.h file from GCC (this is what upstream at https://github.com/antonblanchard/crc32-vpmsum does).",
        "base_ref": "master",
        "created_at": "Wednesday Jan 13, 2021 at 21:03 GMT",
        "updated_at": "Friday Apr 16, 2021 at 04:35 GMT",
        "closed_at": "Friday Apr 16, 2021 at 04:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7026",
        "number": 6219,
        "state": "closed",
        "title": "WT-7026 Atomically read and set ref->addr in case of race.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 13, 2021 at 20:16 GMT",
        "updated_at": "Friday Jan 15, 2021 at 19:20 GMT",
        "closed_at": "Friday Jan 15, 2021 at 19:20 GMT",
        "merged_at": "Friday Jan 15, 2021 at 19:20 GMT"
    },
    {
        "key": "WT-7084",
        "number": 6218,
        "state": "closed",
        "title": "WT-7084 Fix assert calls in test_base01",
        "body": "Hi. It's a minor test bug. Please have a check. ",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 13, 2021 at 08:20 GMT",
        "updated_at": "Friday Jan 22, 2021 at 16:21 GMT",
        "closed_at": "Friday Jan 22, 2021 at 16:21 GMT",
        "merged_at": "Friday Jan 22, 2021 at 16:21 GMT"
    },
    {
        "key": "WT-6862",
        "number": 6217,
        "state": "closed",
        "title": "WT-6862 Remove duplicates in statistics descriptions",
        "body": "\u2026 and data source statistics",
        "base_ref": "develop",
        "created_at": "Monday Jan 11, 2021 at 23:02 GMT",
        "updated_at": "Wednesday Jan 13, 2021 at 00:51 GMT",
        "closed_at": "Wednesday Jan 13, 2021 at 00:51 GMT",
        "merged_at": "Wednesday Jan 13, 2021 at 00:51 GMT"
    },
    {
        "key": "WT-6862",
        "number": 6216,
        "state": "closed",
        "title": "WT-6862 Remove duplicate in statistics descriptions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 11, 2021 at 04:48 GMT",
        "updated_at": "Monday Jan 11, 2021 at 06:06 GMT",
        "closed_at": "Monday Jan 11, 2021 at 06:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-7027",
        "number": 6215,
        "state": "closed",
        "title": "WT-7027 Run the metadata checkpoint for force_stop at read-committed isolation for incremental backup (v4.2 backport)",
        "body": "Backporting WT-7027 (and dependent change in WT-6844) to v4.2\r\n\r\nCherry-picked commits: \r\n- WT-7027: `1bc96db` \r\n- WT-6844: `be01a2f`",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Jan 11, 2021 at 04:31 GMT",
        "updated_at": "Wednesday Jan 20, 2021 at 22:07 GMT",
        "closed_at": "Wednesday Jan 20, 2021 at 22:07 GMT",
        "merged_at": "Wednesday Jan 20, 2021 at 22:07 GMT"
    },
    {
        "key": "WT-7066",
        "number": 6214,
        "state": "closed",
        "title": "WT-7066 Point README doc link to develop/index.html",
        "body": "The existing doc link is not accessible because the 10.0.0 release has not been cut. Point the doc link to `develop/index.html` for now. ",
        "base_ref": "develop",
        "created_at": "Monday Jan 11, 2021 at 01:02 GMT",
        "updated_at": "Monday Jan 11, 2021 at 01:36 GMT",
        "closed_at": "Monday Jan 11, 2021 at 01:36 GMT",
        "merged_at": "Monday Jan 11, 2021 at 01:36 GMT"
    },
    {
        "key": "WT-7065",
        "number": 6213,
        "state": "closed",
        "title": "WT-7065 Add check for WT_DHANDLE_DEAD to assertion.",
        "body": "@michaelcahill this is a change to the assertion added with the split generation code change from a few weeks ago. It is failing when a file is being swept. I added a clause for a dead dhandle. Please review that it fits your understanding of that new assertion.",
        "base_ref": "develop",
        "created_at": "Friday Jan 08, 2021 at 20:17 GMT",
        "updated_at": "Thursday Jan 14, 2021 at 17:43 GMT",
        "closed_at": "Thursday Jan 14, 2021 at 17:43 GMT",
        "merged_at": "Thursday Jan 14, 2021 at 17:43 GMT"
    },
    {
        "key": "WT-6904",
        "number": 6212,
        "state": "closed",
        "title": "WT-6904 Architecture guide for transactions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 08, 2021 at 06:45 GMT",
        "updated_at": "Wednesday Feb 03, 2021 at 03:23 GMT",
        "closed_at": "Wednesday Feb 03, 2021 at 03:23 GMT",
        "merged_at": "Wednesday Feb 03, 2021 at 03:23 GMT"
    },
    {
        "key": "WT-7025",
        "number": 6211,
        "state": "closed",
        "title": "WT-7025 Coverity: Unused value op_ts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 06, 2021 at 22:31 GMT",
        "updated_at": "Monday Jan 11, 2021 at 02:37 GMT",
        "closed_at": "Monday Jan 11, 2021 at 02:35 GMT",
        "merged_at": "Monday Jan 11, 2021 at 02:35 GMT"
    },
    {
        "key": "WT-6605",
        "number": 6210,
        "state": "closed",
        "title": "WT-6605 Enhance rollback-to-stable verbose messaging",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 06, 2021 at 02:49 GMT",
        "updated_at": "Tuesday Jan 12, 2021 at 04:03 GMT",
        "closed_at": "Tuesday Jan 12, 2021 at 04:03 GMT",
        "merged_at": "Tuesday Jan 12, 2021 at 04:03 GMT"
    },
    {
        "key": "WT-6991",
        "number": 6209,
        "state": "closed",
        "title": "WT-6991 Make WT_IS_HS and WT_IS_METADATA consistent - both operating on dhandle",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 05, 2021 at 23:50 GMT",
        "updated_at": "Friday Jan 08, 2021 at 04:15 GMT",
        "closed_at": "Friday Jan 08, 2021 at 04:15 GMT",
        "merged_at": "Friday Jan 08, 2021 at 04:15 GMT"
    },
    {
        "key": "WT-6866",
        "number": 6208,
        "state": "closed",
        "title": "WT-6866 Refactor python backup tests initial base class",
        "body": "This ticket aims to refactor most of the python backup tests. There is currently alot of re-used functions are created locally in each backup test file. Therefore by creating a base class, we allow cleaner code, and remove the redundancy of functions in the tests. Currently an initial base class is defined, moving over the **setup_directories** and the **compare_backups** functions first, as a measure of how the base class will be formed and used across different backup tests",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 05, 2021 at 23:14 GMT",
        "updated_at": "Friday Jan 22, 2021 at 05:38 GMT",
        "closed_at": "Friday Jan 22, 2021 at 05:38 GMT",
        "merged_at": "Friday Jan 22, 2021 at 05:38 GMT"
    },
    {
        "key": "WT-6863",
        "number": 6207,
        "state": "closed",
        "title": "WT-6863 Reduce code duplication by improving statistics macros",
        "body": "Combining the update macros for CONN and DATA stats so the updates happen concurrently and reducing redundant statements",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 05, 2021 at 05:55 GMT",
        "updated_at": "Friday Jan 08, 2021 at 01:53 GMT",
        "closed_at": "Friday Jan 08, 2021 at 01:53 GMT",
        "merged_at": "Friday Jan 08, 2021 at 01:53 GMT"
    },
    {
        "key": "WT-7054",
        "number": 6206,
        "state": "closed",
        "title": "WT-7054 Change the order of key out-of-order prints to avoid race",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 05, 2021 at 01:42 GMT",
        "updated_at": "Wednesday Jan 06, 2021 at 12:07 GMT",
        "closed_at": "Wednesday Jan 06, 2021 at 12:07 GMT",
        "merged_at": "Wednesday Jan 06, 2021 at 12:07 GMT"
    },
    {
        "key": "WT-7038",
        "number": 6205,
        "state": "closed",
        "title": "WT-7038 Update headers to be C++ compatible",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 05, 2021 at 00:27 GMT",
        "updated_at": "Tuesday Jan 12, 2021 at 03:48 GMT",
        "closed_at": "Tuesday Jan 12, 2021 at 03:48 GMT",
        "merged_at": "Tuesday Jan 12, 2021 at 03:48 GMT"
    },
    {
        "key": "WT-7051",
        "number": 6204,
        "state": "closed",
        "title": "WT-7051 Fix wt3120_filesys to run standalone",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 31, 2020 at 02:12 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:43 GMT",
        "closed_at": "Tuesday Jan 05, 2021 at 00:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5111",
        "number": 6203,
        "state": "closed",
        "title": "WT-5111 Fix wt2909_checkpoint_integrity to run standalone",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 31, 2020 at 01:57 GMT",
        "updated_at": "Thursday Jan 07, 2021 at 10:16 GMT",
        "closed_at": "Thursday Jan 07, 2021 at 10:16 GMT",
        "merged_at": "Thursday Jan 07, 2021 at 10:16 GMT"
    },
    {
        "key": "WT-6677",
        "number": 6202,
        "state": "closed",
        "title": "WT-6677 Map read committed and uncommitted isolation levels to read only",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 29, 2020 at 22:31 GMT",
        "updated_at": "Tuesday Jan 05, 2021 at 11:25 GMT",
        "closed_at": "Tuesday Jan 05, 2021 at 11:25 GMT",
        "merged_at": "Tuesday Jan 05, 2021 at 11:25 GMT"
    },
    {
        "key": "WT-6882",
        "number": 6201,
        "state": "closed",
        "title": "WT-6882 Files created during incremental backup should be copied in full (v4.2 Backport)",
        "body": "(cherry picked from commit b73b201bd449fd34da516d7b5f29d16eb4de2f01)",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Dec 29, 2020 at 05:22 GMT",
        "updated_at": "Tuesday Dec 29, 2020 at 23:37 GMT",
        "closed_at": "Tuesday Dec 29, 2020 at 23:37 GMT",
        "merged_at": "Tuesday Dec 29, 2020 at 23:37 GMT"
    },
    {
        "key": "WT-6981",
        "number": 6200,
        "state": "closed",
        "title": "WT-6981 Add randomness to Python test suite runs",
        "body": "The purpose of this ticket is to investigate the possibility of adding more randomness to the python test suite. This can be done through giving the option to randomise the seed for random numbers. This achieves more test coverage through generating unpredictable random numbers through the option of **-R**,  and the option of running two specific random integer seeds is now available through **-S**\r\n\r\nThe reason for the generating the random seed from 1-2^32, is to make sure that the seed doesn't get 0, which isn't allowed in the formula for generating random numbers\r\n\r\nThe random seed will only be used in a test case when the \"@wttest.randomseed()\" is applied to the test case, therefore using the random seed for specific tests.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 23, 2020 at 22:42 GMT",
        "updated_at": "Wednesday Jan 20, 2021 at 02:58 GMT",
        "closed_at": "Wednesday Jan 20, 2021 at 02:58 GMT",
        "merged_at": "Wednesday Jan 20, 2021 at 02:58 GMT"
    },
    {
        "key": "WT-6996",
        "number": 6199,
        "state": "closed",
        "title": "WT-6996 Fix suite_random.rand32() in python test suite",
        "body": "Currently the suite_random.rand32() only returns values that are < 2^16, this PR fixes the precedence of operations to return 2^32 values. This PR needed to double check if it exposes any other tests through having a bigger value being returned",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 23, 2020 at 22:36 GMT",
        "updated_at": "Tuesday Dec 29, 2020 at 00:33 GMT",
        "closed_at": "Tuesday Dec 29, 2020 at 00:33 GMT",
        "merged_at": "Tuesday Dec 29, 2020 at 00:33 GMT"
    },
    {
        "key": "WT-6965",
        "number": 6198,
        "state": "closed",
        "title": "WT-6965 Migrate search to use the new history store cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 23, 2020 at 05:19 GMT",
        "updated_at": "Monday Feb 01, 2021 at 22:26 GMT",
        "closed_at": "Thursday Jan 14, 2021 at 01:10 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6313",
        "number": 6197,
        "state": "closed",
        "title": "WT-6313 Metadata-base-config",
        "body": "Added verify_metadata configuration to the exclusion list when writing to basecfg.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 23, 2020 at 04:39 GMT",
        "updated_at": "Wednesday Dec 23, 2020 at 23:53 GMT",
        "closed_at": "Wednesday Dec 23, 2020 at 23:53 GMT",
        "merged_at": "Wednesday Dec 23, 2020 at 23:53 GMT"
    },
    {
        "key": "WT-6888",
        "number": 6196,
        "state": "closed",
        "title": "WT-6888 WTPERF reports incorrect upper bound item count during populate",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 22, 2020 at 21:12 GMT",
        "updated_at": "Wednesday Dec 23, 2020 at 02:39 GMT",
        "closed_at": "Wednesday Dec 23, 2020 at 02:39 GMT",
        "merged_at": "Wednesday Dec 23, 2020 at 02:39 GMT"
    },
    {
        "key": "WT-5101",
        "number": 6195,
        "state": "closed",
        "title": "WT-5101 Make Clang Format recognise remaining loop macros",
        "body": "Updating the ForEachMacros list in the .clang-format to recognise the other ForEachMacros. ",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 22, 2020 at 05:10 GMT",
        "updated_at": "Wednesday Dec 23, 2020 at 03:02 GMT",
        "closed_at": "Wednesday Dec 23, 2020 at 03:02 GMT",
        "merged_at": "Wednesday Dec 23, 2020 at 03:02 GMT"
    },
    {
        "key": "WT-6990",
        "number": 6194,
        "state": "closed",
        "title": "WT-6990 New cursor debug configuration isn't considered in __wt_cursor_cache_get",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 22, 2020 at 04:28 GMT",
        "updated_at": "Tuesday Dec 22, 2020 at 05:20 GMT",
        "closed_at": "Tuesday Dec 22, 2020 at 05:20 GMT",
        "merged_at": "Tuesday Dec 22, 2020 at 05:20 GMT"
    },
    {
        "key": "WT-6839",
        "number": 6193,
        "state": "closed",
        "title": "WT-6839 Add API to query existing incremental backup IDs (v4.2 Backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Dec 22, 2020 at 04:19 GMT",
        "updated_at": "Tuesday Dec 22, 2020 at 23:10 GMT",
        "closed_at": "Tuesday Dec 22, 2020 at 23:10 GMT",
        "merged_at": "Tuesday Dec 22, 2020 at 23:10 GMT"
    },
    {
        "key": "WT-6710",
        "number": 6192,
        "state": "closed",
        "title": "WT-6710 Change default transaction isolation to snapshot",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 21, 2020 at 20:50 GMT",
        "updated_at": "Tuesday Dec 22, 2020 at 05:04 GMT",
        "closed_at": "Tuesday Dec 22, 2020 at 05:04 GMT",
        "merged_at": "Tuesday Dec 22, 2020 at 05:04 GMT"
    },
    {
        "key": "WT-6835",
        "number": 6191,
        "state": "closed",
        "title": "WT-6835 Add API to consolidate incremental backup information (#6100)",
        "body": "* WT-6835 Add consolidate API for incremental backup.\r\n\r\n* Add python test for new backup API setting.\r\n\r\n* Fix compiler warning.\r\n\r\n* Remove extraneous increment.\r\n\r\n* Review comments. Some fixes, a new test condition.\r\n\r\n* clang-format whitespace\r\n\r\n* Remove erroneous open_cursor line.\r\n\r\n* Fix typo\r\n\r\n(cherry picked from commit 56bac0f71605e24767a1002e4271ee2ff2271893)",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Dec 21, 2020 at 05:41 GMT",
        "updated_at": "Tuesday Dec 22, 2020 at 01:34 GMT",
        "closed_at": "Tuesday Dec 22, 2020 at 01:34 GMT",
        "merged_at": "Tuesday Dec 22, 2020 at 01:34 GMT"
    },
    {
        "key": "WT-0000",
        "number": 6190,
        "state": "closed",
        "title": "WT-0000 Test no camel case",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 21, 2020 at 05:32 GMT",
        "updated_at": "Monday Dec 21, 2020 at 06:14 GMT",
        "closed_at": "Monday Dec 21, 2020 at 06:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-0000",
        "number": 6189,
        "state": "closed",
        "title": "WT-0000 test no camel case",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 21, 2020 at 05:01 GMT",
        "updated_at": "Monday Dec 21, 2020 at 06:14 GMT",
        "closed_at": "Monday Dec 21, 2020 at 05:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6922",
        "number": 6188,
        "state": "closed",
        "title": "WT-6922 Add random consolidate testing to incr_backup. (#6137)",
        "body": "(cherry picked from commit 5b91477f3437adba4d50b538de580698695fbb64)",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Dec 18, 2020 at 07:12 GMT",
        "updated_at": "Tuesday Dec 22, 2020 at 22:55 GMT",
        "closed_at": "Tuesday Dec 22, 2020 at 22:55 GMT",
        "merged_at": "Tuesday Dec 22, 2020 at 22:55 GMT"
    },
    {
        "key": "WT-6969",
        "number": 6187,
        "state": "closed",
        "title": "WT-6969 Don't update the existing snapshot for autocommit transactions",
        "body": "Autocommit transactions gets committed at the end of the operation and\r\nupdating their snapshot can be a overhead if they already have a snapshot.",
        "base_ref": "develop",
        "created_at": "Friday Dec 18, 2020 at 04:53 GMT",
        "updated_at": "Monday Dec 21, 2020 at 21:57 GMT",
        "closed_at": "Monday Dec 21, 2020 at 21:57 GMT",
        "merged_at": "Monday Dec 21, 2020 at 21:57 GMT"
    },
    {
        "key": "WT-6743",
        "number": 6186,
        "state": "closed",
        "title": "WT-6743 Save and restore session's data handle during cursor reopen call",
        "body": "Since the internal reopen call may be called on cursors unrelated to the current API call (as part of cursor cache sweeping), it needs to save and restore the session's data handle.  This change also includes extra assertions.\r\n\r\nSetting statistics for reopen now happens in the \"file cursor\" code, as that is where the session data handle is valid.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 17, 2020 at 20:59 GMT",
        "updated_at": "Tuesday Jan 12, 2021 at 19:14 GMT",
        "closed_at": "Tuesday Jan 12, 2021 at 19:14 GMT",
        "merged_at": "Tuesday Jan 12, 2021 at 19:14 GMT"
    },
    {
        "key": "WT-7027",
        "number": 6185,
        "state": "closed",
        "title": "WT-7027 Run the metadata checkpoint for force_stop at read-committed isolation.",
        "body": "Metadata checkpoints assume they're running at read-committed isolation. MongoDB opens sessions explicitly at snapshot isolation. I wrapped the backup force_stop checkpoint call to enforce read-committed. I also updated our incremental backup test to use snapshot isolation and added the small reproducer for this.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 17, 2020 at 19:32 GMT",
        "updated_at": "Monday Dec 21, 2020 at 17:58 GMT",
        "closed_at": "Monday Dec 21, 2020 at 17:58 GMT",
        "merged_at": "Monday Dec 21, 2020 at 17:58 GMT"
    },
    {
        "key": "WT-6740",
        "number": 6184,
        "state": "closed",
        "title": "WT-6740 Fix unintentionally releasing the snapshot by mistreating the recovery session as an eviction session",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 17, 2020 at 05:16 GMT",
        "updated_at": "Friday Dec 18, 2020 at 04:34 GMT",
        "closed_at": "Thursday Dec 17, 2020 at 11:09 GMT",
        "merged_at": "Thursday Dec 17, 2020 at 11:09 GMT"
    },
    {
        "key": "WT-6848",
        "number": 6183,
        "state": "closed",
        "title": "WT-6848 Split new proof of concept cpp test into framework and test components",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 17, 2020 at 03:42 GMT",
        "updated_at": "Friday Dec 18, 2020 at 04:14 GMT",
        "closed_at": "Friday Dec 18, 2020 at 04:14 GMT",
        "merged_at": "Friday Dec 18, 2020 at 04:14 GMT"
    },
    {
        "key": "WT-7023",
        "number": 6182,
        "state": "closed",
        "title": "WT-7023 Extend how many snapshot operations format tracks",
        "body": "Trying to catch more complex snapshot isolation problems by remembering and doing repeated reads on more operations.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 16, 2020 at 06:32 GMT",
        "updated_at": "Tuesday Jan 19, 2021 at 00:51 GMT",
        "closed_at": "Tuesday Jan 19, 2021 at 00:51 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4625",
        "number": 6181,
        "state": "closed",
        "title": "WT-4625 Add a check for camelCase names",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 16, 2020 at 05:34 GMT",
        "updated_at": "Monday Dec 21, 2020 at 06:12 GMT",
        "closed_at": "Monday Dec 21, 2020 at 06:12 GMT",
        "merged_at": "Monday Dec 21, 2020 at 06:12 GMT"
    },
    {
        "key": "WT-6846",
        "number": 6180,
        "state": "closed",
        "title": "WT-6846 Adding include required for system call",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 16, 2020 at 05:14 GMT",
        "updated_at": "Wednesday Dec 16, 2020 at 05:36 GMT",
        "closed_at": "Wednesday Dec 16, 2020 at 05:36 GMT",
        "merged_at": "Wednesday Dec 16, 2020 at 05:36 GMT"
    },
    {
        "key": "WT-7019",
        "number": 6179,
        "state": "closed",
        "title": "WT-7019 Make hs cursor search near return either the smaller or larger key than the search key",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 16, 2020 at 04:20 GMT",
        "updated_at": "Monday Feb 01, 2021 at 22:26 GMT",
        "closed_at": "Wednesday Jan 13, 2021 at 00:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-9999",
        "number": 6178,
        "state": "closed",
        "title": "WT-9999 Pull request demo",
        "body": "No op change for demo ",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 16, 2020 at 04:09 GMT",
        "updated_at": "Wednesday Sep 08, 2021 at 22:14 GMT",
        "closed_at": "Wednesday Sep 08, 2021 at 22:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6861",
        "number": 6177,
        "state": "closed",
        "title": "WT-6861 Disable assertion when fetching prev_durable_ts",
        "body": "There seems to be some issue with `upd->durable_ts` being written to when it is already in the chain and visible to other threads. If I copy the `upd->durable_ts` and check it, I see that it was previously 0 and then soon after, gets written with the same value as `upd->start_ts`. I'm thinking that there may be a missing write barrier somewhere.\r\n\r\nI'm temporarily removing this assertion to stop the testing fallout and we can take our time to figure out what's going wrong here. I think the actual culprit is not related to WT-6861 so the rest of the code can remain.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 16, 2020 at 00:54 GMT",
        "updated_at": "Wednesday Dec 16, 2020 at 02:29 GMT",
        "closed_at": "Wednesday Dec 16, 2020 at 02:29 GMT",
        "merged_at": "Wednesday Dec 16, 2020 at 02:29 GMT"
    },
    {
        "key": "WT-6711",
        "number": 6176,
        "state": "closed",
        "title": "WT-6711 Add session reset snapshot API",
        "body": "This new API is used to reset the snapshot for snapshot isolation transactions to update their existing snapshot. Raises an error when this API is used for read-committed isolation mode.",
        "base_ref": "develop",
        "created_at": "Monday Dec 14, 2020 at 11:42 GMT",
        "updated_at": "Monday Dec 21, 2020 at 22:59 GMT",
        "closed_at": "Monday Dec 21, 2020 at 22:59 GMT",
        "merged_at": "Monday Dec 21, 2020 at 22:59 GMT"
    },
    {
        "key": "WT-6846",
        "number": 6175,
        "state": "closed",
        "title": "WT-6846 Initial test program for the new cpp test framework.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 14, 2020 at 05:29 GMT",
        "updated_at": "Wednesday Dec 16, 2020 at 02:21 GMT",
        "closed_at": "Wednesday Dec 16, 2020 at 02:21 GMT",
        "merged_at": "Wednesday Dec 16, 2020 at 02:21 GMT"
    },
    {
        "key": "WT-6568",
        "number": 6174,
        "state": "closed",
        "title": "WT-6568 Fix split generation use.",
        "body": "Splits rely on a generation (aka epoch) to prevent data structures being freed when they are reachable by a reader.  The pattern when overwriting needs to be: (1) overwrite a data structure; (2) read the current generation; (3) queue old data structures to be freed; (4) (optional) switch to a new generation.\r\n\r\nThat is, we need to accept during splits that data structures cannot be freed immediately.  Also, since other threads may be splitting in parallel, the global split generation can be incremented at any time (and new readers can start in the new generation).  So it is critical that we read the generation after all new data has been published. Subsequent readers (in at least that generation) will see the new data.\r\n\r\nIncrementing the split generation could be deferred until a thread is performing garbage collection.  However, since every eviction involves some garbage collection and we don't want any thread to wait for all readers to drain, this change bumps the generation after the split has completed (and all overwritten data is queued to be freed in the current generation).",
        "base_ref": "develop",
        "created_at": "Thursday Dec 10, 2020 at 08:22 GMT",
        "updated_at": "Sunday Dec 20, 2020 at 19:23 GMT",
        "closed_at": "Sunday Dec 20, 2020 at 19:23 GMT",
        "merged_at": "Sunday Dec 20, 2020 at 19:23 GMT"
    },
    {
        "key": "WT-0000",
        "number": 6173,
        "state": "closed",
        "title": "WT-0000 Adding sample comment to blah_txn() function",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 09, 2020 at 05:07 GMT",
        "updated_at": "Wednesday Dec 09, 2020 at 05:18 GMT",
        "closed_at": "Wednesday Dec 09, 2020 at 05:18 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6994",
        "number": 6172,
        "state": "closed",
        "title": "WT-6994 Dump the cursor page whenever key out of order detected",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 08, 2020 at 07:26 GMT",
        "updated_at": "Monday Dec 14, 2020 at 21:47 GMT",
        "closed_at": "Monday Dec 14, 2020 at 21:47 GMT",
        "merged_at": "Monday Dec 14, 2020 at 21:47 GMT"
    },
    {
        "key": "WT-6992",
        "number": 6171,
        "state": "closed",
        "title": "WT-6992 Add timing stress between datastore and history store search",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 08, 2020 at 04:59 GMT",
        "updated_at": "Thursday Dec 10, 2020 at 00:26 GMT",
        "closed_at": "Thursday Dec 10, 2020 at 00:26 GMT",
        "merged_at": "Thursday Dec 10, 2020 at 00:26 GMT"
    },
    {
        "key": "WT-6710",
        "number": 6170,
        "state": "closed",
        "title": "Revert \"WT-6710 Change default transaction isolation to snapshot\"",
        "body": "Reverts wiredtiger/wiredtiger#6114",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 08, 2020 at 01:05 GMT",
        "updated_at": "Tuesday Dec 08, 2020 at 01:06 GMT",
        "closed_at": "Tuesday Dec 08, 2020 at 01:06 GMT",
        "merged_at": "Tuesday Dec 08, 2020 at 01:06 GMT"
    },
    {
        "key": "WT-6962",
        "number": 6169,
        "state": "closed",
        "title": "Revert \"WT-6962 Check against NULL before dereferencing cursor btree\"",
        "body": "Reverts wiredtiger/wiredtiger#6159",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 08, 2020 at 00:40 GMT",
        "updated_at": "Tuesday Dec 08, 2020 at 01:05 GMT",
        "closed_at": "Tuesday Dec 08, 2020 at 01:05 GMT",
        "merged_at": "Tuesday Dec 08, 2020 at 01:05 GMT"
    },
    {
        "key": "WT-6983",
        "number": 6168,
        "state": "closed",
        "title": "WT-6983 Make wiredtiger.in text wrapping consistent across Python versions",
        "body": "It was recently found the text wrapping for `src/include/wiredtiger.in` when running `s_all` or `python api_config.py` under the `dist` directory became different for various versions of Python (2.7, 3.6, 3.7). It's suspected some updates to `re` or `textwrap` Python standard libraries may have triggered the text wrapping difference.\r\n\r\nThe solution is to make the line break regex to account for \"one or more\" word or certain punctuation, to make all `&nbsp;` stay on the same line (not wrapped in between). ",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 08, 2020 at 00:17 GMT",
        "updated_at": "Tuesday Dec 08, 2020 at 03:11 GMT",
        "closed_at": "Tuesday Dec 08, 2020 at 03:11 GMT",
        "merged_at": "Tuesday Dec 08, 2020 at 03:11 GMT"
    },
    {
        "key": "WT-6820",
        "number": 6167,
        "state": "closed",
        "title": "WT-6820 Use WT_TIME_WINDOW in hs_rec.c",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 07, 2020 at 05:09 GMT",
        "updated_at": "Tuesday Dec 08, 2020 at 04:13 GMT",
        "closed_at": "Tuesday Dec 08, 2020 at 04:13 GMT",
        "merged_at": "Tuesday Dec 08, 2020 at 04:13 GMT"
    },
    {
        "key": "WT-6831",
        "number": 6166,
        "state": "closed",
        "title": "WT-6831 Retry search if we race with prepare update commit/rollback",
        "body": "Irrespective of whether the prepared update is visible or not, retry\r\nthe search again when the prepared update is either committed/rollbacked\r\nin-parallel to search.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 06, 2020 at 22:28 GMT",
        "updated_at": "Tuesday Dec 08, 2020 at 22:38 GMT",
        "closed_at": "Tuesday Dec 08, 2020 at 22:38 GMT",
        "merged_at": "Tuesday Dec 08, 2020 at 22:38 GMT"
    },
    {
        "key": "WT-6964",
        "number": 6165,
        "state": "closed",
        "title": "WT-6964 Refactor history store reconciliation code to use new cursor interface",
        "body": "",
        "base_ref": "pm-1981-hs-cursor-migration",
        "created_at": "Friday Dec 04, 2020 at 05:14 GMT",
        "updated_at": "Thursday Jan 14, 2021 at 00:25 GMT",
        "closed_at": "Thursday Jan 14, 2021 at 00:25 GMT",
        "merged_at": "Thursday Jan 14, 2021 at 00:25 GMT"
    },
    {
        "key": "WT-6868",
        "number": 6164,
        "state": "closed",
        "title": "WT-6868 Don't cache history store cursor for operations on metadata",
        "body": "Do not cache HS cursor when operating on the metadata. Also do not set history store reconciliation flag, WT_REC_HS, when reconciling metadata or the history store itself. Some new asserts have been added and others modified to validate these assumptions.",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2020 at 03:42 GMT",
        "updated_at": "Monday Dec 07, 2020 at 06:28 GMT",
        "closed_at": "Monday Dec 07, 2020 at 06:28 GMT",
        "merged_at": "Monday Dec 07, 2020 at 06:28 GMT"
    },
    {
        "key": "WT-6986",
        "number": 6163,
        "state": "closed",
        "title": "WT-6986 Add UndoDB support to format.sh",
        "body": "I've finally got around to doing this and am planning to do a session with the team next week introducing UndoDB to them.\r\n\r\nOne thing I wanted to do was to add basic integration for running `live-record` via our `format.sh` script since we use it all the time. This is pretty primitive and doesn't support forwarding arguments to `live-record` but I think that's ok since `resmoke` doesn't do that either. The `resmoke` script does set some arguments to change the way that the recording is named but I don't think that's necessary for us.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 03, 2020 at 14:09 GMT",
        "updated_at": "Tuesday Dec 08, 2020 at 00:08 GMT",
        "closed_at": "Tuesday Dec 08, 2020 at 00:07 GMT",
        "merged_at": "Tuesday Dec 08, 2020 at 00:07 GMT"
    },
    {
        "key": "WT-6383",
        "number": 6162,
        "state": "closed",
        "title": "WT-6383 Add mixed mode validation",
        "body": "This PR is adding another type of key validation called `mixed_mode` as an alternative to the `key_consistent` validation we offer.\r\n\r\nThis setting triggers errors for out-of-order timestamps but allows the interleaving of mixed timestamped and non-timestamped updates. Non-timestamped updates are considered to reset the chain so we can have:\r\n\r\n```\r\n10 => 0 => 5\r\n```\r\nI don't think Mongo does this but it's easier to implement like this and fits better with how we expect mixed-mode to work in general.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 03, 2020 at 01:34 GMT",
        "updated_at": "Monday Dec 07, 2020 at 06:31 GMT",
        "closed_at": "Monday Dec 07, 2020 at 06:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6432",
        "number": 6161,
        "state": "closed",
        "title": "WT-6432 Add test case to misuse the timestamp API.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 02, 2020 at 16:29 GMT",
        "updated_at": "Monday Dec 14, 2020 at 18:20 GMT",
        "closed_at": "Monday Dec 14, 2020 at 18:20 GMT",
        "merged_at": "Monday Dec 14, 2020 at 18:20 GMT"
    },
    {
        "key": "WT-6802",
        "number": 6160,
        "state": "closed",
        "title": "WT-6802 Don't set operation timer for internal and reentry api calls",
        "body": "With this change, the cache stuck issue is not reproducing.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 01, 2020 at 03:19 GMT",
        "updated_at": "Monday Dec 28, 2020 at 23:12 GMT",
        "closed_at": "Monday Dec 28, 2020 at 23:12 GMT",
        "merged_at": "Monday Dec 28, 2020 at 23:12 GMT"
    },
    {
        "key": "WT-6962",
        "number": 6159,
        "state": "closed",
        "title": "WT-6962 Check against NULL before dereferencing cursor btree",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 30, 2020 at 23:58 GMT",
        "updated_at": "Wednesday Jul 14, 2021 at 09:01 GMT",
        "closed_at": "Tuesday Dec 01, 2020 at 00:45 GMT",
        "merged_at": "Tuesday Dec 01, 2020 at 00:45 GMT"
    },
    {
        "key": "WT-6961",
        "number": 6158,
        "state": "closed",
        "title": "WT-6961 RTS no stable timestamp",
        "body": "Skip RTS for empty tables and only during recovery and shutdown works with all tests are passed.",
        "base_ref": "develop",
        "created_at": "Monday Nov 30, 2020 at 01:51 GMT",
        "updated_at": "Monday Nov 30, 2020 at 07:31 GMT",
        "closed_at": "Monday Nov 30, 2020 at 07:31 GMT",
        "merged_at": "Monday Nov 30, 2020 at 07:31 GMT"
    },
    {
        "key": "WT-6938",
        "number": 6157,
        "state": "closed",
        "title": "Revert \"WT-6938 RTS no stable timestamp\"",
        "body": "Reverts wiredtiger/wiredtiger#6153",
        "base_ref": "develop",
        "created_at": "Sunday Nov 29, 2020 at 22:54 GMT",
        "updated_at": "Sunday Nov 29, 2020 at 23:22 GMT",
        "closed_at": "Sunday Nov 29, 2020 at 23:22 GMT",
        "merged_at": "Sunday Nov 29, 2020 at 23:22 GMT"
    },
    {
        "key": "WT-6895",
        "number": 6156,
        "state": "closed",
        "title": "WT-6895 Implement HS cursor update method",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 27, 2020 at 07:24 GMT",
        "updated_at": "Monday Nov 30, 2020 at 03:19 GMT",
        "closed_at": "Monday Nov 30, 2020 at 03:19 GMT",
        "merged_at": "Monday Nov 30, 2020 at 03:19 GMT"
    },
    {
        "key": "WT-6820",
        "number": 6155,
        "state": "closed",
        "title": "WT-6820 Create WT_HS_KEY and WT_HS_VALUE struct",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 26, 2020 at 02:33 GMT",
        "updated_at": "Monday Feb 01, 2021 at 22:26 GMT",
        "closed_at": "Monday Dec 07, 2020 at 04:43 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6672",
        "number": 6154,
        "state": "closed",
        "title": "Revert \"WT-6672 Don't increase the writegen number until RTS cleans up checkp\u2026\"",
        "body": "Reverts wiredtiger/wiredtiger#6115",
        "base_ref": "develop",
        "created_at": "Thursday Nov 26, 2020 at 01:33 GMT",
        "updated_at": "Thursday Nov 26, 2020 at 01:35 GMT",
        "closed_at": "Thursday Nov 26, 2020 at 01:35 GMT",
        "merged_at": "Thursday Nov 26, 2020 at 01:35 GMT"
    },
    {
        "key": "WT-6938",
        "number": 6153,
        "state": "closed",
        "title": "WT-6938 RTS no stable timestamp",
        "body": "These changes were reverted back because of HELP-20171. Now it is updated to skip RTS to process on empty files.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2020 at 09:29 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:43 GMT",
        "closed_at": "Thursday Nov 26, 2020 at 11:47 GMT",
        "merged_at": "Thursday Nov 26, 2020 at 11:47 GMT"
    },
    {
        "key": "WT-6956",
        "number": 6152,
        "state": "closed",
        "title": "WT-6956 Cut WiredTiger 10.0.0 release",
        "body": "The changes in this PR are for the upcoming standalone WiredTiger 10.0.0 release. The detailed procedure of cutting a standalone release can be found in this [wiki page](https://github.com/wiredtiger/wiredtiger/wiki/HOWTO%3ABuildARelease). \r\n\r\nAlso took the chance updated URL links to https. \r\n\r\nThe compatibility test changes for 10.0.0 (and log version 5) had been implemented as part of WT-5721 and WT-5890. ",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2020 at 07:25 GMT",
        "updated_at": "Monday Apr 12, 2021 at 01:26 GMT",
        "closed_at": "Monday Apr 12, 2021 at 01:26 GMT",
        "merged_at": "Monday Apr 12, 2021 at 01:26 GMT"
    },
    {
        "key": "WT-6958",
        "number": 6151,
        "state": "closed",
        "title": "WT-6958 Fix history store cursor position after operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2020 at 06:39 GMT",
        "updated_at": "Monday Dec 07, 2020 at 05:04 GMT",
        "closed_at": "Monday Dec 07, 2020 at 05:04 GMT",
        "merged_at": "Monday Dec 07, 2020 at 05:04 GMT"
    },
    {
        "key": "WT-6957",
        "number": 6150,
        "state": "closed",
        "title": "WT-6957 Reposition the cursor if __ht_hs_modify return WT_RESTART",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2020 at 06:34 GMT",
        "updated_at": "Wednesday Nov 25, 2020 at 21:49 GMT",
        "closed_at": "Wednesday Nov 25, 2020 at 21:49 GMT",
        "merged_at": "Wednesday Nov 25, 2020 at 21:49 GMT"
    },
    {
        "key": "WT-6507",
        "number": 6149,
        "state": "closed",
        "title": "WT-6507 Exit cache eviction worker after our operation has timed out (v4.0 backport) ",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Nov 25, 2020 at 05:10 GMT",
        "updated_at": "Tuesday Dec 01, 2020 at 00:38 GMT",
        "closed_at": "Tuesday Dec 01, 2020 at 00:38 GMT",
        "merged_at": "Tuesday Dec 01, 2020 at 00:38 GMT"
    },
    {
        "key": "WT-6894",
        "number": 6148,
        "state": "closed",
        "title": "WT-6894 Implement history store cursor next and prev methods",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2020 at 04:28 GMT",
        "updated_at": "Wednesday Dec 02, 2020 at 03:54 GMT",
        "closed_at": "Wednesday Dec 02, 2020 at 03:54 GMT",
        "merged_at": "Wednesday Dec 02, 2020 at 03:54 GMT"
    },
    {
        "key": "WT-6896",
        "number": 6147,
        "state": "closed",
        "title": "WT-6896 Initial implementation of hs cursor remove",
        "body": "I looked at the code and found that we are still only deleting hs records with 0 txnid and 0 timestamp tombstones. So the implementation of remove is easier than expected.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2020 at 03:28 GMT",
        "updated_at": "Monday Nov 30, 2020 at 00:41 GMT",
        "closed_at": "Monday Nov 30, 2020 at 00:41 GMT",
        "merged_at": "Monday Nov 30, 2020 at 00:41 GMT"
    },
    {
        "key": "WT-6673",
        "number": 6146,
        "state": "closed",
        "title": "WT-6673 RTS Fix inconsistent checkpoint",
        "body": "Rollback to stable to fix the inconsistent checkpoint by removing updates outside of the checkpoint snapshot. \r\n\r\n- All the RTS mechanisms will be modified for an additional transaction id check(only during recovery) in addition to the current timestamp check on each page/record level.\r\n-  Move RTS mechanism before log recovery and re-initialize the connection's base write generation after rollback to stable and update write_gens and base_write_gen of all the open dhandles to the connection's base write generation.\r\n- Add a new inconsistent checkpoint stats counter.\r\n- Add a new test to simulate the inconsistent checkpoint behavior.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 24, 2020 at 13:29 GMT",
        "updated_at": "Wednesday Jan 27, 2021 at 07:51 GMT",
        "closed_at": "Tuesday Jan 26, 2021 at 11:14 GMT",
        "merged_at": "Tuesday Jan 26, 2021 at 11:14 GMT"
    },
    {
        "key": "WT-6673",
        "number": 6145,
        "state": "closed",
        "title": "WT-6673 RTS fix inconsistent ckpt",
        "body": "Initial changes in Rollback to stable to fix the inconsistent checkpoint by removing updates outside of the checkpoint snapshot. ",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 24, 2020 at 12:38 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:44 GMT",
        "closed_at": "Tuesday Nov 24, 2020 at 13:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6924",
        "number": 6144,
        "state": "closed",
        "title": "WT-6924 Queue history store pages for urgent eviction when cache pressure is high",
        "body": "This is an alternate method for managing cache size violation due to HS content. This method relies on urgent eviction queue mechanism to evict HS pages when cache pressure is high.",
        "base_ref": "develop",
        "created_at": "Monday Nov 23, 2020 at 06:24 GMT",
        "updated_at": "Friday Jan 22, 2021 at 01:13 GMT",
        "closed_at": "Friday Jan 22, 2021 at 01:13 GMT",
        "merged_at": "Friday Jan 22, 2021 at 01:13 GMT"
    },
    {
        "key": "WT-6884",
        "number": 6143,
        "state": "closed",
        "title": "WT-6884 Clarify README to explain that PRs should target develop",
        "body": "Most external PRs are based on master so we almost always have to retarget the PR and get the contributor to resolve merge conflicts or rebase the changes.\r\n\r\nWe should add a line to the `README` to make this more clear.",
        "base_ref": "develop",
        "created_at": "Sunday Nov 22, 2020 at 23:59 GMT",
        "updated_at": "Friday Dec 04, 2020 at 14:17 GMT",
        "closed_at": "Friday Dec 04, 2020 at 14:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6712",
        "number": 6142,
        "state": "closed",
        "title": "Revert \"WT-6712 RTS no stable timestamp\"",
        "body": "Reverts wiredtiger/wiredtiger#6039",
        "base_ref": "develop",
        "created_at": "Sunday Nov 22, 2020 at 21:49 GMT",
        "updated_at": "Sunday Nov 22, 2020 at 21:50 GMT",
        "closed_at": "Sunday Nov 22, 2020 at 21:50 GMT",
        "merged_at": "Sunday Nov 22, 2020 at 21:50 GMT"
    },
    {
        "key": "WT-6924",
        "number": 6141,
        "state": "closed",
        "title": "WT-6924 Heuristics to limit cache growth beyond size limit",
        "body": "Existing mechanisms for eviction are very fair system. WT queues pages for pages based on the relative space each btree is occupying in the cache. Moreover, the queues are sorted often to evict the least recently used (LRU) pages first. This all worked relatively well before history store (HS) architecture landed. With HS, reconciling a non-HS page can generate even more HS contents. Therefore, any mechanism that evicts non-HS in hope for reducing cache pressure might make the situation even worse. Therefore, my current approach is to introduce some prioritisation for HS pages when cache pressure is high.",
        "base_ref": "develop",
        "created_at": "Friday Nov 20, 2020 at 01:05 GMT",
        "updated_at": "Monday Feb 01, 2021 at 22:20 GMT",
        "closed_at": "Sunday Nov 29, 2020 at 23:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6934",
        "number": 6140,
        "state": "closed",
        "title": "WT-6934 Fix wrongly return WT_NOTFOUND in __wt_hs_find_upd",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2020 at 22:39 GMT",
        "updated_at": "Monday Nov 23, 2020 at 03:41 GMT",
        "closed_at": "Monday Nov 23, 2020 at 03:41 GMT",
        "merged_at": "Monday Nov 23, 2020 at 03:41 GMT"
    },
    {
        "key": "WT-6845",
        "number": 6139,
        "state": "closed",
        "title": "WT-6845 Set session btree to HS when operating on history store",
        "body": "The session btree is accessed to find out the oldest_id and pinned_timestamp\r\nspecific to the btree during checkpoint is in progress to decide whether the\r\ncontents of the btree are obsolete or not. When operating on history store,\r\nset the session btree to HS to get proper values to have a proper visibility.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2020 at 04:42 GMT",
        "updated_at": "Wednesday Nov 25, 2020 at 06:53 GMT",
        "closed_at": "Wednesday Nov 25, 2020 at 06:53 GMT",
        "merged_at": "Wednesday Nov 25, 2020 at 06:53 GMT"
    },
    {
        "key": "WT-6925",
        "number": 6138,
        "state": "closed",
        "title": "WT-6925 Fix incorrect comment.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 17, 2020 at 16:38 GMT",
        "updated_at": "Tuesday Nov 17, 2020 at 18:34 GMT",
        "closed_at": "Tuesday Nov 17, 2020 at 18:34 GMT",
        "merged_at": "Tuesday Nov 17, 2020 at 18:34 GMT"
    },
    {
        "key": "WT-6922",
        "number": 6137,
        "state": "closed",
        "title": "WT-6922 Add random consolidate testing to incr_backup.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 16, 2020 at 19:48 GMT",
        "updated_at": "Tuesday Nov 17, 2020 at 13:34 GMT",
        "closed_at": "Tuesday Nov 17, 2020 at 13:34 GMT",
        "merged_at": "Tuesday Nov 17, 2020 at 13:34 GMT"
    },
    {
        "key": "WT-6883",
        "number": 6136,
        "state": "closed",
        "title": "WT-6883 Redo change for breaking up backup ranges and fix for EOF.",
        "body": "@keitharnoldsmith this is the same change from WT-6873 that showed hangs in test/format. The reason was that we needed to break out on getting EOF. I could easily reproduce the hangs. The file size can change during backup or by breaking up the large value from the cursor into smaller chunks we may read exactly on the EOF boundary. It no longer hangs with the addition of the fix.",
        "base_ref": "develop",
        "created_at": "Monday Nov 16, 2020 at 16:52 GMT",
        "updated_at": "Monday Nov 16, 2020 at 18:15 GMT",
        "closed_at": "Monday Nov 16, 2020 at 18:15 GMT",
        "merged_at": "Monday Nov 16, 2020 at 18:15 GMT"
    },
    {
        "key": "WT-6563",
        "number": 6135,
        "state": "closed",
        "title": "WT-6563 Add test confirming modify correctness.",
        "body": "Also extend the cursor API to allow dynamic configuration of forced eviction as a debug option.",
        "base_ref": "develop",
        "created_at": "Monday Nov 16, 2020 at 10:13 GMT",
        "updated_at": "Thursday Nov 19, 2020 at 07:25 GMT",
        "closed_at": "Thursday Nov 19, 2020 at 07:25 GMT",
        "merged_at": "Thursday Nov 19, 2020 at 07:25 GMT"
    },
    {
        "key": "WT-6916",
        "number": 6134,
        "state": "closed",
        "title": "WT-6916 Create stub subpages for architecture guide.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 13, 2020 at 20:06 GMT",
        "updated_at": "Saturday Nov 14, 2020 at 13:57 GMT",
        "closed_at": "Saturday Nov 14, 2020 at 13:57 GMT",
        "merged_at": "Saturday Nov 14, 2020 at 13:57 GMT"
    },
    {
        "key": "WT-6859",
        "number": 6133,
        "state": "closed",
        "title": "WT-6859 Initial implementation of hs cursor search near",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 13, 2020 at 09:23 GMT",
        "updated_at": "Thursday Dec 03, 2020 at 00:55 GMT",
        "closed_at": "Thursday Nov 19, 2020 at 22:16 GMT",
        "merged_at": "Thursday Nov 19, 2020 at 22:16 GMT"
    },
    {
        "key": "WT-6882",
        "number": 6132,
        "state": "closed",
        "title": "WT-6882 Files created during incremental backup should be copied in full.",
        "body": "@keitharnoldsmith the change turned out to be a lot smaller than expected. I will open a separate ticket to modify the test_incr_backup to vary the allocation size. There have been a handful (7-8) failures noted in the ticket. I have run this change on the seeds from all failures successfully with this change.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 11, 2020 at 14:30 GMT",
        "updated_at": "Friday Nov 13, 2020 at 22:22 GMT",
        "closed_at": "Friday Nov 13, 2020 at 22:22 GMT",
        "merged_at": "Friday Nov 13, 2020 at 22:22 GMT"
    },
    {
        "key": "WT-6858",
        "number": 6131,
        "state": "closed",
        "title": "WT-6858 Initial implementation for hs cursor insert",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 11, 2020 at 04:47 GMT",
        "updated_at": "Thursday Dec 03, 2020 at 00:55 GMT",
        "closed_at": "Monday Nov 16, 2020 at 05:37 GMT",
        "merged_at": "Monday Nov 16, 2020 at 05:37 GMT"
    },
    {
        "key": "WT-6706",
        "number": 6130,
        "state": "closed",
        "title": "WT-6706 Add table import repair functionality",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 09, 2020 at 01:50 GMT",
        "updated_at": "Thursday Nov 12, 2020 at 03:59 GMT",
        "closed_at": "Thursday Nov 12, 2020 at 03:59 GMT",
        "merged_at": "Thursday Nov 12, 2020 at 03:59 GMT"
    },
    {
        "key": "WT-6872",
        "number": 6129,
        "state": "closed",
        "title": "WT-6872 Fix linting errors",
        "body": "This is a follow-up PR to fix some linting errors from #6080.",
        "base_ref": "develop",
        "created_at": "Friday Nov 06, 2020 at 06:40 GMT",
        "updated_at": "Friday Nov 06, 2020 at 07:06 GMT",
        "closed_at": "Friday Nov 06, 2020 at 07:06 GMT",
        "merged_at": "Friday Nov 06, 2020 at 07:06 GMT"
    },
    {
        "key": "WT-6870",
        "number": 6128,
        "state": "closed",
        "title": "WT-6870 Rename history store statistic to better describe its use case.",
        "body": "\u2026ct actual work done",
        "base_ref": "develop",
        "created_at": "Friday Nov 06, 2020 at 00:31 GMT",
        "updated_at": "Friday Nov 06, 2020 at 04:31 GMT",
        "closed_at": "Friday Nov 06, 2020 at 04:31 GMT",
        "merged_at": "Friday Nov 06, 2020 at 04:31 GMT"
    },
    {
        "key": "WT-6678",
        "number": 6127,
        "state": "closed",
        "title": "WT-6678 Remove Huffman encoding support for keys",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 23:55 GMT",
        "updated_at": "Monday Nov 09, 2020 at 23:18 GMT",
        "closed_at": "Monday Nov 09, 2020 at 23:18 GMT",
        "merged_at": "Monday Nov 09, 2020 at 23:18 GMT"
    },
    {
        "key": "WT-6873",
        "number": 6126,
        "state": "closed",
        "title": "Revert \"WT-6873 Break up consolidated backup information into reasona\u2026",
        "body": "\u2026bly sized (#6124)\"\r\n\r\nThis reverts commit 927f059798d4b7cecd92f63eda9482feb300b42c.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 22:42 GMT",
        "updated_at": "Thursday Nov 05, 2020 at 22:47 GMT",
        "closed_at": "Thursday Nov 05, 2020 at 22:47 GMT",
        "merged_at": "Thursday Nov 05, 2020 at 22:47 GMT"
    },
    {
        "key": "WT-6824",
        "number": 6125,
        "state": "closed",
        "title": "WT-6824 Resolve UTF related issues for OS/X.",
        "body": "For 'wt dump -j' (JSON dumping), never try to print non-ASCII characters.\r\nRelying solely on isprint() to determine printability is a mistake for our\r\npurposes, that function is dependent on local for non-ASCII characters.\r\nIn test code, don't use the Python Unicode decoder except with printable chars.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 16:42 GMT",
        "updated_at": "Friday Nov 06, 2020 at 19:41 GMT",
        "closed_at": "Friday Nov 06, 2020 at 19:41 GMT",
        "merged_at": "Friday Nov 06, 2020 at 19:41 GMT"
    },
    {
        "key": "WT-6873",
        "number": 6124,
        "state": "closed",
        "title": "WT-6873 Break up consolidated backup information into reasonably sized",
        "body": "chunks.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 15:35 GMT",
        "updated_at": "Thursday Nov 05, 2020 at 18:46 GMT",
        "closed_at": "Thursday Nov 05, 2020 at 18:46 GMT",
        "merged_at": "Thursday Nov 05, 2020 at 18:46 GMT"
    },
    {
        "key": "WT-6875",
        "number": 6123,
        "state": "closed",
        "title": "WT-6875 Remove legacy import invocation",
        "body": "This code was just here to generate documentation so I didn't notice it breaking compilation. We can just remove this since the import portion of the documentation doesn't exist anymore.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 10:33 GMT",
        "updated_at": "Friday Nov 06, 2020 at 06:27 GMT",
        "closed_at": "Friday Nov 06, 2020 at 06:27 GMT",
        "merged_at": "Friday Nov 06, 2020 at 06:27 GMT"
    },
    {
        "key": null,
        "number": 6122,
        "state": "closed",
        "title": "Add mips arch support",
        "body": "Add mips arch support.\r\nRepair clang-format 3.8 download func. \r\n\r\nTest on loongson cloud platform(UOS  @ loongson 3A4000) ",
        "base_ref": "master",
        "created_at": "Thursday Nov 05, 2020 at 09:58 GMT",
        "updated_at": "Tuesday Nov 10, 2020 at 01:54 GMT",
        "closed_at": "Tuesday Nov 10, 2020 at 01:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6861",
        "number": 6121,
        "state": "closed",
        "title": "WT-6861 Add the ability to log messages about unexpected timestamp usage",
        "body": "Currently keyed into the per-table timestamp assertion functionality.\r\n\r\nThis needs more work, but pushing it up in case I get stalled.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 09:50 GMT",
        "updated_at": "Monday Dec 14, 2020 at 21:48 GMT",
        "closed_at": "Monday Dec 14, 2020 at 21:48 GMT",
        "merged_at": "Monday Dec 14, 2020 at 21:48 GMT"
    },
    {
        "key": "WT-6857",
        "number": 6120,
        "state": "closed",
        "title": "WT-6857 Define history store cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 06:59 GMT",
        "updated_at": "Thursday Nov 12, 2020 at 03:34 GMT",
        "closed_at": "Thursday Nov 12, 2020 at 03:34 GMT",
        "merged_at": "Thursday Nov 12, 2020 at 03:34 GMT"
    },
    {
        "key": "WT-6751",
        "number": 6119,
        "state": "closed",
        "title": "WT-6751 Assert if new value is the same as old value for a history store update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 04:26 GMT",
        "updated_at": "Tuesday Nov 10, 2020 at 23:12 GMT",
        "closed_at": "Tuesday Nov 10, 2020 at 23:12 GMT",
        "merged_at": "Tuesday Nov 10, 2020 at 23:12 GMT"
    },
    {
        "key": "WT-4780",
        "number": 6118,
        "state": "closed",
        "title": "WT-4780 Enable assertion that commit timestamp is newer than all readers",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 04:19 GMT",
        "updated_at": "Thursday Nov 05, 2020 at 23:03 GMT",
        "closed_at": "Thursday Nov 05, 2020 at 23:03 GMT",
        "merged_at": "Thursday Nov 05, 2020 at 23:03 GMT"
    },
    {
        "key": "WT-6836",
        "number": 6117,
        "state": "closed",
        "title": "WT-6836 Handle the last key in the shadow table being removed by rollback to stable in timestamp abort",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 02:56 GMT",
        "updated_at": "Friday Nov 06, 2020 at 02:46 GMT",
        "closed_at": "Friday Nov 06, 2020 at 02:46 GMT",
        "merged_at": "Friday Nov 06, 2020 at 02:46 GMT"
    },
    {
        "key": "WT-6713",
        "number": 6116,
        "state": "closed",
        "title": "WT-6713 Remove transaction support from custom data sources",
        "body": "WiredTiger providing transaction support for custom data sources\r\ndoesn't handle all scenarios, instead pass the transaction support\r\nto the custom data sources itself instead of WT handling them.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2020 at 01:30 GMT",
        "updated_at": "Monday Nov 09, 2020 at 23:12 GMT",
        "closed_at": "Monday Nov 09, 2020 at 23:12 GMT",
        "merged_at": "Monday Nov 09, 2020 at 23:12 GMT"
    },
    {
        "key": "WT-6672",
        "number": 6115,
        "state": "closed",
        "title": "WT-6672 Don't increase the writegen number until RTS cleans up checkp\u2026",
        "body": "\u2026oint",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2020 at 22:55 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:43 GMT",
        "closed_at": "Wednesday Nov 18, 2020 at 11:58 GMT",
        "merged_at": "Wednesday Nov 18, 2020 at 11:58 GMT"
    },
    {
        "key": "WT-6710",
        "number": 6114,
        "state": "closed",
        "title": "WT-6710 Change default transaction isolation to snapshot",
        "body": "The default session/transaction isoliation is changed from\r\nread-committed to snapshot for all the user sessions. The\r\ninternal sessions still operate under read-committed isolation\r\nmode.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2020 at 22:23 GMT",
        "updated_at": "Tuesday Dec 08, 2020 at 00:41 GMT",
        "closed_at": "Wednesday Nov 25, 2020 at 06:31 GMT",
        "merged_at": "Wednesday Nov 25, 2020 at 06:31 GMT"
    },
    {
        "key": "WT-6693",
        "number": 6113,
        "state": "closed",
        "title": "WT-6693 Add compatibility testing for imported objects",
        "body": "This PR is adding a test to exercise import logic from different WiredTiger versions. I've written this as a script and invoked WiredTiger via the `wt` tool because:\r\n- It is easier to manage multiple WiredTiger versions this way.\r\n- There is a precedent for doing it this way with `compatibility_test_for_releases.sh`.\r\n\r\nI don't think we need to prevent downgrading databases with imported objects. If we successfully checkpoint after importing, the connection-wide `base_write_gen` will be set to be larger than the `write_gen` of the imported file and things will work fine in earlier versions.\r\n\r\nThe complexity around write gens in the import case (and our motivation for having btree-specific write gens) is all to handle the run where we actually import the file. As soon as you restart the system, the imported file can be treated identically to a regular one.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2020 at 15:09 GMT",
        "updated_at": "Friday Nov 06, 2020 at 06:26 GMT",
        "closed_at": "Friday Nov 06, 2020 at 06:26 GMT",
        "merged_at": "Friday Nov 06, 2020 at 06:26 GMT"
    },
    {
        "key": "WT-6816",
        "number": 6112,
        "state": "closed",
        "title": "WT-6816 Design write gen scheme to allow dhandles with active history to get closed/re-opened",
        "body": "This PR is the second attempt at #6085.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2020 at 10:21 GMT",
        "updated_at": "Friday Nov 13, 2020 at 00:36 GMT",
        "closed_at": "Friday Nov 13, 2020 at 00:36 GMT",
        "merged_at": "Friday Nov 13, 2020 at 00:36 GMT"
    },
    {
        "key": "WT-6816",
        "number": 6111,
        "state": "closed",
        "title": "Revert \"WT-6816 Design write gen scheme to allow dhandles with active history to get closed/re-opened\"",
        "body": "This reverts commit 9c0d479fc28353629ab9d017b39e838a0d090186.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2020 at 03:32 GMT",
        "updated_at": "Wednesday Nov 04, 2020 at 03:38 GMT",
        "closed_at": "Wednesday Nov 04, 2020 at 03:38 GMT",
        "merged_at": "Wednesday Nov 04, 2020 at 03:38 GMT"
    },
    {
        "key": "WT-6869",
        "number": 6110,
        "state": "closed",
        "title": "WT-6869 Assert never return the page that started the walk in tree walk",
        "body": "This is to aid the debugging of WT-6770",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2020 at 00:46 GMT",
        "updated_at": "Wednesday Nov 04, 2020 at 03:33 GMT",
        "closed_at": "Wednesday Nov 04, 2020 at 03:33 GMT",
        "merged_at": "Wednesday Nov 04, 2020 at 03:33 GMT"
    },
    {
        "key": "WT-6867",
        "number": 6109,
        "state": "closed",
        "title": "WT-6867 Create model subpages for architecture guide with common look.",
        "body": "As part of the review (and to save you from having to build the doc), see the pictures in the ticket: https://jira.mongodb.org/browse/WT-6867.  The top level architecture page contains a diagram. Entries in the diagram are clickable. Currently, there are only three sub-pages, so only they are clickable.  The intent is to have a sub-page for each topic in the diagram.  We could link to additional topics at the bottom of the top level page if we want a topic that doesn't fit in the diagram (for example, coding conventions).\r\n\r\nThe sample subpages are minimal, we intend to fill them out as much as seems appropriate, and have subordinate pages to cover particular sub-topics (like Data Handle Lifetime, or Schema Operations as shown).  At the top of subordinate pages is a table that I think may be useful, I'm open to other ideas.  To the left of the table is a mini thumbnail of the arch diagram that is clickable to get back to the top architecture page.\u00a0",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2020 at 19:32 GMT",
        "updated_at": "Friday Nov 06, 2020 at 19:50 GMT",
        "closed_at": "Friday Nov 06, 2020 at 19:50 GMT",
        "merged_at": "Friday Nov 06, 2020 at 19:50 GMT"
    },
    {
        "key": "WT-6860",
        "number": 6108,
        "state": "closed",
        "title": "WT-6860 Add relevant history store statistics to data handles",
        "body": "Previously most were connection only statistics.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2020 at 03:23 GMT",
        "updated_at": "Thursday Nov 05, 2020 at 02:35 GMT",
        "closed_at": "Thursday Nov 05, 2020 at 02:35 GMT",
        "merged_at": "Thursday Nov 05, 2020 at 02:35 GMT"
    },
    {
        "key": "WT-6830",
        "number": 6107,
        "state": "closed",
        "title": "WT-6830 Encode bytes before concatenating with string",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2020 at 00:54 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 23:28 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 23:28 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 23:28 GMT"
    },
    {
        "key": "WT-6828",
        "number": 6106,
        "state": "closed",
        "title": "WT-6828 Fix doc link in README",
        "body": "As part of #6088, the doc link got changed (I assume they did this because it's a dead link). I couldn't fix this in the PR because it was from a fork that I didn't have write permissions for.\r\n\r\nI believe we still want this to point at 10.0.0 because the docs will be at this address when our 10.0.0 release is distributed.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2020 at 00:40 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 02:34 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 02:34 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 02:34 GMT"
    },
    {
        "key": "WT-6844",
        "number": 6105,
        "state": "closed",
        "title": "WT-6844 Make force stop durable.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 02, 2020 at 19:45 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 15:39 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 15:39 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 15:39 GMT"
    },
    {
        "key": null,
        "number": 6104,
        "state": "closed",
        "title": "WiredTiger++",
        "body": "I spent a bit of time at the end of Skunkworks (and a few hours on our team \"fun\" day) getting WiredTiger to compile with a C++ compiler. This was mostly an experiment to see how difficult it would be to get this working but also to prompt a discussion on C++ features and whether we'd get some value out of them. It turns out that the majority of changes in the core library are pretty minor and are just explicit casts since the C++ type system is stricter and doesn't allow implicit coercion between pointer types.\r\n\r\nThe current state of this branch is:\r\n- Every non-static function is exposed with C linkage meaning we can't currently pass C++ classes across the translation unit boundary.\r\n  - There's nothing major preventing us from using C++ linkage. The only issue is that example/test programs + the Swig wrapper are including `wt_internal.h`. Since they're exercising the external API, they probably shouldn't be including this header so I think this is just a mistake. I didn't have the appetite to mess around with Swig, but we can do this later.\r\n- There are 2 extern functions in `log_auto.cxx` that are having their names mangled despite having being marked as `extern \"C\"`. Not sure what's going on here but I had to comment out the usages to get it building. If we stop using C linkage here, we can probably just forget about this.\r\n- Python and CSuite tests are building and running fine aside from anything that involves replaying logs (probably because I commented out those mangled logging functions).\r\n- I made a commit demonstrating some C++ features to check that everything builds and works ok: 44297db.\r\n\r\nIf you're interested in having a play around, I'm compiling with: `CXXFLAGS=\"-std=c++11\" ../configure --enable-python --enable-diagnostic`.",
        "base_ref": "develop",
        "created_at": "Sunday Nov 01, 2020 at 03:00 GMT",
        "updated_at": "Friday Aug 06, 2021 at 17:23 GMT",
        "closed_at": "Friday Apr 16, 2021 at 04:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6842",
        "number": 6103,
        "state": "closed",
        "title": "WT-6842 Add example showing using src_id only.",
        "body": "(And a typo fix in another file.)\r\n\r\nThis functionality already worked so I just added a pass in the example program to use it.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 29, 2020 at 18:43 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 15:43 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 15:43 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 15:43 GMT"
    },
    {
        "key": "WT-6839",
        "number": 6102,
        "state": "closed",
        "title": "WT-6839 Add API to query incremental backup IDs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 28, 2020 at 17:44 GMT",
        "updated_at": "Monday Nov 02, 2020 at 15:50 GMT",
        "closed_at": "Monday Nov 02, 2020 at 15:50 GMT",
        "merged_at": "Monday Nov 02, 2020 at 15:50 GMT"
    },
    {
        "key": "WT-6840",
        "number": 6101,
        "state": "closed",
        "title": "WT-6840 Add support for fuzzing with LLVM LibFuzzer",
        "body": "### Overview\r\nThis PR contains my initial attempt at adding support for fuzz testing with LLVM LibFuzzer to WiredTiger. This includes:\r\n- Documentation outlining how to build and run fuzzers, implement new targets, and view fuzzing coverage.\r\n- A `fuzzutil` library with some common helpers for initializing global state and slicing inputs.\r\n- A `fuzz_config` target which fuzzes configuration parsing logic.\r\n- A `fuzz_modify` target which fuzzes modify processing logic.\r\n- Helpers scripts `fuzz_run.sh` and `fuzz_coverage.sh` to run fuzzers with sensible defaults and get coverage information (which is useful for developing new targets).\r\n\r\n### How to review\r\nI think the best way to review this is PR is to read the documentation first since that's how I expect most people to learn about LLVM LibFuzzer for the first time.\r\n\r\nIf the doc doesn't give enough of an idea to do a review, then I should add more detail to the doc.\r\n\r\n### What's next?\r\nI'm still getting a feel for what to expect from fuzzing. Based on my local coverage, the fuzzer seems to be missing a few branches in both cases. I'm not sure if that is expected since it hasn't built up much of a corpus or whether I've done a bad job writing the target.\r\n\r\nEvergreen has support for maintaining a corpus across runs so, over time, the fuzz target becomes more and more effective. I think the next step for me will be to try this for WiredTiger. If the coverage is still lacking in a few weeks, it may be worth tweaking the target or adding more hand-crafted inputs to the corpus (in the case of `fuzz_config`).\r\n\r\nAs for fuzz targets to implement in the future, I think it's going to be difficult to fuzz existing code. As I mentioned in the documentation, fuzz targets should be fast, deterministic and stateless which describes not much of WiredTiger. I think the main value proposition of fuzzing in the future will be for new code that we'd like to gain confidence with. If we take care to write the error-prone parts in a way that can be tested in isolation (not messing around with `WT_SESSION_IMPL` state, etc), it should make for a good fuzzing candidate.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 28, 2020 at 07:43 GMT",
        "updated_at": "Wednesday Feb 03, 2021 at 12:38 GMT",
        "closed_at": "Wednesday Feb 03, 2021 at 12:38 GMT",
        "merged_at": "Wednesday Feb 03, 2021 at 12:38 GMT"
    },
    {
        "key": "WT-6835",
        "number": 6100,
        "state": "closed",
        "title": "WT-6835 Add API to consolidate incremental backup information",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 26, 2020 at 20:41 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 18:30 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 18:29 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 18:29 GMT"
    },
    {
        "key": "WT-6449",
        "number": 6099,
        "state": "closed",
        "title": "WT-6449 Develop hang analyzer for WiredTiger",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 26, 2020 at 04:24 GMT",
        "updated_at": "Monday Oct 26, 2020 at 06:32 GMT",
        "closed_at": "Monday Oct 26, 2020 at 06:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6449",
        "number": 6098,
        "state": "closed",
        "title": "WT-6449 Hang analyzer for WiredTiger",
        "body": "This is a hang analyzer customized from the [mongo server hang analyzer](https://github.com/mongodb/mongo/blob/v4.0/buildscripts/hang_analyzer.py) for WiredTiger use. The `wt_hang_analyzer.py` script can be used as a standalone tool against a running WiredTiger test. It's also being integrated with the WiredTiger Evergreen projects, so that a timed-out task will automatically trigger core generation and debugger run, and archive both core files and debugger outputs for ease of test failure triaging. \r\n\r\nPlease note with the above-mentioned functionalities working well in Linux environments, there are 2 known issues for Windows & macOS that we'll follow up with separate tickets:\r\n- Windows \"symbol file not found\" while running debugger\r\n- macOS \"lldb attach failure\" while attempting to dump core",
        "base_ref": "develop",
        "created_at": "Monday Oct 26, 2020 at 00:15 GMT",
        "updated_at": "Thursday Nov 12, 2020 at 22:39 GMT",
        "closed_at": "Thursday Nov 12, 2020 at 22:39 GMT",
        "merged_at": "Thursday Nov 12, 2020 at 22:39 GMT"
    },
    {
        "key": "WT-6827",
        "number": 6097,
        "state": "closed",
        "title": "WT-6827 Run scons check examples in sequence, not parallel.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Oct 25, 2020 at 23:58 GMT",
        "updated_at": "Monday Oct 26, 2020 at 12:27 GMT",
        "closed_at": "Monday Oct 26, 2020 at 12:27 GMT",
        "merged_at": "Monday Oct 26, 2020 at 12:27 GMT"
    },
    {
        "key": "WT-6826",
        "number": 6096,
        "state": "closed",
        "title": "WT-6826 disable failing tests related to UTF encoding/decoding on OSX.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 23, 2020 at 20:30 GMT",
        "updated_at": "Friday Oct 23, 2020 at 22:45 GMT",
        "closed_at": "Friday Oct 23, 2020 at 22:45 GMT",
        "merged_at": "Friday Oct 23, 2020 at 22:45 GMT"
    },
    {
        "key": "WT-6822",
        "number": 6095,
        "state": "closed",
        "title": "WT-6822 Use the correct python for all tests, and set up env for the split stress test.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 23, 2020 at 15:46 GMT",
        "updated_at": "Friday Oct 23, 2020 at 21:18 GMT",
        "closed_at": "Friday Oct 23, 2020 at 21:18 GMT",
        "merged_at": "Friday Oct 23, 2020 at 21:18 GMT"
    },
    {
        "key": "WT-6750",
        "number": 6094,
        "state": "closed",
        "title": "WT-6750 Add an assert to check if the key already exists in the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 23, 2020 at 00:32 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 00:09 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 00:09 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 00:09 GMT"
    },
    {
        "key": "WT-6507",
        "number": 6093,
        "state": "closed",
        "title": "WT-6507 Exit cache eviction worker after our operation has timed out (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Oct 22, 2020 at 23:54 GMT",
        "updated_at": "Friday Oct 23, 2020 at 02:28 GMT",
        "closed_at": "Friday Oct 23, 2020 at 02:28 GMT",
        "merged_at": "Friday Oct 23, 2020 at 02:28 GMT"
    },
    {
        "key": "WT-6507",
        "number": 6092,
        "state": "closed",
        "title": "WT-6507 Exit cache eviction worker after our operation has timed out (4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Oct 22, 2020 at 23:29 GMT",
        "updated_at": "Thursday Oct 22, 2020 at 23:40 GMT",
        "closed_at": "Thursday Oct 22, 2020 at 23:40 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6811",
        "number": 6091,
        "state": "closed",
        "title": "WT-6811 Allow older readers to read behind a mixed-mode operation.",
        "body": "Creating this PR to get some visibility about what is involved in this change, it's getting larger than I'd like however it fixes almost all the issues that I'm aware. I haven't tested modify interaction yet but I think they should work.\r\n\r\nAnnoying I had to delete a stat which makes this PR even bigger at face value. \r\n\r\nThe bulk of the change is in hs_rec.c. I'll try and add comments to the specific places that relate back to specific issues. Furthermore with this change we're adding updates into the history store that are hidden by a globally visible update. I'm currently unsure of how to fix this without increasing the number of flags on the update which doubles the flag variable size. \r\n\r\nI'll book an online PR review to cover the key points.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 22, 2020 at 10:29 GMT",
        "updated_at": "Wednesday Oct 28, 2020 at 00:23 GMT",
        "closed_at": "Wednesday Oct 28, 2020 at 00:23 GMT",
        "merged_at": "Wednesday Oct 28, 2020 at 00:23 GMT"
    },
    {
        "key": "WT-4310",
        "number": 6090,
        "state": "closed",
        "title": "WT-4310 Add option to not abort in diagnostic builds on data corruption",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 22, 2020 at 06:13 GMT",
        "updated_at": "Friday Oct 23, 2020 at 04:17 GMT",
        "closed_at": "Friday Oct 23, 2020 at 04:07 GMT",
        "merged_at": "Friday Oct 23, 2020 at 04:07 GMT"
    },
    {
        "key": "WT-6729",
        "number": 6089,
        "state": "closed",
        "title": "WT-6729 Quiesce eviction prior running rollback to stable's active transaction check",
        "body": "Since durable history, we've begun using real transactions to read from the history store that require us to pin an ID to involve updates getting freed from underneath us. This differs from the lookaside model where each entry had a `page_id` and once it was known to be obsolete, an entire page worth of data could be released by sweep without risk of \"use after free\".\r\n\r\nThis is safe because the only reason we're not allowing active transactions is that they may do concurrent writes and interfere with rollback to stable (however, history store writes are ok).\r\n\r\nMy solution is to temporarily block eviction for when we do our preliminary check for active transactions in rollback to stable. This way we can ensure that only user transactions will trigger the check.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 22, 2020 at 02:53 GMT",
        "updated_at": "Friday Jul 16, 2021 at 06:02 GMT",
        "closed_at": "Friday Jul 16, 2021 at 06:02 GMT",
        "merged_at": "Friday Jul 16, 2021 at 06:02 GMT"
    },
    {
        "key": "WT-6828",
        "number": 6088,
        "state": "closed",
        "title": "WT-6828 Change http to https links in README",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 21, 2020 at 18:33 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 00:33 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 00:33 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 00:33 GMT"
    },
    {
        "key": "WT-6722",
        "number": 6087,
        "state": "closed",
        "title": "WT-6722 Review function names in history store module",
        "body": "There is relevant discussion in Jira ticket on the naming scheme that I am following for this PR.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 21, 2020 at 01:01 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 04:22 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 04:22 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 04:22 GMT"
    },
    {
        "key": "WT-6675",
        "number": 6086,
        "state": "closed",
        "title": "WT-6675 Remove Java API",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 21, 2020 at 00:18 GMT",
        "updated_at": "Thursday Oct 22, 2020 at 00:49 GMT",
        "closed_at": "Thursday Oct 22, 2020 at 00:49 GMT",
        "merged_at": "Thursday Oct 22, 2020 at 00:49 GMT"
    },
    {
        "key": "WT-6816",
        "number": 6085,
        "state": "closed",
        "title": "WT-6816 Design write gen scheme to allow dhandles with active history to get closed/re-opened",
        "body": "As part of WT-5691, we switched to using a btree specific base_write_gen to determine whether or not to wipe transaction ids (as opposed to a connection-wide one which we used previously).\r\n\r\nThis could cause problems if we begin closing dhandles with active history since we'll wipe transaction ids . At the moment, we don't allow doing this with our dhandles but we intend to in the future so we should modify our write gen scheme to avoid this problem.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 20, 2020 at 23:45 GMT",
        "updated_at": "Monday Nov 02, 2020 at 10:03 GMT",
        "closed_at": "Monday Nov 02, 2020 at 10:03 GMT",
        "merged_at": "Monday Nov 02, 2020 at 10:03 GMT"
    },
    {
        "key": "WT-6752",
        "number": 6084,
        "state": "closed",
        "title": "WT-6752 Assert history store updates are all committed",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 20, 2020 at 21:42 GMT",
        "updated_at": "Tuesday Nov 03, 2020 at 00:30 GMT",
        "closed_at": "Tuesday Nov 03, 2020 at 00:30 GMT",
        "merged_at": "Tuesday Nov 03, 2020 at 00:30 GMT"
    },
    {
        "key": "WT-6809",
        "number": 6083,
        "state": "closed",
        "title": "WT-6809 Avoid deadlock by moving hs cursor caching earlier.",
        "body": "This is where my thoughts are on avoiding the deadlock. I am going to run on the AWS system where I reproduced it for a while before merging.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 20, 2020 at 14:21 GMT",
        "updated_at": "Tuesday Oct 27, 2020 at 17:05 GMT",
        "closed_at": "Tuesday Oct 27, 2020 at 17:05 GMT",
        "merged_at": "Tuesday Oct 27, 2020 at 17:05 GMT"
    },
    {
        "key": "WT-6813",
        "number": 6082,
        "state": "closed",
        "title": "WT-6813 Fix memory leak in schema_create",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 20, 2020 at 10:32 GMT",
        "updated_at": "Tuesday Oct 20, 2020 at 21:41 GMT",
        "closed_at": "Tuesday Oct 20, 2020 at 21:41 GMT",
        "merged_at": "Tuesday Oct 20, 2020 at 21:41 GMT"
    },
    {
        "key": "WT-6753",
        "number": 6081,
        "state": "closed",
        "title": "WT-6753 Assert various types of history store operations are expected",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 19, 2020 at 23:48 GMT",
        "updated_at": "Monday Nov 02, 2020 at 23:15 GMT",
        "closed_at": "Monday Nov 02, 2020 at 23:15 GMT",
        "merged_at": "Monday Nov 02, 2020 at 23:15 GMT"
    },
    {
        "key": "WT-6872",
        "number": 6080,
        "state": "closed",
        "title": "WT-6872 Replace the yield instructions with an ISB",
        "body": "Use an isb instruction here to be closer to the original x86 pause instruction.\r\nThe yield instruction that was previously here is a nop that is intended to\r\nprovide a hint that a thread is a SMT systems could yield. This is different\r\nfrom the x86 pause instruction which delays exeuction by O(100) cycles. The isb\r\nwill typically delay exeuction by about 50 cycles so it's a reasonable\r\nalternative.\r\n\r\nI've marked this with RFC beacuse while we've seen similar changes improve\r\nperformance on other projects, I don't know what the best way is to test a\r\nhigh-contention senario that would result in the pausing being impactful here.\r\nI'm looking for suggestions of tests that would illustrate the benefit.",
        "base_ref": "develop",
        "created_at": "Monday Oct 19, 2020 at 16:41 GMT",
        "updated_at": "Friday Nov 06, 2020 at 06:31 GMT",
        "closed_at": "Friday Nov 06, 2020 at 06:31 GMT",
        "merged_at": "Friday Nov 06, 2020 at 06:31 GMT"
    },
    {
        "key": "WT-6812",
        "number": 6079,
        "state": "closed",
        "title": "WT-6812 Fix \"out-of-order fixup\" potentially corrupting historical values",
        "body": "As part of WT-6811, Luke noticed that the \"out-of-order fixup\" code appeared to be using the wrong value. I'm not 100% sure why `timestamp20` manages to pass but I suspect it's to do with the fact that the leading garbage in the value does not translate to valid ASCII characters and may be dropped as part of the conversion to a Python string.\r\n\r\nI wrote another test that uses modifies since I suspect that these would be more sensitive to corruption and was able to make the API return garbage and sometimes crash. I also ran into the issue that modifies aren't moved correctly since we don't pass the correct `upd_type` in (we just read a byte pattern corresponding to a modify and return it as if it were a real value).",
        "base_ref": "develop",
        "created_at": "Monday Oct 19, 2020 at 12:14 GMT",
        "updated_at": "Tuesday Oct 20, 2020 at 00:37 GMT",
        "closed_at": "Tuesday Oct 20, 2020 at 00:37 GMT",
        "merged_at": "Tuesday Oct 20, 2020 at 00:37 GMT"
    },
    {
        "key": "WT-6612",
        "number": 6078,
        "state": "closed",
        "title": "WT-6612 Increase cache size in test_prepare08 to fix rollback error due to cache pressure.",
        "body": "This test used to fail with rollback error due to cache pressure, looks like same test coverage can be achieved by increasing the cache size.",
        "base_ref": "develop",
        "created_at": "Sunday Oct 18, 2020 at 22:22 GMT",
        "updated_at": "Sunday Oct 18, 2020 at 22:53 GMT",
        "closed_at": "Sunday Oct 18, 2020 at 22:53 GMT",
        "merged_at": "Sunday Oct 18, 2020 at 22:53 GMT"
    },
    {
        "key": "WT-6808",
        "number": 6077,
        "state": "closed",
        "title": "WT-6808 Add diagram to architecture guide.",
        "body": "Postprocess html to add image maps to allow clickable links in images.\r\nUse curl (more portable for OS/X) to download plantuml jar file.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 15, 2020 at 16:37 GMT",
        "updated_at": "Monday Oct 19, 2020 at 14:24 GMT",
        "closed_at": "Monday Oct 19, 2020 at 14:24 GMT",
        "merged_at": "Monday Oct 19, 2020 at 14:24 GMT"
    },
    {
        "key": "WT-6764",
        "number": 6076,
        "state": "closed",
        "title": "WT-6764 Wait for stable timestamp to move before publishing checkpoint information",
        "body": "There is a possible race condition in test\u00a0timestamp_abort\u00a0where checkpoint thread is able to perform a checkpoint before writer threads get a chance to start and write something into the database. With this change checkpoint thread waits for the checkpoint timestamp to move beyond 0 before signalling to parent process via a file.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 15, 2020 at 01:23 GMT",
        "updated_at": "Sunday Oct 18, 2020 at 22:54 GMT",
        "closed_at": "Sunday Oct 18, 2020 at 22:54 GMT",
        "merged_at": "Sunday Oct 18, 2020 at 22:54 GMT"
    },
    {
        "key": "WT-6764",
        "number": 6075,
        "state": "closed",
        "title": "WT-6764 Wait for stable timestamp to move before publishing checkpoint information",
        "body": "There is a possible race condition in test `timestamp_abort` where checkpoint thread is able to perform a checkpoint before writer threads get a chance to start and write something into the database. With this change checkpoint thread waits for the checkpoint timestamp to move beyond 0 before signalling to parent process via a file. ",
        "base_ref": "develop",
        "created_at": "Thursday Oct 15, 2020 at 01:20 GMT",
        "updated_at": "Thursday Oct 15, 2020 at 01:22 GMT",
        "closed_at": "Thursday Oct 15, 2020 at 01:22 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6736",
        "number": 6074,
        "state": "closed",
        "title": "WT-6736 Statistics to track evictions in parallel with checkpoint",
        "body": "These newly added stats are useful to track the number of evictions\r\nthat occurs during checkpoint is inprogress.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 15, 2020 at 00:23 GMT",
        "updated_at": "Sunday Oct 18, 2020 at 22:58 GMT",
        "closed_at": "Sunday Oct 18, 2020 at 22:58 GMT",
        "merged_at": "Sunday Oct 18, 2020 at 22:58 GMT"
    },
    {
        "key": "WT-6806",
        "number": 6073,
        "state": "closed",
        "title": "WT-6806 Back off aggressive abort in random_directio.",
        "body": "This change backs off the aggressive abort from WT-6765 and will let the test fail with the missing file on the recovery side to be sure we catch the correct situation.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 14, 2020 at 18:40 GMT",
        "updated_at": "Wednesday Oct 14, 2020 at 19:39 GMT",
        "closed_at": "Wednesday Oct 14, 2020 at 19:39 GMT",
        "merged_at": "Wednesday Oct 14, 2020 at 19:39 GMT"
    },
    {
        "key": "WT-6629",
        "number": 6072,
        "state": "closed",
        "title": "WT-6629 Support index tables in metadata:create cursors.",
        "body": "Add test for complex tables and metadata:create cursors.\r\nReturn ENOTSUP for the table:URI in a complex table for metadata:create.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 13, 2020 at 16:25 GMT",
        "updated_at": "Friday Oct 16, 2020 at 20:45 GMT",
        "closed_at": "Friday Oct 16, 2020 at 20:45 GMT",
        "merged_at": "Friday Oct 16, 2020 at 20:45 GMT"
    },
    {
        "key": "WT-6797",
        "number": 6071,
        "state": "closed",
        "title": "WT-6797 Ensure minimum entries before short-circuiting.",
        "body": "@ddanderson one more time with `test_bug019.py`! But the earlier debugging allowed me to fully understand the periodic failure now. Good news is that it is a test issue not a WT issue.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 13, 2020 at 14:47 GMT",
        "updated_at": "Tuesday Oct 13, 2020 at 21:05 GMT",
        "closed_at": "Tuesday Oct 13, 2020 at 21:05 GMT",
        "merged_at": "Tuesday Oct 13, 2020 at 21:05 GMT"
    },
    {
        "key": "WT-6793",
        "number": 6070,
        "state": "closed",
        "title": "WT-6793 Organize code statistics Evergreen tasks",
        "body": "Move below 2 existing code statistics related Evergreen tasks into a separate build variant for ease of tracking by test failure triaging barons. Also lower the scheduling frequency to once per day. \r\n- coverage-report\r\n- cyclomatic-complexity",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 13, 2020 at 05:20 GMT",
        "updated_at": "Wednesday Oct 14, 2020 at 21:58 GMT",
        "closed_at": "Wednesday Oct 14, 2020 at 21:57 GMT",
        "merged_at": "Wednesday Oct 14, 2020 at 21:57 GMT"
    },
    {
        "key": "WT-6761",
        "number": 6069,
        "state": "closed",
        "title": "WT-6761 Ignore stdout for test_rollback_to_stable10",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 13, 2020 at 00:12 GMT",
        "updated_at": "Tuesday Oct 13, 2020 at 21:13 GMT",
        "closed_at": "Tuesday Oct 13, 2020 at 21:13 GMT",
        "merged_at": "Tuesday Oct 13, 2020 at 21:13 GMT"
    },
    {
        "key": "WT-6783",
        "number": 6068,
        "state": "closed",
        "title": "WT-6783 Generate unique keys for table to ensure log records.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2020 at 20:12 GMT",
        "updated_at": "Tuesday Oct 13, 2020 at 02:10 GMT",
        "closed_at": "Tuesday Oct 13, 2020 at 02:10 GMT",
        "merged_at": "Tuesday Oct 13, 2020 at 02:10 GMT"
    },
    {
        "key": "WT-5691",
        "number": 6067,
        "state": "closed",
        "title": "WT-5691 Handle scenario where imported files have write generations ahead of current DB",
        "body": "This PR is adjusting the write generation check (to figure out whether to wipe transaction IDs or not) to use a btree specific base write generation as opposed to `conn->base_write_gen`.\r\n\r\nSince we want to keep the write gen ranges disjoint between runs (with the exception of the import case), we still want to keep `conn->base_write_gen` and all the machinery involved in keeping it in metadata, etc should remain as is.\r\n\r\nThe write generation for each btree is already written to metadata during checkpoint so we don't need to do anything special here.\r\n\r\nThe main changes necessary are:\r\n- Keep track of what the `btree->write_gen` was on startup and store it in a `btree->base_write_gen`.\r\n- Compare the page's write gen to `btree->base_write_gen` instead of `conn->base_write_gen`.\r\n\r\nThe test that I've added is a bit convoluted but it does demonstrate the difference between the new and old scheme. If I switch back to using `S2C(session)->base_write_gen`, then the test fails with an invisible record which is what we expect.",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2020 at 11:16 GMT",
        "updated_at": "Tuesday Oct 20, 2020 at 06:26 GMT",
        "closed_at": "Tuesday Oct 20, 2020 at 06:26 GMT",
        "merged_at": "Tuesday Oct 20, 2020 at 06:26 GMT"
    },
    {
        "key": null,
        "number": 6066,
        "state": "closed",
        "title": "Update packing.py",
        "body": "In python 3 you can't concat str to bytes\r\n\r\n```Traceback (most recent call last):\r\n  File \"PyWT.py\", line 156, in <module>\r\n    print(wt.dump_catalog())\r\n  File \"PyWT.py\", line 108, in dump_catalog\r\n    sizes.set_key('table:'+str(table))\r\n  File \"/usr/local/lib/python3.8/site-packages/wiredtiger/wiredtiger.py\", line 410, in set_key\r\n    self._key = pack(self.key_format, *args)\r\n  File \"/usr/local/lib/python3.8/site-packages/wiredtiger/packing.py\", line 184, in pack\r\n    result += val[:l]\r\nTypeError: can't concat str to bytes",
        "base_ref": "master",
        "created_at": "Monday Oct 12, 2020 at 07:48 GMT",
        "updated_at": "Monday Nov 02, 2020 at 01:02 GMT",
        "closed_at": "Monday Nov 02, 2020 at 01:02 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 6065,
        "state": "closed",
        "title": "Update packing.py",
        "body": "In python 3 you can't concat str and bytes\r\n\r\n```Traceback (most recent call last):\r\n  File \"PyWT.py\", line 156, in <module>\r\n    print(wt.dump_catalog())\r\n  File \"PyWT.py\", line 108, in dump_catalog\r\n    sizes.set_key('table:'+str(table))\r\n  File \"/usr/local/lib/python3.8/site-packages/wiredtiger/wiredtiger.py\", line 410, in set_key\r\n    self._key = pack(self.key_format, *args)\r\n  File \"/usr/local/lib/python3.8/site-packages/wiredtiger/packing.py\", line 184, in pack\r\n    result += val[:l]\r\nTypeError: can't concat str to bytes",
        "base_ref": "master",
        "created_at": "Monday Oct 12, 2020 at 07:07 GMT",
        "updated_at": "Monday Oct 12, 2020 at 07:21 GMT",
        "closed_at": "Monday Oct 12, 2020 at 07:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6763",
        "number": 6064,
        "state": "closed",
        "title": "WT-6763 Fix freeing update on the chain when insert fail after inserting to the update chain",
        "body": "@lukech This does not fix the problem completely. The test is running out of memory. We need to move the unit test long to a larger machine.",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2020 at 05:23 GMT",
        "updated_at": "Wednesday Oct 14, 2020 at 03:04 GMT",
        "closed_at": "Wednesday Oct 14, 2020 at 03:04 GMT",
        "merged_at": "Wednesday Oct 14, 2020 at 03:04 GMT"
    },
    {
        "key": "WT-6792",
        "number": 6063,
        "state": "closed",
        "title": "WT-6792 Update compatibility tests to test against mongodb-5.0 branch",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2020 at 04:40 GMT",
        "updated_at": "Monday Oct 12, 2020 at 07:10 GMT",
        "closed_at": "Monday Oct 12, 2020 at 07:10 GMT",
        "merged_at": "Monday Oct 12, 2020 at 07:10 GMT"
    },
    {
        "key": "WT-6490",
        "number": 6062,
        "state": "closed",
        "title": "WT-6490 Acquire snapshot for eviction",
        "body": "@quchenhao @bvpvamsikrishna \r\n\r\nThe changes (#6001) was reverted earlier due to WT-6725. With fix for WT-6725 merged, this is ready to be merged again.",
        "base_ref": "develop",
        "created_at": "Sunday Oct 11, 2020 at 23:42 GMT",
        "updated_at": "Monday Oct 12, 2020 at 23:08 GMT",
        "closed_at": "Monday Oct 12, 2020 at 23:08 GMT",
        "merged_at": "Monday Oct 12, 2020 at 23:08 GMT"
    },
    {
        "key": "WT-6725",
        "number": 6061,
        "state": "closed",
        "title": "WT-6725 Skip checking visibility for updates restored from disk",
        "body": "This change deals with scenarios where different eviction passes have a different visibility for updates on the page. This change bypasses the visibility checks for an update if it was visible to an earlier reconciliation and the update was restored from the disk as part of update-restore eviction.",
        "base_ref": "develop",
        "created_at": "Friday Oct 09, 2020 at 01:51 GMT",
        "updated_at": "Sunday Oct 11, 2020 at 23:36 GMT",
        "closed_at": "Sunday Oct 11, 2020 at 23:36 GMT",
        "merged_at": "Sunday Oct 11, 2020 at 23:36 GMT"
    },
    {
        "key": "WT-6756",
        "number": 6060,
        "state": "closed",
        "title": "WT-6756 Rearrange top level of documentation",
        "body": "Begin to break out an architecture guide from current documentation.\r\nThe arch guide is initially seeded from a couple of pages\r\n previously under dev doc.\r\nOther dev doc pages now live under \"Tools and Techniques\".\r\nThe old \"WiredTiger Architecture\" section is now \"Overview and Features\".",
        "base_ref": "develop",
        "created_at": "Thursday Oct 08, 2020 at 18:53 GMT",
        "updated_at": "Thursday Oct 08, 2020 at 20:37 GMT",
        "closed_at": "Thursday Oct 08, 2020 at 20:37 GMT",
        "merged_at": "Thursday Oct 08, 2020 at 20:37 GMT"
    },
    {
        "key": "WT-6762",
        "number": 6059,
        "state": "closed",
        "title": "WT-6762 Use stats instead of files to check consumption.",
        "body": "@ddanderson I changed this test to use statistics instead of file names to ensure consumption since files can be returned in any order and the sets may not be disjoint. I also fixed a strange indentation I found in there.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 08, 2020 at 16:22 GMT",
        "updated_at": "Thursday Oct 08, 2020 at 18:49 GMT",
        "closed_at": "Thursday Oct 08, 2020 at 18:49 GMT",
        "merged_at": "Thursday Oct 08, 2020 at 18:49 GMT"
    },
    {
        "key": "WT-6741",
        "number": 6058,
        "state": "closed",
        "title": "WT-6741 Add check for supported data source on import",
        "body": "This PR adds checks and testing for when we try to import data sources other than `file:` or `table:`.\r\nThe new logic checks the URI prefix and rejects any other data sources in the import case.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 08, 2020 at 07:01 GMT",
        "updated_at": "Friday Oct 09, 2020 at 06:01 GMT",
        "closed_at": "Friday Oct 09, 2020 at 06:01 GMT",
        "merged_at": "Friday Oct 09, 2020 at 06:01 GMT"
    },
    {
        "key": "WT-6746",
        "number": 6057,
        "state": "closed",
        "title": "WT-6746 Save base write gen in metadata during checkpoint",
        "body": "Base write gen will be stored in metadata in the below format.\r\n\r\n```\r\nsystem:checkpoint_base_write_gen\\00\r\nbase_write_gen=1\\00\r\n```",
        "base_ref": "develop",
        "created_at": "Thursday Oct 08, 2020 at 00:03 GMT",
        "updated_at": "Tuesday Oct 13, 2020 at 05:42 GMT",
        "closed_at": "Tuesday Oct 13, 2020 at 05:42 GMT",
        "merged_at": "Tuesday Oct 13, 2020 at 05:42 GMT"
    },
    {
        "key": "WT-6765",
        "number": 6056,
        "state": "closed",
        "title": "WT-6765 Add more debugging and earlier detection of missing file.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 07, 2020 at 18:03 GMT",
        "updated_at": "Wednesday Oct 07, 2020 at 20:19 GMT",
        "closed_at": "Wednesday Oct 07, 2020 at 20:18 GMT",
        "merged_at": "Wednesday Oct 07, 2020 at 20:18 GMT"
    },
    {
        "key": "WT-6490",
        "number": 6055,
        "state": "closed",
        "title": "Revert \"WT-6490 Acquire snapshot for eviction threads\"",
        "body": "Reverts wiredtiger/wiredtiger#6001",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 06, 2020 at 23:42 GMT",
        "updated_at": "Tuesday Oct 06, 2020 at 23:43 GMT",
        "closed_at": "Tuesday Oct 06, 2020 at 23:43 GMT",
        "merged_at": "Tuesday Oct 06, 2020 at 23:43 GMT"
    },
    {
        "key": "WT-6691",
        "number": 6054,
        "state": "closed",
        "title": "WT-6691 Add file import repair functionality",
        "body": "This PR is adding support for importing with the `repair` option set (meaning that the user cannot provide metadata).\r\n\r\nThe bulk of this logic already exists within `SESSION::import` so we're calling that in the `repair` case. I made some minor fixes on the way as I noticed that switching the allocation size to anything but 512 leads to issues. I also added `test_import06` to check that repair works across different allocation sizes, compressors and encryptors.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 06, 2020 at 10:56 GMT",
        "updated_at": "Monday Oct 12, 2020 at 04:32 GMT",
        "closed_at": "Monday Oct 12, 2020 at 04:32 GMT",
        "merged_at": "Monday Oct 12, 2020 at 04:32 GMT"
    },
    {
        "key": "WT-6767",
        "number": 6053,
        "state": "closed",
        "title": "WT-6767 Adding a new read timestamp config that allows it to be set older than the oldest timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 06, 2020 at 06:15 GMT",
        "updated_at": "Monday Oct 12, 2020 at 13:09 GMT",
        "closed_at": "Monday Oct 12, 2020 at 13:09 GMT",
        "merged_at": "Monday Oct 12, 2020 at 13:09 GMT"
    },
    {
        "key": "WT-6643",
        "number": 6052,
        "state": "closed",
        "title": "WT-6643 Explicitly set the 64-bit uint part of the LSN for atomic assignment.",
        "body": "@keitharnoldsmith and @ddanderson please review. This sets the 64-bit field of the LSN explicitly to avoid asan_memcpy from causing the overwritten non-atomic LSN assignment. This change only modifies places where we read the LSN into a visible structure, I did not change it when we read into a local variable on the stack.",
        "base_ref": "develop",
        "created_at": "Monday Oct 05, 2020 at 13:17 GMT",
        "updated_at": "Monday Oct 05, 2020 at 17:33 GMT",
        "closed_at": "Monday Oct 05, 2020 at 17:33 GMT",
        "merged_at": "Monday Oct 05, 2020 at 17:33 GMT"
    },
    {
        "key": "WT-6722",
        "number": 6051,
        "state": "closed",
        "title": "WT-6722 Review History Store API naming conventions",
        "body": "This aim of this change is name the History Store module API according to their usage. I have adapted following naming convention:\r\n\r\n- Static file local function -> Prefix with `__hs_XXX`\r\n- Functions/APIs that are only called from other WT modules -> Prefix with `__wt_history_XX`\r\n- Functions/APIs that are only called between files in HS module -> Prefix with `__wt_hs_XX`\r\n- Functions/APIs that are called both from within HS module and by other WT modules -> Prefix with `__wt_history_XX`",
        "base_ref": "develop",
        "created_at": "Friday Oct 02, 2020 at 04:54 GMT",
        "updated_at": "Tuesday Oct 20, 2020 at 23:06 GMT",
        "closed_at": "Tuesday Oct 20, 2020 at 23:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6748",
        "number": 6050,
        "state": "closed",
        "title": "WT-6748 Support testing different durable timestamp and commit timestamp in timestamp abort",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 02, 2020 at 01:38 GMT",
        "updated_at": "Saturday Oct 03, 2020 at 00:32 GMT",
        "closed_at": "Saturday Oct 03, 2020 at 00:32 GMT",
        "merged_at": "Saturday Oct 03, 2020 at 00:32 GMT"
    },
    {
        "key": "WT-4310",
        "number": 6049,
        "state": "closed",
        "title": "Revert \"WT-4310 Add option to not abort in diagnostic builds on data corruption\"",
        "body": "Reverts wiredtiger/wiredtiger#6014",
        "base_ref": "develop",
        "created_at": "Friday Oct 02, 2020 at 01:34 GMT",
        "updated_at": "Friday Oct 02, 2020 at 01:34 GMT",
        "closed_at": "Friday Oct 02, 2020 at 01:34 GMT",
        "merged_at": "Friday Oct 02, 2020 at 01:34 GMT"
    },
    {
        "key": "WT-6748",
        "number": 6048,
        "state": "closed",
        "title": "Revert \"WT-6748 Support testing different durable timestamp and commit timestamp in timestamp abort\"",
        "body": "Reverts wiredtiger/wiredtiger#6043",
        "base_ref": "develop",
        "created_at": "Friday Oct 02, 2020 at 01:18 GMT",
        "updated_at": "Friday Oct 02, 2020 at 01:19 GMT",
        "closed_at": "Friday Oct 02, 2020 at 01:19 GMT",
        "merged_at": "Friday Oct 02, 2020 at 01:19 GMT"
    },
    {
        "key": "WT-6745",
        "number": 6047,
        "state": "closed",
        "title": "WT-6745 Rollback the global durable timestamp after rollback to stable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 02, 2020 at 00:43 GMT",
        "updated_at": "Friday Oct 02, 2020 at 02:22 GMT",
        "closed_at": "Friday Oct 02, 2020 at 02:22 GMT",
        "merged_at": "Friday Oct 02, 2020 at 02:22 GMT"
    },
    {
        "key": "WT-6749",
        "number": 6046,
        "state": "closed",
        "title": "WT-6749 Write a python test for update restore of prepared update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 02, 2020 at 00:29 GMT",
        "updated_at": "Tuesday Oct 06, 2020 at 23:20 GMT",
        "closed_at": "Tuesday Oct 06, 2020 at 23:20 GMT",
        "merged_at": "Tuesday Oct 06, 2020 at 23:20 GMT"
    },
    {
        "key": "WT-4833",
        "number": 6045,
        "state": "closed",
        "title": "WT-4833 Remove support for Python2",
        "body": "- Most changes are straightforward and as expected.\r\n\r\n- We did need to change SConstruct and evergreen a bit to make it work with python3 on Windows.\r\n\r\n- One change in typing for internal Cursor set_value, get_value functions needed, changed from `void*` to `unsigned char *`.  SWIG sees the `void *` pointer and generates something like `size = size_param / sizeof(void)` (!!). `sizeof(void)` is undefined C, and happens to compile on Linux (evaluated as 1), whereas on Windows it evaluates as 0, given divide by 0 error.  Changing `void *` to `unsigned char *` fixes this, and this typing is only used internally.\r\n\r\n- Set the `-j` option for `scons` on Windows for faster builds.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 01, 2020 at 19:54 GMT",
        "updated_at": "Friday Oct 23, 2020 at 13:58 GMT",
        "closed_at": "Friday Oct 23, 2020 at 13:58 GMT",
        "merged_at": "Friday Oct 23, 2020 at 13:58 GMT"
    },
    {
        "key": "WT-6723",
        "number": 6044,
        "state": "closed",
        "title": "WT-6723 Remove lookaside comments",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 01, 2020 at 03:27 GMT",
        "updated_at": "Thursday Oct 01, 2020 at 05:36 GMT",
        "closed_at": "Thursday Oct 01, 2020 at 05:36 GMT",
        "merged_at": "Thursday Oct 01, 2020 at 05:36 GMT"
    },
    {
        "key": "WT-6748",
        "number": 6043,
        "state": "closed",
        "title": "WT-6748 Support testing different durable timestamp and commit timestamp in timestamp abort",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 01, 2020 at 00:36 GMT",
        "updated_at": "Thursday Oct 01, 2020 at 23:28 GMT",
        "closed_at": "Thursday Oct 01, 2020 at 23:28 GMT",
        "merged_at": "Thursday Oct 01, 2020 at 23:28 GMT"
    },
    {
        "key": "WT-6798",
        "number": 6042,
        "state": "closed",
        "title": "WT-6798 Utilize Arm LSE atomics and the correct strength barriers",
        "body": "Armv8 originally had load-exclusive/store-exclusive atomics. In Arm v8.1 these were extended with the Large Scale Extensions (LSE) which provided native atomic primitives such as compare-and-swap, load-and-add, etc which have been shown to scale much better on larger core-count systems. These are the default for -march=armv8.1-a, but to retain compatibility with older Arm systems the -moutline-atomics option is available which includes both new and old-style atomics and chooses dynamically. moutline-atomics is the default in gcc10 and has been backported to some distro gcc7 compilers as well as the official gcc 8 and 9 branches. Detect if the flag is available and if it is use it. \r\n\r\nbench/wtperf/runners/medium-btree.wtperf ops/s increases by 5x with  the flag applied.\r\n\r\nAdditionally, the barriers used for Arm are stronger than required. The existing dsb barriers guarantee completion, not ordering and synchronize other system activities such as tlb and cache maintenance instructions. Additionally, the sharability domain of them is system. Both of these are stronger than required. A dmb enforces ordering described in the header and the stronger dsb isn't needed. Furthermore, given that all the entities in the system which are depending on the ordering are CPUs the shareability doesn't need to order accesses with respect to device or non-cacheable memory, so it can be reduced to the inner-sharable domain.\r\n\r\nThis improve performance on the above test by about 4%. \r\n\r\nBoth changes passed make check. \r\n\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2020 at 21:17 GMT",
        "updated_at": "Tuesday Jan 12, 2021 at 15:02 GMT",
        "closed_at": "Monday Oct 19, 2020 at 04:54 GMT",
        "merged_at": "Monday Oct 19, 2020 at 04:54 GMT"
    },
    {
        "key": "WT-6747",
        "number": 6041,
        "state": "closed",
        "title": "WT-6747 Add prepare support in checkpoint test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2020 at 06:30 GMT",
        "updated_at": "Thursday Oct 01, 2020 at 00:46 GMT",
        "closed_at": "Thursday Oct 01, 2020 at 00:46 GMT",
        "merged_at": "Thursday Oct 01, 2020 at 00:46 GMT"
    },
    {
        "key": "WT-6446",
        "number": 6040,
        "state": "closed",
        "title": "WT-6446 Rename *.i into *_inline.h files",
        "body": "WiredTiger use of XXX.i as the file name for inlined functions is a little odd,\r\ngenerally the XXX.i suffix is reserved for files that do not require pre-processing,\r\nand in the case of MSVC, it's a Visual Studio Intermediate file that contains\r\nthe output of the preprocessor.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2020 at 01:27 GMT",
        "updated_at": "Wednesday Oct 14, 2020 at 00:25 GMT",
        "closed_at": "Wednesday Oct 14, 2020 at 00:25 GMT",
        "merged_at": "Wednesday Oct 14, 2020 at 00:25 GMT"
    },
    {
        "key": "WT-6712",
        "number": 6039,
        "state": "closed",
        "title": "WT-6712 RTS no stable timestamp",
        "body": "This PR has changes to allow RTS to work for non-timestamped scenarios (stable timestamp is not set).",
        "base_ref": "develop",
        "created_at": "Monday Sep 28, 2020 at 12:51 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Friday Oct 23, 2020 at 00:03 GMT",
        "merged_at": "Friday Oct 23, 2020 at 00:03 GMT"
    },
    {
        "key": "WT-6731",
        "number": 6038,
        "state": "closed",
        "title": "WT-6731 Added handling for WT_RESTART in eviction walk.",
        "body": "Also added statistic to track how often it happens.",
        "base_ref": "develop",
        "created_at": "Friday Sep 25, 2020 at 14:31 GMT",
        "updated_at": "Tuesday Sep 29, 2020 at 18:34 GMT",
        "closed_at": "Tuesday Sep 29, 2020 at 18:34 GMT",
        "merged_at": "Tuesday Sep 29, 2020 at 18:34 GMT"
    },
    {
        "key": "WT-6734",
        "number": 6037,
        "state": "closed",
        "title": "WT-6734 Add missing brace to Swig Java interface",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 25, 2020 at 05:02 GMT",
        "updated_at": "Friday Sep 25, 2020 at 13:30 GMT",
        "closed_at": "Friday Sep 25, 2020 at 13:30 GMT",
        "merged_at": "Friday Sep 25, 2020 at 13:30 GMT"
    },
    {
        "key": "WT-6719",
        "number": 6036,
        "state": "closed",
        "title": "WT-6719 Split hs.c to multiple files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 25, 2020 at 02:42 GMT",
        "updated_at": "Wednesday Sep 30, 2020 at 04:40 GMT",
        "closed_at": "Wednesday Sep 30, 2020 at 04:40 GMT",
        "merged_at": "Wednesday Sep 30, 2020 at 04:40 GMT"
    },
    {
        "key": "WT-6732",
        "number": 6035,
        "state": "closed",
        "title": "WT-6732 Fix post-task command noises in Evergreen task logs",
        "body": "The `dump stderr/stdout` evergreen function was applied to all tasks at the post-command processing phase in WT-6181. For tasks not generating the `WT_TEST` directory, a \"directory not found\" noise would be printed out in the task log. Also, macOS uses POSIX find binary, which does not support the `-printf` command option. \r\n\r\nChanges in this PR:\r\n\r\n- Add an existence check for `WT_TEST` directory before calling the find command\r\n- Replace the `-printf` find command option with `-exec sh -c 'xxx'` to make it compatible to macOS",
        "base_ref": "develop",
        "created_at": "Friday Sep 25, 2020 at 02:17 GMT",
        "updated_at": "Tuesday Sep 29, 2020 at 01:03 GMT",
        "closed_at": "Tuesday Sep 29, 2020 at 01:03 GMT",
        "merged_at": "Tuesday Sep 29, 2020 at 01:03 GMT"
    },
    {
        "key": "WT-6410",
        "number": 6034,
        "state": "closed",
        "title": "WT-6410 Remove WT_SESSION.rebalance.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 25, 2020 at 00:58 GMT",
        "updated_at": "Wednesday Sep 30, 2020 at 05:03 GMT",
        "closed_at": "Wednesday Sep 30, 2020 at 05:03 GMT",
        "merged_at": "Wednesday Sep 30, 2020 at 05:03 GMT"
    },
    {
        "key": "WT-6692",
        "number": 6033,
        "state": "closed",
        "title": "WT-6692 Handle scenario where imported timestamps are newer than current DB's timestamps",
        "body": "I think this change does what we want.\r\nThe main decisions here that aren't currently part of the technical design are:\r\n\r\n- We're comparing against `oldest`. Using `stable` is another possibility but since we're not importing history store data, timestamped reads could return unexpected results.\r\n- We're checking the metadata string instead of inspecting the root page directly.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2020 at 11:01 GMT",
        "updated_at": "Thursday Oct 08, 2020 at 07:13 GMT",
        "closed_at": "Thursday Oct 08, 2020 at 07:13 GMT",
        "merged_at": "Thursday Oct 08, 2020 at 07:13 GMT"
    },
    {
        "key": "WT-5645",
        "number": 6032,
        "state": "closed",
        "title": "WT-5645 Add Evergreen test that cycles through known failure test/format configs",
        "body": "Adding a new Evergreen task as part of the major `ubuntu1804` build variant. The task calls a new shell script to cycle through a list of test/format CONFIGs that failed previously in various WT tickets, aiming for catching issues in a more targeted measure. \r\n\r\nNew failure CONFIGs can be added easily (by adding a CONFIG.WT-xxxx file under the test/format/failure_configs directory) over time to extend testing coverage. ",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2020 at 08:25 GMT",
        "updated_at": "Monday Sep 28, 2020 at 01:06 GMT",
        "closed_at": "Monday Sep 28, 2020 at 01:06 GMT",
        "merged_at": "Monday Sep 28, 2020 at 01:06 GMT"
    },
    {
        "key": "WT-6720",
        "number": 6031,
        "state": "closed",
        "title": "WT-6720 Add new hs open() and close() methods",
        "body": "Introducing new history store open() and close() methods.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2020 at 05:23 GMT",
        "updated_at": "Wednesday Sep 30, 2020 at 06:47 GMT",
        "closed_at": "Wednesday Sep 30, 2020 at 06:47 GMT",
        "merged_at": "Wednesday Sep 30, 2020 at 06:47 GMT"
    },
    {
        "key": "WT-6160",
        "number": 6030,
        "state": "closed",
        "title": "WT-6160 format failure caused by stack overwrite #5627 (v4.2 backport)",
        "body": "*** Please note this is a clean cherry-pick ***\r\n\r\nDon't pass a (u_int) to a backup cursor WT_CURSOR.next method, the method expects a (uint64_t) and (u_int) is only 4B, not 8B.\r\n\r\nRework the path construction code: it was passing the wrong buffer length to __wt_snprintf()\r\nin some cases, and was doing unnecessary work on the second and subsequent passes through the block copying loop.\r\n\r\n(cherry picked from commit 2c72bba817b9427ba0f53540de2e4e34dc572a0d)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Sep 23, 2020 at 23:33 GMT",
        "updated_at": "Thursday Sep 24, 2020 at 00:47 GMT",
        "closed_at": "Thursday Sep 24, 2020 at 00:47 GMT",
        "merged_at": "Thursday Sep 24, 2020 at 00:47 GMT"
    },
    {
        "key": "WT-6671",
        "number": 6029,
        "state": "closed",
        "title": "WT-6671 Save checkpoint snapshot details",
        "body": "This change is ready to be reviewed.\r\n\r\nSimilar to the below snapshot details will be added to the metadata file.\r\n\r\n```\r\nsystem:checkpoint_snapshot\\00\r\nsnaphot_min=105,snapshot_max=110,snapshot_count=5,snapshots=[105,106,107,108,109,]\\00\r\n```\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 23, 2020 at 23:09 GMT",
        "updated_at": "Wednesday Oct 14, 2020 at 07:06 GMT",
        "closed_at": "Wednesday Oct 14, 2020 at 07:06 GMT",
        "merged_at": "Wednesday Oct 14, 2020 at 07:06 GMT"
    },
    {
        "key": "WT-6721",
        "number": 6028,
        "state": "closed",
        "title": "WT-6721 Create an evergreen task to measure cyclomatic complexity",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 23, 2020 at 02:14 GMT",
        "updated_at": "Sunday Sep 27, 2020 at 22:32 GMT",
        "closed_at": "Sunday Sep 27, 2020 at 22:32 GMT",
        "merged_at": "Sunday Sep 27, 2020 at 22:32 GMT"
    },
    {
        "key": "WT-6708",
        "number": 6027,
        "state": "closed",
        "title": "WT-6708 Repurpose oldest start txn to be newest txn in the aggregated time window",
        "body": "The original intention of the oldest start transaction in the aggregated time windows\r\nwas to limit the search traversing into the page when none of the transactions is\r\nvisible to the current search snapshot. However, the aggregated oldest start transaction\r\ndoesn\u2019t include the history store values, due to which the original intention of this\r\naggregated oldest start transaction doesn't limit the search. So repurposing it to store\r\nthe newest transaction will have the other benefits.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 23, 2020 at 01:47 GMT",
        "updated_at": "Tuesday Oct 13, 2020 at 23:23 GMT",
        "closed_at": "Tuesday Oct 13, 2020 at 23:23 GMT",
        "merged_at": "Tuesday Oct 13, 2020 at 23:23 GMT"
    },
    {
        "key": "WT-6674",
        "number": 6026,
        "state": "closed",
        "title": "WT-6674 Remove async API.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 22, 2020 at 16:01 GMT",
        "updated_at": "Friday Sep 25, 2020 at 02:38 GMT",
        "closed_at": "Friday Sep 25, 2020 at 02:38 GMT",
        "merged_at": "Friday Sep 25, 2020 at 02:38 GMT"
    },
    {
        "key": "WT-6643",
        "number": 6025,
        "state": "closed",
        "title": "WT-6643 Add barrier to make sure we read the latest value in the log slot.",
        "body": "Debugging the one reproduced case, the evidence said \"this shouldn't happen\" because the value in the `slot_end_lsn` in the slot was the correct value, but the value in the system field was its original value. That suggests a barrier issue to me. I have not been able to reproduce otherwise.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 22, 2020 at 14:57 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:13 GMT",
        "closed_at": "Monday Sep 28, 2020 at 15:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6181",
        "number": 6024,
        "state": "closed",
        "title": "WT-6181 Have Python Evergreen tests print standard output on failure",
        "body": "The changes in this PR are aimed to print those stderr.txt/stdout.txt files generated by C libraries in Python unit test failures onto the Evergreen console, to save developers' effort of reading those contents out manually during failure troubleshooting. \r\n\r\nThere are actually two types of failures to be supported, \"non-crash\" (e.g. those triggered by `WT_RET_MSG()`) and \"crash\" (e.g. those triggered by `WT_RET_PANIC()`) failures. The changes in WiredTiger Python unittest tearDown() (by calling `self.captureout.check(self)`) is sufficient to support non-crash failures, but not crash failures, as in crash failures Python interpreter will be crashed by interrupt signal and won't get chance to run to the tearDown() call. \r\n\r\nChanges in test/evergreen.yml are to complement the above-mentioned Python tearDown() changes, by running a find command to find out stderr.txt/stdout.txt files under the WT_TEST directory, and print them out at the `post` stage of task execution. This means for non-crash failures there will be duplicated contents dumped out on the Evergreen console, which may not be a big concern. ",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 22, 2020 at 05:16 GMT",
        "updated_at": "Tuesday Sep 22, 2020 at 23:52 GMT",
        "closed_at": "Tuesday Sep 22, 2020 at 23:52 GMT",
        "merged_at": "Tuesday Sep 22, 2020 at 23:52 GMT"
    },
    {
        "key": "WT-6690",
        "number": 6023,
        "state": "closed",
        "title": "WT-6690 Add support for table import when the exported configuration is provided",
        "body": "Support for table imports isn't materially different from importing files.\r\nThis PR is just a Python test to explicitly check that this works and exercise some table specific functionality like projections.",
        "base_ref": "develop",
        "created_at": "Monday Sep 21, 2020 at 13:34 GMT",
        "updated_at": "Monday Sep 28, 2020 at 11:51 GMT",
        "closed_at": "Monday Sep 28, 2020 at 11:51 GMT",
        "merged_at": "Monday Sep 28, 2020 at 11:51 GMT"
    },
    {
        "key": "WT-6689",
        "number": 6022,
        "state": "closed",
        "title": "WT-6689 Add support for file import when the exported configuration is provided",
        "body": "The main changes from when you last looked at this code are:\r\n\r\n- Handling for when `file_metadata` isn't provided or if the URI already exists.\r\n- More detailed testing.\r\n  - Different import scenarios.\r\n  - Reading back values.\r\n  - Providing bad configuration (no `file_metadata`).\r\n\r\nThese tests should share a common fixture but it's not clear what that should look like yet. I'm proposing to refactor these tests a bit later when a pattern emerges.",
        "base_ref": "develop",
        "created_at": "Monday Sep 21, 2020 at 06:09 GMT",
        "updated_at": "Wednesday Sep 23, 2020 at 10:01 GMT",
        "closed_at": "Wednesday Sep 23, 2020 at 10:01 GMT",
        "merged_at": "Wednesday Sep 23, 2020 at 10:01 GMT"
    },
    {
        "key": "WT-6657",
        "number": 6021,
        "state": "closed",
        "title": "WT-6657 Fix history store panic when inserting an update without timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 21, 2020 at 01:35 GMT",
        "updated_at": "Tuesday Sep 22, 2020 at 00:48 GMT",
        "closed_at": "Tuesday Sep 22, 2020 at 00:48 GMT",
        "merged_at": "Tuesday Sep 22, 2020 at 00:48 GMT"
    },
    {
        "key": "WT-6670",
        "number": 6020,
        "state": "closed",
        "title": "WT-6670 Fix uninitialized buffer",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 17, 2020 at 23:10 GMT",
        "updated_at": "Friday Sep 18, 2020 at 00:35 GMT",
        "closed_at": "Friday Sep 18, 2020 at 00:35 GMT",
        "merged_at": "Friday Sep 18, 2020 at 00:35 GMT"
    },
    {
        "key": "WT-6654",
        "number": 6019,
        "state": "closed",
        "title": "WT-6654 Clean up test_backup15.py",
        "body": "@ddanderson I was able to reproduce after about 800 iterations. After making a few minor test improvements I have not been able to reproduce after 4000 iterations. There was a path in the test that would have compared the main table against itself (and expect them to be different). I fixed that, but added an assertion at the top to make sure we weren't taking that path. So I haven't \"fixed\" anything. There was also a line that was repeated. We may still see this again but I cannot reproduce at the moment and these changes improve the test.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 17, 2020 at 15:22 GMT",
        "updated_at": "Tuesday Sep 22, 2020 at 14:52 GMT",
        "closed_at": "Tuesday Sep 22, 2020 at 14:52 GMT",
        "merged_at": "Tuesday Sep 22, 2020 at 14:52 GMT"
    },
    {
        "key": "WT-6690",
        "number": 6018,
        "state": "closed",
        "title": "WT-6690 Add support for table import when the exported configuration is provided",
        "body": "WIP branch to support importing tables.",
        "base_ref": "wt-6689-file-import",
        "created_at": "Thursday Sep 17, 2020 at 09:16 GMT",
        "updated_at": "Monday Sep 21, 2020 at 00:58 GMT",
        "closed_at": "Monday Sep 21, 2020 at 00:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6683",
        "number": 6017,
        "state": "closed",
        "title": "WT-6683 Fix logically dead code",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 17, 2020 at 03:28 GMT",
        "updated_at": "Thursday Sep 17, 2020 at 05:05 GMT",
        "closed_at": "Thursday Sep 17, 2020 at 05:04 GMT",
        "merged_at": "Thursday Sep 17, 2020 at 05:04 GMT"
    },
    {
        "key": "WT-6694",
        "number": 6016,
        "state": "closed",
        "title": "WT-6694 Verify hs file exists or not before recovery",
        "body": "Verifying history store file exists or not before recovery avoids a\r\nPANIC error thus it frees the allocated memory",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 16, 2020 at 08:16 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Thursday Sep 17, 2020 at 02:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6685",
        "number": 6015,
        "state": "closed",
        "title": "WT-6685 Add import configuration option to WT_SESSION::create",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 16, 2020 at 07:25 GMT",
        "updated_at": "Friday Sep 18, 2020 at 04:51 GMT",
        "closed_at": "Friday Sep 18, 2020 at 04:51 GMT",
        "merged_at": "Friday Sep 18, 2020 at 04:51 GMT"
    },
    {
        "key": "WT-4310",
        "number": 6014,
        "state": "closed",
        "title": "WT-4310 Add option to not abort in diagnostic builds on data corruption",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 15, 2020 at 04:53 GMT",
        "updated_at": "Friday Oct 02, 2020 at 01:33 GMT",
        "closed_at": "Wednesday Sep 30, 2020 at 07:30 GMT",
        "merged_at": "Wednesday Sep 30, 2020 at 07:30 GMT"
    },
    {
        "key": "WT-6680",
        "number": 6013,
        "state": "closed",
        "title": "WT-6680 temporarily disable history store verification",
        "body": "",
        "base_ref": "rts-test-format",
        "created_at": "Tuesday Sep 15, 2020 at 00:15 GMT",
        "updated_at": "Tuesday Sep 15, 2020 at 00:45 GMT",
        "closed_at": "Tuesday Sep 15, 2020 at 00:45 GMT",
        "merged_at": "Tuesday Sep 15, 2020 at 00:45 GMT"
    },
    {
        "key": "WT-6598",
        "number": 6012,
        "state": "closed",
        "title": "WT-6598 Add API to set number of hash buckets. (#5967) (v4.0 backport)",
        "body": "* WT-6598 Add API to set number of hash buckets.\r\n\r\n* Add statistics so bucket sizes can be visible.\r\n\r\n* Add checkpoint gather handle stats.\r\n\r\n* Rename buckets to hash_size.\r\n\r\n* Add test. Fix when we set the stats.\r\n\r\n* Configure hash sizes even earlier.\r\n\r\n* Minor changes from review comments.\r\n\r\n* Run s_all.\r\n\r\n* Require hash bucket sizes to be power of 2.\r\n\r\n* Fix test to use power of 2.\r\n\r\n* Fix value to be power of 2.\r\n\r\n* Add test of invalid values.\r\n\r\n* Move hash configuration processing earlier, before loading extensions.\r\n\r\n* Typo.\r\n\r\n(cherry picked from commit 06f0d05eebab678f9459fc15448df11a57b624cb)\r\n(cherry picked from commit 3fc1d6a5245ae76530d79847d59ebefcbf39b419)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Sep 14, 2020 at 00:50 GMT",
        "updated_at": "Tuesday Sep 15, 2020 at 21:33 GMT",
        "closed_at": "Tuesday Sep 15, 2020 at 21:33 GMT",
        "merged_at": "Tuesday Sep 15, 2020 at 21:33 GMT"
    },
    {
        "key": "WT-6598",
        "number": 6011,
        "state": "closed",
        "title": "WT-6598 Add API to set number of hash buckets. (#5967)",
        "body": "* WT-6598 Add API to set number of hash buckets.\r\n\r\n* Add statistics so bucket sizes can be visible.\r\n\r\n* Add checkpoint gather handle stats.\r\n\r\n* Rename buckets to hash_size.\r\n\r\n* Add test. Fix when we set the stats.\r\n\r\n* Configure hash sizes even earlier.\r\n\r\n* Minor changes from review comments.\r\n\r\n* Run s_all.\r\n\r\n* Require hash bucket sizes to be power of 2.\r\n\r\n* Fix test to use power of 2.\r\n\r\n* Fix value to be power of 2.\r\n\r\n* Add test of invalid values.\r\n\r\n* Move hash configuration processing earlier, before loading extensions.\r\n\r\n* Typo.\r\n\r\n(cherry picked from commit 06f0d05eebab678f9459fc15448df11a57b624cb)",
        "base_ref": "mongodb-4.0",
        "created_at": "Sunday Sep 13, 2020 at 22:24 GMT",
        "updated_at": "Wednesday Jan 27, 2021 at 02:40 GMT",
        "closed_at": "Monday Sep 14, 2020 at 03:29 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6610",
        "number": 6010,
        "state": "closed",
        "title": "WT-6610 Fix incremental backup checkpoint parsing to handle upgrades (4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Sep 11, 2020 at 02:00 GMT",
        "updated_at": "Monday Sep 14, 2020 at 23:39 GMT",
        "closed_at": "Monday Sep 14, 2020 at 23:39 GMT",
        "merged_at": "Monday Sep 14, 2020 at 23:39 GMT"
    },
    {
        "key": "WT-6666",
        "number": 6009,
        "state": "closed",
        "title": "WT-6666 Start op timer when we configure it in rollback and commit",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 11, 2020 at 00:44 GMT",
        "updated_at": "Monday Sep 14, 2020 at 06:32 GMT",
        "closed_at": "Monday Sep 14, 2020 at 06:31 GMT",
        "merged_at": "Monday Sep 14, 2020 at 06:31 GMT"
    },
    {
        "key": "WT-6064",
        "number": 6008,
        "state": "closed",
        "title": "WT-6064 Enable coverage-report",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 10, 2020 at 23:51 GMT",
        "updated_at": "Tuesday Sep 15, 2020 at 02:03 GMT",
        "closed_at": "Tuesday Sep 15, 2020 at 02:03 GMT",
        "merged_at": "Tuesday Sep 15, 2020 at 02:03 GMT"
    },
    {
        "key": "WT-6649",
        "number": 6007,
        "state": "closed",
        "title": "WT-6649 Coverity: Unintentional integer overflow in __wt_rec_need_split",
        "body": "The expression `r->supd_next * WT_UPDATE_SIZE` uses 32-bit arithmetic and can overflow. We just need to cast one of the operands to a `size_t` and we should be fine.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 10, 2020 at 00:57 GMT",
        "updated_at": "Monday Sep 14, 2020 at 00:27 GMT",
        "closed_at": "Monday Sep 14, 2020 at 00:27 GMT",
        "merged_at": "Monday Sep 14, 2020 at 00:27 GMT"
    },
    {
        "key": "WT-6598",
        "number": 6006,
        "state": "closed",
        "title": "WT-6598 Add new API allowing changing dhandle hash bucket size (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Sep 09, 2020 at 23:44 GMT",
        "updated_at": "Monday Sep 14, 2020 at 23:46 GMT",
        "closed_at": "Monday Sep 14, 2020 at 23:46 GMT",
        "merged_at": "Monday Sep 14, 2020 at 23:46 GMT"
    },
    {
        "key": "WT-6653",
        "number": 6005,
        "state": "closed",
        "title": "WT-6653 In the rollback to stable test, rollback/restart txn before retry.",
        "body": "Group entire iteration of updates in a function that can be repeated after rollback.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 09, 2020 at 16:13 GMT",
        "updated_at": "Thursday Sep 10, 2020 at 14:49 GMT",
        "closed_at": "Thursday Sep 10, 2020 at 14:49 GMT",
        "merged_at": "Thursday Sep 10, 2020 at 14:49 GMT"
    },
    {
        "key": "WT-6553",
        "number": 6004,
        "state": "closed",
        "title": "WT-6553 In the rollback to stable test, rollback/restart the transaction before retrying.",
        "body": "Group entire iteration of updates in a function that can be repeated after rollback.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 09, 2020 at 16:01 GMT",
        "updated_at": "Wednesday Sep 09, 2020 at 16:14 GMT",
        "closed_at": "Wednesday Sep 09, 2020 at 16:07 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6592",
        "number": 6003,
        "state": "closed",
        "title": "WT-6592 Avoid marking errors for skipped Python tests due to not-built extension",
        "body": "Introducing a new `skipped` instance variable in `WiredTigerTestCase` Python class. Setting the variable while detecting not-built extension and calling skipTest(), and at the tearDown phase avoid treating the skipped test as an error.\r\n\r\nPlease note normally when a test is marked as skipped in unittest framework, no setUp() or tearDown() would be called. The case we are trying to address here is a bit special, that the test is not skipped at the beginning (as a whole), instead, the skip decision is made at a later stage of the test when detecting missing extension. ",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 09, 2020 at 07:34 GMT",
        "updated_at": "Thursday Sep 10, 2020 at 22:00 GMT",
        "closed_at": "Thursday Sep 10, 2020 at 22:00 GMT",
        "merged_at": "Thursday Sep 10, 2020 at 22:00 GMT"
    },
    {
        "key": "WT-6000",
        "number": 6002,
        "state": "closed",
        "title": "WT-6000 Add format support to restart incremental backup on reopen. (#5936)",
        "body": "* WT-6000 Add format support to restart incremental backup on reopen.\r\n\r\n* Use errno instead of ret. Fix some naming.\r\n\r\n* Open a cursor in the restore function. Our saved ID may not have made it\r\nout to a checkpoint. Other code cleanup.\r\n\r\n* Remove unused variable.\r\n\r\n* Review comments. Clean up error handling.\r\n\r\n* Whitespace\r\n\r\n(cherry picked from commit 0ea9fdd39e6eb0ef8cca218abeaac6d86619a04c)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Sep 09, 2020 at 03:19 GMT",
        "updated_at": "Wednesday Sep 09, 2020 at 05:31 GMT",
        "closed_at": "Wednesday Sep 09, 2020 at 05:31 GMT",
        "merged_at": "Wednesday Sep 09, 2020 at 05:31 GMT"
    },
    {
        "key": "WT-6490",
        "number": 6001,
        "state": "closed",
        "title": "WT-6490 Acquire snapshot for eviction threads",
        "body": "This change enables eviction worker threads to see more updates than the current transaction visibility check that uses a strict last running id check for updates on the page. Eviction threads will now acquire a snapshot when they try to evict a page, which will let threads perform a more detailed check via __txn_visible_id() function.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 09, 2020 at 02:39 GMT",
        "updated_at": "Tuesday Oct 06, 2020 at 23:41 GMT",
        "closed_at": "Friday Sep 18, 2020 at 01:39 GMT",
        "merged_at": "Friday Sep 18, 2020 at 01:39 GMT"
    },
    {
        "key": "WT-6650",
        "number": 6000,
        "state": "closed",
        "title": "WT-6650 Don't raise error until session is closed properly",
        "body": "Once the session->close API enters the code to close the session,\r\ndon't raise intermmediate errors until the session is closed properly.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 09, 2020 at 01:18 GMT",
        "updated_at": "Wednesday Sep 09, 2020 at 04:26 GMT",
        "closed_at": "Wednesday Sep 09, 2020 at 04:26 GMT",
        "merged_at": "Wednesday Sep 09, 2020 at 04:26 GMT"
    },
    {
        "key": "WT-6583",
        "number": 5999,
        "state": "closed",
        "title": "WT-6583 Only clear the read timestamp when releasing the transaction",
        "body": "This change decouple clearing the read timestamp from releasing snapshot. We now only clear the read timestamp when we release the transaction's resources after commit or rollback.\r\n\r\nThe tests including stress tests and mongodb tests look OK with the change.\r\n\r\nThe downside of the change is that in some cases, the read timestamps are cleared later than before, thus pinned timestamp may not be updated as aggressively as before causing more data to be pinned for slightly longer. But I think it shouldn't be a big deal.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 08, 2020 at 23:19 GMT",
        "updated_at": "Wednesday Sep 16, 2020 at 01:47 GMT",
        "closed_at": "Wednesday Sep 16, 2020 at 01:47 GMT",
        "merged_at": "Wednesday Sep 16, 2020 at 01:47 GMT"
    },
    {
        "key": "WT-6546",
        "number": 5998,
        "state": "closed",
        "title": "WT-6546 Update fast truncate to use newest start durable ts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 08, 2020 at 04:04 GMT",
        "updated_at": "Wednesday Sep 09, 2020 at 01:51 GMT",
        "closed_at": "Wednesday Sep 09, 2020 at 01:51 GMT",
        "merged_at": "Wednesday Sep 09, 2020 at 01:51 GMT"
    },
    {
        "key": "WT-6505",
        "number": 5997,
        "state": "closed",
        "title": "WT-6505 Add debugging for missing file failure.",
        "body": "Please review. I've added 4 different things to gather more information for next time (itemized in the ticket). I am open to additional ideas.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 03, 2020 at 17:47 GMT",
        "updated_at": "Thursday Sep 03, 2020 at 20:00 GMT",
        "closed_at": "Thursday Sep 03, 2020 at 20:00 GMT",
        "merged_at": "Thursday Sep 03, 2020 at 20:00 GMT"
    },
    {
        "key": "WT-6421",
        "number": 5996,
        "state": "closed",
        "title": "WT-6421 Avoid parsing metadata checkpoint for clean files. (#5924) (#5992)",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Sep 03, 2020 at 01:41 GMT",
        "updated_at": "Tuesday Sep 08, 2020 at 23:24 GMT",
        "closed_at": "Tuesday Sep 08, 2020 at 23:24 GMT",
        "merged_at": "Tuesday Sep 08, 2020 at 23:24 GMT"
    },
    {
        "key": "WT-6604",
        "number": 5995,
        "state": "closed",
        "title": "WT-6604 Fix a typo to use binary representation in cell.h",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 02, 2020 at 23:59 GMT",
        "updated_at": "Thursday Sep 03, 2020 at 01:11 GMT",
        "closed_at": "Thursday Sep 03, 2020 at 01:11 GMT",
        "merged_at": "Thursday Sep 03, 2020 at 01:11 GMT"
    },
    {
        "key": "WT-5144",
        "number": 5994,
        "state": "closed",
        "title": "WT-5144 Improve runtime in perf programs.",
        "body": "@ddanderson please carefully check the changes to `workgen`. I left some of the `workgen_epoch` calls in there where it was not an obvious `stop-start` timing situation.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 02, 2020 at 19:38 GMT",
        "updated_at": "Wednesday Sep 02, 2020 at 22:01 GMT",
        "closed_at": "Wednesday Sep 02, 2020 at 22:01 GMT",
        "merged_at": "Wednesday Sep 02, 2020 at 22:01 GMT"
    },
    {
        "key": "WT-6613",
        "number": 5993,
        "state": "closed",
        "title": "WT-6613 Add Python test for early_load flag",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 02, 2020 at 04:49 GMT",
        "updated_at": "Thursday Sep 03, 2020 at 03:17 GMT",
        "closed_at": "Thursday Sep 03, 2020 at 03:17 GMT",
        "merged_at": "Thursday Sep 03, 2020 at 03:17 GMT"
    },
    {
        "key": "WT-6421",
        "number": 5992,
        "state": "closed",
        "title": "WT-6421 Avoid parsing metadata checkpoint for clean files. (#5924)",
        "body": "* WT-6421 Avoid parsing metadata checkpoint for clean files.\r\n\r\n* Set timer to forever if we know we'll never have to delete older\r\ncheckpoints.\r\n\r\n* Fix WT_RET to WT_ERR.\r\n\r\n* Remove unneeded WT_UNUSED. And formatting.\r\n\r\n* Add per-btree stat for clean checkpoint timer\r\n\r\n* Add new stat to list we cannot detect.\r\n\r\n* Add test and fixes for it.\r\n\r\n* Alphabetize.\r\n\r\n* Clean up and simplify test\r\n\r\n* Fix test to check values are within 1 second of each other.\r\n\r\n* Style fixes. Remove unneeded code/comment.\r\n\r\n(cherry picked from commit 8d8e71d683e08794cfd6946e56bdd81042fb2fd8)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Sep 02, 2020 at 01:09 GMT",
        "updated_at": "Wednesday Sep 02, 2020 at 21:58 GMT",
        "closed_at": "Wednesday Sep 02, 2020 at 21:58 GMT",
        "merged_at": "Wednesday Sep 02, 2020 at 21:58 GMT"
    },
    {
        "key": "WT-6640",
        "number": 5991,
        "state": "closed",
        "title": "WT-6640 Coverity: Failure to restore saved dhandle",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2020 at 08:29 GMT",
        "updated_at": "Wednesday Sep 02, 2020 at 03:23 GMT",
        "closed_at": "Wednesday Sep 02, 2020 at 03:23 GMT",
        "merged_at": "Wednesday Sep 02, 2020 at 03:23 GMT"
    },
    {
        "key": "WT-6641",
        "number": 5990,
        "state": "closed",
        "title": "WT-6641 Coverity: Unused value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2020 at 08:23 GMT",
        "updated_at": "Wednesday Sep 02, 2020 at 00:59 GMT",
        "closed_at": "Wednesday Sep 02, 2020 at 00:59 GMT",
        "merged_at": "Wednesday Sep 02, 2020 at 00:59 GMT"
    },
    {
        "key": "WT-6561",
        "number": 5989,
        "state": "closed",
        "title": "WT-6561 Provide MongoDB configuration in the wt utility usage output",
        "body": "This PR is making a usability fix to the `wt` utility. A common use case is to use the utility on MongoDB data files which require a specific set of options in the `-C` argument.\r\n\r\nI've added a line in the help output to provide the correct configuration to use for MongoDB data files.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2020 at 05:52 GMT",
        "updated_at": "Thursday Sep 03, 2020 at 02:30 GMT",
        "closed_at": "Thursday Sep 03, 2020 at 02:30 GMT",
        "merged_at": "Thursday Sep 03, 2020 at 02:30 GMT"
    },
    {
        "key": "WT-6623",
        "number": 5988,
        "state": "closed",
        "title": "WT-6623 Set the connection level file id in recovery file scan",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2020 at 03:56 GMT",
        "updated_at": "Wednesday Sep 02, 2020 at 00:00 GMT",
        "closed_at": "Wednesday Sep 02, 2020 at 00:00 GMT",
        "merged_at": "Wednesday Sep 02, 2020 at 00:00 GMT"
    },
    {
        "key": "WT-6624",
        "number": 5987,
        "state": "closed",
        "title": "WT-6624 Use transaction snapshot for applications performing eviction",
        "body": "If we have entered eviction through application threads and we are running transaction with snapshot isolation, we want to update our snapshot to evict pages that are not globally visible based on `last_running` transaction. We will save some of the running transaction's context, perform eviction and restore the original transaction's context (including snapshot) once we are finished.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2020 at 03:30 GMT",
        "updated_at": "Tuesday Oct 13, 2020 at 23:50 GMT",
        "closed_at": "Tuesday Oct 13, 2020 at 23:50 GMT",
        "merged_at": "Tuesday Oct 13, 2020 at 23:50 GMT"
    },
    {
        "key": "WT-6532",
        "number": 5986,
        "state": "closed",
        "title": "WT-6532 Consider update structure overhead in split length calculation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 31, 2020 at 04:55 GMT",
        "updated_at": "Tuesday Sep 01, 2020 at 07:32 GMT",
        "closed_at": "Tuesday Sep 01, 2020 at 07:32 GMT",
        "merged_at": "Tuesday Sep 01, 2020 at 07:32 GMT"
    },
    {
        "key": "WT-6635",
        "number": 5985,
        "state": "closed",
        "title": "WT-6635 Disable mix and column filetype test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 31, 2020 at 01:27 GMT",
        "updated_at": "Tuesday Sep 01, 2020 at 06:07 GMT",
        "closed_at": "Tuesday Sep 01, 2020 at 06:07 GMT",
        "merged_at": "Tuesday Sep 01, 2020 at 06:07 GMT"
    },
    {
        "key": "WT-6559",
        "number": 5984,
        "state": "closed",
        "title": "WT-6559 Use the session id from the new session to determine statistics (v4.0 backport)",
        "body": "\u2026cs bucket (#5952)\r\n\r\n(cherry picked from commit 1900a1c0f0e0f470b3c81a33708663ef65d96149)",
        "base_ref": "mongodb-4.0",
        "created_at": "Sunday Aug 30, 2020 at 22:46 GMT",
        "updated_at": "Monday Aug 31, 2020 at 06:52 GMT",
        "closed_at": "Monday Aug 31, 2020 at 06:52 GMT",
        "merged_at": "Monday Aug 31, 2020 at 06:52 GMT"
    },
    {
        "key": "WT-6625",
        "number": 5983,
        "state": "closed",
        "title": "WT-6625 Remove outdated TODO",
        "body": "This `TODO` comment refers to a ticket that has been closed which was flagged by some PM script.\r\n\r\nWe still don't know what to do about checkpoint cursors yet but we do have WT-5927 to track this issue so I've replaced it with a `FIXME` and marked it appropriately.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2020 at 06:53 GMT",
        "updated_at": "Friday Aug 28, 2020 at 01:23 GMT",
        "closed_at": "Friday Aug 28, 2020 at 01:23 GMT",
        "merged_at": "Friday Aug 28, 2020 at 01:23 GMT"
    },
    {
        "key": "WT-5585",
        "number": 5982,
        "state": "closed",
        "title": "WT-5585 Remove cache_overflow config option",
        "body": "This PR is removing the cache lookaside score statistic and the cache overflow configuration options (`file_max` being the only relevant one).\r\n\r\nThese have both been deprecated and shouldn't be used in MongoDB anymore.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2020 at 06:13 GMT",
        "updated_at": "Thursday Sep 03, 2020 at 02:07 GMT",
        "closed_at": "Thursday Sep 03, 2020 at 02:07 GMT",
        "merged_at": "Thursday Sep 03, 2020 at 02:07 GMT"
    },
    {
        "key": "WT-6583",
        "number": 5981,
        "state": "closed",
        "title": "WT-6583 Introduce WT_TXN_BEGINNING to prevent the read timestamp from being cleared",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2020 at 04:01 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Wednesday Sep 09, 2020 at 22:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6561",
        "number": 5980,
        "state": "closed",
        "title": "WT-6561 Add wt utility options for logging configuration",
        "body": "This PR is adding some options to the `wt` utility to allow us to specify the log compressor and path relative to the data files. This is important for MongoDB data files because they're usually running with the `snappy` compressor and the logs are in `<dbpath>journal`.\r\n\r\nThe data files that @kommiharibabu was looking at can be salvaged like so:\r\n```\r\nLD_LIBRARY_PATH=.libs .libs/wt -h ~/work/data/db/job0/resmoke/shard0/node1 -R -c snappy -l journal salvage file:_mdb_catalog.wt\r\n```",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2020 at 02:37 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Friday Aug 28, 2020 at 06:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6559",
        "number": 5979,
        "state": "closed",
        "title": "WT-6559 Use the session id from the new session to determine statisti\u2026",
        "body": "\u2026cs bucket (#5952)\r\n\r\n(cherry picked from commit 1900a1c0f0e0f470b3c81a33708663ef65d96149)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Aug 26, 2020 at 04:44 GMT",
        "updated_at": "Wednesday Aug 26, 2020 at 06:42 GMT",
        "closed_at": "Wednesday Aug 26, 2020 at 06:42 GMT",
        "merged_at": "Wednesday Aug 26, 2020 at 06:42 GMT"
    },
    {
        "key": "WT-6593",
        "number": 5978,
        "state": "closed",
        "title": "WT-6593 Retry conflicting operations in test_rollback_to_stable10.",
        "body": "Add output to help diagnose any hangs in the same test.",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2020 at 20:44 GMT",
        "updated_at": "Tuesday Aug 25, 2020 at 23:52 GMT",
        "closed_at": "Tuesday Aug 25, 2020 at 23:52 GMT",
        "merged_at": "Tuesday Aug 25, 2020 at 23:52 GMT"
    },
    {
        "key": "WT-6619",
        "number": 5977,
        "state": "closed",
        "title": "WT-6619 Eliminate possibility of infinite loop in test_cursor13.py",
        "body": "Fail if we can't get stable hs statistics after 100 tries, rather than trying forever.",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2020 at 17:52 GMT",
        "updated_at": "Monday Aug 24, 2020 at 18:32 GMT",
        "closed_at": "Monday Aug 24, 2020 at 18:32 GMT",
        "merged_at": "Monday Aug 24, 2020 at 18:32 GMT"
    },
    {
        "key": "WT-6583",
        "number": 5976,
        "state": "closed",
        "title": "WT-6583 Fix accidentally clearing read timestamp under cache pressure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2020 at 12:48 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Tuesday Sep 01, 2020 at 03:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6615",
        "number": 5975,
        "state": "closed",
        "title": "WT-6615 Initialize last_upd where it is actually used",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2020 at 04:13 GMT",
        "updated_at": "Tuesday Sep 01, 2020 at 23:25 GMT",
        "closed_at": "Tuesday Sep 01, 2020 at 23:25 GMT",
        "merged_at": "Tuesday Sep 01, 2020 at 23:25 GMT"
    },
    {
        "key": "WT-6616",
        "number": 5974,
        "state": "closed",
        "title": "WT-6616 Set the oldest timestamp of the checkpoint when it is finished",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2020 at 04:04 GMT",
        "updated_at": "Friday Sep 11, 2020 at 05:17 GMT",
        "closed_at": "Friday Sep 11, 2020 at 05:17 GMT",
        "merged_at": "Friday Sep 11, 2020 at 05:17 GMT"
    },
    {
        "key": "WT-6556",
        "number": 5973,
        "state": "closed",
        "title": "WT-6556 Fix internal sessions to use internal session close function than public API to avoid memory leak ",
        "body": "Due to PANIC error set by the recovery failure stops processing\r\nany session operations led to memory leak. Avoid stopping of processing\r\nsession operations for the internal sessions can fix the memory leak\r\nand also avoid performing the final checkpoint when the connection\r\nis PANIC state",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2020 at 03:22 GMT",
        "updated_at": "Monday Aug 31, 2020 at 00:10 GMT",
        "closed_at": "Monday Aug 31, 2020 at 00:10 GMT",
        "merged_at": "Monday Aug 31, 2020 at 00:10 GMT"
    },
    {
        "key": "WT-9999",
        "number": 5972,
        "state": "closed",
        "title": "WT-9999 Test pull request (against mongodb-4.4 branch)",
        "body": "",
        "base_ref": "mongodb-4.4",
        "created_at": "Monday Aug 24, 2020 at 00:21 GMT",
        "updated_at": "Thursday Sep 17, 2020 at 06:15 GMT",
        "closed_at": "Thursday Sep 17, 2020 at 06:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6611",
        "number": 5971,
        "state": "closed",
        "title": "WT-6611 Revert support for doing rename and incremental backups (mongodb-4.4)",
        "body": "Thre is a bug, and reverting will give us time to fix it properly.\r\nThe changes being reverted are WT-6215 and WT-6539.",
        "base_ref": "mongodb-4.4",
        "created_at": "Sunday Aug 23, 2020 at 01:55 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Monday Aug 24, 2020 at 03:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6611",
        "number": 5970,
        "state": "closed",
        "title": "WT-6611 Revert support for doing rename and incremental backups.",
        "body": "Thre is a bug, and reverting will give us time to fix it properly.\r\nThe changes being reverted are WT-6215 and WT-6539.",
        "base_ref": "develop",
        "created_at": "Sunday Aug 23, 2020 at 01:51 GMT",
        "updated_at": "Sunday Aug 23, 2020 at 23:32 GMT",
        "closed_at": "Sunday Aug 23, 2020 at 23:32 GMT",
        "merged_at": "Sunday Aug 23, 2020 at 23:32 GMT"
    },
    {
        "key": "WT-6589",
        "number": 5969,
        "state": "closed",
        "title": "WT-6589 Fix disabled cursor cache python tests",
        "body": "@ddanderson & @sueloverso.  I think the [JIRA Ticket](https://jira.mongodb.org/browse/WT-6589) sufficiently explains what's going on here.  But feel free to ping me with questions\u2014here or on Slack.\r\n\r\nThis basically goes back to the version of these tests before WT-6274, and then fixes the tests to work with the changes from WT-6274 and WT-6478.",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2020 at 22:10 GMT",
        "updated_at": "Monday Aug 24, 2020 at 15:58 GMT",
        "closed_at": "Monday Aug 24, 2020 at 14:33 GMT",
        "merged_at": "Monday Aug 24, 2020 at 14:33 GMT"
    },
    {
        "key": "WT-6589",
        "number": 5968,
        "state": "closed",
        "title": "WT-6589 Fix disabled cursor cache python tests",
        "body": "@ddanderson and @sueloverso.  I think the [JIRA ticket](https://jira.mongodb.org/browse/WT-6589) sufficiently explains what's happening here.  But if not feel free to ping me\u2014here or on Slack.\r\n",
        "base_ref": "master",
        "created_at": "Friday Aug 21, 2020 at 22:03 GMT",
        "updated_at": "Monday Aug 24, 2020 at 14:33 GMT",
        "closed_at": "Friday Aug 21, 2020 at 22:03 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6598",
        "number": 5967,
        "state": "closed",
        "title": "WT-6598 Add API to set number of hash buckets.",
        "body": "@ddanderson this was reverted because of segfaults while loading encryption extensions in mongodb. Here's a fix for you to review. Also if you know where we could add that to our crypto testing, let me know.",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2020 at 14:45 GMT",
        "updated_at": "Friday Aug 21, 2020 at 21:04 GMT",
        "closed_at": "Friday Aug 21, 2020 at 21:04 GMT",
        "merged_at": "Friday Aug 21, 2020 at 21:04 GMT"
    },
    {
        "key": "WT-6610",
        "number": 5966,
        "state": "closed",
        "title": "WT-6610 It is not an error if the backup rename configuration is not \u2026",
        "body": "\u2026found.",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2020 at 14:36 GMT",
        "updated_at": "Thursday Aug 27, 2020 at 13:42 GMT",
        "closed_at": "Thursday Aug 27, 2020 at 13:42 GMT",
        "merged_at": "Thursday Aug 27, 2020 at 13:42 GMT"
    },
    {
        "key": "WT-6598",
        "number": 5965,
        "state": "closed",
        "title": "Revert \"WT-6598 Add API to set number of hash buckets.\"",
        "body": "Reverts wiredtiger/wiredtiger#5956",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2020 at 05:58 GMT",
        "updated_at": "Friday Aug 21, 2020 at 05:58 GMT",
        "closed_at": "Friday Aug 21, 2020 at 05:58 GMT",
        "merged_at": "Friday Aug 21, 2020 at 05:58 GMT"
    },
    {
        "key": "WT-6583",
        "number": 5964,
        "state": "closed",
        "title": "WT-6583 Fix accidentally clearing read timestamp under cache pressure",
        "body": "This change reverts WT-6339 and add a new test to make sure the error is fixed.",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2020 at 02:53 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Thursday Aug 27, 2020 at 03:50 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6583",
        "number": 5963,
        "state": "closed",
        "title": "WT-6583 Flag history store cursor as WT_CBT_NO_TXN",
        "body": "In WT-6339, we added the code to flag the history store cursor as WT_CBT_NO_TXN.\r\n\r\n```\r\n/*\r\n* Set the flag to stop creating snapshots for history store cursors\r\n*/\r\nF_SET((WT_CURSOR_BTREE *)cursor, WT_CBT_NO_TXN);\r\n\r\n```\r\n\r\nThat part of the code then is removed in WT-6453, causing this issue.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 20, 2020 at 09:57 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Friday Aug 21, 2020 at 02:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6390",
        "number": 5962,
        "state": "closed",
        "title": "WT-6390 Extend compact02 timeout from 8 => 10 minutes",
        "body": "I haven't had a great deal of luck reproducing this on either my MacBook or even on one of the MacStadium hosts (1000+ runs). I'm not surprised as it's very rare given how frequently we run this test in Evergreen.\r\n\r\nIt seems to be reproducing much less often than when @raviprakashgiri29 extended the timeout so I think we're on the right track. I'm hoping that after bumping this to 10 min, the last x% of failures will disappear.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 20, 2020 at 07:17 GMT",
        "updated_at": "Thursday Aug 20, 2020 at 11:43 GMT",
        "closed_at": "Thursday Aug 20, 2020 at 11:43 GMT",
        "merged_at": "Thursday Aug 20, 2020 at 11:43 GMT"
    },
    {
        "key": "WT-6467",
        "number": 5961,
        "state": "closed",
        "title": "WT-6467 Fix history store verification",
        "body": "",
        "base_ref": "rts-test-format",
        "created_at": "Wednesday Aug 19, 2020 at 04:38 GMT",
        "updated_at": "Thursday Sep 10, 2020 at 08:07 GMT",
        "closed_at": "Thursday Sep 10, 2020 at 08:07 GMT",
        "merged_at": "Thursday Sep 10, 2020 at 08:07 GMT"
    },
    {
        "key": "WT-6602",
        "number": 5960,
        "state": "closed",
        "title": "WT-6602 Allow operation timeout ms to be passed to commit and rollback.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 18, 2020 at 23:30 GMT",
        "updated_at": "Friday Aug 21, 2020 at 00:41 GMT",
        "closed_at": "Friday Aug 21, 2020 at 00:41 GMT",
        "merged_at": "Friday Aug 21, 2020 at 00:41 GMT"
    },
    {
        "key": "WT-6451",
        "number": 5959,
        "state": "closed",
        "title": "WT-6451 Do not evict clean metadata pages if needed for historic reads",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 18, 2020 at 08:11 GMT",
        "updated_at": "Wednesday Aug 19, 2020 at 03:55 GMT",
        "closed_at": "Wednesday Aug 19, 2020 at 03:55 GMT",
        "merged_at": "Wednesday Aug 19, 2020 at 03:55 GMT"
    },
    {
        "key": "WT-6578",
        "number": 5958,
        "state": "closed",
        "title": "WT-6578 Prevent reconciliation from looking past the on-disk value",
        "body": "This is an alternative approach to #5933.\r\n\r\nWe've been seeing a similar pattern in a few recent build failures which are centred around concurrent eviction and checkpoint and more specifically, choosing updates for reconciliation that are earlier than the current on-disk value. This causes some updates to get inserted into the history store twice and can erroneously trigger out-of-order timestamp handling and lead to visibility issues.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 18, 2020 at 07:52 GMT",
        "updated_at": "Thursday Aug 20, 2020 at 09:24 GMT",
        "closed_at": "Thursday Aug 20, 2020 at 09:24 GMT",
        "merged_at": "Thursday Aug 20, 2020 at 09:24 GMT"
    },
    {
        "key": "WT-5693",
        "number": 5957,
        "state": "closed",
        "title": "WT-5693 Re-enabling test_wt4105",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 18, 2020 at 03:51 GMT",
        "updated_at": "Friday Aug 21, 2020 at 05:29 GMT",
        "closed_at": "Friday Aug 21, 2020 at 05:29 GMT",
        "merged_at": "Friday Aug 21, 2020 at 05:29 GMT"
    },
    {
        "key": "WT-6598",
        "number": 5956,
        "state": "closed",
        "title": "WT-6598 Add API to set number of hash buckets.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 17, 2020 at 18:08 GMT",
        "updated_at": "Friday Aug 21, 2020 at 05:58 GMT",
        "closed_at": "Thursday Aug 20, 2020 at 14:37 GMT",
        "merged_at": "Thursday Aug 20, 2020 at 14:37 GMT"
    },
    {
        "key": "WT-6596",
        "number": 5955,
        "state": "closed",
        "title": "WT-6596 Increase cache for timestamp abort test.",
        "body": "Ensure threads' key spaces are truly separate.\r\nShow the wiredtiger_open configuration on output.",
        "base_ref": "develop",
        "created_at": "Friday Aug 14, 2020 at 19:48 GMT",
        "updated_at": "Monday Aug 17, 2020 at 19:25 GMT",
        "closed_at": "Monday Aug 17, 2020 at 19:25 GMT",
        "merged_at": "Monday Aug 17, 2020 at 19:25 GMT"
    },
    {
        "key": "WT-5940",
        "number": 5954,
        "state": "closed",
        "title": "WT-5940 Migrate to Clang Format 10 (v4.2 backport)",
        "body": "This PR is backporting the Clang Format 10 migration to v4.2.",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Aug 14, 2020 at 11:59 GMT",
        "updated_at": "Wednesday Sep 09, 2020 at 04:33 GMT",
        "closed_at": "Wednesday Sep 09, 2020 at 04:33 GMT",
        "merged_at": "Wednesday Sep 09, 2020 at 04:33 GMT"
    },
    {
        "key": "WT-6583",
        "number": 5953,
        "state": "closed",
        "title": "WT-6583 Fix read timestamp being cleared under cache pressure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 14, 2020 at 06:21 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:16 GMT",
        "closed_at": "Friday Aug 21, 2020 at 00:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6559",
        "number": 5952,
        "state": "closed",
        "title": "WT-6559 Use the session id from the new session to determine statisti\u2026",
        "body": "\u2026cs bucket",
        "base_ref": "develop",
        "created_at": "Friday Aug 14, 2020 at 04:24 GMT",
        "updated_at": "Monday Aug 17, 2020 at 22:38 GMT",
        "closed_at": "Monday Aug 17, 2020 at 22:38 GMT",
        "merged_at": "Monday Aug 17, 2020 at 22:38 GMT"
    },
    {
        "key": "WT-6471",
        "number": 5951,
        "state": "closed",
        "title": "WT-6471 Avoid the error message for non-existent clang-format binary",
        "body": "Below log message was dumped out when the `clang-format` binary does not exist in the git tree when running `s_all` or `s_clang_format` (which is the case in Evergreen testing). The message may confuse users and make them think the `s_clang-format` script did not get to run, though in reality the script will try to download the clang-format tarball, unzip it and continue running. \r\n\r\n> [2020/06/23 07:17:55.123] ./s_clang-format: line 29: clang-format: command not found\r\n\r\n\r\nThis PR is to avoid the \"command not found\" error message, ~~and add another log line by indicating the tarball downloading is happening~~.",
        "base_ref": "develop",
        "created_at": "Friday Aug 14, 2020 at 03:21 GMT",
        "updated_at": "Friday Aug 14, 2020 at 04:53 GMT",
        "closed_at": "Friday Aug 14, 2020 at 04:53 GMT",
        "merged_at": "Friday Aug 14, 2020 at 04:53 GMT"
    },
    {
        "key": "WT-6478",
        "number": 5950,
        "state": "closed",
        "title": "WT-6478 Cursor cache statistics not getting incremented",
        "body": "I moved where we increment the `cursor_cache` statistic to before we try to cache the cursor.  This is necessary since caching the cursor releases the session's dhandle, so afterwards we no longer have one to increment statistics on.  To avoid counting errors, I also decrement the statistics after we re-open the cursor on error.  Since different cursor types can have different implementations of reopen, it's possible this won't always work. But I figure occasionally miscounting an event is better than never counting the event.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 13, 2020 at 13:27 GMT",
        "updated_at": "Thursday Aug 13, 2020 at 14:42 GMT",
        "closed_at": "Thursday Aug 13, 2020 at 14:42 GMT",
        "merged_at": "Thursday Aug 13, 2020 at 14:42 GMT"
    },
    {
        "key": "WT-6215",
        "number": 5949,
        "state": "closed",
        "title": "WT-6215 Clear backup block information on rename. (#5662) (v4.2 backport)",
        "body": "* WT-6215 Clear backup block information on rename.\r\n\r\n* Set all bits in backup info of new metadata on rename.\r\n\r\n* We need to retain all the incremental metadata information on rename.\r\n\r\n* Add a rename field to incremental backup info in metadata for rename\r\nmanagement.\r\n\r\nCo-authored-by: Alex Cameron <alex.cameron@10gen.com>\r\n(cherry picked from commit 7365ea188aaf1aa094824def8822d816752dcab2)",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Aug 13, 2020 at 11:28 GMT",
        "updated_at": "Tuesday Aug 18, 2020 at 06:01 GMT",
        "closed_at": "Tuesday Aug 18, 2020 at 06:01 GMT",
        "merged_at": "Tuesday Aug 18, 2020 at 06:01 GMT"
    },
    {
        "key": "WT-6577",
        "number": 5948,
        "state": "closed",
        "title": "WT-6577 History store dump outputs confusing time window",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 13, 2020 at 11:16 GMT",
        "updated_at": "Friday Aug 14, 2020 at 03:30 GMT",
        "closed_at": "Friday Aug 14, 2020 at 03:30 GMT",
        "merged_at": "Friday Aug 14, 2020 at 03:30 GMT"
    },
    {
        "key": "WT-6591",
        "number": 5947,
        "state": "closed",
        "title": "WT-6591 Stop checkpoint thread before closing connection in Python tests",
        "body": "While trying to repro a separate issue, I noticed that tests that use `checkpoint_thread` occasionally hit a C assertion if they're failing in Python.\r\n\r\nThe issue is that we spin up a separate checkpoint thread but if we fail in Python before reaching the `ckpt.join()`, we'll close the connection mid-checkpoint which is not allowed. Our API doesn't allow users to be doing things with the engine from other threads if they're closing the connection.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 13, 2020 at 09:37 GMT",
        "updated_at": "Thursday Aug 13, 2020 at 23:46 GMT",
        "closed_at": "Thursday Aug 13, 2020 at 23:46 GMT",
        "merged_at": "Thursday Aug 13, 2020 at 23:46 GMT"
    },
    {
        "key": "WT-6027",
        "number": 5946,
        "state": "closed",
        "title": "WT-6027 Fix docs spelling errors and warnings",
        "body": "The issue in this ticket was initially reported as below spelling error about a digit character being included in a word. It turned out this error stopped the spell checking from running, and shadowed a list of warnings in the rest of unchecked `.dox` files.\r\n\r\n> [2020/04/19 23:26:31.395] Error: ./spell.ok: The word \"t2\" is invalid. The character '2' (U+32) may not appear at the end of a word.\r\n\r\nThe 1st commit removes `t2` from `src/docs/spell.ok`, and fixes all [warnings](https://jira.mongodb.org/browse/WT-6027?focusedCommentId=3335816&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-3335816) detected later on (as spell checking got unblocked for the rest of .dox files).\r\n\r\nThe 2nd commit updates aspell language setting to `--lang=en_US` in `dist/s_docs` script, to keep consistent with the `dist/s_string` script (see WT-5591 for details). Also fixed the additional [warnings](https://jira.mongodb.org/browse/WT-6027?focusedCommentId=3335821&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-3335821) picked up by this new language setting.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 13, 2020 at 07:18 GMT",
        "updated_at": "Friday Aug 14, 2020 at 00:00 GMT",
        "closed_at": "Friday Aug 14, 2020 at 00:00 GMT",
        "merged_at": "Friday Aug 14, 2020 at 00:00 GMT"
    },
    {
        "key": "WT-6560",
        "number": 5945,
        "state": "closed",
        "title": "WT-6560 Fix usage of global salvage in WT utility",
        "body": "The global `-S` salvage option currently doesn't work with the `wt` utility. We moved this functionality from being an argument to `recover` to being its own option to `wiredtiger_open`.\r\n\r\nThis PR is changing the `wt` utility to use the new API correctly.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 13, 2020 at 02:24 GMT",
        "updated_at": "Friday Aug 14, 2020 at 10:02 GMT",
        "closed_at": "Friday Aug 14, 2020 at 10:02 GMT",
        "merged_at": "Friday Aug 14, 2020 at 10:02 GMT"
    },
    {
        "key": "WT-6490",
        "number": 5944,
        "state": "closed",
        "title": "WT-6490 Snapshot isolation for eviction threads",
        "body": "This change enables eviction worker threads to see more updates than the current transaction visibility check that uses a strict last running id check. Eviction threads will now start a new transaction with snapshot isolation when they try to evict a page, which will let threads perform a more detailed check via `__txn_visible_id()` function.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2020 at 23:48 GMT",
        "updated_at": "Friday Sep 18, 2020 at 01:39 GMT",
        "closed_at": "Wednesday Sep 16, 2020 at 01:49 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6006",
        "number": 5943,
        "state": "closed",
        "title": "WT-6006 Revert test binaries to 10 in checkpoint-stress-test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2020 at 22:56 GMT",
        "updated_at": "Thursday Aug 13, 2020 at 01:52 GMT",
        "closed_at": "Thursday Aug 13, 2020 at 01:52 GMT",
        "merged_at": "Thursday Aug 13, 2020 at 01:52 GMT"
    },
    {
        "key": "WT-6518",
        "number": 5942,
        "state": "closed",
        "title": "WT-6518 An update with start timestamp of 0 obsoletes older updates.",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Aug 12, 2020 at 22:49 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:16 GMT",
        "closed_at": "Thursday Aug 13, 2020 at 03:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6472",
        "number": 5941,
        "state": "closed",
        "title": "WT-6472 In timestamp abort, size cache to be proportional to number of threads.",
        "body": "Set eviction_{dirty,update}_{trigger,target} appropriately, and update comments.\r\nAdd handling for rollback, it's likely to happen now.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2020 at 18:02 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 20:33 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 20:33 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 20:33 GMT"
    },
    {
        "key": "WT-6472",
        "number": 5940,
        "state": "closed",
        "title": "Revert \"WT-6472 In timestamp abort, size cache to be proportional to number of threads\"",
        "body": "Reverts wiredtiger/wiredtiger#5934\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2020 at 15:05 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 15:29 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 15:29 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 15:29 GMT"
    },
    {
        "key": "WT-6588",
        "number": 5939,
        "state": "closed",
        "title": "WT-6588 For timestamp_abort, fix eviction dirty targets usage.",
        "body": "It cannot be used with in-memory or compatibility settings.  Also handle the possibility of\r\nrollback during the worker threads' insertions, the new eviction settings makes this much more likely.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2020 at 14:54 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 18:03 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 18:03 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6586",
        "number": 5938,
        "state": "closed",
        "title": "WT-6586 Tombstone inserted to history store should also be flagged as WT_UPDATE_HS",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2020 at 00:41 GMT",
        "updated_at": "Friday Aug 14, 2020 at 05:37 GMT",
        "closed_at": "Friday Aug 14, 2020 at 05:37 GMT",
        "merged_at": "Friday Aug 14, 2020 at 05:37 GMT"
    },
    {
        "key": "WT-6585",
        "number": 5937,
        "state": "closed",
        "title": "WT-6585 Panic if updates that are older than the updates in history store are inserted to history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2020 at 00:29 GMT",
        "updated_at": "Thursday Aug 13, 2020 at 22:57 GMT",
        "closed_at": "Thursday Aug 13, 2020 at 22:57 GMT",
        "merged_at": "Thursday Aug 13, 2020 at 22:57 GMT"
    },
    {
        "key": "WT-6000",
        "number": 5936,
        "state": "closed",
        "title": "WT-6000 Add format support to restart incremental backup on reopen.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 11, 2020 at 19:22 GMT",
        "updated_at": "Friday Aug 14, 2020 at 19:34 GMT",
        "closed_at": "Friday Aug 14, 2020 at 19:34 GMT",
        "merged_at": "Friday Aug 14, 2020 at 19:34 GMT"
    },
    {
        "key": "WT-6581",
        "number": 5935,
        "state": "closed",
        "title": "WT-6581 Fix class name in test_hs15",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 11, 2020 at 00:01 GMT",
        "updated_at": "Tuesday Aug 11, 2020 at 00:53 GMT",
        "closed_at": "Tuesday Aug 11, 2020 at 00:52 GMT",
        "merged_at": "Tuesday Aug 11, 2020 at 00:52 GMT"
    },
    {
        "key": "WT-6472",
        "number": 5934,
        "state": "closed",
        "title": "WT-6472 In timestamp abort, size cache to be proportional to number of threads",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 10, 2020 at 19:09 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 14:26 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 13:00 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 13:00 GMT"
    },
    {
        "key": "WT-6578",
        "number": 5933,
        "state": "closed",
        "title": "WT-6578 Stop eviction/checkpoint undoing each other's work when running concurrently",
        "body": "We've been seeing a similar pattern in a few recent build failures which are centred around concurrent eviction and checkpoint and more specifically, choosing updates for reconciliation that are earlier than the current on-disk value. This causes some updates to get inserted into the history store twice and can erroneously trigger out-of-order timestamp handling and lead to visibility issues.",
        "base_ref": "develop",
        "created_at": "Monday Aug 10, 2020 at 02:59 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:17 GMT",
        "closed_at": "Thursday Aug 20, 2020 at 04:08 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6507",
        "number": 5932,
        "state": "closed",
        "title": "WT-6507 Exit cache eviction worker after our operation has timed out",
        "body": "This ended up looking a bit different to how I anticipated as while we do clear `operation_timeout_ms` on our transaction we actually check against the sessions timeout parameter.",
        "base_ref": "develop",
        "created_at": "Monday Aug 10, 2020 at 02:00 GMT",
        "updated_at": "Thursday Aug 13, 2020 at 07:37 GMT",
        "closed_at": "Thursday Aug 13, 2020 at 07:37 GMT",
        "merged_at": "Thursday Aug 13, 2020 at 07:37 GMT"
    },
    {
        "key": "WT-6524",
        "number": 5931,
        "state": "closed",
        "title": "WT-6524 Mark the value restored from data store as in history store if checkpoint has done so",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Aug 08, 2020 at 08:07 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:16 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 00:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6571",
        "number": 5930,
        "state": "closed",
        "title": "WT-6571 Lseek cannot use error_sys_check because it does not return an",
        "body": "int.\r\n(Also fix a contraction that is flagged on multiple machines in\r\ns_string.)",
        "base_ref": "develop",
        "created_at": "Friday Aug 07, 2020 at 14:40 GMT",
        "updated_at": "Monday Aug 10, 2020 at 17:03 GMT",
        "closed_at": "Monday Aug 10, 2020 at 17:03 GMT",
        "merged_at": "Monday Aug 10, 2020 at 17:03 GMT"
    },
    {
        "key": "WT-6569",
        "number": 5929,
        "state": "closed",
        "title": "WT-6569 Squash the same transaction tombstone updates",
        "body": "Squash the same transaction updates whenever a tombstone is found\r\nto write to disk to apply the stop timestamp on an earlier update\r\nwith different transaction. Incase if there is no update from\r\ndifferent transaction write them to disk to block the eviction.\r\n\r\nWhile instantiating the prepared updates for tombstone, if the\r\nupdate is also from the same transaction mark the update also\r\nas prepare in-progress",
        "base_ref": "develop",
        "created_at": "Friday Aug 07, 2020 at 08:55 GMT",
        "updated_at": "Thursday Aug 20, 2020 at 06:16 GMT",
        "closed_at": "Thursday Aug 20, 2020 at 06:16 GMT",
        "merged_at": "Thursday Aug 20, 2020 at 06:16 GMT"
    },
    {
        "key": "WT-6526",
        "number": 5928,
        "state": "closed",
        "title": "WT-6526 Fix assertion failure when opening DB in readonly",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 06, 2020 at 08:03 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 22:50 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 22:50 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 22:50 GMT"
    },
    {
        "key": "WT-6563",
        "number": 5927,
        "state": "closed",
        "title": "WT-6563 Enhance csuite modify test to cover more cases.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 06, 2020 at 06:45 GMT",
        "updated_at": "Monday Feb 01, 2021 at 20:16 GMT",
        "closed_at": "Thursday Sep 17, 2020 at 06:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6570",
        "number": 5926,
        "state": "closed",
        "title": "WT-6570 RTS to remove the history store updates with no stop timestamp",
        "body": "The left over updates in the history store with no stop timestamp can lead\r\nto ever-increasing history store size. Remove these extra updates in the\r\nhistory store.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 06, 2020 at 05:35 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 02:07 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 02:07 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 02:07 GMT"
    },
    {
        "key": "WT-6322",
        "number": 5925,
        "state": "closed",
        "title": "WT-6322 Split full compatibility tests into smaller groups",
        "body": "The solution taken in this PR is to split the full compatibility test into 3 smaller groups, and create one Evergreen task for each group, in order to reduce the number of files to be archived for each Evergreen task to avoid hitting the 15mins timeout threshold. \r\n\r\n- newer release branches\r\n- older release branches\r\n- WT standalone releases\r\n\r\nOver time we could adjust the former 2 groups with newer release branches created or older release branches EOL, by simply update the arrays defined in the script. ",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 05, 2020 at 04:56 GMT",
        "updated_at": "Monday Aug 10, 2020 at 00:32 GMT",
        "closed_at": "Monday Aug 10, 2020 at 00:32 GMT",
        "merged_at": "Monday Aug 10, 2020 at 00:32 GMT"
    },
    {
        "key": "WT-6421",
        "number": 5924,
        "state": "closed",
        "title": "WT-6421 Avoid parsing metadata checkpoint for clean files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 04, 2020 at 20:54 GMT",
        "updated_at": "Thursday Aug 06, 2020 at 18:17 GMT",
        "closed_at": "Thursday Aug 06, 2020 at 18:17 GMT",
        "merged_at": "Thursday Aug 06, 2020 at 18:17 GMT"
    },
    {
        "key": "WT-6551",
        "number": 5923,
        "state": "closed",
        "title": "WT-6551 Avoid a timing problem at the beginning of a test for log preallocation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 04, 2020 at 19:51 GMT",
        "updated_at": "Thursday Aug 06, 2020 at 14:59 GMT",
        "closed_at": "Thursday Aug 06, 2020 at 14:59 GMT",
        "merged_at": "Thursday Aug 06, 2020 at 14:59 GMT"
    },
    {
        "key": "WT-6544",
        "number": 5922,
        "state": "closed",
        "title": "WT-6544 Onpage value not appended to the tombstone restored from the data or history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 04, 2020 at 05:53 GMT",
        "updated_at": "Thursday Aug 13, 2020 at 22:56 GMT",
        "closed_at": "Thursday Aug 13, 2020 at 22:56 GMT",
        "merged_at": "Thursday Aug 13, 2020 at 22:56 GMT"
    },
    {
        "key": "WT-6564",
        "number": 5921,
        "state": "closed",
        "title": "WT-6564 Block manager based in-memory storage engine",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 31, 2020 at 20:29 GMT",
        "updated_at": "Wednesday Sep 16, 2020 at 01:27 GMT",
        "closed_at": "Wednesday Sep 16, 2020 at 01:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6527",
        "number": 5920,
        "state": "closed",
        "title": "WT-6527 If a thread cannot be created, return cleanly from API",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 29, 2020 at 20:03 GMT",
        "updated_at": "Wednesday Jul 29, 2020 at 21:31 GMT",
        "closed_at": "Wednesday Jul 29, 2020 at 21:31 GMT",
        "merged_at": "Wednesday Jul 29, 2020 at 21:31 GMT"
    },
    {
        "key": "WT-5242",
        "number": 5919,
        "state": "closed",
        "title": "WT-5242 Minimize checkpoints pinned during backup (v4.0 backport)",
        "body": "This PR is a series of cherry-picks from #5684. These cherry-picks were very unclean mainly because 4.0 doesn't have #4520. I was briefly considering backporting that change too but it happened BEFORE Clang Format so it's a bit complicated.\r\n\r\nBefore merging this PR, I'll squash any changes I make into @tammybailey's \"PR changes\" commit.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Jul 28, 2020 at 06:22 GMT",
        "updated_at": "Friday Aug 07, 2020 at 01:01 GMT",
        "closed_at": "Friday Aug 07, 2020 at 01:01 GMT",
        "merged_at": "Friday Aug 07, 2020 at 01:01 GMT"
    },
    {
        "key": "WT-6552",
        "number": 5918,
        "state": "closed",
        "title": "WT-6552 Fix configure flags in evergreen.yml for failing PPC tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 28, 2020 at 04:33 GMT",
        "updated_at": "Tuesday Jul 28, 2020 at 21:49 GMT",
        "closed_at": "Tuesday Jul 28, 2020 at 21:49 GMT",
        "merged_at": "Tuesday Jul 28, 2020 at 21:49 GMT"
    },
    {
        "key": "WT-6543",
        "number": 5917,
        "state": "closed",
        "title": "WT-6543 Distinguish Evergreen artifacts links across restarts for testing tasks",
        "body": "#5914 was reverted due to fallout on the Evergreen waterfall page. Will use this PR for further changes/fixes.\r\n\r\nThe fallout was because some testing tasks restarted, and in those newer executions the tests tried to retrieve artifacts of the dependant compile task, using their own execution number 1, however, the compile task was never restarted and only had the artifacts with execution number 0 uploaded. That caused artifacts retrieval (and task) failures.\r\n\r\nTo resolve this issue, the new design is to avoid distinguishing artifacts using task execution number for compile tasks, and let all testing tasks to retrieve compile artifacts without the execution number. For testing tasks, the artifacts will still be distinguished across task restarts, to provide users the flexibility to check into them when needed.\r\n\r\nBelow testing were covered in a patch build:\r\n- Verify multiple executions of compile tasks generate the same S3 URL for artifacts\r\n- Verify multiple executions of testing tasks generate different S3 URLs for artifacts (distinguished by execution number)\r\n- Verify the 1st executions of testing tasks are able to retrieve artifacts from the 1st execution of relevant compile tasks\r\n- Verify the 2nd executions of testing tasks are able to retrieve artifacts from the 1st execution of relevant compile tasks\r\n- Verify the 2nd executions of testing tasks are able to retrieve artifacts from the 2nd execution of relevant compile tasks",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 28, 2020 at 03:15 GMT",
        "updated_at": "Friday Jul 31, 2020 at 05:42 GMT",
        "closed_at": "Friday Jul 31, 2020 at 05:42 GMT",
        "merged_at": "Friday Jul 31, 2020 at 05:42 GMT"
    },
    {
        "key": "WT-6543",
        "number": 5916,
        "state": "closed",
        "title": "Revert \"WT-6543 Adding task execution number to name of Artifacts uploaded to S3\"",
        "body": "Reverts wiredtiger/wiredtiger#5914",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 28, 2020 at 03:13 GMT",
        "updated_at": "Tuesday Jul 28, 2020 at 03:13 GMT",
        "closed_at": "Tuesday Jul 28, 2020 at 03:13 GMT",
        "merged_at": "Tuesday Jul 28, 2020 at 03:13 GMT"
    },
    {
        "key": "WT-6404",
        "number": 5915,
        "state": "closed",
        "title": "WT-6404 Add timing stress that delays checkpoint after it calls __wt_txn_begin",
        "body": "Added a new timing stress for checkpoint prepare and added a command line option to `test_timestamp_abort` to enable it during testing. Updated `evergreen.yml` to use the timing stress in `test_timestamp_abort` as part of PR and stress testing.",
        "base_ref": "develop",
        "created_at": "Monday Jul 27, 2020 at 07:43 GMT",
        "updated_at": "Monday Aug 10, 2020 at 00:45 GMT",
        "closed_at": "Monday Aug 10, 2020 at 00:45 GMT",
        "merged_at": "Monday Aug 10, 2020 at 00:45 GMT"
    },
    {
        "key": "WT-6543",
        "number": 5914,
        "state": "closed",
        "title": "WT-6543 Adding task execution number to name of Artifacts uploaded to S3",
        "body": "The change is to avoid Artifacts overwriting across task restarts in the WiredTiger Evergreen projects.",
        "base_ref": "develop",
        "created_at": "Monday Jul 27, 2020 at 03:50 GMT",
        "updated_at": "Tuesday Jul 28, 2020 at 03:12 GMT",
        "closed_at": "Tuesday Jul 28, 2020 at 02:00 GMT",
        "merged_at": "Tuesday Jul 28, 2020 at 02:00 GMT"
    },
    {
        "key": "WT-6528",
        "number": 5913,
        "state": "closed",
        "title": "WT-6528 Remove offensive terminology in WiredTiger API and source code",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 27, 2020 at 02:23 GMT",
        "updated_at": "Tuesday Jul 28, 2020 at 21:48 GMT",
        "closed_at": "Tuesday Jul 28, 2020 at 21:48 GMT",
        "merged_at": "Tuesday Jul 28, 2020 at 21:48 GMT"
    },
    {
        "key": "WT-6331",
        "number": 5912,
        "state": "closed",
        "title": " WT-6331 Set oldest timestamp on startup of WiredTiger",
        "body": "Fixed the issue that test format had when it reopened a previously existing database.\r\n\r\nNew changes are in:\r\nt.c, util.c and format.h",
        "base_ref": "develop",
        "created_at": "Sunday Jul 26, 2020 at 23:27 GMT",
        "updated_at": "Tuesday Jul 28, 2020 at 03:33 GMT",
        "closed_at": "Tuesday Jul 28, 2020 at 03:33 GMT",
        "merged_at": "Tuesday Jul 28, 2020 at 03:33 GMT"
    },
    {
        "key": "WT-6542",
        "number": 5911,
        "state": "closed",
        "title": "WT-6542 Add an assert to ensure we are not unintentionally return empty values",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 23, 2020 at 03:53 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 06:10 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 06:10 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 06:10 GMT"
    },
    {
        "key": "WT-6331",
        "number": 5910,
        "state": "closed",
        "title": "Revert \"WT-6331 Set oldest timestamp on startup of WiredTiger (#5899)\"",
        "body": "This reverts commit 4854cf55090811cc5fa1ad5806a08c973c1432f7.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 22, 2020 at 23:26 GMT",
        "updated_at": "Wednesday Jul 22, 2020 at 23:30 GMT",
        "closed_at": "Wednesday Jul 22, 2020 at 23:30 GMT",
        "merged_at": "Wednesday Jul 22, 2020 at 23:30 GMT"
    },
    {
        "key": "WT-6539",
        "number": 5909,
        "state": "closed",
        "title": "WT-6539 Free checkpoint when done.",
        "body": "I was able to repro this running clang and this fix passes.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 22, 2020 at 21:24 GMT",
        "updated_at": "Thursday Jul 23, 2020 at 03:48 GMT",
        "closed_at": "Thursday Jul 23, 2020 at 03:48 GMT",
        "merged_at": "Thursday Jul 23, 2020 at 03:48 GMT"
    },
    {
        "key": "WT-6519",
        "number": 5908,
        "state": "closed",
        "title": "WT-6519 Add testing coverage for mongodb-4.6 branch in compatibility test",
        "body": "Adding the new `mongodb-4.6` branch into both the 'short' and 'long' compatibility tasks, and removing `mongodb-4.0` from the 'short' task in favor of `mongodb-4.6`. ",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 22, 2020 at 04:35 GMT",
        "updated_at": "Tuesday Jul 28, 2020 at 00:54 GMT",
        "closed_at": "Tuesday Jul 28, 2020 at 00:54 GMT",
        "merged_at": "Tuesday Jul 28, 2020 at 00:54 GMT"
    },
    {
        "key": "WT-5945",
        "number": 5907,
        "state": "closed",
        "title": "WT-5945 Enable stricter performance for test_wt2853_perf",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 21, 2020 at 13:16 GMT",
        "updated_at": "Thursday Jul 23, 2020 at 13:43 GMT",
        "closed_at": "Thursday Jul 23, 2020 at 13:43 GMT",
        "merged_at": "Thursday Jul 23, 2020 at 13:43 GMT"
    },
    {
        "key": "WT-6514",
        "number": 5906,
        "state": "closed",
        "title": "WT-6514 Fix description of eviction_updates_trigger in the documentation",
        "body": "The formatting issue is seen externally [here](http://source.wiredtiger.com/develop/struct_w_t___c_o_n_n_e_c_t_i_o_n.html#a579141678af06217b22869cbc604c6d4), where an unintended ordered list item appears in the config parameter table for the value `eviction_updates_trigger`. The `struct_w_t___c_o_n_n_e_c_t_i_o_n.html`\u00a0file is generated internally via our top-level `s_all`\u00a0script. At a lower level, doxygen is used to (among other things) transform our auto-generated `wiredtiger.in`\u00a0file to the html documentation. It appears that when generating `wiredtiger.in`, we created a text pattern that [doxygen interprets as an ordered list item](https://www.doxygen.nl/manual/lists.html).\r\n```\r\n      * size if the value is within the range of 1 to 100 or an absolute size when greater than\r\n--->  * 100. Calculated as half of \\c eviction_dirty_trigger by default.  The value is not\r\n      * allowed to exceed the \\c cache_size.  This setting only alters behavior if it is lower\r\n```\r\nFortunately, [doxygen provides a solution](https://www.doxygen.nl/manual/commands.html#cmdchardot) to this: escape the dot following the number.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 21, 2020 at 07:33 GMT",
        "updated_at": "Tuesday Jul 28, 2020 at 00:27 GMT",
        "closed_at": "Tuesday Jul 28, 2020 at 00:27 GMT",
        "merged_at": "Tuesday Jul 28, 2020 at 00:27 GMT"
    },
    {
        "key": "WT-6499",
        "number": 5905,
        "state": "closed",
        "title": "WT-6499 Ignore evict priority for btrees that are dominating cache usage",
        "body": "As we create more collections, the metadata file grows. In a system with lots (multiple thousands) of dhandles but barely any updates, the metadata file can dominate cache usage.\r\n\r\nIn the case where the metadata file causes the cache usage to go past any of the targets, the eviction server will kick in. But it will intentionally ignore the metadata file due to its evict priority until it exceeds the trigger and we begin evicting aggressively. In an idle system where cache usage isn't going up and we never begin evicting aggressively, the eviction server will continuously look for pages to evict without any success leading to high CPU usage.\r\n\r\nMy change is to ignore the evict priority if the file is currently contributing to half or more of the target cache usage. This seems like a sensible rule generally speaking and it does solve the high CPU usage we were seeing in this workload.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 21, 2020 at 02:11 GMT",
        "updated_at": "Wednesday Jul 29, 2020 at 05:43 GMT",
        "closed_at": "Wednesday Jul 29, 2020 at 05:43 GMT",
        "merged_at": "Wednesday Jul 29, 2020 at 05:43 GMT"
    },
    {
        "key": "WT-6535",
        "number": 5904,
        "state": "closed",
        "title": "WT-6535 switch WiredTiger standalone build from autoconf/libtool to SCons",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 20, 2020 at 18:14 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:30 GMT",
        "closed_at": "Monday Jul 20, 2020 at 18:22 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 5903,
        "state": "closed",
        "title": "remove ALL Default()s",
        "body": "",
        "base_ref": "keith_scons",
        "created_at": "Sunday Jul 19, 2020 at 23:55 GMT",
        "updated_at": "Monday Jul 20, 2020 at 00:14 GMT",
        "closed_at": "Monday Jul 20, 2020 at 00:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6533",
        "number": 5902,
        "state": "closed",
        "title": "WT-6533 No need to do obsolete check before inserting to history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 16, 2020 at 23:11 GMT",
        "updated_at": "Wednesday Jul 22, 2020 at 22:41 GMT",
        "closed_at": "Wednesday Jul 22, 2020 at 22:41 GMT",
        "merged_at": "Wednesday Jul 22, 2020 at 22:41 GMT"
    },
    {
        "key": "WT-6319",
        "number": 5901,
        "state": "closed",
        "title": "WT-6319 Reserve a byte for the terminating nul. (#5792)",
        "body": "(cherry picked from commit 0de11da4bff9ecd783340836e12cceb033c43bd8)",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Jul 16, 2020 at 06:40 GMT",
        "updated_at": "Friday Jul 17, 2020 at 00:31 GMT",
        "closed_at": "Friday Jul 17, 2020 at 00:31 GMT",
        "merged_at": "Friday Jul 17, 2020 at 00:31 GMT"
    },
    {
        "key": "WT-6261",
        "number": 5900,
        "state": "closed",
        "title": "WT-6261 Turn off rename until open ticket is fixed. (#5688) (v4.2 backport)",
        "body": "(cherry picked from commit 620b107bf8e5383c46ad416379edc9feeb1d4a62)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Jul 15, 2020 at 09:10 GMT",
        "updated_at": "Wednesday Jul 15, 2020 at 20:04 GMT",
        "closed_at": "Wednesday Jul 15, 2020 at 20:04 GMT",
        "merged_at": "Wednesday Jul 15, 2020 at 20:04 GMT"
    },
    {
        "key": "WT-6331",
        "number": 5899,
        "state": "closed",
        "title": "WT-6331 Set oldest timestamp on startup of WiredTiger",
        "body": "* Save oldest timestamp at the time of the checkpoint as part of the system information",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 15, 2020 at 07:13 GMT",
        "updated_at": "Wednesday Jul 22, 2020 at 04:39 GMT",
        "closed_at": "Wednesday Jul 22, 2020 at 04:39 GMT",
        "merged_at": "Wednesday Jul 22, 2020 at 04:39 GMT"
    },
    {
        "key": "WT-6529",
        "number": 5898,
        "state": "closed",
        "title": "WT-6529 Use helper function in __rollback_abort_row_ondisk_kv",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 15, 2020 at 05:53 GMT",
        "updated_at": "Thursday Jul 16, 2020 at 02:02 GMT",
        "closed_at": "Thursday Jul 16, 2020 at 02:02 GMT",
        "merged_at": "Thursday Jul 16, 2020 at 02:02 GMT"
    },
    {
        "key": "WT-5717",
        "number": 5897,
        "state": "closed",
        "title": "WT-5717 Reenable history store salvage test",
        "body": "Not sure what the intention of the test change in #5541 was but I believe that we were already testing that the history store can be salvaged. The removal of the history store from the `non_salvageable` list just means that we expect that it can be salvaged (not that it isn't tested anymore). I added back the extra checks of the history store error pattern but I believe this does the job.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 15, 2020 at 03:59 GMT",
        "updated_at": "Thursday Jul 16, 2020 at 02:20 GMT",
        "closed_at": "Thursday Jul 16, 2020 at 02:20 GMT",
        "merged_at": "Thursday Jul 16, 2020 at 02:20 GMT"
    },
    {
        "key": "WT-6517",
        "number": 5896,
        "state": "closed",
        "title": "WT-6517 Update test_txn13 to avoid getting a rollback error",
        "body": "So essentially if we avoid doing > 10 modifications we can prevent the rollback logic from triggering while also ensuring we keep the intention behind the test and write large log records. All I've done is taken the mod count to 8 and multiplied the value size by the same factor.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2020 at 05:35 GMT",
        "updated_at": "Wednesday Jul 15, 2020 at 02:43 GMT",
        "closed_at": "Wednesday Jul 15, 2020 at 02:43 GMT",
        "merged_at": "Wednesday Jul 15, 2020 at 02:43 GMT"
    },
    {
        "key": "WT-6425",
        "number": 5895,
        "state": "closed",
        "title": "WT-6425 Turn off log archiving to avoid file copy race.",
        "body": "@ddanderson I put an explanation in the ticket if you want/need more context.",
        "base_ref": "develop",
        "created_at": "Monday Jul 13, 2020 at 16:22 GMT",
        "updated_at": "Wednesday Jul 15, 2020 at 12:28 GMT",
        "closed_at": "Wednesday Jul 15, 2020 at 12:28 GMT",
        "merged_at": "Wednesday Jul 15, 2020 at 12:28 GMT"
    },
    {
        "key": "WT-5571",
        "number": 5894,
        "state": "closed",
        "title": "WT-5571 add enable-strict on all configurations, use ADD_CFLAGS for adding to compiler flags",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 13, 2020 at 14:10 GMT",
        "updated_at": "Thursday Jul 23, 2020 at 13:48 GMT",
        "closed_at": "Thursday Jul 23, 2020 at 13:47 GMT",
        "merged_at": "Thursday Jul 23, 2020 at 13:47 GMT"
    },
    {
        "key": "WT-6521",
        "number": 5893,
        "state": "closed",
        "title": "WT-6521 Don't perform checkpoint cleanup during recovery",
        "body": "Avoiding the checkpoint cleanup during recovery let the trees to be\r\nin clean state to change the logging of the table during startup.",
        "base_ref": "develop",
        "created_at": "Monday Jul 13, 2020 at 13:11 GMT",
        "updated_at": "Wednesday Jul 15, 2020 at 02:23 GMT",
        "closed_at": "Wednesday Jul 15, 2020 at 02:23 GMT",
        "merged_at": "Wednesday Jul 15, 2020 at 02:23 GMT"
    },
    {
        "key": "WT-6521",
        "number": 5892,
        "state": "closed",
        "title": "WT-6521 Distinguish the difference between dirty and cleanup dirty",
        "body": "As part of checkpoint cleanup, the pages that cannot be fast deleted are marked them dirty and let them be reconciled in the next checkpoint but this leads to problems for the operations that are expecting clean trees. To avoid the problem, split the dirty flags into normal and cleanup. Only raise errors when the tree is dirtied normally and not for cleanup.",
        "base_ref": "develop",
        "created_at": "Monday Jul 13, 2020 at 12:42 GMT",
        "updated_at": "Tuesday Jul 14, 2020 at 03:50 GMT",
        "closed_at": "Tuesday Jul 14, 2020 at 03:49 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6468",
        "number": 5891,
        "state": "closed",
        "title": "WT-6468 Discard a deleted page that is cleaned by a checkpoint",
        "body": "The problem is that a single file checkpoint tries to close a clean tree. The tree has some pages that are truncated and loaded into memory again. These truncated pages are cleaned by a previous full checkpoint, thus triggering the assert as non-globally visible truncation are not evictable. The solution is to relax the assert as we should be able to discard these pages.\r\n\r\nWe don't see this before durable history because checkpoint cannot clean the page in this case as we can't write tombstones to disk.",
        "base_ref": "develop",
        "created_at": "Monday Jul 13, 2020 at 04:24 GMT",
        "updated_at": "Thursday Jul 16, 2020 at 02:03 GMT",
        "closed_at": "Thursday Jul 16, 2020 at 02:03 GMT",
        "merged_at": "Thursday Jul 16, 2020 at 02:03 GMT"
    },
    {
        "key": "WT-6468",
        "number": 5890,
        "state": "closed",
        "title": "WT-6468 With durable history, we can evict truncated page that is not globally visible",
        "body": "I haven't reproduced the problem but I don't see why we can't evict deleted pages that are not globally visible with durable history. We will simply reconcile the tombstone appended when we read the truncated page into memory to the stop time point in the cell and it should work. The only concern I can think of is that it may cause WT-6494 happen more frequently.",
        "base_ref": "develop",
        "created_at": "Monday Jul 13, 2020 at 01:11 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:30 GMT",
        "closed_at": "Monday Jul 13, 2020 at 04:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6511",
        "number": 5889,
        "state": "closed",
        "title": "WT-6511 cursor join: explicitly advance the iterator when finished with a clause.",
        "body": "Not doing so will leave the iteration incomplete and (at a minimum) unnecessary work will be done.\r\nThe change includes a new test that checks statistics to see how much work is being done.",
        "base_ref": "develop",
        "created_at": "Friday Jul 10, 2020 at 19:02 GMT",
        "updated_at": "Friday Jul 10, 2020 at 22:02 GMT",
        "closed_at": "Friday Jul 10, 2020 at 22:02 GMT",
        "merged_at": "Friday Jul 10, 2020 at 22:02 GMT"
    },
    {
        "key": "WT-6495",
        "number": 5888,
        "state": "closed",
        "title": "WT-6495 Clean up and minor changes to test_backup16.py. (#5878)",
        "body": "* WT-6495 Clean up and minor changes to test_backup16.py.\r\n\r\n* Fix comment.\r\n\r\n(cherry picked from commit d60d58943076ac3980c8c9976fb4bb47c8be0bda)",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Jul 10, 2020 at 06:34 GMT",
        "updated_at": "Friday Jul 10, 2020 at 07:24 GMT",
        "closed_at": "Friday Jul 10, 2020 at 07:24 GMT",
        "merged_at": "Friday Jul 10, 2020 at 07:24 GMT"
    },
    {
        "key": "WT-6480",
        "number": 5887,
        "state": "closed",
        "title": "WT-6480 incremental backups can repeatedly copy entire objects on eac\u2026",
        "body": "\u2026h iteration (#5859)\r\n\r\nFix a bug where files without block modification information were repeatedly copied at each incremental backup.\r\n\r\nCo-authored-by: Tammy Bailey <tammy.bailey@mongodb.com>\r\n(cherry picked from commit 6142de1e7d863eed50b3c8449af29b0d361d77c5)",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Jul 10, 2020 at 03:51 GMT",
        "updated_at": "Friday Jul 10, 2020 at 06:18 GMT",
        "closed_at": "Friday Jul 10, 2020 at 06:18 GMT",
        "merged_at": "Friday Jul 10, 2020 at 06:18 GMT"
    },
    {
        "key": "WT-6463",
        "number": 5886,
        "state": "closed",
        "title": "WT-6463 History store operations should honor cache size",
        "body": "The primary change here is that we no longer set `WT_SESSION_IGNORE_CACHE_SIZE` while a session has an open history store cursor, allowing the thread to perform eviction as normal.  There were two places where this caused trouble, necessitating additional changes.\r\n\r\n1. An eviction thread (and possibly in other cases) that opens a history store cursor during eviction could attempt to re-enter eviction while using the cursor since `cursor_enter()` checks to see if eviction is needed.  The often leads to the eviction thread hanging.  To avoid this scenario, I have introduced a new session flag, `WT_SESSION_EVICTING` that I set when we start eviction (in `wt_evict()`).  When this flag is set, a session won't call into eviction. Mostly we can check for this in `wt_cache_eviction_check()`. The one exception (i.e., addition check) is when doing forced eviction in `wt_page_in_func()`.\r\n\r\n 2. Eviction and reconciliation often needs to access the history store. This can now happen in a session that already has a history store cursor open. When we enter eviction (`wt_evict()`) we save the history store cursor (if any) so that if/when eviction needs a history store cursor, it will open a new one and not mess up (e.g., by resetting) the sessions existing hs cursor.\r\n\r\nIn making these changes, I noticed that the `WT_SESSION_HS_CURSOR` flag appears to be completely redundant. So I've removed it. For historical reasons, this flag was cleared during checkpoint, but in looking at the code (and testing) I couldn't find any benefit from this. \r\n\r\nThis PR includes the changes from the currently unmerged PR for WT-6274.  \r\n\r\n@luke-pearson: I noticed that you made a recent change to the forced eviction code in `wt_page_in_func()`.  That was one part of this PR where I wasn't entirely sure about undesirable side effects.  So I picked you as a reviewer.  Feel free to nominate someone else.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 09, 2020 at 23:07 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 14:20 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 14:20 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 14:20 GMT"
    },
    {
        "key": "WT-5587",
        "number": 5885,
        "state": "closed",
        "title": "WT-5587 Limit how many checkpoints are dropped by a subsequent checkpoint (v3.6 backport)",
        "body": "\r\n\r\n(cherry picked from commit a19d2bff3d30fdd83086172b29161527aefc28e3)\r\n(cherry picked from commit 58baf804dd6e5a72c4e122cfb696e2d06a9fc888)\r\n(cherry picked from commit e58bd570c06955c5b85b75af4a58b6d1da7c5d90)",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jul 09, 2020 at 10:21 GMT",
        "updated_at": "Friday Jul 10, 2020 at 00:02 GMT",
        "closed_at": "Friday Jul 10, 2020 at 00:02 GMT",
        "merged_at": "Friday Jul 10, 2020 at 00:02 GMT"
    },
    {
        "key": "WT-6509",
        "number": 5884,
        "state": "closed",
        "title": "WT-6509 Change updates eviction parameter defaults",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 09, 2020 at 02:12 GMT",
        "updated_at": "Monday Jul 13, 2020 at 03:24 GMT",
        "closed_at": "Monday Jul 13, 2020 at 03:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6508",
        "number": 5883,
        "state": "closed",
        "title": "WT-6508 Perform garbage collection on data store as part of checkpoint",
        "body": "To remove the obsolete pages that contains all the deleted keys,\r\nthe garbage collection as part of checkpoint must scan these pages\r\nand remove them. This is used to do for the history store pages, now\r\nit is enabled to perform on data store pages also.\r\n\r\nTo avoid reading unnecessary pages into cache, during tree walk,\r\nthe pages that doesn't have stop timestamp are ignored until they\r\nare present in the cache.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 08, 2020 at 05:03 GMT",
        "updated_at": "Thursday Jul 09, 2020 at 22:23 GMT",
        "closed_at": "Thursday Jul 09, 2020 at 22:23 GMT",
        "merged_at": "Thursday Jul 09, 2020 at 22:23 GMT"
    },
    {
        "key": "WT-5119",
        "number": 5882,
        "state": "closed",
        "title": "WT-5119 Birthmark records can be read as normal updates if reads race with checkpoints (v3.6 backport)",
        "body": "\u2026 with checkpoints. (#5082)\r\n\r\n* We need to make sure the WT_UPDATE txnid is set to WT_TXN_ABORTED before the type is switched to\r\nWT_UPDATE_STANDARD, otherwise a read can race with the update and read the birthmark record as a\r\nnormal update.\r\n\r\n* The most conservative version of this fix, committed for discussion.\r\n\r\nAdd/Use a WT_ORDERED_WRITE macro, currently synonymous with WT_PUBLISH.\r\n\r\n(cherry picked from commit e3cbe6dc8dfb3e39fc014ac32e6192d7fe469677)",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Jul 07, 2020 at 00:10 GMT",
        "updated_at": "Wednesday Jul 08, 2020 at 20:56 GMT",
        "closed_at": "Wednesday Jul 08, 2020 at 20:56 GMT",
        "merged_at": "Wednesday Jul 08, 2020 at 20:56 GMT"
    },
    {
        "key": "WT-5970",
        "number": 5881,
        "state": "closed",
        "title": "WT-5970 test_wt2853_perf failure",
        "body": "The test test_wt2853_perf fails because of memory contention by other csuite binaries, ex: `test_wt4333_handle_locks`\r\nuses 5 GB of cache and runs a maximum of 600 threads.\r\n\r\nI updated the binary `test_wt4333_handle_locks` to use a maximum of 64 threads, cache_size of 1 GB, ran the test overnight and none of the csuite binaries failed.",
        "base_ref": "develop",
        "created_at": "Monday Jul 06, 2020 at 21:34 GMT",
        "updated_at": "Wednesday Jul 08, 2020 at 09:12 GMT",
        "closed_at": "Wednesday Jul 08, 2020 at 09:12 GMT",
        "merged_at": "Wednesday Jul 08, 2020 at 09:12 GMT"
    },
    {
        "key": "WT-6233",
        "number": 5880,
        "state": "closed",
        "title": "WT-6233 Review stats that track history store truncate code paths",
        "body": "The aim of this PR is to review the stats that track the events that lead up to truncation of history store. We want the stats to be meaningful, easy to search, and most importantly, grouped together to make interpretation easier for support engineers and developers. ",
        "base_ref": "develop",
        "created_at": "Friday Jul 03, 2020 at 03:41 GMT",
        "updated_at": "Wednesday Jul 22, 2020 at 01:58 GMT",
        "closed_at": "Wednesday Jul 22, 2020 at 01:58 GMT",
        "merged_at": "Wednesday Jul 22, 2020 at 01:58 GMT"
    },
    {
        "key": "WT-6501",
        "number": 5879,
        "state": "closed",
        "title": "WT-6501 Don't fix out of order timestamps for updates without timestamps",
        "body": "This PR brings it closer to the proper fix for WT-6479 and should address the BF we see in mongodb. But it is still not 100% correct.",
        "base_ref": "develop",
        "created_at": "Friday Jul 03, 2020 at 00:18 GMT",
        "updated_at": "Monday Oct 26, 2020 at 18:45 GMT",
        "closed_at": "Tuesday Jul 07, 2020 at 04:49 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6495",
        "number": 5878,
        "state": "closed",
        "title": "WT-6495 Clean up and minor changes to test_backup16.py.",
        "body": "Please review. I added one more case and did some refactoring and a lot of commenting.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 02, 2020 at 19:22 GMT",
        "updated_at": "Friday Jul 03, 2020 at 03:29 GMT",
        "closed_at": "Friday Jul 03, 2020 at 03:29 GMT",
        "merged_at": "Friday Jul 03, 2020 at 03:29 GMT"
    },
    {
        "key": "WT-5376",
        "number": 5877,
        "state": "closed",
        "title": "WT-5376 WT_UPDATE.type field can race with visibility checks when returning key/value pairs (v3.6 backport)",
        "body": "* Cache the WT_UPDATE.type field so that it can't change underneath us after the visibility checks.\r\n\r\n(cherry picked from commit 168c7f1b3859516115721868f312544abb0caf5b)",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jul 02, 2020 at 10:18 GMT",
        "updated_at": "Thursday Jul 02, 2020 at 20:55 GMT",
        "closed_at": "Thursday Jul 02, 2020 at 20:55 GMT",
        "merged_at": "Thursday Jul 02, 2020 at 20:55 GMT"
    },
    {
        "key": "WT-6479",
        "number": 5876,
        "state": "closed",
        "title": "WT-6479 Don't insert updates after the first globally visible update to the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 02, 2020 at 09:49 GMT",
        "updated_at": "Wednesday Jul 08, 2020 at 07:36 GMT",
        "closed_at": "Wednesday Jul 08, 2020 at 07:36 GMT",
        "merged_at": "Wednesday Jul 08, 2020 at 07:36 GMT"
    },
    {
        "key": "WT-6479",
        "number": 5875,
        "state": "closed",
        "title": "Revert \"WT-6479 Don't insert updates after the first globally visible update to the history store\"",
        "body": "Reverts wiredtiger/wiredtiger#5863",
        "base_ref": "develop",
        "created_at": "Thursday Jul 02, 2020 at 03:15 GMT",
        "updated_at": "Thursday Jul 02, 2020 at 03:16 GMT",
        "closed_at": "Thursday Jul 02, 2020 at 03:16 GMT",
        "merged_at": "Thursday Jul 02, 2020 at 03:16 GMT"
    },
    {
        "key": "WT-6493",
        "number": 5874,
        "state": "closed",
        "title": "WT-6493 Retry processing update list if a prepared update is modified concurrently",
        "body": "When a prepared update is either committed or rollback concurrent to the reader session.\r\nRetying the processing of update list should return a proper update instead of returning\r\nWT_RESTART to the caller functions to resume the search again on the same key.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 02, 2020 at 02:06 GMT",
        "updated_at": "Thursday Jul 16, 2020 at 01:53 GMT",
        "closed_at": "Thursday Jul 16, 2020 at 01:53 GMT",
        "merged_at": "Thursday Jul 16, 2020 at 01:53 GMT"
    },
    {
        "key": "WT-6488",
        "number": 5873,
        "state": "closed",
        "title": "WT-6488 Fail update restore eviction if no new updates were written",
        "body": "<>>",
        "base_ref": "develop",
        "created_at": "Thursday Jul 02, 2020 at 00:13 GMT",
        "updated_at": "Thursday Jul 09, 2020 at 03:59 GMT",
        "closed_at": "Thursday Jul 09, 2020 at 03:59 GMT",
        "merged_at": "Thursday Jul 09, 2020 at 03:59 GMT"
    },
    {
        "key": "WT-6491",
        "number": 5872,
        "state": "closed",
        "title": "WT-6491 No need to append the onpage value if it is prepared",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2020 at 06:24 GMT",
        "updated_at": "Tuesday Aug 04, 2020 at 04:52 GMT",
        "closed_at": "Tuesday Aug 04, 2020 at 04:52 GMT",
        "merged_at": "Tuesday Aug 04, 2020 at 04:52 GMT"
    },
    {
        "key": "WT-6492",
        "number": 5871,
        "state": "closed",
        "title": "WT-6492 Use WT_UPDATE_RESTORED_FROM_DS to determine if the onpage value is on the update chain or not",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2020 at 06:18 GMT",
        "updated_at": "Wednesday Jul 15, 2020 at 22:57 GMT",
        "closed_at": "Wednesday Jul 15, 2020 at 22:57 GMT",
        "merged_at": "Wednesday Jul 15, 2020 at 22:57 GMT"
    },
    {
        "key": "WT-6487",
        "number": 5870,
        "state": "closed",
        "title": "WT-6487 Force pages to split in the case of lots of small updates on a page",
        "body": "In the case of a row-store leaf page, we want to encourage a split if we see lots of in-memory content. This allows pages to be split for update/restore and history store eviction even when the disk image itself isn't growing.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2020 at 00:47 GMT",
        "updated_at": "Thursday Jul 02, 2020 at 02:29 GMT",
        "closed_at": "Thursday Jul 02, 2020 at 02:29 GMT",
        "merged_at": "Thursday Jul 02, 2020 at 02:29 GMT"
    },
    {
        "key": "WT-6444",
        "number": 5869,
        "state": "closed",
        "title": "WT-6444 Abort a transaction if it is force evicting and oldest",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2020 at 00:26 GMT",
        "updated_at": "Friday Jul 03, 2020 at 00:53 GMT",
        "closed_at": "Friday Jul 03, 2020 at 00:53 GMT",
        "merged_at": "Friday Jul 03, 2020 at 00:53 GMT"
    },
    {
        "key": "WT-6462",
        "number": 5868,
        "state": "closed",
        "title": "WT-6462 Run History store operations with isolation level set as read uncommitted",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 30, 2020 at 23:49 GMT",
        "updated_at": "Wednesday Jul 01, 2020 at 00:59 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 00:59 GMT",
        "merged_at": "Wednesday Jul 01, 2020 at 00:59 GMT"
    },
    {
        "key": "WT-6483",
        "number": 5867,
        "state": "closed",
        "title": "WT-6483 Add debugging for log file lists.",
        "body": "This is a test that has rarely failed when trying to reproduce. I'm adding more debugging to catch all the different assertions so that whenever it happens we get information.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 30, 2020 at 15:43 GMT",
        "updated_at": "Tuesday Jun 30, 2020 at 18:18 GMT",
        "closed_at": "Tuesday Jun 30, 2020 at 18:18 GMT",
        "merged_at": "Tuesday Jun 30, 2020 at 18:18 GMT"
    },
    {
        "key": "WT-6484",
        "number": 5866,
        "state": "closed",
        "title": "WT-6484 Do not retry eviction if last eviction timestamp is not set",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 30, 2020 at 11:10 GMT",
        "updated_at": "Wednesday Jul 01, 2020 at 02:58 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 02:58 GMT",
        "merged_at": "Wednesday Jul 01, 2020 at 02:58 GMT"
    },
    {
        "key": "WT-6462",
        "number": 5865,
        "state": "closed",
        "title": "Revert \"WT-6462 Use read uncommitted isolation level for history store operations\"",
        "body": "Reverts wiredtiger/wiredtiger#5853",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 30, 2020 at 05:59 GMT",
        "updated_at": "Tuesday Jun 30, 2020 at 05:59 GMT",
        "closed_at": "Tuesday Jun 30, 2020 at 05:59 GMT",
        "merged_at": "Tuesday Jun 30, 2020 at 05:59 GMT"
    },
    {
        "key": "WT-5150",
        "number": 5864,
        "state": "closed",
        "title": "WT-5150 and WT-5196 backport to mongodb-3.6",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Jun 30, 2020 at 02:06 GMT",
        "updated_at": "Tuesday Jun 30, 2020 at 07:57 GMT",
        "closed_at": "Tuesday Jun 30, 2020 at 07:56 GMT",
        "merged_at": "Tuesday Jun 30, 2020 at 07:56 GMT"
    },
    {
        "key": "WT-6479",
        "number": 5863,
        "state": "closed",
        "title": "WT-6479 Don't insert updates after the first globally visible update to the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 29, 2020 at 12:40 GMT",
        "updated_at": "Thursday Jul 02, 2020 at 03:15 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 23:53 GMT",
        "merged_at": "Wednesday Jul 01, 2020 at 23:53 GMT"
    },
    {
        "key": "WT-6349",
        "number": 5862,
        "state": "closed",
        "title": "WT-6349 Don't truncate hs updates for timestamped deletes",
        "body": "When a timestamped delete is globally visible led to removal\r\nof data store key doesn't need to truncate all the previous\r\nhistory store updates until the tombstone from a mixed mode\r\ndelete operation.",
        "base_ref": "develop",
        "created_at": "Monday Jun 29, 2020 at 08:41 GMT",
        "updated_at": "Tuesday Jun 30, 2020 at 08:23 GMT",
        "closed_at": "Tuesday Jun 30, 2020 at 08:23 GMT",
        "merged_at": "Tuesday Jun 30, 2020 at 08:23 GMT"
    },
    {
        "key": "WT-6444",
        "number": 5861,
        "state": "closed",
        "title": "WT-6444 Abort a transaction if it is force evicting and oldest",
        "body": "It could be blocking itself from making progress.\r\nAlso try to run eviction as of a snapshot, rather than at a visible\r\nall setting. That should let us write more content out to disk, and\r\nunblock the cache faster.\r\n\r\nI'm mostly creating the PR as a discussion point - it isn't ready to merge",
        "base_ref": "develop",
        "created_at": "Monday Jun 29, 2020 at 07:23 GMT",
        "updated_at": "Wednesday Jul 01, 2020 at 00:27 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 00:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6482",
        "number": 5860,
        "state": "closed",
        "title": "WT-6482 Cleanup and bug fixes in __rec_append_orig_value",
        "body": "Fix an assert may trigger if transaction id or timstamps are overwritten in time window.\r\nNo need to append onpage value if a prepared update is written to disk.\r\nFix we may append the onpage value already on the update chain if transaction id or timstamps are overwritten in time window.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 28, 2020 at 23:45 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:31 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 06:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6480",
        "number": 5859,
        "state": "closed",
        "title": "WT-6480 incremental backups can repeatedly copy entire objects on each iteration",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jun 27, 2020 at 02:01 GMT",
        "updated_at": "Wednesday Jul 01, 2020 at 23:40 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 23:40 GMT",
        "merged_at": "Wednesday Jul 01, 2020 at 23:40 GMT"
    },
    {
        "key": "WT-6453",
        "number": 5858,
        "state": "closed",
        "title": "WT-6453 Pin transaction ids for history store cursor operations",
        "body": "Since we're running all history store operations under read-uncommitted isolation, we don't need to guard the cursor with this flag to prevent it from acquiring a snapshot. We also want it to pin the last running transaction id like a normal read-uncommitted transaction would (which this flag is preventing it from doing) to avoid having updates freed out from underneath us.",
        "base_ref": "develop",
        "created_at": "Friday Jun 26, 2020 at 09:29 GMT",
        "updated_at": "Wednesday Jul 01, 2020 at 23:01 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 23:01 GMT",
        "merged_at": "Wednesday Jul 01, 2020 at 23:01 GMT"
    },
    {
        "key": "WT-6349",
        "number": 5857,
        "state": "closed",
        "title": "WT-6349 Don't perform on disk key removal as part of checkpoint",
        "body": "On disk key removal needs to clear all the history store content\r\nfor the key and it might take quite a bit of time when there are\r\nmultiple keys that are needs to be removed. To avoid checkpoint\r\nwaiting for all these cleanup, better to do this as part of eviction.",
        "base_ref": "develop",
        "created_at": "Friday Jun 26, 2020 at 03:59 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:31 GMT",
        "closed_at": "Friday Jun 26, 2020 at 05:33 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6444",
        "number": 5856,
        "state": "closed",
        "title": "WT-6444 Skip using pinned txn to check for eviction retry",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 26, 2020 at 03:16 GMT",
        "updated_at": "Wednesday Jul 01, 2020 at 02:39 GMT",
        "closed_at": "Wednesday Jul 01, 2020 at 02:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6465",
        "number": 5855,
        "state": "closed",
        "title": "WT-6465 Update config to avoid rollback error in Python tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 26, 2020 at 01:41 GMT",
        "updated_at": "Thursday Jul 02, 2020 at 00:21 GMT",
        "closed_at": "Thursday Jul 02, 2020 at 00:21 GMT",
        "merged_at": "Thursday Jul 02, 2020 at 00:21 GMT"
    },
    {
        "key": "WT-6460",
        "number": 5854,
        "state": "closed",
        "title": "WT-6460 Consider checkpoint timestamp also as part of pinned timestamp for HS",
        "body": "Checkpoint timestamp is not included while calculating the pinned timestamp\r\nfor history store, this can lead to the removal of history store updates that\r\nare may be required later as per the checkpoint timestamp.",
        "base_ref": "develop",
        "created_at": "Friday Jun 26, 2020 at 00:57 GMT",
        "updated_at": "Friday Jun 26, 2020 at 05:31 GMT",
        "closed_at": "Friday Jun 26, 2020 at 05:31 GMT",
        "merged_at": "Friday Jun 26, 2020 at 05:31 GMT"
    },
    {
        "key": "WT-6462",
        "number": 5853,
        "state": "closed",
        "title": "WT-6462 Use read uncommitted isolation level for history store operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 26, 2020 at 00:03 GMT",
        "updated_at": "Tuesday Jun 30, 2020 at 05:59 GMT",
        "closed_at": "Tuesday Jun 30, 2020 at 02:31 GMT",
        "merged_at": "Tuesday Jun 30, 2020 at 02:31 GMT"
    },
    {
        "key": "WT-6477",
        "number": 5852,
        "state": "closed",
        "title": "WT-6477 format.sh ignores failures if run directory never created",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 25, 2020 at 18:21 GMT",
        "updated_at": "Monday Jun 29, 2020 at 05:08 GMT",
        "closed_at": "Monday Jun 29, 2020 at 04:54 GMT",
        "merged_at": "Monday Jun 29, 2020 at 04:54 GMT"
    },
    {
        "key": "WT-6475",
        "number": 5851,
        "state": "closed",
        "title": "WT-6475 Adding a statistic to track how many times we call cursor pre\u2026",
        "body": "\u2026v when we see a globally visible tombstone",
        "base_ref": "develop",
        "created_at": "Thursday Jun 25, 2020 at 01:40 GMT",
        "updated_at": "Monday Jun 29, 2020 at 03:59 GMT",
        "closed_at": "Monday Jun 29, 2020 at 03:59 GMT",
        "merged_at": "Monday Jun 29, 2020 at 03:59 GMT"
    },
    {
        "key": "WT-6325",
        "number": 5850,
        "state": "closed",
        "title": "WT-6325 fast truncate can lead to never resolved prepared operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 25, 2020 at 00:47 GMT",
        "updated_at": "Wednesday Jul 22, 2020 at 23:17 GMT",
        "closed_at": "Wednesday Jul 22, 2020 at 23:17 GMT",
        "merged_at": "Wednesday Jul 22, 2020 at 23:17 GMT"
    },
    {
        "key": "WT-6476",
        "number": 5849,
        "state": "closed",
        "title": "WT-6476 Block running rebalance with timestamp set in test format",
        "body": "@lukech, this should turn off the core dumps we're seeing from `format-stress-sanitizer-smoke-test-2`.\r\n\r\nI didn't chase why the test itself isn't reporting failure.\r\n\r\ncc: @agorrod ",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2020 at 23:53 GMT",
        "updated_at": "Thursday Jun 25, 2020 at 00:43 GMT",
        "closed_at": "Thursday Jun 25, 2020 at 00:43 GMT",
        "merged_at": "Thursday Jun 25, 2020 at 00:43 GMT"
    },
    {
        "key": "WT-6474",
        "number": 5848,
        "state": "closed",
        "title": "WT-6474 format RNG not configured until after command-line and CONFIG file processed",
        "body": "@lukech, this change will increase our test coverage, but there might be fallout: the change I expect to see in our testing is our underlying objects will be larger, we'll run with more worker threads, and we'll run single jobs longer. This is a format change, so shouldn't affect MongoDB testing, of course. Please let me know when it's safe to merge.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2020 at 18:25 GMT",
        "updated_at": "Friday Jul 31, 2020 at 02:15 GMT",
        "closed_at": "Friday Jul 31, 2020 at 02:15 GMT",
        "merged_at": "Friday Jul 31, 2020 at 02:15 GMT"
    },
    {
        "key": "WT-6473",
        "number": 5847,
        "state": "closed",
        "title": "WT-6473 format configuration with tiny caches can result in empty objects",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2020 at 18:00 GMT",
        "updated_at": "Friday Jul 31, 2020 at 01:48 GMT",
        "closed_at": "Friday Jul 31, 2020 at 01:48 GMT",
        "merged_at": "Friday Jul 31, 2020 at 01:48 GMT"
    },
    {
        "key": "WT-6442",
        "number": 5846,
        "state": "closed",
        "title": "WT-6442 Add statistics and logging to track out-of-order handling",
        "body": "Added some statistics to track certain conditions in our out-of-order handling that might be interesting to us as well as some verbose logging to help us debug.\r\n\r\nThe log lines look like this:\r\n```\r\n[1593047094:735561][14719:0x7f25f64fd700], test_timestamp20.test_timestamp20.test_timestamp20, file:test_timestamp20.wt, eviction-server: [WT_VERB_TIMESTAMP] fixing out-of-order updates during insertion; start_ts=(0, 30), durable_start_ts=(0, 30), min_insert_ts=(0, 5)\r\n[1593047094:740942][14719:0x7f25f64fd700], test_timestamp20.test_timestamp20.test_timestamp20, file:WiredTigerHS.wt, eviction-server: [WT_VERB_TIMESTAMP] fixing existing out-of-order updates by moving them; start_ts=(0, 10), durable_start_ts=(0, 10), stop_ts=(0, 20), durable_stop_ts=(0, 20), new_ts=(0, 5)\r\n```",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2020 at 09:03 GMT",
        "updated_at": "Friday Jun 26, 2020 at 10:52 GMT",
        "closed_at": "Friday Jun 26, 2020 at 10:52 GMT",
        "merged_at": "Friday Jun 26, 2020 at 10:52 GMT"
    },
    {
        "key": "WT-6462",
        "number": 5845,
        "state": "closed",
        "title": "WT-6462 Run HS operations at lower iso level WT_ISO_READ_UNCOMMITTED",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2020 at 06:14 GMT",
        "updated_at": "Friday Jun 26, 2020 at 02:12 GMT",
        "closed_at": "Friday Jun 26, 2020 at 02:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6466",
        "number": 5844,
        "state": "closed",
        "title": "WT-6466 Closing a HS store cursor incorrectly clears WT_SESSION operation timers.",
        "body": "@sulabhM, if we close a HS cursor it clears the per-WT_SESSION timers, and so operations that should be rolled back because they're pinning the system will continue to stall the system. Here's the typical stack:\r\n\r\n```\r\n__wt_btcur_search()\r\n__cursor_func_init()\r\n__cursor_reset()\r\n__wt_page_release()\r\n__wt_page_release_evict()\r\n__wt_evict()\r\n__wt_hs_cursor_close()\r\nsession->hs_cursor->close() (__curfile_close())\r\nAPI_END_RET()\r\nAPI_END()\r\n__wt_op_timer_stop()\r\n```\r\n\r\nI changed the timer functions to ignore the call if the `WT_SESSION_IMPL.WT_SESSION_HS_CURSOR` flag is set, but that feels sloppy to me. I don't think the `WT_SESSION_HS_CURSOR` flag is particularly useful at this point, I think we'd be better served by testing/setting `WT_SESSION_IMPL.hs_cursor` against NULL as needed, and perhaps a per-cursor flag that indicates it's a HS cursor.\r\n\r\n@agorrod, this bug may be worth fixing, it will prevent MongoDB cursors from being rolled back when they're pinning the system (but note that's limited to MongoDB cursors that have done updates because we can't roll back MongoDB readonly cursors).\r\n\r\nKB EDIT:\r\nThe above statement is incorrect; this bug fix will not affect any MongoDB workload, it will only affect WiredTiger format testing, so we shouldn't merge it until the tree is generally open.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2020 at 01:05 GMT",
        "updated_at": "Thursday Aug 06, 2020 at 22:23 GMT",
        "closed_at": "Thursday Aug 06, 2020 at 22:23 GMT",
        "merged_at": "Thursday Aug 06, 2020 at 22:23 GMT"
    },
    {
        "key": "WT-6274",
        "number": 5843,
        "state": "closed",
        "title": "WT-6274 Leak of HS cursor and flags in eviction server",
        "body": "Disallow nested calls to get/release the history store cursor via `wt_hs_cursor()` and `wt_hs_cursor_close()`. \r\n\r\nThis required several changes to eliminate existing nesting of those calls:\r\n\r\n1. No longer start eviction threads with an open hs cursor.  \r\n2. Without #1, we no longer need a mechanism to tell the thread group code to start certain threads with a hs cursor. So I eliminated the `WT_THREAD_HS` flag.\r\n3. `wt_hs_delete_key_from_ts()` had to get an hs cursor because one if it's call sites didn't already have one. Updated that call site set up the hs cursor.\r\n4. `txn_resolve_prepared_op()` used conditionally open a hs cursor, but unconditionally close it. Updated to only close the cursor if it opened it.\r\n\r\nWith these changes, I updated `wt_hs_cursor()` and `wt_hs_cursor_close()` so that they only allow a session to open a cursor if it doesn't already have one.  This eliminates the need for the `is_owner` boolean flag to those functions.  I've also changed `wt_hs_cursor()` to be `wt_hs_cursor_open()` for more intuitive naming.\r\n\r\nThis breaks several of the python tests. Specifically, because we don't give every eviction thread an open hs cursor, they wind up actually opening and closing them, and that gets included in cursor statistics. We have some tests that perform cursor operations and then look at the statistics to confirm that the right number of things happen. These break now because the stats include background activity from the eviction threads. I've disabled those test cases for now.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 23, 2020 at 20:43 GMT",
        "updated_at": "Thursday Aug 06, 2020 at 18:22 GMT",
        "closed_at": "Thursday Aug 06, 2020 at 18:22 GMT",
        "merged_at": "Thursday Aug 06, 2020 at 18:22 GMT"
    },
    {
        "key": "WT-6349",
        "number": 5842,
        "state": "closed",
        "title": "Revert \"WT-6349 Don't perform on disk key removal as part of checkpoint\"",
        "body": "Reverts wiredtiger/wiredtiger#5744",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 23, 2020 at 06:49 GMT",
        "updated_at": "Tuesday Jun 23, 2020 at 06:51 GMT",
        "closed_at": "Tuesday Jun 23, 2020 at 06:51 GMT",
        "merged_at": "Tuesday Jun 23, 2020 at 06:51 GMT"
    },
    {
        "key": "WT-6448",
        "number": 5841,
        "state": "closed",
        "title": "WT-6448 RTS to read all the required pages as part of tree walk",
        "body": "RTS used to read internal pages as part of tree walk and read\r\nthe leaf pages internally and evict them is causing the tree walk\r\nto be restarted. Instead of inventing the tree walk restart logic\r\nagain in RTS, better to load all the RTS required pages as part\r\nof tree walk.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 23, 2020 at 06:30 GMT",
        "updated_at": "Thursday Jun 25, 2020 at 02:39 GMT",
        "closed_at": "Thursday Jun 25, 2020 at 02:39 GMT",
        "merged_at": "Thursday Jun 25, 2020 at 02:39 GMT"
    },
    {
        "key": "WT-6460",
        "number": 5840,
        "state": "closed",
        "title": "WT-6460 Fix the check of stop time point",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 23, 2020 at 06:14 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:32 GMT",
        "closed_at": "Wednesday Jun 24, 2020 at 01:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6412",
        "number": 5839,
        "state": "closed",
        "title": "WT-6412 Add globally visible tombstone's stop time to the returned ti\u2026",
        "body": "\u2026me window\r\n\r\nThis PR is a draft PR and not ready for a detailed review yet however I'm opening it so people can see what the change looks like.",
        "base_ref": "develop",
        "created_at": "Monday Jun 22, 2020 at 23:50 GMT",
        "updated_at": "Thursday Jun 25, 2020 at 00:22 GMT",
        "closed_at": "Thursday Jun 25, 2020 at 00:22 GMT",
        "merged_at": "Thursday Jun 25, 2020 at 00:22 GMT"
    },
    {
        "key": "WT-6464",
        "number": 5838,
        "state": "closed",
        "title": "WT-6464 Fix a memory leak in __rollback_row_add_update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 22, 2020 at 07:03 GMT",
        "updated_at": "Monday Jun 22, 2020 at 12:38 GMT",
        "closed_at": "Monday Jun 22, 2020 at 12:38 GMT",
        "merged_at": "Monday Jun 22, 2020 at 12:38 GMT"
    },
    {
        "key": "WT-6453",
        "number": 5837,
        "state": "closed",
        "title": "WT-6453 Pin transaction ids for history store cursor operations",
        "body": "This PR is to pin transaction ids when beginning history store cursor operations. The change in #5760 intended to stop us from acquiring snapshots but we still need to pin transaction ids as we would for a read-committed transaction.\r\n\r\nIf we don't, the `oldest_id` can potentially move past some records that we're reading and lead to an obsolete check freeing updates from underneath us.",
        "base_ref": "develop",
        "created_at": "Monday Jun 22, 2020 at 02:37 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:31 GMT",
        "closed_at": "Thursday Jun 25, 2020 at 01:46 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6461",
        "number": 5836,
        "state": "closed",
        "title": "WT-6461 Add a verbose message for tombstones restored from the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 22, 2020 at 00:38 GMT",
        "updated_at": "Monday Jun 22, 2020 at 02:52 GMT",
        "closed_at": "Monday Jun 22, 2020 at 02:52 GMT",
        "merged_at": "Monday Jun 22, 2020 at 02:52 GMT"
    },
    {
        "key": "WT-6452",
        "number": 5835,
        "state": "closed",
        "title": "WT-6452 Update eviction test config to avoid rollback errors",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jun 21, 2020 at 23:57 GMT",
        "updated_at": "Monday Jun 22, 2020 at 02:12 GMT",
        "closed_at": "Monday Jun 22, 2020 at 02:12 GMT",
        "merged_at": "Monday Jun 22, 2020 at 02:12 GMT"
    },
    {
        "key": "WT-6458",
        "number": 5834,
        "state": "closed",
        "title": "WT-6458 read row-store leaf pages with prepared updates in a single pass",
        "body": "@kommiharibabu, here's the change I asked you about for your consideration. I think we can do this work in a single pass, but I'll defer to you on the final decision!\r\n\r\nOne change might not be obvious: I changed `WT_PAGE_ALLOC_AND_SWAP` to be a `__wt_calloc_def` call. Reading in a page must be single-threaded, and calling `WT_PAGE_ALLOC_AND_SWAP` implies other threads might be using these structures, and I found that confusing.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 21, 2020 at 15:57 GMT",
        "updated_at": "Wednesday Aug 12, 2020 at 02:23 GMT",
        "closed_at": "Wednesday Aug 12, 2020 at 02:23 GMT",
        "merged_at": "Wednesday Aug 12, 2020 at 02:23 GMT"
    },
    {
        "key": "WT-6457",
        "number": 5833,
        "state": "closed",
        "title": "WT-6457 Restore static testing that zero-length row-store values are never written.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 19, 2020 at 23:32 GMT",
        "updated_at": "Monday Jun 22, 2020 at 14:49 GMT",
        "closed_at": "Monday Jun 22, 2020 at 14:49 GMT",
        "merged_at": "Monday Jun 22, 2020 at 14:49 GMT"
    },
    {
        "key": "WT-6410",
        "number": 5832,
        "state": "closed",
        "title": "WT-6410 Remove support for WT_SESSION.rebalance.",
        "body": "@tammybailey, I'm not sure who is best to do this review, it's a general housekeeping ticket, and I know you've been doing some of that work. If you're not the right person, let me know and I'll find someone else. Thanks!\r\n\r\nIf it's useful to you, I ended up searching for every instance of the word \"rebalance\" in the tree and reviewing those places. There's some magic around opening WT_BTREE handles that could potentially be simplified now that the salvage, verify and upgrade handles the only \"special\" handles, but I didn't see anything obvious.",
        "base_ref": "rts-test-format",
        "created_at": "Friday Jun 19, 2020 at 18:55 GMT",
        "updated_at": "Friday Sep 25, 2020 at 00:15 GMT",
        "closed_at": "Wednesday Sep 16, 2020 at 01:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6407",
        "number": 5831,
        "state": "closed",
        "title": "WT-6407 Fix searching history store accidentally across table boundary",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 19, 2020 at 13:28 GMT",
        "updated_at": "Sunday Jun 21, 2020 at 22:52 GMT",
        "closed_at": "Sunday Jun 21, 2020 at 22:52 GMT",
        "merged_at": "Sunday Jun 21, 2020 at 22:52 GMT"
    },
    {
        "key": "WT-6456",
        "number": 5830,
        "state": "closed",
        "title": "WT-6456 Add stats to track the skip updating the condition with race",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 19, 2020 at 08:44 GMT",
        "updated_at": "Thursday Jun 25, 2020 at 06:12 GMT",
        "closed_at": "Thursday Jun 25, 2020 at 06:12 GMT",
        "merged_at": "Thursday Jun 25, 2020 at 06:12 GMT"
    },
    {
        "key": "WT-6455",
        "number": 5829,
        "state": "closed",
        "title": "WT-6455 Fix the incorrect connection level debug flag value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 19, 2020 at 07:21 GMT",
        "updated_at": "Friday Jun 19, 2020 at 16:45 GMT",
        "closed_at": "Friday Jun 19, 2020 at 16:45 GMT",
        "merged_at": "Friday Jun 19, 2020 at 16:45 GMT"
    },
    {
        "key": "WT-9999",
        "number": 5828,
        "state": "closed",
        "title": "WT-9999 Test pull request (against rts-test-format branch)",
        "body": "",
        "base_ref": "rts-test-format",
        "created_at": "Friday Jun 19, 2020 at 02:34 GMT",
        "updated_at": "Friday Jun 19, 2020 at 03:13 GMT",
        "closed_at": "Friday Jun 19, 2020 at 03:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6438",
        "number": 5827,
        "state": "closed",
        "title": "WT-6438 Fix rollback error due to cache pressure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 19, 2020 at 00:46 GMT",
        "updated_at": "Friday Jun 19, 2020 at 02:13 GMT",
        "closed_at": "Friday Jun 19, 2020 at 02:13 GMT",
        "merged_at": "Friday Jun 19, 2020 at 02:13 GMT"
    },
    {
        "key": "WT-6441",
        "number": 5826,
        "state": "closed",
        "title": "WT-6441 New stats to track history store search",
        "body": "New statistics are added to track how many times the history store\r\nis searched for find an update and also how many times the cursor->prev\r\nreturned data is skipped to position it on a proper key.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 18, 2020 at 13:30 GMT",
        "updated_at": "Friday Jun 19, 2020 at 02:18 GMT",
        "closed_at": "Friday Jun 19, 2020 at 02:18 GMT",
        "merged_at": "Friday Jun 19, 2020 at 02:18 GMT"
    },
    {
        "key": "WT-6397",
        "number": 5825,
        "state": "closed",
        "title": "WT-6397 Reduce restrictions on reading tombstone info from history store update list",
        "body": "When we read values from history store's update list as part of prepared transaction rollback, the tombstones on the update list are not visible and we end up in restoring deleted values. This change will skip tombstone visibility checks and brings it line with how we deal with tombstones when reading on-disk values.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 18, 2020 at 02:11 GMT",
        "updated_at": "Friday Jun 19, 2020 at 02:17 GMT",
        "closed_at": "Friday Jun 19, 2020 at 02:17 GMT",
        "merged_at": "Friday Jun 19, 2020 at 02:17 GMT"
    },
    {
        "key": "WT-6429",
        "number": 5824,
        "state": "closed",
        "title": "WT-6429 Fix memory leak in rollback to stable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 18, 2020 at 01:17 GMT",
        "updated_at": "Thursday Jun 18, 2020 at 04:36 GMT",
        "closed_at": "Thursday Jun 18, 2020 at 04:36 GMT",
        "merged_at": "Thursday Jun 18, 2020 at 04:36 GMT"
    },
    {
        "key": "WT-6440",
        "number": 5823,
        "state": "closed",
        "title": "WT-6440 Use onpage visibility check helpers in __wt_txn_update_check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 17, 2020 at 23:43 GMT",
        "updated_at": "Tuesday Jul 21, 2020 at 00:37 GMT",
        "closed_at": "Tuesday Jul 21, 2020 at 00:37 GMT",
        "merged_at": "Tuesday Jul 21, 2020 at 00:37 GMT"
    },
    {
        "key": "WT-6423",
        "number": 5822,
        "state": "closed",
        "title": "WT-6423 Salvage testing fails after setting stable timestamp in test format",
        "body": "",
        "base_ref": "wt-6427-format-stable-timestamp",
        "created_at": "Wednesday Jun 17, 2020 at 19:56 GMT",
        "updated_at": "Friday Jun 19, 2020 at 15:47 GMT",
        "closed_at": "Friday Jun 19, 2020 at 15:47 GMT",
        "merged_at": "Friday Jun 19, 2020 at 15:47 GMT"
    },
    {
        "key": "WT-6428",
        "number": 5821,
        "state": "closed",
        "title": "WT-6428 Fixes for checkpoint retention.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 17, 2020 at 18:12 GMT",
        "updated_at": "Thursday Jun 18, 2020 at 14:40 GMT",
        "closed_at": "Thursday Jun 18, 2020 at 14:40 GMT",
        "merged_at": "Thursday Jun 18, 2020 at 14:40 GMT"
    },
    {
        "key": "WT-6435",
        "number": 5820,
        "state": "closed",
        "title": "WT-6435 Disable dirty eviction in some tests sensitive to stats.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 17, 2020 at 05:27 GMT",
        "updated_at": "Wednesday Jun 17, 2020 at 07:51 GMT",
        "closed_at": "Wednesday Jun 17, 2020 at 07:51 GMT",
        "merged_at": "Wednesday Jun 17, 2020 at 07:51 GMT"
    },
    {
        "key": "WT-6434",
        "number": 5819,
        "state": "closed",
        "title": "WT-6434 Configure tests to avoid rollback due to cache pressure.",
        "body": "Ideally tests would be written to retry on rollback errors rather than treat them as fatal, but for now configure to make rollbacks unlikely.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 17, 2020 at 05:05 GMT",
        "updated_at": "Wednesday Jun 17, 2020 at 07:50 GMT",
        "closed_at": "Wednesday Jun 17, 2020 at 07:50 GMT",
        "merged_at": "Wednesday Jun 17, 2020 at 07:50 GMT"
    },
    {
        "key": "WT-6175",
        "number": 5818,
        "state": "closed",
        "title": "WT-6175 Fix a warning.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 17, 2020 at 02:23 GMT",
        "updated_at": "Wednesday Jun 17, 2020 at 02:30 GMT",
        "closed_at": "Wednesday Jun 17, 2020 at 02:30 GMT",
        "merged_at": "Wednesday Jun 17, 2020 at 02:30 GMT"
    },
    {
        "key": "WT-6417",
        "number": 5817,
        "state": "closed",
        "title": "WT-6417 Fix not restoring tombstone in rollback to stable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 17, 2020 at 01:27 GMT",
        "updated_at": "Wednesday Jun 17, 2020 at 23:47 GMT",
        "closed_at": "Wednesday Jun 17, 2020 at 23:47 GMT",
        "merged_at": "Wednesday Jun 17, 2020 at 23:47 GMT"
    },
    {
        "key": "WT-6427",
        "number": 5816,
        "state": "closed",
        "title": "WT-6427 Always set stable timestamp when setting oldest timestamp (2nd attempt)",
        "body": "@ddanderson #5814 was reverted due to the testing fallout described [here](https://jira.mongodb.org/browse/WT-6427?focusedCommentId=3211591&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-3211591). Please use this PR for further change. ",
        "base_ref": "rts-test-format",
        "created_at": "Wednesday Jun 17, 2020 at 01:17 GMT",
        "updated_at": "Friday Jun 19, 2020 at 16:15 GMT",
        "closed_at": "Friday Jun 19, 2020 at 16:15 GMT",
        "merged_at": "Friday Jun 19, 2020 at 16:15 GMT"
    },
    {
        "key": "WT-6427",
        "number": 5815,
        "state": "closed",
        "title": "Revert \"WT-6427 Always set stable timestamp when setting oldest timestamp.\"",
        "body": "Reverts wiredtiger/wiredtiger#5814",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 17, 2020 at 01:06 GMT",
        "updated_at": "Wednesday Jun 17, 2020 at 01:07 GMT",
        "closed_at": "Wednesday Jun 17, 2020 at 01:07 GMT",
        "merged_at": "Wednesday Jun 17, 2020 at 01:07 GMT"
    },
    {
        "key": "WT-6427",
        "number": 5814,
        "state": "closed",
        "title": "WT-6427 Always set stable timestamp when setting oldest timestamp.",
        "body": "Set stable ts to the \"all_durable\" value, and let oldest ts lag that.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 16, 2020 at 17:10 GMT",
        "updated_at": "Wednesday Jun 17, 2020 at 01:08 GMT",
        "closed_at": "Tuesday Jun 16, 2020 at 20:20 GMT",
        "merged_at": "Tuesday Jun 16, 2020 at 20:20 GMT"
    },
    {
        "key": "WT-6388",
        "number": 5813,
        "state": "closed",
        "title": "WT-6388 Fix-up out-of-order updates in the history store",
        "body": "This is intended to be an improvement to how we currently handle out-of-order content. There are two main changes here:\r\n\r\nThe first one is to correct out-of-order timestamps when inserting updates into the history store if they are out-of-order with respect to other content in the update list.\r\n\r\nThe other change is to \"fixup\" out-of-order content already in the history store to more closely follow the ordering that we'd get with an in-memory update list. When we're about to insert a new update into the history store, we check whether we have higher timestamps already in the history store for the same key. If so we \"move\" them back to the timestamp we're inserting by removing them and reinserting them just before inserting our current update.\r\n\r\nTo facilitate the second change, I've refactored the `__hs_insert_record_with_btree_int` helper to make it more general so that I can reuse it in the \"fixup\" logic.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 16, 2020 at 07:15 GMT",
        "updated_at": "Friday Jun 19, 2020 at 01:05 GMT",
        "closed_at": "Friday Jun 19, 2020 at 01:05 GMT",
        "merged_at": "Friday Jun 19, 2020 at 01:05 GMT"
    },
    {
        "key": "WT-6351",
        "number": 5812,
        "state": "closed",
        "title": "WT-6351 Fix race between threads to update condition variable's previous wait value.",
        "body": "Here we are trying to read the `prev_wait` of condition variables's value using atomic operations because there can be multiple threads accessing this block of code simultaneously. \r\n\r\nThe `cond->prev_wait` value was going above WT_MILLION due to race between threads and causing it to assert. ",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 16, 2020 at 05:50 GMT",
        "updated_at": "Thursday Jun 18, 2020 at 22:15 GMT",
        "closed_at": "Thursday Jun 18, 2020 at 22:15 GMT",
        "merged_at": "Thursday Jun 18, 2020 at 22:15 GMT"
    },
    {
        "key": "WT-6277",
        "number": 5811,
        "state": "closed",
        "title": "WT-6277 Compatibility tests verify failure in timestamp validation",
        "body": "@ddanderson, @agorrod, @luke-pearson:\r\n\r\nThis is a set of changes that appear to fix the 4.2/4.4 upgrade/downgrade issues Luke identified in WT-6277. I've only tested lightly at this point, but it's been working significantly longer than previous test runs.\r\n\r\nIt's an implementation of Alex's idea: because we can't tell the difference between a 4.2 internal parent cell written with no aggregated time window information and a 4.4 internal parent cell written with default aggregated time window information, whenever we encounter a parent cell with no aggregated time window information, we assert any time information in its children is stable, because that should be true regardless of what release wrote the parent cell.\r\n\r\nI'm still testing, but I wanted to give you a heads up in case there's something awful I've missed by taking this approach. I also know this is a lower priority than other tickets, so don't worry if you're not going to get to review soon, there's no rush as far as I know.\r\n\r\nAlex, I've made some changes in the time window support, and I  know you care about that. Specifically, commit 1857aa4 changes how aggregated time windows work: the root of the problem is that `WT_TIME_AGGREGATE_IS_EMPTY` was written to return if an aggregated time window matched the `WT_TIME_AGGREGATE_INIT_MAX` state, not the \"default\" state. I believe we need both behaviors (and we had code that assumed the current is-empty macro behaved differently than it does), so I've tried to make that all work. I also believe I fixed a bug in our original time-window abstraction work in `reconcile/col_var.c`. I don't believe we're aggregating time windows there, I think we're just tracking copies of existing time windows.\r\n\r\nDon, this PR changes how format works, to always update the stable timestamp (so checkpoints include recovery timestamp information), and it acquires that information whenever it opens a database and uses it to set `g.timestamp`. I left the code you wrote alone, using `g.timestamp` to set the stable timestamp, but I think that's wrong because I'm pretty sure it can be incremented before operations using it as their commit timestamp have actually been committed, based on my reading of `ops.c:commit_transaction()`. I also think that letting the system stable timestamp lag is probably a better testing scenario than having it be exactly up-to-date. The 73b90d1 commit is probably the only one you care about.\r\n\r\nLuke, I think you're the primary reviewer. I'm a little worried about `timestamp.c:__time_stable()`, it seems to me there might be cases where we don't have a recovery timestamp or a stable timestamp, in which case verify might fail. I can't think of one, but I'm not confident of that. The 1857aa4 and 80e7b98 commits are the interesting ones for you, the rest (except for 73b90d1, which is Don's), are uninteresting changes.",
        "base_ref": "rts-test-format",
        "created_at": "Tuesday Jun 16, 2020 at 01:48 GMT",
        "updated_at": "Wednesday Jul 29, 2020 at 23:53 GMT",
        "closed_at": "Wednesday Jul 29, 2020 at 23:53 GMT",
        "merged_at": "Wednesday Jul 29, 2020 at 23:53 GMT"
    },
    {
        "key": "WT-6398",
        "number": 5810,
        "state": "closed",
        "title": "WT-6398 Format history store cursor should handle WT_ROLLBACK return",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 15, 2020 at 14:37 GMT",
        "updated_at": "Monday Jun 15, 2020 at 17:52 GMT",
        "closed_at": "Monday Jun 15, 2020 at 17:52 GMT",
        "merged_at": "Monday Jun 15, 2020 at 17:52 GMT"
    },
    {
        "key": "WT-6175",
        "number": 5809,
        "state": "closed",
        "title": "WT-6175 Bound the amount of updates in cache (2nd attempt)",
        "body": "@michaelcahill The initial change in #5762 was reverted due to [testing fallout](https://jira.mongodb.org/browse/WT-6175?focusedCommentId=3207414&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-3207414). Please use this PR to add further change.",
        "base_ref": "develop",
        "created_at": "Monday Jun 15, 2020 at 03:27 GMT",
        "updated_at": "Wednesday Jun 17, 2020 at 02:12 GMT",
        "closed_at": "Wednesday Jun 17, 2020 at 02:12 GMT",
        "merged_at": "Wednesday Jun 17, 2020 at 02:12 GMT"
    },
    {
        "key": "WT-6175",
        "number": 5808,
        "state": "closed",
        "title": "Revert \"WT-6175 Bound the amount of updates in cache.\"",
        "body": "Reverts wiredtiger/wiredtiger#5762",
        "base_ref": "develop",
        "created_at": "Monday Jun 15, 2020 at 03:18 GMT",
        "updated_at": "Monday Jun 15, 2020 at 03:18 GMT",
        "closed_at": "Monday Jun 15, 2020 at 03:18 GMT",
        "merged_at": "Monday Jun 15, 2020 at 03:18 GMT"
    },
    {
        "key": "WT-6280",
        "number": 5807,
        "state": "closed",
        "title": "WT-6280 Adding a transaction id to tombstones when cleaning up update\u2026",
        "body": "\u2026s in the history store\r\n\r\nI wanted to bring attention to this change as it results in substantial change to logic in `__wt_rec_upd_select`.\r\nThis is the first attempt at this change so its likely that the conditional will be moved out of or improved in `__wt_rec_upd_select`.\r\n\r\nThe main things are:\r\n- Removing the `is_hs_page` check before checking update visibility.\r\n- Adding in a new `is_hs_page` check that checks if we're in eviction and attempting to evict a history store page, we additionally check that the updates txnid is older than the checkpoints. Eviction can run in parallel with checkpoint on the history store leaving it in a very odd state.\r\n- Passing a txnid with the tombstone so that checkpoint can't see it.\r\n- Deletion of a few asserts that expect eviction to leave pages clean, which isn't true anymore.\r\n\r\nNote: I've yet to clean up the comments where the asserts are deleted.",
        "base_ref": "develop",
        "created_at": "Monday Jun 15, 2020 at 01:21 GMT",
        "updated_at": "Tuesday Jun 30, 2020 at 23:15 GMT",
        "closed_at": "Tuesday Jun 16, 2020 at 00:51 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6408",
        "number": 5806,
        "state": "closed",
        "title": "WT-6408 format bulk load can set an incorrect row count",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 16:55 GMT",
        "updated_at": "Friday Jun 12, 2020 at 20:50 GMT",
        "closed_at": "Friday Jun 12, 2020 at 20:50 GMT",
        "merged_at": "Friday Jun 12, 2020 at 20:50 GMT"
    },
    {
        "key": "WT-6419",
        "number": 5805,
        "state": "closed",
        "title": "WT-6419 Make sure we dump core on Evergreen PPC machines",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 07:09 GMT",
        "updated_at": "Friday Jun 12, 2020 at 11:20 GMT",
        "closed_at": "Friday Jun 12, 2020 at 11:20 GMT",
        "merged_at": "Friday Jun 12, 2020 at 11:20 GMT"
    },
    {
        "key": "WT-6344",
        "number": 5804,
        "state": "closed",
        "title": "WT-6344 Trim the update vector until there is a full update",
        "body": "This is handling a corner case where we end up with an update chain with `WT_UPDATE_MODIFY` type update as the oldest update when handling mixed mode operation (timestamped and non-timestamped updates).",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 06:23 GMT",
        "updated_at": "Sunday Jun 14, 2020 at 23:43 GMT",
        "closed_at": "Sunday Jun 14, 2020 at 23:23 GMT",
        "merged_at": "Sunday Jun 14, 2020 at 23:23 GMT"
    },
    {
        "key": "WT-6414",
        "number": 5803,
        "state": "closed",
        "title": "WT-6414 Block running rebalance with timestamps in test format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 04:34 GMT",
        "updated_at": "Monday Jun 15, 2020 at 03:02 GMT",
        "closed_at": "Monday Jun 15, 2020 at 03:02 GMT",
        "merged_at": "Monday Jun 15, 2020 at 03:02 GMT"
    },
    {
        "key": "WT-6416",
        "number": 5802,
        "state": "closed",
        "title": "WT-6416 RTS to skip traversing unnecessary internal pages",
        "body": "Instead of traversing all the internal pages to find out the leaf\r\npages that have newer updates to be aborted, skip traversing some\r\nof the internal pages when they are not present in the memory and\r\ntheir aggregated durable timestamp is less than stable timestamp.\r\n\r\nIf an internal page is not in-memory tells that the entire sub tree\r\nof that internal page must not be present in-memory.",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 03:54 GMT",
        "updated_at": "Monday Jun 15, 2020 at 06:18 GMT",
        "closed_at": "Monday Jun 15, 2020 at 06:18 GMT",
        "merged_at": "Monday Jun 15, 2020 at 06:18 GMT"
    },
    {
        "key": "WT-6418",
        "number": 5801,
        "state": "closed",
        "title": "WT-6418 Account for aborted updates when doing the first scan of updates before inserting them to the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 02:32 GMT",
        "updated_at": "Friday Jun 12, 2020 at 04:08 GMT",
        "closed_at": "Friday Jun 12, 2020 at 04:08 GMT",
        "merged_at": "Friday Jun 12, 2020 at 04:08 GMT"
    },
    {
        "key": "WT-6414",
        "number": 5800,
        "state": "closed",
        "title": "Revert \"WT-6414 Block running rebalance with timestamps in test format\"",
        "body": "Reverts wiredtiger/wiredtiger#5799",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 01:32 GMT",
        "updated_at": "Friday Jun 12, 2020 at 01:40 GMT",
        "closed_at": "Friday Jun 12, 2020 at 01:40 GMT",
        "merged_at": "Friday Jun 12, 2020 at 01:40 GMT"
    },
    {
        "key": "WT-6414",
        "number": 5799,
        "state": "closed",
        "title": "WT-6414 Block running rebalance with timestamps in test format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 00:49 GMT",
        "updated_at": "Friday Jun 12, 2020 at 01:22 GMT",
        "closed_at": "Friday Jun 12, 2020 at 01:22 GMT",
        "merged_at": "Friday Jun 12, 2020 at 01:22 GMT"
    },
    {
        "key": "WT-6413",
        "number": 5798,
        "state": "closed",
        "title": "WT-6413 Remove globally visible check in __wt_checkpoint_close",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2020 at 00:33 GMT",
        "updated_at": "Friday Jun 12, 2020 at 04:52 GMT",
        "closed_at": "Friday Jun 12, 2020 at 04:52 GMT",
        "merged_at": "Friday Jun 12, 2020 at 04:52 GMT"
    },
    {
        "key": "WT-6395",
        "number": 5797,
        "state": "closed",
        "title": "WT-6395 Reorder the history store inserts if there exists an update with same timestamp",
        "body": "The counter field that is used as part of the history store key for uniqueness\r\nwill reset once the server is restarted. If there exists some updates in the\r\nhistory store and data store with the same timestamp, the next reconciliation\r\nmoving the existing data store update to history store must be inserted after\r\nthe existsing history store record. Todo that get the counter value from the\r\nexisting record if there exists any record with same key and timestamp and use\r\nthe next counter for the new record.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 11, 2020 at 12:57 GMT",
        "updated_at": "Tuesday Jun 16, 2020 at 01:32 GMT",
        "closed_at": "Tuesday Jun 16, 2020 at 01:32 GMT",
        "merged_at": "Tuesday Jun 16, 2020 at 01:32 GMT"
    },
    {
        "key": "WT-6277",
        "number": 5796,
        "state": "closed",
        "title": "WT-6277 Compatibility tests verify failure in timestamp validation",
        "body": "@luke-pearson, I was talking this one over with @agorrod, and he had a good idea: if we don't see aggregated timestamp information anywhere in an internal page or as part of the checkpoint, then don't validate the aggregated timestamp information against the root page (checkpoint lacks aggregated timestamp information), or any of the internal page's children in the case where the internal page has no aggregated timestamp information.\r\n\r\nI don't have the test case, so I can't test it, but the change is pretty straight-forward. Can you test it (or hand off the test case to me?), and do the review if you agree this is a sufficient change?",
        "base_ref": "develop",
        "created_at": "Thursday Jun 11, 2020 at 00:22 GMT",
        "updated_at": "Tuesday Jun 16, 2020 at 03:09 GMT",
        "closed_at": "Tuesday Jun 16, 2020 at 03:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6377",
        "number": 5795,
        "state": "closed",
        "title": "WT-6377 format failure: cursor out-of-order on a cursor prev/next return",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 10, 2020 at 21:14 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 21:15 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 21:15 GMT",
        "merged_at": "Wednesday Jun 10, 2020 at 21:15 GMT"
    },
    {
        "key": "WT-6377",
        "number": 5794,
        "state": "closed",
        "title": "WT-6377 format failure: cursor out-of-order on a cursor prev/next return",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 10, 2020 at 19:32 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 19:34 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 19:34 GMT",
        "merged_at": "Wednesday Jun 10, 2020 at 19:34 GMT"
    },
    {
        "key": "WT-6377",
        "number": 5793,
        "state": "closed",
        "title": "WT-6377 format failure: cursor out-of-order on a cursor prev/next return",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 10, 2020 at 18:27 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 19:19 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 19:19 GMT",
        "merged_at": "Wednesday Jun 10, 2020 at 19:19 GMT"
    },
    {
        "key": "WT-6319",
        "number": 5792,
        "state": "closed",
        "title": "WT-6319 Reserve a byte for the terminating nul.",
        "body": "@keithbostic please review this small fix for encrypted imports. We need space for the terminating nul byte from `wt_fill_hex`. What this means, I think, is that some existing encrypted tables may fail on import because the bug is on the generation side, not the reading-in side.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 10, 2020 at 15:31 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 17:19 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 17:19 GMT",
        "merged_at": "Wednesday Jun 10, 2020 at 17:19 GMT"
    },
    {
        "key": "WT-5916",
        "number": 5791,
        "state": "closed",
        "title": "WT-5916 Refresh snapshot without publishing ids after setting checkpo\u2026",
        "body": "\u2026int timestamp",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 10, 2020 at 06:10 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 03:45 GMT",
        "closed_at": "Thursday Jun 11, 2020 at 03:45 GMT",
        "merged_at": "Thursday Jun 11, 2020 at 03:45 GMT"
    },
    {
        "key": null,
        "number": 5790,
        "state": "closed",
        "title": "Test PR",
        "body": "TEST PR",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 10, 2020 at 05:30 GMT",
        "updated_at": "Friday Jun 12, 2020 at 00:29 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 07:03 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6396",
        "number": 5789,
        "state": "closed",
        "title": "WT-6396 Remove the wrong assert",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 10, 2020 at 01:11 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 01:36 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 01:36 GMT",
        "merged_at": "Wednesday Jun 10, 2020 at 01:36 GMT"
    },
    {
        "key": "WT-6392",
        "number": 5788,
        "state": "closed",
        "title": "WT-6392 wt4156_metadata_salvage test doesn't clean up core files prop\u2026",
        "body": "Alex & Sue,\r\n\r\nSecond try for this PR.  I realized the metadata salvage test shouldn't be creating and deleting\r\ncores in its current directory, since there's no way to be sure what other files might be there that match `core*`.  E.g., cores from other failed tests that we shouldn't blindly delete.\r\n\r\nSo now its child processes `chdir` into the database directory and any cores will be left there and deleted along with the directory during normal cleanup.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 09, 2020 at 20:55 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 13:30 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 13:30 GMT",
        "merged_at": "Wednesday Jun 10, 2020 at 13:30 GMT"
    },
    {
        "key": "WT-6392",
        "number": 5787,
        "state": "closed",
        "title": "WT-6392 wt4156_meta_salvage test doesn't clean up core files when running in Evergreen",
        "body": "Alex & Sue,\r\n\r\nTapping you for this trivial PR since your names are on previous modifications to this test.\r\n\r\nI suppose it would be more comprehensive to read and parse `/proc/sys/kernel/core_pattern` to determine the core file name(s) to remove, but I wasn't that ambitious (and it wouldn't help on non-Linux platforms).",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 09, 2020 at 18:41 GMT",
        "updated_at": "Tuesday Jun 09, 2020 at 19:55 GMT",
        "closed_at": "Tuesday Jun 09, 2020 at 19:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6388",
        "number": 5786,
        "state": "closed",
        "title": "WT-6388 Restrict out-of-order timestamps to being held in cache",
        "body": "Writing out of order timestamps to the history store causes visibility problems that are difficult to resolve. There are very few cases in MongoDB where they can use timestamps out of order. We should be able to keep the out of order content in cache until the section of the update chain that is out of order becomes globally visible and can be discarded.\r\n\r\nThat's only going to be OK if the content isn't between the stable and oldest timestamps. i.e: checkpoint doesn't need to flush the content that has a range of out of order timestamps.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 09, 2020 at 10:56 GMT",
        "updated_at": "Friday Jun 12, 2020 at 05:52 GMT",
        "closed_at": "Friday Jun 12, 2020 at 04:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5916",
        "number": 5785,
        "state": "closed",
        "title": "WT-5916 Retry checkpoint prepare if the stable timestamp moves behind\u2026",
        "body": "\u2026 the oldest or the stable timestamp moves forwards during checkpoint.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 09, 2020 at 07:40 GMT",
        "updated_at": "Thursday Jun 18, 2020 at 14:32 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 23:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6263",
        "number": 5784,
        "state": "closed",
        "title": "WT-6263 Reenable history store verification",
        "body": "",
        "base_ref": "rts-test-format",
        "created_at": "Tuesday Jun 09, 2020 at 01:52 GMT",
        "updated_at": "Sunday Jun 21, 2020 at 23:16 GMT",
        "closed_at": "Sunday Jun 21, 2020 at 23:16 GMT",
        "merged_at": "Sunday Jun 21, 2020 at 23:16 GMT"
    },
    {
        "key": "WT-6353",
        "number": 5783,
        "state": "closed",
        "title": "WT-6353 Print out failing values and value history of prealloc.",
        "body": "@keitharnoldsmith I want to merge this into the tree so that there are breadcrumbs of what the values are in any artifacts. I've run several hundred iterations on two machines without a failure so this will capture information for whenever it next hits on evergreen or for anyone.",
        "base_ref": "develop",
        "created_at": "Monday Jun 08, 2020 at 20:52 GMT",
        "updated_at": "Monday Jun 08, 2020 at 21:32 GMT",
        "closed_at": "Monday Jun 08, 2020 at 21:32 GMT",
        "merged_at": "Monday Jun 08, 2020 at 21:32 GMT"
    },
    {
        "key": "WT-6368",
        "number": 5782,
        "state": "closed",
        "title": "WT-6368 Add format stress test PR testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 08, 2020 at 10:13 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 07:43 GMT",
        "closed_at": "Wednesday Jun 10, 2020 at 07:43 GMT",
        "merged_at": "Wednesday Jun 10, 2020 at 07:43 GMT"
    },
    {
        "key": "WT-6379",
        "number": 5781,
        "state": "closed",
        "title": "WT-6379 Split Evergreen stress test job into multiple shorter running jobs",
        "body": "- Moved the long running stress test jobs into variables so that we could run multiple parallel instances in the same build variant without creating duplicate code in the `evergreen.yml` file.\r\n- Added task tags to identify and group the stress tests and simply the build variant configurations.\r\n- Removed a few lines of code in an unrelated test that caused `evergreen validate` to error.\r\n- Removed redundant comments in the task definitions.\r\n- Further discussion/work is needed to split the `checkpoint-stress-test` into shorter running instances. With the column-store and lsm testing disabled, it currently takes approximately six hours to complete.",
        "base_ref": "develop",
        "created_at": "Monday Jun 08, 2020 at 03:18 GMT",
        "updated_at": "Tuesday Jun 09, 2020 at 00:16 GMT",
        "closed_at": "Tuesday Jun 09, 2020 at 00:16 GMT",
        "merged_at": "Tuesday Jun 09, 2020 at 00:16 GMT"
    },
    {
        "key": "WT-6257",
        "number": 5780,
        "state": "closed",
        "title": "WT-6257 rows out-of-order in history store file",
        "body": "@michaelcahill, I've asked @tetsuo-cpp for PR review, but would you please review 984b4f5?\r\n\r\nWhat I think is happening:\r\n\r\n* we search an internal page, setting `skiphigh` and `skiplow`\r\n* we select a leaf page that is not the last `WT_REF` in the internal page's page-index\r\n* the last leaf page in the internal page is deleted making our chosen page the last entry\r\n* more entries are added to the chosen page, extending its name space\r\n* the chosen page is evicted and read back in\r\n* we swap the internal page for the chosen page and our `skiphigh` value is no longer correct\r\n\r\nI'm not terribly confident of that analysis, but it seems to me it can happen and so far I haven't seen a failure with the fix applied.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 07, 2020 at 18:03 GMT",
        "updated_at": "Tuesday Jun 09, 2020 at 16:25 GMT",
        "closed_at": "Tuesday Jun 09, 2020 at 16:25 GMT",
        "merged_at": "Tuesday Jun 09, 2020 at 16:25 GMT"
    },
    {
        "key": "WT-6366",
        "number": 5779,
        "state": "closed",
        "title": "WT-6366 Off-by-one overflow in bitmaps for incremental backup (#5771)",
        "body": "* WT-6366 Off-by-one overflow in block-modification bitmaps for incremental backup\r\n\r\nFix off-by-one error that caused overflow of allocated memory buffer\r\nwhen setting the last bit in the bitmap used to track block changes\r\nfor incremental backup.\r\n\r\nAllow block sizes as small as 4KB to make it easier to test and trigger\r\nthis type of bug.\r\n\r\nModify test/format and test/csuite/incr_backup to use the smaller\r\nblock sizes.\r\nCo-authored-by: Keith A. Smith <keith.smith@mongodb>\r\n\r\n(cherry picked from commit ee2d775e537151d683baa6954097de560856f715)",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Jun 05, 2020 at 19:49 GMT",
        "updated_at": "Friday Jun 05, 2020 at 21:18 GMT",
        "closed_at": "Friday Jun 05, 2020 at 21:18 GMT",
        "merged_at": "Friday Jun 05, 2020 at 21:18 GMT"
    },
    {
        "key": "WT-6382",
        "number": 5778,
        "state": "closed",
        "title": "WT-6382 Use history store btree when searching",
        "body": "I noticed while debugging WT-6257 that we should be using the `WT_WITH_BTREE` macro when invoking search. I see some code in search that updates `btree->maximum_depth` based on information in that function so we need to be doing this.\r\n\r\nUnfortunately, it doesn't solve WT-6257 however.",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2020 at 10:18 GMT",
        "updated_at": "Sunday Jun 07, 2020 at 17:25 GMT",
        "closed_at": "Sunday Jun 07, 2020 at 17:25 GMT",
        "merged_at": "Sunday Jun 07, 2020 at 17:25 GMT"
    },
    {
        "key": "WT-6374",
        "number": 5777,
        "state": "closed",
        "title": "WT-6374 Creating history store file in recovery before applying log r\u2026",
        "body": "\u2026ecords if it doesnt exist",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2020 at 05:22 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 01:34 GMT",
        "closed_at": "Thursday Jun 11, 2020 at 01:34 GMT",
        "merged_at": "Thursday Jun 11, 2020 at 01:34 GMT"
    },
    {
        "key": "WT-6381",
        "number": 5776,
        "state": "closed",
        "title": "WT-6381 RTS to remove hs record that is appended to the update chain",
        "body": "During aborting of on-disk update on a data store while replacing it\r\nwith the history store update that have both equal start and stop\r\ntimestamps led to not removing the history store record can led to\r\nthe update present in both data store and history store. To hanlde\r\nthis problem, RTS must remove the history store update that is getting\r\nappended to the data store.",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2020 at 03:31 GMT",
        "updated_at": "Friday Jun 05, 2020 at 06:19 GMT",
        "closed_at": "Friday Jun 05, 2020 at 06:19 GMT",
        "merged_at": "Friday Jun 05, 2020 at 06:19 GMT"
    },
    {
        "key": "WT-6380",
        "number": 5775,
        "state": "closed",
        "title": "WT-6380 Add OSX compile task to PR testing",
        "body": "Please don't review - I'm testing changes to evergreen PR testing :)",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2020 at 02:59 GMT",
        "updated_at": "Friday Jun 05, 2020 at 03:58 GMT",
        "closed_at": "Friday Jun 05, 2020 at 03:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6378",
        "number": 5774,
        "state": "closed",
        "title": "WT-6378 Fix MacOS build",
        "body": "patch build for macos\r\nhttps://evergreen.mongodb.com/task/wiredtiger_macos_1012_compile_patch_1799c524d79e9f2a7a108b3a818ce3baa1986ea8_5ed997177742ae5a920b4201_20_06_05_00_52_13",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2020 at 00:57 GMT",
        "updated_at": "Friday Jun 05, 2020 at 01:25 GMT",
        "closed_at": "Friday Jun 05, 2020 at 01:25 GMT",
        "merged_at": "Friday Jun 05, 2020 at 01:25 GMT"
    },
    {
        "key": "WT-6301",
        "number": 5773,
        "state": "closed",
        "title": "Revert \"WT-6301 Add short running stress jobs\"",
        "body": "Reverts wiredtiger/wiredtiger#5740",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2020 at 00:35 GMT",
        "updated_at": "Friday Jun 05, 2020 at 01:18 GMT",
        "closed_at": "Friday Jun 05, 2020 at 01:18 GMT",
        "merged_at": "Friday Jun 05, 2020 at 01:18 GMT"
    },
    {
        "key": "WT-6376",
        "number": 5772,
        "state": "closed",
        "title": "WT-6376 Minor cleanups in resolving prepared operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 22:19 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 23:43 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 23:43 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 23:43 GMT"
    },
    {
        "key": "WT-6366",
        "number": 5771,
        "state": "closed",
        "title": "WT-6366 Off-by-one overflow in bitmaps for incremental backup",
        "body": "Fix bug that allowed us to write past the end of the block modification bitmap.  The specific error case was when modifying one bit past the end of the existing bitmap size.  (I.e., we didn't recognize the need to grow the bitmap in that case).\r\n\r\nFor easier and better testing, I've also reduced the minimum granularity for tracking incremental backups to 4KB and modified test/format and test/csuite/incr_backup to make use of the smaller granularities.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 18:28 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 20:34 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 20:34 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 20:34 GMT"
    },
    {
        "key": "WT-6375",
        "number": 5770,
        "state": "closed",
        "title": "WT-6375 Test to verify RTS fixes the inconsistent checkpoint data",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 09:52 GMT",
        "updated_at": "Tuesday Jun 09, 2020 at 00:53 GMT",
        "closed_at": "Tuesday Jun 09, 2020 at 00:53 GMT",
        "merged_at": "Tuesday Jun 09, 2020 at 00:53 GMT"
    },
    {
        "key": "WT-5801",
        "number": 5769,
        "state": "closed",
        "title": "WT-5801 Reduce runtime of Python unit tests by pruning test_compat02.py",
        "body": "Add the `prune` & `prunelong` argument settings in test_compat02.py as suggested by @ddanderson. Created a patch build with some quick analysis (in jira). ",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 05:48 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 22:49 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 22:49 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 22:49 GMT"
    },
    {
        "key": "WT-6276",
        "number": 5768,
        "state": "closed",
        "title": "WT-6276 Add size first to cache and btree to avoid the race that can cause cache size underflow",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 05:08 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 08:26 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 08:26 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 08:26 GMT"
    },
    {
        "key": "WT-6373",
        "number": 5767,
        "state": "closed",
        "title": "WT-6373 Don't reset transaction id when evicting mixed mode tombstones",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 05:03 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 08:27 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 08:27 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 08:27 GMT"
    },
    {
        "key": "WT-6342",
        "number": 5766,
        "state": "closed",
        "title": "WT-6342 Invalid path to external symbolizer on PPC machines",
        "body": "Updating ASAN_SYMBOLIZER_PATH to correct location and version of llvm-symbolizer for PPC sanitizer tests.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 04:15 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 22:39 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 22:39 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 22:39 GMT"
    },
    {
        "key": "WT-6371",
        "number": 5765,
        "state": "closed",
        "title": "WT-6371 Adding a new stress timing configuration for the history store checkpoint",
        "body": "So I made the decision to differentiate this stress config from the W_TIMING_STRESS_CHECKPOINT_SLOW one as I didn't want to cop the double slowdown when we could just have two options. I'm willing to not do that if people feel like it's unnecessary duplication. ",
        "base_ref": "develop",
        "created_at": "Thursday Jun 04, 2020 at 01:49 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 02:41 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 02:41 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 02:41 GMT"
    },
    {
        "key": "WT-6369",
        "number": 5764,
        "state": "closed",
        "title": "WT-6369 make page dumps on format failure optional, off by default",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 19:06 GMT",
        "updated_at": "Wednesday Jun 03, 2020 at 19:54 GMT",
        "closed_at": "Wednesday Jun 03, 2020 at 19:54 GMT",
        "merged_at": "Wednesday Jun 03, 2020 at 19:54 GMT"
    },
    {
        "key": "WT-6359",
        "number": 5763,
        "state": "closed",
        "title": "WT-6359 Coverity Explicit NULL dereference",
        "body": "Coverity link\r\nhttps://coverity.corp.mongodb.com/reports.htm#v15509/p10049/fileInstanceId=30123292&defectInstanceId=19812275&mergedDefectId=114181&fileStart=1&fileEnd=125",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 11:55 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 00:09 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 00:09 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 00:09 GMT"
    },
    {
        "key": "WT-6175",
        "number": 5762,
        "state": "closed",
        "title": "WT-6175 Bound the amount of updates in cache.",
        "body": "Adds a new \"updates\" target/trigger pair (to the existing \"clean\" and \"dirty\" limits) tracking the total amount of \"small\" objects in cache (generally inserts and updates).  These default to a fraction of the dirty limits.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 10:20 GMT",
        "updated_at": "Monday Jun 15, 2020 at 03:17 GMT",
        "closed_at": "Monday Jun 15, 2020 at 02:40 GMT",
        "merged_at": "Monday Jun 15, 2020 at 02:40 GMT"
    },
    {
        "key": "WT-6358",
        "number": 5761,
        "state": "closed",
        "title": "WT-6358 Make wt dump print history store in human readable format",
        "body": "This PR is adding a `-p` flag for pretty-printing `dump` output.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 09:34 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 03:19 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 03:19 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 03:19 GMT"
    },
    {
        "key": "WT-6339",
        "number": 5760,
        "state": "closed",
        "title": "WT-6339 Stop creating snapshots for hs cursors",
        "body": "**Stop creating snapshots for history store cursors.**\r\n\r\nEarlier the flag `WT_CBT_NO_TXN` was driving create/release snapshots and increment/decrement `session->ncursors`. \r\nI have added a new flag `WT_CBT_NO_TRACKING` to separate these two operations, now this new flag will drive increment/decrement of `session->ncursors`.\r\n\r\nThe flag `WT_CBT_NO_TXN` is set in `__wt_hs_cursor_open` not to create snapshot in `__cursor_func_init`. \r\n\r\nFYI - I ran the test/checkpoint binary before/after the changes by enabling statistics and could see a considerable difference in `txn global read lock acquisitions` and `txn global write lock acquisitions` locks",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 05:12 GMT",
        "updated_at": "Tuesday Jun 09, 2020 at 03:56 GMT",
        "closed_at": "Tuesday Jun 09, 2020 at 03:56 GMT",
        "merged_at": "Tuesday Jun 09, 2020 at 03:56 GMT"
    },
    {
        "key": "WT-6347",
        "number": 5759,
        "state": "closed",
        "title": "WT-6347 Clear history store contents for mixed mode updates",
        "body": "@quchenhao #5742 was reverted to control the risk for the upcoming 4.4.0-rc8. Please use this PR for further investigation and change. ",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 04:52 GMT",
        "updated_at": "Friday Jun 12, 2020 at 00:52 GMT",
        "closed_at": "Friday Jun 12, 2020 at 00:52 GMT",
        "merged_at": "Friday Jun 12, 2020 at 00:52 GMT"
    },
    {
        "key": "WT-6347",
        "number": 5758,
        "state": "closed",
        "title": "Revert \"WT-6347 Don't reset transaction ids when evicting mixed mode tombstones and clear history store contents for mixed mode updates\"",
        "body": "Reverts wiredtiger/wiredtiger#5742",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 04:48 GMT",
        "updated_at": "Wednesday Jun 03, 2020 at 04:48 GMT",
        "closed_at": "Wednesday Jun 03, 2020 at 04:48 GMT",
        "merged_at": "Wednesday Jun 03, 2020 at 04:48 GMT"
    },
    {
        "key": "WT-6185",
        "number": 5757,
        "state": "closed",
        "title": "WT-6185 Insert full updates into the history store in some corner cases and add a history store c test",
        "body": "@agorrod, this is a branch that I think reproduces the failure I'm seeing from format in WT-6185.\r\n\r\nThe early commits (a79da63, 3b930f9, 8cabe24, ca356d3, 14a7998), are all format changes I made around the operations tracing code so I could track this problem better.\r\n\r\nThe final commit (a9c0bfe) is the reproducer. It's a test program in `test/csuite/wt6185_modify_ts`.\r\n\r\nThe trick is a hack into `cursor.reset` that forcibly evicts the page (see `__cursor_reset()`). I plan to keep that hack, just not sure how yet, right now it just sets a variable in the `WT_CURSOR_BTREE` structure.\r\n\r\nIf you run the test program with `-e` (don't do eviction), it runs, if you run it without `-e`, it fails immediately.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 01:12 GMT",
        "updated_at": "Wednesday Jun 10, 2020 at 00:40 GMT",
        "closed_at": "Tuesday Jun 09, 2020 at 12:57 GMT",
        "merged_at": "Tuesday Jun 09, 2020 at 12:57 GMT"
    },
    {
        "key": "WT-6330",
        "number": 5756,
        "state": "closed",
        "title": "WT-6330 Perform RTS on the history store as a final step",
        "body": "As the history store is checkpointed at the last step of\r\nall checkpoint, during this time it is possible that newer\r\nupdates are written to the history from the data store tables\r\nby eviction process that are not present in the data store.\r\nDue to this it is possible that sometimes history store may\r\nhave newer updates that are not present in the data store\r\ncheckpoint. If any backup/unclean shutdown uses this inconsistent\r\ncheckpoint it is possible that history store may have data newer\r\nthan the stable timestamp and can cause data visibility issues.\r\n\r\nTo avoid this problem, while recovering the database, perform\r\nrollback to stable on the history store at the end.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2020 at 00:24 GMT",
        "updated_at": "Thursday Jun 04, 2020 at 03:36 GMT",
        "closed_at": "Thursday Jun 04, 2020 at 03:36 GMT",
        "merged_at": "Thursday Jun 04, 2020 at 03:36 GMT"
    },
    {
        "key": "WT-6355",
        "number": 5755,
        "state": "closed",
        "title": "WT-6355 test/format can configure keys that are too short",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 02, 2020 at 16:04 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 17:47 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 17:47 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 17:47 GMT"
    },
    {
        "key": "WT-6364",
        "number": 5754,
        "state": "closed",
        "title": "WT-6364 Fix double counting sizes of existing updates on the update chain for the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 02, 2020 at 07:39 GMT",
        "updated_at": "Wednesday Jun 03, 2020 at 01:19 GMT",
        "closed_at": "Wednesday Jun 03, 2020 at 01:19 GMT",
        "merged_at": "Wednesday Jun 03, 2020 at 01:19 GMT"
    },
    {
        "key": "WT-5769",
        "number": 5753,
        "state": "closed",
        "title": "WT-5769 Search history store can potentially walk the whole history store tree (2nd attempt)",
        "body": "#5730 was reverted to unblock the WiredTiger drops. This PR is created to redo the changes to address the fallout in WT-6263. Please don't forget to include changes of the other follow-on commit #5746.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 02, 2020 at 04:49 GMT",
        "updated_at": "Wednesday Jun 03, 2020 at 02:41 GMT",
        "closed_at": "Wednesday Jun 03, 2020 at 02:41 GMT",
        "merged_at": "Wednesday Jun 03, 2020 at 02:41 GMT"
    },
    {
        "key": "WT-5769",
        "number": 5752,
        "state": "closed",
        "title": "Revert \"WT-5769 Search history store can potentially walk the whole history store tree\"",
        "body": "Reverts wiredtiger/wiredtiger#5730",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 02, 2020 at 04:44 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 04:44 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 04:44 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 04:44 GMT"
    },
    {
        "key": "WT-5769",
        "number": 5751,
        "state": "closed",
        "title": "Revert \"WT-5769 Remove remaining usage of ignore visibility flag\"",
        "body": "Reverts wiredtiger/wiredtiger#5746",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 02, 2020 at 04:43 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 04:44 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 04:44 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 04:44 GMT"
    },
    {
        "key": "WT-6015",
        "number": 5750,
        "state": "closed",
        "title": "WT-6015 Check log and turtle versions early before modifying database.",
        "body": "@agorrod and @luke-pearson here is a redo of the compatibility changes and adding in the turtle validation. I found in `conn_single` we were already doing some turtle work and added it there. That felt better than adding another case where we interact with the turtle. It happens to come before the log checking so it should fix the skip version test.\r\n\r\n@luke-pearson can you check or test with this branch and that failure? I am still not thrilled with the fragility of certain things being in order in the server code, but this works around that for the moment.\r\n\r\nAlso @luke-pearson do we still need/want the second call to `wt_turtle_validate_version` in `wt_turtle_init`? Or, is the one I added in `conn_single` going to break or crash in the case of corruption and/or salvage? ",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 21:48 GMT",
        "updated_at": "Wednesday Jun 03, 2020 at 22:54 GMT",
        "closed_at": "Wednesday Jun 03, 2020 at 22:54 GMT",
        "merged_at": "Wednesday Jun 03, 2020 at 22:54 GMT"
    },
    {
        "key": "WT-6352",
        "number": 5749,
        "state": "closed",
        "title": "WT-6352 Remove obsolete options from the wt verify API",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 16:23 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 03:10 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 03:10 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 03:10 GMT"
    },
    {
        "key": "WT-6328",
        "number": 5748,
        "state": "closed",
        "title": "WT-6328 Update test_compact02 to handle being halted by eviction pressure.",
        "body": "Looks like this error was reported earlier as well and the maximum timer was increased to 5 minutes since it is not failing because of any bug, it is just that eviction taking a very long time to finish in the small cache case. The maximum wait time was increased to 5 minutes with the ticket [WT-3942](https://jira.mongodb.org/browse/WT-3942). \r\n\r\nI have increased the maximum timer to 8 minutes and give enough time for eviction with a small cache.",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 11:20 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 10:30 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 10:30 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 10:30 GMT"
    },
    {
        "key": "WT-6356",
        "number": 5747,
        "state": "closed",
        "title": "WT-6356 Assert we don't see out of order timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 09:19 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:32 GMT",
        "closed_at": "Thursday Jul 02, 2020 at 02:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5769",
        "number": 5746,
        "state": "closed",
        "title": "WT-5769 Remove remaining usage of ignore visibility flag",
        "body": "Sorry, I forgot to merge in `develop`. Same deal here, I think it's fine to remove this usage because we're always ignoring visibility for history store now.",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 03:11 GMT",
        "updated_at": "Monday Jun 01, 2020 at 03:37 GMT",
        "closed_at": "Monday Jun 01, 2020 at 03:36 GMT",
        "merged_at": "Monday Jun 01, 2020 at 03:36 GMT"
    },
    {
        "key": "WT-6350",
        "number": 5745,
        "state": "closed",
        "title": "WT-6350 Immediately evict the locally read pages as part of rollback to stable",
        "body": "As the eviction is blocked on the tree until the rollback to stable is finished, it is better to immediately evict the pages that are read by the rollback to stable operation.\r\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 03:00 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 02:31 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 02:31 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 02:31 GMT"
    },
    {
        "key": "WT-6349",
        "number": 5744,
        "state": "closed",
        "title": "WT-6349 Don't perform on disk key removal as part of checkpoint",
        "body": "On disk key removal needs to clear all the history store content\r\nfor the key and it might take quite a bit of time when there are\r\nmultiple keys that are needs to be removed. To avoid checkpoint\r\nwaiting for all these cleanup, better to do this as part of eviction.",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 02:24 GMT",
        "updated_at": "Tuesday Jun 23, 2020 at 06:48 GMT",
        "closed_at": "Thursday Jun 18, 2020 at 05:50 GMT",
        "merged_at": "Thursday Jun 18, 2020 at 05:50 GMT"
    },
    {
        "key": "WT-6323",
        "number": 5743,
        "state": "closed",
        "title": "WT-6323 Increase cache size in test_prepare10 to avoid rollback errors",
        "body": "@kommiharibabu - I have increased the cache size to 2MB and so far I haven't seen the test failing again with WT_ROLLBACK error. ",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 02:15 GMT",
        "updated_at": "Monday Jun 01, 2020 at 03:43 GMT",
        "closed_at": "Monday Jun 01, 2020 at 03:43 GMT",
        "merged_at": "Monday Jun 01, 2020 at 03:43 GMT"
    },
    {
        "key": "WT-6347",
        "number": 5742,
        "state": "closed",
        "title": "WT-6347 Don't reset transaction ids when evicting mixed mode tombstones and clear history store contents for mixed mode updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 01:42 GMT",
        "updated_at": "Wednesday Jun 03, 2020 at 04:47 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 02:39 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 02:39 GMT"
    },
    {
        "key": "WT-6338",
        "number": 5741,
        "state": "closed",
        "title": "WT-6338 test/format may attempt to read invalid key from HS cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 01, 2020 at 00:21 GMT",
        "updated_at": "Monday Jun 01, 2020 at 00:57 GMT",
        "closed_at": "Monday Jun 01, 2020 at 00:57 GMT",
        "merged_at": "Monday Jun 01, 2020 at 00:57 GMT"
    },
    {
        "key": "WT-6301",
        "number": 5740,
        "state": "closed",
        "title": "WT-6301 Add short running stress jobs",
        "body": "This is the suggested change in the existing `smoke.sh` to run test/format binary for 10 times, which takes ~ 11 minutes. \r\n\r\nEvergreen patch build with the changes\r\nhttps://evergreen.mongodb.com/build/wiredtiger_ubuntu1804_patch_b9e8146ae5bc2f131cd7d9c19a2870746573cb38_5ed31853d6d80a49850ef5ba_20_05_31_02_37_56\r\n\r\nAnother approach would be to call `format.sh` with `-t` option and specify the time in minutes to run the test/format binary.\r\n",
        "base_ref": "develop",
        "created_at": "Sunday May 31, 2020 at 13:04 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 02:55 GMT",
        "closed_at": "Tuesday Jun 02, 2020 at 02:55 GMT",
        "merged_at": "Tuesday Jun 02, 2020 at 02:55 GMT"
    },
    {
        "key": "WT-6337",
        "number": 5739,
        "state": "closed",
        "title": "WT-6337 Temporarily disable format's history store cursor scan",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday May 30, 2020 at 01:01 GMT",
        "updated_at": "Saturday May 30, 2020 at 01:37 GMT",
        "closed_at": "Saturday May 30, 2020 at 01:37 GMT",
        "merged_at": "Saturday May 30, 2020 at 01:37 GMT"
    },
    {
        "key": "WT-5679",
        "number": 5738,
        "state": "closed",
        "title": "Revert \"WT-5679 Set the oldest history store checkpoint timestamp as oldest timestamp during restart (#5630)\"",
        "body": "This reverts commit 4b208d51b73bee80541b17be35c41598f08d53de.\r\n\r\nWe experienced a scenario in MDB testing where a checkpoint/recovery timestamp is earlier than the checkpoint history store oldest timestamp in the metadata, which results in an error returned to MDB when setting the oldest and stable timestamps from the checkpoint/recovery timestamp. \r\n\r\nWe are reverting this commit temporarily to unblock progress on SERVER-46678 while we investigate and understand the how and why of the scenario above.",
        "base_ref": "develop",
        "created_at": "Saturday May 30, 2020 at 00:41 GMT",
        "updated_at": "Saturday May 30, 2020 at 04:45 GMT",
        "closed_at": "Saturday May 30, 2020 at 04:45 GMT",
        "merged_at": "Saturday May 30, 2020 at 04:45 GMT"
    },
    {
        "key": "WT-6336",
        "number": 5737,
        "state": "closed",
        "title": "WT-6336 Minor cleanup in test/format buffer handling.",
        "body": "@keitharnoldsmith, a trivial cleanup if/when you resolve this ticket.",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 23:37 GMT",
        "updated_at": "Sunday May 31, 2020 at 23:21 GMT",
        "closed_at": "Sunday May 31, 2020 at 23:21 GMT",
        "merged_at": "Sunday May 31, 2020 at 23:21 GMT"
    },
    {
        "key": "WT-6295",
        "number": 5736,
        "state": "closed",
        "title": "WT-6295 Aggregate time windows in salvage",
        "body": "@quchenhao, this branch does timestamp aggregation during salvage, would you please do the review?\r\n\r\nI have a few concerns:\r\n\r\n* First, in WT-6260, you commented \"The cause of the failure is we are not aggregating time window information to the internal pages when doing salvage. If we need to aggregate that information, we have to rebuild every page we try to salvage, which will make salvage take much longer.\" I'm not following that, my approach is to read the timestamps out of the leaf pages and then use that information to initialize the internal pages we create. It seems to me you're talking about rewriting leaf pages, which would be expensive -- can you please explain further what you were thinking, and if I'm missing something?\r\n\r\n* Second, the failure in the initial WT-6260 ticket was that a prepare state in a leaf page wasn't being propagated to the parent. The code I added will, in fact fix that by propagating the prepare up the tree, but I think that's wrong. I would expect rollback-to-stable to clear ANY prepare information on startup, but if we're salvaging the file, I suspect we can't depend on that, the file was presumably corrupted. Shouldn't we clear any prepare flags that are set in the salvaged fiile? Prepared operations can't possible be resolved after a salvage, so I think we should clear them, not propagate them up the tree. Thoughts?\r\n\r\n* Finally, please check me on my timestamp macro use, specifically, I think I should be using `WT_TIME_AGGREGATE_INIT_MAX`, not `WT_TIME_AGGREGATE_INIT`, but I'm not confident in that decision.",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 22:24 GMT",
        "updated_at": "Sunday May 31, 2020 at 23:48 GMT",
        "closed_at": "Sunday May 31, 2020 at 23:48 GMT",
        "merged_at": "Sunday May 31, 2020 at 23:48 GMT"
    },
    {
        "key": "WT-6335",
        "number": 5735,
        "state": "closed",
        "title": "WT-6335 test/format: history store modify records are incorrectly displayed in debugging output",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 18:20 GMT",
        "updated_at": "Friday May 29, 2020 at 19:09 GMT",
        "closed_at": "Friday May 29, 2020 at 19:09 GMT",
        "merged_at": "Friday May 29, 2020 at 19:09 GMT"
    },
    {
        "key": "WT-6332",
        "number": 5734,
        "state": "closed",
        "title": "WT-6332 test/format failure: HS scan incompatible with in-memory configuration",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 16:30 GMT",
        "updated_at": "Friday May 29, 2020 at 18:22 GMT",
        "closed_at": "Friday May 29, 2020 at 18:22 GMT",
        "merged_at": "Friday May 29, 2020 at 18:22 GMT"
    },
    {
        "key": "WT-6333",
        "number": 5733,
        "state": "closed",
        "title": "WT-6333  test/format memory leak in hs_cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 16:12 GMT",
        "updated_at": "Friday May 29, 2020 at 18:22 GMT",
        "closed_at": "Friday May 29, 2020 at 18:22 GMT",
        "merged_at": "Friday May 29, 2020 at 18:22 GMT"
    },
    {
        "key": "WT-6334",
        "number": 5732,
        "state": "closed",
        "title": "WT-6334 Coverity: Use return value when closing incremental backup cursor",
        "body": "This was picked up by Coverity so I figured we may as well propagate the return value upwards to callers.",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 11:11 GMT",
        "updated_at": "Saturday May 30, 2020 at 05:01 GMT",
        "closed_at": "Saturday May 30, 2020 at 05:01 GMT",
        "merged_at": "Saturday May 30, 2020 at 05:01 GMT"
    },
    {
        "key": "WT-6329",
        "number": 5731,
        "state": "closed",
        "title": "WT-6329 Add stats to track number of entries skipped by cursor next and prev",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 06:22 GMT",
        "updated_at": "Sunday May 31, 2020 at 22:44 GMT",
        "closed_at": "Sunday May 31, 2020 at 22:44 GMT",
        "merged_at": "Sunday May 31, 2020 at 22:44 GMT"
    },
    {
        "key": "WT-5769",
        "number": 5730,
        "state": "closed",
        "title": "WT-5769 Search history store can potentially walk the whole history store tree",
        "body": "Here's a rough draft of the change we discussed. I'm sure I've missed an edge case or ten but I think this is enough to show that it's a viable approach.",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 04:38 GMT",
        "updated_at": "Tuesday Jun 02, 2020 at 04:44 GMT",
        "closed_at": "Monday Jun 01, 2020 at 02:27 GMT",
        "merged_at": "Monday Jun 01, 2020 at 02:27 GMT"
    },
    {
        "key": "WT-6015",
        "number": 5729,
        "state": "closed",
        "title": "Revert \"WT-6015 Check compatibility after logpath and extensions are set up.\"",
        "body": "Reverts wiredtiger/wiredtiger#5700",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 03:40 GMT",
        "updated_at": "Friday May 29, 2020 at 03:40 GMT",
        "closed_at": "Friday May 29, 2020 at 03:40 GMT",
        "merged_at": "Friday May 29, 2020 at 03:40 GMT"
    },
    {
        "key": "WT-6324",
        "number": 5728,
        "state": "closed",
        "title": "Revert \"WT-6324 Check compatibility after encryption and only check if logging\"",
        "body": "Reverts wiredtiger/wiredtiger#5725",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 03:38 GMT",
        "updated_at": "Friday May 29, 2020 at 03:39 GMT",
        "closed_at": "Friday May 29, 2020 at 03:39 GMT",
        "merged_at": "Friday May 29, 2020 at 03:39 GMT"
    },
    {
        "key": "WT-6168",
        "number": 5727,
        "state": "closed",
        "title": "WT-6168 Ignore history store visibility when resolving prepared updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2020 at 01:27 GMT",
        "updated_at": "Friday May 29, 2020 at 04:11 GMT",
        "closed_at": "Friday May 29, 2020 at 04:11 GMT",
        "merged_at": "Friday May 29, 2020 at 04:11 GMT"
    },
    {
        "key": "WT-6297",
        "number": 5726,
        "state": "closed",
        "title": "WT-6297 test checkpoint04 increase data size",
        "body": "The test test_checkpoint04.py used to take ~0.12 seconds, I have updated the code to run the test in a loop and increase the data size until it passes.\r\n\r\nEvergreen patch build https://evergreen.mongodb.com/version/5ed09ac02fbabe2d6baf9058",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2020 at 22:57 GMT",
        "updated_at": "Sunday May 31, 2020 at 02:10 GMT",
        "closed_at": "Sunday May 31, 2020 at 02:10 GMT",
        "merged_at": "Sunday May 31, 2020 at 02:10 GMT"
    },
    {
        "key": "WT-6324",
        "number": 5725,
        "state": "closed",
        "title": "WT-6324 Check compatibility after encryption and only check if logging",
        "body": "is enabled in configuration.\r\n\r\nThis contains two fixes:\r\n1. Moves where we do compatibility testing to just before opening the turtle file so all configuration processing is complete. This would fail if log files are encrypted.\r\n2. Only do compatibility testing of logging is enabled in the configuration.\r\n\r\nThis is fallout from WT-6015.",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2020 at 17:09 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:33 GMT",
        "closed_at": "Thursday May 28, 2020 at 20:46 GMT",
        "merged_at": "Thursday May 28, 2020 at 20:46 GMT"
    },
    {
        "key": "WT-6320",
        "number": 5724,
        "state": "closed",
        "title": "WT-6320 Allow eviction of pages with older content",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2020 at 07:39 GMT",
        "updated_at": "Friday May 29, 2020 at 00:29 GMT",
        "closed_at": "Friday May 29, 2020 at 00:29 GMT",
        "merged_at": "Friday May 29, 2020 at 00:29 GMT"
    },
    {
        "key": "WT-6315",
        "number": 5723,
        "state": "closed",
        "title": "WT-6315 Fix commit check failure because of updates restored from data store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2020 at 02:56 GMT",
        "updated_at": "Friday May 29, 2020 at 00:15 GMT",
        "closed_at": "Friday May 29, 2020 at 00:15 GMT",
        "merged_at": "Friday May 29, 2020 at 00:15 GMT"
    },
    {
        "key": "WT-6317",
        "number": 5722,
        "state": "closed",
        "title": "WT-6317 Create a short and long version of compatibility tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2020 at 01:58 GMT",
        "updated_at": "Friday May 29, 2020 at 00:39 GMT",
        "closed_at": "Friday May 29, 2020 at 00:39 GMT",
        "merged_at": "Friday May 29, 2020 at 00:39 GMT"
    },
    {
        "key": "WT-6318",
        "number": 5721,
        "state": "closed",
        "title": "WT-6318 Stop assuming exclusive access when writing to history store pages",
        "body": "It's not 100% clear whether this fixes WT-6257 but this is definitely a bug.",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2020 at 00:20 GMT",
        "updated_at": "Thursday May 28, 2020 at 02:05 GMT",
        "closed_at": "Thursday May 28, 2020 at 02:05 GMT",
        "merged_at": "Thursday May 28, 2020 at 02:05 GMT"
    },
    {
        "key": "WT-6312",
        "number": 5720,
        "state": "closed",
        "title": "WT-6312 history store verification",
        "body": "The only thing that's ugly here is setting `WT_CURSTD_IGNORE_TOMBSTONE` in the cursor so we don't skip over all the history-store records, otherwise this doesn't seem that unreasonable to me.\r\n\r\nOf course, just discard this branch without further discussion if this isn't the way you want to go.",
        "base_ref": "develop",
        "created_at": "Wednesday May 27, 2020 at 19:54 GMT",
        "updated_at": "Friday May 29, 2020 at 02:51 GMT",
        "closed_at": "Friday May 29, 2020 at 02:51 GMT",
        "merged_at": "Friday May 29, 2020 at 02:51 GMT"
    },
    {
        "key": "WT-6307",
        "number": 5719,
        "state": "closed",
        "title": "WT-6307 Increase the page cache size for all the page allocations",
        "body": "Some memory allocations are missed to considered as page cache\r\nallocations.",
        "base_ref": "develop",
        "created_at": "Wednesday May 27, 2020 at 02:07 GMT",
        "updated_at": "Wednesday May 27, 2020 at 08:22 GMT",
        "closed_at": "Wednesday May 27, 2020 at 08:22 GMT",
        "merged_at": "Wednesday May 27, 2020 at 08:22 GMT"
    },
    {
        "key": "WT-6306",
        "number": 5718,
        "state": "closed",
        "title": "WT-6306 Mark page dirty before force evicting HS pages with deleted items",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 26, 2020 at 12:06 GMT",
        "updated_at": "Thursday May 28, 2020 at 22:52 GMT",
        "closed_at": "Thursday May 28, 2020 at 22:52 GMT",
        "merged_at": "Thursday May 28, 2020 at 22:52 GMT"
    },
    {
        "key": "WT-6280",
        "number": 5717,
        "state": "closed",
        "title": "WT-6280 Checkpoint history store may race with eviction removing contents from the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 26, 2020 at 06:13 GMT",
        "updated_at": "Wednesday Jun 03, 2020 at 23:50 GMT",
        "closed_at": "Wednesday Jun 03, 2020 at 23:50 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6303",
        "number": 5716,
        "state": "closed",
        "title": "WT-6303 Fix commit check may fail because of a prepared rollback",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 26, 2020 at 03:41 GMT",
        "updated_at": "Wednesday May 27, 2020 at 04:53 GMT",
        "closed_at": "Wednesday May 27, 2020 at 04:53 GMT",
        "merged_at": "Wednesday May 27, 2020 at 04:53 GMT"
    },
    {
        "key": "WT-6300",
        "number": 5715,
        "state": "closed",
        "title": "WT-6300 Delay setting leak memory flag until after the final checkpoint in shutdown",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 26, 2020 at 01:30 GMT",
        "updated_at": "Tuesday May 26, 2020 at 03:00 GMT",
        "closed_at": "Tuesday May 26, 2020 at 03:00 GMT",
        "merged_at": "Tuesday May 26, 2020 at 03:00 GMT"
    },
    {
        "key": "WT-6286",
        "number": 5714,
        "state": "closed",
        "title": "WT-6286 Update Evergreen waterfall page to order jobs",
        "body": "Updated the WiredTiger waterfall page to order build variants. ",
        "base_ref": "develop",
        "created_at": "Monday May 25, 2020 at 08:51 GMT",
        "updated_at": "Tuesday May 26, 2020 at 00:41 GMT",
        "closed_at": "Tuesday May 26, 2020 at 00:41 GMT",
        "merged_at": "Tuesday May 26, 2020 at 00:41 GMT"
    },
    {
        "key": "WT-6124",
        "number": 5713,
        "state": "closed",
        "title": "WT-6124 Check for durable timestamps when startup generation changes",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 25, 2020 at 01:08 GMT",
        "updated_at": "Monday May 25, 2020 at 05:44 GMT",
        "closed_at": "Monday May 25, 2020 at 05:44 GMT",
        "merged_at": "Monday May 25, 2020 at 05:44 GMT"
    },
    {
        "key": "WT-6302",
        "number": 5712,
        "state": "closed",
        "title": "WT-6302 move format operations tracing into WiredTiger log files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 24, 2020 at 20:36 GMT",
        "updated_at": "Wednesday May 27, 2020 at 17:05 GMT",
        "closed_at": "Wednesday May 27, 2020 at 17:05 GMT",
        "merged_at": "Wednesday May 27, 2020 at 17:05 GMT"
    },
    {
        "key": "WT-6229",
        "number": 5711,
        "state": "closed",
        "title": "WT-6229 Fix memory growth bug during MDB shutdown",
        "body": "Don't fast track the eviction of HS pages, as this can lead\r\nto thrashing when there are a lot of deletes to apply to the\r\nHS file during checkpoint reconciliation.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 23:50 GMT",
        "updated_at": "Monday May 25, 2020 at 23:51 GMT",
        "closed_at": "Monday May 25, 2020 at 23:51 GMT",
        "merged_at": "Monday May 25, 2020 at 23:51 GMT"
    },
    {
        "key": "WT-6108",
        "number": 5710,
        "state": "closed",
        "title": "WT-6108 modify test format to support rollback to stable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 21:38 GMT",
        "updated_at": "Monday Jun 15, 2020 at 17:35 GMT",
        "closed_at": "Monday Jun 15, 2020 at 17:35 GMT",
        "merged_at": "Monday Jun 15, 2020 at 17:35 GMT"
    },
    {
        "key": "WT-6296",
        "number": 5709,
        "state": "closed",
        "title": "WT-6296 Fix handling of WT_RESTART in history store insertion",
        "body": "While debugging WT-6257, I noticed a bug with our handling of `WT_RESTART` in history store insertion. If we successfully insert a non-timestamped history store record, we go on to attempt to delete any timestamped history store records for that key. If this key deletion process involves reading in a split page, we will return `WT_RESTART`. Instead of resuming key deletion, we repeat the entire process again meaning that we will insert the same record again with a slightly higher `hs_counter`.\r\n\r\nI don't believe that this could cause any visibility issues but it's a waste of cache and disk space and make things confusing for debugging so we should fix this.",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 15:16 GMT",
        "updated_at": "Monday May 25, 2020 at 05:45 GMT",
        "closed_at": "Monday May 25, 2020 at 05:45 GMT",
        "merged_at": "Monday May 25, 2020 at 05:45 GMT"
    },
    {
        "key": "WT-6287",
        "number": 5708,
        "state": "closed",
        "title": "WT-6287 Remove WT_TXN_HAS_TS_READ flag",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 11:52 GMT",
        "updated_at": "Monday May 25, 2020 at 00:54 GMT",
        "closed_at": "Monday May 25, 2020 at 00:54 GMT",
        "merged_at": "Monday May 25, 2020 at 00:54 GMT"
    },
    {
        "key": "WT-6251",
        "number": 5707,
        "state": "closed",
        "title": "WT-6251 Fix splits to reduce the size of index files.",
        "body": "Some code that added before durable history to force splits with lookaside eviction when no values were visible.  That is no longer needed, and was causing pages to split too small, inflating file size and reducing lookup performance.\r\n\r\nRemove that code and make some other small tweaks to reduce index size.",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 11:16 GMT",
        "updated_at": "Monday May 25, 2020 at 01:53 GMT",
        "closed_at": "Monday May 25, 2020 at 01:53 GMT",
        "merged_at": "Monday May 25, 2020 at 01:53 GMT"
    },
    {
        "key": "WT-6278",
        "number": 5706,
        "state": "closed",
        "title": "WT-6278 Return from resolve prepared op when we have already resolved\u2026",
        "body": "\u2026 the operations",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 06:43 GMT",
        "updated_at": "Friday May 22, 2020 at 07:16 GMT",
        "closed_at": "Friday May 22, 2020 at 07:16 GMT",
        "merged_at": "Friday May 22, 2020 at 07:16 GMT"
    },
    {
        "key": "WT-6199",
        "number": 5705,
        "state": "closed",
        "title": "WT-6199 Fix PPC test variables in evergreen.yml",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 04:28 GMT",
        "updated_at": "Friday May 22, 2020 at 05:05 GMT",
        "closed_at": "Friday May 22, 2020 at 05:05 GMT",
        "merged_at": "Friday May 22, 2020 at 05:05 GMT"
    },
    {
        "key": "WT-6260",
        "number": 5704,
        "state": "closed",
        "title": "WT-6260 Disable post salvage verify",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 03:34 GMT",
        "updated_at": "Friday May 22, 2020 at 04:04 GMT",
        "closed_at": "Friday May 22, 2020 at 04:04 GMT",
        "merged_at": "Friday May 22, 2020 at 04:04 GMT"
    },
    {
        "key": "WT-6260",
        "number": 5703,
        "state": "closed",
        "title": "WT-6260 Aggregate time windows for salvage",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 01:52 GMT",
        "updated_at": "Monday Oct 26, 2020 at 18:45 GMT",
        "closed_at": "Friday May 22, 2020 at 03:08 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6266",
        "number": 5702,
        "state": "closed",
        "title": "WT-6266 metadata verify of the HS file can fail if underlying objects are corrupted",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2020 at 00:38 GMT",
        "updated_at": "Friday May 22, 2020 at 04:39 GMT",
        "closed_at": "Friday May 22, 2020 at 04:39 GMT",
        "merged_at": "Friday May 22, 2020 at 04:39 GMT"
    },
    {
        "key": "WT-6292",
        "number": 5701,
        "state": "closed",
        "title": "WT-6292 Fix the inconsistent prepare metadata value in checkpoint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2020 at 21:48 GMT",
        "updated_at": "Friday May 22, 2020 at 02:02 GMT",
        "closed_at": "Friday May 22, 2020 at 02:02 GMT",
        "merged_at": "Friday May 22, 2020 at 02:02 GMT"
    },
    {
        "key": "WT-6015",
        "number": 5700,
        "state": "closed",
        "title": "WT-6015 Check compatibility after logpath and extensions are set up.",
        "body": "This PR is not yet complete, as it does not contain a reproducer test. I debugged it by running recovery on the tarball in the ticket as the issue was happening on restart. The backup content was valid.\r\n\r\nThe reason WT-5930 did not fully solve the problem is that the compatibility was tested before the logging subsystem configuration was done. That leads to some convoluted startup configuration setting. I'm not thrilled with where that ended up. So I'm marking this as a draft but wanted to put the fix out there for initial review.",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2020 at 20:03 GMT",
        "updated_at": "Friday Jul 31, 2020 at 00:33 GMT",
        "closed_at": "Wednesday May 27, 2020 at 22:14 GMT",
        "merged_at": "Wednesday May 27, 2020 at 22:14 GMT"
    },
    {
        "key": "WT-6293",
        "number": 5699,
        "state": "closed",
        "title": "WT-6293 pages being read into memory can leak allocated buffers",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2020 at 18:52 GMT",
        "updated_at": "Thursday May 21, 2020 at 23:57 GMT",
        "closed_at": "Thursday May 21, 2020 at 23:57 GMT",
        "merged_at": "Thursday May 21, 2020 at 23:57 GMT"
    },
    {
        "key": "WT-6219",
        "number": 5698,
        "state": "closed",
        "title": "WT-6219 Fix application threads' history store visibility during eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2020 at 11:31 GMT",
        "updated_at": "Friday May 22, 2020 at 04:12 GMT",
        "closed_at": "Friday May 22, 2020 at 04:12 GMT",
        "merged_at": "Friday May 22, 2020 at 04:12 GMT"
    },
    {
        "key": "WT-6281",
        "number": 5697,
        "state": "closed",
        "title": "WT-6281 salvage/verify should not assert or panic in the case of corrupted page cells",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2020 at 01:04 GMT",
        "updated_at": "Thursday May 21, 2020 at 23:04 GMT",
        "closed_at": "Thursday May 21, 2020 at 23:04 GMT",
        "merged_at": "Thursday May 21, 2020 at 23:04 GMT"
    },
    {
        "key": "WT-6285",
        "number": 5696,
        "state": "closed",
        "title": "WT-6285 Only retry reading when the prepared update is restored from the disk",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2020 at 11:21 GMT",
        "updated_at": "Thursday May 21, 2020 at 03:12 GMT",
        "closed_at": "Thursday May 21, 2020 at 03:12 GMT",
        "merged_at": "Thursday May 21, 2020 at 03:12 GMT"
    },
    {
        "key": "WT-6284",
        "number": 5695,
        "state": "closed",
        "title": "WT-6284 History store isn't visible to wt dump",
        "body": "When we moved `WT_CURSTD_IGNORE_TOMBSTONE` from being a session flag to a cursor flag, we broke wt dump. `wt dump` uses a dump cursor which delegates calls to the cursor API to a \"child\" cursor. We need to set the flag on the child cursor for this to work.\r\n\r\nWe also modified the check in `__wt_txn_read` such that we will read the on-disk value's stop time pair even with `WT_CURSTD_IGNORE_TOMBSTONE` enabled if it is globally visible. This makes `wt dump` less useful so let's make an exception here.",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2020 at 10:47 GMT",
        "updated_at": "Monday May 25, 2020 at 01:19 GMT",
        "closed_at": "Monday May 25, 2020 at 01:19 GMT",
        "merged_at": "Monday May 25, 2020 at 01:19 GMT"
    },
    {
        "key": "WT-6232",
        "number": 5694,
        "state": "closed",
        "title": "WT-6232 Fix the logic that incorrectly returns EINVAL for in_mem config with prepared transactions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2020 at 02:21 GMT",
        "updated_at": "Wednesday May 20, 2020 at 06:34 GMT",
        "closed_at": "Wednesday May 20, 2020 at 06:34 GMT",
        "merged_at": "Wednesday May 20, 2020 at 06:34 GMT"
    },
    {
        "key": "WT-6238",
        "number": 5693,
        "state": "closed",
        "title": "WT-6238 Fix salvage panic seeing prepared updates restored from disk",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2020 at 01:38 GMT",
        "updated_at": "Thursday May 21, 2020 at 01:59 GMT",
        "closed_at": "Thursday May 21, 2020 at 01:59 GMT",
        "merged_at": "Thursday May 21, 2020 at 01:59 GMT"
    },
    {
        "key": "WT-6056",
        "number": 5692,
        "state": "closed",
        "title": "WT-6056 Set DATA_CORRUPTION flag so we return TRY_SALVAGE on open.",
        "body": "Also set test_abort to false in child process instead of inheriting.",
        "base_ref": "develop",
        "created_at": "Tuesday May 19, 2020 at 18:39 GMT",
        "updated_at": "Tuesday May 19, 2020 at 19:03 GMT",
        "closed_at": "Tuesday May 19, 2020 at 19:03 GMT",
        "merged_at": "Tuesday May 19, 2020 at 19:03 GMT"
    },
    {
        "key": "WT-6212",
        "number": 5691,
        "state": "closed",
        "title": "WT-6212 Dump failure message to Evergreen log",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 19, 2020 at 12:57 GMT",
        "updated_at": "Wednesday May 20, 2020 at 05:06 GMT",
        "closed_at": "Wednesday May 20, 2020 at 05:06 GMT",
        "merged_at": "Wednesday May 20, 2020 at 05:06 GMT"
    },
    {
        "key": "WT-6267",
        "number": 5690,
        "state": "closed",
        "title": "WT-6267 Fix not deleting prepared update when hs cursor is placed on another key",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 19, 2020 at 03:59 GMT",
        "updated_at": "Tuesday May 19, 2020 at 04:55 GMT",
        "closed_at": "Tuesday May 19, 2020 at 04:55 GMT",
        "merged_at": "Tuesday May 19, 2020 at 04:55 GMT"
    },
    {
        "key": "WT-6265",
        "number": 5689,
        "state": "closed",
        "title": "WT-6265 Coverity: Integer overflow in test/format/ops.c",
        "body": "This expression (`pause_ms *  WT_THOUSAND`) can overflow since it is using 32-bit integer arithmetic. We can avoid this by casting one of the operands to `uint64_t`.",
        "base_ref": "develop",
        "created_at": "Tuesday May 19, 2020 at 02:00 GMT",
        "updated_at": "Tuesday May 19, 2020 at 02:51 GMT",
        "closed_at": "Tuesday May 19, 2020 at 02:51 GMT",
        "merged_at": "Tuesday May 19, 2020 at 02:51 GMT"
    },
    {
        "key": "WT-6261",
        "number": 5688,
        "state": "closed",
        "title": "WT-6261 Turn off incremental backup rename testing until open ticket is fixed.",
        "body": "@ddanderson I'm turning off rename in general testing while WT-6215 is open. That ticket will turn it back on, but the fix is non-trivial so in order to allow testing to proceed in the meantime, I'm turning off rename.",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2020 at 14:59 GMT",
        "updated_at": "Monday May 18, 2020 at 15:26 GMT",
        "closed_at": "Monday May 18, 2020 at 15:26 GMT",
        "merged_at": "Monday May 18, 2020 at 15:26 GMT"
    },
    {
        "key": "WT-6255",
        "number": 5687,
        "state": "closed",
        "title": "WT-6255 Temporarily disable format-stress-sanitizer-lsm-test in Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2020 at 06:51 GMT",
        "updated_at": "Monday May 18, 2020 at 08:28 GMT",
        "closed_at": "Monday May 18, 2020 at 08:28 GMT",
        "merged_at": "Monday May 18, 2020 at 08:28 GMT"
    },
    {
        "key": "WT-6254",
        "number": 5686,
        "state": "closed",
        "title": "WT-6254 Statistics for force evicting history store pages while the session has history store cursor open",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2020 at 04:49 GMT",
        "updated_at": "Tuesday May 19, 2020 at 03:17 GMT",
        "closed_at": "Tuesday May 19, 2020 at 03:17 GMT",
        "merged_at": "Tuesday May 19, 2020 at 03:17 GMT"
    },
    {
        "key": "WT-6224",
        "number": 5685,
        "state": "closed",
        "title": "WT-6224 Adding globally visible tombstone to the key when an on disk prepared update is reverted",
        "body": "\u2026on disk prepared update reverted",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2020 at 04:12 GMT",
        "updated_at": "Monday May 18, 2020 at 04:56 GMT",
        "closed_at": "Monday May 18, 2020 at 04:56 GMT",
        "merged_at": "Monday May 18, 2020 at 04:56 GMT"
    },
    {
        "key": "WT-5242",
        "number": 5684,
        "state": "closed",
        "title": "WT-5242 Minimize checkpoints pinned during backup (v4.2 backport)",
        "body": "WT-5242 Minimize checkpoints pinned during backup (#5590)\r\n- Checkpoints have time values generated from a per-session monotonic clock.  Use these values to preserve only the checkpoints that may be needed by backup.  At the end of each checkpoint, we save a time value from the same clock.  When we open a backup cursor we use this save value as a limit on checkpoint preservation.  All checkpoints with times values less than or equal to that are kept until the backup cursor is closed.\r\n- Add python tests for new behavior and update docs to reflect new way checkpoints and backup cursors interact.\r\n- Eliminate unnecessary iteration searching for highest value in sorted array.\r\n\r\nCo-authored-by: Keith A. Smith <keith.smith@mongodb>\r\n(cherry picked from commit 19f3761b35482c91f5d50d643ebfb7d0e6316584)\r\n\r\nWT-6118 Missing checkpoint in backup (#5643)\r\n- Change how we track the time of the most recent checkpoint.  Instead of saving it after a checkpoint completes, use the time value we assign when initializing a new checkpoint structure. \r\n- Rename the variable where we store this to better reflect new usage.\r\n- Re-enable deletion of checkpoints during backup and the tests of that functionality.\r\n\r\nCo-authored-by: Keith A. Smith <keith.smith@mongodb>\r\n(cherry picked from commit 3e87b896d1d07c2ec5979ea0951847e51dbfcc57)\r\n\r\nWT-6141 Disable checkpoint deletion during backup (#5616)\r\n- Keep all WiredTiger checkpoints while a hot backup is active.\r\n- Also disables a pair of tests that checked for the old behavior.\r\n\r\nCo-authored-by: Keith A. Smith <keith.smith@mongodb>\r\n(cherry picked from commit 2fd82090f1cccf52f9aed342b54e3006839dc1e3)",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday May 18, 2020 at 04:03 GMT",
        "updated_at": "Monday May 18, 2020 at 22:35 GMT",
        "closed_at": "Monday May 18, 2020 at 22:35 GMT",
        "merged_at": "Monday May 18, 2020 at 22:35 GMT"
    },
    {
        "key": "WT-6253",
        "number": 5683,
        "state": "closed",
        "title": "WT-6253 Fix time window validation for out of order timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2020 at 03:45 GMT",
        "updated_at": "Monday May 18, 2020 at 06:43 GMT",
        "closed_at": "Monday May 18, 2020 at 06:43 GMT",
        "merged_at": "Monday May 18, 2020 at 06:43 GMT"
    },
    {
        "key": "WT-6250",
        "number": 5682,
        "state": "closed",
        "title": "WT-6250 Avoid passing reconcile struct to cell layer for stat logging",
        "body": "This is my try at fixing the layer violation when passing WT_RECONCILE to low level cell packing code.",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2020 at 03:33 GMT",
        "updated_at": "Thursday May 28, 2020 at 05:32 GMT",
        "closed_at": "Thursday May 28, 2020 at 05:32 GMT",
        "merged_at": "Thursday May 28, 2020 at 05:32 GMT"
    },
    {
        "key": "WT-6252",
        "number": 5681,
        "state": "closed",
        "title": "WT-6252 Remove mutable read timestamp from transaction structure",
        "body": "As part of #5677, @quchenhao  noted that we can simplify our transaction structures since we're no longer moving our read timestamp back and forth for resolving modifies since the introduction of the `WT_SESSION_RESOLVING_MODIFY` flag.",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2020 at 03:31 GMT",
        "updated_at": "Monday May 18, 2020 at 04:58 GMT",
        "closed_at": "Monday May 18, 2020 at 04:58 GMT",
        "merged_at": "Monday May 18, 2020 at 04:58 GMT"
    },
    {
        "key": "WT-6249",
        "number": 5680,
        "state": "closed",
        "title": "WT-6249 timestamp abort should report all failing records.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 17, 2020 at 17:38 GMT",
        "updated_at": "Monday May 18, 2020 at 14:36 GMT",
        "closed_at": "Monday May 18, 2020 at 10:25 GMT",
        "merged_at": "Monday May 18, 2020 at 10:25 GMT"
    },
    {
        "key": "WT-6248",
        "number": 5679,
        "state": "closed",
        "title": "WT-6248 add HS records to page dumps",
        "body": "@agorrod, @quchenhao, @tetsuo-cpp, @kommiharibabu, @luke-pearson, @bvpvamsikrishna: these are the changes that I mentioned over the weekend. If you find this approach useful in your debugging, I'm happy to fix the output in any way you like, just let me know what information you'd like to see in the page dumps. (If this isn't helpful, I'm happy to kill this branch entirely.)\r\n\r\nOne change I should flag is that I'm no longer printing time windows if they're empty, only if they have values that are different from the defaults.\r\n\r\n@sulabhM, @luke-pearson, I've asked you to review because this PR changes the work done in WT-5347 by @jeremytay90, that you reviewed. In that ticket, we added `-d dump_history` to the `wt` command, which I think changed verify to dump HS records at the same time as cells were verified on the pages, that is, you could get a static view of a file and its HS records. The changes in this PR will dump HS records intermixed with page records as part of the verify command's `-d dump_pages` option, and so I've removed `-d dump_history` in 6f9e2d5. I did it as a separate commit so we can easily revert it if you want to keep it or if there's useful functionality there I didn't understand.",
        "base_ref": "develop",
        "created_at": "Sunday May 17, 2020 at 17:15 GMT",
        "updated_at": "Thursday May 21, 2020 at 00:03 GMT",
        "closed_at": "Thursday May 21, 2020 at 00:03 GMT",
        "merged_at": "Thursday May 21, 2020 at 00:03 GMT"
    },
    {
        "key": "WT-6245",
        "number": 5678,
        "state": "closed",
        "title": "WT-6245 Instantiate both update and tombstone for prepared tombstone",
        "body": "When the prepared update is a tomnbstone that is written to the datastore,\r\nwhile instantiating the data store, make sure that instantiate both\r\nupdate and tombstone to avoid replacing the on-disk value.",
        "base_ref": "develop",
        "created_at": "Sunday May 17, 2020 at 11:50 GMT",
        "updated_at": "Monday May 18, 2020 at 03:36 GMT",
        "closed_at": "Monday May 18, 2020 at 03:36 GMT",
        "merged_at": "Monday May 18, 2020 at 03:36 GMT"
    },
    {
        "key": "WT-6247",
        "number": 5677,
        "state": "closed",
        "title": "WT-6247 Apply WT_SESSION_RESOLVING_MODIFY to the update chain",
        "body": "When cleaning WT-6246, I found this problem.",
        "base_ref": "develop",
        "created_at": "Saturday May 16, 2020 at 12:23 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:25 GMT",
        "closed_at": "Monday May 18, 2020 at 04:03 GMT",
        "merged_at": "Monday May 18, 2020 at 04:03 GMT"
    },
    {
        "key": "WT-6246",
        "number": 5676,
        "state": "closed",
        "title": "WT-6246 Rename time pair to time point and pass correct stop ts to hs cell",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday May 16, 2020 at 11:26 GMT",
        "updated_at": "Sunday May 17, 2020 at 23:55 GMT",
        "closed_at": "Sunday May 17, 2020 at 23:55 GMT",
        "merged_at": "Sunday May 17, 2020 at 23:55 GMT"
    },
    {
        "key": "WT-6156",
        "number": 5675,
        "state": "closed",
        "title": "WT-6156 format never selects \"backup.incremental=log\" (#5617) (v4.2 backport)",
        "body": "- Configure backup.incremental even if backups aren't configured, otherwise we get a corrupted\r\nCONFIG file.\r\n- Add a missing switch break that prevented incremental backups based on log files from ever\r\nbeing configured.\r\n\r\n(cherry picked from commit 3f446252f0dd03976eec30a1cca225634043ac3b)",
        "base_ref": "mongodb-4.2",
        "created_at": "Saturday May 16, 2020 at 06:09 GMT",
        "updated_at": "Monday May 18, 2020 at 01:09 GMT",
        "closed_at": "Monday May 18, 2020 at 01:09 GMT",
        "merged_at": "Monday May 18, 2020 at 01:09 GMT"
    },
    {
        "key": "WT-6136",
        "number": 5674,
        "state": "closed",
        "title": "WT-6136 Record incremental extent lists before merging them with earlier checkpoints (v4.2 backport)",
        "body": "WT-6137 Fix calculation of bits versus bytes for incremental bitmap. (#5618)\r\n\r\n- Add comment. Fix end bit to `len - 1`.\r\n\r\n(cherry picked from commit 5f744db3b90e453a98ed018f7f950de2f7306850)\r\n\r\nWT-6136 Record incremental extent lists before merging them with earlier (#5619)\r\n\r\n- Add reproducer test that reads all blocks returned to make sure they have changes.\r\n- Fix a comment.\r\n- The function names were swapped vs. the functionality.\r\n- Push the extent lists written as intermediate checkpoints are rolled forward to the hot backup. Enhance some comments to explain what's going on.\r\n- Record incremental backup blocks before possibly skipping processing so we record them every time.\r\n- Move the loop down into the block mod functions for checkpoint.\r\n\r\nCo-authored-by: Keith Bostic <keith.bostic@mongodb.com>\r\n(cherry picked from commit 4de717ac46bdc35703e39da83d2fbc5201fddb08)",
        "base_ref": "mongodb-4.2",
        "created_at": "Saturday May 16, 2020 at 05:52 GMT",
        "updated_at": "Monday May 18, 2020 at 22:36 GMT",
        "closed_at": "Monday May 18, 2020 at 22:36 GMT",
        "merged_at": "Monday May 18, 2020 at 22:36 GMT"
    },
    {
        "key": "WT-6224",
        "number": 5673,
        "state": "closed",
        "title": "WT-6224 Adding globally visible tombstone when on disk prepare is rol\u2026",
        "body": "\u2026led back and no associated history store entry exists",
        "base_ref": "develop",
        "created_at": "Saturday May 16, 2020 at 04:47 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:27 GMT",
        "closed_at": "Monday May 18, 2020 at 04:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6235",
        "number": 5672,
        "state": "closed",
        "title": "WT-6235 Reorder prepare commit and rollback operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday May 16, 2020 at 03:38 GMT",
        "updated_at": "Monday May 18, 2020 at 02:46 GMT",
        "closed_at": "Monday May 18, 2020 at 02:46 GMT",
        "merged_at": "Monday May 18, 2020 at 02:46 GMT"
    },
    {
        "key": "WT-6242",
        "number": 5671,
        "state": "closed",
        "title": "WT-6242 Set flag on prepared updates when they are restored from disk",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday May 16, 2020 at 01:45 GMT",
        "updated_at": "Saturday May 16, 2020 at 02:17 GMT",
        "closed_at": "Saturday May 16, 2020 at 02:17 GMT",
        "merged_at": "Saturday May 16, 2020 at 02:17 GMT"
    },
    {
        "key": "WT-6224",
        "number": 5670,
        "state": "closed",
        "title": "WT-6224 Dont write aborted prepared transactions in reconciliation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday May 16, 2020 at 00:42 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:26 GMT",
        "closed_at": "Saturday May 16, 2020 at 04:48 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6177",
        "number": 5669,
        "state": "closed",
        "title": "WT-6177 direct I/O configurations fail with combined with mmap configurations",
        "body": "@fedorova, wanted to let you know about the configuration changes.",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2020 at 16:20 GMT",
        "updated_at": "Friday May 15, 2020 at 22:45 GMT",
        "closed_at": "Friday May 15, 2020 at 22:45 GMT",
        "merged_at": "Friday May 15, 2020 at 22:45 GMT"
    },
    {
        "key": "WT-6227",
        "number": 5668,
        "state": "closed",
        "title": "WT-6227 Fix testutil macro usage and add block backup to smoke.sh.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2020 at 15:42 GMT",
        "updated_at": "Friday May 15, 2020 at 16:48 GMT",
        "closed_at": "Friday May 15, 2020 at 16:48 GMT",
        "merged_at": "Friday May 15, 2020 at 16:48 GMT"
    },
    {
        "key": "WT-6225",
        "number": 5667,
        "state": "closed",
        "title": "WT-6225 Retry reading if race with prepared commit or rollback",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2020 at 06:47 GMT",
        "updated_at": "Tuesday May 19, 2020 at 01:26 GMT",
        "closed_at": "Tuesday May 19, 2020 at 01:18 GMT",
        "merged_at": "Tuesday May 19, 2020 at 01:18 GMT"
    },
    {
        "key": "WT-6223",
        "number": 5666,
        "state": "closed",
        "title": "WT-6223 Insert a full update into the history store if the newer update is an uncommitted prepared update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2020 at 03:39 GMT",
        "updated_at": "Friday May 15, 2020 at 05:53 GMT",
        "closed_at": "Friday May 15, 2020 at 05:53 GMT",
        "merged_at": "Friday May 15, 2020 at 05:53 GMT"
    },
    {
        "key": "WT-6222",
        "number": 5665,
        "state": "closed",
        "title": "WT-6222 Don't append prepared updates to the update chain",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2020 at 03:09 GMT",
        "updated_at": "Friday May 15, 2020 at 11:02 GMT",
        "closed_at": "Friday May 15, 2020 at 11:02 GMT",
        "merged_at": "Friday May 15, 2020 at 11:02 GMT"
    },
    {
        "key": "WT-6220",
        "number": 5664,
        "state": "closed",
        "title": "WT-6220 Add statistics tracking when times are written to disk",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2020 at 01:57 GMT",
        "updated_at": "Friday May 22, 2020 at 04:54 GMT",
        "closed_at": "Friday May 22, 2020 at 04:54 GMT",
        "merged_at": "Friday May 22, 2020 at 04:54 GMT"
    },
    {
        "key": "WT-6217",
        "number": 5663,
        "state": "closed",
        "title": "WT-6217 Disable column store and LSM tests in format.sh",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2020 at 01:26 GMT",
        "updated_at": "Friday May 15, 2020 at 06:56 GMT",
        "closed_at": "Friday May 15, 2020 at 04:17 GMT",
        "merged_at": "Friday May 15, 2020 at 04:17 GMT"
    },
    {
        "key": "WT-6215",
        "number": 5662,
        "state": "closed",
        "title": "WT-6215 Clear backup block information on rename.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 18:13 GMT",
        "updated_at": "Wednesday Jul 22, 2020 at 13:46 GMT",
        "closed_at": "Wednesday Jul 22, 2020 at 13:46 GMT",
        "merged_at": "Wednesday Jul 22, 2020 at 13:46 GMT"
    },
    {
        "key": "WT-6165",
        "number": 5661,
        "state": "closed",
        "title": "WT-6165 cursor operation hung on WT_PREPARE_CONFLICT",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 15:47 GMT",
        "updated_at": "Thursday May 14, 2020 at 22:46 GMT",
        "closed_at": "Thursday May 14, 2020 at 22:46 GMT",
        "merged_at": "Thursday May 14, 2020 at 22:46 GMT"
    },
    {
        "key": "WT-6214",
        "number": 5660,
        "state": "closed",
        "title": "WT-6214 format.sh must disassociate from the child process",
        "body": "@lukech, in #5634 we removed the `nohup` call in `format.sh`, and that means we can't exit `format.sh` and let the underlying commands keep running. Can we talk about why that was needed for your fix?\r\n\r\nRather than calling `eval`, can we just export the environment variables?",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 15:30 GMT",
        "updated_at": "Friday May 15, 2020 at 00:38 GMT",
        "closed_at": "Friday May 15, 2020 at 00:38 GMT",
        "merged_at": "Friday May 15, 2020 at 00:38 GMT"
    },
    {
        "key": "WT-6148",
        "number": 5659,
        "state": "closed",
        "title": "WT-6148 Add new update to the history store with valid stop timestamp",
        "body": "When a uncommitted prepaed update is written to the data store, the\r\nhistory store update must have a value with stop timestamp as WT_TS_MAX.\r\nNeed to update that value with proper stop timestamp by inserting a\r\nnew update to the history store folllowed by a tombstone with valid\r\nstop timestamp.",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 09:37 GMT",
        "updated_at": "Friday May 15, 2020 at 22:45 GMT",
        "closed_at": "Friday May 15, 2020 at 22:45 GMT",
        "merged_at": "Friday May 15, 2020 at 22:45 GMT"
    },
    {
        "key": "WT-6151",
        "number": 5658,
        "state": "closed",
        "title": "WT-6151 Perform an empty check on time window before performing visibility check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 02:03 GMT",
        "updated_at": "Thursday May 14, 2020 at 03:10 GMT",
        "closed_at": "Thursday May 14, 2020 at 03:10 GMT",
        "merged_at": "Thursday May 14, 2020 at 03:10 GMT"
    },
    {
        "key": "WT-6195",
        "number": 5657,
        "state": "closed",
        "title": "WT-6195 Ensure that we don't perform rollback to stable without a history store",
        "body": "This change is to avoid performing rollback to stable when we have no history store file. Previously, if we skip log recovery we `goto done` which will skip the logic where we determine whether or not a history store exists and `hs_exists` won't be assigned to properly.",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 01:42 GMT",
        "updated_at": "Friday May 15, 2020 at 00:32 GMT",
        "closed_at": "Friday May 15, 2020 at 00:32 GMT",
        "merged_at": "Friday May 15, 2020 at 00:32 GMT"
    },
    {
        "key": "WT-6210",
        "number": 5656,
        "state": "closed",
        "title": "WT-6210 Add an assert to make coverity happy",
        "body": "@kommiharibabu Coverity catches an interesting bug and I think there is a concurrency issue with the prepared case.",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 00:23 GMT",
        "updated_at": "Thursday May 14, 2020 at 03:06 GMT",
        "closed_at": "Thursday May 14, 2020 at 03:06 GMT",
        "merged_at": "Thursday May 14, 2020 at 03:06 GMT"
    },
    {
        "key": "WT-6209",
        "number": 5655,
        "state": "closed",
        "title": "WT-6209 32bit integer is enough for waiting periods",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2020 at 00:02 GMT",
        "updated_at": "Thursday May 14, 2020 at 01:24 GMT",
        "closed_at": "Thursday May 14, 2020 at 01:24 GMT",
        "merged_at": "Thursday May 14, 2020 at 01:24 GMT"
    },
    {
        "key": "WT-6207",
        "number": 5654,
        "state": "closed",
        "title": "WT-6207 Check the cursor return value in copy_blocks",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 23:51 GMT",
        "updated_at": "Thursday May 14, 2020 at 03:29 GMT",
        "closed_at": "Thursday May 14, 2020 at 03:29 GMT",
        "merged_at": "Thursday May 14, 2020 at 03:29 GMT"
    },
    {
        "key": "WT-6206",
        "number": 5653,
        "state": "closed",
        "title": "WT-6206 Fix uninitialized memory",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 23:36 GMT",
        "updated_at": "Thursday May 14, 2020 at 00:29 GMT",
        "closed_at": "Thursday May 14, 2020 at 00:29 GMT",
        "merged_at": "Thursday May 14, 2020 at 00:29 GMT"
    },
    {
        "key": "WT-6205",
        "number": 5652,
        "state": "closed",
        "title": "WT-6205 Remove redundant check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 23:28 GMT",
        "updated_at": "Thursday May 14, 2020 at 00:30 GMT",
        "closed_at": "Thursday May 14, 2020 at 00:30 GMT",
        "merged_at": "Thursday May 14, 2020 at 00:30 GMT"
    },
    {
        "key": "WT-6042",
        "number": 5651,
        "state": "closed",
        "title": "WT-6042 Changes to checkpoint04 to remove or debug failures on Windows.",
        "body": "This change removes the use of timestamps as they were not being updated\r\nproperly for checkpoints. It prints out via self.pr more information, in\r\nparticular, the value of all interesting statistics prior to checking\r\nthem so that if we fail we can see all of them in results.txt.",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 19:16 GMT",
        "updated_at": "Thursday May 14, 2020 at 14:21 GMT",
        "closed_at": "Thursday May 14, 2020 at 14:21 GMT",
        "merged_at": "Thursday May 14, 2020 at 14:21 GMT"
    },
    {
        "key": "WT-6201",
        "number": 5650,
        "state": "closed",
        "title": "WT-6201 release WT_CURSOR_BTREE buffers when caching a WT_CURSOR",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 17:51 GMT",
        "updated_at": "Wednesday May 13, 2020 at 19:13 GMT",
        "closed_at": "Wednesday May 13, 2020 at 19:13 GMT",
        "merged_at": "Wednesday May 13, 2020 at 19:13 GMT"
    },
    {
        "key": "WT-6190",
        "number": 5649,
        "state": "closed",
        "title": "WT-6190 review time window validation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 17:26 GMT",
        "updated_at": "Friday May 15, 2020 at 14:11 GMT",
        "closed_at": "Friday May 15, 2020 at 14:11 GMT",
        "merged_at": "Friday May 15, 2020 at 14:11 GMT"
    },
    {
        "key": "WT-6164",
        "number": 5648,
        "state": "closed",
        "title": "WT-6164 Reduce the number of page flags according to the flag variabl\u2026",
        "body": "\u2026e size\r\n\r\nWith the newly added page flags, all the flags cannot fit in the size\r\nof the flags variable that causes the problem. Instead of the page flags\r\nuse the session flags.",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 13:10 GMT",
        "updated_at": "Thursday May 14, 2020 at 02:52 GMT",
        "closed_at": "Thursday May 14, 2020 at 02:52 GMT",
        "merged_at": "Thursday May 14, 2020 at 02:52 GMT"
    },
    {
        "key": "WT-6173",
        "number": 5647,
        "state": "closed",
        "title": "WT-6173 Change __wt_time_window_ functions to macros",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 06:46 GMT",
        "updated_at": "Thursday May 14, 2020 at 15:14 GMT",
        "closed_at": "Thursday May 14, 2020 at 15:14 GMT",
        "merged_at": "Thursday May 14, 2020 at 15:14 GMT"
    },
    {
        "key": "WT-6186",
        "number": 5646,
        "state": "closed",
        "title": "WT-6186 Only delete timestamped history store entries when seeing a non-timestamped tombstone",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2020 at 04:33 GMT",
        "updated_at": "Thursday May 14, 2020 at 02:07 GMT",
        "closed_at": "Thursday May 14, 2020 at 02:07 GMT",
        "merged_at": "Thursday May 14, 2020 at 02:07 GMT"
    },
    {
        "key": "WT-6082",
        "number": 5645,
        "state": "closed",
        "title": "WT-6082 Alternative that clears values when writing",
        "body": "This might be less efficient than clearing them earlier in reconciliation, but I think it captures all the cases in a better way.\r\n\r\nIt is failing testing similarly to the base branch. I wonder if the verify check is happening before a pair of aggregated time windows are being merged?",
        "base_ref": "wt-6082-skip-writing-time-windows-when-possible",
        "created_at": "Wednesday May 13, 2020 at 03:11 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:28 GMT",
        "closed_at": "Wednesday May 13, 2020 at 20:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6129",
        "number": 5644,
        "state": "closed",
        "title": "WT-6129 Ensure prepare transactions not lead to cache stuck",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 22:06 GMT",
        "updated_at": "Tuesday May 19, 2020 at 22:17 GMT",
        "closed_at": "Tuesday May 19, 2020 at 22:17 GMT",
        "merged_at": "Tuesday May 19, 2020 at 22:17 GMT"
    },
    {
        "key": "WT-6118",
        "number": 5643,
        "state": "closed",
        "title": "WT-6118 Missing checkpoint in backup",
        "body": "This fixes a problem from WT-5242 where there was a path where we could create a checkpoint but not update the global \"last checkpoint\" time, resulting in backups that didn't include the correct checkpoint(s).  This PR fixes that by updating the last checkpoint time at the same point where we assign time values to each new checkpoint.  \r\n\r\nI've changed the name of that global field from `conn->ckpt_finish_secs` to `conn->ckpt_most_recent` to more accurately reflect the current usage.  We are no longer updating the time when checkpoints finish.\r\n\r\nAlso re-enable python tests for dropping checkpoints during backup. ",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 16:14 GMT",
        "updated_at": "Tuesday May 12, 2020 at 22:12 GMT",
        "closed_at": "Tuesday May 12, 2020 at 22:12 GMT",
        "merged_at": "Tuesday May 12, 2020 at 22:12 GMT"
    },
    {
        "key": "WT-5543",
        "number": 5642,
        "state": "closed",
        "title": "WT-5543 Open several files to avoid any possible file descriptor",
        "body": "reclamation internally.\r\n\r\n@ddanderson please review this implementation of your suggestion. I have not been able to reproduce since that one time with strace or other means to confirm your theory. But I think it is the most plausible explanation we've come up with.",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 15:55 GMT",
        "updated_at": "Tuesday May 12, 2020 at 17:03 GMT",
        "closed_at": "Tuesday May 12, 2020 at 17:03 GMT",
        "merged_at": "Tuesday May 12, 2020 at 17:03 GMT"
    },
    {
        "key": "WT-5725",
        "number": 5641,
        "state": "closed",
        "title": "WT-5725 Remove the WT_CURSOR_BTREE.btree field.",
        "body": "@agorrod, would you please approve the overall change, and @ddanderson, would you please do the detailed review?\r\n\r\nThe potentially interesting changes:\r\n\r\n- `btree/bt_debug.c`, use `WT_WITH_BTREE`  in two more places\r\n- `cursor/cur_bulk.c`, create a per-bulk cursor close routine\r\n- `cursor/cur_file.c`, setting/clearing `WT_CURSOR_BTREE.dhandle` in different places`\r\n- `include/api.h`, don't pass a `WT_BTREE` handle to `CURSOR_UPDATE_API_CALL_BTREE`, which makes that macro different but clarifies the `WT_BTREE` handle isn't optional as it is in other places\r\n- `include/cursor.h`, remove `WT_CURSOR_BTREE.btree`, add the `CUR2BT` macro\r\n\r\nI also fixed up a few places in LSM and `dhandle.h` where we were using the `WT_CURSOR_BTREE.WT_BTREE.dhandle`, and it was simpler to just use `WT_CURSOR_BTREE.dhandle`.\r\n\r\nI think this is better, but we're still doing some fairly dirty stuff on handles. We should probably get rid of `WT_BTREE.dhandle` entirely, but that's for another day.\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 15:43 GMT",
        "updated_at": "Wednesday May 13, 2020 at 17:21 GMT",
        "closed_at": "Wednesday May 13, 2020 at 17:21 GMT",
        "merged_at": "Wednesday May 13, 2020 at 17:21 GMT"
    },
    {
        "key": "WT-6075",
        "number": 5640,
        "state": "closed",
        "title": "WT-6075 Disable lower isolation levels in wt2323_join_visibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 02:50 GMT",
        "updated_at": "Tuesday May 12, 2020 at 05:27 GMT",
        "closed_at": "Tuesday May 12, 2020 at 05:27 GMT",
        "merged_at": "Tuesday May 12, 2020 at 05:27 GMT"
    },
    {
        "key": "WT-6083",
        "number": 5639,
        "state": "closed",
        "title": "WT-6083 Enable checkpoint-test and fix __wt_txn_set_commit_timestamp failure",
        "body": "The Evergreen patch build link\r\n\r\nhttps://evergreen.mongodb.com/task/wiredtiger_ubuntu1804_checkpoint_test_patch_7812adc84fee863cb2b1f594938f18a28572aa2b_5eba2af2d6d80a69d4cb00d6_20_05_12_04_50_13\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 02:28 GMT",
        "updated_at": "Saturday May 16, 2020 at 01:14 GMT",
        "closed_at": "Saturday May 16, 2020 at 01:14 GMT",
        "merged_at": "Saturday May 16, 2020 at 01:14 GMT"
    },
    {
        "key": "WT-6169",
        "number": 5638,
        "state": "closed",
        "title": "WT-6169 Use helper functions to check time window's visibility",
        "body": "The scope of this PR has increased from just fixing the bug to adding new helper functions to standardize the way we check visibility for time window. I think this can help reduce the possibility of a similar bug biting us again. ",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 01:09 GMT",
        "updated_at": "Wednesday May 13, 2020 at 11:41 GMT",
        "closed_at": "Wednesday May 13, 2020 at 11:41 GMT",
        "merged_at": "Wednesday May 13, 2020 at 11:41 GMT"
    },
    {
        "key": "WT-6166",
        "number": 5637,
        "state": "closed",
        "title": "WT-6166 KEY/VALUE short cells have to handle copy cells",
        "body": "@quchenhao, d16afa2 is the interesting commit, 9204656 is just semantic sugar to simplify some function calls.",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2020 at 00:14 GMT",
        "updated_at": "Tuesday May 12, 2020 at 00:51 GMT",
        "closed_at": "Tuesday May 12, 2020 at 00:51 GMT",
        "merged_at": "Tuesday May 12, 2020 at 00:51 GMT"
    },
    {
        "key": "WT-6082",
        "number": 5636,
        "state": "closed",
        "title": "WT-6082 Add stage to reconciliation that simplifies time windows.",
        "body": "This is my first attempt at this change, testing isn't passing completely. If we attempt to save some effort and convert stop timestamps to WT_TS_NONE we fail tests that appear to restart wiredtiger more frequently however I haven't had a change to diagnose it yet. Additionally setting it to WT_TS_NONE doesn't actually save effort later down in cell.i. \r\n\r\nAs such I don't think its worth modifying any of our values when we've got stop timestamps or txn ids.\r\n\r\nI also need to do more work on the durable portion. It does fix the regression seen in WT-6082.",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2020 at 11:40 GMT",
        "updated_at": "Thursday May 14, 2020 at 02:27 GMT",
        "closed_at": "Thursday May 14, 2020 at 02:27 GMT",
        "merged_at": "Thursday May 14, 2020 at 02:27 GMT"
    },
    {
        "key": "WT-6088",
        "number": 5635,
        "state": "closed",
        "title": "WT-6088 Enable format-test in Evergreen",
        "body": "This PR is to enable `format-test` in Evergreen for row store only. We are disabling the column store and lsm testing in `smoke.sh` until the known issues are resolved. ",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2020 at 09:05 GMT",
        "updated_at": "Wednesday May 13, 2020 at 07:08 GMT",
        "closed_at": "Wednesday May 13, 2020 at 07:08 GMT",
        "merged_at": "Wednesday May 13, 2020 at 07:08 GMT"
    },
    {
        "key": "WT-6172",
        "number": 5634,
        "state": "closed",
        "title": "WT-6172 Fix silent failures of Evergreen test/format tasks",
        "body": "Introduce a new \"-e\" argument to the `format.sh` wrapper for environment variable setting, so that the setting could be put in front of the `setsid` command to avoid execution failures. \r\n\r\nAlso add the checking of the RUNDIR log file for the execution failure right after the `setsid` command, mark failure counter and force quit. ",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2020 at 08:52 GMT",
        "updated_at": "Wednesday May 13, 2020 at 04:00 GMT",
        "closed_at": "Wednesday May 13, 2020 at 04:00 GMT",
        "merged_at": "Wednesday May 13, 2020 at 04:00 GMT"
    },
    {
        "key": "WT-6065",
        "number": 5633,
        "state": "closed",
        "title": "WT-6065 Enable spin lock gcc test",
        "body": "The test is now passing:\r\n\r\nhttps://evergreen.mongodb.com/build/wiredtiger_ubuntu1804_patch_5b7d6ff3503cfa2e7c6ca858bb9955dc6f28936d_5eb8df407742ae0e1643829a_20_05_11_05_15_38",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2020 at 07:31 GMT",
        "updated_at": "Monday May 11, 2020 at 11:19 GMT",
        "closed_at": "Monday May 11, 2020 at 11:19 GMT",
        "merged_at": "Monday May 11, 2020 at 11:19 GMT"
    },
    {
        "key": "WT-6170",
        "number": 5632,
        "state": "closed",
        "title": "WT-6170 Retrieve the full time window of the value that is returned as part of search",
        "body": "Whenever a data store is replacced with a history store, retreive\r\nthe transaction id that is required to form the update.",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2020 at 06:36 GMT",
        "updated_at": "Tuesday May 19, 2020 at 01:45 GMT",
        "closed_at": "Tuesday May 19, 2020 at 01:45 GMT",
        "merged_at": "Tuesday May 19, 2020 at 01:45 GMT"
    },
    {
        "key": "WT-6063",
        "number": 5631,
        "state": "closed",
        "title": "WT-6063 Enable checkpoint-filetypes-test in Evergreen",
        "body": "This test appears to now be passing in Evergreen.",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2020 at 05:31 GMT",
        "updated_at": "Tuesday May 12, 2020 at 05:25 GMT",
        "closed_at": "Monday May 11, 2020 at 09:23 GMT",
        "merged_at": "Monday May 11, 2020 at 09:23 GMT"
    },
    {
        "key": "WT-5679",
        "number": 5630,
        "state": "closed",
        "title": "WT-5679 Set the oldest history store checkpoint timestamp as oldest timestamp during restart",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2020 at 02:28 GMT",
        "updated_at": "Tuesday Jun 30, 2020 at 23:04 GMT",
        "closed_at": "Friday May 15, 2020 at 03:57 GMT",
        "merged_at": "Friday May 15, 2020 at 03:57 GMT"
    },
    {
        "key": "WT-6162",
        "number": 5629,
        "state": "closed",
        "title": "WT-6162 format.sh script incorrectly counts failures",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 10, 2020 at 17:01 GMT",
        "updated_at": "Monday May 11, 2020 at 00:00 GMT",
        "closed_at": "Monday May 11, 2020 at 00:00 GMT",
        "merged_at": "Monday May 11, 2020 at 00:00 GMT"
    },
    {
        "key": "WT-6161",
        "number": 5628,
        "state": "closed",
        "title": "WT-6161 format can hang when WiredTiger internal checkpoints are configured",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 10, 2020 at 16:27 GMT",
        "updated_at": "Sunday May 10, 2020 at 18:40 GMT",
        "closed_at": "Sunday May 10, 2020 at 18:40 GMT",
        "merged_at": "Sunday May 10, 2020 at 18:40 GMT"
    },
    {
        "key": "WT-6160",
        "number": 5627,
        "state": "closed",
        "title": "WT-6160 format failure caused by stack overwrite",
        "body": "@sueloverso, the failure here was passing a `u_int` to the incremental backup cursor, it expects a `uint64_t`.\r\n\r\nThe path construction code had minor problems as well, so I reworked it for simplicity.",
        "base_ref": "develop",
        "created_at": "Saturday May 09, 2020 at 21:35 GMT",
        "updated_at": "Monday May 11, 2020 at 14:50 GMT",
        "closed_at": "Monday May 11, 2020 at 14:50 GMT",
        "merged_at": "Monday May 11, 2020 at 14:50 GMT"
    },
    {
        "key": "WT-6159",
        "number": 5626,
        "state": "closed",
        "title": "WT-6159 tag verbose messages to make them easier to distinguish",
        "body": "@agorrod, @sueloverso, I add this in every so often so I can figure out what verbose messages came from where. Maybe it's generally useful?\r\n\r\nVerbose messages get the flag added, so they look like this:\r\n```\r\nfile:wt.wt, WT_CURSOR.insert: [WT_VERB_BLOCK] file extend 512B @ 145408\r\nfile:wt.wt, WT_CURSOR.insert: [WT_VERB_BLOCK] file extend 512B @ 145920\r\nfile:wt.wt, WT_CURSOR.insert: [WT_VERB_BLOCK] file extend 9216B @ 146432\r\n```\r\n",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2020 at 16:57 GMT",
        "updated_at": "Monday May 11, 2020 at 14:53 GMT",
        "closed_at": "Monday May 11, 2020 at 14:53 GMT",
        "merged_at": "Monday May 11, 2020 at 14:53 GMT"
    },
    {
        "key": "WT-6174",
        "number": 5625,
        "state": "closed",
        "title": "WT-6174 fix dhandle->session_inuse counter leak in __evict_walk",
        "body": "In __evict_walk, the dhandle->session_inuse counter is increased and decreased to walk the tree but in case of errors, the code jumps over the code that decreases the counter and basically leaves the dhandle as in-use so it never gets deleted during sweeps.\r\n\r\nThis patch adds a fix to decrease the counter even in case of errors.",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2020 at 13:34 GMT",
        "updated_at": "Friday May 15, 2020 at 08:28 GMT",
        "closed_at": "Thursday May 14, 2020 at 23:24 GMT",
        "merged_at": "Thursday May 14, 2020 at 23:24 GMT"
    },
    {
        "key": "WT-6111",
        "number": 5624,
        "state": "closed",
        "title": "WT-6111 rework cell structures and unpacking",
        "body": "Alex, Chenhao, Sue: another run at the cell unpacking changes.\r\n\r\nThis should basically be the same as the last pull request, although as I had to re-do parts of the work from scratch, there will be some divergence.",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2020 at 12:24 GMT",
        "updated_at": "Monday May 11, 2020 at 14:11 GMT",
        "closed_at": "Monday May 11, 2020 at 14:10 GMT",
        "merged_at": "Monday May 11, 2020 at 14:10 GMT"
    },
    {
        "key": "WT-6080",
        "number": 5623,
        "state": "closed",
        "title": "WT-6080 Add stats for pages with validity window and prepared transactions",
        "body": "This PR is implementing a simpler approach for logging time window statistics: when there is even one value cell with timestamps or transactions on the page before reconciliation, log the page.  ",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2020 at 04:02 GMT",
        "updated_at": "Tuesday May 12, 2020 at 03:17 GMT",
        "closed_at": "Tuesday May 12, 2020 at 03:17 GMT",
        "merged_at": "Tuesday May 12, 2020 at 03:17 GMT"
    },
    {
        "key": "WT-6157",
        "number": 5622,
        "state": "closed",
        "title": "WT-6157 Disable table logging in workgen stress test while running pr\u2026",
        "body": "\u2026epare transactions.",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2020 at 03:22 GMT",
        "updated_at": "Friday May 08, 2020 at 23:09 GMT",
        "closed_at": "Friday May 08, 2020 at 23:09 GMT",
        "merged_at": "Friday May 08, 2020 at 23:09 GMT"
    },
    {
        "key": "WT-5864",
        "number": 5621,
        "state": "closed",
        "title": "WT-5864 Append globally visible tombstone with WT_TS_NONE to the update chain",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2020 at 01:07 GMT",
        "updated_at": "Monday May 11, 2020 at 23:37 GMT",
        "closed_at": "Monday May 11, 2020 at 23:37 GMT",
        "merged_at": "Monday May 11, 2020 at 23:37 GMT"
    },
    {
        "key": "WT-6152",
        "number": 5620,
        "state": "closed",
        "title": "WT-6152 Fix accessing checkpoint durable timestamp including older ve\u2026",
        "body": "\u2026rsion\r\n\r\nThe durable timestamps that are stored for checkpoint as part of the WT\r\nmetadata file are changed to unify the name across all the code base led\r\nto missed in handling the reading older format name also, as the older\r\nformat is used in older database files that are generated fails to load\r\nwith newer format name binary.",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2020 at 00:23 GMT",
        "updated_at": "Friday May 08, 2020 at 05:13 GMT",
        "closed_at": "Friday May 08, 2020 at 05:13 GMT",
        "merged_at": "Friday May 08, 2020 at 05:13 GMT"
    },
    {
        "key": "WT-6136",
        "number": 5619,
        "state": "closed",
        "title": "WT-6136 Record incremental extent lists before merging them with earlier",
        "body": "checkpoints.\r\nAdd reproducer test that reads all blocks returned to make sure they\r\nhave changes.",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 20:46 GMT",
        "updated_at": "Tuesday May 12, 2020 at 15:34 GMT",
        "closed_at": "Tuesday May 12, 2020 at 15:26 GMT",
        "merged_at": "Tuesday May 12, 2020 at 15:26 GMT"
    },
    {
        "key": "WT-6137",
        "number": 5618,
        "state": "closed",
        "title": "WT-6137 Fix calculation of bits versus bytes for incremental bitmap.",
        "body": "Please review this change carefully since I got it wrong the first time. It fixes a problem I saw in the metadata where we were over allocating the bitmap. I wanted to fix this first before the other tickets since I understood it well and maybe it affected the block-not-changed (it doesn't).\r\n\r\nI renamed the variables to be clear about what units we're dealing with and moved everything to be in bits until we get to the allocation part.",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 17:57 GMT",
        "updated_at": "Thursday May 07, 2020 at 20:15 GMT",
        "closed_at": "Thursday May 07, 2020 at 20:15 GMT",
        "merged_at": "Thursday May 07, 2020 at 20:15 GMT"
    },
    {
        "key": "WT-6156",
        "number": 5617,
        "state": "closed",
        "title": "WT-6156 format never selects \"backup.incremental=log\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 15:31 GMT",
        "updated_at": "Thursday May 07, 2020 at 16:16 GMT",
        "closed_at": "Thursday May 07, 2020 at 16:16 GMT",
        "merged_at": "Thursday May 07, 2020 at 16:16 GMT"
    },
    {
        "key": "WT-6141",
        "number": 5616,
        "state": "closed",
        "title": "WT-6141 Disable checkpoint deletion during backup",
        "body": "This is a temporary fix to disable checkpoint deletion during backup.\r\n\r\nIt leaves the code from WT-5242 in place, and just changes the condition for deciding\r\nwhen to delete a checkpoint so we always keep them during backup.\r\n\r\nThe change also disables/deletes test cases that no longer work with this change.",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 14:03 GMT",
        "updated_at": "Thursday May 07, 2020 at 21:06 GMT",
        "closed_at": "Thursday May 07, 2020 at 21:06 GMT",
        "merged_at": "Thursday May 07, 2020 at 21:06 GMT"
    },
    {
        "key": "WT-6128",
        "number": 5615,
        "state": "closed",
        "title": "WT-6128 Reduce the data size in test_checkpoint04 so it completes quickly",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 12:41 GMT",
        "updated_at": "Friday May 08, 2020 at 01:33 GMT",
        "closed_at": "Friday May 08, 2020 at 01:33 GMT",
        "merged_at": "Friday May 08, 2020 at 01:33 GMT"
    },
    {
        "key": "WT-6092",
        "number": 5614,
        "state": "closed",
        "title": "WT-6092 Use durable timestamp to find out global visibility",
        "body": "The durable timestamp represents whether the update is stable or not.\r\nUse the durable timestamp only to decide whether the update is globally visible\r\ninstead of commit timestamp. This change reverts part of the changes\r\ndone by ticket 5414.",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 08:21 GMT",
        "updated_at": "Monday May 11, 2020 at 10:04 GMT",
        "closed_at": "Monday May 11, 2020 at 10:04 GMT",
        "merged_at": "Monday May 11, 2020 at 10:04 GMT"
    },
    {
        "key": "WT-6142",
        "number": 5613,
        "state": "closed",
        "title": "WT-6142 Fix the assert with no more than one aborted update in chain",
        "body": "It is possible that there can be multiple aborted updates in the update\r\nchain when the prepared update is rolling back. So fix the assert to\r\nnot to expect an update that is aborted.",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 03:29 GMT",
        "updated_at": "Thursday May 07, 2020 at 07:03 GMT",
        "closed_at": "Thursday May 07, 2020 at 07:03 GMT",
        "merged_at": "Thursday May 07, 2020 at 07:03 GMT"
    },
    {
        "key": "WT-6144",
        "number": 5612,
        "state": "closed",
        "title": "WT-6144 format configures verify_metadata even when running on historic builds",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 01:00 GMT",
        "updated_at": "Thursday May 07, 2020 at 01:43 GMT",
        "closed_at": "Thursday May 07, 2020 at 01:43 GMT",
        "merged_at": "Thursday May 07, 2020 at 01:43 GMT"
    },
    {
        "key": "WT-5864",
        "number": 5611,
        "state": "closed",
        "title": "WT-5864 test_hs11 should flush dirty contents before verifying the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2020 at 00:56 GMT",
        "updated_at": "Thursday May 07, 2020 at 02:39 GMT",
        "closed_at": "Thursday May 07, 2020 at 02:38 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6093",
        "number": 5610,
        "state": "closed",
        "title": "WT-6093 __wt_rec_upd_select may not append the onpage value if the global txn structure is updated",
        "body": "The problem is the globally txn structure is updated concurrently and the tombstone becomes globally visible so the onpage value is not appended to the update chain.",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2020 at 23:19 GMT",
        "updated_at": "Thursday May 07, 2020 at 06:01 GMT",
        "closed_at": "Thursday May 07, 2020 at 06:01 GMT",
        "merged_at": "Thursday May 07, 2020 at 06:01 GMT"
    },
    {
        "key": "WT-6138",
        "number": 5609,
        "state": "closed",
        "title": "WT-6138 Turn off non-timestamp testing in schema_abort.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2020 at 18:29 GMT",
        "updated_at": "Wednesday May 06, 2020 at 19:19 GMT",
        "closed_at": "Wednesday May 06, 2020 at 19:19 GMT",
        "merged_at": "Wednesday May 06, 2020 at 19:19 GMT"
    },
    {
        "key": "WT-6131",
        "number": 5608,
        "state": "closed",
        "title": "WT-6131 Add a test for checkpoint truncation and update a comment",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2020 at 06:14 GMT",
        "updated_at": "Thursday May 07, 2020 at 10:03 GMT",
        "closed_at": "Thursday May 07, 2020 at 10:03 GMT",
        "merged_at": "Thursday May 07, 2020 at 10:03 GMT"
    },
    {
        "key": "WT-6130",
        "number": 5607,
        "state": "closed",
        "title": "WT-6130 disable test_random_abort for now.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2020 at 03:07 GMT",
        "updated_at": "Wednesday May 06, 2020 at 03:39 GMT",
        "closed_at": "Wednesday May 06, 2020 at 03:39 GMT",
        "merged_at": "Wednesday May 06, 2020 at 03:39 GMT"
    },
    {
        "key": "WT-5914",
        "number": 5606,
        "state": "closed",
        "title": "WT-5914 Only configure log-incremental backup if archiving is off in test/format (V4.2 backport)",
        "body": "Copying the entire format/config.c file from 4.4 to 4.2 instead of backporting parts of the format code.",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday May 06, 2020 at 01:03 GMT",
        "updated_at": "Thursday May 07, 2020 at 06:16 GMT",
        "closed_at": "Thursday May 07, 2020 at 06:15 GMT",
        "merged_at": "Thursday May 07, 2020 at 06:15 GMT"
    },
    {
        "key": "WT-5679",
        "number": 5605,
        "state": "closed",
        "title": "Revert WT-5679",
        "body": "Revert \"WT-5679 Set the oldest history store checkpoint timestamp as oldest timestamp during restart (#5543)\"\r\n\r\nThis reverts commit e72e93832104b216c8dff1680b67d61f422f00c8.",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2020 at 00:28 GMT",
        "updated_at": "Wednesday May 06, 2020 at 00:35 GMT",
        "closed_at": "Wednesday May 06, 2020 at 00:35 GMT",
        "merged_at": "Wednesday May 06, 2020 at 00:35 GMT"
    },
    {
        "key": "WT-5679",
        "number": 5604,
        "state": "closed",
        "title": "Revert \"Revert WT-5679\"",
        "body": "Reverts wiredtiger/wiredtiger#5603",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2020 at 23:59 GMT",
        "updated_at": "Tuesday May 05, 2020 at 23:59 GMT",
        "closed_at": "Tuesday May 05, 2020 at 23:59 GMT",
        "merged_at": "Tuesday May 05, 2020 at 23:59 GMT"
    },
    {
        "key": "WT-5679",
        "number": 5603,
        "state": "closed",
        "title": "Revert WT-5679",
        "body": "Revert \"WT-5679 Set the oldest history store checkpoint timestamp as oldest timestamp during restart (#5543)\"\r\n\r\nThis reverts commit e72e93832104b216c8dff1680b67d61f422f00c8.",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2020 at 23:43 GMT",
        "updated_at": "Wednesday May 06, 2020 at 00:04 GMT",
        "closed_at": "Tuesday May 05, 2020 at 23:53 GMT",
        "merged_at": "Tuesday May 05, 2020 at 23:53 GMT"
    },
    {
        "key": "WT-5697",
        "number": 5602,
        "state": "closed",
        "title": "WT-5697 Fix incremental backup with schema operations. (#5565) (v4.2 backport)",
        "body": "* WT-5697 Fix incremental backup with schema operations.\r\n\r\n* Whitespace\r\n\r\n* Only need to clear cursor caching around open call.\r\n\r\n* Remove old comment. Alphabetize.\r\n\r\n(cherry picked from commit 4a3bbfa97835c6dba98ae03aa1566a708a552bde)",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday May 05, 2020 at 22:22 GMT",
        "updated_at": "Wednesday May 06, 2020 at 14:00 GMT",
        "closed_at": "Wednesday May 06, 2020 at 14:00 GMT",
        "merged_at": "Wednesday May 06, 2020 at 14:00 GMT"
    },
    {
        "key": "WT-6097",
        "number": 5601,
        "state": "closed",
        "title": "WT-6097 test/suite runner: Add -b (batch) option, to run a single batch from the set of tests",
        "body": "Order the tests in a batch to prioritize the full breadth of individual tests.",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2020 at 18:13 GMT",
        "updated_at": "Thursday May 07, 2020 at 04:45 GMT",
        "closed_at": "Wednesday May 06, 2020 at 13:45 GMT",
        "merged_at": "Wednesday May 06, 2020 at 13:45 GMT"
    },
    {
        "key": "WT-6120",
        "number": 5600,
        "state": "closed",
        "title": "WT-6120 Remove use-after-free in __verify_history_store_id",
        "body": "This PR is to fix a use-after-free error picked up by Clang address sanitizer in our history store verification. I also noticed a few spots where we were unnecessarily using scratch buffers (the `WT_ITEM` only ever pointed into the cursor buffer so the owned memory was never used) so I removed them.",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2020 at 04:37 GMT",
        "updated_at": "Wednesday May 06, 2020 at 04:57 GMT",
        "closed_at": "Wednesday May 06, 2020 at 04:57 GMT",
        "merged_at": "Wednesday May 06, 2020 at 04:57 GMT"
    },
    {
        "key": "WT-5841",
        "number": 5599,
        "state": "closed",
        "title": "WT-5841 Set the data corruption flag if we find history store issues.",
        "body": "This will allow wiredtiger_open to return WT_TRY_SALVAGE.",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 20:55 GMT",
        "updated_at": "Tuesday May 05, 2020 at 13:47 GMT",
        "closed_at": "Tuesday May 05, 2020 at 13:47 GMT",
        "merged_at": "Tuesday May 05, 2020 at 13:47 GMT"
    },
    {
        "key": "WT-5677",
        "number": 5598,
        "state": "closed",
        "title": "WT-5677 test/format changes to add occasional delays after prepare.",
        "body": "This is so that more prepared updates are in memory.",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 19:52 GMT",
        "updated_at": "Tuesday May 05, 2020 at 02:44 GMT",
        "closed_at": "Tuesday May 05, 2020 at 02:44 GMT",
        "merged_at": "Tuesday May 05, 2020 at 02:44 GMT"
    },
    {
        "key": "WT-6071",
        "number": 5597,
        "state": "closed",
        "title": "WT-6071 Coverity : Change format specifier",
        "body": "`keyno` is an `uint32_t` so we should use `PRIu32` in the format string.",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 02:13 GMT",
        "updated_at": "Monday May 04, 2020 at 04:02 GMT",
        "closed_at": "Monday May 04, 2020 at 04:02 GMT",
        "merged_at": "Monday May 04, 2020 at 04:02 GMT"
    },
    {
        "key": "WT-6070",
        "number": 5596,
        "state": "closed",
        "title": "WT-6070 Coverity: Copy paste error",
        "body": "@keithbostic \r\nThis is the diff that was pasted in the ticket description. I don't understand the intention behind that original snippet or the fix associated with it. If you could explain, that'd be helpful.",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 02:05 GMT",
        "updated_at": "Monday May 04, 2020 at 03:23 GMT",
        "closed_at": "Monday May 04, 2020 at 03:23 GMT",
        "merged_at": "Monday May 04, 2020 at 03:23 GMT"
    },
    {
        "key": "WT-5928",
        "number": 5595,
        "state": "closed",
        "title": "WT-5928 Cleanup stale FIXMEs from durable history",
        "body": "This PR is to:\r\n- Remove stale FIXMEs.\r\n- Tag existing FIXMEs with a more relevant PM or WT ticket (a lot were tagged with the \"write newest\" project).\r\n- Tag existing FIXMEs with a new WT ticket.",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 01:45 GMT",
        "updated_at": "Tuesday May 05, 2020 at 07:44 GMT",
        "closed_at": "Tuesday May 05, 2020 at 07:44 GMT",
        "merged_at": "Tuesday May 05, 2020 at 07:44 GMT"
    },
    {
        "key": "WT-6111",
        "number": 5594,
        "state": "closed",
        "title": "WT-6111 review cell structures",
        "body": "Alex, this should give you an idea of where I think this branch is likely to end up.\r\n\r\nThe unpacked cell now comes in 3 flavors: `WT_CELL_UNPACK`, which is has both the `WT_TIME_WINDOW` and the `WT_TIME_AGGREGATE` structures, `WT_CELL_UNPACK_ADDR` which has only the `WT_TIME_AGGREGATE` structure, and `WT_CELL_UNPACK_VALUE` which has only the `WT_TIME_WINDOW` structure.\r\n\r\nIf you use the wrong time window fields you'll get either a compile error (if you use one of the limited versions of the unpacked cell, that is, `WT_CELL_UNPACK_ADDR` or `WT_CELL_UNPACK_VALUE`), and a core dump if you use the combined version of the unpacked cell, `WT_CELL_UNPACK`.\r\n\r\nThe changes to `cell.i` and `cell.h` are the interesting ones: I'd like a cleaner solution in `cell.h` but I don't really see one.\r\n\r\nI've only implemented the limited versions of the unpacked cell in `btree/bt_page.c`, but that should give you an idea of what we'd do in other places like reconciliation.\r\n\r\nIt would be great to get rid of the unlimited version of the unpacked cell (`WT_CELL_UNPACK`), entirely, but that would mean splitting up the verify and debug functions (among others), that handle both address and key/value cells in one function, and that's a hill I'm not prepared to climb.",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 01:18 GMT",
        "updated_at": "Wednesday May 06, 2020 at 17:09 GMT",
        "closed_at": "Wednesday May 06, 2020 at 15:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6110",
        "number": 5593,
        "state": "closed",
        "title": "WT-6110 Use cbt->iface in favor of a cast",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 00:29 GMT",
        "updated_at": "Monday May 04, 2020 at 01:06 GMT",
        "closed_at": "Monday May 04, 2020 at 01:06 GMT",
        "merged_at": "Monday May 04, 2020 at 01:06 GMT"
    },
    {
        "key": "WT-6109",
        "number": 5592,
        "state": "closed",
        "title": "WT-6109 Cleanup usage of (WT_SESSION_IMPL *)session->cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2020 at 00:18 GMT",
        "updated_at": "Monday May 04, 2020 at 01:04 GMT",
        "closed_at": "Monday May 04, 2020 at 01:04 GMT",
        "merged_at": "Monday May 04, 2020 at 01:04 GMT"
    },
    {
        "key": "WT-6032",
        "number": 5591,
        "state": "closed",
        "title": "WT-6032 turn on mongodb-4.4 branch upgrade/downgrade testing.",
        "body": "@lukech, based on your recent merge of `develop` into `mongodb-4.4`, we should be able to do local upgrade/downgrade testing against the `mongodb-4.4` branch.",
        "base_ref": "develop",
        "created_at": "Friday May 01, 2020 at 19:20 GMT",
        "updated_at": "Monday May 04, 2020 at 03:07 GMT",
        "closed_at": "Monday May 04, 2020 at 03:07 GMT",
        "merged_at": "Monday May 04, 2020 at 03:07 GMT"
    },
    {
        "key": "WT-5242",
        "number": 5590,
        "state": "closed",
        "title": "WT-5242 Minimize checkpoints pinned during backup",
        "body": "Allow WT to delete checkpoints taken after a hot backup starts. Checkpoints already have a timestamp then from the per-session monotonic clock. Instead of using a flag to indicate that a hot backup is happening, use the largest timestamp assigned prior to the start of hot backup. This lets us delete (most) future checkpoints by comparing checkpoint timestamps to the backup start time.\r\n\r\nAdded python tests and updated doc to reflect new behavior.\r\n\r\nAlso remove redundant search through a sorted array of checkpoints.",
        "base_ref": "develop",
        "created_at": "Friday May 01, 2020 at 17:42 GMT",
        "updated_at": "Friday May 01, 2020 at 18:26 GMT",
        "closed_at": "Friday May 01, 2020 at 18:26 GMT",
        "merged_at": "Friday May 01, 2020 at 18:26 GMT"
    },
    {
        "key": "WT-5242",
        "number": 5589,
        "state": "closed",
        "title": "Revert \"WT-5242 Minimize checkpoints pinned during backup\"",
        "body": "Reverts wiredtiger/wiredtiger#5559",
        "base_ref": "develop",
        "created_at": "Friday May 01, 2020 at 16:20 GMT",
        "updated_at": "Friday May 01, 2020 at 16:58 GMT",
        "closed_at": "Friday May 01, 2020 at 16:58 GMT",
        "merged_at": "Friday May 01, 2020 at 16:58 GMT"
    },
    {
        "key": "WT-6009",
        "number": 5588,
        "state": "closed",
        "title": "WT-6009 Add statistic for reconciling prepared values.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 01, 2020 at 15:39 GMT",
        "updated_at": "Monday May 04, 2020 at 13:45 GMT",
        "closed_at": "Monday May 04, 2020 at 13:45 GMT",
        "merged_at": "Monday May 04, 2020 at 13:45 GMT"
    },
    {
        "key": "WT-6095",
        "number": 5587,
        "state": "closed",
        "title": "WT-6095 verify on-disk page only for row store as part of rollback to\u2026",
        "body": "\u2026 stable\r\n\r\nrollback to stable doesn't support fully for columnar storage types,\r\nso avoid performing the on-disk page verification on columnar storage types also.",
        "base_ref": "develop",
        "created_at": "Friday May 01, 2020 at 03:32 GMT",
        "updated_at": "Friday May 01, 2020 at 06:45 GMT",
        "closed_at": "Friday May 01, 2020 at 06:45 GMT",
        "merged_at": "Friday May 01, 2020 at 06:45 GMT"
    },
    {
        "key": "WT-4414",
        "number": 5586,
        "state": "closed",
        "title": "WT-4414 Add configuration to allow flushing modified trees independent of checkpoints when logging is disabled",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 01, 2020 at 02:17 GMT",
        "updated_at": "Tuesday May 12, 2020 at 02:14 GMT",
        "closed_at": "Tuesday May 12, 2020 at 02:14 GMT",
        "merged_at": "Tuesday May 12, 2020 at 02:14 GMT"
    },
    {
        "key": "WT-5834",
        "number": 5585,
        "state": "closed",
        "title": "WT-5834 Clear memory if we extend the bitmap buffer. (#5409) (v4.2 backport)",
        "body": "* WT-5834 Clear memory if we extend the bitmap buffer.\r\n\r\n* Assert and comment that number of bytes must be multiple of 8.\r\n\r\n(cherry picked from commit 1648fdd3bc95c93c4f882f6205b5a98654885d81)",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday May 01, 2020 at 02:03 GMT",
        "updated_at": "Friday May 01, 2020 at 14:02 GMT",
        "closed_at": "Friday May 01, 2020 at 14:02 GMT",
        "merged_at": "Friday May 01, 2020 at 14:02 GMT"
    },
    {
        "key": "WT-5841",
        "number": 5584,
        "state": "closed",
        "title": "WT-5841 Indicate data corruption on history store verification. Verify hs table itself.",
        "body": "@keithbostic I realized while doing this ticket that there was no call to ever actually verify the history store table itself. The re-architecture in WT-5911 moved where the relationship verification calls were made, but did not add that. I added it here since I was modifying this code to return corrupt data on verification.\r\n\r\nThe sad part is that verifying HS requires eviction because it can be so large. It also requires that it is run before recovery. Secondly, the relationship call has to be separated from the table verify call because the relationship call must be done after recovery and rollback-to-stable.\r\n\r\n@luke-pearson this must wait for the changes for for WT-5716 where the hs is created before recovery. This change requires that. I think that PR is close to merging. Please review this with that in mind.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 30, 2020 at 18:57 GMT",
        "updated_at": "Monday Oct 26, 2020 at 18:42 GMT",
        "closed_at": "Monday May 04, 2020 at 20:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5801",
        "number": 5583,
        "state": "closed",
        "title": "WT-5801 DO NOT MERGE: this removes disk flushing for Windows.",
        "body": "I'm just running this to see now long the pull request test runs on Windows.  If it is hugely less, we might investigate a way to inject disabling of FlushFileBuffers during testing, like we disable fflush on Linux via eatmydata.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 30, 2020 at 14:02 GMT",
        "updated_at": "Thursday Apr 30, 2020 at 14:51 GMT",
        "closed_at": "Thursday Apr 30, 2020 at 14:51 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5240",
        "number": 5582,
        "state": "closed",
        "title": "WT-5240 Add block incremental support to test/format (#5384) (v4.2 backport)",
        "body": "* WT-5240 Add block incremental support to test/format\r\n\r\n* Fixes to format for block incremental backup support.\r\n\r\n* Make 'size' a size_t.\r\n\r\n* Casting for read.\r\n\r\n* Another attempt for Windows read type.\r\n\r\n* Review: Add comments, remove unused code, minor fixes.\r\n\r\n(cherry picked from commit fa027b010dc09b4cd75c93daabb96008f66cee7b)",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Apr 30, 2020 at 10:50 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:28 GMT",
        "closed_at": "Thursday Apr 30, 2020 at 10:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5839",
        "number": 5581,
        "state": "closed",
        "title": "WT-5839 Ignore non-globally visible tombstones for both data store and hs store in hs verification",
        "body": "I run a patch build on this. I don't see any validation error but rollback to stable seems to be failing. I'll try to understand that tomorrow. @kommiharibabu \r\nhttps://evergreen.mongodb.com/version/5eaa89dd1e2d172579697302",
        "base_ref": "develop",
        "created_at": "Thursday Apr 30, 2020 at 07:08 GMT",
        "updated_at": "Monday May 04, 2020 at 05:06 GMT",
        "closed_at": "Monday May 04, 2020 at 05:06 GMT",
        "merged_at": "Monday May 04, 2020 at 05:06 GMT"
    },
    {
        "key": "WT-5710",
        "number": 5580,
        "state": "closed",
        "title": "WT-5710 Review WT_PANIC usage.",
        "body": "Sue, Keith, Alex: since you folks have all thought hard about `WT_ERR/WT_RET` and friends recently, I've asked you to review this one.\r\n\r\nThe bug fix is that we need to ensure that when we panic the system, the underlying panic routines are called, that is, it's not sufficient to just return `WT_PANIC` out of a random function.\r\n\r\nI tried to clean things up and get the naming in sync. It's not great, but I think it's better.\r\n\r\nI didn't find a way to make it less likely the same problems will come back in the future, I couldn't come up with any ideas that didn't require hiding the `WT_PANIC` error return, and that got ugly fast. Let me know if you've got something better!",
        "base_ref": "develop",
        "created_at": "Thursday Apr 30, 2020 at 04:00 GMT",
        "updated_at": "Friday May 01, 2020 at 18:20 GMT",
        "closed_at": "Friday May 01, 2020 at 18:20 GMT",
        "merged_at": "Friday May 01, 2020 at 18:20 GMT"
    },
    {
        "key": "WT-5977",
        "number": 5579,
        "state": "closed",
        "title": "WT-5977 Removing session no reconcile flag from history store session flags",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 30, 2020 at 02:25 GMT",
        "updated_at": "Thursday Apr 30, 2020 at 05:00 GMT",
        "closed_at": "Thursday Apr 30, 2020 at 05:00 GMT",
        "merged_at": "Thursday Apr 30, 2020 at 05:00 GMT"
    },
    {
        "key": "WT-6068",
        "number": 5578,
        "state": "closed",
        "title": "WT-6068 Disable format test in make check",
        "body": "The previous change of enabling make check format test caused some fallout - the failure pattern is different this time (not WT-5839). Will re-disable this test to address the fallout, and create another ticket to re-enable it later (as part of PM-1852).",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 29, 2020 at 23:42 GMT",
        "updated_at": "Thursday Apr 30, 2020 at 03:27 GMT",
        "closed_at": "Thursday Apr 30, 2020 at 03:27 GMT",
        "merged_at": "Thursday Apr 30, 2020 at 03:27 GMT"
    },
    {
        "key": "WT-6087",
        "number": 5577,
        "state": "closed",
        "title": "WT-6087 Add a C2S(cursor) macro to simplify translation from a cursor to a session.",
        "body": "Alex, Michael: I almost added this once before, so this time I made the change for your consideration.\r\n\r\nIt steps on name-space we don't control, but we pass cursors around more now than we used to, and I think this might simplify that process.\r\n\r\nIf you disagree, feel free to discard this change without further discussion.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 29, 2020 at 17:00 GMT",
        "updated_at": "Friday May 01, 2020 at 19:01 GMT",
        "closed_at": "Friday May 01, 2020 at 19:01 GMT",
        "merged_at": "Friday May 01, 2020 at 19:01 GMT"
    },
    {
        "key": "WT-6086",
        "number": 5576,
        "state": "closed",
        "title": "WT-6086 Create structures and helpers for time windows.",
        "body": "Including both time windows and aggregated time windows.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 29, 2020 at 12:44 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:25 GMT",
        "closed_at": "Tuesday May 05, 2020 at 21:33 GMT",
        "merged_at": "Tuesday May 05, 2020 at 21:33 GMT"
    },
    {
        "key": "WT-6069",
        "number": 5575,
        "state": "closed",
        "title": "WT-6069 Remove WT_UPDATE_RESTORED_FROM_DISK flag",
        "body": "Since #5556 went in, we don't have a need for the `WT_UPDATE_RESTORED_FROM_DISK` flag since we don't have this concept of allocating updates that don't belong to an update list.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 29, 2020 at 06:58 GMT",
        "updated_at": "Sunday May 03, 2020 at 23:18 GMT",
        "closed_at": "Sunday May 03, 2020 at 23:18 GMT",
        "merged_at": "Sunday May 03, 2020 at 23:18 GMT"
    },
    {
        "key": "WT-5722",
        "number": 5574,
        "state": "closed",
        "title": "WT-5722 Add standard name checks to incremental backup identifiers. (#5351) (v4.2 backport)",
        "body": "Cherry-picked from c61fcdc6656d048339b797290514a604f6007f55",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Apr 29, 2020 at 01:43 GMT",
        "updated_at": "Wednesday Apr 29, 2020 at 23:19 GMT",
        "closed_at": "Wednesday Apr 29, 2020 at 23:19 GMT",
        "merged_at": "Wednesday Apr 29, 2020 at 23:19 GMT"
    },
    {
        "key": "WT-6081",
        "number": 5573,
        "state": "closed",
        "title": "WT-6081 Switch wtperf table config defaults closer to MongoDB's config",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 29, 2020 at 01:32 GMT",
        "updated_at": "Wednesday Apr 29, 2020 at 23:11 GMT",
        "closed_at": "Wednesday Apr 29, 2020 at 03:50 GMT",
        "merged_at": "Wednesday Apr 29, 2020 at 03:50 GMT"
    },
    {
        "key": "WT-5673",
        "number": 5572,
        "state": "closed",
        "title": "WT-5673 Verify durable timestamp that are part of cell",
        "body": "Verify the added durable timestamps that are part of the both\r\nvalue and address cells.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 29, 2020 at 00:56 GMT",
        "updated_at": "Friday May 01, 2020 at 05:04 GMT",
        "closed_at": "Friday May 01, 2020 at 05:04 GMT",
        "merged_at": "Friday May 01, 2020 at 05:04 GMT"
    },
    {
        "key": "WT-5722",
        "number": 5571,
        "state": "closed",
        "title": "WT-5722 Add standard name checks to incremental backup identifiers. (#5351) (v4.2 backport)",
        "body": "* WT-5722 Add standard name checks to incremental backup identifiers.\r\n\r\n* Restore original functionality. Skip WiredTiger checking if we don't\r\nhave a colon.\r\n\r\n* Run s_all.\r\n\r\n(cherry picked from commit c61fcdc6656d048339b797290514a604f6007f55)",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Apr 28, 2020 at 12:24 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:29 GMT",
        "closed_at": "Wednesday Apr 29, 2020 at 02:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6078",
        "number": 5570,
        "state": "closed",
        "title": "WT-6078 Temporarily disable hs verification",
        "body": "@lukech I did a patch build with this change. Is this enough to unblock the drop with this for now?\r\n\r\nhttps://evergreen.mongodb.com/version/5ea7d5df30661527e943a2fe",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 28, 2020 at 06:54 GMT",
        "updated_at": "Wednesday Apr 29, 2020 at 05:48 GMT",
        "closed_at": "Wednesday Apr 29, 2020 at 05:12 GMT",
        "merged_at": "Wednesday Apr 29, 2020 at 05:12 GMT"
    },
    {
        "key": "WT-5839",
        "number": 5569,
        "state": "closed",
        "title": "WT-5839 Ignore non-globally visible tombstones for hs verify",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 28, 2020 at 04:08 GMT",
        "updated_at": "Thursday Apr 30, 2020 at 07:20 GMT",
        "closed_at": "Thursday Apr 30, 2020 at 07:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-6068",
        "number": 5568,
        "state": "closed",
        "title": "WT-6068 Re-enable tests temporarily disabled during durable history development",
        "body": "Re-enable Evergreen tasks that were previously disabled during DH development, and verified passing in a recent patch build. \r\n\r\nFor those failed tasks in the same patch build, we have separate tickets created (under PM-1852) to address the effort of fixing and re-enabling them. ",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 28, 2020 at 00:55 GMT",
        "updated_at": "Wednesday Apr 29, 2020 at 05:32 GMT",
        "closed_at": "Wednesday Apr 29, 2020 at 05:32 GMT",
        "merged_at": "Wednesday Apr 29, 2020 at 05:32 GMT"
    },
    {
        "key": "WT-5719",
        "number": 5567,
        "state": "closed",
        "title": "WT-5719 Add quotes to the metadata string. Modify example to use special characters. (#5347) (v4.2 backport) ",
        "body": "* WT-5719 Add quotes to the metadata string. Modify example to use special\r\ncharacters.\r\n\r\n* Use quotes in example. Use special characters in python test.\r\n\r\n* Fix typo.\r\n\r\n(cherry picked from commit 9bf859e311aa75bc2cba4bad041c6e3f6df27ce5)",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Apr 28, 2020 at 00:52 GMT",
        "updated_at": "Tuesday Apr 28, 2020 at 14:03 GMT",
        "closed_at": "Tuesday Apr 28, 2020 at 14:03 GMT",
        "merged_at": "Tuesday Apr 28, 2020 at 14:03 GMT"
    },
    {
        "key": "WT-6073",
        "number": 5566,
        "state": "closed",
        "title": "WT-6073 Don't append the tombstone to the update chain if it is already there",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 28, 2020 at 00:49 GMT",
        "updated_at": "Wednesday Apr 29, 2020 at 01:14 GMT",
        "closed_at": "Wednesday Apr 29, 2020 at 01:14 GMT",
        "merged_at": "Wednesday Apr 29, 2020 at 01:14 GMT"
    },
    {
        "key": "WT-5697",
        "number": 5565,
        "state": "closed",
        "title": "WT-5697 Fix incremental backup with schema operations.",
        "body": "This fixes schema operations and incremental backup. There were two problems. The first is that the cursor needs to call through its close function and not just call `wt_cursor_close` in order to release the dhandle lock it acquires during `curfile_open`. Second is that when a file was created, if an incremental backup occurred before any checkpoint/updates to the file, we weren't returning any information to the user to copy that file. We need to return a whole file copy.",
        "base_ref": "develop",
        "created_at": "Monday Apr 27, 2020 at 20:15 GMT",
        "updated_at": "Tuesday Apr 28, 2020 at 15:41 GMT",
        "closed_at": "Tuesday Apr 28, 2020 at 15:41 GMT",
        "merged_at": "Tuesday Apr 28, 2020 at 15:41 GMT"
    },
    {
        "key": "WT-6001",
        "number": 5564,
        "state": "closed",
        "title": "WT-6001 improve compression efficiency",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 27, 2020 at 17:30 GMT",
        "updated_at": "Monday Apr 27, 2020 at 21:21 GMT",
        "closed_at": "Monday Apr 27, 2020 at 21:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5215",
        "number": 5563,
        "state": "closed",
        "title": "WT-5215 Add basic randomized test for doing incremental backups. (#5297) (v4.2 backport)",
        "body": "Cherry-picked from f188ed87859121bd1fb9d2031e9ee9670356f118",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Apr 27, 2020 at 12:12 GMT",
        "updated_at": "Wednesday Apr 29, 2020 at 23:19 GMT",
        "closed_at": "Wednesday Apr 29, 2020 at 23:19 GMT",
        "merged_at": "Wednesday Apr 29, 2020 at 23:19 GMT"
    },
    {
        "key": "WT-5623",
        "number": 5562,
        "state": "closed",
        "title": "WT-5623 Add flag to the session that allows us to skip visibility che\u2026",
        "body": "\u2026cks while looking up reverse modifies\r\n\r\nThis is a draft PR, I'd like to confirm that this was what everyone expected, I think there's still some cleanup to be done in __wt_txn_read which is also due to change as a result of a change that @tetsuo-cpp is making.",
        "base_ref": "develop",
        "created_at": "Monday Apr 27, 2020 at 07:04 GMT",
        "updated_at": "Tuesday Apr 28, 2020 at 07:24 GMT",
        "closed_at": "Tuesday Apr 28, 2020 at 07:24 GMT",
        "merged_at": "Tuesday Apr 28, 2020 at 07:24 GMT"
    },
    {
        "key": "WT-5695",
        "number": 5561,
        "state": "closed",
        "title": "WT-5695 Fixed incremental backup example to use O_CREAT in the backup range case. (#5330) (v4.2 backport)",
        "body": "\u2026 range case. (#5330)\r\n\r\n(cherry picked from commit 9849337bf9e206cc6e50fa84c6805f13f91bc59b)",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Apr 27, 2020 at 01:46 GMT",
        "updated_at": "Tuesday Apr 28, 2020 at 00:22 GMT",
        "closed_at": "Tuesday Apr 28, 2020 at 00:22 GMT",
        "merged_at": "Tuesday Apr 28, 2020 at 00:22 GMT"
    },
    {
        "key": "WT-4954",
        "number": 5560,
        "state": "closed",
        "title": "WT-4954 Document the duplicate log backup cursor. (#5322) (v4.2 backport)",
        "body": "* WT-4954 Document the duplicate log backup cursor.\r\n\r\n* Clarify cursor name.\r\n\r\n* Add more information about log files returned.\r\n\r\n(cherry picked from commit f3db4f868600a9a46a183f4b4362ef53d767012b)",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Apr 27, 2020 at 01:30 GMT",
        "updated_at": "Tuesday Apr 28, 2020 at 00:20 GMT",
        "closed_at": "Tuesday Apr 28, 2020 at 00:20 GMT",
        "merged_at": "Tuesday Apr 28, 2020 at 00:20 GMT"
    },
    {
        "key": "WT-5242",
        "number": 5559,
        "state": "closed",
        "title": "WT-5242 Minimize checkpoints pinned during backup",
        "body": "Allow WT to delete checkpoints taken *after* a hot backup starts.  Checkpoints already have a timestamp then from the per-session monotonic clock. Instead of using a flag to indicate that a hot backup is happening, use the largest timestamp assigned prior to the start of hot backup. This lets us delete (most) future checkpoints by comparing checkpoint timestamps to the backup start time. \r\n\r\nAdd csuite test to verify that we are not longer keeping lots of checkpoints after a backup cursor is opened.\r\n\r\nAlso remove redundant search through a sorted array of checkpoints.",
        "base_ref": "develop",
        "created_at": "Sunday Apr 26, 2020 at 15:49 GMT",
        "updated_at": "Friday May 01, 2020 at 18:26 GMT",
        "closed_at": "Friday May 01, 2020 at 15:58 GMT",
        "merged_at": "Friday May 01, 2020 at 15:58 GMT"
    },
    {
        "key": "WT-6053",
        "number": 5558,
        "state": "closed",
        "title": "WT-6053 fixed-width column-store macro can step past the end of allocated memory",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2020 at 20:55 GMT",
        "updated_at": "Friday Apr 24, 2020 at 21:33 GMT",
        "closed_at": "Friday Apr 24, 2020 at 21:33 GMT",
        "merged_at": "Friday Apr 24, 2020 at 21:33 GMT"
    },
    {
        "key": "WT-6050",
        "number": 5557,
        "state": "closed",
        "title": "WT-6050 Close the metadata cursor after bulk loading.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2020 at 14:19 GMT",
        "updated_at": "Friday Apr 24, 2020 at 16:32 GMT",
        "closed_at": "Friday Apr 24, 2020 at 16:32 GMT",
        "merged_at": "Friday Apr 24, 2020 at 16:32 GMT"
    },
    {
        "key": "WT-5470",
        "number": 5556,
        "state": "closed",
        "title": "WT-5470 Reduce copies and allocations in read path",
        "body": "This PR is to refactor `__wt_txn_read` and its surrounding functions to avoid unnecessary allocations and copying.\r\n\r\nThis change will be easier to review if I explain the model we were using before compared with now. Sorry for the \"in the weeds\" description of this but unfortunately, this change is all low-level details.\r\n\r\n**Before**\r\nThe interface returns pointers to `WT_UPDATE` via an output parameter of type `WT_UPDATE **`. The pointer either gets set to an update in the update list or an update gets allocated with the `WT_UPDATE_RESTORED_FROM_DISK` flag set. We signal absence of value by allocating a tombstone. As part of modify and history store processing, we do separate allocations to create the buffer that the update itself is pointing at (this is separate from the allocation of the actual update itself). This update's contents are then copied over to the cursor buffer if it was allocated separately.\r\n\r\n**After**\r\nI've created a new type called `WT_UPDATE_VALUE` which belongs to the `WT_CURSOR_BTREE`. The value contains a buffer as well as some information about the update that we need in the upper layers. The value's buffer will either be pointing at an update's data from the update list or it will be pointing at its own memory (reconstructed modifies, history store values, onpage value, etc). We signal an absence of value by not assigning the `type` and leaving it as its invalid zero'd state `WT_UPDATE_TYPE_INVALID`. As part of modify and history store processing, we still potentially do an allocation to extend the update value's buffer, however, we reuse the buffer's memory so this becomes less likely. Lastly, the view already has a buffer so if it owns memory, it simply lets the cursor point its value buffer at it instead of `memcpy`ing the contents across from an artificially created update structure.\r\n\r\nI've added WT-6069 to track the work to remove the `WT_UPDATE_RESTORED_FROM_DISK` flag. That's not as straight forward as it sounds as we'll have to adjust a lot of existing error handling so I think it deserves its own PR.",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2020 at 07:52 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:25 GMT",
        "closed_at": "Friday May 01, 2020 at 03:25 GMT",
        "merged_at": "Friday May 01, 2020 at 03:25 GMT"
    },
    {
        "key": "WT-6051",
        "number": 5555,
        "state": "closed",
        "title": "WT-6051 Fix reconstructing full value from modifies for string format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2020 at 06:51 GMT",
        "updated_at": "Tuesday May 05, 2020 at 00:26 GMT",
        "closed_at": "Tuesday May 05, 2020 at 00:26 GMT",
        "merged_at": "Tuesday May 05, 2020 at 00:26 GMT"
    },
    {
        "key": "WT-6049",
        "number": 5554,
        "state": "closed",
        "title": "WT-6049 Fix eviction evicting uncommitted changes",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2020 at 01:44 GMT",
        "updated_at": "Friday Apr 24, 2020 at 06:07 GMT",
        "closed_at": "Friday Apr 24, 2020 at 06:07 GMT",
        "merged_at": "Friday Apr 24, 2020 at 06:07 GMT"
    },
    {
        "key": "WT-5699",
        "number": 5553,
        "state": "closed",
        "title": "WT-5699 Refactor incremental cursor next code. (#5331)",
        "body": "(cherry picked from commit 907640ededf071b9effd369cb5350d758c155a6c)",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Apr 24, 2020 at 00:05 GMT",
        "updated_at": "Monday Apr 27, 2020 at 01:32 GMT",
        "closed_at": "Monday Apr 27, 2020 at 01:32 GMT",
        "merged_at": "Monday Apr 27, 2020 at 01:32 GMT"
    },
    {
        "key": "WT-6044",
        "number": 5552,
        "state": "closed",
        "title": "WT-6044 Remove unused variable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2020 at 00:05 GMT",
        "updated_at": "Friday Apr 24, 2020 at 00:42 GMT",
        "closed_at": "Friday Apr 24, 2020 at 00:42 GMT",
        "merged_at": "Friday Apr 24, 2020 at 00:42 GMT"
    },
    {
        "key": "WT-6047",
        "number": 5551,
        "state": "closed",
        "title": "WT-6047 Make a macro memory safer",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2020 at 23:39 GMT",
        "updated_at": "Friday Apr 24, 2020 at 04:54 GMT",
        "closed_at": "Friday Apr 24, 2020 at 04:54 GMT",
        "merged_at": "Friday Apr 24, 2020 at 04:54 GMT"
    },
    {
        "key": "WT-5728",
        "number": 5550,
        "state": "closed",
        "title": "WT-5728 Fix unused variable in production build",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2020 at 00:56 GMT",
        "updated_at": "Thursday Apr 23, 2020 at 02:56 GMT",
        "closed_at": "Thursday Apr 23, 2020 at 02:56 GMT",
        "merged_at": "Thursday Apr 23, 2020 at 02:56 GMT"
    },
    {
        "key": "WT-5614",
        "number": 5549,
        "state": "closed",
        "title": "WT-5614 Remove redundant null check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2020 at 00:41 GMT",
        "updated_at": "Thursday Apr 23, 2020 at 01:51 GMT",
        "closed_at": "Thursday Apr 23, 2020 at 01:51 GMT",
        "merged_at": "Thursday Apr 23, 2020 at 01:51 GMT"
    },
    {
        "key": "WT-5544",
        "number": 5548,
        "state": "closed",
        "title": "WT-5544 Cache stuck during salvage",
        "body": "@agorrod, our solution in WT-5437 isn't sufficient, the eviction of the constructed root page can itself be slow enough to trigger the cache stuck configuration.\r\n\r\nYou and I talked about decrementing the constructed root page's memory footprint and never restoring it when working on WT-5437, and we agreed we preferred restoring the memory footprint information. However, I don't see any alternative at this point, given we can't possibly wait and restore the memory footprint value after eviction completes.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2020 at 00:05 GMT",
        "updated_at": "Thursday Apr 23, 2020 at 15:36 GMT",
        "closed_at": "Thursday Apr 23, 2020 at 15:36 GMT",
        "merged_at": "Thursday Apr 23, 2020 at 15:36 GMT"
    },
    {
        "key": "WT-6045",
        "number": 5547,
        "state": "closed",
        "title": "WT-6045 Minor cleanup for test_random_abort",
        "body": "@sueloverso Sorry for merging the PR without waiting your review. I address your comment in this ticket.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2020 at 22:57 GMT",
        "updated_at": "Friday Apr 24, 2020 at 13:22 GMT",
        "closed_at": "Friday Apr 24, 2020 at 13:22 GMT",
        "merged_at": "Friday Apr 24, 2020 at 13:22 GMT"
    },
    {
        "key": "WT-5246",
        "number": 5546,
        "state": "closed",
        "title": "WT-5246 First pass at incremental backup documentation (#5299) v4.2 backport",
        "body": "* WT-5246 First pass at incremental backup documentation\r\n\r\n* Clean up block incremental backup documentation and examples.\r\n\r\n* Minor spelling notes.\r\n\r\n* Minor wordsmithing from review.\r\n\r\n(cherry picked from commit b0d099eabfc1a351490a86059d7ee23893c45031)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Apr 22, 2020 at 11:03 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 23:50 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 23:46 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 23:46 GMT"
    },
    {
        "key": "WT-5212",
        "number": 5545,
        "state": "closed",
        "title": "WT-5212 Incremental backup data validation test (#5304) v4.2 backport",
        "body": "* Added incremental backup data validation python test suite\r\n\r\n* Addressed review comments\r\n\r\n(cherry picked from commit b4ff0ee630e29398d08164f7f76ad3cbc2c2d7ff)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Apr 22, 2020 at 10:54 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 23:50 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 23:48 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 23:48 GMT"
    },
    {
        "key": "WT-5214",
        "number": 5544,
        "state": "closed",
        "title": "WT-5214 Add more incremental error cases (#5289) (v4.2 backport)",
        "body": "Cherry picked from 96084abca789e41b95e0329829d1f3be842418c5",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Apr 22, 2020 at 10:49 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 23:49 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 23:48 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 23:48 GMT"
    },
    {
        "key": "WT-5679",
        "number": 5543,
        "state": "closed",
        "title": "WT-5679 Set the oldest history store checkpoint timestamp as oldest timestamp during restart",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2020 at 09:00 GMT",
        "updated_at": "Wednesday May 06, 2020 at 00:42 GMT",
        "closed_at": "Tuesday May 05, 2020 at 00:52 GMT",
        "merged_at": "Tuesday May 05, 2020 at 00:52 GMT"
    },
    {
        "key": "WT-5912",
        "number": 5542,
        "state": "closed",
        "title": "WT-5912 Change page deletion assert condition in __split_insert() ",
        "body": "@agorrod, @keithbostic\r\n\r\nPlease go through comments on WT-5912 to understand the context. It makes sense to skip splitting the pages that have been marked to be deleted but I might be wrong. ",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2020 at 04:54 GMT",
        "updated_at": "Friday Apr 24, 2020 at 04:45 GMT",
        "closed_at": "Friday Apr 24, 2020 at 04:45 GMT",
        "merged_at": "Friday Apr 24, 2020 at 04:45 GMT"
    },
    {
        "key": "WT-5716",
        "number": 5541,
        "state": "closed",
        "title": "WT-5716 Handle history store recovery scenarios including salvage",
        "body": "I don't have enough context for this ticket. I implemented this following Michael's suggestion posted by Luke. It looks like it is working.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2020 at 04:47 GMT",
        "updated_at": "Tuesday May 05, 2020 at 22:41 GMT",
        "closed_at": "Tuesday May 05, 2020 at 22:41 GMT",
        "merged_at": "Tuesday May 05, 2020 at 22:41 GMT"
    },
    {
        "key": "WT-5624",
        "number": 5540,
        "state": "closed",
        "title": "WT-5624 Fix test_backup12.py to use range incremental backup. (#5280) (v4.2 backport)",
        "body": "* WT-5624 Fix test_backup12.py to use range incremental backup.\r\n\r\n* Set granularity small and k/v larger to get more range.\r\n\r\n* Set writing open flag for bytes.\r\n\r\n(cherry picked from commit bc866d0263da51e8bcb64d1004e1d7bc47c451f1)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Apr 22, 2020 at 02:38 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 23:49 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 23:49 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 23:49 GMT"
    },
    {
        "key": "WT-5589",
        "number": 5539,
        "state": "closed",
        "title": "WT-5589 Fix verification of force_stop configuration setting. (#5258) (v4.2 backport)",
        "body": "(cherry picked from commit cd5e0047a41a98e5699fcc0d817aa6bfe0daf281)",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Apr 22, 2020 at 02:21 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 23:49 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 23:49 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 23:49 GMT"
    },
    {
        "key": "WT-6033",
        "number": 5538,
        "state": "closed",
        "title": "WT-6033 Clean up unused unittest imports",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2020 at 01:35 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 02:46 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 02:46 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 02:46 GMT"
    },
    {
        "key": "WT-5573",
        "number": 5537,
        "state": "closed",
        "title": "WT-5573 Re-enable unit test test_util01.test_dump_process_timestamp_old.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2020 at 00:31 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 01:44 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 01:44 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 01:44 GMT"
    },
    {
        "key": "WT-5764",
        "number": 5536,
        "state": "closed",
        "title": "WT-5764 Reenable test_compact02",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2020 at 23:31 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 00:26 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 00:26 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 00:26 GMT"
    },
    {
        "key": "WT-6031",
        "number": 5535,
        "state": "closed",
        "title": "WT-6031 WT_PAGE_MODIFY.last_stable_timestamp is no longer used.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2020 at 21:34 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 22:50 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 22:50 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 22:50 GMT"
    },
    {
        "key": "WT-5260",
        "number": 5534,
        "state": "closed",
        "title": "WT-5260 Restore assert that trees being discarded are not marked dirty",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2020 at 16:34 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 22:51 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 22:51 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 22:51 GMT"
    },
    {
        "key": "WT-5984",
        "number": 5533,
        "state": "closed",
        "title": "WT-5984 writing uncommitted prepared updates to the data store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2020 at 06:44 GMT",
        "updated_at": "Wednesday May 06, 2020 at 01:38 GMT",
        "closed_at": "Wednesday May 06, 2020 at 01:38 GMT",
        "merged_at": "Wednesday May 06, 2020 at 01:38 GMT"
    },
    {
        "key": "WT-5790",
        "number": 5532,
        "state": "closed",
        "title": "WT-5790 Disable test_wt2246_col_append",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2020 at 04:46 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 13:49 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 08:01 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 08:01 GMT"
    },
    {
        "key": "WT-5661",
        "number": 5531,
        "state": "closed",
        "title": "WT-5661 WiredTiger utilities should be self documenting",
        "body": "Fix up a few problems encountered along the way.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2020 at 03:52 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 14:45 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 14:45 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 14:45 GMT"
    },
    {
        "key": "WT-5954",
        "number": 5530,
        "state": "closed",
        "title": "WT-5954 Turn off column store test and lower isolation levels in test_random_abort",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2020 at 01:42 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 14:08 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 02:46 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 02:46 GMT"
    },
    {
        "key": "WT-5749",
        "number": 5529,
        "state": "closed",
        "title": "WT-5749 Only pass a non-NULL WT_ITEM value when allocating a WT_UPDATE with associated data",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2020 at 22:06 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 00:32 GMT",
        "closed_at": "Wednesday Apr 22, 2020 at 00:32 GMT",
        "merged_at": "Wednesday Apr 22, 2020 at 00:32 GMT"
    },
    {
        "key": "WT-5794",
        "number": 5528,
        "state": "closed",
        "title": "WT-5794 Remove skew_newest option from reconciliation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2020 at 19:41 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 00:27 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 00:27 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 00:27 GMT"
    },
    {
        "key": "WT-5919",
        "number": 5527,
        "state": "closed",
        "title": "WT-5919 Disallow logging archival testing with log-based incremental backup",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2020 at 18:54 GMT",
        "updated_at": "Monday Apr 20, 2020 at 20:20 GMT",
        "closed_at": "Monday Apr 20, 2020 at 20:20 GMT",
        "merged_at": "Monday Apr 20, 2020 at 20:20 GMT"
    },
    {
        "key": "WT-3726",
        "number": 5526,
        "state": "closed",
        "title": "WT-3726 Add documentation specifying build pre-requisites",
        "body": "Added INSTALL file (and script to update/generate it) describing pre-requisites, as well as\r\nconfigure, build, and installation instructions.  These instructions are simply pointers to the\r\nappropriate pages in the existing WT reference guide.\r\n\r\nThe reference guide had almost all of the required information already.  The only change there is an update to the \"Building... on POSIX\" page to include SWIG requirement for building python and/or Java support.  The corresponding \"Building... on Windows\" page already had this information.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2020 at 17:58 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 13:19 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 13:19 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 13:19 GMT"
    },
    {
        "key": "WT-5791",
        "number": 5525,
        "state": "closed",
        "title": "WT-5791 Prepare checkpoint can finish in 0msec and reset prepare min stat",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2020 at 05:01 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 00:01 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 00:01 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 00:01 GMT"
    },
    {
        "key": "WT-6026",
        "number": 5524,
        "state": "closed",
        "title": "WT-6026 Fix s_all breakage on format.h",
        "body": "We got unlucky with the timing of WT-4701 and WT-6016. A comment beginning with a parenthesis was added in WT-4701 and was missed in the mass formatting introduced by WT-6016.\r\n\r\nNeed to fix this now as it's going to break everyone's builds.",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2020 at 03:17 GMT",
        "updated_at": "Monday Apr 20, 2020 at 03:48 GMT",
        "closed_at": "Monday Apr 20, 2020 at 03:48 GMT",
        "merged_at": "Monday Apr 20, 2020 at 03:48 GMT"
    },
    {
        "key": "WT-5833",
        "number": 5523,
        "state": "closed",
        "title": "WT-5833 overflow key/value item caching is not working",
        "body": "I think this is close, but I'm concerned there is something about HS caching of overflow items I still don't understand, specifically, other paths in `__wt_rec_upd_select()` where we won't cache a deleted overflow item, or if there is any additional work that's needed for overflow keys.\r\n\r\n@bvpvamsikrishna, @agorrod, I need a reviewer for overflow changes, can you please assign someone?",
        "base_ref": "develop",
        "created_at": "Sunday Apr 19, 2020 at 20:43 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 00:29 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 00:29 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 00:29 GMT"
    },
    {
        "key": "WT-5676",
        "number": 5522,
        "state": "closed",
        "title": "WT-5676 prepare support add workgen stress tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Apr 19, 2020 at 05:56 GMT",
        "updated_at": "Saturday Apr 25, 2020 at 14:41 GMT",
        "closed_at": "Saturday Apr 25, 2020 at 14:41 GMT",
        "merged_at": "Saturday Apr 25, 2020 at 14:41 GMT"
    },
    {
        "key": "WT-6020",
        "number": 5521,
        "state": "closed",
        "title": "WT-6020 __rec_append_orig_value() cleanup",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 17, 2020 at 23:45 GMT",
        "updated_at": "Saturday Apr 18, 2020 at 00:50 GMT",
        "closed_at": "Saturday Apr 18, 2020 at 00:50 GMT",
        "merged_at": "Saturday Apr 18, 2020 at 00:50 GMT"
    },
    {
        "key": "WT-6018",
        "number": 5520,
        "state": "closed",
        "title": "WT-6018 WiredTiger shouldn't checkpoint if rollback-to-stable fails.",
        "body": "Hari, staring at the rollback-to-stable code, it seems to me like we could lose data if rollback-to-stable fails and then we checkpoint. In other words, it seems like:\r\n```\r\nrollback-to-stable -- fails\r\nrollback-to-stable -- fails\r\nrollback-to-stable -- succeeds\r\ncheckpoint\r\n```\r\nshould be safe and work correctly, but I don't think that:\r\n```\r\nrollback-to-stable -- fails\r\ncheckpoint\r\nrollback-to-stable -- fails\r\ncheckpoint\r\nrollback-to-stable -- succeeds\r\ncheckpoint\r\n```\r\nwill work, I think we can lose stuff from the pages because of the checkpoint that would mean a subsequent rollback-to-stable wouldn't work correctly.\r\n\r\nI don't understand this stuff very well, so please just discard this PR if I'm misunderstanding how rollback-to-stable is supposed to behave.",
        "base_ref": "wt-6017-rollback-to-stable-flag",
        "created_at": "Friday Apr 17, 2020 at 16:17 GMT",
        "updated_at": "Sunday Apr 19, 2020 at 15:57 GMT",
        "closed_at": "Sunday Apr 19, 2020 at 15:57 GMT",
        "merged_at": "Sunday Apr 19, 2020 at 15:57 GMT"
    },
    {
        "key": "WT-6017",
        "number": 5519,
        "state": "closed",
        "title": "WT-6017 WT_SESSION_IGNORE_HS_TOMBSTONE flag has multiple meanings",
        "body": "Alex, I removed the next-to-last use of the WT_SESSION_ROLLBACK_TO_STABLE macro in WT-5946, so I thought I'd try and clean up the final use.\r\n\r\nMy concern is that the macro is fragile because any operation that's changed to set the WT_SESSION_IGNORE_HS_TOMBSTONE flag would lead to the block manager treating the operation\r\nas if it were rollback-to-stable.",
        "base_ref": "wt-5946-eviction-deadlock",
        "created_at": "Friday Apr 17, 2020 at 16:03 GMT",
        "updated_at": "Monday Apr 20, 2020 at 01:26 GMT",
        "closed_at": "Monday Apr 20, 2020 at 01:26 GMT",
        "merged_at": "Monday Apr 20, 2020 at 01:26 GMT"
    },
    {
        "key": "WT-6016",
        "number": 5518,
        "state": "closed",
        "title": "WT-6016 Fill source code comments where lines start with parentheticals.",
        "body": "@tetsuo-cpp, if you don't want to go in this direction, feel free to discard without further discussion.\r\n\r\n9da351b and 8bd537a are the real changes, then e869d09 is the re-format run.",
        "base_ref": "develop",
        "created_at": "Friday Apr 17, 2020 at 15:35 GMT",
        "updated_at": "Sunday Apr 19, 2020 at 23:17 GMT",
        "closed_at": "Sunday Apr 19, 2020 at 23:17 GMT",
        "merged_at": "Sunday Apr 19, 2020 at 23:17 GMT"
    },
    {
        "key": "WT-5940",
        "number": 5517,
        "state": "closed",
        "title": "WT-5940 Migrate to Clang Format 10",
        "body": "Clang Format 10 has a new `IndentGotoLabels` option which deprecates the need for one of our post-processing steps. I've updated the `.clang-format` file to use the new options and have removed our custom `s_goto.py` script.\r\n\r\n- [x] Upload Clang Format 10 binaries to S3 and edit `s_clang-format`.\r\n- [x] Rebase in a way that will make backporting easy. \r\n- [x] Address WT-5936.",
        "base_ref": "develop",
        "created_at": "Friday Apr 17, 2020 at 06:32 GMT",
        "updated_at": "Saturday Aug 15, 2020 at 01:45 GMT",
        "closed_at": "Saturday Aug 15, 2020 at 01:45 GMT",
        "merged_at": "Saturday Aug 15, 2020 at 01:45 GMT"
    },
    {
        "key": "WT-4701",
        "number": 5516,
        "state": "closed",
        "title": "WT-4701 Switch test/format to use WiredTiger locking primitives",
        "body": "This change replaces calls to pthread reader-write locks with an abstract lock that can be\r\nimplemented with either the pthread locks or with WT's faster locks.  The lock type can be\r\nspecified (or selected at random) via a new config parameter (`wiredtiger.fast_mutex`).\r\n\r\nWT's locks require a `WT_SESSION`.  There are a few changes that were required to ensure that we (mostly) have a one when we use a lock:\r\n\r\n- Locks are initialized and torn down each time we call `operations()` instead of just once in `main()`. \r\n- The timestamp thread opens its own session just to have a one when it uses the timestamp lock.\r\n- There are two cases where we might access a lock outside of `operations()` --- during failure handling and during bulk load. In those cases we now check whether the locks are initialized and if they aren't we don't use them.  This is safe because if the locks aren't initialized we are single-threaded.\r\n\r\nI've run a number of format tests with the new code and both locking options. It seems to work fine. I've seen a few failures, but they seem to be covered by existing tickets (mostly [WT-5839](https://jira.mongodb.org/browse/WT-5839))\r\n\r\nQuestions for reviewers (essentially about our \"house style\"):\r\n\r\n1. I considered a couple ways of building the lock abstraction.  Let me know if something else would be a better fit for WT coding practices.\r\n2. Would it be better to move the lock abstraction to separate source files?",
        "base_ref": "develop",
        "created_at": "Friday Apr 17, 2020 at 00:07 GMT",
        "updated_at": "Friday Apr 17, 2020 at 16:12 GMT",
        "closed_at": "Friday Apr 17, 2020 at 16:12 GMT",
        "merged_at": "Friday Apr 17, 2020 at 16:12 GMT"
    },
    {
        "key": "WT-5968",
        "number": 5515,
        "state": "closed",
        "title": "WT-5968 Allocate the WT_TXN structure when activating the WT_SESSION ",
        "body": "@tetsuo-cpp, as anticipated, your changes in WT-5766 make this a much simpler change. (It was easier to re-create the branch than to bring the old branch forward, so it's a new PR.)",
        "base_ref": "develop",
        "created_at": "Thursday Apr 16, 2020 at 21:01 GMT",
        "updated_at": "Friday Apr 17, 2020 at 13:40 GMT",
        "closed_at": "Friday Apr 17, 2020 at 13:40 GMT",
        "merged_at": "Friday Apr 17, 2020 at 13:40 GMT"
    },
    {
        "key": "WT-6010",
        "number": 5514,
        "state": "closed",
        "title": "WT-6010 Workgen changes - Add session config at Thread level.",
        "body": "Looks like some Operation flow in workgen.cxx calls cursor operations without calling begin_transaction().\r\n\r\nUpdated workgen.cxx to call any cursor operation only after begin_transaction() (_in_transaction = true).",
        "base_ref": "develop",
        "created_at": "Thursday Apr 16, 2020 at 11:21 GMT",
        "updated_at": "Wednesday Apr 22, 2020 at 02:30 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 23:54 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 23:54 GMT"
    },
    {
        "key": "WT-5989",
        "number": 5513,
        "state": "closed",
        "title": "WT-5989 Support arguments in workgen (v4.2 backport)",
        "body": "Relatively clean cherry-pick of c8116016de0f93931f5275ec65de3c9418d3c0a8. One of the workgen runners didn't exist in `mongodb-4.2` so I discarded those changes.",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Apr 15, 2020 at 04:25 GMT",
        "updated_at": "Wednesday Apr 15, 2020 at 23:01 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 23:01 GMT",
        "merged_at": "Wednesday Apr 15, 2020 at 23:01 GMT"
    },
    {
        "key": "WT-5883",
        "number": 5512,
        "state": "closed",
        "title": "WT-5883 add upgrade/downgrade testing to WiredTiger standalone tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 15, 2020 at 01:25 GMT",
        "updated_at": "Tuesday Apr 21, 2020 at 21:57 GMT",
        "closed_at": "Tuesday Apr 21, 2020 at 21:57 GMT",
        "merged_at": "Tuesday Apr 21, 2020 at 21:57 GMT"
    },
    {
        "key": "WT-6008",
        "number": 5511,
        "state": "closed",
        "title": "WT-6008 Turn off format stress testing for column-store.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 15, 2020 at 00:43 GMT",
        "updated_at": "Wednesday Apr 15, 2020 at 01:29 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 01:29 GMT",
        "merged_at": "Wednesday Apr 15, 2020 at 01:29 GMT"
    },
    {
        "key": "WT-6007",
        "number": 5510,
        "state": "closed",
        "title": "WT-6007 Fix an assert for fixed length column store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 15, 2020 at 00:11 GMT",
        "updated_at": "Wednesday Apr 15, 2020 at 01:17 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 01:17 GMT",
        "merged_at": "Wednesday Apr 15, 2020 at 01:17 GMT"
    },
    {
        "key": "WT-5946",
        "number": 5509,
        "state": "closed",
        "title": "WT-5946 eviction server handles can deadlock when opening HS cursors",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 14, 2020 at 22:31 GMT",
        "updated_at": "Monday Apr 20, 2020 at 01:28 GMT",
        "closed_at": "Monday Apr 20, 2020 at 01:28 GMT",
        "merged_at": "Monday Apr 20, 2020 at 01:28 GMT"
    },
    {
        "key": "WT-5675",
        "number": 5508,
        "state": "closed",
        "title": "WT-5675 prepare support workgen changes",
        "body": "Tweaked operation threads configuration, added settings to find the execution time and latency to the script. ",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 14, 2020 at 03:09 GMT",
        "updated_at": "Wednesday Apr 15, 2020 at 00:25 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 00:25 GMT",
        "merged_at": "Wednesday Apr 15, 2020 at 00:25 GMT"
    },
    {
        "key": "WT-5677",
        "number": 5507,
        "state": "closed",
        "title": "WT-5677 Prepare support with durable history: add test/format stress tests",
        "body": "@ddanderson, here are changes that I think get you most of the way to where you're heading, lightly tested.\r\n\r\nThe one thing I specifically have not tested is that making the thread operations structures long-lived actually allows reads to work across worker thread restart, I'm not sure if reads are all failing, or whatever. I figured that would be something you'd have to check anyway, so I just left it alone.\r\n\r\nIf you like this approach but want changes, let me know if I can help, or please feel free to simply discard this work without further discussion if you want to go in a different direction.",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2020 at 23:11 GMT",
        "updated_at": "Monday May 04, 2020 at 19:57 GMT",
        "closed_at": "Monday May 04, 2020 at 19:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5825",
        "number": 5506,
        "state": "closed",
        "title": "WT-5825 Timeout failure in checkpoint-stress-test",
        "body": "This test fails with TEST TIMED OUT error because of the performance degradation after 'pm-1521-durable-history' branch merge to develop. \r\n\r\nSo, closing this ticket by reducing the number of test runs and wait for the resolution of performance degradation ticket [WT-5929](https://jira.mongodb.org/browse/WT-5929).\r\n\r\nSuccessful evergreen patch builds with 8 binaries. \r\nhttps://evergreen.mongodb.com/task/wiredtiger_ubuntu1804_stress_tests_checkpoint_stress_test_patch_ddc71be625083937af2e6858f25e6bcc16f9885d_5e927384850e615c287a474c_20_04_12_01_49_17\r\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2020 at 22:35 GMT",
        "updated_at": "Tuesday Apr 14, 2020 at 04:56 GMT",
        "closed_at": "Tuesday Apr 14, 2020 at 04:56 GMT",
        "merged_at": "Tuesday Apr 14, 2020 at 04:56 GMT"
    },
    {
        "key": "WT-6003",
        "number": 5505,
        "state": "closed",
        "title": "WT-6003 Remove duplicate open_cursor call.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2020 at 21:30 GMT",
        "updated_at": "Tuesday Apr 14, 2020 at 13:22 GMT",
        "closed_at": "Tuesday Apr 14, 2020 at 13:22 GMT",
        "merged_at": "Tuesday Apr 14, 2020 at 13:22 GMT"
    },
    {
        "key": "WT-5986",
        "number": 5504,
        "state": "closed",
        "title": "WT-5986 Create scripts for running multiversion testing.",
        "body": "Includes changes to workgen to allow command line arguments, with --home, --keep, --verbose.",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2020 at 20:04 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:30 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 04:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5999",
        "number": 5503,
        "state": "closed",
        "title": "WT-5999 update format so it's possible for it to restart on an existing database",
        "body": "Import test/format with restart functionality, from the develop branch, into 4.2.",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Apr 13, 2020 at 15:57 GMT",
        "updated_at": "Monday Apr 13, 2020 at 16:36 GMT",
        "closed_at": "Monday Apr 13, 2020 at 16:36 GMT",
        "merged_at": "Monday Apr 13, 2020 at 16:36 GMT"
    },
    {
        "key": "WT-5982",
        "number": 5502,
        "state": "closed",
        "title": "WT-5982 Remove redundant fields used earlier for HS inserts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2020 at 05:46 GMT",
        "updated_at": "Tuesday Apr 14, 2020 at 00:43 GMT",
        "closed_at": "Tuesday Apr 14, 2020 at 00:43 GMT",
        "merged_at": "Tuesday Apr 14, 2020 at 00:43 GMT"
    },
    {
        "key": "WT-5999",
        "number": 5501,
        "state": "closed",
        "title": "WT-5999 update format so it's possible for it to restart on an existing database",
        "body": "@sueloverso, this is a set of changes to allow format to restart on an existing database directory.",
        "base_ref": "develop",
        "created_at": "Friday Apr 10, 2020 at 02:11 GMT",
        "updated_at": "Monday Apr 13, 2020 at 16:36 GMT",
        "closed_at": "Monday Apr 13, 2020 at 16:36 GMT",
        "merged_at": "Monday Apr 13, 2020 at 16:36 GMT"
    },
    {
        "key": "WT-5911",
        "number": 5500,
        "state": "closed",
        "title": "WT-5911 Skip table assert timestamp checks during verify.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2020 at 19:39 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 19:56 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 19:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5911",
        "number": 5499,
        "state": "closed",
        "title": "WT-5911 Remove unsafe calls to verify HS from session->verify.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2020 at 19:37 GMT",
        "updated_at": "Thursday Apr 23, 2020 at 20:48 GMT",
        "closed_at": "Thursday Apr 23, 2020 at 20:48 GMT",
        "merged_at": "Thursday Apr 23, 2020 at 20:48 GMT"
    },
    {
        "key": "WT-5997",
        "number": 5498,
        "state": "closed",
        "title": "WT-5997 mongodb-4.4 branch not ready for release compatibility testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2020 at 16:55 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 16:56 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 16:56 GMT",
        "merged_at": "Thursday Apr 09, 2020 at 16:56 GMT"
    },
    {
        "key": "WT-5988",
        "number": 5497,
        "state": "closed",
        "title": "WT-5988 Do not write log records as part of recovery rollback to stable operation",
        "body": "As the log server didn't get started until end of recovery, any log\r\nrecords that are written during recovery can block. To avoid it, ensure\r\nthat all log records written during recovery are unbuffered to let them\r\nwrite directly.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2020 at 04:49 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 06:34 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 06:34 GMT",
        "merged_at": "Thursday Apr 09, 2020 at 06:34 GMT"
    },
    {
        "key": "WT-5978",
        "number": 5496,
        "state": "closed",
        "title": "WT-5978 Fix restoring clean update chain if we have unstable prepared updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2020 at 02:43 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 05:42 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 05:42 GMT",
        "merged_at": "Thursday Apr 09, 2020 at 05:42 GMT"
    },
    {
        "key": "WT-5994",
        "number": 5495,
        "state": "closed",
        "title": "WT-5994 WiredTiger does not currently support relaxed isolation levels, turn off format testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2020 at 19:29 GMT",
        "updated_at": "Wednesday Apr 08, 2020 at 23:44 GMT",
        "closed_at": "Wednesday Apr 08, 2020 at 23:44 GMT",
        "merged_at": "Wednesday Apr 08, 2020 at 23:44 GMT"
    },
    {
        "key": "WT-5993",
        "number": 5494,
        "state": "closed",
        "title": "WT-5993 restore disk page header version",
        "body": "@agorrod, as you know, we updated the on-disk page header to include a version number in the 4.2 release. The version number was removed in the 4.4 release, and I'm not sure if that change was deliberate or not?\r\n\r\nWe don't strictly need this change because (as far as I know), we never wrote non-zero versions into customer databases, and we do not yet use the page header version in the 4.4 release (the cell code uses the fact that the \"interesting\" timestamps are never set to detect 4.4 created tombstones).\r\n\r\nHowever, this change was never backported into 4.2, so it's writing a \"version\" that happens to be 0 and so matches the zero'd out bytes on the disk the 4.4 release expects.\r\n\r\nIf the change to remove the page-header version was deliberate, this PR can be almost entirely discarded (we should still remove the `page_version_ts` field from the `WT_CONNECTION_IMPL` structure), and we might want to consider backporting the removal into 4.2 for clarity.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2020 at 16:03 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 00:23 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 00:23 GMT",
        "merged_at": "Thursday Apr 09, 2020 at 00:23 GMT"
    },
    {
        "key": "WT-5986",
        "number": 5493,
        "state": "closed",
        "title": "WT-5986 Create script for emulating multiversion tests",
        "body": "This PR is currently pointing at the branch behind #5492 and is using those changes (as well as a custom `v4.2` branch which has that diff backported to it).\r\n\r\nThis is just a starting point but it might help you understand the reasoning behind #5463 \r\n\r\nCC: @agorrod ",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2020 at 08:19 GMT",
        "updated_at": "Monday Apr 20, 2020 at 03:14 GMT",
        "closed_at": "Monday Apr 20, 2020 at 03:14 GMT",
        "merged_at": "Monday Apr 20, 2020 at 03:14 GMT"
    },
    {
        "key": "WT-5989",
        "number": 5492,
        "state": "closed",
        "title": "WT-5989 Support arguments in workgen",
        "body": "This is part of my work to add multiversion testing to WiredTiger. My strategy is to run `workgen` workloads and alternate between v4.4 and v4.2. To allow this, I need some way of not destroying the existing home directory when beginning a workload since I want to keep the same home directory and startup different versions of WiredTiger on top of it.\r\n\r\nRight now, the removal of `WT_TEST` happens unconditionally at import time so it isn't even wrapped in a function. I've added an argument mechanism to `workgen` workloads so that we can provide generic arguments to all workloads and each workload can customize their own arguments that make sense on a per workload basis and use them in their workload function.\r\n\r\nI've gone for the most under-engineered approach possible so it's literally a single helper that is being exposed from the `runner` module. If you have better ideas of how this should look, please let me know.\r\n\r\nCC: @agorrod ",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2020 at 06:40 GMT",
        "updated_at": "Monday Apr 20, 2020 at 01:18 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 03:35 GMT",
        "merged_at": "Wednesday Apr 15, 2020 at 03:35 GMT"
    },
    {
        "key": "WT-5987",
        "number": 5491,
        "state": "closed",
        "title": "WT-5987 turn off history store verification in the WT_SESSION.verify method.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2020 at 01:53 GMT",
        "updated_at": "Wednesday Apr 08, 2020 at 03:17 GMT",
        "closed_at": "Wednesday Apr 08, 2020 at 03:16 GMT",
        "merged_at": "Wednesday Apr 08, 2020 at 03:16 GMT"
    },
    {
        "key": "WT-5966",
        "number": 5490,
        "state": "closed",
        "title": "WT-5966 4.4 downgrade can result in 4.2 core dumps if cells are ignored",
        "body": "@agorrod, only lightly tested, I'm working on the testing framework next.",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Apr 07, 2020 at 23:22 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 00:17 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 00:17 GMT",
        "merged_at": "Thursday Apr 09, 2020 at 00:17 GMT"
    },
    {
        "key": "WT-5985",
        "number": 5489,
        "state": "closed",
        "title": "WT-5985 WiredTiger does not currently support relaxed isolation levels, turn off format testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 07, 2020 at 22:57 GMT",
        "updated_at": "Wednesday Apr 08, 2020 at 01:05 GMT",
        "closed_at": "Wednesday Apr 08, 2020 at 01:05 GMT",
        "merged_at": "Wednesday Apr 08, 2020 at 01:05 GMT"
    },
    {
        "key": "WT-5983",
        "number": 5488,
        "state": "closed",
        "title": "WT-5983 remove diagnostic tests left over from WT-5043",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 07, 2020 at 16:51 GMT",
        "updated_at": "Tuesday Apr 07, 2020 at 18:01 GMT",
        "closed_at": "Tuesday Apr 07, 2020 at 18:01 GMT",
        "merged_at": "Tuesday Apr 07, 2020 at 18:01 GMT"
    },
    {
        "key": "WT-5978",
        "number": 5487,
        "state": "closed",
        "title": "WT-5978 Fix transaction rollback race with eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 07, 2020 at 10:38 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 02:21 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 02:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5765",
        "number": 5486,
        "state": "closed",
        "title": "WT-5765 Add error return macro that skips codes but doesn't clear them",
        "body": "Including @agorrod and @keithbostic as reviewers since they both had in interest in seeing what this change would look like.\r\n\r\nHere's what a new error macro would look like, for review and comment.\r\n\r\nI've introduced `WT_ERR_NOTFOUND_KEEP()`.  It behaves the same as `WT_ERR_NOTFOUND_OK()`, except it doesn't clear (i.e., it keeps) the value of `ret`.\r\n\r\nI found a total of 17 places to apply the new macro. \r\n\r\nI'm not crazy about the name.  If we choose to go forward with this change, I would propose changing the naming:\r\n\r\n1. Change the existing `WT_ERR_NOTFOUND_OK()` to `WT_ERR_NOTFOUND_CLEAR()` to indicate that it clears the value of `ret` if it is `WT_NOTFOUND`.  \r\n2. Call this new macro `WT_ERR_NOTFOUND_OK()` because it matches the behavior of `WT_RET_NOTFOUND_OK()` \u2014 they both leave `ret` unchanged, allowing subsequent code to handle `WT_NOTFOUND` if desired.\r\n\r\nI didn't include that change here to avoid cluttering the initial PR with all of the renaming changes.  \r\n\r\nIf we keep this, I'll make the similar changes for the handful of cases where we can use a similar macro for `EBUSY`.",
        "base_ref": "develop",
        "created_at": "Monday Apr 06, 2020 at 17:38 GMT",
        "updated_at": "Tuesday Apr 14, 2020 at 23:03 GMT",
        "closed_at": "Tuesday Apr 14, 2020 at 23:03 GMT",
        "merged_at": "Tuesday Apr 14, 2020 at 23:03 GMT"
    },
    {
        "key": "WT-5766",
        "number": 5485,
        "state": "closed",
        "title": "WT-5766 Separate out internal and shared transaction data",
        "body": "As part of reading a history store modify, we move our transaction's read timestamp forward to make intermediate modifies and the eventual base update visible. During this process, the oldest timestamp can be moved forward and be placed ahead of the original read timestamp.\r\n\r\nWhen we attempt to move the read timestamp back, we hit an assertion. And in release mode, we probably have visibility issues.\r\n\r\nTo fix this, I'm introducing a `WT_TXN::pinned_read_timestamp` which is used to determine how far we can move the oldest. So all the logic where we iterate the read queue to check the minimum read timestamp will be using `pinned_read_timestamp`. Any actual visibility checks in the active transaction's thread will be using the `read_timestamp` which is the member that we'll be mutating in our history store logic.\r\n\r\nThis is just a first cut to understand what this change will look like. I still need to work on getting a repro before merging this.",
        "base_ref": "develop",
        "created_at": "Monday Apr 06, 2020 at 08:20 GMT",
        "updated_at": "Wednesday Apr 15, 2020 at 23:46 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 23:46 GMT",
        "merged_at": "Wednesday Apr 15, 2020 at 23:46 GMT"
    },
    {
        "key": "WT-5941",
        "number": 5484,
        "state": "closed",
        "title": "WT-5941 Overview documentation for eviction",
        "body": "I'm no expert of everything in eviction and I'm only documenting the things I currently understand. Also this document is only an overview of how eviction generally works and only gives details to an extent to help understanding the general picture. Feel free to ping me if you think I missed any important content or detail.",
        "base_ref": "develop",
        "created_at": "Monday Apr 06, 2020 at 06:33 GMT",
        "updated_at": "Thursday Apr 09, 2020 at 01:32 GMT",
        "closed_at": "Thursday Apr 09, 2020 at 01:32 GMT",
        "merged_at": "Thursday Apr 09, 2020 at 01:32 GMT"
    },
    {
        "key": "WT-5979",
        "number": 5483,
        "state": "closed",
        "title": "WT-5979 Add Evergreen release compatibility test for forward compatibility",
        "body": "@tetsuo-cpp, @agorrod, here are a set of changes that allow you to run format to create a database and then you can run the 4.2 wt command to verify it, so it's easier to do local testing.\r\n\r\nI've updated the evergreen test, but if you want to run this locally, use \"./t -B\" to create the database in the develop branch, so it's backward compatible with 4.2, and of course you need a 4.2 branch with at  least WT-5894 applied to verify that 4.2 can read the develop database cell format.",
        "base_ref": "develop",
        "created_at": "Sunday Apr 05, 2020 at 00:05 GMT",
        "updated_at": "Tuesday Apr 07, 2020 at 18:12 GMT",
        "closed_at": "Tuesday Apr 07, 2020 at 18:12 GMT",
        "merged_at": "Tuesday Apr 07, 2020 at 18:12 GMT"
    },
    {
        "key": "WT-5934",
        "number": 5482,
        "state": "closed",
        "title": "WT-5934 Stop validating timestamps read from disk in 4.2",
        "body": "@agorrod, @tetsuo-cpp, this is the set of changes that I needed to get current develop branch row-store databases to read in a mongodb-4.2 branch. Basically,  it's a cherry-pick of WT-5894's changes to the cell code, and then removing validation of address and checkpoint durable timestamps. (I was able to get those tests to pass, but it required sufficient changes that I thought it was more destructive than helpful.)\r\n\r\nI haven't run this against the failing Evergreen tests.\r\n\r\nAnyway, it's an alternative approach to #5478. ",
        "base_ref": "mongodb-4.2",
        "created_at": "Saturday Apr 04, 2020 at 22:05 GMT",
        "updated_at": "Tuesday Apr 07, 2020 at 18:16 GMT",
        "closed_at": "Tuesday Apr 07, 2020 at 18:16 GMT",
        "merged_at": "Tuesday Apr 07, 2020 at 18:16 GMT"
    },
    {
        "key": "WT-5968",
        "number": 5481,
        "state": "closed",
        "title": "WT-5968 Allocate the WT_TXN structure when activating the WT_SESSION",
        "body": "@agorrod, I was futzing with WT-5766 this morning, and realized I was close to this change.\r\n\r\nIn summary, we currently allocate a chunk of the `WT_TXN` structure when activating a `WT_SESSION`, the `WT_TXN.snapshot` field. Given the `WT_TXN` structure is itself relatively large (224B) and MongoDB allocates a large number of `WT_SESSION` structures (33K), we can save 7MB+ by allocating the entire `WT_TXN` structure on demand. Additionally, this reduces the size of the `WT_SESSION_IMPL` structure to 1K, likely a better size for allocation and alignment.\r\n\r\nIt's all semantic sugar except for calling `__wt_txn_clear_read_timestamp_queues()` to remove the transaction structure from the timestamp  queues when we're discarding transaction resources (that is, from `__wt_txn_release_resources()`), instead of when clearing the `WT_SESSION_IMPL` structure (from `__session_clear()`). That change actually feels like a bug fix to me.\r\n\r\nAnyway, I'm not in love with this change and I'm not going to fight for it. If you like it that's great, if you don't, or don't want the change now, just discard it without further discussion.",
        "base_ref": "develop",
        "created_at": "Friday Apr 03, 2020 at 21:31 GMT",
        "updated_at": "Thursday Apr 16, 2020 at 21:02 GMT",
        "closed_at": "Thursday Apr 16, 2020 at 21:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5967",
        "number": 5480,
        "state": "closed",
        "title": "WT-5967 Remove named snapshot support",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 03, 2020 at 17:58 GMT",
        "updated_at": "Friday Apr 03, 2020 at 19:48 GMT",
        "closed_at": "Friday Apr 03, 2020 at 19:48 GMT",
        "merged_at": "Friday Apr 03, 2020 at 19:48 GMT"
    },
    {
        "key": "WT-5948",
        "number": 5479,
        "state": "closed",
        "title": "WT-5948 Search shouldn't ignore globally visible tombstones",
        "body": "As part of rollback to stable operations, any updates that are needs\r\nto be removed, rollback to stable adds globally visible updates to\r\nboth data and history store. Search is not ignoring these updates\r\nfor the data store, but whereas these are getting ignored for history\r\nstore when session is requested to ignore the tombstones of the\r\nhistory store, but globally visible tombstone updates shouldn't be\r\nignored for hs irrespective of the session flags.",
        "base_ref": "develop",
        "created_at": "Friday Apr 03, 2020 at 08:31 GMT",
        "updated_at": "Monday Apr 06, 2020 at 05:57 GMT",
        "closed_at": "Monday Apr 06, 2020 at 05:57 GMT",
        "merged_at": "Monday Apr 06, 2020 at 05:57 GMT"
    },
    {
        "key": "WT-5934",
        "number": 5478,
        "state": "closed",
        "title": " WT-5934 First step in removing time window parsing from 4.2",
        "body": "I've taken a stab at removing time window setting from the 4.2 code.\r\nIt's out of the cell code here, we also need to remove it from the address unpacking code.",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Apr 03, 2020 at 06:29 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:30 GMT",
        "closed_at": "Monday Apr 06, 2020 at 05:23 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5965",
        "number": 5477,
        "state": "closed",
        "title": "WT-5965: format: ignore leading whitespace in CONFIG files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 03, 2020 at 00:21 GMT",
        "updated_at": "Friday Apr 03, 2020 at 01:21 GMT",
        "closed_at": "Friday Apr 03, 2020 at 01:21 GMT",
        "merged_at": "Friday Apr 03, 2020 at 01:21 GMT"
    },
    {
        "key": null,
        "number": 5476,
        "state": "closed",
        "title": "WT 5357 WT_SESSION.truncate of a log cursor isn't documented",
        "body": "Add documentation of WT_SESSION::truncate behavior when called on a backup_cursor.\r\nIn addition to WT_SESSION::truncate, updated description in the \"Log file archival\" section\r\nof the \"Commit-level durability\" page. \r\n\r\nPossible issue:  Is the description of the `start` parameter confusing? It's generally optional, but mandatory for the backup cursor use case.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 02, 2020 at 20:41 GMT",
        "updated_at": "Friday Apr 03, 2020 at 15:18 GMT",
        "closed_at": "Friday Apr 03, 2020 at 14:45 GMT",
        "merged_at": "Friday Apr 03, 2020 at 14:45 GMT"
    },
    {
        "key": "WT-5930",
        "number": 5475,
        "state": "closed",
        "title": "WT-5930 Detect log version incompatibility before modifying files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 02, 2020 at 17:52 GMT",
        "updated_at": "Friday Apr 03, 2020 at 18:29 GMT",
        "closed_at": "Friday Apr 03, 2020 at 18:29 GMT",
        "merged_at": "Friday Apr 03, 2020 at 18:29 GMT"
    },
    {
        "key": "WT-5571",
        "number": 5474,
        "state": "closed",
        "title": "WT-5571 Add way to append to CFLAGS during build configuration.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 02, 2020 at 17:46 GMT",
        "updated_at": "Monday Jul 13, 2020 at 12:39 GMT",
        "closed_at": "Monday Jul 13, 2020 at 12:38 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 5473,
        "state": "closed",
        "title": "Added knowledge of ADD_CFLAGS and ADD_CXXFLAGS to configure.",
        "body": "Changed evergreen uses of configure that set CFLAGS to use ADD_CFLAGS instead.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 02, 2020 at 17:39 GMT",
        "updated_at": "Thursday Apr 02, 2020 at 17:42 GMT",
        "closed_at": "Thursday Apr 02, 2020 at 17:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5961",
        "number": 5472,
        "state": "closed",
        "title": "WT-5961 Respect write generations when constructing the root addr",
        "body": "In `__wt_verify`, if the write generation on the checkpoint is less than or equal to the `base_write_gen` on the connection, we should set the parent cell `addr_unpack.oldest_start_txn` to 0.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 02, 2020 at 05:44 GMT",
        "updated_at": "Monday Apr 06, 2020 at 05:44 GMT",
        "closed_at": "Monday Apr 06, 2020 at 05:44 GMT",
        "merged_at": "Monday Apr 06, 2020 at 05:44 GMT"
    },
    {
        "key": "WT-5952",
        "number": 5471,
        "state": "closed",
        "title": "WT-5952 Fix freeing updates racing with application threads",
        "body": "In __split_multi_inmem_final, I suspect we no longer have exclusive access to the page. In that case, we\r\ncannot free the updates moved to data store and history store as we may race\r\nwith the application threads. @keithbostic Can you confirm that we don't have exclusive access to the page in __split_multi_inmem_final?",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2020 at 05:12 GMT",
        "updated_at": "Friday Apr 03, 2020 at 00:49 GMT",
        "closed_at": "Friday Apr 03, 2020 at 00:49 GMT",
        "merged_at": "Friday Apr 03, 2020 at 00:49 GMT"
    },
    {
        "key": "WT-5909",
        "number": 5470,
        "state": "closed",
        "title": "WT-5909 Coverity unused value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2020 at 02:07 GMT",
        "updated_at": "Wednesday Apr 01, 2020 at 04:07 GMT",
        "closed_at": "Wednesday Apr 01, 2020 at 04:07 GMT",
        "merged_at": "Wednesday Apr 01, 2020 at 04:07 GMT"
    },
    {
        "key": "WT-5932",
        "number": 5469,
        "state": "closed",
        "title": "WT-5932 RTS Aborting on-disk updates for in-memory database",
        "body": "For in-memory databases, even after writing an update to disk,\r\nit still retian all the older updates in the memory until they\r\nare obsolete because there is no history store involved for\r\nin-memory databaes. For rollback to stable to work on in-memory\r\ndatabases, we need to clear the on-disk update whenever there\r\nare no visible updates found in the update list according to\r\nthe stable timestamp.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2020 at 00:48 GMT",
        "updated_at": "Wednesday Apr 01, 2020 at 21:21 GMT",
        "closed_at": "Wednesday Apr 01, 2020 at 21:21 GMT",
        "merged_at": "Wednesday Apr 01, 2020 at 21:21 GMT"
    },
    {
        "key": "WT-5953",
        "number": 5468,
        "state": "closed",
        "title": "WT-5953 format CONFIG file \"mmap_all\" syntax incompatibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2020 at 00:13 GMT",
        "updated_at": "Wednesday Apr 01, 2020 at 00:44 GMT",
        "closed_at": "Wednesday Apr 01, 2020 at 00:44 GMT",
        "merged_at": "Wednesday Apr 01, 2020 at 00:44 GMT"
    },
    {
        "key": "WT-5948",
        "number": 5467,
        "state": "closed",
        "title": "WT-5948 Fix assert to check history store ordering",
        "body": "The out of order inserts into the main table can lead to out of order\r\nrecords in history store with start/stop timestamps. Update the assert\r\nto include those scenarios also.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 31, 2020 at 05:40 GMT",
        "updated_at": "Tuesday Mar 31, 2020 at 10:55 GMT",
        "closed_at": "Tuesday Mar 31, 2020 at 10:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5796",
        "number": 5466,
        "state": "closed",
        "title": "WT-5796 Speed up verification of file's associated history store information.",
        "body": "@luke-pearson, @sulabhM, Jeremy Tay did the original work and you were the reviewers; of course, please turf the review elsewhere if that's appropriate.\r\n\r\nI haven't tested if this change fixes the timeouts in Evergreen tests, but the speedup is more than 100x, and is roughly the speed of verify in previous releases.\r\n\r\nThe 903469b commit is the interesting one, and 1c4b3cc adds some minor additional changes (the other commits are code shuffling).",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 31, 2020 at 05:24 GMT",
        "updated_at": "Friday Apr 03, 2020 at 16:35 GMT",
        "closed_at": "Friday Apr 03, 2020 at 16:35 GMT",
        "merged_at": "Friday Apr 03, 2020 at 16:35 GMT"
    },
    {
        "key": "WT-5938",
        "number": 5465,
        "state": "closed",
        "title": "WT-5938 Fix a memory corruption in rollback to stable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 30, 2020 at 22:15 GMT",
        "updated_at": "Tuesday Mar 31, 2020 at 04:07 GMT",
        "closed_at": "Monday Mar 30, 2020 at 23:24 GMT",
        "merged_at": "Monday Mar 30, 2020 at 23:24 GMT"
    },
    {
        "key": "WT-5943",
        "number": 5464,
        "state": "closed",
        "title": "WT-5943 Consider all non aborted updates as valid",
        "body": "While aborting the updates that are more than the stable timestamp,\r\nif it found any update that is not aborted even with the timestamp\r\nof WT_TS_NONE, consider it as a vaid update.",
        "base_ref": "develop",
        "created_at": "Monday Mar 30, 2020 at 20:34 GMT",
        "updated_at": "Tuesday Mar 31, 2020 at 07:01 GMT",
        "closed_at": "Tuesday Mar 31, 2020 at 07:01 GMT",
        "merged_at": "Tuesday Mar 31, 2020 at 07:01 GMT"
    },
    {
        "key": "WT-5944",
        "number": 5463,
        "state": "closed",
        "title": "WT-5944 Relax test csuite parameters for wt2853_perf.",
        "body": "Show any slow performance \"gaps\", but only fail if there is a much\r\nbigger gap. We intend to set the MAX_GAP parameter back down eventually.",
        "base_ref": "develop",
        "created_at": "Monday Mar 30, 2020 at 16:21 GMT",
        "updated_at": "Monday Mar 30, 2020 at 18:21 GMT",
        "closed_at": "Monday Mar 30, 2020 at 18:21 GMT",
        "merged_at": "Monday Mar 30, 2020 at 18:21 GMT"
    },
    {
        "key": "WT-4523",
        "number": 5462,
        "state": "closed",
        "title": "WT-4523 Fix type incompatibilities during alloc and free of memory for async ops",
        "body": "Fix SWIG interface wrappers for async ops.  \r\n\r\nWhen allocating and freeing memory for the python callback, we don't have a readily available WT_SESSION to pass to wt_calloc() and wt_free(), respectively.  So just pass NULL.  This means we won't be able to update statistics for these operations. But this is acceptable since the python wrappers are mostly (only?) used for our unit tests.\r\n\r\nAlso added a new method --- asyncopFreeHandler() --- to find the python callback that needs to be freed.",
        "base_ref": "develop",
        "created_at": "Friday Mar 27, 2020 at 19:34 GMT",
        "updated_at": "Friday Mar 27, 2020 at 20:53 GMT",
        "closed_at": "Friday Mar 27, 2020 at 20:53 GMT",
        "merged_at": "Friday Mar 27, 2020 at 20:53 GMT"
    },
    {
        "key": "WT-5811",
        "number": 5461,
        "state": "closed",
        "title": "WT-5811 For evergreen runs, mark ASAN tests as running on a slow machine.",
        "body": "Setting the env flag `TESTUTIL_SLOW_MACHINE=1` keeps certain time sensitive tests from running.",
        "base_ref": "develop",
        "created_at": "Friday Mar 27, 2020 at 14:27 GMT",
        "updated_at": "Monday Mar 30, 2020 at 13:42 GMT",
        "closed_at": "Monday Mar 30, 2020 at 13:42 GMT",
        "merged_at": "Monday Mar 30, 2020 at 13:42 GMT"
    },
    {
        "key": "WT-5931",
        "number": 5460,
        "state": "closed",
        "title": "WT-5931 Recovery rollback to stable is leading to remove a record that is not expected",
        "body": "Don't check the on-disk key/value when there is a valid update in update list\r\n\r\nWhen the page was processed once for the rollback to stable and valid value is\r\nrestored from the history store and added to update list. Once again the page\r\nis getting processed for rollback to stable, it must not process the on-disk\r\nkey/value again as it can lead to remove of the key.",
        "base_ref": "develop",
        "created_at": "Friday Mar 27, 2020 at 10:58 GMT",
        "updated_at": "Sunday Mar 29, 2020 at 23:35 GMT",
        "closed_at": "Sunday Mar 29, 2020 at 23:35 GMT",
        "merged_at": "Sunday Mar 29, 2020 at 23:35 GMT"
    },
    {
        "key": "WT-5527",
        "number": 5459,
        "state": "closed",
        "title": "WT-5527 Only restore update chain that has updates newer than the onpage value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 27, 2020 at 00:02 GMT",
        "updated_at": "Tuesday Mar 31, 2020 at 09:32 GMT",
        "closed_at": "Tuesday Mar 31, 2020 at 09:32 GMT",
        "merged_at": "Tuesday Mar 31, 2020 at 09:32 GMT"
    },
    {
        "key": "WT-5778",
        "number": 5458,
        "state": "closed",
        "title": "WT-5778 Simplify __rec_append_orig_value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2020 at 05:37 GMT",
        "updated_at": "Thursday Apr 02, 2020 at 22:09 GMT",
        "closed_at": "Thursday Apr 02, 2020 at 22:09 GMT",
        "merged_at": "Thursday Apr 02, 2020 at 22:09 GMT"
    },
    {
        "key": "WT-5826",
        "number": 5457,
        "state": "closed",
        "title": "WT-5826 Fix a leak when a page splits and some updates aren't restored.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2020 at 03:52 GMT",
        "updated_at": "Friday Mar 27, 2020 at 04:59 GMT",
        "closed_at": "Friday Mar 27, 2020 at 03:18 GMT",
        "merged_at": "Friday Mar 27, 2020 at 03:18 GMT"
    },
    {
        "key": "WT-5828",
        "number": 5456,
        "state": "closed",
        "title": "WT-5828 reconciliation discards salvaged overflow blocks with stop time pairs",
        "body": "@tetsuo-cpp, @luke-pearson, the interesting change is add2f98, 25881fb is just code shuffling.\r\n\r\n@bvpvamsikrishna, this change clears the timestamps from salvaged rows, rather than discarding them from the salvaged page because salvage doesn't currently support per-row salvage, we'd have to discard the whole page to discard a single row with a non-max time pair. (Or, rework salvage, I guess, but I'm not too excited about doing that right now.)",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2020 at 00:30 GMT",
        "updated_at": "Thursday Mar 26, 2020 at 16:48 GMT",
        "closed_at": "Thursday Mar 26, 2020 at 16:48 GMT",
        "merged_at": "Thursday Mar 26, 2020 at 16:48 GMT"
    },
    {
        "key": "WT-5925",
        "number": 5455,
        "state": "closed",
        "title": "WT-5925 rework format CONFIG file syntax for clarity",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2020 at 20:33 GMT",
        "updated_at": "Sunday Mar 29, 2020 at 23:02 GMT",
        "closed_at": "Sunday Mar 29, 2020 at 23:02 GMT",
        "merged_at": "Sunday Mar 29, 2020 at 23:02 GMT"
    },
    {
        "key": "WT-5902",
        "number": 5454,
        "state": "closed",
        "title": "WT-5902 history store using incorrect key for lookups",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2020 at 17:26 GMT",
        "updated_at": "Wednesday Mar 25, 2020 at 23:49 GMT",
        "closed_at": "Wednesday Mar 25, 2020 at 23:49 GMT",
        "merged_at": "Wednesday Mar 25, 2020 at 23:49 GMT"
    },
    {
        "key": "WT-5675",
        "number": 5453,
        "state": "closed",
        "title": "WT-5675 Prepare support workgen changes",
        "body": "Intermediate changes, not ready for review.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2020 at 11:54 GMT",
        "updated_at": "Wednesday Apr 08, 2020 at 00:25 GMT",
        "closed_at": "Wednesday Apr 08, 2020 at 00:25 GMT",
        "merged_at": "Wednesday Apr 08, 2020 at 00:25 GMT"
    },
    {
        "key": "WT-5922",
        "number": 5452,
        "state": "closed",
        "title": "WT-5922 Separate out XRay and xray_to_optrack build instructions",
        "body": "This PR separates out the instructions for instrumenting with XRay and building `xray_to_optrack` since these require different and very specific configuration flags.\r\n\r\nI also did a bit of cleanup and added some detail where appropriate.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2020 at 09:20 GMT",
        "updated_at": "Friday Mar 27, 2020 at 02:57 GMT",
        "closed_at": "Friday Mar 27, 2020 at 02:57 GMT",
        "merged_at": "Friday Mar 27, 2020 at 02:57 GMT"
    },
    {
        "key": "WT-5923",
        "number": 5451,
        "state": "closed",
        "title": "WT-5923 Avoid performing history store cleanup for modified trees",
        "body": "Scenarios when the trees are not checkpointed at once, it is possible\r\nthat durable timestamp of that tree can be zero, because of this reason\r\nthe trees are treated as non-timestamped tables and lead them to clean\r\ntheir history store. To avoid this problem, ignore history store cleanup\r\nwhen the trees are modified.\r\n\r\nThe side affect of this change is that it doesn't perform the history store\r\ncleanup for the non-timestamped tables also that are modified, but anyway\r\nthese tables gets cleaned during recovery rollback to stable phase.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2020 at 07:57 GMT",
        "updated_at": "Thursday Mar 26, 2020 at 22:23 GMT",
        "closed_at": "Thursday Mar 26, 2020 at 22:23 GMT",
        "merged_at": "Thursday Mar 26, 2020 at 22:23 GMT"
    },
    {
        "key": "WT-5921",
        "number": 5450,
        "state": "closed",
        "title": "WT-5921 Fix wtperf_xray to detect builds that haven't been instrumented with XRay",
        "body": "Check the return code instead of call to `objdump`. I'm fairly sure I tested this so I think this may have happened because I was testing on MacOS where `llvm-objdump` is used by default.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2020 at 07:39 GMT",
        "updated_at": "Friday Mar 27, 2020 at 02:56 GMT",
        "closed_at": "Friday Mar 27, 2020 at 02:56 GMT",
        "merged_at": "Friday Mar 27, 2020 at 02:56 GMT"
    },
    {
        "key": "WT-5588",
        "number": 5449,
        "state": "closed",
        "title": "WT-5588 For debug cursor copy, only release cursor memory allocated by the API.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2020 at 21:22 GMT",
        "updated_at": "Wednesday Mar 25, 2020 at 18:47 GMT",
        "closed_at": "Wednesday Mar 25, 2020 at 18:47 GMT",
        "merged_at": "Wednesday Mar 25, 2020 at 18:47 GMT"
    },
    {
        "key": "WT-5914",
        "number": 5448,
        "state": "closed",
        "title": "WT-5914 Only configure log-incremental backup if archiving is off.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2020 at 14:11 GMT",
        "updated_at": "Tuesday Mar 24, 2020 at 14:54 GMT",
        "closed_at": "Tuesday Mar 24, 2020 at 14:54 GMT",
        "merged_at": "Tuesday Mar 24, 2020 at 14:54 GMT"
    },
    {
        "key": "WT-5891",
        "number": 5447,
        "state": "closed",
        "title": "WT-5891 Disable testing of checkpoint cursors in wt4333_handle_locks",
        "body": "Checkpoint cursors are known to be broken as of durable history. This particular visibility issue seems to only happen with checkpoint cursors so let's disable this part of the test temporarily.\r\n\r\nIf we see visibility issues crop up even with regular cursors, then we can investigate further.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2020 at 03:49 GMT",
        "updated_at": "Thursday Mar 26, 2020 at 01:51 GMT",
        "closed_at": "Thursday Mar 26, 2020 at 01:51 GMT",
        "merged_at": "Thursday Mar 26, 2020 at 01:51 GMT"
    },
    {
        "key": "WT-5910",
        "number": 5446,
        "state": "closed",
        "title": "WT-5910 Fix start_durable_ts when handling out-of-order updates.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 23, 2020 at 06:14 GMT",
        "updated_at": "Monday Mar 23, 2020 at 21:02 GMT",
        "closed_at": "Monday Mar 23, 2020 at 21:02 GMT",
        "merged_at": "Monday Mar 23, 2020 at 21:02 GMT"
    },
    {
        "key": "WT-5902",
        "number": 5445,
        "state": "closed",
        "title": "WT-5902 No need to release the page if we end up with the same page in __tree_walk_internal",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 23, 2020 at 05:10 GMT",
        "updated_at": "Tuesday Mar 24, 2020 at 21:29 GMT",
        "closed_at": "Tuesday Mar 24, 2020 at 21:29 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5754",
        "number": 5444,
        "state": "closed",
        "title": "WT-5754 Ensure the value is globally visible before encode it into WT_ROW",
        "body": "\u2026_ROW",
        "base_ref": "develop",
        "created_at": "Sunday Mar 22, 2020 at 23:35 GMT",
        "updated_at": "Monday Mar 23, 2020 at 00:10 GMT",
        "closed_at": "Monday Mar 23, 2020 at 00:10 GMT",
        "merged_at": "Monday Mar 23, 2020 at 00:10 GMT"
    },
    {
        "key": "WT-5901",
        "number": 5443,
        "state": "closed",
        "title": "WT-5901 Evergreen release compatibility testing isn't working as intended.",
        "body": "@lukech, a new version of the release compatibility test script for your consideration.\r\n\r\nNote: that this script needs to be updated once there's a 4.2 tagged release that can handle the current 4.4 disk format.\r\n\r\nAlso note: because the test runs `format` to create variable- and fixed-length column store tables, running this version of the test in Evergreen is going to make the test go red. (cc: @agorrod)",
        "base_ref": "develop",
        "created_at": "Saturday Mar 21, 2020 at 23:47 GMT",
        "updated_at": "Tuesday Mar 24, 2020 at 03:37 GMT",
        "closed_at": "Tuesday Mar 24, 2020 at 03:37 GMT",
        "merged_at": "Tuesday Mar 24, 2020 at 03:37 GMT"
    },
    {
        "key": "WT-5900",
        "number": 5442,
        "state": "closed",
        "title": "WT-5900 version failures should display the version numbers that failed.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Mar 21, 2020 at 22:14 GMT",
        "updated_at": "Monday Mar 23, 2020 at 13:38 GMT",
        "closed_at": "Saturday Mar 21, 2020 at 22:55 GMT",
        "merged_at": "Saturday Mar 21, 2020 at 22:55 GMT"
    },
    {
        "key": "WT-5899",
        "number": 5441,
        "state": "closed",
        "title": "WT-5899 WT_PAGE_LAS_UPDATE on-disk page flag removed, breaking backward compatibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Mar 21, 2020 at 19:30 GMT",
        "updated_at": "Saturday Mar 21, 2020 at 19:50 GMT",
        "closed_at": "Saturday Mar 21, 2020 at 19:50 GMT",
        "merged_at": "Saturday Mar 21, 2020 at 19:50 GMT"
    },
    {
        "key": "WT-5898",
        "number": 5440,
        "state": "closed",
        "title": "WT-5898 Memory leak in verifying the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Mar 21, 2020 at 02:39 GMT",
        "updated_at": "Sunday Mar 22, 2020 at 01:55 GMT",
        "closed_at": "Sunday Mar 22, 2020 at 01:55 GMT",
        "merged_at": "Sunday Mar 22, 2020 at 01:55 GMT"
    },
    {
        "key": "WT-5813",
        "number": 5439,
        "state": "closed",
        "title": "WT-5813 Fix heap use after free",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Mar 21, 2020 at 02:21 GMT",
        "updated_at": "Sunday Mar 22, 2020 at 01:24 GMT",
        "closed_at": "Sunday Mar 22, 2020 at 01:24 GMT",
        "merged_at": "Sunday Mar 22, 2020 at 01:24 GMT"
    },
    {
        "key": "WT-5754",
        "number": 5438,
        "state": "closed",
        "title": "WT-5754 Fix eviction writing uncommitted data if running with read uncommitted",
        "body": "The problem is application threads running with read uncommitted isolation level evict uncommitted data with timestamp 0. Those values become visible to the subsequent reads.",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2020 at 23:14 GMT",
        "updated_at": "Tuesday Mar 24, 2020 at 21:29 GMT",
        "closed_at": "Saturday Mar 21, 2020 at 01:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5669",
        "number": 5437,
        "state": "closed",
        "title": "WT-5669 Prepare support with durable history: backport data format changes to 4.2",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2020 at 18:02 GMT",
        "updated_at": "Friday Mar 20, 2020 at 19:41 GMT",
        "closed_at": "Friday Mar 20, 2020 at 18:58 GMT",
        "merged_at": "Friday Mar 20, 2020 at 18:58 GMT"
    },
    {
        "key": "WT-5890",
        "number": 5436,
        "state": "closed",
        "title": "WT-5890 Bump log/WT version to facilitate upgrade/downgrade floor for MongoDB",
        "body": "These code changes address the issue described [here](https://jira.mongodb.org/browse/SERVER-47006).",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2020 at 06:26 GMT",
        "updated_at": "Monday Mar 23, 2020 at 01:24 GMT",
        "closed_at": "Monday Mar 23, 2020 at 01:24 GMT",
        "merged_at": "Monday Mar 23, 2020 at 01:24 GMT"
    },
    {
        "key": "WT-5896",
        "number": 5435,
        "state": "closed",
        "title": "WT-5896 Recovery sometimes attempts rollback to stable with an absent history store file",
        "body": "This PR is fixing an issue seen in `logkeeper` where there is a code path where we still attempt rollback to stable even without a history store file (i.e. when upgrading from `v4.2`).\r\n\r\nThis was caused by a bit of a boneheaded error on my part. There's a `goto` above my initial fix that jumps straight to the rollback to stable code if there were no log files found and `hs_exists` is left as `true`. I've moved this check right after the opening of the cursor so we should be safe.\r\n\r\nI've verified that `unionWith_fcv.js` still passes with this iteration of the fix.",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2020 at 05:56 GMT",
        "updated_at": "Monday Mar 23, 2020 at 00:38 GMT",
        "closed_at": "Monday Mar 23, 2020 at 00:38 GMT",
        "merged_at": "Monday Mar 23, 2020 at 00:38 GMT"
    },
    {
        "key": "WT-5894",
        "number": 5434,
        "state": "closed",
        "title": "WT-5894 Don't persist durable timestamp if it is same as commit",
        "body": "As we are storing the differences in the value cell from durable\r\ntimestamp to commit timestamp, there is no need to save when there\r\nis no difference. When unpacking the cell, assign commit timestamp\r\nto durable timestamp when there is no durable timestamp in the cell.",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2020 at 04:46 GMT",
        "updated_at": "Monday Mar 23, 2020 at 01:24 GMT",
        "closed_at": "Monday Mar 23, 2020 at 01:24 GMT",
        "merged_at": "Monday Mar 23, 2020 at 01:24 GMT"
    },
    {
        "key": "WT-5892",
        "number": 5433,
        "state": "closed",
        "title": "WT-5892 Bump log/WT version to facilitate downgrade floor for MongoDB 4.2",
        "body": "These code changes address the issue described [here](https://jira.mongodb.org/browse/SERVER-47006).",
        "base_ref": "mongodb-4.2",
        "created_at": "Friday Mar 20, 2020 at 03:28 GMT",
        "updated_at": "Monday Mar 23, 2020 at 08:43 GMT",
        "closed_at": "Monday Mar 23, 2020 at 08:43 GMT",
        "merged_at": "Monday Mar 23, 2020 at 08:43 GMT"
    },
    {
        "key": "WT-5616",
        "number": 5432,
        "state": "closed",
        "title": "WT-5616 Coverity memory leak",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2020 at 02:35 GMT",
        "updated_at": "Tuesday Mar 24, 2020 at 00:40 GMT",
        "closed_at": "Tuesday Mar 24, 2020 at 00:40 GMT",
        "merged_at": "Tuesday Mar 24, 2020 at 00:40 GMT"
    },
    {
        "key": "WT-5887",
        "number": 5431,
        "state": "closed",
        "title": "WT-5887 format should turn off verbose output when output is redirected to a file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2020 at 17:47 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 18:34 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 18:34 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 18:34 GMT"
    },
    {
        "key": "WT-5885",
        "number": 5430,
        "state": "closed",
        "title": "WT-5885 Additional rollback to stable verbose messages",
        "body": "Additional verbose messages are added in the code flow of\r\nrollback to stable that are useful for debugging.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2020 at 04:35 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 06:50 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 06:50 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 06:50 GMT"
    },
    {
        "key": "WT-5669",
        "number": 5429,
        "state": "closed",
        "title": "WT-5669 Prepare support with durable history: backport data format changes to 4.2",
        "body": "@ddanderson, I was looking at WT-5669 with @agorrod today, and was wondering if it might make sense to only port the `cell.h` and `cell.i` code from 4.4, that is, don't try and backport the timestamp work, just make 4.2 use the current 4.4 cell code.\r\n\r\nI've pushed a branch to show what I'm thinking. Can you take a look and then we can talk about which you prefer? Or if I'm totally missing something?",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Mar 18, 2020 at 22:52 GMT",
        "updated_at": "Friday Mar 20, 2020 at 19:08 GMT",
        "closed_at": "Friday Mar 20, 2020 at 19:08 GMT",
        "merged_at": "Friday Mar 20, 2020 at 19:08 GMT"
    },
    {
        "key": "WT-5657",
        "number": 5428,
        "state": "closed",
        "title": "WT-5657 Fix a race in deletion when running  with lower isolation levels",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2020 at 22:35 GMT",
        "updated_at": "Monday Oct 26, 2020 at 18:43 GMT",
        "closed_at": "Monday Apr 27, 2020 at 01:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5880",
        "number": 5427,
        "state": "closed",
        "title": "WT-5880 Simplify. Only use the previous incremental backup.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2020 at 21:14 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 19:54 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 19:54 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 19:54 GMT"
    },
    {
        "key": "WT-5843",
        "number": 5426,
        "state": "closed",
        "title": "WT-5843 Mark the page dirty when the reconciled page updates are aborted",
        "body": "Marking the page dirty let the tree to be dirted, so that this tree will\r\nbe reconciled again to write the stable version to disk instead of using\r\nthe already written aborted update version.\r\n\r\nAlong with the fix added some verbose messages to let the debug easier.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2020 at 08:10 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 03:16 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 03:16 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 03:16 GMT"
    },
    {
        "key": "WT-5879",
        "number": 5425,
        "state": "closed",
        "title": "WT-5879 Fix a bug reconciling metadata.",
        "body": "A previous attempt to fix this mixed up WT_TXN_GLOBAL.checkpoint_id (an increasing integer that represents the checkpoint generation) with WT_TXN_GLOBAL.checkpoint_state.id (the checkpoint transaction ID).",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2020 at 06:36 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 01:32 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 01:32 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 01:32 GMT"
    },
    {
        "key": "WT-5617",
        "number": 5424,
        "state": "closed",
        "title": "WT-5617 Coverity Memory leak",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2020 at 05:19 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 01:58 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 01:58 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 01:58 GMT"
    },
    {
        "key": "WT-5859",
        "number": 5423,
        "state": "closed",
        "title": "WT-5859 Fix a seg fault in verification",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2020 at 03:52 GMT",
        "updated_at": "Wednesday Mar 18, 2020 at 21:25 GMT",
        "closed_at": "Wednesday Mar 18, 2020 at 21:25 GMT",
        "merged_at": "Wednesday Mar 18, 2020 at 21:25 GMT"
    },
    {
        "key": "WT-5866",
        "number": 5422,
        "state": "closed",
        "title": "WT-5866 Remove history store file when downgrading to 4.2",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Wednesday Mar 18, 2020 at 00:48 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 00:37 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 00:37 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 00:37 GMT"
    },
    {
        "key": "WT-5874",
        "number": 5421,
        "state": "closed",
        "title": "WT-5874 Disable test_wt2323_join_visibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2020 at 00:45 GMT",
        "updated_at": "Wednesday Mar 18, 2020 at 01:31 GMT",
        "closed_at": "Wednesday Mar 18, 2020 at 01:31 GMT",
        "merged_at": "Wednesday Mar 18, 2020 at 01:31 GMT"
    },
    {
        "key": "WT-5855",
        "number": 5420,
        "state": "closed",
        "title": "WT-5855 Clean up optrack documentation",
        "body": "Clean up the documentation on operation tracking and remove dependencies on external code.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2020 at 23:26 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 16:08 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 16:08 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 16:08 GMT"
    },
    {
        "key": "WT-5735",
        "number": 5419,
        "state": "closed",
        "title": "WT-5735 Coverity analysis explicit NULL",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2020 at 20:52 GMT",
        "updated_at": "Wednesday Mar 18, 2020 at 00:32 GMT",
        "closed_at": "Wednesday Mar 18, 2020 at 00:32 GMT",
        "merged_at": "Wednesday Mar 18, 2020 at 00:32 GMT"
    },
    {
        "key": "WT-5872",
        "number": 5418,
        "state": "closed",
        "title": "WT-5872 test/format not writing out isolation level",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2020 at 20:46 GMT",
        "updated_at": "Tuesday Mar 17, 2020 at 21:55 GMT",
        "closed_at": "Tuesday Mar 17, 2020 at 21:55 GMT",
        "merged_at": "Tuesday Mar 17, 2020 at 21:55 GMT"
    },
    {
        "key": "WT-5868",
        "number": 5417,
        "state": "closed",
        "title": "WT-5868 Fix error message mismatch",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2020 at 06:22 GMT",
        "updated_at": "Tuesday Mar 17, 2020 at 07:24 GMT",
        "closed_at": "Tuesday Mar 17, 2020 at 07:24 GMT",
        "merged_at": "Tuesday Mar 17, 2020 at 07:24 GMT"
    },
    {
        "key": "WT-5862",
        "number": 5416,
        "state": "closed",
        "title": "WT-5862 Add conditional around macro definition",
        "body": "The MacOS build has been complaining about an unused macro since #5155 went in. I've just added a preprocessor conditional to define the macro only when we end up actually using it.\r\n\r\nI came across this in my triage baroning but figured I'd make a fix since I already know what it is. I've run a patch build on Ubuntu, RHEL, Windows and MacOS to confirm that this compiles everywhere.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2020 at 05:46 GMT",
        "updated_at": "Tuesday Mar 17, 2020 at 21:01 GMT",
        "closed_at": "Tuesday Mar 17, 2020 at 20:24 GMT",
        "merged_at": "Tuesday Mar 17, 2020 at 20:24 GMT"
    },
    {
        "key": "WT-5721",
        "number": 5415,
        "state": "closed",
        "title": "WT-5721 Delete old LAS/History Store file while upgrading/downgrading between v4.2 and v4.4",
        "body": "This PR makes the following changes:\r\n\r\n1. Update the WiredTiger version from 3.2.2 to 10.0.0 (see discussion below).\r\n2. Bump the log file format version from 3 to 4.\r\n3. Delete the LAS file, if it exists, when starting 4.4.\r\n\r\nThe change to delete the history store file when opening 4.2 will be handled in [WT-5866](https://jira.mongodb.org/browse/WT-5866) .",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2020 at 04:45 GMT",
        "updated_at": "Friday Mar 20, 2020 at 21:31 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 03:07 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 03:07 GMT"
    },
    {
        "key": "WT-5657",
        "number": 5414,
        "state": "closed",
        "title": "WT-5657 Squash consecutive tombstones when inserting updates to the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2020 at 02:35 GMT",
        "updated_at": "Wednesday Mar 18, 2020 at 05:26 GMT",
        "closed_at": "Wednesday Mar 18, 2020 at 05:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5630",
        "number": 5413,
        "state": "closed",
        "title": "WT-5630 Adding stage to turtle init that prevents startup if we star\u2026",
        "body": "\u2026t on too low of a version",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2020 at 23:19 GMT",
        "updated_at": "Wednesday Mar 18, 2020 at 23:57 GMT",
        "closed_at": "Wednesday Mar 18, 2020 at 23:57 GMT",
        "merged_at": "Wednesday Mar 18, 2020 at 23:57 GMT"
    },
    {
        "key": "WT-5858",
        "number": 5412,
        "state": "closed",
        "title": "WT-5858 Fix incremental backups both log/block based for first time",
        "body": "through.",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2020 at 20:22 GMT",
        "updated_at": "Tuesday Mar 17, 2020 at 14:01 GMT",
        "closed_at": "Tuesday Mar 17, 2020 at 14:01 GMT",
        "merged_at": "Tuesday Mar 17, 2020 at 14:01 GMT"
    },
    {
        "key": "WT-5671",
        "number": 5411,
        "state": "closed",
        "title": "WT-5671 Implement committed prepared transactions with durable history",
        "body": "This commit fixes plumbing that passes and stores durable timestamps to now\r\npass/store two durable timestamps and prepare flag.",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2020 at 19:06 GMT",
        "updated_at": "Wednesday Apr 15, 2020 at 22:40 GMT",
        "closed_at": "Wednesday Apr 15, 2020 at 22:40 GMT",
        "merged_at": "Wednesday Apr 15, 2020 at 22:40 GMT"
    },
    {
        "key": "WT-5857",
        "number": 5410,
        "state": "closed",
        "title": "WT-5857 Prepend homedir for system call pathnames.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2020 at 16:27 GMT",
        "updated_at": "Monday Mar 16, 2020 at 18:42 GMT",
        "closed_at": "Monday Mar 16, 2020 at 18:42 GMT",
        "merged_at": "Monday Mar 16, 2020 at 18:42 GMT"
    },
    {
        "key": "WT-5834",
        "number": 5409,
        "state": "closed",
        "title": "WT-5834 Clear memory if we extend the bitmap buffer.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2020 at 13:28 GMT",
        "updated_at": "Monday Mar 16, 2020 at 18:43 GMT",
        "closed_at": "Monday Mar 16, 2020 at 18:43 GMT",
        "merged_at": "Monday Mar 16, 2020 at 18:43 GMT"
    },
    {
        "key": "WT-5259",
        "number": 5408,
        "state": "closed",
        "title": "WT-5259 Add Xray documentation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 15, 2020 at 23:12 GMT",
        "updated_at": "Monday Mar 16, 2020 at 22:19 GMT",
        "closed_at": "Monday Mar 16, 2020 at 22:19 GMT",
        "merged_at": "Monday Mar 16, 2020 at 22:19 GMT"
    },
    {
        "key": "WT-5734",
        "number": 5407,
        "state": "closed",
        "title": "WT-5734 Adjust cast to avoid dividing enum by int",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 19:24 GMT",
        "updated_at": "Friday Mar 13, 2020 at 20:05 GMT",
        "closed_at": "Friday Mar 13, 2020 at 20:05 GMT",
        "merged_at": "Friday Mar 13, 2020 at 20:05 GMT"
    },
    {
        "key": "WT-5733",
        "number": 5406,
        "state": "closed",
        "title": "WT-5733 Remove asserts from unreachable case statements to please covert",
        "body": "Remove an assertion from an unreachable case branch.  Coverity flagged this as dead code.\r\n\r\nMade identical change in second, similar switch statement, which Coverity didn't (couldn't) flag as dead code, just to keep things symmetrical.",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 18:46 GMT",
        "updated_at": "Friday Mar 13, 2020 at 19:33 GMT",
        "closed_at": "Friday Mar 13, 2020 at 19:33 GMT",
        "merged_at": "Friday Mar 13, 2020 at 19:33 GMT"
    },
    {
        "key": "WT-5730",
        "number": 5405,
        "state": "closed",
        "title": "WT-5730 check return value from close(2).",
        "body": "Add check of return value from close(2) when reopening a file",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 17:45 GMT",
        "updated_at": "Friday Mar 13, 2020 at 18:22 GMT",
        "closed_at": "Friday Mar 13, 2020 at 18:22 GMT",
        "merged_at": "Friday Mar 13, 2020 at 18:22 GMT"
    },
    {
        "key": "WT-5729",
        "number": 5404,
        "state": "closed",
        "title": "WT-5729 Check remove(3) return value in incr_backup test",
        "body": "Verify that remove(3) successfully deletes file",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 15:25 GMT",
        "updated_at": "Friday Mar 13, 2020 at 19:31 GMT",
        "closed_at": "Friday Mar 13, 2020 at 15:54 GMT",
        "merged_at": "Friday Mar 13, 2020 at 15:54 GMT"
    },
    {
        "key": "WT-5844",
        "number": 5403,
        "state": "closed",
        "title": "WT-5844 Adjust error codes for when we detect files that are too small to contain a descriptor block",
        "body": "We recently made a change in WT-5786 to return `ENOENT` if we found files that are too small to contain a descriptor block in order for WiredTiger to get past rollback to stable and start properly so that MongoDB can run verify/salvage on a database.\r\n\r\nThere's been some fallout in `wt_corrupt_file_errors.js` since MongoDB is quite specific about what error codes it gets back from WiredTiger and reacts differently on each one. We should maybe negotiate with server to agree on what each value means, but for the time being we should mimic what we were returning before to get the patch closer to green.",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 05:41 GMT",
        "updated_at": "Monday Mar 16, 2020 at 05:03 GMT",
        "closed_at": "Monday Mar 16, 2020 at 05:03 GMT",
        "merged_at": "Monday Mar 16, 2020 at 05:03 GMT"
    },
    {
        "key": "WT-5785",
        "number": 5402,
        "state": "closed",
        "title": "WT-5785 Cache history store dhandle by accessing and releasing the dhandle",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 04:39 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 03:31 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 03:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5831",
        "number": 5401,
        "state": "closed",
        "title": "WT-5831 Fix the case of history store corruption",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 04:32 GMT",
        "updated_at": "Tuesday Mar 17, 2020 at 03:05 GMT",
        "closed_at": "Tuesday Mar 17, 2020 at 03:05 GMT",
        "merged_at": "Tuesday Mar 17, 2020 at 03:05 GMT"
    },
    {
        "key": "WT-5831",
        "number": 5400,
        "state": "closed",
        "title": "Revert \"WT-5831 Fix test_txn19\"",
        "body": "Reverts wiredtiger/wiredtiger#5399",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2020 at 04:31 GMT",
        "updated_at": "Friday Mar 13, 2020 at 04:31 GMT",
        "closed_at": "Friday Mar 13, 2020 at 04:31 GMT",
        "merged_at": "Friday Mar 13, 2020 at 04:31 GMT"
    },
    {
        "key": "WT-5831",
        "number": 5399,
        "state": "closed",
        "title": "WT-5831 Fix test_txn19",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 23:48 GMT",
        "updated_at": "Tuesday Mar 17, 2020 at 03:05 GMT",
        "closed_at": "Friday Mar 13, 2020 at 03:01 GMT",
        "merged_at": "Friday Mar 13, 2020 at 03:01 GMT"
    },
    {
        "key": "WT-5672",
        "number": 5398,
        "state": "closed",
        "title": "WT-5672 Rollback to stable support with start/stop aggregated durable timestamps",
        "body": "The rollback to stable operation depends on the aggregated\r\ntimestamps that are stored as part of the checkpoint and in the\r\ninternal pages of the tree. This change adjusts/corrects the\r\naggregation of both start/stop durable timestamps.\r\n\r\nAlong with aggregation support fixes, the rollback to stable\r\nis modified to check for durable start/stop timestamp while\r\ndeciding the visibility of the value.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 04:53 GMT",
        "updated_at": "Friday Mar 20, 2020 at 01:03 GMT",
        "closed_at": "Friday Mar 20, 2020 at 01:03 GMT",
        "merged_at": "Friday Mar 20, 2020 at 01:03 GMT"
    },
    {
        "key": "WT-5674",
        "number": 5397,
        "state": "closed",
        "title": "WT-5674 Prepare support to add functional tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 04:47 GMT",
        "updated_at": "Friday Mar 20, 2020 at 01:19 GMT",
        "closed_at": "Friday Mar 20, 2020 at 01:19 GMT",
        "merged_at": "Friday Mar 20, 2020 at 01:19 GMT"
    },
    {
        "key": "WT-5822",
        "number": 5396,
        "state": "closed",
        "title": "WT-5822 Metadata updates from a running checkpoint cannot be evicted.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 04:17 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 05:27 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 05:27 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 05:27 GMT"
    },
    {
        "key": "WT-5789",
        "number": 5395,
        "state": "closed",
        "title": "WT-5789 Check that the history store file exists before performing rollback to stable",
        "body": "If there is no history store file, we should skip performing rollback to stable and the recovery checkpoint. This situation gets triggered when we're upgrading from 4.2 so we can't do anything sensible in recovery.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 03:49 GMT",
        "updated_at": "Friday Mar 13, 2020 at 02:06 GMT",
        "closed_at": "Friday Mar 13, 2020 at 02:06 GMT",
        "merged_at": "Friday Mar 13, 2020 at 02:06 GMT"
    },
    {
        "key": "WT-5574",
        "number": 5394,
        "state": "closed",
        "title": "WT-5574 Clear the cursor key after the txn-op key has been freed",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 02:54 GMT",
        "updated_at": "Friday Mar 13, 2020 at 03:53 GMT",
        "closed_at": "Friday Mar 13, 2020 at 03:53 GMT",
        "merged_at": "Friday Mar 13, 2020 at 03:53 GMT"
    },
    {
        "key": "WT-5830",
        "number": 5393,
        "state": "closed",
        "title": "WT-5830 Enable two c tests in evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 02:33 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 03:14 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 03:14 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 03:14 GMT"
    },
    {
        "key": "WT-5827",
        "number": 5392,
        "state": "closed",
        "title": "WT-5827 Enabling the schema abort test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 01:17 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 02:26 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 02:26 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 02:26 GMT"
    },
    {
        "key": "WT-5825",
        "number": 5391,
        "state": "closed",
        "title": "WT-5825 Enable two c tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 00:47 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 01:32 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 01:32 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 01:32 GMT"
    },
    {
        "key": "WT-5820",
        "number": 5390,
        "state": "closed",
        "title": "WT-5820 Change format.sh to forcibly quit if a test runs out of disk space.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2020 at 00:13 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 00:41 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 00:41 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 00:41 GMT"
    },
    {
        "key": "WT-5785",
        "number": 5389,
        "state": "closed",
        "title": "WT-5785 Fix potential deadlocks in eviction and verify code paths",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2020 at 07:28 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 04:15 GMT",
        "closed_at": "Thursday Mar 19, 2020 at 04:15 GMT",
        "merged_at": "Thursday Mar 19, 2020 at 04:15 GMT"
    },
    {
        "key": "WT-5809",
        "number": 5388,
        "state": "closed",
        "title": "WT-5809 Insert records with the same start and stop timestamps to history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2020 at 04:18 GMT",
        "updated_at": "Friday Mar 13, 2020 at 01:00 GMT",
        "closed_at": "Wednesday Mar 11, 2020 at 07:19 GMT",
        "merged_at": "Wednesday Mar 11, 2020 at 07:19 GMT"
    },
    {
        "key": "WT-5799",
        "number": 5387,
        "state": "closed",
        "title": "WT-5799 Dont assume we have ordered timestamps when doing rec append \u2026",
        "body": "\u2026original value",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2020 at 03:39 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 02:28 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 02:28 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 02:28 GMT"
    },
    {
        "key": "WT-5786",
        "number": 5386,
        "state": "closed",
        "title": "WT-5786 Detect if a file is too small to read a descriptor block",
        "body": "I've been thinking of a way to generalize this solution to detect changes to file size but I'm not sure how. When we checkpoint, we record the file size. However, if we evict dirty pages after a checkpoint, the data file should grow larger. And if we compact, I believe it may shrink. So I don't think I have any way of using the checkpoint size to check the file size.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2020 at 03:02 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 05:35 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 05:35 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 05:35 GMT"
    },
    {
        "key": "WT-5806",
        "number": 5385,
        "state": "closed",
        "title": "WT-5806 Perform rollback to stable on clean shutdown",
        "body": "Perform a rollback to stable operation on a clean shutdown\r\nto ensure that the stable version is written to disk so that\r\nthe same database can be used with a downgraded version.\r\n\r\nAlso removed some old connection eviction flags",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2020 at 00:47 GMT",
        "updated_at": "Wednesday Mar 11, 2020 at 22:34 GMT",
        "closed_at": "Wednesday Mar 11, 2020 at 22:34 GMT",
        "merged_at": "Wednesday Mar 11, 2020 at 22:34 GMT"
    },
    {
        "key": "WT-5240",
        "number": 5384,
        "state": "closed",
        "title": "WT-5240 Add block incremental support to test/format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 10, 2020 at 19:09 GMT",
        "updated_at": "Friday Mar 13, 2020 at 20:32 GMT",
        "closed_at": "Friday Mar 13, 2020 at 20:32 GMT",
        "merged_at": "Friday Mar 13, 2020 at 20:32 GMT"
    },
    {
        "key": "WT-5800",
        "number": 5383,
        "state": "closed",
        "title": "WT-5800 Temporarily disable history store verify",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 10, 2020 at 03:27 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 04:49 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 04:49 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 04:49 GMT"
    },
    {
        "key": "WT-5704",
        "number": 5382,
        "state": "closed",
        "title": "WT-5704 Fix memory leak in incr_backup",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 10, 2020 at 02:54 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 21:01 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 21:01 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 21:01 GMT"
    },
    {
        "key": "WT-5795",
        "number": 5381,
        "state": "closed",
        "title": "WT-5795 Disable assertion that inserts to the history store are unique",
        "body": "@michaelcahill you were right - the assertion fired. Let's revert for now - I expect we can encounter the situation after an aborted reconciliation in the least.",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2020 at 11:32 GMT",
        "updated_at": "Monday Mar 09, 2020 at 23:37 GMT",
        "closed_at": "Monday Mar 09, 2020 at 23:24 GMT",
        "merged_at": "Monday Mar 09, 2020 at 23:24 GMT"
    },
    {
        "key": "WT-5792",
        "number": 5380,
        "state": "closed",
        "title": "WT-5792 Dump and verify can't see the history store",
        "body": "Dump and verify have been broken since we made it such that only rollback to stable can ignore history store tombstones. I've updated dump and verify to use these flags.\r\n\r\nI've mostly tested manually by adding assertions around our `search_near` to ensure that we get `WT_NOTFOUND` before my fix and `0` after.",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2020 at 07:57 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 02:49 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 02:49 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 02:49 GMT"
    },
    {
        "key": "WT-5781",
        "number": 5379,
        "state": "closed",
        "title": "WT-5781 Return ebusy if cannot evict the page when closing the tree",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2020 at 07:13 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 04:22 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 04:22 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 04:22 GMT"
    },
    {
        "key": "WT-5780",
        "number": 5378,
        "state": "closed",
        "title": "WT-5780 Avoid inserting updates into history store with same start/st\u2026",
        "body": "\u2026op timestamp\r\n\r\nIn case of out-of-order timestamp inserts from the application, it is possible\r\nthat newer update may have lesser timestamp than the current update. In such\r\nscenarios don't insert them into the history store.\r\n\r\nMake sure that history store stop timestamp is from the durable timestamp of a\r\nnewer update of the key insead of commit timestamp.",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2020 at 06:14 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:31 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 01:45 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 01:45 GMT"
    },
    {
        "key": "WT-5569",
        "number": 5377,
        "state": "closed",
        "title": "WT-5569 update WiredTiger source code to include 2020 copyright notices for durable history",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2020 at 04:59 GMT",
        "updated_at": "Monday Mar 09, 2020 at 05:39 GMT",
        "closed_at": "Monday Mar 09, 2020 at 05:39 GMT",
        "merged_at": "Monday Mar 09, 2020 at 05:39 GMT"
    },
    {
        "key": "WT-5615",
        "number": 5376,
        "state": "closed",
        "title": "WT-5615 Coverity-Read of uninitialised value",
        "body": "Memset the `tmp` variable to 0 with `WT_CLEAR`.",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2020 at 03:38 GMT",
        "updated_at": "Monday Mar 09, 2020 at 04:54 GMT",
        "closed_at": "Monday Mar 09, 2020 at 04:54 GMT",
        "merged_at": "Monday Mar 09, 2020 at 04:54 GMT"
    },
    {
        "key": "WT-3821",
        "number": 5375,
        "state": "closed",
        "title": "WT-3821 Fix a test for verbose transaction messages",
        "body": "This test was supposed to generate a verbose message, but either never\r\nworked consistently or was broken at some point.  Fix the test so it\r\n(a) consistently generates the message; and\r\n(b) expects the message so the test doesn't fail when it is generated.",
        "base_ref": "develop",
        "created_at": "Sunday Mar 08, 2020 at 23:47 GMT",
        "updated_at": "Monday Mar 09, 2020 at 00:43 GMT",
        "closed_at": "Monday Mar 09, 2020 at 00:43 GMT",
        "merged_at": "Monday Mar 09, 2020 at 00:43 GMT"
    },
    {
        "key": "WT-5684",
        "number": 5374,
        "state": "closed",
        "title": "WT-5684 overflow values must be discarded when there is no update for a key",
        "body": "@kommiharibabu, @luke-pearson: b6244af is a fix for the problems described in the WT-5684 ticket. I may be misunderstanding what you were doing in changes you made for WT-5476, so feel free to push back hard.\r\n\r\n@tetsuo-cpp, while I was in the area, I think I spotted a problem with your changes for WT-5641 (specifically, the changes in `src/reconcile/rec_row.c`, [here](https://github.com/wiredtiger/wiredtiger/pull/5295/files)), the fact that we're using `tmpkey` is going to mess up prefix compression because the next loop in reconciliation won't have `tmpkey.size` set to 0. The fix in e3cf67b moved the chunk of code you added, I didn't see any reason we needed to wait on updating the HS file until subsequent, inserted key/value pairs have been written.",
        "base_ref": "develop",
        "created_at": "Sunday Mar 08, 2020 at 22:55 GMT",
        "updated_at": "Sunday Mar 08, 2020 at 23:48 GMT",
        "closed_at": "Sunday Mar 08, 2020 at 23:48 GMT",
        "merged_at": "Sunday Mar 08, 2020 at 23:48 GMT"
    },
    {
        "key": "WT-5696",
        "number": 5373,
        "state": "closed",
        "title": "WT-5696 Reconciliation use commit timestamp of cell as durable timestamp",
        "body": "Currently, the value cell doesn't store the durable timestamp and when a page\r\nis getting reconciled again with no newer updates on the page to be considered,\r\nthe aggregated durable timestamp is calculated as zero. This gets fixed when\r\nthe value cell has durable timestamp, till then consider the commit timestamp\r\ninstead of zero.",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 05:41 GMT",
        "updated_at": "Wednesday Mar 11, 2020 at 02:18 GMT",
        "closed_at": "Friday Mar 06, 2020 at 06:31 GMT",
        "merged_at": "Friday Mar 06, 2020 at 06:31 GMT"
    },
    {
        "key": "WT-5701",
        "number": 5372,
        "state": "closed",
        "title": "WT-5701 If an out-of-order update masks an on-disk value, don't append it.",
        "body": "This is another case where operations out of timestamp order can current cause an assertion.  Handle the situation instead (here by ignoring an on-page value that can never be read, rather than copying it into the update list).",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 05:29 GMT",
        "updated_at": "Wednesday Mar 11, 2020 at 02:19 GMT",
        "closed_at": "Monday Mar 09, 2020 at 00:45 GMT",
        "merged_at": "Monday Mar 09, 2020 at 00:45 GMT"
    },
    {
        "key": "WT-5775",
        "number": 5371,
        "state": "closed",
        "title": "WT-5775 Fix a leak of update structures in the history store.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 05:14 GMT",
        "updated_at": "Monday Mar 09, 2020 at 05:34 GMT",
        "closed_at": "Monday Mar 09, 2020 at 05:34 GMT",
        "merged_at": "Monday Mar 09, 2020 at 05:34 GMT"
    },
    {
        "key": "WT-5777",
        "number": 5370,
        "state": "closed",
        "title": "WT-5777 Add statistic for tracking history store deletions due to key removal",
        "body": "It would be useful to be able to track how many records get deleted due to these recent changes. If this happens often, there's a possible perf implication so it would be nice to be able to identify if that is the case.",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 04:39 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 00:31 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 00:31 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 00:31 GMT"
    },
    {
        "key": "WT-5774",
        "number": 5369,
        "state": "closed",
        "title": "WT-5774 Move stress test tasks into a separate build variant",
        "body": "Hopefully, this change could make finding stress tasks and triaging test failures easier. ",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 04:21 GMT",
        "updated_at": "Friday Mar 06, 2020 at 05:45 GMT",
        "closed_at": "Friday Mar 06, 2020 at 05:45 GMT",
        "merged_at": "Friday Mar 06, 2020 at 05:45 GMT"
    },
    {
        "key": "WT-5665",
        "number": 5368,
        "state": "closed",
        "title": "WT-5665 The timestamp in history store search key should be set to max if read without a timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 04:21 GMT",
        "updated_at": "Friday Mar 06, 2020 at 05:07 GMT",
        "closed_at": "Friday Mar 06, 2020 at 05:07 GMT",
        "merged_at": "Friday Mar 06, 2020 at 05:07 GMT"
    },
    {
        "key": "WT-5771",
        "number": 5367,
        "state": "closed",
        "title": "WT-5771 Always initialize upd_select during reconciliation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 03:55 GMT",
        "updated_at": "Friday Mar 06, 2020 at 05:29 GMT",
        "closed_at": "Friday Mar 06, 2020 at 05:29 GMT",
        "merged_at": "Friday Mar 06, 2020 at 05:29 GMT"
    },
    {
        "key": "WT-5376",
        "number": 5366,
        "state": "closed",
        "title": "WT-5376 WT_UPDATE.type field can race with visibility checks when returning key/value pairs (#5173) [Backport to 4.0]",
        "body": "* Cache the WT_UPDATE.type field so that it can't change underneath us after the visibility checks.\r\n\r\n(cherry picked from commit 168c7f1b3859516115721868f312544abb0caf5b)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Mar 06, 2020 at 03:38 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 23:29 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 23:29 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 23:29 GMT"
    },
    {
        "key": "WT-5119",
        "number": 5365,
        "state": "closed",
        "title": "WT-5119 Birthmark records can be read as normal updates if reads race with checkpoints. (#5082) [Backport to 4.0]",
        "body": "* We need to make sure the WT_UPDATE txnid is set to WT_TXN_ABORTED before the type is switched to\r\nWT_UPDATE_STANDARD, otherwise a read can race with the update and read the birthmark record as a\r\nnormal update.\r\n\r\n* The most conservative version of this fix, committed for discussion.\r\n\r\nAdd/Use a WT_ORDERED_WRITE macro, currently synonymous with WT_PUBLISH.\r\n\r\n(cherry picked from commit e3cbe6dc8dfb3e39fc014ac32e6192d7fe469677)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Mar 06, 2020 at 03:09 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 23:29 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 23:29 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 23:29 GMT"
    },
    {
        "key": "WT-5767",
        "number": 5364,
        "state": "closed",
        "title": "WT-5767 Fix search_near invocations for history store",
        "body": "We currently have some code to position our cursor at the end of a key/timestamp range in the history store.\r\n\r\nThe implementation involves search_near running in a loop. So if we do search_near and land on the next key, we call prev to get back to the latest record for our timestamp. If we're still ahead of our key, that means we raced with another insert and we repeat this process. What should really happen is that we call prev in a loop to get to the right spot since this is much cheaper than doing a full-blown search again.\r\n\r\nWe also have a few spots where we're using our own search_near invocation without this outer loop to guard against races. We should either generalize the cursor positioning function to work for this use case too or we should add a loop to the current invocation to make it correct.",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 01:07 GMT",
        "updated_at": "Friday Mar 06, 2020 at 04:32 GMT",
        "closed_at": "Friday Mar 06, 2020 at 04:32 GMT",
        "merged_at": "Friday Mar 06, 2020 at 04:32 GMT"
    },
    {
        "key": "WT-5756",
        "number": 5363,
        "state": "closed",
        "title": "WT-5756 Don't copy data from cursor for reserve update",
        "body": "We copy some garbage data from cursor when we allocate update for reserve. Similar problem to WT-5745. I don't know why this is not failing before durable history. @michaelcahill ",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2020 at 00:13 GMT",
        "updated_at": "Friday Mar 06, 2020 at 01:05 GMT",
        "closed_at": "Friday Mar 06, 2020 at 01:05 GMT",
        "merged_at": "Friday Mar 06, 2020 at 01:05 GMT"
    },
    {
        "key": "WT-5654",
        "number": 5362,
        "state": "closed",
        "title": "WT-5654 Reserve extra space in history store format for future schema changes",
        "body": "This PR is reserving some extra space in the history store schema to future proof our decision and allow us to add more things if need be. We've decided on extending the `update_type` to 8 bytes. We can then tack on extra data to the `value` buffer and set bit flags on the `update_type` to determine how to interpret it.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 05, 2020 at 14:29 GMT",
        "updated_at": "Friday Mar 06, 2020 at 05:33 GMT",
        "closed_at": "Friday Mar 06, 2020 at 05:33 GMT",
        "merged_at": "Friday Mar 06, 2020 at 05:33 GMT"
    },
    {
        "key": "WT-5762",
        "number": 5361,
        "state": "closed",
        "title": "WT-5762 Make test_hs10 more robust",
        "body": "Don't wrap the updates that are supposed to flush the cache into a\r\nsingle transaction.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 05, 2020 at 06:40 GMT",
        "updated_at": "Thursday Mar 05, 2020 at 10:16 GMT",
        "closed_at": "Thursday Mar 05, 2020 at 10:16 GMT",
        "merged_at": "Thursday Mar 05, 2020 at 10:16 GMT"
    },
    {
        "key": "WT-5719",
        "number": 5360,
        "state": "closed",
        "title": "WT-5719 WT-5722 cherry-picked to mongodb-4.4 ",
        "body": "",
        "base_ref": "mongodb-4.4",
        "created_at": "Thursday Mar 05, 2020 at 04:45 GMT",
        "updated_at": "Thursday Mar 05, 2020 at 20:27 GMT",
        "closed_at": "Thursday Mar 05, 2020 at 20:27 GMT",
        "merged_at": "Thursday Mar 05, 2020 at 20:27 GMT"
    },
    {
        "key": "WT-5753",
        "number": 5359,
        "state": "closed",
        "title": "WT-5753 Fix divide by zero errors in incremental backup tester.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 04, 2020 at 15:40 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 17:05 GMT",
        "closed_at": "Wednesday Mar 04, 2020 at 17:05 GMT",
        "merged_at": "Wednesday Mar 04, 2020 at 17:05 GMT"
    },
    {
        "key": "WT-5747",
        "number": 5358,
        "state": "closed",
        "title": "WT-5747 Cope with out-of-order timestamps.",
        "body": "We don't expect operations to use timestamps out-of-order, but at least some MongoDB tests do.  Until we figure out whether those tests can be changed to avoid the out-of-order operations (e.g., by inserting rollback_to_stable in between timestamp reuse), deal with out-of-order timestamps rather than asserting.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 04, 2020 at 07:48 GMT",
        "updated_at": "Thursday Mar 05, 2020 at 04:29 GMT",
        "closed_at": "Thursday Mar 05, 2020 at 04:29 GMT",
        "merged_at": "Thursday Mar 05, 2020 at 04:29 GMT"
    },
    {
        "key": "WT-5649",
        "number": 5357,
        "state": "closed",
        "title": "WT-5649 Refactor WT_REF locking, review all WT_REF.addr reads for locking issues",
        "body": "@kommiharibabu, @tetsuo-cpp: here are some changes to fix problems with looking at the `WT_REF.addr` fields.\r\n\r\nIn summary, it's not safe look at `WT_REF.addr` (including the associated timestamps), unless we know they won't change underfoot, and that means we either lock them somehow or ensure that checkpoint & eviction are both ignoring the `WT_REF` when we're looking at them.\r\n\r\nI tried to come up with some kind of locking scheme, but failed -- we just touch those fields all over the place, and most of the time it's fine, I believe it's just compaction and checkpoint-sync we have to worry about. I'm a little worried about fast-truncate, too, but I didn't spot any problems.\r\n\r\nLet me know if you see an approach that leads to a locking solution, I'm happy to back off from this change if there's a better one!\r\n\r\n@kommiharibabu, I ended up reworking `bt_sync.c:__sync_ref_obsolete_check()` in major ways, please look at it carefully.\r\n\r\nWhat I did to find everywhere a `WT_REF.addr` was touched was to change the field name and work my way through all the compiler complaints, convincing myself the usage was safe.\r\n\r\nIf there are any questions about what I'm doing and why I think it's safe, maybe it's worth the three of us meeting and talking through the change, just let me know.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 04, 2020 at 05:45 GMT",
        "updated_at": "Friday Mar 06, 2020 at 02:42 GMT",
        "closed_at": "Friday Mar 06, 2020 at 02:42 GMT",
        "merged_at": "Friday Mar 06, 2020 at 02:42 GMT"
    },
    {
        "key": "WT-5745",
        "number": 5356,
        "state": "closed",
        "title": "WT-5745 Don't copy a value when allocating a tombstone update.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 04, 2020 at 05:33 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 07:03 GMT",
        "closed_at": "Wednesday Mar 04, 2020 at 07:03 GMT",
        "merged_at": "Wednesday Mar 04, 2020 at 07:03 GMT"
    },
    {
        "key": "WT-5680",
        "number": 5355,
        "state": "closed",
        "title": "WT-5680 On evicting an empty page, mark it DELETED not DISK",
        "body": "When a remove becomes stable, stop writing keys even if some history is saved.  Then when a page becomes empty, it won't have any content and will have a NULL address.  These pages should be evicted into the DELETED state.  There was left over code for LIMBO pages (where a page could be empty in a checkpoint but have relevant history): this commit removes that code.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 04, 2020 at 05:04 GMT",
        "updated_at": "Thursday Mar 05, 2020 at 05:09 GMT",
        "closed_at": "Thursday Mar 05, 2020 at 05:09 GMT",
        "merged_at": "Thursday Mar 05, 2020 at 05:09 GMT"
    },
    {
        "key": "WT-5565",
        "number": 5354,
        "state": "closed",
        "title": "WT-5565 Update fast truncate code to consider aggregated timestamps a\u2026",
        "body": "\u2026nd the on disk value when instantiating a deleted page",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 04, 2020 at 03:07 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 05:29 GMT",
        "closed_at": "Wednesday Mar 04, 2020 at 05:29 GMT",
        "merged_at": "Wednesday Mar 04, 2020 at 05:29 GMT"
    },
    {
        "key": "WT-5631",
        "number": 5353,
        "state": "closed",
        "title": "WT-5631 Make sure to follow same connection config in the entire test",
        "body": "Based on connection level logging enabled/disabled, the immediate durability\r\nof the table is getting changed. Currently WT, doesn't save the configuration\r\nin most of the scenarios, so make sure to use the same configuratio in the\r\nentire test to let the behaviour of the tables same across the test.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2020 at 23:53 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 06:28 GMT",
        "closed_at": "Wednesday Mar 04, 2020 at 06:28 GMT",
        "merged_at": "Wednesday Mar 04, 2020 at 06:28 GMT"
    },
    {
        "key": "WT-5669",
        "number": 5352,
        "state": "closed",
        "title": "WT-5669 Change data format to match prepare/durable history mods in next release",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Tuesday Mar 03, 2020 at 18:56 GMT",
        "updated_at": "Thursday Jun 11, 2020 at 00:30 GMT",
        "closed_at": "Friday Mar 20, 2020 at 05:50 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5722",
        "number": 5351,
        "state": "closed",
        "title": "WT-5722 Add standard name checks to incremental backup identifiers.",
        "body": "@ddanderson and @keitharnoldsmith given yesterday's discussion about namespaces I have implemented changes to apply the same naming restrictions and checks to backup identifiers as we do to other names. ",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2020 at 17:02 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 17:13 GMT",
        "closed_at": "Tuesday Mar 03, 2020 at 22:51 GMT",
        "merged_at": "Tuesday Mar 03, 2020 at 22:51 GMT"
    },
    {
        "key": "WT-5688",
        "number": 5350,
        "state": "closed",
        "title": "WT-5688 Memory leak during page overflow read",
        "body": "These changes would fix memory leak during the overflow page read (pasted the call stack below). \r\n\r\nEvergreen link [[here](https://evergreen.mongodb.com/task/wiredtiger_ubuntu1804_format_stress_sanitizer_smoke_test_patch_fa51dc8d84fb621ef6a3f92c0117a55fa16cbb34_5e5d96d661837d088fad3f45_20_03_02_23_29_48)]\r\n\r\n`#1 0x7f3ebab6881d in __realloc_func /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/os_common/os_alloc.c:141:14\r\n#2 0x7f3ebab689a0 in __wt_realloc_noclear /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/os_common/os_alloc.c:180:13\r\n#3 0x7f3ebad0bc5e in __wt_buf_grow_worker /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/support/scratch.c:54:19\r\n#4 0x7f3eba73b51f in __wt_buf_grow /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/include/buf.i:17:54\r\n#5 0x7f3eba73b35c in __wt_buf_init /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/include/buf.i:49:13\r\n#6 0x7f3eba736ffb in __wt_buf_initsize /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/include/buf.i:61:11\r\n#7 0x7f3eba73541e in __wt_bt_read /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/btree/bt_io.c:86:15\r\n#8 0x7f3eba73cd2c in __ovfl_read /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/btree/bt_ovfl.c:31:11\r\n#9 0x7f3eba73cbdc in __wt_ovfl_read /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/btree/bt_ovfl.c:87:15\r\n#10 0x7f3eba783022 in __cell_data_ref /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/include/cell.i:1011:15\r\n#11 0x7f3eba780365 in __wt_page_cell_data_ref /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/include/cell.i:1055:13\r\n#12 0x7f3eba77f69e in __wt_value_return_buf /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/btree/bt_ret.c:125:17\r\n#13 0x7f3eba69dce8 in __wt_txn_read /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/include/txn.i:814:15\r\n#14 0x7f3eba697f88 in __cursor_row_next /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/btree/bt_curnext.c:400:9\r\n#15 0x7f3eba692014 in __wt_btcur_next /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/btree/bt_curnext.c:679:23\r\n#16 0x7f3eba957726 in __curfile_next /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/cursor/cur_file.c:93:5\r\n#17 0x7f3ebaada6d5 in __clsm_next /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/lsm/lsm_cursor.c:904:9\r\n#18 0x7f3ebab060e8 in __wt_lsm_merge /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/lsm/lsm_merge.c:436:35\r\n#19 0x7f3ebab3c191 in __lsm_worker /data/mci/eec7f4b32cfd8eff50bd6eb953fb8a61/wiredtiger/build_posix/../src/lsm/lsm_worker.c:140:19`",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2020 at 10:46 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 01:36 GMT",
        "closed_at": "Wednesday Mar 04, 2020 at 01:36 GMT",
        "merged_at": "Wednesday Mar 04, 2020 at 01:36 GMT"
    },
    {
        "key": "WT-5668",
        "number": 5349,
        "state": "closed",
        "title": "WT-5668 Implement data format changes for prepare support for DH.",
        "body": "This is just the data format change.  In subsequent commits, we'll be setting/using the new timestamp and the prepare bit.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2020 at 05:17 GMT",
        "updated_at": "Thursday Mar 12, 2020 at 02:12 GMT",
        "closed_at": "Thursday Mar 12, 2020 at 02:11 GMT",
        "merged_at": "Thursday Mar 12, 2020 at 02:11 GMT"
    },
    {
        "key": "WT-5625",
        "number": 5348,
        "state": "closed",
        "title": "WT-5625 Repack internal page cell when txnids are cleared",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2020 at 03:50 GMT",
        "updated_at": "Tuesday Mar 03, 2020 at 23:22 GMT",
        "closed_at": "Tuesday Mar 03, 2020 at 23:22 GMT",
        "merged_at": "Tuesday Mar 03, 2020 at 23:22 GMT"
    },
    {
        "key": "WT-5719",
        "number": 5347,
        "state": "closed",
        "title": "WT-5719 Add quotes to the metadata string. Modify example to use special",
        "body": "characters.",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 19:35 GMT",
        "updated_at": "Monday Mar 02, 2020 at 22:11 GMT",
        "closed_at": "Monday Mar 02, 2020 at 22:11 GMT",
        "merged_at": "Monday Mar 02, 2020 at 22:11 GMT"
    },
    {
        "key": "WT-5682",
        "number": 5346,
        "state": "closed",
        "title": "WT-5682 Ensure that we can't apply modifies on top of tombstones",
        "body": "I wasn't able to hit the condition where we apply modifies on top of an on-page value with a set time pair (I get `WT_NOTFOUND` when trying to modify). After chatting with @michaelcahill, we think that this case shouldn't be possible and may have existed from when the rules around modifies were laxer.",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 06:36 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 23:39 GMT",
        "closed_at": "Wednesday Mar 04, 2020 at 23:39 GMT",
        "merged_at": "Wednesday Mar 04, 2020 at 23:39 GMT"
    },
    {
        "key": "WT-5462",
        "number": 5345,
        "state": "closed",
        "title": "WT-5462 Rebalance the Evergreen Python test buckets",
        "body": "Trying to keep PR runtime low.",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 04:09 GMT",
        "updated_at": "Tuesday Mar 10, 2020 at 04:14 GMT",
        "closed_at": "Tuesday Mar 10, 2020 at 04:14 GMT",
        "merged_at": "Tuesday Mar 10, 2020 at 04:14 GMT"
    },
    {
        "key": "WT-5692",
        "number": 5344,
        "state": "closed",
        "title": "WT-5692 Revert a test change hoping to fix a Python hang",
        "body": "A test case was checking statistics after runWt, which closes\r\nthe connection, which led to using the wrong stats. That check\r\nwas re-ordered (along with other changes), after which some automate\r\ntesting started hanging. Revert that bit of the change to see if is\r\nthe cause.",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 03:28 GMT",
        "updated_at": "Tuesday Mar 03, 2020 at 01:46 GMT",
        "closed_at": "Tuesday Mar 03, 2020 at 01:46 GMT",
        "merged_at": "Tuesday Mar 03, 2020 at 01:46 GMT"
    },
    {
        "key": "WT-5707",
        "number": 5343,
        "state": "closed",
        "title": "WT-5707 Reduce the test load for checkpoint stress test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 03:01 GMT",
        "updated_at": "Monday Mar 02, 2020 at 03:19 GMT",
        "closed_at": "Monday Mar 02, 2020 at 03:19 GMT",
        "merged_at": "Monday Mar 02, 2020 at 03:19 GMT"
    },
    {
        "key": "WT-5712",
        "number": 5342,
        "state": "closed",
        "title": "WT-5712 Treat history store file as internal file like metadata",
        "body": "Both metadata and history store files are created as part of Wiredtiger\r\nconnection open and they are not an application/user objects in the\r\ndatabase. Currently metadata is not listed as part of the WT utility\r\nlist, apply the same for the history store file also.",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 01:02 GMT",
        "updated_at": "Monday Mar 02, 2020 at 04:20 GMT",
        "closed_at": "Monday Mar 02, 2020 at 04:20 GMT",
        "merged_at": "Monday Mar 02, 2020 at 04:20 GMT"
    },
    {
        "key": "WT-5713",
        "number": 5341,
        "state": "closed",
        "title": "WT-5713 Don't clear the stable timestamp after recovery",
        "body": "Since we were clearing the stable timestamp after recovery, `wt` would complain when using the `-s` option since there would be no stable timestamp to compare against. There doesn't seem to be a compelling reason to clear it so the easiest fix is just to remove this logic.",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 00:59 GMT",
        "updated_at": "Monday Mar 02, 2020 at 03:33 GMT",
        "closed_at": "Monday Mar 02, 2020 at 03:33 GMT",
        "merged_at": "Monday Mar 02, 2020 at 03:33 GMT"
    },
    {
        "key": "WT-5636",
        "number": 5340,
        "state": "closed",
        "title": "WT-5636 prefix compression is slow in the history-store access pattern",
        "body": "Given the access pattern for the history-store file, I think we might want to turn off prefix compression.",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2020 at 00:19 GMT",
        "updated_at": "Monday Mar 02, 2020 at 02:26 GMT",
        "closed_at": "Monday Mar 02, 2020 at 02:26 GMT",
        "merged_at": "Monday Mar 02, 2020 at 02:26 GMT"
    },
    {
        "key": "WT-5219",
        "number": 5339,
        "state": "closed",
        "title": "WT-5219 Reverting WT-5219 and friends on mongodb-4.2",
        "body": "Below tickets (which had been vendor-ed into mongo v4.2) will be reverted on `mongodb-4.2` branch, and later vendor-ed into mongo v4.2. \r\n\r\n- WT-5219\r\n- WT-5481\r\n- WT-5489\r\n- WT-5557",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Mar 02, 2020 at 00:13 GMT",
        "updated_at": "Monday Mar 02, 2020 at 01:14 GMT",
        "closed_at": "Monday Mar 02, 2020 at 01:14 GMT",
        "merged_at": "Monday Mar 02, 2020 at 01:14 GMT"
    },
    {
        "key": "WT-5711",
        "number": 5338,
        "state": "closed",
        "title": "WT-5711 WT_REF discard during split not releasing page lookaside structures",
        "body": "@lukech, I worry that develop has diverged too far from mongodb-4.4 for us to make this kind of change absent real review of each cherry-picked commit.\r\n\r\nCould we revert mongodb-4.4 back to the last known working drop and leave it there until we're ready to merge develop into mongodb-4.4?",
        "base_ref": "mongodb-4.4",
        "created_at": "Saturday Feb 29, 2020 at 00:11 GMT",
        "updated_at": "Thursday Mar 19, 2020 at 07:05 GMT",
        "closed_at": "Monday Mar 02, 2020 at 00:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5706",
        "number": 5337,
        "state": "closed",
        "title": "WT-5706 Simplify and fix the calculation of the value size for each table entry",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 28, 2020 at 14:11 GMT",
        "updated_at": "Friday Feb 28, 2020 at 15:28 GMT",
        "closed_at": "Friday Feb 28, 2020 at 15:28 GMT",
        "merged_at": "Friday Feb 28, 2020 at 15:28 GMT"
    },
    {
        "key": "WT-5690",
        "number": 5336,
        "state": "closed",
        "title": "WT-5690 Skip removing update from hs when its newer version is stable",
        "body": "As part of rollback to stable process, it aborts the updates in the\r\norder of update list, on page and reconciled page. As part of one page\r\nvalue correction once the history updates are removed, don't remove\r\nthe visible updates again as part of processing reconciled page if the\r\nnewer version of the key is stable.",
        "base_ref": "develop",
        "created_at": "Friday Feb 28, 2020 at 06:37 GMT",
        "updated_at": "Friday Feb 28, 2020 at 07:17 GMT",
        "closed_at": "Friday Feb 28, 2020 at 07:17 GMT",
        "merged_at": "Friday Feb 28, 2020 at 07:17 GMT"
    },
    {
        "key": "WT-5698",
        "number": 5335,
        "state": "closed",
        "title": "WT-5698 Change assert from WT_ERR to WT_RET",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 23:30 GMT",
        "updated_at": "Friday Feb 28, 2020 at 02:19 GMT",
        "closed_at": "Friday Feb 28, 2020 at 02:19 GMT",
        "merged_at": "Friday Feb 28, 2020 at 02:19 GMT"
    },
    {
        "key": "WT-5702",
        "number": 5334,
        "state": "closed",
        "title": "WT-5702 Disable test_txn21.py temporarily",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 23:16 GMT",
        "updated_at": "Monday Mar 02, 2020 at 05:52 GMT",
        "closed_at": "Monday Mar 02, 2020 at 05:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5579",
        "number": 5333,
        "state": "closed",
        "title": "WT-5579 Evergreen memory sanitizer test failure",
        "body": "I have temporarily disabled the test(test_wt4105_large_doc_small_upd) because the modify operation in this test takes around 15 seconds. \r\n\r\nI have created a ticket [WT-5693](https://jira.mongodb.org/browse/WT-5693) to enable the test later.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 22:48 GMT",
        "updated_at": "Monday Mar 02, 2020 at 03:32 GMT",
        "closed_at": "Monday Mar 02, 2020 at 03:32 GMT",
        "merged_at": "Monday Mar 02, 2020 at 03:32 GMT"
    },
    {
        "key": "WT-5700",
        "number": 5332,
        "state": "closed",
        "title": "WT-5700 Add smoke script for incremental backup test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 20:17 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 20:55 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 20:55 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 20:55 GMT"
    },
    {
        "key": "WT-5699",
        "number": 5331,
        "state": "closed",
        "title": "WT-5699 Refactor incremental cursor next code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 19:41 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 21:20 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 21:20 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 21:20 GMT"
    },
    {
        "key": "WT-5695",
        "number": 5330,
        "state": "closed",
        "title": "WT-5695 Fixed incremental backup example to use O_CREAT in the backup range case",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 16:13 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 17:52 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 17:52 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 17:52 GMT"
    },
    {
        "key": "WT-5655",
        "number": 5329,
        "state": "closed",
        "title": "WT-5655 Avoid creating a tombstone when we already have a tombstone",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 05:59 GMT",
        "updated_at": "Wednesday Mar 04, 2020 at 02:14 GMT",
        "closed_at": "Wednesday Mar 04, 2020 at 02:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5500",
        "number": 5328,
        "state": "closed",
        "title": "WT-5500 Implement new history store format",
        "body": "This PR is implementing the new history store format that we've been discussing. The transaction ids have been moved out of the history store format entirely and the stop timestamp has been moved to the value. Lastly, we've added a monotonically increasing counter as the last component of the key to maintain uniqueness for multiple records with the same timestamp.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 03:51 GMT",
        "updated_at": "Monday Mar 02, 2020 at 04:21 GMT",
        "closed_at": "Monday Mar 02, 2020 at 04:21 GMT",
        "merged_at": "Monday Mar 02, 2020 at 04:21 GMT"
    },
    {
        "key": "WT-5591",
        "number": 5327,
        "state": "closed",
        "title": "WT-5591 Set aspell dictionary to en_US",
        "body": "Switch the dictionary `aspell` uses to check and replace spelling from `en` (English) to `en_US` (American English), and address spelling issues detected by the dictionary switch.\r\n\r\nI put `signalled` into the ok list as it's already been widely used in the source code (both comments and variable names). ",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 03:28 GMT",
        "updated_at": "Friday Feb 28, 2020 at 00:07 GMT",
        "closed_at": "Friday Feb 28, 2020 at 00:01 GMT",
        "merged_at": "Friday Feb 28, 2020 at 00:01 GMT"
    },
    {
        "key": "WT-4868",
        "number": 5326,
        "state": "closed",
        "title": "WT-4868 Aggregate btree write gen from leaf pages in salvage",
        "body": "Verified this fixed test_wt4156_metadata_salvage in WT-5595",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 03:10 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 23:10 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 23:10 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 23:10 GMT"
    },
    {
        "key": "WT-5583",
        "number": 5325,
        "state": "closed",
        "title": "WT-5583 Fix a dead lock in eviction server flow",
        "body": "In the eviction server code flow when there are no eviction workers,\r\nthe server itself try to evict the pages, during the page eviction\r\nflow it try to take the lock which itself is already held leads to\r\na dead lock.\r\n\r\nFix is to release the lock before evicting the page from the queue\r\nand take back the lock once it finish processing the queue.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 02:35 GMT",
        "updated_at": "Friday Feb 28, 2020 at 03:20 GMT",
        "closed_at": "Friday Feb 28, 2020 at 03:20 GMT",
        "merged_at": "Friday Feb 28, 2020 at 03:20 GMT"
    },
    {
        "key": "WT-5540",
        "number": 5324,
        "state": "closed",
        "title": "WT-5540 Disable bulk inserts into the history in hs insert updates",
        "body": "So I ended up having to update the function definitions of two extra functions as they pulled the btree from the session originally but our session in hs insert updates belongs to the original session and has the different btree.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 00:12 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 06:01 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 06:01 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 06:01 GMT"
    },
    {
        "key": "WT-5689",
        "number": 5323,
        "state": "closed",
        "title": "WT-5689 reduce work required for the cursor-pinned test.",
        "body": "@sulabhM, this change went in as part of WT-5256, [here's the commit ](https://github.com/wiredtiger/wiredtiger/commit/1ccc9203409a7032250a4547495a0c098723b8ee).\r\n\r\nAssuming your change was correct, I think we can just simplify the whole thing?",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2020 at 00:12 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 04:54 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 04:54 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 04:54 GMT"
    },
    {
        "key": "WT-4954",
        "number": 5322,
        "state": "closed",
        "title": "WT-4954 Document the duplicate log backup cursor.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 26, 2020 at 19:33 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 16:15 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 16:15 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 16:15 GMT"
    },
    {
        "key": "WT-5595",
        "number": 5321,
        "state": "closed",
        "title": "WT-5595 Fix not checking conflict against the on page value",
        "body": "Initial implementation of checking conflict against the on page value. The data mismatch problem is not reproducing but I encountered some other problems:\r\n\r\n```\r\nt: process 38702 running\r\n[1582720373:998194][38702:0x7fba1c41d440], t, file:wt, WT_SESSION.verify: __verify_ckptfrag_chk, 526: checkpoint ranges never verified: 3\r\n[1582720373:998393][38702:0x7fba1c41d440], t, file:wt, WT_SESSION.verify: __verify_filefrag_chk, 438: file ranges never verified: 3\r\n\r\nt: run FAILED\r\n############################################\r\n#  RUN PARAMETERS\r\n############################################\r\nabort=0\r\nalter=0\r\nassert_commit_timestamp=0\r\nassert_read_timestamp=0\r\nauto_throttle=1\r\nbackups=0\r\nbitcnt=6\r\nbloom=1\r\nbloom_bit_count=8\r\nbloom_hash_count=29\r\nbloom_oldest=0\r\ncache=504\r\ncache_minimum=20\r\ncheckpoints=on\r\ncheckpoint_log_size=188\r\ncheckpoint_wait=69\r\nchecksum=uncompressed\r\nchunk_size=5\r\ncompaction=0\r\ncompression=snappy\r\ndata_extend=0\r\ndata_source=file\r\ndelete_pct=35\r\ndictionary=0\r\ndirect_io=0\r\nencryption=none\r\nevict_max=1\r\nfile_type=row-store\r\nfirstfit=0\r\nhuffman_key=0\r\nhuffman_value=0\r\nindependent_thread_rng=0\r\nin_memory=0\r\ninsert_pct=4\r\ninternal_key_truncation=1\r\ninternal_page_max=16\r\nisolation=snapshot\r\nkey_gap=13\r\nkey_max=115\r\nkey_min=16\r\nleaf_page_max=9\r\nleak_memory=0\r\nlogging=1\r\nlogging_archive=1\r\nlogging_compression=snappy\r\nlogging_file_max=260915\r\nlogging_prealloc=0\r\nlsm_worker_threads=4\r\nmajor_timeout=0\r\nmemory_page_max=9\r\nmerge_max=8\r\nmmap=1\r\nmodify_pct=49\r\nops=0\r\nprefix_compression=1\r\nprefix_compression_min=0\r\nprepare=0\r\nquiet=1\r\nrandom_cursor=0\r\nread_pct=5\r\nrebalance=1\r\nrepeat_data_pct=6\r\nreverse=0\r\nrows=1000000\r\nruns=1\r\nsalvage=1\r\nsplit_pct=79\r\nstatistics=0\r\nstatistics_server=0\r\nthreads=28\r\ntimer=4\r\ntiming_stress_aggressive_sweep=0\r\ntiming_stress_checkpoint=0\r\ntiming_stress_hs_sweep=0\r\ntiming_stress_split_1=1\r\ntiming_stress_split_2=0\r\ntiming_stress_split_3=0\r\ntiming_stress_split_4=1\r\ntiming_stress_split_5=1\r\ntiming_stress_split_6=1\r\ntiming_stress_split_7=1\r\ntiming_stress_split_8=0\r\ntransaction_timestamps=1\r\ntransaction-frequency=100\r\ntruncate=1\r\nvalue_max=3564\r\nvalue_min=9\r\nverify=1\r\nwiredtiger_config=\r\nwrite_pct=7\r\n############################################\r\nt: FAILED: wts_verify/483: ret == 0 || ret == EBUSY: session.verify: file:wt: post-ops verify\r\nprocess aborting\r\nAborted (core dumped)\r\n```\r\nand metadata_salvage test is failing complaining we rollback a change.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 26, 2020 at 12:59 GMT",
        "updated_at": "Monday Mar 02, 2020 at 01:46 GMT",
        "closed_at": "Monday Mar 02, 2020 at 01:46 GMT",
        "merged_at": "Monday Mar 02, 2020 at 01:46 GMT"
    },
    {
        "key": "WT-4230",
        "number": 5320,
        "state": "closed",
        "title": "WT-4230 Remove named snapshot support",
        "body": "@ddanderson, would you please do the review? You know the Java/Python document and test suite support stuff, and that's where I'm most worried I missed something.\r\n\r\n@agorrod, there's no reason for you to do a detailed review, but it might be worth a quick skim to see if there's any obvious functionality I missed.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 26, 2020 at 02:39 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 06:13 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 06:13 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 06:13 GMT"
    },
    {
        "key": "WT-5395",
        "number": 5319,
        "state": "closed",
        "title": "WT-5395 Fix a bug in the read lock implementation when there is a lot of contention (#5140)",
        "body": "(cherry picked from commit 580d0c4f255b245e1a79ab56023e224117c32c90)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Feb 26, 2020 at 00:07 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 02:34 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 02:34 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 02:34 GMT"
    },
    {
        "key": "WT-5587",
        "number": 5318,
        "state": "closed",
        "title": "WT-5587 Limit how many checkpoints are dropped by a subsequent checkpoint #5261",
        "body": "(cherry picked from commit a19d2bff3d30fdd83086172b29161527aefc28e3)\r\n(cherry picked from commit 58baf804dd6e5a72c4e122cfb696e2d06a9fc888)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Feb 25, 2020 at 23:55 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 00:30 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 00:30 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 00:30 GMT"
    },
    {
        "key": "WT-5678",
        "number": 5317,
        "state": "closed",
        "title": "WT-5678 Fix infinite looping behaviour in history store cursor positioning",
        "body": "As part of #5295, I noticed infrequent infinite looping behavior in the positioning of the history store cursor. This is because we're comparing the embedded data store key and using this to infer something about our position in the history store which we know is not allowed.\r\n\r\nConsider a case where we have string keys 9, 10 and 11 in the history store. Since strings are encoded with a length prefix, the history store order will be 9, 10, 11. Whereas the data store order will be 10, 11, 9 as it will be sorted alphabetically. So you can imagine a case where we search for the key 10 (which doesn't exist) and position ourselves at the beginning of the entries for 11. When we realize that we have overshot and try to go back to the previous entry, we'll land on 9 (which is lexicographically greater than our target 10). So we would assume that this record was inserted in between our `search_near` and our `prev` and then attempt another `search_near` which gets us into an infinite loop.\r\n\r\nWhat we're really trying to do is figure out whether we're before or after the key that we've used with our `search_near` call so there is no need to compare each component of the key separately like we're doing now.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 23:15 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 21:36 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 21:36 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 21:36 GMT"
    },
    {
        "key": "WT-5666",
        "number": 5316,
        "state": "closed",
        "title": "WT-5666 Deleting a chunk of the namespace changes the WT_REF type",
        "body": "If we delete a chunk of the name space and evict the page, we can migrate that change up the tree, eventually deleting and evicting internal nodes, setting and internal node's `WT_REF.state` to `WT_REF_DELETED`.\r\n\r\nIf we're ever forced to re-instantiate that chunk of the name space, it's re-instantiated as a leaf page, not a subtree with both internal and leaf pages.\r\n\r\nI see two places to flip the `WT_REF` type from an internal page to a leaf page: when we delete the internal node, or when we re-instantiate the page. I did it in the first one in commit 9020de7, when we delete the internal node because it was a simpler change, but I changed my mind and did it in the second one in commit cafee99, because that matches current practice and so I think it's less likely to cause more breakage.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 20:28 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 02:52 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 02:52 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 02:52 GMT"
    },
    {
        "key": "WT-5658",
        "number": 5315,
        "state": "closed",
        "title": "WT-5658 heap-use after free in parent split code",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 06:22 GMT",
        "updated_at": "Tuesday Feb 25, 2020 at 20:47 GMT",
        "closed_at": "Tuesday Feb 25, 2020 at 20:47 GMT",
        "merged_at": "Tuesday Feb 25, 2020 at 20:47 GMT"
    },
    {
        "key": "WT-5618",
        "number": 5314,
        "state": "closed",
        "title": "WT-5618 Skip timestamp range overlap check if start timestamp is zero",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 05:20 GMT",
        "updated_at": "Tuesday Feb 25, 2020 at 11:52 GMT",
        "closed_at": "Tuesday Feb 25, 2020 at 11:52 GMT",
        "merged_at": "Tuesday Feb 25, 2020 at 11:52 GMT"
    },
    {
        "key": "WT-5434",
        "number": 5313,
        "state": "closed",
        "title": "WT-5434 Update compatibility_test_for_mongodb_releases.sh for durable history integration into MongoDB",
        "body": "* Update compatibility_test_for_mongodb_releases.sh for durable history integration into MongoDB\r\n\r\n* Remove the deprecated --enable-page-version-ts flag",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 03:57 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 02:37 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 02:37 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 02:37 GMT"
    },
    {
        "key": "WT-5667",
        "number": 5312,
        "state": "closed",
        "title": "WT-5667 Remove the usage of checkpoint cursor in test/format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 03:48 GMT",
        "updated_at": "Tuesday Feb 25, 2020 at 21:21 GMT",
        "closed_at": "Tuesday Feb 25, 2020 at 21:21 GMT",
        "merged_at": "Tuesday Feb 25, 2020 at 21:21 GMT"
    },
    {
        "key": "WT-5551",
        "number": 5311,
        "state": "closed",
        "title": "WT-5551 Fix the history store insert statistics",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 03:37 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 01:11 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 01:11 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 01:11 GMT"
    },
    {
        "key": "WT-5647",
        "number": 5310,
        "state": "closed",
        "title": "WT-5647 replace the WT_REF structure's WT_REF_READING state with a flag",
        "body": "@agorrod, this is the change that removes the `WT_REF.WT_REF_READiNG` state.\r\n\r\nAs you know, I like this change because it simplifies the `WT_REF` locking protocol a bit, because we only ever care about the `WT_REF_LOCKED` state for the purposes of thread serialization.\r\n\r\nI know you see this work a bit differently than I do, so wanted to give you a chance to see the actual change and kill it if you want to go a different direction.\r\n\r\nIf you're OK with this change, let me know and I'll find a reviewer.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 03:03 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 04:16 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 04:16 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 04:16 GMT"
    },
    {
        "key": "WT-5427",
        "number": 5309,
        "state": "closed",
        "title": "WT-5427 Rollback to stable tests",
        "body": "Along with test, a fix to perform history store cleanup from a reconciled page only when the reconciled page has updates greater than the stable timestamp.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 25, 2020 at 00:52 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 23:05 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 23:05 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 23:05 GMT"
    },
    {
        "key": "WT-5326",
        "number": 5308,
        "state": "closed",
        "title": "WT-5326 Coverity issues in cur_backup",
        "body": "Removed the condition to check if `blk != NULL` as `blk` has already been dereferenced before NULL-checking.",
        "base_ref": "develop",
        "created_at": "Monday Feb 24, 2020 at 23:11 GMT",
        "updated_at": "Tuesday Feb 25, 2020 at 02:23 GMT",
        "closed_at": "Tuesday Feb 25, 2020 at 01:30 GMT",
        "merged_at": "Tuesday Feb 25, 2020 at 01:30 GMT"
    },
    {
        "key": "WT-5651",
        "number": 5307,
        "state": "closed",
        "title": "WT-5651 Fix the RTS assert to consider error scenarios of search",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 24, 2020 at 04:01 GMT",
        "updated_at": "Tuesday Feb 25, 2020 at 08:03 GMT",
        "closed_at": "Tuesday Feb 25, 2020 at 08:03 GMT",
        "merged_at": "Tuesday Feb 25, 2020 at 08:03 GMT"
    },
    {
        "key": "WT-5525",
        "number": 5306,
        "state": "closed",
        "title": "WT-5525 Fix '__unused' field compile error on macOS",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 24, 2020 at 03:55 GMT",
        "updated_at": "Monday Feb 24, 2020 at 04:00 GMT",
        "closed_at": "Monday Feb 24, 2020 at 04:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5638",
        "number": 5305,
        "state": "closed",
        "title": "WT-5638 Ignore checking visibility of history store updates as they are implicitly committed.",
        "body": "By design any update going to history store is committed. This means that the history store pages can be assumed to be clean after reconciliation.",
        "base_ref": "develop",
        "created_at": "Monday Feb 24, 2020 at 03:55 GMT",
        "updated_at": "Monday Feb 24, 2020 at 23:50 GMT",
        "closed_at": "Monday Feb 24, 2020 at 23:50 GMT",
        "merged_at": "Monday Feb 24, 2020 at 23:50 GMT"
    },
    {
        "key": "WT-5212",
        "number": 5304,
        "state": "closed",
        "title": "WT-5212 Incremental backup data validation test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 24, 2020 at 03:04 GMT",
        "updated_at": "Tuesday Feb 25, 2020 at 03:37 GMT",
        "closed_at": "Tuesday Feb 25, 2020 at 03:37 GMT",
        "merged_at": "Tuesday Feb 25, 2020 at 03:37 GMT"
    },
    {
        "key": "WT-5593",
        "number": 5303,
        "state": "closed",
        "title": "WT-5593 Reconcilation is done for checkpoint if it has no more entries left to write",
        "body": "Thanks @hbokhari for the tip of running `evict-btree-hs.py`. That makes debug much easier.\r\n\r\nThe problem in this case is we did some unnecessary work when checkpoint has nothing to write but still have some updates saved because they are not visible. We never write that empty page to disk but the extra work makes its parent page to think it has a child which actually does not exist.",
        "base_ref": "develop",
        "created_at": "Monday Feb 24, 2020 at 02:35 GMT",
        "updated_at": "Monday Feb 24, 2020 at 05:53 GMT",
        "closed_at": "Monday Feb 24, 2020 at 05:53 GMT",
        "merged_at": "Monday Feb 24, 2020 at 05:53 GMT"
    },
    {
        "key": "WT-5605",
        "number": 5302,
        "state": "closed",
        "title": "WT-5605 Updating test checkpoint to no longer use checkpoint cursors and improve usage of timestamps.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 23, 2020 at 23:22 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 22:50 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 22:50 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 22:50 GMT"
    },
    {
        "key": "WT-5650",
        "number": 5301,
        "state": "closed",
        "title": "WT-5650 A race is possible between reading the WT_PAGE.modify field and the page being dirtied.",
        "body": "@agorrod, see a more detailed discussion in the JIRA ticket.\r\n\r\nI have no opinion on whether or not it's actually a problem if the page is dirtied after taking a reference to the (presumably NULL) page modify structure during a checkpoint, but the commit in WT-2204 makes me think it was believed to be a problem at that time (November, 2015).",
        "base_ref": "develop",
        "created_at": "Sunday Feb 23, 2020 at 19:16 GMT",
        "updated_at": "Monday Feb 24, 2020 at 04:34 GMT",
        "closed_at": "Monday Feb 24, 2020 at 04:34 GMT",
        "merged_at": "Monday Feb 24, 2020 at 04:34 GMT"
    },
    {
        "key": "WT-5648",
        "number": 5300,
        "state": "closed",
        "title": "WT-5648 add a leaf or internal page type flag to the WT_REF structure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Feb 22, 2020 at 19:26 GMT",
        "updated_at": "Monday Feb 24, 2020 at 05:40 GMT",
        "closed_at": "Monday Feb 24, 2020 at 05:40 GMT",
        "merged_at": "Monday Feb 24, 2020 at 05:40 GMT"
    },
    {
        "key": "WT-5246",
        "number": 5299,
        "state": "closed",
        "title": "WT-5246 First pass at incremental backup documentation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 22:29 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 19:54 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 19:54 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 19:54 GMT"
    },
    {
        "key": "WT-5045",
        "number": 5298,
        "state": "closed",
        "title": "WT-5045 Add more statistics tracking where checkpoint spends time",
        "body": "Added five new timing statistics to the prepare stage of checkpoint: `txn_checkpoint_prep_running`, `txn_checkpoint_prep_max`, `txn_checkpoint_prep_min`, `txn_checkpoint_prep_recent` and `txn_checkpoint_prep_total`. These prepare statistics were chosen to correspond to the existing timing statistics for (end-to-end) checkpoint, which allows for straightforward comparison and analysis between them.",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 21:06 GMT",
        "updated_at": "Monday Feb 24, 2020 at 19:50 GMT",
        "closed_at": "Monday Feb 24, 2020 at 19:50 GMT",
        "merged_at": "Monday Feb 24, 2020 at 19:50 GMT"
    },
    {
        "key": "WT-5215",
        "number": 5297,
        "state": "closed",
        "title": "WT-5215 Add basic randomized test for doing incremental backups.",
        "body": "We use various combinations of full and incremental backup and checkpoints.\r\nSchema changes include creation, drop and rename.\r\nChanges to file data include inserts, updates, modify and remove.",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 20:47 GMT",
        "updated_at": "Thursday Feb 27, 2020 at 19:45 GMT",
        "closed_at": "Thursday Feb 27, 2020 at 19:45 GMT",
        "merged_at": "Thursday Feb 27, 2020 at 19:45 GMT"
    },
    {
        "key": "WT-5525",
        "number": 5296,
        "state": "closed",
        "title": "WT-5525 free up 3B in the WT_REF structure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 20:08 GMT",
        "updated_at": "Monday Feb 24, 2020 at 00:13 GMT",
        "closed_at": "Friday Feb 21, 2020 at 22:47 GMT",
        "merged_at": "Friday Feb 21, 2020 at 22:47 GMT"
    },
    {
        "key": "WT-5641",
        "number": 5295,
        "state": "closed",
        "title": "WT-5641 Clear history store content when deleting a key due to a globally visible tombstone",
        "body": "If a stop time pair for a cell becomes globally visible, we destroy the key in reconciliation. When we do this, we need to begin clearing out history store content for that key.\r\n\r\nImagine a case where we have timestamps 1, 2, 3 in the history store and 4 on the page itself. If you apply a non-timestamped tombstone, you will destroy the key next time you reconcile the page. However, until the next checkpoint that history content will remain there. Now let's follow up with an update at timestamp 5 to recreate the key. Now if we do a read at timestamp 4, the onpage value (5) won't be visible to us so we'll go into history store and read timestamp 3.\r\n\r\nThere were also a few other instances where we see non-timestamped tombstones when inserting records into the history store where we need to delete content for that key.",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 07:18 GMT",
        "updated_at": "Friday Mar 06, 2020 at 03:22 GMT",
        "closed_at": "Friday Mar 06, 2020 at 03:22 GMT",
        "merged_at": "Friday Mar 06, 2020 at 03:22 GMT"
    },
    {
        "key": "WT-5628",
        "number": 5294,
        "state": "closed",
        "title": "WT-5628 Don't perform rollback to stable on files that don't exist",
        "body": "As part of rollback to stable ignore performing rollback to stable operation on files that don't exist and also avoid performing the checkpoint and history store search when in in_memory configuration mode",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 04:45 GMT",
        "updated_at": "Monday Feb 24, 2020 at 03:27 GMT",
        "closed_at": "Monday Feb 24, 2020 at 03:27 GMT",
        "merged_at": "Monday Feb 24, 2020 at 03:27 GMT"
    },
    {
        "key": "WT-5644",
        "number": 5293,
        "state": "closed",
        "title": "WT-5644 Fix the assert in __rec_append_orig_value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 04:16 GMT",
        "updated_at": "Friday Feb 21, 2020 at 05:17 GMT",
        "closed_at": "Friday Feb 21, 2020 at 05:16 GMT",
        "merged_at": "Friday Feb 21, 2020 at 05:16 GMT"
    },
    {
        "key": "WT-5602",
        "number": 5292,
        "state": "closed",
        "title": "WT-5602 Should not clear transaction ids if the page is never written to disk",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 02:28 GMT",
        "updated_at": "Friday Feb 21, 2020 at 03:13 GMT",
        "closed_at": "Friday Feb 21, 2020 at 03:13 GMT",
        "merged_at": "Friday Feb 21, 2020 at 03:13 GMT"
    },
    {
        "key": "WT-5556",
        "number": 5291,
        "state": "closed",
        "title": "WT-5556 Verify of a file should verify its history store content too",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2020 at 00:41 GMT",
        "updated_at": "Tuesday Feb 25, 2020 at 00:00 GMT",
        "closed_at": "Tuesday Feb 25, 2020 at 00:00 GMT",
        "merged_at": "Tuesday Feb 25, 2020 at 00:00 GMT"
    },
    {
        "key": "WT-5640",
        "number": 5290,
        "state": "closed",
        "title": "WT-5640 Ignore consecutive tombstones when moving updates to history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 20, 2020 at 22:12 GMT",
        "updated_at": "Thursday Feb 20, 2020 at 23:41 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 23:41 GMT",
        "merged_at": "Thursday Feb 20, 2020 at 23:41 GMT"
    },
    {
        "key": "WT-5214",
        "number": 5289,
        "state": "closed",
        "title": "WT-5214 Add more incremental error cases",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 20, 2020 at 19:48 GMT",
        "updated_at": "Monday Feb 24, 2020 at 23:07 GMT",
        "closed_at": "Monday Feb 24, 2020 at 23:07 GMT",
        "merged_at": "Monday Feb 24, 2020 at 23:07 GMT"
    },
    {
        "key": "WT-5581",
        "number": 5288,
        "state": "closed",
        "title": "WT-5581 Fix memory leaks",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 20, 2020 at 09:07 GMT",
        "updated_at": "Friday Feb 21, 2020 at 00:58 GMT",
        "closed_at": "Friday Feb 21, 2020 at 00:58 GMT",
        "merged_at": "Friday Feb 21, 2020 at 00:58 GMT"
    },
    {
        "key": "WT-5582",
        "number": 5287,
        "state": "closed",
        "title": "WT-5582 Fix not caching cursors on data files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 20, 2020 at 02:41 GMT",
        "updated_at": "Thursday Feb 20, 2020 at 03:15 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 03:15 GMT",
        "merged_at": "Thursday Feb 20, 2020 at 03:15 GMT"
    },
    {
        "key": "WT-5552",
        "number": 5286,
        "state": "closed",
        "title": "WT-5552 Checkpoint reconciliation and page splits free the WT_REF.addr field without locking",
        "body": "@agorrod, here's the change to protect callers of `__wt_ref_addr_free()` (including those calling it through `__wt_ref_block_free()`).\r\n\r\nThe 706444e commit is the change for `__split_parent()`, the 2dec2f9 commit is a change for checkpoint reconciliation.\r\n\r\nIt feels to me like the reconciliation commit shouldn't be necessary, and I've not been able to make it actually happen in a test, but I can't think of any reason it's safe.\r\n\r\nThe other uses of these functions are safe as far as I can tell.\r\n\r\nCan you please choose someone to do the review?\r\n\r\nThis is only lightly tested, the develop branch can't handle the level of stress required to test this change. Maybe we should let this change sit until testing is possible?",
        "base_ref": "develop",
        "created_at": "Thursday Feb 20, 2020 at 00:31 GMT",
        "updated_at": "Friday Feb 21, 2020 at 16:46 GMT",
        "closed_at": "Friday Feb 21, 2020 at 16:46 GMT",
        "merged_at": "Friday Feb 21, 2020 at 16:46 GMT"
    },
    {
        "key": "WT-5632",
        "number": 5285,
        "state": "closed",
        "title": "WT-5632 Dont write a stop timestamp of 1 and update verify to match.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 20, 2020 at 00:16 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 02:15 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 04:13 GMT",
        "merged_at": "Thursday Feb 20, 2020 at 04:13 GMT"
    },
    {
        "key": "WT-5633",
        "number": 5284,
        "state": "closed",
        "title": "WT-5633 Fix another assertion for reconciling fixed length column store",
        "body": "I kept hitting this when running `test/format` for a fixed-length column store configuration. The change is along the same lines as #5278.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 19, 2020 at 09:23 GMT",
        "updated_at": "Thursday Feb 20, 2020 at 03:31 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 03:31 GMT",
        "merged_at": "Thursday Feb 20, 2020 at 03:31 GMT"
    },
    {
        "key": "WT-5603",
        "number": 5283,
        "state": "closed",
        "title": "WT-5603 Should not continue in-memory reconciliation if there are failures",
        "body": "The problem is I misunderstood WT_TRET macro in WT-5320. We should not continue reconciliation if ret is not zero.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 19, 2020 at 04:05 GMT",
        "updated_at": "Thursday Feb 20, 2020 at 02:12 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 02:12 GMT",
        "merged_at": "Thursday Feb 20, 2020 at 02:12 GMT"
    },
    {
        "key": "WT-5547",
        "number": 5282,
        "state": "closed",
        "title": "WT-5547 Disable tests for columnar store that require rollback to stable support",
        "body": "With current implementation of rollback to stable, the column store\r\ntypes are not working. Comment them in the tests until the column\r\nstore is fixed.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 19, 2020 at 00:22 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 23:02 GMT",
        "closed_at": "Wednesday Feb 26, 2020 at 23:02 GMT",
        "merged_at": "Wednesday Feb 26, 2020 at 23:02 GMT"
    },
    {
        "key": "WT-5626",
        "number": 5281,
        "state": "closed",
        "title": "WT-5626 Remove assert which checks for newer updates in the history store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 18, 2020 at 23:40 GMT",
        "updated_at": "Thursday Feb 20, 2020 at 04:11 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 04:10 GMT",
        "merged_at": "Thursday Feb 20, 2020 at 04:10 GMT"
    },
    {
        "key": "WT-5624",
        "number": 5280,
        "state": "closed",
        "title": "WT-5624 Fix test_backup12.py to use range incremental backup.",
        "body": "This test is now updated to use the blocks returned by incremental. It was only doing full-file copy all the time.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 18, 2020 at 19:17 GMT",
        "updated_at": "Tuesday Feb 18, 2020 at 22:25 GMT",
        "closed_at": "Tuesday Feb 18, 2020 at 22:25 GMT",
        "merged_at": "Tuesday Feb 18, 2020 at 22:24 GMT"
    },
    {
        "key": "WT-5620",
        "number": 5279,
        "state": "closed",
        "title": "WT-5620 Fix ignorning TOMBSTONE/Stop time pair for HS",
        "body": "Ignoring TOMBSTONE/Stop time pair during search for every scenario\r\nhas visibility problems in corner cases. Fix it to ignore only\r\nduring rollback to stable.\r\n\r\nTransaction id is not required to restore during rollback to stable\r\nas there is no snapshot requirement because of no parallel transactions.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 18, 2020 at 02:39 GMT",
        "updated_at": "Wednesday Feb 19, 2020 at 04:55 GMT",
        "closed_at": "Wednesday Feb 19, 2020 at 04:55 GMT",
        "merged_at": "Wednesday Feb 19, 2020 at 04:55 GMT"
    },
    {
        "key": "WT-5610",
        "number": 5278,
        "state": "closed",
        "title": "WT-5610 Fix assertion for reconciling fixed length column store",
        "body": "For the fixed-length column store, we unset `WT_REC_HS`. Therefore, this condition needs to be part of the assertion.",
        "base_ref": "develop",
        "created_at": "Monday Feb 17, 2020 at 07:20 GMT",
        "updated_at": "Tuesday Feb 18, 2020 at 04:35 GMT",
        "closed_at": "Tuesday Feb 18, 2020 at 04:35 GMT",
        "merged_at": "Tuesday Feb 18, 2020 at 04:35 GMT"
    },
    {
        "key": "WT-5212",
        "number": 5277,
        "state": "closed",
        "title": "WT-5212 incremental backup data validation tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 17, 2020 at 05:39 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:23 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 10:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5612",
        "number": 5276,
        "state": "closed",
        "title": "WT-5612 History store cleanup for non-timestamped tables",
        "body": "There is no need of any history store values for non-timestamped\r\ntables when there are no old running transactions in parallel as\r\nthe newer transactions can see the newer data that is visible in\r\nthe data store. So clean the history store for the non-timestamped\r\ntables whenever rollback to stable is called.",
        "base_ref": "develop",
        "created_at": "Monday Feb 17, 2020 at 03:07 GMT",
        "updated_at": "Friday Feb 21, 2020 at 06:26 GMT",
        "closed_at": "Friday Feb 21, 2020 at 06:26 GMT",
        "merged_at": "Friday Feb 21, 2020 at 06:26 GMT"
    },
    {
        "key": "WT-5613",
        "number": 5275,
        "state": "closed",
        "title": "WT-5613 Remove birthmark update type",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 17, 2020 at 03:01 GMT",
        "updated_at": "Monday Feb 17, 2020 at 06:04 GMT",
        "closed_at": "Monday Feb 17, 2020 at 06:04 GMT",
        "merged_at": "Monday Feb 17, 2020 at 06:04 GMT"
    },
    {
        "key": "WT-5457",
        "number": 5274,
        "state": "closed",
        "title": "WT-5457 Checkpoint should always flush the disk image to disk",
        "body": "@keithbostic I reverted the logic in rec_split_write to before WT-5320. In WT-5320, I changed it because I didn't realise checkpoint also started to go through the same code path and some tests were failing. In this change, I added a check to force checkpoint to always flush the disk image and it fixed the problem.",
        "base_ref": "develop",
        "created_at": "Monday Feb 17, 2020 at 01:44 GMT",
        "updated_at": "Tuesday Feb 18, 2020 at 03:32 GMT",
        "closed_at": "Tuesday Feb 18, 2020 at 03:32 GMT",
        "merged_at": "Tuesday Feb 18, 2020 at 03:32 GMT"
    },
    {
        "key": "WT-5518",
        "number": 5273,
        "state": "closed",
        "title": "WT-5518 Split-parent code can race with other threads when checking the WT_REF.state",
        "body": "@agorrod, @bvpvamsikrishna, can one of you please assign a reviewer?",
        "base_ref": "develop",
        "created_at": "Sunday Feb 16, 2020 at 22:55 GMT",
        "updated_at": "Tuesday Feb 18, 2020 at 16:18 GMT",
        "closed_at": "Tuesday Feb 18, 2020 at 16:18 GMT",
        "merged_at": "Tuesday Feb 18, 2020 at 16:18 GMT"
    },
    {
        "key": "WT-5611",
        "number": 5272,
        "state": "closed",
        "title": "WT-5611 Don't write prepare updates with larger durable timestamp than checkpoint timestamp to data store",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 05:34 GMT",
        "updated_at": "Tuesday Feb 18, 2020 at 04:21 GMT",
        "closed_at": "Tuesday Feb 18, 2020 at 04:21 GMT",
        "merged_at": "Tuesday Feb 18, 2020 at 04:21 GMT"
    },
    {
        "key": "WT-5566",
        "number": 5271,
        "state": "closed",
        "title": "WT-5566 Update rollback to stable tests to use new statistics",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 04:36 GMT",
        "updated_at": "Friday Feb 14, 2020 at 06:21 GMT",
        "closed_at": "Friday Feb 14, 2020 at 06:21 GMT",
        "merged_at": "Friday Feb 14, 2020 at 06:21 GMT"
    },
    {
        "key": "WT-5469",
        "number": 5270,
        "state": "closed",
        "title": "WT-5469 Support mixing timestamped and non-timestamped updates",
        "body": "* When inserting a non-timestamped update into the history store, we should delete all history store records for that key to avoid visibility issues.\r\n* We need to stop ignoring tombstones for history store if they have a transaction id and timestamp of 0 (this means that we truly intend to remove the key).",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 04:26 GMT",
        "updated_at": "Friday Feb 21, 2020 at 07:01 GMT",
        "closed_at": "Friday Feb 21, 2020 at 07:01 GMT",
        "merged_at": "Friday Feb 21, 2020 at 07:01 GMT"
    },
    {
        "key": "WT-5609",
        "number": 5269,
        "state": "closed",
        "title": "WT-5609 Use snapshot isolation whenever we use history store cursors in verification",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 04:22 GMT",
        "updated_at": "Friday Feb 14, 2020 at 04:30 GMT",
        "closed_at": "Friday Feb 14, 2020 at 04:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5607",
        "number": 5268,
        "state": "closed",
        "title": "WT-5607 Verify history store fix",
        "body": "When the while loop finishes, ret is going to be WT_ERR_NOTFOUND, which is expected behaviour and totally cool!\r\n\r\nI removed this code after a comment from @tetsuo-cpp  and managed to overlook this. Sorry about that!",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 04:11 GMT",
        "updated_at": "Friday Feb 14, 2020 at 06:07 GMT",
        "closed_at": "Friday Feb 14, 2020 at 06:07 GMT",
        "merged_at": "Friday Feb 14, 2020 at 06:07 GMT"
    },
    {
        "key": "WT-5607",
        "number": 5267,
        "state": "closed",
        "title": "WT-5607 Verify history store fix",
        "body": "When the while loop finishes, ret is going to be WT_ERR_NOTFOUND, which is expected behaviour and totally cool! \r\n\r\nI removed this code after a comment from @tetsuo-cpp and managed to overlook this. Sorry about that!",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 03:36 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:09 GMT",
        "closed_at": "Friday Feb 14, 2020 at 04:10 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5541",
        "number": 5266,
        "state": "closed",
        "title": "WT-5541 Use snapshot isolation whenever we use history store cursors in verification",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 03:31 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:31 GMT",
        "closed_at": "Friday Feb 14, 2020 at 03:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5570",
        "number": 5265,
        "state": "closed",
        "title": "WT-5570 code refactoring when allocating update for TOMBSTONE",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 01:09 GMT",
        "updated_at": "Friday Feb 14, 2020 at 06:20 GMT",
        "closed_at": "Friday Feb 14, 2020 at 06:20 GMT",
        "merged_at": "Friday Feb 14, 2020 at 06:20 GMT"
    },
    {
        "key": "WT-5565",
        "number": 5264,
        "state": "closed",
        "title": "WT-5565 Clear WT_SESSION_LOCKED_PASS before eviction server starts to evict pages",
        "body": "In case there is only one eviction thread, eviction server will also evicit\r\npages. Clear the WT_SESSION_LOCKED_PASS flag before it starts to do that.",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 00:26 GMT",
        "updated_at": "Friday Feb 14, 2020 at 05:02 GMT",
        "closed_at": "Friday Feb 14, 2020 at 05:02 GMT",
        "merged_at": "Friday Feb 14, 2020 at 05:02 GMT"
    },
    {
        "key": "WT-5598",
        "number": 5263,
        "state": "closed",
        "title": "WT-5598 __verify_timestamp_to_pretty_string returns local buffer to the caller",
        "body": "\u2026s freed before access",
        "base_ref": "develop",
        "created_at": "Friday Feb 14, 2020 at 00:11 GMT",
        "updated_at": "Friday Feb 14, 2020 at 04:11 GMT",
        "closed_at": "Friday Feb 14, 2020 at 04:11 GMT",
        "merged_at": "Friday Feb 14, 2020 at 04:11 GMT"
    },
    {
        "key": "WT-5597",
        "number": 5262,
        "state": "closed",
        "title": "WT-5597 Fix the history store file access during recovery",
        "body": "Fix the scenarios where the history store file doesn't\r\nexist in metadata during recovery.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 23:24 GMT",
        "updated_at": "Friday Feb 14, 2020 at 05:59 GMT",
        "closed_at": "Friday Feb 14, 2020 at 05:59 GMT",
        "merged_at": "Friday Feb 14, 2020 at 05:59 GMT"
    },
    {
        "key": "WT-5587",
        "number": 5261,
        "state": "closed",
        "title": "WT-5587 Limit how many checkpoints are dropped by a subsequent checkpoint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 22:46 GMT",
        "updated_at": "Monday Feb 17, 2020 at 00:09 GMT",
        "closed_at": "Monday Feb 17, 2020 at 00:09 GMT",
        "merged_at": "Monday Feb 17, 2020 at 00:09 GMT"
    },
    {
        "key": "WT-5596",
        "number": 5260,
        "state": "closed",
        "title": "WT-5596 Increase format stress testing scope.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 21:49 GMT",
        "updated_at": "Saturday Feb 15, 2020 at 01:16 GMT",
        "closed_at": "Saturday Feb 15, 2020 at 01:16 GMT",
        "merged_at": "Saturday Feb 15, 2020 at 01:16 GMT"
    },
    {
        "key": "WT-5590",
        "number": 5259,
        "state": "closed",
        "title": "WT-5590 Fix s_string failures.",
        "body": "@keithbostic This should be quick. I fixed the various complaints from s_string.\r\nNotably however, I added `LAS` back to s_string.ok because it is used in `NEWS` in the check-in message for a release. ",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 18:57 GMT",
        "updated_at": "Thursday Feb 13, 2020 at 20:42 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 20:42 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 20:42 GMT"
    },
    {
        "key": "WT-5589",
        "number": 5258,
        "state": "closed",
        "title": "WT-5589 Fix verification of force_stop configuration setting.",
        "body": "There was a commented out error case for incremental that I debugged/fixed today.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 18:20 GMT",
        "updated_at": "Thursday Feb 13, 2020 at 20:43 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 20:42 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 20:42 GMT"
    },
    {
        "key": "WT-5150",
        "number": 5257,
        "state": "closed",
        "title": "WT-5150 Fix the check to find out whethere LAS is empty (#4908)",
        "body": "Sweep server should periodically clean the LAS obsolete\r\nentries when there as any tables are dropped or if the LAS\r\nnot empty. Fix the check that leads to not to remove the\r\nobsolete entries when there are no tables dropped.\r\n\r\n(cherry picked from commit a74b4299f9cd5701c580cae502a3f81585a4d89f)",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Feb 13, 2020 at 05:22 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:35 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 23:00 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 23:00 GMT"
    },
    {
        "key": "WT-5425",
        "number": 5256,
        "state": "closed",
        "title": "WT-5425 Add a new verbose flag to print the rollback to stable operation",
        "body": "- Added the verbose flag `WT_VERB_RTS`\r\n- Added new `__wt_verbose` messages to the rollback to stable code. ",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 05:01 GMT",
        "updated_at": "Thursday Feb 13, 2020 at 22:26 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 22:25 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 22:25 GMT"
    },
    {
        "key": "WT-5584",
        "number": 5255,
        "state": "closed",
        "title": "WT-5584 Change format to ignore Evergreen timestamps in configuration files.",
        "body": "Fix testing fallout from WT-5538.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 01:28 GMT",
        "updated_at": "Thursday Feb 13, 2020 at 01:49 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 01:49 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 01:49 GMT"
    },
    {
        "key": "WT-5521",
        "number": 5254,
        "state": "closed",
        "title": "WT-5521 Cache stuck during format initial load, configured with library checkpoints",
        "body": "Fix testing fallout.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2020 at 00:59 GMT",
        "updated_at": "Thursday Feb 13, 2020 at 01:28 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 01:28 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 01:28 GMT"
    },
    {
        "key": "WT-5576",
        "number": 5253,
        "state": "closed",
        "title": "WT-5576 Set lookaside score to zero until a replacement is identified.",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Feb 12, 2020 at 23:43 GMT",
        "updated_at": "Thursday Feb 13, 2020 at 04:27 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 04:27 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 04:27 GMT"
    },
    {
        "key": "WT-5575",
        "number": 5252,
        "state": "closed",
        "title": "WT-5575 Revert the test modification that was wrong",
        "body": "In first version of durable history, this test was modified\r\nto expect latest value after restart and which was wrong\r\naccording to the stable timestamp.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Feb 12, 2020 at 22:52 GMT",
        "updated_at": "Thursday Feb 13, 2020 at 00:20 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 00:20 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 00:20 GMT"
    },
    {
        "key": "WT-5371",
        "number": 5251,
        "state": "closed",
        "title": "WT-5371 Skip usec time check on Windows.",
        "body": "@ddanderson Please review this small test change. In particular, do you know if my supposition that some Windows systems lack usec granularity? I recall that from a while ago but, well, it was a while ago and I'm far from expert on anything Windows.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 12, 2020 at 16:48 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 19:09 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 19:09 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 19:09 GMT"
    },
    {
        "key": "WT-5555",
        "number": 5250,
        "state": "closed",
        "title": "WT-5555 Update base write gen to the maximum write gen we have seen in recovery",
        "body": "I got a working fix by reseting S2C(session)->max_write_gen and S2C(session)->base_write_gen in recovery.\r\n\r\nHowever, this is really a hack as S2C(session)->base_write_gen should not change.\r\n\r\nWe set base write gen before recovery so I don't know a better way to tackle this. Any ideas?",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 12, 2020 at 06:02 GMT",
        "updated_at": "Friday Feb 14, 2020 at 03:43 GMT",
        "closed_at": "Friday Feb 14, 2020 at 03:43 GMT",
        "merged_at": "Friday Feb 14, 2020 at 03:43 GMT"
    },
    {
        "key": null,
        "number": 5249,
        "state": "closed",
        "title": "Temp merge develop",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Feb 12, 2020 at 01:06 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 01:31 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 01:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5567",
        "number": 5248,
        "state": "closed",
        "title": "WT-5567 Fix an assert in txn_read always be true",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Feb 12, 2020 at 00:35 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 05:07 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 05:07 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 05:07 GMT"
    },
    {
        "key": "WT-5509",
        "number": 5247,
        "state": "closed",
        "title": "WT-5509 Enable disabled unit tests from test_util01",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 11, 2020 at 23:42 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:31 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 05:31 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 05:31 GMT"
    },
    {
        "key": "WT-5564",
        "number": 5246,
        "state": "closed",
        "title": "WT-5564 Use wt_buf_set so the buffer size gets set.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 11, 2020 at 23:37 GMT",
        "updated_at": "Tuesday Feb 11, 2020 at 23:55 GMT",
        "closed_at": "Tuesday Feb 11, 2020 at 23:55 GMT",
        "merged_at": "Tuesday Feb 11, 2020 at 23:55 GMT"
    },
    {
        "key": "WT-5549",
        "number": 5245,
        "state": "closed",
        "title": "WT-5549 Don't let the checkpoint to skip the history store",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 11, 2020 at 07:00 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 04:11 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 04:11 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 04:11 GMT"
    },
    {
        "key": "WT-5563",
        "number": 5244,
        "state": "closed",
        "title": "WT-5563 Transactions ID are getting wiped which causes errors in WT Verify",
        "body": "This PR aims to fix the current verify bug that happens upon startup of database. Talked with @tetsuo-cpp and @sulabhM, and reached a consensus that we will stop verifying the start transaction ID from the data store for now.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 11, 2020 at 05:50 GMT",
        "updated_at": "Friday Feb 14, 2020 at 03:38 GMT",
        "closed_at": "Friday Feb 14, 2020 at 03:38 GMT",
        "merged_at": "Friday Feb 14, 2020 at 03:38 GMT"
    },
    {
        "key": "WT-5424",
        "number": 5243,
        "state": "closed",
        "title": "WT-5424 Add statistics for rollback to stable",
        "body": "I added the following three new statistics:\r\n\r\n- `txn_rollback_keys_removed`: Number of keys removed by the rollback to stable\r\n- `txn_rollback_keys_restored`: Number of keys restored by the rollback to stable\r\n- `txn_rollback_pages_visited`: Number of pages visited by the rollback to stable\r\n\r\nRollback to stable statistics are already available for the number of updates aborted and the number of updates removed from the history store.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 11, 2020 at 04:44 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 05:41 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 05:41 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 05:41 GMT"
    },
    {
        "key": "WT-5538",
        "number": 5242,
        "state": "closed",
        "title": "WT-5538 Change format to ignore Evergreen timestamps in configuration files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 10, 2020 at 22:35 GMT",
        "updated_at": "Monday Feb 10, 2020 at 22:56 GMT",
        "closed_at": "Monday Feb 10, 2020 at 22:56 GMT",
        "merged_at": "Monday Feb 10, 2020 at 22:56 GMT"
    },
    {
        "key": "WT-5554",
        "number": 5241,
        "state": "closed",
        "title": "WT-5554 Account for logpath when retrieving file size.",
        "body": "@ddanderson primarilly I'd like you to review the example program changes. They're not pretty, but allowed me to test this with a log path to reproduce Gregory's issue and test the fix. \r\n@keithbostic please review the library change. If you think of a more elegant way to do it, let me know. This doesn't feel horrible, but maybe there's a better interface I'm not remembering.",
        "base_ref": "develop",
        "created_at": "Monday Feb 10, 2020 at 20:55 GMT",
        "updated_at": "Tuesday Feb 11, 2020 at 23:27 GMT",
        "closed_at": "Tuesday Feb 11, 2020 at 23:27 GMT",
        "merged_at": "Tuesday Feb 11, 2020 at 23:27 GMT"
    },
    {
        "key": "WT-5553",
        "number": 5240,
        "state": "closed",
        "title": "WT-5553 Return error if primary cursor is not an incremental source.",
        "body": "@ddanderson This is the identical code change, but adds the error test code to an existing Python test instead of creating a new file. Please review.",
        "base_ref": "develop",
        "created_at": "Monday Feb 10, 2020 at 19:46 GMT",
        "updated_at": "Monday Feb 10, 2020 at 21:07 GMT",
        "closed_at": "Monday Feb 10, 2020 at 21:07 GMT",
        "merged_at": "Monday Feb 10, 2020 at 21:07 GMT"
    },
    {
        "key": null,
        "number": 5239,
        "state": "closed",
        "title": "Fixed cursor caching test to work with durable history, which now uses cached cursors for the history store.",
        "body": "Skipped a few tests that do not work with history store, we'll need to fix these separately.\r\nRemoved a stray call to breakpoint.",
        "base_ref": "wt-5501-avoid-using-default-session-for-configuraing-history-store",
        "created_at": "Monday Feb 10, 2020 at 19:30 GMT",
        "updated_at": "Tuesday Feb 11, 2020 at 14:23 GMT",
        "closed_at": "Monday Feb 10, 2020 at 21:36 GMT",
        "merged_at": "Monday Feb 10, 2020 at 21:36 GMT"
    },
    {
        "key": "WT-5558",
        "number": 5238,
        "state": "closed",
        "title": "WT-5558 use durable timestamp from the selected update",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 10, 2020 at 06:44 GMT",
        "updated_at": "Tuesday Feb 11, 2020 at 00:18 GMT",
        "closed_at": "Tuesday Feb 11, 2020 at 00:18 GMT",
        "merged_at": "Tuesday Feb 11, 2020 at 00:18 GMT"
    },
    {
        "key": "WT-5557",
        "number": 5237,
        "state": "closed",
        "title": "WT-5557 The wrong page type is returned when checking the on-page cell.",
        "body": "Use proper enum macro to find out page type",
        "base_ref": "develop",
        "created_at": "Monday Feb 10, 2020 at 05:34 GMT",
        "updated_at": "Monday Feb 10, 2020 at 21:15 GMT",
        "closed_at": "Monday Feb 10, 2020 at 21:14 GMT",
        "merged_at": "Monday Feb 10, 2020 at 21:14 GMT"
    },
    {
        "key": "WT-5541",
        "number": 5236,
        "state": "closed",
        "title": "WT-5541 Use snapshot isolation whenever we use history store cursors \u2026",
        "body": "\u2026in verification",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 10, 2020 at 03:13 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 03:57 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 03:57 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 03:57 GMT"
    },
    {
        "key": "WT-5423",
        "number": 5235,
        "state": "closed",
        "title": "WT-5423 Convert a history store modified value into a full update",
        "body": "I added code to the `__txn_abort_row_replace_with_hs_value` function in `txn/txn_rollback_to_stable.c` so that if the stable timestamp corresponds to a modify value in the history store, the value is converted to a full update. This functionality is tested in `test_rollback_to_stable04.py`.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 10, 2020 at 01:10 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 05:44 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 05:43 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 05:43 GMT"
    },
    {
        "key": "WT-5383",
        "number": 5234,
        "state": "closed",
        "title": "WT-5383 2020 Copyright notices",
        "body": "Currently these are the only files coming up with errors on the script. I have categorised them for discussion before merging. \r\n\r\n**Without Any Notice** (Let me know if I should add them)\r\n```\r\ndist/s_goto.py: copyright information is incorrect\r\ndist/prototypes.py: copyright information is incorrect\r\ndist/s_comment.py: copyright information is incorrect\r\nevg_patch_build.py: copyright information is incorrect\r\nsrc/docs/build-javadoc.sh: copyright information is incorrect\r\nsrc/docs/style/footer.html: copyright information is incorrect\r\n```\r\n\r\n**File Does Not Exist**\r\n`lang/python/wiredtiger.py: copyright information is incorrect`\r\n**Unique**\r\n`test/suite/test_debug_mode02.py: copyright information is incorrect`\r\n**Copyright is correct but appears in the script as incorrect.**\r\n`src/utilities/util_cpyright.c: copyright information is incorrect`",
        "base_ref": "develop",
        "created_at": "Sunday Feb 09, 2020 at 23:52 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:10 GMT",
        "closed_at": "Tuesday Feb 11, 2020 at 00:01 GMT",
        "merged_at": "Tuesday Feb 11, 2020 at 00:01 GMT"
    },
    {
        "key": "WT-5521",
        "number": 5233,
        "state": "closed",
        "title": "WT-5521 Cache stuck during format initial load, configured with library checkpoints",
        "body": "@agorrod, if we have a relatively small cache and do format's initial load of the table while configured with library checkpoints, we pretty quickly can get into a stuck cache: we've created large leaf pages that can't be evicted while the checkpoint is running, and we fail.\r\n\r\nI was never able to quite figure out why the system stalls -- it seems to me the checkpoint should complete within 5 minutes so the page can be evicted, unsticking the cache, but I'm seeing the checkpoint stall for minutes, trying to get the eviction-generation number, and coupled with multi-minute page reconciliation with a small cache, it stalls at least half the time.\r\n\r\nThis branch is just turning off library checkpoints until the bulk load has completed, I don't see a lot of reason to keep digging.\r\n\r\nLet me know if you disagree and want to better understand the underlying failure.\r\n\r\nI've asked @tetsuo-cpp for a review once you approve going in this direction.\r\n\r\ncc: @michaelcahill, in case he thinks this should work.",
        "base_ref": "develop",
        "created_at": "Sunday Feb 09, 2020 at 22:00 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 23:14 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 23:14 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 23:14 GMT"
    },
    {
        "key": "WT-5553",
        "number": 5232,
        "state": "closed",
        "title": "WT-5553 Return error if primary cursor is not an incremental source.",
        "body": "@ddanderson here's a small change and small test to reproduce an error usage case Gregory found.",
        "base_ref": "develop",
        "created_at": "Friday Feb 07, 2020 at 21:59 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 19:44 GMT",
        "closed_at": "Monday Feb 10, 2020 at 19:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5422",
        "number": 5231,
        "state": "closed",
        "title": "WT-5422 remove history store updates",
        "body": "When a page gets reconciled, its updates in the update list may have\r\nbeen inserted into the history store, whenever we are aborting those\r\nupdates, the updates in the history store also needs to be removed.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Feb 07, 2020 at 07:00 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 01:40 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 01:40 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 01:40 GMT"
    },
    {
        "key": "WT-5516",
        "number": 5230,
        "state": "closed",
        "title": "WT-5516 Aggregate max write gen when starting from backup",
        "body": "Tried on WT-5461 branch. The backup tests are fixed.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Feb 07, 2020 at 00:35 GMT",
        "updated_at": "Sunday Feb 09, 2020 at 22:43 GMT",
        "closed_at": "Sunday Feb 09, 2020 at 22:43 GMT",
        "merged_at": "Sunday Feb 09, 2020 at 22:43 GMT"
    },
    {
        "key": "WT-4458",
        "number": 5229,
        "state": "closed",
        "title": "WT-4458 Only sweep btree handles that have been evicted from cache",
        "body": "When choosing which dhandles should be swept, we should also sweep the dhandle's that are already evicted. This PR aims to add that functionality when sweeping dhandles.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 06, 2020 at 23:33 GMT",
        "updated_at": "Thursday Feb 20, 2020 at 21:43 GMT",
        "closed_at": "Thursday Feb 20, 2020 at 21:43 GMT",
        "merged_at": "Thursday Feb 20, 2020 at 21:43 GMT"
    },
    {
        "key": "WT-5536",
        "number": 5228,
        "state": "closed",
        "title": "WT-5536 Add zstd as a builtin compressor for WiredTiger Python package",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 06, 2020 at 22:57 GMT",
        "updated_at": "Friday Feb 07, 2020 at 00:17 GMT",
        "closed_at": "Friday Feb 07, 2020 at 00:17 GMT",
        "merged_at": "Friday Feb 07, 2020 at 00:17 GMT"
    },
    {
        "key": "WT-5526",
        "number": 5227,
        "state": "closed",
        "title": "WT-5526 Remove visibility check in __wt_value_return_upd",
        "body": "I haven't run the performance test yet. Jenkins performance tests can tell us how much we can gain from this.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 06, 2020 at 21:58 GMT",
        "updated_at": "Friday Feb 07, 2020 at 12:06 GMT",
        "closed_at": "Friday Feb 07, 2020 at 12:06 GMT",
        "merged_at": "Friday Feb 07, 2020 at 12:06 GMT"
    },
    {
        "key": "WT-5537",
        "number": 5226,
        "state": "closed",
        "title": "WT-5537 Use correct WT_ITEM fields per memory sanitizer.",
        "body": "Also, in the example, if we have a short read, then only write what we\r\nread.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 06, 2020 at 19:21 GMT",
        "updated_at": "Thursday Feb 06, 2020 at 19:54 GMT",
        "closed_at": "Thursday Feb 06, 2020 at 19:54 GMT",
        "merged_at": "Thursday Feb 06, 2020 at 19:54 GMT"
    },
    {
        "key": "WT-5542",
        "number": 5225,
        "state": "closed",
        "title": "WT-5542 Should use on page value as base value if key boundary is crossed",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Feb 06, 2020 at 07:01 GMT",
        "updated_at": "Thursday Feb 06, 2020 at 07:58 GMT",
        "closed_at": "Thursday Feb 06, 2020 at 07:58 GMT",
        "merged_at": "Thursday Feb 06, 2020 at 07:58 GMT"
    },
    {
        "key": "WT-5510",
        "number": 5224,
        "state": "closed",
        "title": "WT-5510 Enable more tests in durable history branch",
        "body": "I was going to enable `test_hs01` as per @luke-pearson's ticket but I realized that quite a few tests are now passing.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Feb 06, 2020 at 05:17 GMT",
        "updated_at": "Thursday Feb 06, 2020 at 07:27 GMT",
        "closed_at": "Thursday Feb 06, 2020 at 07:27 GMT",
        "merged_at": "Thursday Feb 06, 2020 at 07:27 GMT"
    },
    {
        "key": "WT-5529",
        "number": 5223,
        "state": "closed",
        "title": "WT-5529 Improve usage of upd in txn.i",
        "body": "as per https://github.com/wiredtiger/wiredtiger/pull/5216#discussion_r374984109",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Feb 06, 2020 at 03:58 GMT",
        "updated_at": "Friday Feb 07, 2020 at 00:54 GMT",
        "closed_at": "Friday Feb 07, 2020 at 00:54 GMT",
        "merged_at": "Friday Feb 07, 2020 at 00:54 GMT"
    },
    {
        "key": "WT-5534",
        "number": 5222,
        "state": "closed",
        "title": "WT-5534 Handle the absence of checkpoint_backup_info in metadata.",
        "body": "@keithbostic the incremental code was not handling older metadata configs. This change allows us to handle configurations that don't contain `checkpoint_backup_info` at all. I have checked out and confirmed `wt` can now run successfully on a database created in 3.2.1. (And fails with WT_NOTFOUND without this change.)",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 05, 2020 at 18:36 GMT",
        "updated_at": "Wednesday Feb 05, 2020 at 19:59 GMT",
        "closed_at": "Wednesday Feb 05, 2020 at 19:59 GMT",
        "merged_at": "Wednesday Feb 05, 2020 at 19:59 GMT"
    },
    {
        "key": "WT-5501",
        "number": 5221,
        "state": "closed",
        "title": "WT-5501 Enable caching of History Store cursors",
        "body": "This PR will fix the issues pertaining to caching of history store cursors.\r\n\r\n- Enabled caching for history store cursors. Only exception is when history store cursors are opened in context of default session during connection shutdown routines.\r\n- Instead of using default session, we now use special internal session to setup history store at the time of system initialization.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Feb 05, 2020 at 03:34 GMT",
        "updated_at": "Wednesday Feb 12, 2020 at 22:51 GMT",
        "closed_at": "Wednesday Feb 12, 2020 at 22:50 GMT",
        "merged_at": "Wednesday Feb 12, 2020 at 22:50 GMT"
    },
    {
        "key": "WT-5426",
        "number": 5220,
        "state": "closed",
        "title": "WT-5426 Perform rollback to stable after recovery",
        "body": "As writing always newest version to disk, after a successful\r\nrecovery, make sure that we rollback all the newer versions\r\nmore than the stable timestamp and perform a force checkpoint\r\nto ensure that both in-memory and on-disk representation is\r\nsame.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Feb 05, 2020 at 01:28 GMT",
        "updated_at": "Sunday Feb 09, 2020 at 22:43 GMT",
        "closed_at": "Sunday Feb 09, 2020 at 22:43 GMT",
        "merged_at": "Sunday Feb 09, 2020 at 22:43 GMT"
    },
    {
        "key": "WT-5523",
        "number": 5219,
        "state": "closed",
        "title": "WT-5523 Insert a modify newer than a tombstone to history store",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Feb 05, 2020 at 00:23 GMT",
        "updated_at": "Wednesday Feb 05, 2020 at 04:19 GMT",
        "closed_at": "Wednesday Feb 05, 2020 at 04:19 GMT",
        "merged_at": "Wednesday Feb 05, 2020 at 04:19 GMT"
    },
    {
        "key": "WT-5522",
        "number": 5218,
        "state": "closed",
        "title": "WT-5522 Cannot free updates when inserting updates to history store",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 04, 2020 at 23:30 GMT",
        "updated_at": "Tuesday Feb 04, 2020 at 23:33 GMT",
        "closed_at": "Tuesday Feb 04, 2020 at 23:33 GMT",
        "merged_at": "Tuesday Feb 04, 2020 at 23:33 GMT"
    },
    {
        "key": "WT-5520",
        "number": 5217,
        "state": "closed",
        "title": "WT-5520 Fix a memory leak in transaction read",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 04, 2020 at 22:29 GMT",
        "updated_at": "Tuesday Feb 04, 2020 at 23:00 GMT",
        "closed_at": "Tuesday Feb 04, 2020 at 23:00 GMT",
        "merged_at": "Tuesday Feb 04, 2020 at 23:00 GMT"
    },
    {
        "key": null,
        "number": 5216,
        "state": "closed",
        "title": "Temp merge branch",
        "body": "@keithbostic can you take a look at the logic in txn.i txn_read and confirm that it satisfies the race condition you fixed in https://github.com/wiredtiger/wiredtiger/commit/168c7f1b3859516115721868f312544abb0caf5b?\r\n\r\nIf so I'll close this PR and push up the branch to pm-1521-durable-history directly.\r\n\r\nThe reason I ask is because we check the value of upd->type again on line 854 of txn.i",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 04, 2020 at 21:59 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 02:15 GMT",
        "closed_at": "Tuesday Feb 04, 2020 at 23:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5355",
        "number": 5215,
        "state": "closed",
        "title": "WT-5355 Add the ability to dump a given btree as of a timestamp",
        "body": "This PR aims to extend the WT utility tool, by allowing to read at specific read timestamp for a particular table. Also allows the usage of having timestamp pairs of form (%d,%d) to be used as argument to the tool",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 04, 2020 at 04:32 GMT",
        "updated_at": "Monday Feb 10, 2020 at 06:40 GMT",
        "closed_at": "Monday Feb 10, 2020 at 06:40 GMT",
        "merged_at": "Monday Feb 10, 2020 at 06:40 GMT"
    },
    {
        "key": "WT-5519",
        "number": 5214,
        "state": "closed",
        "title": "WT-5519 Apply version from datastore after finding a modify when possible.",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Feb 04, 2020 at 02:48 GMT",
        "updated_at": "Tuesday Feb 04, 2020 at 05:45 GMT",
        "closed_at": "Tuesday Feb 04, 2020 at 05:42 GMT",
        "merged_at": "Tuesday Feb 04, 2020 at 05:42 GMT"
    },
    {
        "key": "WT-5478",
        "number": 5213,
        "state": "closed",
        "title": "WT-5478 Insert records directly into history store without a txn",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 03, 2020 at 06:49 GMT",
        "updated_at": "Thursday Feb 06, 2020 at 16:01 GMT",
        "closed_at": "Thursday Feb 06, 2020 at 05:01 GMT",
        "merged_at": "Thursday Feb 06, 2020 at 05:01 GMT"
    },
    {
        "key": "WT-5508",
        "number": 5212,
        "state": "closed",
        "title": "WT-5508 Rebuild cell if txnids are cleared after restart",
        "body": "This change is to fix the following situation:\r\n\r\nWe unpack a cell first time after a restart and cleared the transaction ids in memory but write the cell unchanged to disk. We then load the page and find the transaction ids not visible because we have updated the write_gen of the page after the previous disk write.\r\n\r\nWe need to repack the cell in reconciliation if we clear the transaction ids when unpacking the cell and flush the cleared transaction ids to disk.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 03, 2020 at 06:04 GMT",
        "updated_at": "Wednesday Feb 05, 2020 at 04:04 GMT",
        "closed_at": "Wednesday Feb 05, 2020 at 04:04 GMT",
        "merged_at": "Wednesday Feb 05, 2020 at 04:04 GMT"
    },
    {
        "key": "WT-5515",
        "number": 5211,
        "state": "closed",
        "title": "WT-5515 Re-enabling most test_hs06 cases",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 03, 2020 at 05:13 GMT",
        "updated_at": "Monday Feb 03, 2020 at 05:43 GMT",
        "closed_at": "Monday Feb 03, 2020 at 05:43 GMT",
        "merged_at": "Monday Feb 03, 2020 at 05:43 GMT"
    },
    {
        "key": "WT-5513",
        "number": 5210,
        "state": "closed",
        "title": "WT-5513 Don't consider TOMBSTONE updates for history store",
        "body": "Every history update must have a TOMBSTONE or the on-disk\r\nrecord with a valid stop time pair. The TOMBSTONE update or\r\nthe stop time pair should be ignored for the history store\r\ntransaction read and later in their corresponding functions\r\nthey can be handled. Otherwise, none of the history store\r\nentries are visible to the some of the transaction reads.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 03, 2020 at 03:37 GMT",
        "updated_at": "Wednesday Feb 05, 2020 at 04:09 GMT",
        "closed_at": "Wednesday Feb 05, 2020 at 04:09 GMT",
        "merged_at": "Wednesday Feb 05, 2020 at 04:09 GMT"
    },
    {
        "key": "WT-5489",
        "number": 5209,
        "state": "closed",
        "title": "WT-5489 page-read can race with threads locking in-memory page structures",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Feb 03, 2020 at 03:04 GMT",
        "updated_at": "Monday Feb 03, 2020 at 05:09 GMT",
        "closed_at": "Monday Feb 03, 2020 at 05:09 GMT",
        "merged_at": "Monday Feb 03, 2020 at 05:09 GMT"
    },
    {
        "key": "WT-5489",
        "number": 5208,
        "state": "closed",
        "title": "WT-5489 page-read can race with threads locking in-memory page structures",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 03, 2020 at 03:03 GMT",
        "updated_at": "Monday Feb 03, 2020 at 05:08 GMT",
        "closed_at": "Monday Feb 03, 2020 at 05:08 GMT",
        "merged_at": "Monday Feb 03, 2020 at 05:08 GMT"
    },
    {
        "key": "WT-5489",
        "number": 5207,
        "state": "closed",
        "title": "WT-5489 page-read can race with threads locking in-memory page structures",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 02, 2020 at 18:59 GMT",
        "updated_at": "Monday Feb 03, 2020 at 03:05 GMT",
        "closed_at": "Monday Feb 03, 2020 at 03:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5503",
        "number": 5206,
        "state": "closed",
        "title": "WT-5503 free the updates after a full update inserted into history st\u2026",
        "body": "\u2026ore in eviction\r\n\r\nIt is only safe to free the updates after a full update which is inserted into history store as a full update in __wt_hs_insert_updates.\r\n\r\nIf we free everything inserted into history store and we have modifies still on the chain, we may not be able to reconstruct the full values of the modifies on the chain currently. In the future, we will try to reconstruct modifies base on the onpage value (WT-5507). However, even if we can do that, it is still not safe to free the onpage value here as reconciliation may fail and in that case we will lose everything from the onpage value.\r\n\r\nAlso we have made the decision to not always insert a full update to the history store if it is the newest update in the history store for that key. In that case, we may need to reconstruct the value of a reverse modify base on the full value on page. Again we cannot guarantee we can successfully write the onpage value to disk at this point.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 31, 2020 at 08:58 GMT",
        "updated_at": "Monday Feb 03, 2020 at 00:01 GMT",
        "closed_at": "Monday Feb 03, 2020 at 00:01 GMT",
        "merged_at": "Monday Feb 03, 2020 at 00:01 GMT"
    },
    {
        "key": "WT-5461",
        "number": 5205,
        "state": "closed",
        "title": "WT-5461 Don't return onpage value if txn read finds nothing",
        "body": "This aim of the change is to remove the assumption in the search that we return onpage value if we find nothing in txn read. However, a bunch of tests failed after the change and I don't know why. Spent some time to debug test_cursor_random but got nothing. Looks like the problem is that we think there is nothing left in the cursor when we walk the tree but there actually are data. @keithbostic Can you have a look and spot anything obvious that can cause the tests to fail.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 31, 2020 at 07:17 GMT",
        "updated_at": "Monday Feb 10, 2020 at 04:57 GMT",
        "closed_at": "Monday Feb 10, 2020 at 04:57 GMT",
        "merged_at": "Monday Feb 10, 2020 at 04:57 GMT"
    },
    {
        "key": "WT-5451",
        "number": 5204,
        "state": "closed",
        "title": "WT-5451 Update reverse modify logic to always insert a modify into the history store",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 31, 2020 at 05:52 GMT",
        "updated_at": "Monday Feb 03, 2020 at 03:17 GMT",
        "closed_at": "Monday Feb 03, 2020 at 03:17 GMT",
        "merged_at": "Monday Feb 03, 2020 at 03:17 GMT"
    },
    {
        "key": "WT-5491",
        "number": 5203,
        "state": "closed",
        "title": "WT-5491 Add an option to wt verify to confirm that no data exists aft\u2026",
        "body": "\u2026er the stable timestamp\r\n\r\nI've done the functional changes but not written the test yet. Writing the test will involve making some assumptions and hacks until `rollback_to_stable` is working.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 31, 2020 at 04:53 GMT",
        "updated_at": "Wednesday Feb 05, 2020 at 04:37 GMT",
        "closed_at": "Wednesday Feb 05, 2020 at 04:37 GMT",
        "merged_at": "Wednesday Feb 05, 2020 at 04:37 GMT"
    },
    {
        "key": "WT-5398",
        "number": 5202,
        "state": "closed",
        "title": "WT-5398 Adding more correctness tasks into rhel80 buildvariant",
        "body": "Evergreen patch build [here](https://evergreen.mongodb.com/build/wiredtiger_rhel80_patch_549a573c208cdf2c5c3c7a4c2dc40b5f086fce4c_5e3b5665c9ec4479e5435362_20_02_05_23_57_43)",
        "base_ref": "develop",
        "created_at": "Friday Jan 31, 2020 at 02:34 GMT",
        "updated_at": "Thursday Feb 06, 2020 at 21:47 GMT",
        "closed_at": "Thursday Feb 06, 2020 at 21:46 GMT",
        "merged_at": "Thursday Feb 06, 2020 at 21:46 GMT"
    },
    {
        "key": "WT-5001",
        "number": 5201,
        "state": "closed",
        "title": "WT-5001 Migrate jenkins wiredtiger-test-format-stress-sanitizer-ppc",
        "body": "Evergreen Patch build [link](https://evergreen.mongodb.com/version/5e45de313e8e86781c2bd9db)",
        "base_ref": "develop",
        "created_at": "Friday Jan 31, 2020 at 02:33 GMT",
        "updated_at": "Friday Feb 14, 2020 at 03:31 GMT",
        "closed_at": "Friday Feb 14, 2020 at 03:30 GMT",
        "merged_at": "Friday Feb 14, 2020 at 03:30 GMT"
    },
    {
        "key": "WT-5502",
        "number": 5200,
        "state": "closed",
        "title": "WT-5502 Re-add changes reverted by merge commit",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 31, 2020 at 02:00 GMT",
        "updated_at": "Friday Jan 31, 2020 at 02:35 GMT",
        "closed_at": "Friday Jan 31, 2020 at 02:35 GMT",
        "merged_at": "Friday Jan 31, 2020 at 02:35 GMT"
    },
    {
        "key": "WT-5495",
        "number": 5199,
        "state": "closed",
        "title": "WT-5495 For column store, check the on-page value and history store even if the key is in the insert list",
        "body": "I'm still debugging one more issue that is affecting `test_hs06:test_hs_modify_reads` for row store which I'll commit in a separate PR.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 31, 2020 at 01:07 GMT",
        "updated_at": "Friday Jan 31, 2020 at 02:50 GMT",
        "closed_at": "Friday Jan 31, 2020 at 02:50 GMT",
        "merged_at": "Friday Jan 31, 2020 at 02:50 GMT"
    },
    {
        "key": "WT-5421",
        "number": 5198,
        "state": "closed",
        "title": "WT-5421 Replace an on-disk value with history store update",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 30, 2020 at 12:06 GMT",
        "updated_at": "Friday Feb 07, 2020 at 05:11 GMT",
        "closed_at": "Friday Feb 07, 2020 at 05:11 GMT",
        "merged_at": "Friday Feb 07, 2020 at 05:11 GMT"
    },
    {
        "key": "WT-4999",
        "number": 5197,
        "state": "closed",
        "title": "WT-4999 Migrate Jenkins wiredtiger-test-format-stress-zseries job to Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 30, 2020 at 04:22 GMT",
        "updated_at": "Monday Feb 03, 2020 at 05:27 GMT",
        "closed_at": "Monday Feb 03, 2020 at 05:26 GMT",
        "merged_at": "Monday Feb 03, 2020 at 05:26 GMT"
    },
    {
        "key": "WT-5493",
        "number": 5196,
        "state": "closed",
        "title": "WT-5493 Re-enabling test_bug008",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 30, 2020 at 02:50 GMT",
        "updated_at": "Thursday Jan 30, 2020 at 03:11 GMT",
        "closed_at": "Thursday Jan 30, 2020 at 03:11 GMT",
        "merged_at": "Thursday Jan 30, 2020 at 03:11 GMT"
    },
    {
        "key": "WT-5420",
        "number": 5195,
        "state": "closed",
        "title": "WT-5420 use the stop timestamp as durable timestamp if exist",
        "body": "If the selected update is a TOMBSTONE and it is not globally visible, use that timestamp as the durable timestamp.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 30, 2020 at 02:38 GMT",
        "updated_at": "Friday Jan 31, 2020 at 00:48 GMT",
        "closed_at": "Friday Jan 31, 2020 at 00:48 GMT",
        "merged_at": "Friday Jan 31, 2020 at 00:48 GMT"
    },
    {
        "key": "WT-5353",
        "number": 5194,
        "state": "closed",
        "title": "WT-5353 Verify data continuity between history and data store",
        "body": "Make an enhancement to the WT Utility tool when making verification to tables. This PR aims to verify the data continuity between the history store and data store, based on the transaction IDs and timestamps. \r\n\r\nTo make the verification continuous we will need to check if the timestamps ranges between the historical version in the history store don't overlap. ",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 30, 2020 at 02:28 GMT",
        "updated_at": "Tuesday Feb 04, 2020 at 06:51 GMT",
        "closed_at": "Tuesday Feb 04, 2020 at 06:51 GMT",
        "merged_at": "Tuesday Feb 04, 2020 at 06:51 GMT"
    },
    {
        "key": "WT-5496",
        "number": 5193,
        "state": "closed",
        "title": "WT-5496 Reset upd to NULL if nothing is visible on chain",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 30, 2020 at 00:06 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:30 GMT",
        "closed_at": "Thursday Jan 30, 2020 at 00:27 GMT",
        "merged_at": "Thursday Jan 30, 2020 at 00:27 GMT"
    },
    {
        "key": "WT-5495",
        "number": 5192,
        "state": "closed",
        "title": "WT-5495 Disable hs06:test_hs_modify_reads",
        "body": "This test was passing in WT-5464 so I reenabled it, but an interaction with something that got merged in that day must have caused it to begin failing.\r\n\r\nI will be working on a fix but it's best to keep other branches green in the interim.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Jan 29, 2020 at 22:44 GMT",
        "updated_at": "Wednesday Jan 29, 2020 at 23:09 GMT",
        "closed_at": "Wednesday Jan 29, 2020 at 23:09 GMT",
        "merged_at": "Wednesday Jan 29, 2020 at 23:09 GMT"
    },
    {
        "key": "WT-5488",
        "number": 5191,
        "state": "closed",
        "title": "WT-5488 Evergreen test/format jobs need to report the failing CONFIG",
        "body": "Please see the output for the failed tests in the following patch builds:\r\n\r\n- [Patch 1](https://evergreen.mongodb.com/version/5e3113043627e064c2aa21b6)\r\n- [Patch 2](https://evergreen.mongodb.com/version/5e31131132f417502f3ebad3)\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 29, 2020 at 22:24 GMT",
        "updated_at": "Thursday Jan 30, 2020 at 00:13 GMT",
        "closed_at": "Thursday Jan 30, 2020 at 00:13 GMT",
        "merged_at": "Thursday Jan 30, 2020 at 00:13 GMT"
    },
    {
        "key": "WT-5444",
        "number": 5190,
        "state": "closed",
        "title": "WT-5444 Enable ppc format tests evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 29, 2020 at 22:12 GMT",
        "updated_at": "Thursday Jan 30, 2020 at 04:56 GMT",
        "closed_at": "Thursday Jan 30, 2020 at 04:56 GMT",
        "merged_at": "Thursday Jan 30, 2020 at 04:56 GMT"
    },
    {
        "key": "WT-5386",
        "number": 5189,
        "state": "closed",
        "title": "WT-5386 Re-enabling test inmem01",
        "body": "See JIRA for details, this test was fixed by way of two separate fixes.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Jan 29, 2020 at 22:10 GMT",
        "updated_at": "Wednesday Jan 29, 2020 at 22:28 GMT",
        "closed_at": "Wednesday Jan 29, 2020 at 22:28 GMT",
        "merged_at": "Wednesday Jan 29, 2020 at 22:28 GMT"
    },
    {
        "key": "WT-5467",
        "number": 5188,
        "state": "closed",
        "title": "WT-5467 Make history store cursor part of each session, get rid of the cursor pool",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Jan 29, 2020 at 01:29 GMT",
        "updated_at": "Saturday Feb 01, 2020 at 06:09 GMT",
        "closed_at": "Saturday Feb 01, 2020 at 06:09 GMT",
        "merged_at": "Saturday Feb 01, 2020 at 06:09 GMT"
    },
    {
        "key": "WT-5419",
        "number": 5187,
        "state": "closed",
        "title": "WT-5419 Add a TOMBSTONE to update on-disk KV pairs",
        "body": "TOMBSTONE with WT_TS_NONE and WT_TXN_NONE to remove an on-disk key\r\nand to remove an on-disk key remove operation, the TOMBSTONE update\r\nwith WT_TS_MAX and WT_TXN_MAX is added.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 28, 2020 at 23:53 GMT",
        "updated_at": "Wednesday Feb 05, 2020 at 00:08 GMT",
        "closed_at": "Wednesday Feb 05, 2020 at 00:08 GMT",
        "merged_at": "Wednesday Feb 05, 2020 at 00:08 GMT"
    },
    {
        "key": "WT-5354",
        "number": 5186,
        "state": "closed",
        "title": "WT-5354 Verify history store key is not missing from the data store",
        "body": "This PR introduces a new option for the verify function on the wt utility. This -h flag asks verify to check the history store by comparing itself against the current data store. There are some novel thing in this PR, such as the way we navigate from the history store to the data store via the meta data. \r\n\r\nhs.c contained 5 lines of newly commented out code, as we are waiting on a fix from Alex on an unrelated bug. \r\n\r\nBig shoutout to Jie for all his help on this ticket and PR process. ",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 28, 2020 at 06:58 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:09 GMT",
        "closed_at": "Thursday Feb 13, 2020 at 02:16 GMT",
        "merged_at": "Thursday Feb 13, 2020 at 02:16 GMT"
    },
    {
        "key": "WT-5414",
        "number": 5185,
        "state": "closed",
        "title": "WT-5414 Using commit timestamp instead of durable timestamp in reconc\u2026",
        "body": "\u2026iliation",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 28, 2020 at 05:56 GMT",
        "updated_at": "Tuesday Jan 28, 2020 at 22:02 GMT",
        "closed_at": "Tuesday Jan 28, 2020 at 22:02 GMT",
        "merged_at": "Tuesday Jan 28, 2020 at 22:02 GMT"
    },
    {
        "key": "WT-5347",
        "number": 5184,
        "state": "closed",
        "title": "WT-5347 Add ability for wt util to print historical versions of a key",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 28, 2020 at 04:38 GMT",
        "updated_at": "Thursday Jan 30, 2020 at 00:32 GMT",
        "closed_at": "Thursday Jan 30, 2020 at 00:32 GMT",
        "merged_at": "Thursday Jan 30, 2020 at 00:32 GMT"
    },
    {
        "key": "WT-5484",
        "number": 5183,
        "state": "closed",
        "title": "WT-5484 Check visibility before saving updates for in memory reconciliation",
        "body": "\u2026ave a page dirty\r\n\r\nThis check originally did exist in the code but was removed as part of another change, I think it should be added as if all updates on a page are globally visible then we don't need to leave the page dirty.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 27, 2020 at 22:18 GMT",
        "updated_at": "Tuesday Jan 28, 2020 at 05:55 GMT",
        "closed_at": "Tuesday Jan 28, 2020 at 05:55 GMT",
        "merged_at": "Tuesday Jan 28, 2020 at 05:55 GMT"
    },
    {
        "key": "WT-5465",
        "number": 5182,
        "state": "closed",
        "title": "WT-5465 Implement incremental granularity and use a bitmap for block storage.",
        "body": "Here's a PR based off of the WT-5206 branch.",
        "base_ref": "wt-5206-backup-ckpt",
        "created_at": "Monday Jan 27, 2020 at 19:47 GMT",
        "updated_at": "Monday Jan 27, 2020 at 21:54 GMT",
        "closed_at": "Monday Jan 27, 2020 at 21:54 GMT",
        "merged_at": "Monday Jan 27, 2020 at 21:54 GMT"
    },
    {
        "key": "WT-5482",
        "number": 5181,
        "state": "closed",
        "title": "WT-5482 Increment cache usage when appending on-disk value to update list",
        "body": "When we select a tombstone in reconciliation, we append an update to the update list representing the on-disk value. Since it is in the in-memory update list, it needs to be taken into account as part of our cache usage calculation.\r\n\r\nWe're not suffering any ill effects from this. I just noticed it when scanning through the reconciliation code.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 27, 2020 at 10:30 GMT",
        "updated_at": "Monday Jan 27, 2020 at 21:12 GMT",
        "closed_at": "Monday Jan 27, 2020 at 21:12 GMT",
        "merged_at": "Monday Jan 27, 2020 at 21:12 GMT"
    },
    {
        "key": "WT-5464",
        "number": 5180,
        "state": "closed",
        "title": "WT-5464 Open reading history cursors on the user session",
        "body": "As part of WT-5441, I noticed that we're unable to find keys in the history store due to a visibility issue.\r\n\r\nTo aid garbage collection, we're inserting tombstones after each lookaside insert to represent the stop timestamp of the value. When reading with a history store cursor, we use \"read uncommitted\" isolation which means that we will only see tombstones. In general, we're unable to even position the cursor since not even a single key in the history store table is visible to us.\r\n\r\nThe proposed solution is to open history store cursors from the user session (and therefore inherit their transaction id, timestamp and isolation level). When it comes to modifies, we'll have to do something interesting and repeatedly reset the read timestamp to be able to see subsequent keys.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 27, 2020 at 10:20 GMT",
        "updated_at": "Wednesday Jan 29, 2020 at 02:10 GMT",
        "closed_at": "Wednesday Jan 29, 2020 at 02:10 GMT",
        "merged_at": "Wednesday Jan 29, 2020 at 02:10 GMT"
    },
    {
        "key": "WT-5481",
        "number": 5179,
        "state": "closed",
        "title": "WT-5481 DIAGNOSTIC split code assert can race with WT_REF locking",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jan 26, 2020 at 20:05 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:30 GMT",
        "closed_at": "Tuesday Jan 28, 2020 at 01:58 GMT",
        "merged_at": "Tuesday Jan 28, 2020 at 01:58 GMT"
    },
    {
        "key": "WT-5480",
        "number": 5178,
        "state": "closed",
        "title": "WT-5480 don't take threads resolving prepared transactions to assist with eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jan 26, 2020 at 19:08 GMT",
        "updated_at": "Tuesday Jan 28, 2020 at 01:36 GMT",
        "closed_at": "Tuesday Jan 28, 2020 at 01:35 GMT",
        "merged_at": "Tuesday Jan 28, 2020 at 01:35 GMT"
    },
    {
        "key": "WT-5480",
        "number": 5177,
        "state": "closed",
        "title": "WT-5480 don't take threads resolving prepared transactions to assist with eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jan 25, 2020 at 01:34 GMT",
        "updated_at": "Saturday Jan 25, 2020 at 15:52 GMT",
        "closed_at": "Saturday Jan 25, 2020 at 15:52 GMT",
        "merged_at": "Saturday Jan 25, 2020 at 15:52 GMT"
    },
    {
        "key": "WT-5476",
        "number": 5176,
        "state": "closed",
        "title": "WT-5476 Don't write keys when tombstones are globally visible",
        "body": "Whenever a TOMBSTONE update is globally visible, there is no need to reconcile its time pair as stop time pair to the previous update or on-disk value, just discard the key. Along with this whenever a page gets reconciled, check for the obsolete keys and remove them.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 24, 2020 at 07:19 GMT",
        "updated_at": "Wednesday Jan 29, 2020 at 06:40 GMT",
        "closed_at": "Wednesday Jan 29, 2020 at 06:40 GMT",
        "merged_at": "Wednesday Jan 29, 2020 at 06:40 GMT"
    },
    {
        "key": "WT-5372",
        "number": 5175,
        "state": "closed",
        "title": "WT-5372 long running format stress sanitizer failed evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 24, 2020 at 03:33 GMT",
        "updated_at": "Monday Feb 10, 2020 at 03:10 GMT",
        "closed_at": "Monday Feb 10, 2020 at 03:10 GMT",
        "merged_at": "Monday Feb 10, 2020 at 03:10 GMT"
    },
    {
        "key": "WT-5417",
        "number": 5174,
        "state": "closed",
        "title": "WT-5417 Ignore trees or pages with modifications less than stable",
        "body": "During rollback to stable walk of all objects in WT, the trees and pages\r\nwith their aggregated max durable timestamp is compared against stable\r\ntimestamp to find out whether they have any updates newer than stable timestamp.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 23, 2020 at 23:27 GMT",
        "updated_at": "Tuesday Jan 28, 2020 at 23:48 GMT",
        "closed_at": "Tuesday Jan 28, 2020 at 23:48 GMT",
        "merged_at": "Tuesday Jan 28, 2020 at 23:48 GMT"
    },
    {
        "key": "WT-5376",
        "number": 5173,
        "state": "closed",
        "title": "WT-5376 WT_UPDATE.type field can race with visibility checks when returning key/value pairs",
        "body": "@agorrod, @bvpvamsikrishna, should we reconsider having `__ rec_append_orig_value()` change the underlying type of the `WT_UPDATE`?\r\n\r\nI'm not familiar enough with the birthmark code to argue the point, but one of the rules we try to follow is that `WT_UPDATE` structures aren't modified once they're inserted into an update chain, and this chunk of code has been remarkably difficult to debug.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 23, 2020 at 18:28 GMT",
        "updated_at": "Thursday Jan 30, 2020 at 16:00 GMT",
        "closed_at": "Thursday Jan 30, 2020 at 16:00 GMT",
        "merged_at": "Thursday Jan 30, 2020 at 16:00 GMT"
    },
    {
        "key": "WT-5417",
        "number": 5172,
        "state": "closed",
        "title": "WT-5417 Ignore trees and pages with modifications less than the stable timestamp",
        "body": "During rollback to stable walk of all objects in WT, the trees and pages\r\nwith their aggregated max durable timestamp is compared against stable\r\ntimestamp to find out whether they have any updates newer than the\r\nstable timestamp.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 23, 2020 at 03:38 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 05:20 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 05:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5458",
        "number": 5171,
        "state": "closed",
        "title": "WT-5458 Fix Evergreen timeout failures in linux-directio test",
        "body": "Here we update the `linux-directio` Evergreen test to use the `format.sh` script rather than calling `t` in a loop. This allows us to run tests in parallel, virtually ensuring that we will accumulate completed test results even if we generate long-running configs. We set the `format.sh` timeout to just under the two hour default Evergreen timeout. We also set the build distros to higher spec machines for this task. Successful patch builds below.\r\n\r\n- [Patch One](https://evergreen.mongodb.com/version/5e28e34be3c3314abdf82885)\r\n- [Patch Two](https://evergreen.mongodb.com/version/5e28e35857e85a429c58768e)\r\n- [Patch Three](https://evergreen.mongodb.com/version/5e28e3631e2d176633e47276)",
        "base_ref": "develop",
        "created_at": "Thursday Jan 23, 2020 at 02:59 GMT",
        "updated_at": "Monday Jan 27, 2020 at 22:08 GMT",
        "closed_at": "Monday Jan 27, 2020 at 22:08 GMT",
        "merged_at": "Monday Jan 27, 2020 at 22:08 GMT"
    },
    {
        "key": "WT-5449",
        "number": 5170,
        "state": "closed",
        "title": "WT-5449 Increase contention in History Store stress workload",
        "body": "Increasing the stress on lookaside/history store by increasing the number of search and insert op threads, and by removing the throttle setting on insert threads.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 22, 2020 at 22:56 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 23:07 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 23:07 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 23:07 GMT"
    },
    {
        "key": "WT-5468",
        "number": 5169,
        "state": "closed",
        "title": "WT-5468 Clarified documentation for \"wt load\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 22, 2020 at 20:31 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 01:26 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 01:26 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 01:26 GMT"
    },
    {
        "key": null,
        "number": 5168,
        "state": "closed",
        "title": "Wt 5439 Free old updates inserted to history store during eviction",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Jan 22, 2020 at 05:18 GMT",
        "updated_at": "Wednesday Jan 22, 2020 at 21:18 GMT",
        "closed_at": "Wednesday Jan 22, 2020 at 21:18 GMT",
        "merged_at": "Wednesday Jan 22, 2020 at 21:18 GMT"
    },
    {
        "key": "WT-5219",
        "number": 5167,
        "state": "closed",
        "title": "WT-5219 Btree walk code read the lock WT_REF.addr field without locking",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 22, 2020 at 02:02 GMT",
        "updated_at": "Friday Jan 24, 2020 at 00:31 GMT",
        "closed_at": "Friday Jan 24, 2020 at 00:31 GMT",
        "merged_at": "Friday Jan 24, 2020 at 00:31 GMT"
    },
    {
        "key": "WT-5460",
        "number": 5166,
        "state": "closed",
        "title": "WT-5460 Buffer alignment failure captured by linux-directio test",
        "body": "Patch builds for Ubuntu 18.04 and RHEL 8.0:\r\n\r\n- [Patch](https://evergreen.mongodb.com/version/5e27976ce3c33179485a1af4)\r\n- [Another patch](https://evergreen.mongodb.com/version/5e27977532f41731210c0488)\r\n- [And a third patch](https://evergreen.mongodb.com/version/5e27977f0ae6061d48939468)",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 22, 2020 at 01:26 GMT",
        "updated_at": "Wednesday Jan 22, 2020 at 21:18 GMT",
        "closed_at": "Wednesday Jan 22, 2020 at 21:18 GMT",
        "merged_at": "Wednesday Jan 22, 2020 at 21:18 GMT"
    },
    {
        "key": "WT-5159",
        "number": 5165,
        "state": "closed",
        "title": "WT-5159 Fixes to allow SWIG4 to generate code compatible with Python3 or Python2.",
        "body": "Tested with SWIG4 running with Python3 'in the tree'.  That is `cd build_posix; python3 ../test/suite/run.py ...` . Also tested it running with python2 'in the tree'.  Also did pip_setup.py (using python3, in case it matters), and was able to pip install/test the result in a python3 virtual env, as well as a python2 virtual env.\r\n\r\nI made some of these tests with SWIG3.  That is, I can run python3 or python2 'in the tree'.  (These will be confirmed by the PR testing).  I did not check running pip_setup.py and pip install with SWIG3 .  The test matrix is getting too big.\r\n\r\nIf this works and passes review, I think we should merge, then upgrade all machines to SWIG4, and then deprecate SWIG3 and finally deprecate Python2.  We can deprecate in either order, but I think the SWIG3 deprecate will be easier (a single line in `build_posix/configure.ac.in`).",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 21, 2020 at 17:57 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 13:18 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 13:17 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 13:17 GMT"
    },
    {
        "key": "WT-5405",
        "number": 5164,
        "state": "closed",
        "title": "WT-5405 Make format LSM test a separate Evergreen task",
        "body": "Disable `data_source=lsm` setting in test/format configuration generation, and explicitly set & test LSM in a separate format stress sanitizer Evergreen task (run for 1 hour). ",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 21, 2020 at 04:36 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 03:39 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 03:39 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 03:39 GMT"
    },
    {
        "key": "WT-9999",
        "number": 5163,
        "state": "closed",
        "title": "WT-9999 Test pull request (against durable history branch)",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 20, 2020 at 22:57 GMT",
        "updated_at": "Wednesday Feb 19, 2020 at 04:59 GMT",
        "closed_at": "Wednesday Feb 19, 2020 at 04:59 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5454",
        "number": 5162,
        "state": "closed",
        "title": "WT-5454 Rename cache_overflow configuration option",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 20, 2020 at 21:17 GMT",
        "updated_at": "Tuesday Jan 21, 2020 at 22:11 GMT",
        "closed_at": "Tuesday Jan 21, 2020 at 22:11 GMT",
        "merged_at": "Tuesday Jan 21, 2020 at 22:11 GMT"
    },
    {
        "key": "WT-5441",
        "number": 5161,
        "state": "closed",
        "title": "WT-5441 Fix known visibility issues",
        "body": "This change is fixing a known issue with search (and one that I found while debugging).\r\n\r\n- When embedding the location of an uncompressed value in a row, we should check that it is globally visible (i.e. that its commit timestamp is before oldest and there is no tombstone after it).\r\n- There are a few places in search where we need to call `__wt_txn_read` to trigger a history store search. In this case, we were just searching the update list and then defaulting straight to the on-disk value.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 20, 2020 at 10:59 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 00:56 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 00:56 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 00:56 GMT"
    },
    {
        "key": "WT-9999",
        "number": 5160,
        "state": "closed",
        "title": "WT-9999 Test pull request (against mongodb-4.2 branch)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Jan 20, 2020 at 05:08 GMT",
        "updated_at": "Thursday Nov 05, 2020 at 02:14 GMT",
        "closed_at": "Thursday Nov 05, 2020 at 02:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5448",
        "number": 5159,
        "state": "closed",
        "title": "WT-5448 Fix column reconciliation overwrites cells with default time pairs",
        "body": "The code is complex and I don't understand all of it. So please have a careful look.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 20, 2020 at 04:47 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 01:50 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 01:50 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 01:50 GMT"
    },
    {
        "key": "WT-5455",
        "number": 5158,
        "state": "closed",
        "title": "WT-5455 Renable test_hs03",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 20, 2020 at 00:38 GMT",
        "updated_at": "Monday Jan 20, 2020 at 01:40 GMT",
        "closed_at": "Monday Jan 20, 2020 at 01:40 GMT",
        "merged_at": "Monday Jan 20, 2020 at 01:40 GMT"
    },
    {
        "key": "WT-5435",
        "number": 5157,
        "state": "closed",
        "title": "WT-5435 History store transaction rollback stat",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Sunday Jan 19, 2020 at 23:42 GMT",
        "updated_at": "Tuesday Jan 21, 2020 at 23:00 GMT",
        "closed_at": "Sunday Jan 19, 2020 at 23:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5303",
        "number": 5156,
        "state": "closed",
        "title": "WT-5303 Update checkpoint statistics for the new history store file.",
        "body": "This change aims to update the checkpoint statistics to include the duration of checkpointing a history store file.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Sunday Jan 19, 2020 at 23:39 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 03:41 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 03:41 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 03:41 GMT"
    },
    {
        "key": "WT-5170",
        "number": 5155,
        "state": "closed",
        "title": "WT-5170 Use mmap for I/O on all data files",
        "body": "The branch uses I/O for mmap on all data files if enabled with the \"mmap\" option. To enable, set the environment as follows:\r\n\r\nexport WIREDTIGER_CONFIG=\"mmap=true\"\r\n\r\nThe \"mmap\" option in WiredTiger was used to enable mmap on read-only checkpoints. I renamed that option to \"mmap-checkpoint\". If you enable the \"mmap\" option in this branch, all data files will be accessed via mmap.",
        "base_ref": "develop",
        "created_at": "Saturday Jan 18, 2020 at 00:36 GMT",
        "updated_at": "Monday Mar 16, 2020 at 21:25 GMT",
        "closed_at": "Monday Mar 16, 2020 at 21:25 GMT",
        "merged_at": "Monday Mar 16, 2020 at 21:25 GMT"
    },
    {
        "key": "WT-5170",
        "number": 5154,
        "state": "closed",
        "title": "WT-5170 Enable mmap for all data files",
        "body": "To enable using mmap for all data files, set environment like so: \r\n\r\n   export WIREDTIGER_CONFIG=\"mmap=true\"\r\n\r\nThe \"mmap\" option in WiredTiger was used to enable mmap on read-only checkpoints. I renamed that option to \"mmap-checkpoint\". If you use \"mmap\" in this branch, all data files will be accessed via mmap.",
        "base_ref": "develop",
        "created_at": "Friday Jan 17, 2020 at 20:40 GMT",
        "updated_at": "Saturday Jan 18, 2020 at 00:31 GMT",
        "closed_at": "Saturday Jan 18, 2020 at 00:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5453",
        "number": 5153,
        "state": "closed",
        "title": "WT-5453 Fix cell packing for globally visible values",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 17, 2020 at 08:21 GMT",
        "updated_at": "Sunday Jan 19, 2020 at 23:21 GMT",
        "closed_at": "Sunday Jan 19, 2020 at 23:17 GMT",
        "merged_at": "Sunday Jan 19, 2020 at 23:17 GMT"
    },
    {
        "key": "WT-5416",
        "number": 5152,
        "state": "closed",
        "title": "WT-5416 Make sure all objects are traversed for rollback to stable",
        "body": "As we are writing the most recent version to the data store, it is\r\nrequired to scan all the objects for rollback to stable fix up.\r\n\r\nWe need to read all the internal pages of the objects to fix up.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 17, 2020 at 06:26 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 01:46 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 01:46 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 01:46 GMT"
    },
    {
        "key": "WT-5392",
        "number": 5151,
        "state": "closed",
        "title": "WT-5392 Adding obsolete pages to eviction",
        "body": "History store in-memory pages are not referenced\r\nby any session in WT, evicting them in this checkpoint let them\r\nto be cleaned in the next checkpoint. Store all the in-memory\r\nobsolete pages and add them to the urgent eviction queue at\r\nthe end of the checkpoint of history store.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 17, 2020 at 03:38 GMT",
        "updated_at": "Tuesday Jan 21, 2020 at 23:22 GMT",
        "closed_at": "Tuesday Jan 21, 2020 at 23:22 GMT",
        "merged_at": "Tuesday Jan 21, 2020 at 23:22 GMT"
    },
    {
        "key": "WT-5341",
        "number": 5150,
        "state": "closed",
        "title": "WT-5341 Ignore incorrect clang sanitiser output",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 17, 2020 at 03:17 GMT",
        "updated_at": "Sunday Jan 19, 2020 at 23:16 GMT",
        "closed_at": "Sunday Jan 19, 2020 at 23:16 GMT",
        "merged_at": "Sunday Jan 19, 2020 at 23:16 GMT"
    },
    {
        "key": "WT-5450",
        "number": 5149,
        "state": "closed",
        "title": "WT-5450 format test program timeout is too short",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 17, 2020 at 02:32 GMT",
        "updated_at": "Friday Jan 17, 2020 at 16:49 GMT",
        "closed_at": "Friday Jan 17, 2020 at 16:49 GMT",
        "merged_at": "Friday Jan 17, 2020 at 16:49 GMT"
    },
    {
        "key": "WT-5437",
        "number": 5148,
        "state": "closed",
        "title": "WT-5437 salvage can  consume excessive amounts of cache memory, causing eviction to stall",
        "body": "All the interesting work is in 2d560cd, the other two commits are just cleaning up comment formatting.\r\n\r\n@agorrod, you're not going to like this much, but absent a real project to fix the problem, it's the only idea I have.\r\n\r\nCan you please approve or disapprove the approach, before we do a real review?",
        "base_ref": "develop",
        "created_at": "Friday Jan 17, 2020 at 02:17 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 21:48 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 21:48 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 21:48 GMT"
    },
    {
        "key": "WT-5446",
        "number": 5147,
        "state": "closed",
        "title": "WT-5446 Fix not writing to lookaside",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 16, 2020 at 22:11 GMT",
        "updated_at": "Sunday Jan 19, 2020 at 23:34 GMT",
        "closed_at": "Sunday Jan 19, 2020 at 23:34 GMT",
        "merged_at": "Sunday Jan 19, 2020 at 23:34 GMT"
    },
    {
        "key": "WT-5445",
        "number": 5146,
        "state": "closed",
        "title": "WT-5445 format.sh test script doesn't correctly handle relative \"home\" directories",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 16, 2020 at 19:29 GMT",
        "updated_at": "Thursday Jan 16, 2020 at 22:09 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 20:35 GMT",
        "merged_at": "Thursday Jan 16, 2020 at 20:35 GMT"
    },
    {
        "key": "WT-5041",
        "number": 5145,
        "state": "closed",
        "title": "WT-5041 Test calc modify test is not properly distributing the modifications",
        "body": "Changed the array accessing logic as requested. Had to change (potentially fixed, honestly) the conditional logic to be an `or` instead of an `and`, as accessing the diff properly was impossible when i was 0. ",
        "base_ref": "develop",
        "created_at": "Thursday Jan 16, 2020 at 06:13 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:19 GMT",
        "closed_at": "Sunday Jan 19, 2020 at 22:34 GMT",
        "merged_at": "Sunday Jan 19, 2020 at 22:34 GMT"
    },
    {
        "key": "WT-5443",
        "number": 5144,
        "state": "closed",
        "title": "WT-5443 Disable PPC format tests in Evergreen ",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 16, 2020 at 02:58 GMT",
        "updated_at": "Thursday Jan 16, 2020 at 04:15 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 04:15 GMT",
        "merged_at": "Thursday Jan 16, 2020 at 04:15 GMT"
    },
    {
        "key": "WT-5442",
        "number": 5143,
        "state": "closed",
        "title": "WT-5442 Fix and reenable test_shared_cache_verbose",
        "body": "@agorrod Vamsi assigned me this ticket to fix the test in durable history. However, I found it is disabled by you 7 years ago in develop. So I chose to fix it in develop instead.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 16, 2020 at 00:22 GMT",
        "updated_at": "Thursday Jan 16, 2020 at 04:23 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 04:23 GMT",
        "merged_at": "Thursday Jan 16, 2020 at 04:23 GMT"
    },
    {
        "key": "WT-5225",
        "number": 5142,
        "state": "closed",
        "title": "WT-5225 Renaming lookaside to history store",
        "body": "Initial pr, curious as to what people think about not using hs as a shortening and using history_store. Still have some conflicts to clean up.\r\n\r\nOne of the more annoying changes here is fixing grammar of comments.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Jan 15, 2020 at 06:39 GMT",
        "updated_at": "Monday Jan 20, 2020 at 00:29 GMT",
        "closed_at": "Monday Jan 20, 2020 at 00:29 GMT",
        "merged_at": "Monday Jan 20, 2020 at 00:29 GMT"
    },
    {
        "key": null,
        "number": 5141,
        "state": "closed",
        "title": "Add the ability to dump a given btree as of a timestamp",
        "body": "This tickets enhances the wt utility tool, specifically the **wt dump** to also allow to read from specific timestamps. I have also updated and created test cases for the new functionality.'\r\n\r\nFor some reason, the wt utility doesn't filter the read specific timestamps properly.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Jan 15, 2020 at 04:44 GMT",
        "updated_at": "Wednesday Jan 15, 2020 at 23:57 GMT",
        "closed_at": "Wednesday Jan 15, 2020 at 23:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5395",
        "number": 5140,
        "state": "closed",
        "title": "WT-5395 Fix a bug in the read lock implementation when there is a lot of contention",
        "body": "This change ensures that the value of `readers_queued` never overflows and reader has to wait for the next ticket in case there are already 255 readers in the system. ",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 15, 2020 at 04:40 GMT",
        "updated_at": "Friday Jan 17, 2020 at 02:25 GMT",
        "closed_at": "Friday Jan 17, 2020 at 02:25 GMT",
        "merged_at": "Friday Jan 17, 2020 at 02:25 GMT"
    },
    {
        "key": "WT-5380",
        "number": 5139,
        "state": "closed",
        "title": "WT-5380 Changed cursor_insert to cursor_update",
        "body": "ticket: https://jira.mongodb.org/browse/WT-5380\r\n\r\nMade the requested change, updating `cursor_insert` to be `cursor_update`",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 15, 2020 at 04:32 GMT",
        "updated_at": "Wednesday Jan 15, 2020 at 05:57 GMT",
        "closed_at": "Wednesday Jan 15, 2020 at 05:57 GMT",
        "merged_at": "Wednesday Jan 15, 2020 at 05:57 GMT"
    },
    {
        "key": "WT-5345",
        "number": 5138,
        "state": "closed",
        "title": "WT-5345 Output time pairs as part of dump_address with wt verify",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Jan 15, 2020 at 04:15 GMT",
        "updated_at": "Thursday Jan 16, 2020 at 23:15 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 23:15 GMT",
        "merged_at": "Thursday Jan 16, 2020 at 23:15 GMT"
    },
    {
        "key": "WT-5263",
        "number": 5137,
        "state": "closed",
        "title": "WT-5263 Prepared updates written to the lookaside file are not always read as needed (#5039) [BACKPORT-v4.0]",
        "body": "this backports wt-5263\r\n\r\n(cherry picked from commit 33204938da7bb1c0722536f9f74854ab59237e89)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jan 15, 2020 at 00:51 GMT",
        "updated_at": "Monday Jan 20, 2020 at 22:06 GMT",
        "closed_at": "Monday Jan 20, 2020 at 22:06 GMT",
        "merged_at": "Monday Jan 20, 2020 at 22:06 GMT"
    },
    {
        "key": "WT-5440",
        "number": 5136,
        "state": "closed",
        "title": "WT-5440 __wt_txn_clear_read_timestamp() has an unnecessary serialization point",
        "body": "Alex, I think this is a trivial cleanup, I can't see a reason the first `WT_PUBLISH` line in `__wt_txn_clear_read_timestamp()` is necessary, and having it there could be confusing.\r\n\r\nHowever, I couldn't spot the reason the second `WT_PUBLISH` is necessary either: do you remember why it's necessary for `WT_TXN.clear_read_q` to be set before the `WT_TXN_PUBLIC_TS_READ` flag is cleared?",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 14, 2020 at 23:38 GMT",
        "updated_at": "Thursday Jan 16, 2020 at 20:38 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 20:38 GMT",
        "merged_at": "Thursday Jan 16, 2020 at 20:38 GMT"
    },
    {
        "key": "WT-4886",
        "number": 5135,
        "state": "closed",
        "title": "WT-4886 For bug018 test, don't depend on any particular error message text from WT",
        "body": "The error message occurs when a recovery fails due to the root page not being written.  This is a somewhat rare occurrence, so it's hard to verify the test is correct.  It's best to keep the test very simple for this case.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 14, 2020 at 20:38 GMT",
        "updated_at": "Tuesday Jan 14, 2020 at 21:23 GMT",
        "closed_at": "Tuesday Jan 14, 2020 at 21:22 GMT",
        "merged_at": "Tuesday Jan 14, 2020 at 21:22 GMT"
    },
    {
        "key": "WT-5431",
        "number": 5134,
        "state": "closed",
        "title": "WT-5431 Reenable tests that are now passing in durable history",
        "body": "This PR is reenabling tests and assertions that are now passing with our recent changes to the durable history branch.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 14, 2020 at 06:45 GMT",
        "updated_at": "Wednesday Jan 15, 2020 at 06:11 GMT",
        "closed_at": "Wednesday Jan 15, 2020 at 06:11 GMT",
        "merged_at": "Wednesday Jan 15, 2020 at 06:11 GMT"
    },
    {
        "key": "WT-5281",
        "number": 5133,
        "state": "closed",
        "title": "WT-5281 Assert that we're no longer writing tombstones to the history store",
        "body": "As it stands, we're clearly not writing any tombstones to the history store as the `type` parameter to this function can only ever be `WT_UPDATE_STANDARD` and `WT_UPDATE_MODIFY`.\r\n\r\nI've just added an assertion to prevent regressions and will consider this ticket done.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 14, 2020 at 04:51 GMT",
        "updated_at": "Tuesday Jan 14, 2020 at 21:45 GMT",
        "closed_at": "Tuesday Jan 14, 2020 at 21:45 GMT",
        "merged_at": "Tuesday Jan 14, 2020 at 21:45 GMT"
    },
    {
        "key": "WT-5308",
        "number": 5132,
        "state": "closed",
        "title": "WT-5308 Remove --enable-page-version-ts flag",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 14, 2020 at 02:28 GMT",
        "updated_at": "Friday Jan 17, 2020 at 05:49 GMT",
        "closed_at": "Friday Jan 17, 2020 at 05:49 GMT",
        "merged_at": "Friday Jan 17, 2020 at 05:49 GMT"
    },
    {
        "key": "WT-5192",
        "number": 5131,
        "state": "closed",
        "title": "WT-5192 Dont allow checkpoints to evict without a snapshot (#5104) [BACKPORT-v4.0]",
        "body": "(cherry picked from commit 5bd9fdfc0bb7f8fcf791e234b6e436c79dfe1fee)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Jan 14, 2020 at 01:02 GMT",
        "updated_at": "Tuesday Jan 14, 2020 at 02:10 GMT",
        "closed_at": "Tuesday Jan 14, 2020 at 02:10 GMT",
        "merged_at": "Tuesday Jan 14, 2020 at 02:10 GMT"
    },
    {
        "key": "WT-5400",
        "number": 5130,
        "state": "closed",
        "title": "WT-5400 Consistent wt verify debug output",
        "body": "* Added a function which prints time pairs in a consistent format\r\n",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 13, 2020 at 06:27 GMT",
        "updated_at": "Thursday Jan 16, 2020 at 04:43 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 04:43 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5358",
        "number": 5129,
        "state": "closed",
        "title": "WT-5358 Fix a race condition opening a lookaside cursor in transaction read",
        "body": "Adding assert statement for PR testing.",
        "base_ref": "develop",
        "created_at": "Monday Jan 13, 2020 at 05:57 GMT",
        "updated_at": "Tuesday Jan 14, 2020 at 23:43 GMT",
        "closed_at": "Tuesday Jan 14, 2020 at 23:43 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5351",
        "number": 5128,
        "state": "closed",
        "title": "WT-5351 Verify aggregated timestamp pairs for internal pages and its child pages",
        "body": "This PR achieves doing timestamp pair checking for its child pages as the parent page.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 13, 2020 at 05:04 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:27 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 02:18 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5292",
        "number": 5127,
        "state": "closed",
        "title": "WT-5292 Test the garbage collection by checkpoint",
        "body": "Perform the checkpoint garbage collection tests\r\nby adding additional tests and also updating the existing\r\ntests to remove the known limitations",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 13, 2020 at 04:30 GMT",
        "updated_at": "Monday Feb 03, 2020 at 22:19 GMT",
        "closed_at": "Monday Feb 03, 2020 at 22:19 GMT",
        "merged_at": "Monday Feb 03, 2020 at 22:19 GMT"
    },
    {
        "key": "WT-5401",
        "number": 5126,
        "state": "closed",
        "title": "WT-5401 Fix update structure state when a lookaside transaction is rolled back",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 13, 2020 at 01:34 GMT",
        "updated_at": "Tuesday Jan 14, 2020 at 02:20 GMT",
        "closed_at": "Tuesday Jan 14, 2020 at 02:20 GMT",
        "merged_at": "Tuesday Jan 14, 2020 at 02:20 GMT"
    },
    {
        "key": "WT-5255",
        "number": 5125,
        "state": "closed",
        "title": "WT-5255 configuring format with direct I/O support on Evergreen can take an excessive time to run",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jan 12, 2020 at 21:20 GMT",
        "updated_at": "Friday Jan 17, 2020 at 00:49 GMT",
        "closed_at": "Friday Jan 17, 2020 at 00:49 GMT",
        "merged_at": "Friday Jan 17, 2020 at 00:49 GMT"
    },
    {
        "key": "WT-4636",
        "number": 5124,
        "state": "closed",
        "title": "WT-4636 Fix strace test (#4537)",
        "body": "Added O_CLOEXEC flag to the template that the test matches, to correspond with changes to WT-4602.  Also changed the strace test to work with glibc versions > 2.26.  These versions implement the open syscall in terms of openat, so the strace test template needs a conditional version of open.\r\n\r\n(cherry picked from commit 2971a485639120b9580707b56eba309b8b56355c)",
        "base_ref": "mongodb-3.6",
        "created_at": "Friday Jan 10, 2020 at 18:24 GMT",
        "updated_at": "Monday Jan 13, 2020 at 21:04 GMT",
        "closed_at": "Monday Jan 13, 2020 at 21:04 GMT",
        "merged_at": "Monday Jan 13, 2020 at 21:04 GMT"
    },
    {
        "key": "WT-4636",
        "number": 5123,
        "state": "closed",
        "title": "WT-4636 Fix strace test (#4537)",
        "body": "Added O_CLOEXEC flag to the template that the test matches, to correspond with changes to WT-4602.  Also changed the strace test to work with glibc versions > 2.26.  These versions implement the open syscall in terms of openat, so the strace test template needs a conditional version of open.\r\n\r\n(cherry picked from commit 2971a48)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Jan 10, 2020 at 16:42 GMT",
        "updated_at": "Sunday Jan 12, 2020 at 23:18 GMT",
        "closed_at": "Sunday Jan 12, 2020 at 23:18 GMT",
        "merged_at": "Sunday Jan 12, 2020 at 23:18 GMT"
    },
    {
        "key": "WT-5385",
        "number": 5122,
        "state": "closed",
        "title": "WT-5385 Use WT_UPDATE_HISTORY_STORE to avoid repeatedly inserting updates to lookaside",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 10, 2020 at 02:28 GMT",
        "updated_at": "Wednesday Jan 15, 2020 at 04:45 GMT",
        "closed_at": "Wednesday Jan 15, 2020 at 04:45 GMT",
        "merged_at": "Wednesday Jan 15, 2020 at 04:45 GMT"
    },
    {
        "key": "WT-5317",
        "number": 5121,
        "state": "closed",
        "title": "WT-5317 Fix eviction writing uncommitted metadata updates to disk",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 10, 2020 at 00:23 GMT",
        "updated_at": "Monday Jan 13, 2020 at 05:32 GMT",
        "closed_at": "Monday Jan 13, 2020 at 05:31 GMT",
        "merged_at": "Monday Jan 13, 2020 at 05:31 GMT"
    },
    {
        "key": "WT-5410",
        "number": 5120,
        "state": "closed",
        "title": "WT-5410 WiredTiger formatted timestamp string buffer size is too small",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 09, 2020 at 20:30 GMT",
        "updated_at": "Friday Jan 10, 2020 at 00:06 GMT",
        "closed_at": "Friday Jan 10, 2020 at 00:06 GMT",
        "merged_at": "Friday Jan 10, 2020 at 00:06 GMT"
    },
    {
        "key": "WT-5024",
        "number": 5119,
        "state": "closed",
        "title": "WT-5024 Migrate jenkins wiredtiger-compatibility job to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 09, 2020 at 05:57 GMT",
        "updated_at": "Friday Jan 10, 2020 at 05:50 GMT",
        "closed_at": "Friday Jan 10, 2020 at 05:50 GMT",
        "merged_at": "Friday Jan 10, 2020 at 05:50 GMT"
    },
    {
        "key": "WT-5344",
        "number": 5118,
        "state": "closed",
        "title": "WT-5344 Show timestamp information from the new data version",
        "body": "This PR creates a new API from the session.  It adds the method of showing K/V pairs with the timestamp information that is held inside the Btree. \r\n\r\nWalk through the trees using recursion, and print out all the leaf page informations by looping through K/V cells. \r\n\r\nNot yet Implemented: LSM trees, configurations, checkpoint loading, test files",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 09, 2020 at 03:17 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:27 GMT",
        "closed_at": "Monday Jan 13, 2020 at 23:29 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5277",
        "number": 5117,
        "state": "closed",
        "title": "WT-5277 Cursor key out-of-order detected in the lookaside file (#5018) [BACKPORT-v4.0]",
        "body": "* If the WT_SESSION.update leaf-page search returns either the first or last slot of the page,\r\ndiscard the search results and search the entire tree, an inserted item might belong on an\r\nentirely different page.\r\n\r\n* If a search-near or update based leaf-page search returns an exact match, then we\r\nshould be able to use it, no matter what page slots are involved.\r\n\r\n* Fix two cases where successful pinned page searches can result in attempting to modify\r\nan object before starting the necessary implicit transaction: WT_SESSION.truncate and\r\nWT_SESSION.update (with the WT_CURSTD_UPDATE_LOCAL flag set).\r\n\r\nWe haven't seen the failure in truncate before because a \"read\" of any page normally\r\nresults in starting the transaction, it's only pinned pages that avoid that operation,\r\nand it's relatively unlikely both the start/stop cursors involved in a range truncate\r\noperation are the result of successful pinned page searches.\r\n\r\nWe haven't seen the failure in update because it's currently only possible when updating\r\nthe lookaside table, which uses explicit transactions.\r\n\r\n* clang format & typo in error handling.\r\n\r\n* Rework the comments to match the code.\r\n\r\n* Fix a comment.\r\n\r\n(cherry picked from commit 47fdb87459c726873d6af326e38771504f8a91d8)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jan 08, 2020 at 00:40 GMT",
        "updated_at": "Wednesday Jan 08, 2020 at 02:56 GMT",
        "closed_at": "Wednesday Jan 08, 2020 at 02:37 GMT",
        "merged_at": "Wednesday Jan 08, 2020 at 02:37 GMT"
    },
    {
        "key": "WT-5199",
        "number": 5116,
        "state": "closed",
        "title": "WT-5199 adding correctness tasks into rhel80 evergreen - Part 1",
        "body": "Jira ticket - [here](https://jira.mongodb.org/browse/WT-5199)\r\nEvergreen patch build [here](https://evergreen.mongodb.com/build/wiredtiger_rhel80_patch_5bd9fdfc0bb7f8fcf791e234b6e436c79dfe1fee_5e1517b6d1fe0737244a691b_20_01_07_23_44_13) ",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 07, 2020 at 23:48 GMT",
        "updated_at": "Wednesday Jan 08, 2020 at 23:01 GMT",
        "closed_at": "Wednesday Jan 08, 2020 at 23:01 GMT",
        "merged_at": "Wednesday Jan 08, 2020 at 23:01 GMT"
    },
    {
        "key": "WT-5271",
        "number": 5115,
        "state": "closed",
        "title": "WT-5271 Remove WT_PAGE_LOOKASIDE structure",
        "body": "This PR is removing the lookaside information and birthmarks that are currently stored in memory on each `WT_REF`.\r\n\r\nTo account for not having birthmark updates anymore, I've modified `__wt_txn_read` to check the on-disk value and interpret the start and stop time pairs as required.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 07, 2020 at 23:34 GMT",
        "updated_at": "Monday Jan 13, 2020 at 06:39 GMT",
        "closed_at": "Monday Jan 13, 2020 at 06:39 GMT",
        "merged_at": "Monday Jan 13, 2020 at 06:39 GMT"
    },
    {
        "key": "WT-5345",
        "number": 5114,
        "state": "closed",
        "title": "WT-5345 Add dump timestamp to wt verify config options",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Jan 07, 2020 at 06:04 GMT",
        "updated_at": "Friday Jan 10, 2020 at 03:12 GMT",
        "closed_at": "Friday Jan 10, 2020 at 03:12 GMT",
        "merged_at": "Friday Jan 10, 2020 at 03:12 GMT"
    },
    {
        "key": "WT-5391",
        "number": 5113,
        "state": "closed",
        "title": "WT-5391 merge develop",
        "body": "So I branched wt-5931-merge-develop off develop, then merged pm-1521-durable-history into it. As such this branch should merge cleanly into pm-1521-durable-history.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 06, 2020 at 23:46 GMT",
        "updated_at": "Tuesday Jan 28, 2020 at 06:05 GMT",
        "closed_at": "Tuesday Jan 07, 2020 at 03:39 GMT",
        "merged_at": null
    },
    {
        "key": "pm-1521",
        "number": 5112,
        "state": "closed",
        "title": "Merge develop into pm-1521-durable-history",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 06, 2020 at 21:54 GMT",
        "updated_at": "Monday Jan 06, 2020 at 23:41 GMT",
        "closed_at": "Monday Jan 06, 2020 at 23:41 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5003",
        "number": 5111,
        "state": "closed",
        "title": "WT-5003 Migrate wiredtiger-test-race-condition-stress-sanitizer from Jenkins to Evergreen",
        "body": "I updated the `format.sh` script to add a command line argument to run the timing stress split testing.\r\n\r\n* The Jenkins test is [here](http://build.wiredtiger.com:8080/job/wiredtiger-test-race-condition-stress-sanitizer/)\r\n* A successful patch build run over one hour is [here](https://evergreen.mongodb.com/version/5e12cb15a4cf47798eb0f30a)\r\n* The 24-hour patch build is [here](https://evergreen.mongodb.com/build/wiredtiger_ubuntu1804_patch_d6ab08870356f990972e588c7be39fd9f396df8c_5e12ca6d0305b91a4325fe41_20_01_06_05_53_17)\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 06, 2020 at 07:25 GMT",
        "updated_at": "Sunday Jan 12, 2020 at 22:41 GMT",
        "closed_at": "Sunday Jan 12, 2020 at 22:40 GMT",
        "merged_at": "Sunday Jan 12, 2020 at 22:40 GMT"
    },
    {
        "key": "WT-5120",
        "number": 5110,
        "state": "closed",
        "title": "WT-5120 checkpoint hangs when reconciliation doesn't release the evic\u2026",
        "body": "\u2026tion generation\r\n\r\n* I'm about to add a new argument to the row-search routine: restructure some cursor routines so the WT_CURSOR_BTREE argument is primary, and quit passing around the WT_SESSION_IMPL, we can derive it from the WT_CURSOR_BTREE.\r\n\r\n* Add a new cursor flag that modifies WT_CURSOR.updates to search any pinned page before doing a full tree search. Currently internal only, used for LAS inserts.\r\n\r\nHistorically, we used either (WT_CURSOR_BTREE.slot != 0) or (WT_CURSOR_BTREE.compare == 0) to determine when a leaf-only search wasn't possible because the key was outside the pinned cursor page's name space (in other words, the search was only successful if the searched-for key was within the leaf page's name space). I know how we got here, but it's getting messy and there are already too many different tests of search \"success\": change __wt_row_search/__wt_col_search to take an additional argument that returns if the leaf-page search wasn't possible. Reorder the __wt_row_search/__wt_col_search arguments so all 3 of the leaf-page-search oriented arguments are in order at the end of the argument list, triggered by a non-NULL leaf page.\r\n\r\n(cherry picked from commit 0f5c32a35d06bb175fbe7fe351e7c4ba4f47cab5)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Jan 06, 2020 at 05:55 GMT",
        "updated_at": "Wednesday Jan 08, 2020 at 00:34 GMT",
        "closed_at": "Wednesday Jan 08, 2020 at 00:34 GMT",
        "merged_at": "Wednesday Jan 08, 2020 at 00:34 GMT"
    },
    {
        "key": "WT-5392",
        "number": 5109,
        "state": "closed",
        "title": "WT-5392 Adding history store page back to urgent queue if eviction fails",
        "body": "The obsolete history store pages that are added to evition is not able to evict\r\nbecause of evicton threads try to evict the page before the checkpoint release\r\nthe hazard pointer on them. Try to add them back to the urgent queue until they\r\nget evicted.\r\n\r\nAdded additional checks to avoid edge cases where the child page is deleted, but\r\nnot yet removed from internal page.\r\n\r\nNew statistic is added to find out how the eviction is performing with adding back\r\nthe obsolete page to the queue again.\r\n\r\nReorganize the tests to reduce the duplicate code",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 06, 2020 at 05:35 GMT",
        "updated_at": "Friday Jan 17, 2020 at 06:02 GMT",
        "closed_at": "Friday Jan 17, 2020 at 03:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5391",
        "number": 5108,
        "state": "closed",
        "title": "WT-5391 Merge develop into durable history and resolve conflicts",
        "body": "The only conflict I saw that was tricky was in rec_visibility.c where @keithbostic had added:\r\n```         \r\n            /*\r\n             * Track the oldest update not on the page, used to decide whether reads can use the\r\n             * page image, hence using the start rather than the durable timestamp.\r\n             */\r\n            if (upd->start_ts < r->min_skipped_ts)\r\n                r->min_skipped_ts = upd->start_ts;\r\n```\r\n",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 06, 2020 at 05:35 GMT",
        "updated_at": "Monday Jan 06, 2020 at 15:19 GMT",
        "closed_at": "Monday Jan 06, 2020 at 07:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5320",
        "number": 5107,
        "state": "closed",
        "title": "WT-5320 Update restore to do lookaside as well",
        "body": "The change is failing test_base05.\r\n\r\nASAN build outputs:\r\n\r\n```\r\n==20789==ERROR: AddressSanitizer: heap-use-after-free on address 0x61200002d650 at pc 0x7f40eaa912a2 bp 0x7f40ea31f710 sp 0x7f40ea31f708\r\nREAD of size 8 at 0x61200002d650 thread T1\r\n    #0 0x7f40eaa912a1 in __wt_buf_free /mnt/data0/chenhaoqu/work/wiredtiger/build_posix/../src/include/buf.i:100:5\r\n    #1 0x7f40eaa91075 in __wt_page_las_free /mnt/data0/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_discard.c:286:13\r\n    #2 0x7f40eab562e8 in __split_parent /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:811:9\r\n    #3 0x7f40eab6e053 in __split_multi /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:2083:5\r\n    #4 0x7f40eab485a3 in __split_multi_lock /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:2122:16\r\n    #5 0x7f40eab483dc in __wt_split_multi /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:2149:5\r\n    #6 0x7f40eae269aa in __evict_page_dirty_update /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:369:13\r\n    #7 0x7f40eae21ff3 in __wt_evict /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:192:9\r\n    #8 0x7f40eae00db2 in __evict_page /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_lru.c:2236:5\r\n    #9 0x7f40eadf96fa in __evict_lru_pages /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_lru.c:1106:20\r\n    #10 0x7f40eae04ad5 in __evict_pass /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_lru.c:707:13\r\n    #11 0x7f40eadf89a1 in __evict_server /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_lru.c:376:5\r\n    #12 0x7f40eadf80b2 in __wt_evict_thread_run /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_lru.c:288:15\r\n    #13 0x7f40eb1074e5 in __thread_run /home/chenhaoqu/work/wiredtiger/build_posix/../src/support/thread_group.c:31:9\r\n    #14 0x7f40f00e06da in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76da)\r\n    #15 0x7f40ef66488e in clone /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\n0x61200002d650 is located 16 bytes inside of 288-byte region [0x61200002d640,0x61200002d760)\r\nfreed by thread T0 here:\r\n    #0 0x7f40f03e3eb2 in __interceptor_free /data/mci/bb51bb2e9ea058cc981d517c2029628d/toolchain-builder/tmp/build-llvm.sh-ieZ/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:124:3\r\n    #1 0x7f40eaf195aa in __wt_free_int /home/chenhaoqu/work/wiredtiger/build_posix/../src/os_common/os_alloc.c:301:5\r\n    #2 0x7f40eaa91125 in __wt_page_las_free /mnt/data0/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_discard.c:287:9\r\n    #3 0x7f40eab562e8 in __split_parent /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:811:9\r\n    #4 0x7f40eab4f30e in __split_insert /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:1940:16\r\n    #5 0x7f40eab481c2 in __split_insert_lock /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:2017:16\r\n    #6 0x7f40eab48016 in __wt_split_insert /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_split.c:2044:5\r\n    #7 0x7f40eae24e54 in __evict_review /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:585:21\r\n    #8 0x7f40eae21529 in __wt_evict /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:149:5\r\n    #9 0x7f40eae204cf in __wt_page_release_evict /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:80:11\r\n    #10 0x7f40eaaeb15d in __wt_page_in_func /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_read.c:791:23\r\n    #11 0x7f40eabff9be in __wt_page_swap_func /home/chenhaoqu/work/wiredtiger/build_posix/../src/include/btree.i:1650:11\r\n    #12 0x7f40eabfae1b in __wt_row_search /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/row_srch.c:425:20\r\n    #13 0x7f40eaa4915c in __cursor_row_search /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_cursor.c:398:5\r\n    #14 0x7f40eaa4f466 in __wt_btcur_insert /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_cursor.c:881:9\r\n    #15 0x7f40ead0f493 in __curfile_insert /home/chenhaoqu/work/wiredtiger/build_posix/../src/cursor/cur_file.c:258:5\r\n    #16 0x7f40ec01e1a2 in _wrap_Cursor_insert /home/chenhaoqu/work/wiredtiger/lang/python/wiredtiger_wrap.c:4393:16\r\n\r\npreviously allocated by thread T0 here:\r\n    #0 0x7f40f03e442a in calloc /data/mci/bb51bb2e9ea058cc981d517c2029628d/toolchain-builder/tmp/build-llvm.sh-ieZ/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:155:3\r\n    #1 0x7f40eaf17bff in __wt_calloc /home/chenhaoqu/work/wiredtiger/build_posix/../src/os_common/os_alloc.c:50:14\r\n    #2 0x7f40eac0ea1b in __wt_las_insert_updates /mnt/data0/chenhaoqu/work/wiredtiger/build_posix/../src/cache/cache_las.c:852:15\r\n    #3 0x7f40eafed182 in __rec_las_wrapup /home/chenhaoqu/work/wiredtiger/build_posix/../src/reconcile/rec_write.c:2354:13\r\n    #4 0x7f40eafdb778 in __rec_write_wrapup /home/chenhaoqu/work/wiredtiger/build_posix/../src/reconcile/rec_write.c:2180:9\r\n    #5 0x7f40eafca167 in __reconcile /home/chenhaoqu/work/wiredtiger/build_posix/../src/reconcile/rec_write.c:196:28\r\n    #6 0x7f40eafc8939 in __wt_reconcile /home/chenhaoqu/work/wiredtiger/build_posix/../src/reconcile/rec_write.c:89:11\r\n    #7 0x7f40eae253dd in __evict_review /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:648:11\r\n    #8 0x7f40eae21529 in __wt_evict /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:149:5\r\n    #9 0x7f40eae204cf in __wt_page_release_evict /home/chenhaoqu/work/wiredtiger/build_posix/../src/evict/evict_page.c:80:11\r\n    #10 0x7f40eaaeb15d in __wt_page_in_func /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_read.c:791:23\r\n    #11 0x7f40eabff9be in __wt_page_swap_func /home/chenhaoqu/work/wiredtiger/build_posix/../src/include/btree.i:1650:11\r\n    #12 0x7f40eabfae1b in __wt_row_search /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/row_srch.c:425:20\r\n    #13 0x7f40eaa4915c in __cursor_row_search /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_cursor.c:398:5\r\n    #14 0x7f40eaa4f466 in __wt_btcur_insert /home/chenhaoqu/work/wiredtiger/build_posix/../src/btree/bt_cursor.c:881:9\r\n    #15 0x7f40ead0f493 in __curfile_insert /home/chenhaoqu/work/wiredtiger/build_posix/../src/cursor/cur_file.c:258:5\r\n    #16 0x7f40ec01e1a2 in _wrap_Cursor_insert /home/chenhaoqu/work/wiredtiger/lang/python/wiredtiger_wrap.c:4393:16\r\n```\r\n\r\nIt doesn't make sense to me an eviction thread and an application thread are evicting the same page concurrently. Please have a look at the change and if you can spot something I'm doing wrong, that would be a great help.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Jan 06, 2020 at 05:33 GMT",
        "updated_at": "Monday Jan 13, 2020 at 04:48 GMT",
        "closed_at": "Monday Jan 13, 2020 at 04:48 GMT",
        "merged_at": "Monday Jan 13, 2020 at 04:48 GMT"
    },
    {
        "key": "WT-5261",
        "number": 5106,
        "state": "closed",
        "title": "WT-5261 coverage-report task timed out in Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 06, 2020 at 05:33 GMT",
        "updated_at": "Tuesday Jan 07, 2020 at 23:45 GMT",
        "closed_at": "Tuesday Jan 07, 2020 at 23:45 GMT",
        "merged_at": "Tuesday Jan 07, 2020 at 23:45 GMT"
    },
    {
        "key": "WT-5393",
        "number": 5105,
        "state": "closed",
        "title": "WT-5393 prepared transaction rollback and API error handling fixes",
        "body": "@agorrod, @sueloverso, I got the name check wrong in WT-5324.\r\n\r\nFixing it reveals that we need to allow at least two more calls in the context of transactional errors that have already occurred.\r\n\r\nI'm pushing forward down this path, but there's certainly an argument to be made that it's the wrong path to take, as it gains complexity.\r\n\r\nWe should definitely make sure Evergreen runs cleanly with this change before merging.",
        "base_ref": "develop",
        "created_at": "Monday Jan 06, 2020 at 05:06 GMT",
        "updated_at": "Wednesday Jan 29, 2020 at 15:32 GMT",
        "closed_at": "Wednesday Jan 29, 2020 at 15:32 GMT",
        "merged_at": "Wednesday Jan 29, 2020 at 15:32 GMT"
    },
    {
        "key": "WT-5192",
        "number": 5104,
        "state": "closed",
        "title": "WT-5192 Dont allow checkpoints to evict without a snapshot",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 06, 2020 at 03:26 GMT",
        "updated_at": "Monday Jan 06, 2020 at 05:02 GMT",
        "closed_at": "Monday Jan 06, 2020 at 05:02 GMT",
        "merged_at": "Monday Jan 06, 2020 at 05:02 GMT"
    },
    {
        "key": "WT-5145",
        "number": 5103,
        "state": "closed",
        "title": "Revert \"WT-5145 v4.0 Backport\"",
        "body": "Reverts wiredtiger/wiredtiger#5019",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Jan 06, 2020 at 01:37 GMT",
        "updated_at": "Monday Jan 06, 2020 at 01:39 GMT",
        "closed_at": "Monday Jan 06, 2020 at 01:37 GMT",
        "merged_at": "Monday Jan 06, 2020 at 01:37 GMT"
    },
    {
        "key": "WT-5120",
        "number": 5102,
        "state": "closed",
        "title": "WT-5120 Checkpoint hangs when reconciliation doesn't release the eviction generation (#4943) #5018 #5071 [BACKPORT-v3.6]",
        "body": "Backports both WT-5120 and WT-5277 and WT-5135.\r\n\r\nJIRA: https://jira.mongodb.org/browse/BACKPORT-5489",
        "base_ref": "mongodb-3.6",
        "created_at": "Sunday Jan 05, 2020 at 23:06 GMT",
        "updated_at": "Tuesday Jan 14, 2020 at 03:17 GMT",
        "closed_at": "Tuesday Jan 14, 2020 at 03:17 GMT",
        "merged_at": "Tuesday Jan 14, 2020 at 03:17 GMT"
    },
    {
        "key": "WT-5388",
        "number": 5101,
        "state": "closed",
        "title": "WT-5388 Fix las write squash statistic",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Sunday Jan 05, 2020 at 22:37 GMT",
        "updated_at": "Wednesday Jan 08, 2020 at 03:33 GMT",
        "closed_at": "Wednesday Jan 08, 2020 at 03:33 GMT",
        "merged_at": "Wednesday Jan 08, 2020 at 03:33 GMT"
    },
    {
        "key": "WT-5389",
        "number": 5100,
        "state": "closed",
        "title": "WT-5389 add timestamps to format.sh test runs",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jan 05, 2020 at 22:09 GMT",
        "updated_at": "Sunday Jan 05, 2020 at 23:40 GMT",
        "closed_at": "Sunday Jan 05, 2020 at 23:40 GMT",
        "merged_at": "Sunday Jan 05, 2020 at 23:40 GMT"
    },
    {
        "key": "WT-5387",
        "number": 5099,
        "state": "closed",
        "title": "WT-5387 prepared transaction resolution can stall eviction on active pages",
        "body": "@agorrod, @bvpvamsikrishna: I'm not sure who should do the review of this one. The 1798c9b commit is an eviction change (57f7c60, c8d9b24 and 8006ddd are debugging fixes to that change). The 98c8e3c commit is the prepared-transaction change (and ea769ec is a debugging fix to that change). I've asked you two for reviews, but don't hesitate to turf your review slot to someone else.\r\n\r\nI think 1798c9b is the more contentious change: basically, it seems wrong to me to involve any thread that's resolving a transaction in forced eviction, and that was slowing the workload that I was working with. In summary, if a page is large, we're already having trouble evicting it and a thread resolving a transaction is going to make it more likely we can evict the page. in other words, if transaction commit/prepare/rollback wants a page, by definition that page has an unresolved transaction and can't be evicted.",
        "base_ref": "develop",
        "created_at": "Sunday Jan 05, 2020 at 21:50 GMT",
        "updated_at": "Thursday Jan 23, 2020 at 00:35 GMT",
        "closed_at": "Thursday Jan 23, 2020 at 00:35 GMT",
        "merged_at": "Thursday Jan 23, 2020 at 00:35 GMT"
    },
    {
        "key": "WT-5291",
        "number": 5098,
        "state": "closed",
        "title": "WT-5291 Added new statistics for garbage collection of history store",
        "body": "The new statistics didn't seem to fit in an existing statistics category, so I made a new one with the idea that the existing history stats can be migrated.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 03, 2020 at 19:33 GMT",
        "updated_at": "Wednesday Jan 08, 2020 at 00:57 GMT",
        "closed_at": "Wednesday Jan 08, 2020 at 00:57 GMT",
        "merged_at": "Wednesday Jan 08, 2020 at 00:57 GMT"
    },
    {
        "key": "WT-5343",
        "number": 5097,
        "state": "closed",
        "title": "WT-5343 wt list show history",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Jan 03, 2020 at 04:28 GMT",
        "updated_at": "Monday Jan 06, 2020 at 04:01 GMT",
        "closed_at": "Monday Jan 06, 2020 at 04:01 GMT",
        "merged_at": "Monday Jan 06, 2020 at 04:01 GMT"
    },
    {
        "key": "WT-5334",
        "number": 5096,
        "state": "closed",
        "title": "WT-5334 Add testing coverage for static wt build",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 03, 2020 at 03:47 GMT",
        "updated_at": "Wednesday Jan 08, 2020 at 02:37 GMT",
        "closed_at": "Wednesday Jan 08, 2020 at 02:37 GMT",
        "merged_at": "Wednesday Jan 08, 2020 at 02:37 GMT"
    },
    {
        "key": "WT-5379",
        "number": 5095,
        "state": "closed",
        "title": "WT-5379 missing varargs cleanup",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 02, 2020 at 18:55 GMT",
        "updated_at": "Wednesday Jan 08, 2020 at 15:34 GMT",
        "closed_at": "Wednesday Jan 08, 2020 at 15:34 GMT",
        "merged_at": "Wednesday Jan 08, 2020 at 15:34 GMT"
    },
    {
        "key": "WT-5042",
        "number": 5094,
        "state": "closed",
        "title": "WT-5042 Reduce configuration parsing overhead from checkpoints (#4936) #5009 [BACKPORT-v3.6]",
        "body": "Backports both WT-5042 and WT-5239.\r\n\r\nThe syscall test mentioned in #5009 still fails in 3.6 version.\r\nJIRA: https://jira.mongodb.org/browse/BACKPORT-5645",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jan 02, 2020 at 05:27 GMT",
        "updated_at": "Sunday Jan 05, 2020 at 23:00 GMT",
        "closed_at": "Sunday Jan 05, 2020 at 23:00 GMT",
        "merged_at": "Sunday Jan 05, 2020 at 23:00 GMT"
    },
    {
        "key": "WT-5321",
        "number": 5093,
        "state": "closed",
        "title": "WT-5321 Stats update according to durable history",
        "body": "As part of the durable history project, the cache overflow\r\nfunctionality is replaced with the new functionality of the history\r\nstore. As part of this change, some of the existing\r\nstats related to lookaside are invalid and those gets removed.\r\nBut these are stats are quite important to find out the performance\r\nproblems in the customer environments, because of that reason,\r\nwe will maintain some stats that are possible to provide with\r\nhistory store useful for finding out performance issues.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Jan 02, 2020 at 03:59 GMT",
        "updated_at": "Tuesday Jan 07, 2020 at 12:47 GMT",
        "closed_at": "Tuesday Jan 07, 2020 at 12:47 GMT",
        "merged_at": "Tuesday Jan 07, 2020 at 12:47 GMT"
    },
    {
        "key": "WT-5247",
        "number": 5092,
        "state": "closed",
        "title": "WT-5247 Resizing modify operation log full values. (#4977) [BACKPORT-v3.6]",
        "body": "* WT-5247 Resizing modify operation log full values.\r\n\r\nWhen modify operations resize part of a value, subsequent bytes are shuffled around and the operation is no longer idempotent.  Since WiredTiger's recovery can reapply operations that overlap with a checkpoint, it is not safe to log resizing modify operations.  Instead, log full update operations for that case.\r\n\r\n(cherry picked from commit 9badd6c26c9b5f9e008913a271355cf99ba17952)",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jan 02, 2020 at 00:57 GMT",
        "updated_at": "Friday Jan 03, 2020 at 02:36 GMT",
        "closed_at": "Friday Jan 03, 2020 at 02:36 GMT",
        "merged_at": "Friday Jan 03, 2020 at 02:36 GMT"
    },
    {
        "key": "WT-5218",
        "number": 5091,
        "state": "closed",
        "title": "WT-5218 Update page readgen when pages marked for early eviction are \u2026",
        "body": "\u2026dirtied (#4953)\r\n\r\n(cherry picked from commit 3a42ced49595b1b082263047cfd2e4d536d62514)",
        "base_ref": "mongodb-3.6",
        "created_at": "Wednesday Jan 01, 2020 at 23:46 GMT",
        "updated_at": "Thursday Jan 02, 2020 at 02:33 GMT",
        "closed_at": "Thursday Jan 02, 2020 at 02:33 GMT",
        "merged_at": "Thursday Jan 02, 2020 at 02:33 GMT"
    },
    {
        "key": "WT-5377",
        "number": 5090,
        "state": "closed",
        "title": "WT-5377 variable-length column store insert locking in format test program can stall eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 01, 2020 at 01:06 GMT",
        "updated_at": "Thursday Jan 02, 2020 at 18:15 GMT",
        "closed_at": "Thursday Jan 02, 2020 at 18:15 GMT",
        "merged_at": "Thursday Jan 02, 2020 at 18:15 GMT"
    },
    {
        "key": "WT-5374",
        "number": 5089,
        "state": "closed",
        "title": "WT-5374 Commit to las for each key and free updates for eviction",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Dec 31, 2019 at 05:33 GMT",
        "updated_at": "Monday Jan 06, 2020 at 00:05 GMT",
        "closed_at": "Monday Jan 06, 2020 at 00:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5369",
        "number": 5088,
        "state": "closed",
        "title": "WT-5369 Don't use transaction ids from a page with a previous startup generation",
        "body": "When we started writing validity windows to disk in #5022, we began hitting assertions telling us that some cells had a stop time pair earlier than the start time pair. This can happen when you call `wiredtiger_open` on an existing database since your transaction id allocator resets to 0 and already existing cells will have their own transaction ids. The solution in this PR is to ignore transaction ids from a previous startup generation.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Dec 31, 2019 at 05:15 GMT",
        "updated_at": "Wednesday Jan 29, 2020 at 02:09 GMT",
        "closed_at": "Wednesday Jan 29, 2020 at 02:09 GMT",
        "merged_at": "Wednesday Jan 29, 2020 at 02:09 GMT"
    },
    {
        "key": "WT-5290",
        "number": 5087,
        "state": "closed",
        "title": "WT-5290 checkpoint garbage collection verbose output",
        "body": "Added a new verbose macro to enable to get the verbose logs of checkpoint\r\ndoing the garbage cleanup of history store.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Dec 31, 2019 at 03:35 GMT",
        "updated_at": "Friday Jan 03, 2020 at 01:21 GMT",
        "closed_at": "Friday Jan 03, 2020 at 01:21 GMT",
        "merged_at": "Friday Jan 03, 2020 at 01:21 GMT"
    },
    {
        "key": "WT-5235",
        "number": 5086,
        "state": "closed",
        "title": "WT-5235 Benchmark for lookaside stress testing",
        "body": "This is an example Workgen benchmark to stress lookaside/LAS. This is achieved through: \r\n\r\n- Long running transactions consisting of read and update operations.\r\n- Low cache size (~20%) for a reasonably sized WT table with large documents.\r\n- Pareto distribution for operations in long running transactions. This will cause skewed access for a selective set of keys in WT table.\r\n- Relatively large number of read operation threads to stress cache.",
        "base_ref": "develop",
        "created_at": "Monday Dec 30, 2019 at 05:38 GMT",
        "updated_at": "Thursday Jan 02, 2020 at 05:55 GMT",
        "closed_at": "Thursday Jan 02, 2020 at 05:55 GMT",
        "merged_at": "Thursday Jan 02, 2020 at 05:55 GMT"
    },
    {
        "key": "WT-5290",
        "number": 5085,
        "state": "closed",
        "title": "WT-5290 checkpoint garbage collection verbose output",
        "body": "Added a new verbose macro to enable to get the verbose logs of checkpoint\r\ndoing the garbage cleanup of history store.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Dec 30, 2019 at 05:15 GMT",
        "updated_at": "Tuesday Dec 31, 2019 at 00:21 GMT",
        "closed_at": "Tuesday Dec 31, 2019 at 00:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5337",
        "number": 5084,
        "state": "closed",
        "title": "WT-5337 Example to use traits pattern to simplify code",
        "body": "This is an example to explore whether it's feasible to use traits pattern to get rid of some of the switch and if statements in the code.\r\n\r\nI managed to get it working and successfully removed some of the switch statements. Of course there are more I haven't tried to tackle yet. However, the way I chose to implement consumes a little bit more memory than before as I store the traits reference in the in-memory data structures.\r\n\r\nI implemented the traits pattern in hierarchy. In each module, I have a traits file, which defines the traits structs for that module. If a module depends on another module, its traits will include the traits of the modules it depends on. In my example, I demonstrate it with the rec_traits, which contains cache_las_traits. The idea here is to encapsulate the implementation in each module instead of having a monolithic traits file for everything, so that we can potentially build each module separately in the future.\r\n\r\nPlease put your thoughts about this in the Jira ticket (WT-5337) :).",
        "base_ref": "develop",
        "created_at": "Sunday Dec 29, 2019 at 10:22 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 22:54 GMT",
        "closed_at": "Monday Jan 20, 2020 at 05:48 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5327",
        "number": 5083,
        "state": "closed",
        "title": "WT-5327 Backup cursor API can fail to restore WT_SESSION name information",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Dec 28, 2019 at 18:35 GMT",
        "updated_at": "Monday Dec 30, 2019 at 20:16 GMT",
        "closed_at": "Monday Dec 30, 2019 at 20:16 GMT",
        "merged_at": "Monday Dec 30, 2019 at 20:16 GMT"
    },
    {
        "key": "WT-5119",
        "number": 5082,
        "state": "closed",
        "title": "WT-5119 Birthmark records can be read as normal updates if reads race with checkpoints.",
        "body": "Sue, Alex, Vamsi:\r\n\r\nThe problem in the original code is here:\r\n\r\n```\r\n    105     if (upd->type == WT_UPDATE_BIRTHMARK) {\r\n    106         upd->type = WT_UPDATE_STANDARD;\r\n    107         upd->txnid = WT_TXN_ABORTED;\r\n    108     }\r\n```\r\nIf the updates are written to memory in the above order, and a reader gets in between lines 106 and 107, a birthmark record can be read as a normal update because its type is `WT_UPDATE_STANDARD` and `upd.txnid` has yet to be set to `WT_TXN_ABORTED`.\r\n\r\nI think it might be safe to merge the two `WT_PUBLISH` commands into something like this:\r\n```\r\n    if (upd->type == WT_UPDATE_BIRTHMARK) {\r\n        append->txnid = upd->txnid;\r\n        append->start_ts = upd->start_ts;\r\n        append->durable_ts = upd->durable_ts;\r\n        append->next = upd->next;\r\n\r\n        upd->txnid = WT_TXN_ABORTED;\r\n    }\r\n\r\n    /* Append the new entry into the update list. */\r\n    WT_PUBLISH(upd->next, append);\r\n\r\n    if (upd->type == WT_UPDATE_BIRTHMARK)  \r\n        upd->type = WT_UPDATE_STANDARD;\r\n\r\n    __wt_cache_page_inmem_incr(session, page, size);\r\n```\r\nThat potentially sets `upd.txnid = WT_TXN_ABORTED` before `upd.next = append`, and my reading of the code makes me think that's safe because if we skip the birthmark record, we'll instead read the original value from that page, and I think that's correct behavior.\r\n\r\nHowever, I'm not confident that's true in all cases, so this diff is the slower, more cautious change of updating `upd.next = append`, then ensuring we've aborted the update before setting the update's type to `WT_UPDATE_STANDARD`.\r\n\r\nEDIT:\r\nIt is also worth considering if this solution isn't conservative enough. The current diff allows `WT_UPDATE.txnid = WT_TXN_ABORTED` to be written before `WT_UPDATE.next = append` is written. As above, I think that's safe, but I'm not confident.\r\n\r\nEDIT:\r\nHere's the most conservative diff:\r\n```\r\ndiff --git a/src/reconcile/rec_visibility.c b/src/reconcile/rec_visibility.c\r\nindex 9a78ffe07..744d2a4bd 100644\r\n--- a/src/reconcile/rec_visibility.c\r\n+++ b/src/reconcile/rec_visibility.c\r\n@@ -102,7 +102,7 @@ __rec_append_orig_value(\r\n \r\n     /* Replace the birthmark with an aborted transaction. */\r\n     if (upd->type == WT_UPDATE_BIRTHMARK) {\r\n-        upd->txnid = WT_TXN_ABORTED;\r\n+        WT_PUBLISH(upd->txnid, WT_TXN_ABORTED);\r\n         WT_PUBLISH(upd->type, WT_UPDATE_STANDARD);\r\n     }\r\n```",
        "base_ref": "develop",
        "created_at": "Friday Dec 27, 2019 at 22:17 GMT",
        "updated_at": "Tuesday Jan 07, 2020 at 05:53 GMT",
        "closed_at": "Tuesday Jan 07, 2020 at 05:53 GMT",
        "merged_at": "Tuesday Jan 07, 2020 at 05:53 GMT"
    },
    {
        "key": "WT-5328",
        "number": 5081,
        "state": "closed",
        "title": "WT-5328 in memory obsolete page cleanup",
        "body": "Checkpoint garbage cleanup cannot delete the obsolete in-memory pages.\r\nAs these pages are obsolete, no session can refer these pages in future.\r\nLets add them to the urgent eviction queue, once they get evicted, the\r\nnext checkpoint of history store takes care of removing those obsolete\r\npages.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 27, 2019 at 05:10 GMT",
        "updated_at": "Tuesday Dec 31, 2019 at 02:57 GMT",
        "closed_at": "Tuesday Dec 31, 2019 at 02:57 GMT",
        "merged_at": "Tuesday Dec 31, 2019 at 02:57 GMT"
    },
    {
        "key": "WT-5367",
        "number": 5080,
        "state": "closed",
        "title": "WT-5367 Log a message when rolling a thread back because it holds the oldest timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 25, 2019 at 19:54 GMT",
        "updated_at": "Friday Jan 10, 2020 at 17:21 GMT",
        "closed_at": "Friday Jan 10, 2020 at 17:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5366",
        "number": 5079,
        "state": "closed",
        "title": "WT-5366 read-committed and read-uncommitted transactions can stall eviction",
        "body": "This change works, but I'm unsure if it's correct. Specific questions:\r\n\r\n* Should the check be wrapped in `!F_ISSET(txn, WT_TXN_HAS_SNAPSHOT)` or `txn->isolation == WT_ISO_READ_UNCOMMITTED || txn->isolation == WT_ISO_READ_COMMITTED` or something else?\r\n\r\n* I don't understand why `txn_state->metadata_pinned` needs to be checked; my reading of the code indicates it shouldn't be blocking the oldest ID from moving forward permanently, but it does (and it does not move in lockstep with `txn_state->pinned_id`, they can have different values).\r\n\r\nEDIT:\r\nIn commit a7e0242, I made the checks of `WT_TXN_STATE.pinned_id` and `WT_TXN_STATE.metadata_pinned` independent. As far as I can tell, they have no consistent relationship and either one can independently stall the system. Again, I need some guidance here to get to the correct fix.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 25, 2019 at 19:24 GMT",
        "updated_at": "Sunday Jan 19, 2020 at 22:36 GMT",
        "closed_at": "Sunday Jan 19, 2020 at 22:36 GMT",
        "merged_at": "Sunday Jan 19, 2020 at 22:36 GMT"
    },
    {
        "key": "WT-5312",
        "number": 5078,
        "state": "closed",
        "title": "WT-5312 Add thread doing random cursor operations to format's cache size calculation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 24, 2019 at 20:26 GMT",
        "updated_at": "Friday Dec 27, 2019 at 02:39 GMT",
        "closed_at": "Friday Dec 27, 2019 at 02:39 GMT",
        "merged_at": "Friday Dec 27, 2019 at 02:39 GMT"
    },
    {
        "key": "WT-5365",
        "number": 5077,
        "state": "closed",
        "title": "WT-5365 Remove format's long-running transaction support.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 24, 2019 at 19:02 GMT",
        "updated_at": "Thursday Dec 26, 2019 at 17:28 GMT",
        "closed_at": "Thursday Dec 26, 2019 at 17:28 GMT",
        "merged_at": "Thursday Dec 26, 2019 at 17:28 GMT"
    },
    {
        "key": "WT-5361",
        "number": 5076,
        "state": "closed",
        "title": "WT-5361 Fix choosing aborted transaction to write to disk",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Dec 23, 2019 at 06:21 GMT",
        "updated_at": "Sunday Dec 29, 2019 at 22:38 GMT",
        "closed_at": "Sunday Dec 29, 2019 at 22:38 GMT",
        "merged_at": "Sunday Dec 29, 2019 at 22:38 GMT"
    },
    {
        "key": "WT-5360",
        "number": 5075,
        "state": "closed",
        "title": "WT-5360 Add template for a glossary in developer docs",
        "body": "There is no real content yet, but I thought I'd get it started.",
        "base_ref": "develop",
        "created_at": "Monday Dec 23, 2019 at 05:15 GMT",
        "updated_at": "Monday Dec 23, 2019 at 06:42 GMT",
        "closed_at": "Monday Dec 23, 2019 at 06:35 GMT",
        "merged_at": "Monday Dec 23, 2019 at 06:35 GMT"
    },
    {
        "key": "WT-4978",
        "number": 5074,
        "state": "closed",
        "title": "WT-4978 Migrate pull-request-compilers to evergreen",
        "body": "I tried to move all the ubuntu test to the new ubuntu1804-wt-build distro. However, there are only limited number of instances running in evergreen. I ended up creating a new build variant for this task and keeping running everything else using ubuntu18.04-test.",
        "base_ref": "develop",
        "created_at": "Monday Dec 23, 2019 at 01:06 GMT",
        "updated_at": "Monday Dec 30, 2019 at 23:53 GMT",
        "closed_at": "Monday Dec 30, 2019 at 23:53 GMT",
        "merged_at": "Monday Dec 30, 2019 at 23:53 GMT"
    },
    {
        "key": "WT-4998",
        "number": 5073,
        "state": "closed",
        "title": "WT-4998 Migrate jenkins wiredtiger-test-format-stress-ppc job to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Dec 22, 2019 at 23:03 GMT",
        "updated_at": "Monday Dec 30, 2019 at 05:20 GMT",
        "closed_at": "Monday Dec 30, 2019 at 05:20 GMT",
        "merged_at": "Monday Dec 30, 2019 at 05:20 GMT"
    },
    {
        "key": "WT-5081",
        "number": 5072,
        "state": "closed",
        "title": "WT-5081 Added --asan option to run WT built with the address sanitizer.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 20, 2019 at 16:43 GMT",
        "updated_at": "Tuesday Jan 07, 2020 at 17:01 GMT",
        "closed_at": "Tuesday Jan 07, 2020 at 17:01 GMT",
        "merged_at": "Tuesday Jan 07, 2020 at 17:01 GMT"
    },
    {
        "key": "WT-5135",
        "number": 5071,
        "state": "closed",
        "title": "WT-5135 v4.0 backport",
        "body": "(cherry picked from commit a68760eb307a0dd7ccd6bef41c37fbd99d35c433)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Dec 20, 2019 at 04:02 GMT",
        "updated_at": "Monday Jan 06, 2020 at 04:03 GMT",
        "closed_at": "Monday Jan 06, 2020 at 04:03 GMT",
        "merged_at": "Monday Jan 06, 2020 at 04:03 GMT"
    },
    {
        "key": "WT-5335",
        "number": 5070,
        "state": "closed",
        "title": "WT-5335 Read the start and stop time pairs back from cell",
        "body": "This change read the time pairs we write to the cell back to memory when we append the on page value to the update chain. If the cell has a stop time pair, we need to append an extra tombstone before the on page value.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 20, 2019 at 02:35 GMT",
        "updated_at": "Monday Dec 23, 2019 at 05:04 GMT",
        "closed_at": "Monday Dec 23, 2019 at 05:04 GMT",
        "merged_at": "Monday Dec 23, 2019 at 05:04 GMT"
    },
    {
        "key": "WT-5333",
        "number": 5069,
        "state": "closed",
        "title": "WT-5333 Simplify txn read and remove invisible birthmark optimisation",
        "body": "Now the algorithm can be simplified to first walk the update chain,\r\nthen the history store, and return the first visibile update.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 20, 2019 at 01:59 GMT",
        "updated_at": "Monday Dec 23, 2019 at 01:14 GMT",
        "closed_at": "Monday Dec 23, 2019 at 01:14 GMT",
        "merged_at": "Monday Dec 23, 2019 at 01:14 GMT"
    },
    {
        "key": "WT-5300",
        "number": 5068,
        "state": "closed",
        "title": "WT-5300 history store internal page cleanup",
        "body": "Whenever checkpoint is flushing the internal page, it scans the\r\nentire page to find out the obsolete child pages and mark them\r\nas obsolete, during the reconciliation of the internal page, all\r\nthe child pages are removed. If the internal page is a clean page\r\nand empty, it will marked as deleted.\r\n    \r\nApart from the above, the tree walk reads the internal pages into\r\nmemory if they don't exist in memory and they are from history\r\nstore for the obsolete page removal.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 20, 2019 at 00:50 GMT",
        "updated_at": "Monday Dec 30, 2019 at 19:30 GMT",
        "closed_at": "Sunday Dec 29, 2019 at 12:14 GMT",
        "merged_at": "Sunday Dec 29, 2019 at 12:14 GMT"
    },
    {
        "key": "WT-5004",
        "number": 5067,
        "state": "closed",
        "title": "WT-5004 Migrate Jenkins \u201cwiredtiger-test-checkpoint-stress\u201d job to Evergreen",
        "body": "Migrate Jenkins \u201cwiredtiger-test-checkpoint-stress\u201d job to Evergreen\r\n\r\nAdded task level and command level timeout configuration to run for 24 hours max.",
        "base_ref": "develop",
        "created_at": "Friday Dec 20, 2019 at 00:14 GMT",
        "updated_at": "Sunday Dec 22, 2019 at 22:47 GMT",
        "closed_at": "Sunday Dec 22, 2019 at 22:47 GMT",
        "merged_at": "Sunday Dec 22, 2019 at 22:47 GMT"
    },
    {
        "key": "WT-5280",
        "number": 5066,
        "state": "closed",
        "title": "WT-5280 Checkpoint writes to lookaside",
        "body": "So this change was mostly a lot of fiddling with flags sent into reconciliation from bt_sync.c when we're taking a checkpoint, and then dealing with odd fallout mainly via modifying flow through __rec_upd_select. I'm not a huge fan of how fiddly the if statement is there but it seems to work now in all cases we have in our python test suite.\r\n\r\nAdditionally I added flags to the update and merged the ext with those flags.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Dec 19, 2019 at 03:34 GMT",
        "updated_at": "Friday Jan 03, 2020 at 02:24 GMT",
        "closed_at": "Friday Jan 03, 2020 at 02:24 GMT",
        "merged_at": "Friday Jan 03, 2020 at 02:24 GMT"
    },
    {
        "key": "WT-5112",
        "number": 5065,
        "state": "closed",
        "title": "WT-5112 Update regex to handle labels with underscores (#5062) BACKPORT-4.0",
        "body": "(cherry picked from commit f1e0c0a784f0f86fa5fb6c1e914a9d0b7fac7448)",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Dec 19, 2019 at 03:05 GMT",
        "updated_at": "Friday Dec 20, 2019 at 03:05 GMT",
        "closed_at": "Friday Dec 20, 2019 at 03:05 GMT",
        "merged_at": "Friday Dec 20, 2019 at 03:05 GMT"
    },
    {
        "key": "WT-5112",
        "number": 5064,
        "state": "closed",
        "title": "WT-5112 Update regex to handle labels with underscores (#5062) BACKPORT-4.2",
        "body": "(cherry picked from commit f1e0c0a784f0f86fa5fb6c1e914a9d0b7fac7448)",
        "base_ref": "mongodb-4.2",
        "created_at": "Thursday Dec 19, 2019 at 02:51 GMT",
        "updated_at": "Thursday Dec 19, 2019 at 22:08 GMT",
        "closed_at": "Thursday Dec 19, 2019 at 22:08 GMT",
        "merged_at": "Thursday Dec 19, 2019 at 22:08 GMT"
    },
    {
        "key": "WT-5330",
        "number": 5063,
        "state": "closed",
        "title": "WT-5330 Read-only transactions are being rolled back in MongoDB",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 18, 2019 at 23:23 GMT",
        "updated_at": "Sunday Dec 22, 2019 at 18:34 GMT",
        "closed_at": "Sunday Dec 22, 2019 at 18:33 GMT",
        "merged_at": "Sunday Dec 22, 2019 at 18:33 GMT"
    },
    {
        "key": "WT-5112",
        "number": 5062,
        "state": "closed",
        "title": "WT-5112 Format goto multi-word labels ",
        "body": "I updated the regex in `s_goto.py` and the `./s_all` run updated the other files.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 18, 2019 at 04:27 GMT",
        "updated_at": "Thursday Dec 19, 2019 at 02:33 GMT",
        "closed_at": "Thursday Dec 19, 2019 at 02:32 GMT",
        "merged_at": "Thursday Dec 19, 2019 at 02:32 GMT"
    },
    {
        "key": "WT-4919",
        "number": 5061,
        "state": "closed",
        "title": "WT-4919 Add exact memory reallocation debug configuration",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 18, 2019 at 03:48 GMT",
        "updated_at": "Friday Dec 20, 2019 at 15:46 GMT",
        "closed_at": "Friday Dec 20, 2019 at 15:46 GMT",
        "merged_at": "Friday Dec 20, 2019 at 15:46 GMT"
    },
    {
        "key": "WT-5324",
        "number": 5060,
        "state": "closed",
        "title": "WT-5324 review of error handling in the WiredTiger API",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 18, 2019 at 01:30 GMT",
        "updated_at": "Monday Dec 23, 2019 at 17:25 GMT",
        "closed_at": "Monday Dec 23, 2019 at 17:25 GMT",
        "merged_at": "Monday Dec 23, 2019 at 17:25 GMT"
    },
    {
        "key": "WT-5206",
        "number": 5059,
        "state": "closed",
        "title": "WT-5206 Add incremental backup checkpoint information",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 17, 2019 at 20:38 GMT",
        "updated_at": "Tuesday Feb 04, 2020 at 21:44 GMT",
        "closed_at": "Tuesday Feb 04, 2020 at 21:44 GMT",
        "merged_at": "Tuesday Feb 04, 2020 at 21:44 GMT"
    },
    {
        "key": "WT-5090",
        "number": 5058,
        "state": "closed",
        "title": "WT-5090 Log message to event handler when rollback due to cache full",
        "body": "Added log message to the event handler when rollback due to cache full. Tested through randomly factors which forcibly initiates the workflow of producing the message.  \r\n\r\nJIRA: https://jira.mongodb.org/browse/WT-5090",
        "base_ref": "develop",
        "created_at": "Monday Dec 16, 2019 at 05:07 GMT",
        "updated_at": "Wednesday Dec 18, 2019 at 04:25 GMT",
        "closed_at": "Wednesday Dec 18, 2019 at 04:24 GMT",
        "merged_at": "Wednesday Dec 18, 2019 at 04:24 GMT"
    },
    {
        "key": "WT-4921",
        "number": 5057,
        "state": "closed",
        "title": "WT-4921 Add debug mode which slows down checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 16, 2019 at 03:22 GMT",
        "updated_at": "Thursday Dec 19, 2019 at 04:46 GMT",
        "closed_at": "Thursday Dec 19, 2019 at 04:46 GMT",
        "merged_at": "Thursday Dec 19, 2019 at 04:46 GMT"
    },
    {
        "key": "WT-5247",
        "number": 5056,
        "state": "closed",
        "title": "WT-5247 Resizing modify operation log full values. (#4977) [Backport to 4.0]",
        "body": "* WT-5247 Resizing modify operation log full values.\r\n\r\nWhen modify operations resize part of a value, subsequent bytes are shuffled around and the operation is no longer idempotent.  Since WiredTiger's recovery can reapply operations that overlap with a checkpoint, it is not safe to log resizing modify operations.  Instead, log full update operations for that case.\r\n\r\n(cherry picked from commit 9badd6c26c9b5f9e008913a271355cf99ba17952)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Dec 16, 2019 at 03:01 GMT",
        "updated_at": "Sunday Dec 22, 2019 at 23:37 GMT",
        "closed_at": "Sunday Dec 22, 2019 at 23:37 GMT",
        "merged_at": "Sunday Dec 22, 2019 at 23:37 GMT"
    },
    {
        "key": "WT-5169",
        "number": 5055,
        "state": "closed",
        "title": "WT-5169 WT_REF_LIMBO pages cannot support fast (leaf-page only) searches [Backport to 4.0]",
        "body": "* Add a function to dump the LAS table based on a random cursor.\r\n\r\n* If a thread does a timestamp-based read which doesn't require page history (that is, the page\r\nis left in WT_REF_LIMBO state), and then does a subsequent read based on a different timestamp\r\nwhich does require page history, we can't treat the page as \"pinned\", we have to take the full\r\nread path in order to load the page history.\r\n\r\n* Assert a pinned page is either in a WT_REF_LIMBO or WT_REF_MEM state.\r\n\r\n(cherry picked from commit 9dde82b6f01edc02562535291b02b52a01e6f05d)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Dec 16, 2019 at 00:53 GMT",
        "updated_at": "Monday Dec 16, 2019 at 03:10 GMT",
        "closed_at": "Monday Dec 16, 2019 at 03:10 GMT",
        "merged_at": "Monday Dec 16, 2019 at 03:10 GMT"
    },
    {
        "key": "WT-4968",
        "number": 5054,
        "state": "closed",
        "title": "WT-4968 Remove the all_committed timestamp",
        "body": "@boboeee #5040 was reverted, and I created this new PR using the same branch so that you can continue work on it. \r\n\r\nPlease make sure to create an Evergreen patch build verify the impact to MongoDB this time. Cheers.",
        "base_ref": "develop",
        "created_at": "Monday Dec 16, 2019 at 00:28 GMT",
        "updated_at": "Thursday Jan 02, 2020 at 01:02 GMT",
        "closed_at": "Thursday Jan 02, 2020 at 01:01 GMT",
        "merged_at": "Thursday Jan 02, 2020 at 01:01 GMT"
    },
    {
        "key": "WT-4968",
        "number": 5053,
        "state": "closed",
        "title": "Revert \"WT-4968 remove all committed and connection level commit timestamps\"",
        "body": "Reverts wiredtiger/wiredtiger#5040",
        "base_ref": "develop",
        "created_at": "Monday Dec 16, 2019 at 00:22 GMT",
        "updated_at": "Monday Dec 16, 2019 at 00:22 GMT",
        "closed_at": "Monday Dec 16, 2019 at 00:22 GMT",
        "merged_at": "Monday Dec 16, 2019 at 00:22 GMT"
    },
    {
        "key": "WT-5196",
        "number": 5052,
        "state": "closed",
        "title": "WT-5196 data mismatch with las sweep (#4967) [Backport to 4.0]",
        "body": "* WT-5196 Let the LAS sweep works under read committed isolation\r\n\r\nLAS sweep working under read uncommitted isolation can find the\r\nLAS records that are even not committed. The LAS sweep does the\r\ncleanup based on the first record that is present for the key.\r\nAs the LAS sweep operates in read uncommitted mode, sometimes\r\neven when the entire record chain for the key is not finished\r\ninsertion, the LAS sweep may clean the part of the update chain\r\nas it finds them as obsolete. This leads to missing update chain\r\nrecords and that leads to record miss.\r\n\r\nTo solve this problem, let the LAS sweep to work under read\r\ncommitted isolation level, that leads to non visibility of records\r\nfrom a running transaction.\r\n\r\n* The isolation level is set to default in LAS sweep, there is no need\r\nof save and restore functions to update the isolation level.\r\n\r\n(cherry picked from commit 8fbc0ac864e410ddb877dad9c180f50ffeba06e3)",
        "base_ref": "mongodb-4.0",
        "created_at": "Sunday Dec 15, 2019 at 23:52 GMT",
        "updated_at": "Monday Dec 16, 2019 at 23:55 GMT",
        "closed_at": "Monday Dec 16, 2019 at 23:54 GMT",
        "merged_at": "Monday Dec 16, 2019 at 23:54 GMT"
    },
    {
        "key": "WT-5125",
        "number": 5051,
        "state": "closed",
        "title": "WT-5125 eviction target strategy stats (#4948) [Backport to 4.0]",
        "body": "* WT-5125 Additional stats for eviction server\r\n\r\nNew stats are added to eviction server to find out the strategy\r\nof the eviction server while finding out the pages to be queued for\r\neviction. Based on the eviction strategy, the eviction server\r\nchecks the minimum number of pages before it gives up.\r\n\r\nClean strategy and both clean and dirty strategy  - 10 times target pages\r\nDirty strategy - 100 times target pages\r\n\r\nAlong with with them, a new stat that tracks the internal pages and also\r\nthe pages that are already present in the queue.\r\n\r\nAdditional stats related to finding out the reason behind why the page is not able\r\nto be evicted even if it is added to the queue are added.\r\n\r\n* Revert the number of records\r\n\r\n* Fix the uninitialized variable usage\r\n\r\n* Better naming for the page with overflow keys\r\n\r\nEviction cannot evict a page that is dirty that have\r\noverflow keys\r\n\r\n* Fix the stat to refer the parent instead of the current\r\n\r\n* Fix the merge conflicts\r\n\r\n(cherry picked from commit 700d3d96dbd58d9ce653b452cbb06d126ae5477a)",
        "base_ref": "mongodb-4.0",
        "created_at": "Sunday Dec 15, 2019 at 23:37 GMT",
        "updated_at": "Monday Dec 16, 2019 at 03:14 GMT",
        "closed_at": "Monday Dec 16, 2019 at 03:14 GMT",
        "merged_at": "Monday Dec 16, 2019 at 03:14 GMT"
    },
    {
        "key": "WT-4997",
        "number": 5050,
        "state": "closed",
        "title": "WT-4997 Migrate Jenkins wiredtiger-test-format-stress job to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Dec 14, 2019 at 21:31 GMT",
        "updated_at": "Thursday Dec 19, 2019 at 23:26 GMT",
        "closed_at": "Thursday Dec 19, 2019 at 22:27 GMT",
        "merged_at": "Thursday Dec 19, 2019 at 22:27 GMT"
    },
    {
        "key": "WT-5314",
        "number": 5049,
        "state": "closed",
        "title": "WT-5314 For python tests, if the name of an extension is blank, don't try to load it",
        "body": "Extensions that have a name of None, or \"\" or \"none\" are treated the same, they are not loaded.",
        "base_ref": "develop",
        "created_at": "Friday Dec 13, 2019 at 20:18 GMT",
        "updated_at": "Monday Dec 16, 2019 at 03:04 GMT",
        "closed_at": "Monday Dec 16, 2019 at 03:04 GMT",
        "merged_at": "Monday Dec 16, 2019 at 03:04 GMT"
    },
    {
        "key": "WT-5319",
        "number": 5048,
        "state": "closed",
        "title": "WT-5319 Avoid clearing the saved last-key when no instantiated key",
        "body": "Reconciliation has some fast-path code to work on prefix-compressed\r\nto avoid figuring out each key from scratch which would require\r\ngoing back some number of K/V pairs to key that's not\r\nprefix-compressed and then rolling forward), we use the complete\r\nkey we just built for the\u00a0last\u00a0K/V pair's reconciliation, and\r\napply the current key's prefix-compression change to it, saving\r\nus quite a bit of work. Clearing the last-key information can\r\nleads to a performance drop.",
        "base_ref": "develop",
        "created_at": "Friday Dec 13, 2019 at 10:20 GMT",
        "updated_at": "Saturday Dec 14, 2019 at 07:27 GMT",
        "closed_at": "Saturday Dec 14, 2019 at 07:27 GMT",
        "merged_at": "Saturday Dec 14, 2019 at 07:27 GMT"
    },
    {
        "key": "WT-4683",
        "number": 5047,
        "state": "closed",
        "title": "WT-4683 Reverse the modifies when writing to LAS",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 13, 2019 at 06:12 GMT",
        "updated_at": "Thursday Jan 02, 2020 at 23:35 GMT",
        "closed_at": "Tuesday Dec 31, 2019 at 03:32 GMT",
        "merged_at": "Tuesday Dec 31, 2019 at 03:32 GMT"
    },
    {
        "key": "WT-5257",
        "number": 5046,
        "state": "closed",
        "title": "WT-5257 Coverity dereference after null check",
        "body": "I've added an assert to check that the previous reconciliation buffer (r->prev_ptr) is not null. This is because this value should always be initialized when a write is triggered either because it was 'forced' or part of a 'bulk-load'. \r\n\r\nThe hope is that this silences Coverity, otherwise I will manually mark the report as a false positive. The assertion remains valid in order to find any actual exceptions.",
        "base_ref": "develop",
        "created_at": "Friday Dec 13, 2019 at 05:04 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:24 GMT",
        "closed_at": "Monday Dec 16, 2019 at 03:31 GMT",
        "merged_at": "Monday Dec 16, 2019 at 03:31 GMT"
    },
    {
        "key": "WT-5319",
        "number": 5045,
        "state": "closed",
        "title": "Revert \"WT-5319 Avoid clearing the saved last-key when no instantiated key\"",
        "body": "Reverts wiredtiger/wiredtiger#5041",
        "base_ref": "develop",
        "created_at": "Friday Dec 13, 2019 at 04:36 GMT",
        "updated_at": "Friday Dec 13, 2019 at 04:38 GMT",
        "closed_at": "Friday Dec 13, 2019 at 04:38 GMT",
        "merged_at": "Friday Dec 13, 2019 at 04:38 GMT"
    },
    {
        "key": "RT-5609",
        "number": 5044,
        "state": "closed",
        "title": "BACKPORT-5609 Adding new stats for eviction target strategy",
        "body": "Backport of [WT-5125](https://jira.mongodb.org/browse/WT-5125) (PR [#4948](https://github.com/wiredtiger/wiredtiger/pull/4948)) to branch `mongodb-4.0`.",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Dec 13, 2019 at 03:29 GMT",
        "updated_at": "Sunday Dec 15, 2019 at 23:06 GMT",
        "closed_at": "Sunday Dec 15, 2019 at 23:06 GMT",
        "merged_at": null
    },
    {
        "key": "RT-5611",
        "number": 5043,
        "state": "closed",
        "title": "BACKPORT-5611 Data mismatch failures with test/checkpoint after enabling LAS sweep",
        "body": "Backporting the changes in WT-5196 to branch `mongodb-4.0` ",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Dec 13, 2019 at 02:06 GMT",
        "updated_at": "Sunday Dec 15, 2019 at 23:42 GMT",
        "closed_at": "Sunday Dec 15, 2019 at 23:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5284",
        "number": 5042,
        "state": "closed",
        "title": "WT-5284 Test eviction writing the correct values to data store and lookaside",
        "body": "Depends on WT-5361 and WT-4683",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 13, 2019 at 00:13 GMT",
        "updated_at": "Wednesday Jan 15, 2020 at 06:09 GMT",
        "closed_at": "Wednesday Jan 15, 2020 at 06:09 GMT",
        "merged_at": "Wednesday Jan 15, 2020 at 06:09 GMT"
    },
    {
        "key": "WT-5319",
        "number": 5041,
        "state": "closed",
        "title": "WT-5319 Avoid clearing the saved last-key when no instantiated key",
        "body": "Reconciliation has some fast-path code to work on prefix-compressed\r\nto avoid figuring out each key from scratch which would require\r\ngoing back some number of K/V pairs to key that's not\r\nprefix-compressed and then rolling forward), we use the complete\r\nkey we just built for the\u00a0last\u00a0K/V pair's reconciliation, and\r\napply the current key's prefix-compression change to it, saving\r\nus quite a bit of work. The change in\u00a0WT-4642\u00a0clears that saved,\r\nlast-key information, and it leads to a performance drop compared\r\nto 4.0 version. More details are available in SERVER-44991.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 12, 2019 at 23:59 GMT",
        "updated_at": "Friday Dec 13, 2019 at 01:12 GMT",
        "closed_at": "Friday Dec 13, 2019 at 01:12 GMT",
        "merged_at": "Friday Dec 13, 2019 at 01:12 GMT"
    },
    {
        "key": "WT-4968",
        "number": 5040,
        "state": "closed",
        "title": "WT-4968 remove all committed and connection level commit timestamps",
        "body": "Removed the all committed and connection level commit timestamps, as they are now deprecated because of durable history initiative. all_durable timestamp was created in https://github.com/wiredtiger/wiredtiger/pull/4737.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 12, 2019 at 23:51 GMT",
        "updated_at": "Monday Dec 16, 2019 at 00:21 GMT",
        "closed_at": "Friday Dec 13, 2019 at 02:13 GMT",
        "merged_at": "Friday Dec 13, 2019 at 02:13 GMT"
    },
    {
        "key": "WT-5263",
        "number": 5039,
        "state": "closed",
        "title": "WT-5263 prepared updates written to the lookaside file are not always read as needed",
        "body": "@bvpvamsikrishna, this change fixes the failure, but I'm not familiar enough with the lookaside visibility rules to be confident it's the correct fix.\r\n\r\nAdditionally, I would suggest reviewing the update walk loop in the `__wt_rec_upd_select()` function for any other information not being collected because prepared updates are detected and ignored too early in the loop. I reviewed it and don't see anything, but I think it's worth further review.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2019 at 21:57 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:25 GMT",
        "closed_at": "Friday Dec 13, 2019 at 17:41 GMT",
        "merged_at": "Friday Dec 13, 2019 at 17:41 GMT"
    },
    {
        "key": "WT-5077",
        "number": 5038,
        "state": "closed",
        "title": "WT-5077 Handle ENOENT without failure when copying the directory.",
        "body": "@ddanderson Please review. The ticket and the comment explain the failure case.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2019 at 20:28 GMT",
        "updated_at": "Thursday Dec 12, 2019 at 15:47 GMT",
        "closed_at": "Thursday Dec 12, 2019 at 15:46 GMT",
        "merged_at": "Thursday Dec 12, 2019 at 15:46 GMT"
    },
    {
        "key": "WT-5006",
        "number": 5037,
        "state": "closed",
        "title": "WT-5006 Migrate wiredtiger-test-split-stress test to Evergreen",
        "body": "The default behaviour of the `compile wiredtiger` function is to set the `CC` environment variable to `gcc`. However, the `bench/workgen` compilation requires `CC` to be set to `cc`, otherwise the directory is bypassed by the recursive make. I overrode the value of `configure_env_vars` so that the `CC` environment variable was not set prior to calling `configure` (thus using the system `/usr/bin/cc`).\r\n\r\nThe Jenkins test is here: `http://build.wiredtiger.com:8080/job/wiredtiger-test-split-stress/`",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2019 at 02:55 GMT",
        "updated_at": "Thursday Dec 12, 2019 at 04:47 GMT",
        "closed_at": "Thursday Dec 12, 2019 at 04:47 GMT",
        "merged_at": "Thursday Dec 12, 2019 at 04:47 GMT"
    },
    {
        "key": "WT-4969",
        "number": 5036,
        "state": "closed",
        "title": "WT-4969 remove lsm_merge option from auto-generated config definitions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2019 at 00:48 GMT",
        "updated_at": "Thursday Dec 12, 2019 at 05:24 GMT",
        "closed_at": "Thursday Dec 12, 2019 at 05:23 GMT",
        "merged_at": "Thursday Dec 12, 2019 at 05:23 GMT"
    },
    {
        "key": "WT-5037",
        "number": 5035,
        "state": "closed",
        "title": "WT-5037 Add words to spell.ok ",
        "body": "Add words to spell.ok to satisfy earlier versions of aspell on jenkins boxes.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 10, 2019 at 04:16 GMT",
        "updated_at": "Tuesday Dec 10, 2019 at 05:56 GMT",
        "closed_at": "Tuesday Dec 10, 2019 at 05:56 GMT",
        "merged_at": "Tuesday Dec 10, 2019 at 05:56 GMT"
    },
    {
        "key": "WT-5221",
        "number": 5034,
        "state": "closed",
        "title": "WT-5221 Bypass test_wt2853_perf in Evergreen make-check-msan-test",
        "body": "I added `TESTUTIL_SLOW_MACHINE=1` to the environment variable list for `make-check-msan-test` to bypass the `test_wt2853_perf` test. The existing code already checks for this environment variable, so the only change required was to the Evergreen configuration.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 10, 2019 at 02:46 GMT",
        "updated_at": "Wednesday Dec 11, 2019 at 03:44 GMT",
        "closed_at": "Wednesday Dec 11, 2019 at 03:39 GMT",
        "merged_at": "Wednesday Dec 11, 2019 at 03:39 GMT"
    },
    {
        "key": "WT-5298",
        "number": 5033,
        "state": "closed",
        "title": "WT-5298 checkpoint to check validity window of history store pages",
        "body": "Checkpoint has to check for the obsolete pages in history\r\nstore while checkpointing the history store by checking the\r\nclean pages whether the stop time pair of the page makes it\r\nall visible in the page or not? If all are visible on the page\r\nmeans that the page is obsolete. Marke the obsolete page as\r\nempty and their parent as dirty. During the parent page\r\nprocessing, this page reference is removed in the parent thus\r\nthis page is no more referenced in the new checkpoint.\r\n\r\nWhenever the old checkpoint that refers this page deleted\r\nautomatically these pages are deleted.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Monday Dec 09, 2019 at 07:18 GMT",
        "updated_at": "Monday Dec 23, 2019 at 23:39 GMT",
        "closed_at": "Monday Dec 23, 2019 at 23:35 GMT",
        "merged_at": "Monday Dec 23, 2019 at 23:35 GMT"
    },
    {
        "key": "WT-5000",
        "number": 5032,
        "state": "closed",
        "title": "WT-5000 Adding new test format-stress-sanitizer-test to Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 09, 2019 at 02:55 GMT",
        "updated_at": "Thursday Dec 19, 2019 at 01:15 GMT",
        "closed_at": "Thursday Dec 19, 2019 at 01:15 GMT",
        "merged_at": "Thursday Dec 19, 2019 at 01:15 GMT"
    },
    {
        "key": "WT-5309",
        "number": 5031,
        "state": "closed",
        "title": "WT-5309 update format script add prefix command",
        "body": "Added a new argument(-b) to the format wrapper script to pass the fomat prefix with the binary \r\n\r\nFor example : \r\na. In some cases the format binary is run with nice command\r\n    nice ./format.sh <other_arguments>\r\nb. In some cases the format binary is run with nice & checksegv command\r\n    nice checksegv ./format.sh <other_arguments>\r\n\r\n\r\nSo, with the new argument (-b) user can pass prefix with the binary.\r\n\r\nFor ex : \r\nformat.sh -b \"nice ./t\"\r\nformat.sh -b \"checksegv ./t\"\r\nformat.sh -b \"nice checksegv ./t\"\r\nformat.sh \r\n\r\nNOTE - By default the format binary it is set to \"./t\" if -b is not specified",
        "base_ref": "develop",
        "created_at": "Sunday Dec 08, 2019 at 23:22 GMT",
        "updated_at": "Tuesday Dec 10, 2019 at 02:12 GMT",
        "closed_at": "Tuesday Dec 10, 2019 at 02:11 GMT",
        "merged_at": "Tuesday Dec 10, 2019 at 02:11 GMT"
    },
    {
        "key": "WT-5283",
        "number": 5030,
        "state": "closed",
        "title": "WT-5283 Always write the newest committed version to disk",
        "body": "The change is ready for review but the metadata checkpoint assert hasn't been addressed yet. According to @michaelcahill, checkpoint should clear the checkpoint_state after it completes but it doesn't do that in this case. @luke-pearson is now investigating it in checkpoint. Here I keep the assert as it is.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 06, 2019 at 22:05 GMT",
        "updated_at": "Friday Dec 13, 2019 at 00:01 GMT",
        "closed_at": "Friday Dec 13, 2019 at 00:01 GMT",
        "merged_at": "Friday Dec 13, 2019 at 00:01 GMT"
    },
    {
        "key": "WT-5283",
        "number": 5029,
        "state": "closed",
        "title": "WT-5283 Write newest committed version to disk",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 06, 2019 at 21:45 GMT",
        "updated_at": "Friday Dec 06, 2019 at 21:53 GMT",
        "closed_at": "Friday Dec 06, 2019 at 21:53 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 5028,
        "state": "closed",
        "title": "Wt 5283 newest committed to disk",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 06, 2019 at 21:39 GMT",
        "updated_at": "Friday Dec 06, 2019 at 21:43 GMT",
        "closed_at": "Friday Dec 06, 2019 at 21:43 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5311",
        "number": 5027,
        "state": "closed",
        "title": "WT-5311 Format timestamps identically to MongoDB",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 06, 2019 at 16:19 GMT",
        "updated_at": "Friday Dec 06, 2019 at 18:45 GMT",
        "closed_at": "Friday Dec 06, 2019 at 18:45 GMT",
        "merged_at": "Friday Dec 06, 2019 at 18:45 GMT"
    },
    {
        "key": "WT-5289",
        "number": 5026,
        "state": "closed",
        "title": "WT-5289 Remove LAS garbage collection sweep code",
        "body": "As far as I can see the sweep code for LAS only performs one function, removal of out-of-date entries.  Consequently, this change removes the entire LAS sweep.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 06, 2019 at 15:58 GMT",
        "updated_at": "Tuesday Dec 17, 2019 at 02:15 GMT",
        "closed_at": "Tuesday Dec 17, 2019 at 02:15 GMT",
        "merged_at": "Tuesday Dec 17, 2019 at 02:15 GMT"
    },
    {
        "key": "WT-5283",
        "number": 5025,
        "state": "closed",
        "title": "WT-5283 Write newest version to disk for eviction and checkpoint",
        "body": "As discussed with Vamsi, we plan to write new functions for the eviction module and then replace the old module with the new module when we are ready for testing.\r\n\r\nThis is the function in the new eviction module for selecting the version to write for both eviction and checkpoint. Since we are overhauling the whole module, I think it's better to simply this function and move as much logic as possible outside this function. I'm not sure if it's still necessary for us to maintain the list of pointers and counters in this function. If we can remove some of them, it would be great. Also I keep the time pair logic and save update logic in this function for now but we may also move them outside the function later.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 06, 2019 at 06:54 GMT",
        "updated_at": "Monday Dec 09, 2019 at 05:53 GMT",
        "closed_at": "Monday Dec 09, 2019 at 05:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5037",
        "number": 5024,
        "state": "closed",
        "title": "WT-5037 Remove wrong assert of las transaction rollback",
        "body": "Remove the assert that checks that no lookaside operations\r\ncan rollback. It is possible that las transaction can rollback.\r\nit is a rare scenario, but better to avoid it.",
        "base_ref": "develop",
        "created_at": "Friday Dec 06, 2019 at 03:48 GMT",
        "updated_at": "Monday Dec 09, 2019 at 01:08 GMT",
        "closed_at": "Monday Dec 09, 2019 at 01:08 GMT",
        "merged_at": "Monday Dec 09, 2019 at 01:08 GMT"
    },
    {
        "key": "WT-5005",
        "number": 5023,
        "state": "closed",
        "title": "WT-5005 Migrate Jenkins Wiredtiger test-recovery-stress test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 06, 2019 at 03:44 GMT",
        "updated_at": "Thursday Dec 19, 2019 at 03:04 GMT",
        "closed_at": "Thursday Dec 19, 2019 at 03:03 GMT",
        "merged_at": "Thursday Dec 19, 2019 at 03:03 GMT"
    },
    {
        "key": "WT-5302",
        "number": 5022,
        "state": "closed",
        "title": "WT-5302 Begin writing validity window for new data format",
        "body": "After we begin writing the new data format, we need to begin populating the on-disk start and stop time pairs. There was some basic code to write the start time pair so I've added some extra logic to handle tombstone updates (which means we should choose the previous value for reconciliation and set the stop time pair).\r\n\r\nI don't expect this change to work yet as it requires the latest versions to be written in eviction and checkpoint. But I'd like to get it reviewed ahead of time to make sure this change is on the right track.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Friday Dec 06, 2019 at 01:25 GMT",
        "updated_at": "Sunday Dec 15, 2019 at 16:08 GMT",
        "closed_at": "Sunday Dec 15, 2019 at 16:05 GMT",
        "merged_at": "Sunday Dec 15, 2019 at 16:05 GMT"
    },
    {
        "key": "WT-5218",
        "number": 5021,
        "state": "closed",
        "title": "WT-5218 Update page readgen when pages marked for early eviction are \u2026",
        "body": "\u2026dirtied (#4953)\r\n\r\n(cherry picked from commit 3a42ced49595b1b082263047cfd2e4d536d62514)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Dec 06, 2019 at 00:15 GMT",
        "updated_at": "Friday Dec 06, 2019 at 00:47 GMT",
        "closed_at": "Friday Dec 06, 2019 at 00:47 GMT",
        "merged_at": "Friday Dec 06, 2019 at 00:47 GMT"
    },
    {
        "key": "WT-5305",
        "number": 5020,
        "state": "closed",
        "title": "WT-5305 format.sh must handle format's use of the wt utility.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 05, 2019 at 21:43 GMT",
        "updated_at": "Friday Dec 06, 2019 at 02:24 GMT",
        "closed_at": "Friday Dec 06, 2019 at 02:24 GMT",
        "merged_at": "Friday Dec 06, 2019 at 02:24 GMT"
    },
    {
        "key": "WT-5145",
        "number": 5019,
        "state": "closed",
        "title": "WT-5145 v4.0 Backport",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Dec 05, 2019 at 02:31 GMT",
        "updated_at": "Thursday Dec 05, 2019 at 05:00 GMT",
        "closed_at": "Thursday Dec 05, 2019 at 04:58 GMT",
        "merged_at": "Thursday Dec 05, 2019 at 04:58 GMT"
    },
    {
        "key": "WT-5277",
        "number": 5018,
        "state": "closed",
        "title": "WT-5277 Cursor key out-of-order detected in the lookaside file",
        "body": "@sueloverso, @tetsuo-cpp, I misread the code when I made the changes for WT-5120.\r\n\r\nThe row-search code doesn't abandon the leaf-page search in cases where it can't be sure the search is safe, it continues with the search and relies on its caller to use the `WT_CURSOR_BTREE.compare` value to decide if a match was found. That's fine for searches, but inserts quite likely don't have an exact match, and so we have to ignore any leaf page results where we don't get an exact match and we're at the edge of the page, as the item might belong on a different page entirely.\r\n\r\nI have not re-run the WT-5120 tests to confirm this fix still works, but it seems like it would have minimal impact.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 05, 2019 at 01:52 GMT",
        "updated_at": "Friday Dec 06, 2019 at 05:28 GMT",
        "closed_at": "Friday Dec 06, 2019 at 05:28 GMT",
        "merged_at": "Friday Dec 06, 2019 at 05:28 GMT"
    },
    {
        "key": "WT-5106",
        "number": 5017,
        "state": "closed",
        "title": "WT-5106 v4.0 backport",
        "body": "(cherry picked from commit 6ed72590b7446185a734640e88c9c8a8f9fa88f2)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Dec 04, 2019 at 23:33 GMT",
        "updated_at": "Thursday Dec 05, 2019 at 05:22 GMT",
        "closed_at": "Thursday Dec 05, 2019 at 05:22 GMT",
        "merged_at": "Thursday Dec 05, 2019 at 05:22 GMT"
    },
    {
        "key": "WT-5222",
        "number": 5016,
        "state": "closed",
        "title": "WT-5222 Write the newest version when checkpointing",
        "body": "The idea behind this change is to get checkpoint to always write the newest committed version by running it without a read timestamp. Obviously this breaks most tests that checkpoint and then expect the version at the stable timestamp to be the one they see after restart.\r\n\r\nAs per the specification, use_timestamps=true is still used, we report the checkpoint timestamp as the stable timestamp when use_timestamps=true. In order to avoid checkpointing at the same stable timestamp being inconsistent I've included the change to skip checkpointing if we checkpoint at the same stable timestamp.\r\n\r\nI think there may have been an attempt to skip checkpoints using the same logic, however it may have caused too many issues and was reverted? @keithbostic do you know anything about this?",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Dec 04, 2019 at 03:15 GMT",
        "updated_at": "Thursday Dec 05, 2019 at 03:55 GMT",
        "closed_at": "Thursday Dec 05, 2019 at 03:55 GMT",
        "merged_at": "Thursday Dec 05, 2019 at 03:55 GMT"
    },
    {
        "key": "WT-5276",
        "number": 5015,
        "state": "closed",
        "title": "WT-5276 format needs to move the oldest timestamp forward during bulk load",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 04, 2019 at 02:07 GMT",
        "updated_at": "Thursday Dec 05, 2019 at 00:26 GMT",
        "closed_at": "Thursday Dec 05, 2019 at 00:26 GMT",
        "merged_at": "Thursday Dec 05, 2019 at 00:26 GMT"
    },
    {
        "key": "WT-5047",
        "number": 5014,
        "state": "closed",
        "title": "WT-5047 Always return WT_TRY_SALVAGE for corrupted log",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 04, 2019 at 01:36 GMT",
        "updated_at": "Wednesday Dec 04, 2019 at 17:30 GMT",
        "closed_at": "Wednesday Dec 04, 2019 at 17:30 GMT",
        "merged_at": "Wednesday Dec 04, 2019 at 17:30 GMT"
    },
    {
        "key": "WT-5264",
        "number": 5013,
        "state": "closed",
        "title": "WT-5264 Add delete record for every insert into history store",
        "body": "Every record that gets inserted into a history store must have a stop time pair.\r\nTo represent the stop time pair to automatically propagated to the cell structure,\r\nadd a delete record for every inserted record with a stop time pair as the commit time pair.\r\n\r\nDuring reconciliation of a history page, these two records must be reconciled into\r\na single record with that have both start and stop time pairs.\r\n\r\nHistory store records are special as they store the history of an actual record.\r\nwe need to retain the transaction and timestamp of those records as it was done by\r\nthe original transaction and timestamp, so make sure that the updates don't get\r\nmodified or validated for the history store transaction id during commit/rollback.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Dec 03, 2019 at 06:21 GMT",
        "updated_at": "Friday Dec 13, 2019 at 02:51 GMT",
        "closed_at": "Friday Dec 13, 2019 at 02:51 GMT",
        "merged_at": "Friday Dec 13, 2019 at 02:51 GMT"
    },
    {
        "key": "WT-5286",
        "number": 5012,
        "state": "closed",
        "title": "WT-5286 Enable data format to store time pair",
        "body": "Change the default value of the WT build to store the time pair\r\ndata in the WT_CELL structure whenever a record is reconciled\r\ninto a disk image.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Dec 03, 2019 at 06:20 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:26 GMT",
        "closed_at": "Friday Dec 06, 2019 at 04:28 GMT",
        "merged_at": "Friday Dec 06, 2019 at 04:28 GMT"
    },
    {
        "key": "WT-5044",
        "number": 5011,
        "state": "closed",
        "title": "WT-5044 log more information for timestamp issue",
        "body": "Added a new function to dump diagnostic information of update structure and updated exisiting function (__wt_verbose_dump_txn_one) to dump the information to standard error if error code is passed in the argument.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 03, 2019 at 04:36 GMT",
        "updated_at": "Thursday Dec 05, 2019 at 01:58 GMT",
        "closed_at": "Thursday Dec 05, 2019 at 01:57 GMT",
        "merged_at": "Thursday Dec 05, 2019 at 01:57 GMT"
    },
    {
        "key": "WT-5136",
        "number": 5010,
        "state": "closed",
        "title": "WT-5136 Fix reading freed memory due to birthmark after uncommitted u\u2026",
        "body": "\u2026pdates freed  (#4962)\r\n\r\nObsolete birthmark cannot be freed if it follows a set of uncommitted\r\nupdates as the uncommitted updates can be aborted and freed causing the\r\nentire update chain being removed in this case.\r\n\r\nBirthmark can be discarded only if there is an update that is visible to\r\nall before it.\r\n\r\n(cherry picked from commit bb77fe68986cc9ff26e516f05db481cbc137fab6)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Dec 03, 2019 at 02:21 GMT",
        "updated_at": "Tuesday Dec 03, 2019 at 22:46 GMT",
        "closed_at": "Tuesday Dec 03, 2019 at 22:46 GMT",
        "merged_at": "Tuesday Dec 03, 2019 at 22:46 GMT"
    },
    {
        "key": "WT-5042",
        "number": 5009,
        "state": "closed",
        "title": "WT-5042 Avoid calling config functions during checkpoint. (#4936)",
        "body": "This is to backport WT-5042 and WT-5239.\r\n\r\nWhen doing this, I found the syscall test on mongodb is broken and created a separate ticket WT-5297.\r\n\r\nSince I cannot verify the change using syscall test, I manually verified that the change generates the expected change in stderr.txt outputted by syscall test. So I think the backport is good to go.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Dec 03, 2019 at 00:54 GMT",
        "updated_at": "Wednesday Dec 04, 2019 at 00:30 GMT",
        "closed_at": "Wednesday Dec 04, 2019 at 00:30 GMT",
        "merged_at": "Wednesday Dec 04, 2019 at 00:30 GMT"
    },
    {
        "key": "WT-5295",
        "number": 5008,
        "state": "closed",
        "title": "WT-5295 Disable remaining failing tests in durable history branch",
        "body": "This PR is disabling `schema_abort` since we have a regression in the durable history feature branch.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Dec 03, 2019 at 00:42 GMT",
        "updated_at": "Tuesday Dec 03, 2019 at 02:39 GMT",
        "closed_at": "Tuesday Dec 03, 2019 at 02:39 GMT",
        "merged_at": "Tuesday Dec 03, 2019 at 02:39 GMT"
    },
    {
        "key": "WT-5288",
        "number": 5007,
        "state": "closed",
        "title": "WT-5288 format.sh must distinguish format timeouts and kill child processes",
        "body": "@sueloverso, I liked your idea of using `SIGKILL`, it's a nice simplification.\r\n\r\nWhile I was there, I realized we weren't treating timeouts as failures, and we weren't kill the process group.",
        "base_ref": "develop",
        "created_at": "Monday Dec 02, 2019 at 20:14 GMT",
        "updated_at": "Tuesday Dec 03, 2019 at 03:52 GMT",
        "closed_at": "Tuesday Dec 03, 2019 at 03:52 GMT",
        "merged_at": "Tuesday Dec 03, 2019 at 03:52 GMT"
    },
    {
        "key": "WT-5165",
        "number": 5006,
        "state": "closed",
        "title": "WT-5165 Added debug mode for making a freeable copy of cursor data",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 02, 2019 at 16:06 GMT",
        "updated_at": "Tuesday Jan 14, 2020 at 20:30 GMT",
        "closed_at": "Tuesday Jan 14, 2020 at 20:30 GMT",
        "merged_at": "Tuesday Jan 14, 2020 at 20:30 GMT"
    },
    {
        "key": "WT-5279",
        "number": 5005,
        "state": "closed",
        "title": "WT-5279 Disable failing tests in the preferred way",
        "body": "As part of BUILD-9262, I've been investigating ways to keep CI green while developing a long-running feature branch.\r\n\r\nFor Python tests, we want to skip failing tests with the `@unitest.skip(...)` annotation. For `make check` tests, it's a bit less convenient. We need to comment out the appropriate line in the test's `Makefile.am` and then its related jobs in the `evergreen.yml`.\r\n\r\nI've used these methods to skip known failures in the durable history branch so that we can work off a green build and detect regressions properly.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Monday Dec 02, 2019 at 04:27 GMT",
        "updated_at": "Monday Dec 02, 2019 at 10:52 GMT",
        "closed_at": "Monday Dec 02, 2019 at 09:47 GMT",
        "merged_at": "Monday Dec 02, 2019 at 09:47 GMT"
    },
    {
        "key": "WT-5263",
        "number": 5004,
        "state": "closed",
        "title": "WT-5263 format incorrectly attempting to repeat reads before transaction resolution",
        "body": "@agorrod, @bvpvamsikrishna, I think this may be a test bug.\r\n\r\nAfter a transaction has resolved, `format` won't repeat reads unless the read timestamp selected is at least as old as the oldest resolved commit timestamp in any thread. However, if the transaction has not yet been resolved, `format` will attempt to repeat reads where the read timestamp selected was simply the next available timestamp. I've been looking at the code, and I don't think that's safe, it seems to me it doesn't matter whether or not the transaction has been resolved, the read will or will not be repeatable based on the timestamp chosen. Is that correct?",
        "base_ref": "develop",
        "created_at": "Saturday Nov 30, 2019 at 18:41 GMT",
        "updated_at": "Wednesday Dec 04, 2019 at 23:07 GMT",
        "closed_at": "Wednesday Dec 04, 2019 at 23:07 GMT",
        "merged_at": null
    },
    {
        "key": "WT-9999",
        "number": 5003,
        "state": "closed",
        "title": "WT-9999 test pull req",
        "body": "sdlfkhsfjk",
        "base_ref": "develop",
        "created_at": "Friday Nov 29, 2019 at 04:04 GMT",
        "updated_at": "Friday Nov 29, 2019 at 04:08 GMT",
        "closed_at": "Friday Nov 29, 2019 at 04:08 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5037",
        "number": 5002,
        "state": "closed",
        "title": "WT-5037 Move developer documentation from github wiki to source.wiredtiger.com",
        "body": "I merged four of the pages in the \"Application Developer Resources\" section of the [WiredTiger wiki](https://github.com/wiredtiger/wiredtiger/wiki) to the \"Developer Documentation\" section of source.wiredtiger.com. I did not add the three pages of the wiki related to `t2` as this is an internal MongoDB tool so it's not useful information for the general public.\r\n\r\nThe plan is to delete the reproduced wiki pages after this PR is approved. ",
        "base_ref": "develop",
        "created_at": "Friday Nov 29, 2019 at 02:53 GMT",
        "updated_at": "Tuesday Dec 10, 2019 at 02:24 GMT",
        "closed_at": "Tuesday Dec 10, 2019 at 02:24 GMT",
        "merged_at": "Tuesday Dec 10, 2019 at 02:24 GMT"
    },
    {
        "key": "WT-5274",
        "number": 5001,
        "state": "closed",
        "title": "WT-5274 format.sh must handle core-dump signals and \"gdb attach\" build mode.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 28, 2019 at 20:46 GMT",
        "updated_at": "Monday Dec 02, 2019 at 18:30 GMT",
        "closed_at": "Monday Dec 02, 2019 at 18:17 GMT",
        "merged_at": "Monday Dec 02, 2019 at 18:17 GMT"
    },
    {
        "key": "WT-5254",
        "number": 5000,
        "state": "closed",
        "title": "WT-5254 Adding aggregate timestamp information to WT_REF",
        "body": "",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Thursday Nov 28, 2019 at 00:17 GMT",
        "updated_at": "Thursday Nov 28, 2019 at 02:40 GMT",
        "closed_at": "Thursday Nov 28, 2019 at 02:40 GMT",
        "merged_at": "Thursday Nov 28, 2019 at 02:40 GMT"
    },
    {
        "key": "WT-5267",
        "number": 4999,
        "state": "closed",
        "title": "WT-5267 Store stop time pair in history store",
        "body": "Stop time pair is required for every record in the history\r\nstore to represent the end of visibility of each record in\r\nthe history store. Store it in the key of the every history\r\nrecord.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Wednesday Nov 27, 2019 at 22:44 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:26 GMT",
        "closed_at": "Friday Nov 29, 2019 at 01:36 GMT",
        "merged_at": "Friday Nov 29, 2019 at 01:36 GMT"
    },
    {
        "key": "WT-9999",
        "number": 4998,
        "state": "closed",
        "title": "WT-9999 Test pull request for \"relevant_history_in_cache_migration\" branch",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Tuesday Nov 26, 2019 at 23:42 GMT",
        "updated_at": "Tuesday Nov 26, 2019 at 23:58 GMT",
        "closed_at": "Tuesday Nov 26, 2019 at 23:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5253",
        "number": 4997,
        "state": "closed",
        "title": "WT-5253 Checkpoint lookaside file before metadata",
        "body": "So a few tests are failing as a result of changes made to the LAS file (not deleting it every time), it appears recovery is expecting something to happen in a different order to how it is happening. As this ticket is not a fix recovery ticket I think for now I'll leave those tests alone.",
        "base_ref": "pm-1521-durable-history",
        "created_at": "Tuesday Nov 26, 2019 at 21:50 GMT",
        "updated_at": "Tuesday Dec 03, 2019 at 21:09 GMT",
        "closed_at": "Tuesday Dec 03, 2019 at 03:40 GMT",
        "merged_at": "Tuesday Dec 03, 2019 at 03:40 GMT"
    },
    {
        "key": "WT-5082",
        "number": 4996,
        "state": "closed",
        "title": "WT-5082 application threads are tasked with eviction even when pinning the oldest transaction ID",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 26, 2019 at 20:54 GMT",
        "updated_at": "Thursday Nov 28, 2019 at 21:31 GMT",
        "closed_at": "Thursday Nov 28, 2019 at 21:27 GMT",
        "merged_at": "Thursday Nov 28, 2019 at 21:27 GMT"
    },
    {
        "key": "WT-9999",
        "number": 4995,
        "state": "closed",
        "title": "WT-9999 Test pull request for \"relevant_history_in_cache_migration\" branch",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Tuesday Nov 26, 2019 at 02:53 GMT",
        "updated_at": "Tuesday Nov 26, 2019 at 23:58 GMT",
        "closed_at": "Tuesday Nov 26, 2019 at 23:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4996",
        "number": 4994,
        "state": "closed",
        "title": "WT-4996 Migrate wiredtiger-test-check-long job to Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 26, 2019 at 02:17 GMT",
        "updated_at": "Thursday Nov 28, 2019 at 23:05 GMT",
        "closed_at": "Thursday Nov 28, 2019 at 23:05 GMT",
        "merged_at": "Thursday Nov 28, 2019 at 23:05 GMT"
    },
    {
        "key": "WT-5139",
        "number": 4993,
        "state": "closed",
        "title": "WT-5139 Incremental backup API",
        "body": "Not ready for merge.",
        "base_ref": "develop",
        "created_at": "Monday Nov 25, 2019 at 16:46 GMT",
        "updated_at": "Monday Dec 16, 2019 at 18:28 GMT",
        "closed_at": "Monday Dec 16, 2019 at 18:28 GMT",
        "merged_at": "Monday Dec 16, 2019 at 18:28 GMT"
    },
    {
        "key": "WT-5265",
        "number": 4992,
        "state": "closed",
        "title": "WT-5265 Remove pip install gcovr",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 25, 2019 at 06:06 GMT",
        "updated_at": "Wednesday Nov 27, 2019 at 03:45 GMT",
        "closed_at": "Wednesday Nov 27, 2019 at 03:45 GMT",
        "merged_at": "Wednesday Nov 27, 2019 at 03:45 GMT"
    },
    {
        "key": "WT-5232",
        "number": 4991,
        "state": "closed",
        "title": "WT-5232 Create a wrapper script to support format stress tests in Evergreen",
        "body": "@lukech, here's my first cut at an Evergreen wrapper script for `format`, let me know what you think.",
        "base_ref": "develop",
        "created_at": "Friday Nov 22, 2019 at 23:42 GMT",
        "updated_at": "Tuesday Nov 26, 2019 at 23:28 GMT",
        "closed_at": "Tuesday Nov 26, 2019 at 23:28 GMT",
        "merged_at": "Tuesday Nov 26, 2019 at 23:28 GMT"
    },
    {
        "key": "WT-5033",
        "number": 4990,
        "state": "closed",
        "title": "WT-5033 Migrate Jenkins wiredtiger-test-time-shift-sensitivity job to evergreen",
        "body": "Created compile-enable-strict and time-shift-sensitivity-test task",
        "base_ref": "develop",
        "created_at": "Thursday Nov 21, 2019 at 05:00 GMT",
        "updated_at": "Tuesday Nov 26, 2019 at 05:18 GMT",
        "closed_at": "Tuesday Nov 26, 2019 at 05:18 GMT",
        "merged_at": "Tuesday Nov 26, 2019 at 05:18 GMT"
    },
    {
        "key": "WT-4565",
        "number": 4989,
        "state": "closed",
        "title": "WT-4565 Remove loop to wait in __tree_walk_internal() for an internal page",
        "body": "With the changes that you proposed @keithbostic, we will no longer be spinning on the __wt_page_swap() call in __tree_walk_internal() when it encounters a locked ref.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 21, 2019 at 04:58 GMT",
        "updated_at": "Thursday Nov 21, 2019 at 20:46 GMT",
        "closed_at": "Thursday Nov 21, 2019 at 20:46 GMT",
        "merged_at": "Thursday Nov 21, 2019 at 20:46 GMT"
    },
    {
        "key": "WT-5251",
        "number": 4988,
        "state": "closed",
        "title": "WT-5251 Increase frequency for Linux syscall test",
        "body": "This is the change to increase test frequency for the Linux syscall test. It used to be triggered to run every week, and with this change it will run for each commit merge.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 20, 2019 at 04:02 GMT",
        "updated_at": "Wednesday Nov 20, 2019 at 05:02 GMT",
        "closed_at": "Wednesday Nov 20, 2019 at 05:02 GMT",
        "merged_at": "Wednesday Nov 20, 2019 at 05:02 GMT"
    },
    {
        "key": "WT-5256",
        "number": 4987,
        "state": "closed",
        "title": "WT-5256 Remove LIMBO reference, fix build after merge from develop",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Wednesday Nov 20, 2019 at 00:32 GMT",
        "updated_at": "Wednesday Nov 20, 2019 at 00:35 GMT",
        "closed_at": "Wednesday Nov 20, 2019 at 00:34 GMT",
        "merged_at": "Wednesday Nov 20, 2019 at 00:34 GMT"
    },
    {
        "key": "WT-5211",
        "number": 4986,
        "state": "closed",
        "title": "WT-5211 Print mismatch information before dumping page and LAS, which",
        "body": "can potentially crash.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 19, 2019 at 18:16 GMT",
        "updated_at": "Wednesday Nov 20, 2019 at 18:45 GMT",
        "closed_at": "Wednesday Nov 20, 2019 at 18:45 GMT",
        "merged_at": "Wednesday Nov 20, 2019 at 18:45 GMT"
    },
    {
        "key": "WT-5250",
        "number": 4985,
        "state": "closed",
        "title": "WT-5250 Stop relying on all entries for a given page being contiguous in the lookaside table",
        "body": "This patch is adding functionality to store all keys for a page in memory when lookaside evicting and to use this information to instantiate when reading the page back into cache. On instantiation, we iterate over our stored keys and do a `search_near` to find the newest record for that key unless it is a birthmark which is indicated by an \"aborted\" transaction id.\r\n\r\nThis was originally going to be part of #4973 however we've been having trouble chasing down bugs in that branch and we know for a fact that this change works by itself.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Tuesday Nov 19, 2019 at 05:05 GMT",
        "updated_at": "Tuesday Nov 19, 2019 at 07:30 GMT",
        "closed_at": "Tuesday Nov 19, 2019 at 07:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4995",
        "number": 4984,
        "state": "closed",
        "title": "WT-4995 Migrate Jenkins wiredtiger-test-wtperf job to Evergreen",
        "body": "Added a new task \"test-wtperf\" under Ubuntu 18.04 buildvariant",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 19, 2019 at 02:32 GMT",
        "updated_at": "Wednesday Nov 20, 2019 at 04:04 GMT",
        "closed_at": "Wednesday Nov 20, 2019 at 04:04 GMT",
        "merged_at": "Wednesday Nov 20, 2019 at 04:04 GMT"
    },
    {
        "key": "WT-5169",
        "number": 4983,
        "state": "closed",
        "title": "WT-5169 WT_REF_LIMBO pages cannot support fast (leaf-page only) searches",
        "body": "@agorrod, @sulabhM, I'm uncertain on some of the possible `WT_REF_LIMBO` transitions, please consider if there's a better test we could use than turning off all fast searches of `WT_REF_LIMBO` pages.\r\n\r\nI considered calling `__wt_las_page_skip()` from inside `__cursor_page_pinned()`, but that requires locking the page which might be too heavy-weight (and, as I said, I'm not completely sure that calling that function would be sufficient).",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 19, 2019 at 01:38 GMT",
        "updated_at": "Wednesday Nov 20, 2019 at 02:14 GMT",
        "closed_at": "Tuesday Nov 19, 2019 at 17:01 GMT",
        "merged_at": "Tuesday Nov 19, 2019 at 17:01 GMT"
    },
    {
        "key": "WT-4994",
        "number": 4982,
        "state": "closed",
        "title": "WT-4994 Migrate wiredtiger-test-spinlock job to Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 18, 2019 at 23:25 GMT",
        "updated_at": "Friday Nov 22, 2019 at 00:29 GMT",
        "closed_at": "Friday Nov 22, 2019 at 00:29 GMT",
        "merged_at": "Friday Nov 22, 2019 at 00:29 GMT"
    },
    {
        "key": "WT-5119",
        "number": 4981,
        "state": "closed",
        "title": "WT-5119 Add debugging for difficult data mismatch failures.",
        "body": "@keithbostic Here's a branch we can add debugging to and share. It is not yet ready for merge but please push anything additional you add for WT-5169 too. This contains all the latest changes I am running with, including a fix in the `5119.Nov18.diff` that I put in the ticket. (That fix was printing out the allocation location in hex instead of decimal.)",
        "base_ref": "develop",
        "created_at": "Monday Nov 18, 2019 at 19:53 GMT",
        "updated_at": "Friday Dec 27, 2019 at 21:53 GMT",
        "closed_at": "Tuesday Nov 19, 2019 at 20:47 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5252",
        "number": 4980,
        "state": "closed",
        "title": "WT-5252 Fix Ubuntu 18.04 PPC \"unit-test\" and Ubuntu 18.04 zSeries \"unit-test\" evergreen jobs.",
        "body": "Set LD_LIBRARY_PATH environment variable in test_env_vars",
        "base_ref": "develop",
        "created_at": "Monday Nov 18, 2019 at 04:59 GMT",
        "updated_at": "Monday Nov 18, 2019 at 23:24 GMT",
        "closed_at": "Monday Nov 18, 2019 at 23:24 GMT",
        "merged_at": "Monday Nov 18, 2019 at 23:24 GMT"
    },
    {
        "key": "WT-5048",
        "number": 4979,
        "state": "closed",
        "title": "WT-5048 wiredtiger_open with a corrupted meta file should always return WT_TRY_SALVAGE",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 15, 2019 at 10:52 GMT",
        "updated_at": "Monday Nov 18, 2019 at 00:18 GMT",
        "closed_at": "Monday Nov 18, 2019 at 00:18 GMT",
        "merged_at": "Monday Nov 18, 2019 at 00:18 GMT"
    },
    {
        "key": "WT-5239",
        "number": 4978,
        "state": "closed",
        "title": "WT-5239 Fix syscall test failure",
        "body": "This fixes the syscall test failure caused by WT-5042.",
        "base_ref": "develop",
        "created_at": "Friday Nov 15, 2019 at 03:25 GMT",
        "updated_at": "Friday Nov 15, 2019 at 14:39 GMT",
        "closed_at": "Friday Nov 15, 2019 at 14:39 GMT",
        "merged_at": "Friday Nov 15, 2019 at 14:39 GMT"
    },
    {
        "key": "WT-5247",
        "number": 4977,
        "state": "closed",
        "title": "WT-5247 Resizing modify operation log full values.",
        "body": "When modify operations resize part of a value, subsequent bytes are shuffled around and the operation is no longer idempotent.  Since WiredTiger's recovery can reapply operations that overlap with a checkpoint, it is not safe to log resizing modify operations.  Instead, log full update operations for that case.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 14, 2019 at 22:04 GMT",
        "updated_at": "Wednesday Nov 20, 2019 at 00:58 GMT",
        "closed_at": "Wednesday Nov 20, 2019 at 00:58 GMT",
        "merged_at": "Wednesday Nov 20, 2019 at 00:58 GMT"
    },
    {
        "key": "WT-5181",
        "number": 4976,
        "state": "closed",
        "title": "WT-5181 Preload eatmydata for some tests",
        "body": "patch build https://evergreen.mongodb.com/version/5dcc8e430ae6067e415e1c07",
        "base_ref": "develop",
        "created_at": "Thursday Nov 14, 2019 at 00:19 GMT",
        "updated_at": "Friday Nov 15, 2019 at 04:09 GMT",
        "closed_at": "Friday Nov 15, 2019 at 04:09 GMT",
        "merged_at": "Friday Nov 15, 2019 at 04:09 GMT"
    },
    {
        "key": "WT-4991",
        "number": 4975,
        "state": "closed",
        "title": "WT-4991 Migrate Jenkins wiredtiger-test-unit-zseries job to Evergreen",
        "body": "Added a new buildvariant \"ubuntu1804-zseries-test\" to support zseries unit test.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 13, 2019 at 23:19 GMT",
        "updated_at": "Friday Nov 15, 2019 at 01:05 GMT",
        "closed_at": "Friday Nov 15, 2019 at 01:05 GMT",
        "merged_at": "Friday Nov 15, 2019 at 01:05 GMT"
    },
    {
        "key": "WT-5220",
        "number": 4974,
        "state": "closed",
        "title": "WT-5220 Re-enable LAS dropped table change from WT-5150",
        "body": "\r\nThis reverts commit fb527a54117f3865aae8a25557849f1228d48205.\r\n\r\nWT-5193 has reverted the change in WT-5150 as it leads to data mismatch\r\nproblems with checkpoint. WT-5196 addresses the data mismatch problem\r\neven when the las sweep is enabled. Reenable the LAS sweep.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 13, 2019 at 20:44 GMT",
        "updated_at": "Thursday Nov 14, 2019 at 16:14 GMT",
        "closed_at": "Thursday Nov 14, 2019 at 16:14 GMT",
        "merged_at": "Thursday Nov 14, 2019 at 16:14 GMT"
    },
    {
        "key": "WT-5228",
        "number": 4973,
        "state": "closed",
        "title": "WT-5228 Fix conditions when on-disk record is initialised as an update",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Wednesday Nov 13, 2019 at 05:57 GMT",
        "updated_at": "Monday Dec 09, 2019 at 00:47 GMT",
        "closed_at": "Monday Dec 09, 2019 at 00:47 GMT",
        "merged_at": "Monday Dec 09, 2019 at 00:47 GMT"
    },
    {
        "key": "WT-4989",
        "number": 4972,
        "state": "closed",
        "title": "WT-4989 Migrating Jenkins unit-test-long job to Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 13, 2019 at 05:55 GMT",
        "updated_at": "Thursday Nov 14, 2019 at 04:34 GMT",
        "closed_at": "Thursday Nov 14, 2019 at 04:33 GMT",
        "merged_at": "Thursday Nov 14, 2019 at 04:33 GMT"
    },
    {
        "key": "WT-4990",
        "number": 4971,
        "state": "closed",
        "title": "WT-4990 Migrate Jenkins wiredtiger-test-unit-ppc job to Evergreen",
        "body": "Created a new buildvariant to support \"ubuntu1804-power8-test\" machine and running the unit-test on it.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 13, 2019 at 00:54 GMT",
        "updated_at": "Wednesday Nov 13, 2019 at 05:57 GMT",
        "closed_at": "Wednesday Nov 13, 2019 at 05:57 GMT",
        "merged_at": "Wednesday Nov 13, 2019 at 05:57 GMT"
    },
    {
        "key": "WT-5126",
        "number": 4970,
        "state": "closed",
        "title": "WT-5126 Incorrect assertion regarding prepared update resolution",
        "body": "@luke-pearson, I think I finally understand this one. I don't believe there's a problem in the code, I believe the asserts themselves are faulty. The commit comment in 39aef4d explains the problem.\r\n\r\nI removed a statistic we were maintaining because I think it's redundant. That change is on a separate commit, 11e4cc9, feel free to discard the commit if you disagree.\r\n\r\nThere's lots of code shuffling and cleanup that I've kept, I think it's better than before. If you disagree with those changes, I can fall back to a simpler, more focused change.\r\n\r\nOne thing that's interesting about this is the requirement that we be able to \"resolve\" prepared updates more than once, that is, we can repeatedly resolve the same update during commit/rollback. I looked over the relevant code, and I think that's safe, but I think it's worth your careful review.\r\n\r\ncc: @bvpvamsikrishna ",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 12, 2019 at 22:16 GMT",
        "updated_at": "Wednesday Nov 13, 2019 at 15:08 GMT",
        "closed_at": "Wednesday Nov 13, 2019 at 15:07 GMT",
        "merged_at": "Wednesday Nov 13, 2019 at 15:07 GMT"
    },
    {
        "key": "WT-4988",
        "number": 4969,
        "state": "closed",
        "title": "WT-4988 Migrate Jenkins unit-test job to Evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 12, 2019 at 04:12 GMT",
        "updated_at": "Wednesday Nov 13, 2019 at 04:32 GMT",
        "closed_at": "Wednesday Nov 13, 2019 at 04:32 GMT",
        "merged_at": "Wednesday Nov 13, 2019 at 04:32 GMT"
    },
    {
        "key": "WT-5233",
        "number": 4968,
        "state": "closed",
        "title": "WT-5233 Perform a full lookaside instantiation for a page if it has prepared updates",
        "body": "The reason we were not getting a `WT_PREPARE_CONFLICT` is because the `min_skipped_ts` doesn't get written to for prepared updates on eviction. Therefore in the case where we have a single prepared update in lookaside, we don't bother doing a full instantiation because we (incorrectly) think that the on-disk value is the newest.\r\n\r\n@sulabhM In `cache_las.c`, I see the condition `ref->page_las->has_prepares && ref->page_las->min_skipped_ts == WT_TS_MAX` a few times which makes me think that this is the correct spot for the fix (as opposed to writing to `min_skipped_ts` even in the prepare case which I was considering).",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Monday Nov 11, 2019 at 22:57 GMT",
        "updated_at": "Monday Nov 11, 2019 at 23:55 GMT",
        "closed_at": "Monday Nov 11, 2019 at 23:55 GMT",
        "merged_at": "Monday Nov 11, 2019 at 23:55 GMT"
    },
    {
        "key": "WT-5196",
        "number": 4967,
        "state": "closed",
        "title": "WT-5196 data mismatch with las sweep",
        "body": "Let the LAS sweep work under \"read committed\" isolation\r\n\r\nEarlier, LAS sweep working under \"read uncommitted\" isolation can find the\r\nLAS records that are even not committed. The LAS sweep does the\r\ncleanup based on the first record that is present for the key.\r\nAs the LAS sweep operates in \"read uncommitted\" mode, sometimes\r\neven when the entire record chain for the key is not finished\r\ninsertion, the LAS sweep may clean the part of the update chain\r\nas it finds them as obsolete. This leads to missing update chain\r\nrecords and that leads to record miss.\r\n\r\nTo solve this problem, let the LAS sweep to work under \"read committed\"\r\nisolation level, that leads to non-visibility of records from a running transaction.",
        "base_ref": "develop",
        "created_at": "Monday Nov 11, 2019 at 22:19 GMT",
        "updated_at": "Wednesday Nov 13, 2019 at 15:41 GMT",
        "closed_at": "Wednesday Nov 13, 2019 at 00:05 GMT",
        "merged_at": "Wednesday Nov 13, 2019 at 00:05 GMT"
    },
    {
        "key": "WT-5142",
        "number": 4966,
        "state": "closed",
        "title": "WT-5142 Don't create huge root pages when rebalancing or bulk-loading objects with overflow keys",
        "body": "@agorrod, I ended up drilling the hole that allows callers of the reconciliation split code to force a split regardless of the current disk image size. I found a path I don't think is too ugly, and so avoid the retry logic we discussed (and which neither of us particularly liked). I like this approach better because I think it's reasonable for future work to want to force a split in a similar way, and this moves reconciliation in a more generally useful direction than the retry implementation would.\r\n\r\n@sulabhM, these changes are primarily in the split code you & I wrote awhile back. The idea is that a caller can force the underlying code to split regardless of the current size of the disk image.\r\n\r\nOne relatively subtle change is [at line 1255 in rec_write.c](https://github.com/wiredtiger/wiredtiger/blob/develop/src/reconcile/rec_write.c#L1255):\r\nI removed the `!__wt_rec_need_split(r, 0)` clause because I couldn't think of any reason it could be needed. Please review that change carefully.\r\n\r\nEDIT:\r\nI have restored the `!__wt_rec_need_split(r, 0)` clause, removing it fundamentally changed eviction characteristics, which isn't the point of this ticket.",
        "base_ref": "develop",
        "created_at": "Friday Nov 08, 2019 at 19:29 GMT",
        "updated_at": "Tuesday Nov 12, 2019 at 23:20 GMT",
        "closed_at": "Tuesday Nov 12, 2019 at 23:19 GMT",
        "merged_at": "Tuesday Nov 12, 2019 at 23:19 GMT"
    },
    {
        "key": "WT-5217",
        "number": 4965,
        "state": "closed",
        "title": "WT-5217 Write utility to generate operation tracking log from X-Ray trace",
        "body": "Added an `xray_to_optrack` utility program to convert from XRay logs to the OpTrack format. I'm currently building with `../configure --enable-llvm --with-llvm-config=llvm-config-8`.\r\n\r\nOne issue that I'm seeing is that `xray_to_optrack` generates very big OpTrack logs. The `find-latency-spikes.py` seemed to handle it ok despite taking a while but `optrack_to_t2.py` never finished for me and I waited quite a while. This makes sense to me since I think OpTrack logs have historically been used to instrument a few functions of interest whereas by default, XRay will instrument anything that compiles down to more than 200 instructions. To make this more manageable, we might have to manually choose a set of functions to instrument when building with XRay. We can do it either with function attributes or with a special case file.\r\n\r\n<img width=\"1545\" alt=\"Screen Shot 2019-11-09 at 2 00 52 am\" src=\"https://user-images.githubusercontent.com/30496335/68486994-6325e800-0296-11ea-879e-2c458dace7f1.png\">",
        "base_ref": "develop",
        "created_at": "Friday Nov 08, 2019 at 14:32 GMT",
        "updated_at": "Thursday Nov 21, 2019 at 00:34 GMT",
        "closed_at": "Thursday Nov 21, 2019 at 00:34 GMT",
        "merged_at": "Thursday Nov 21, 2019 at 00:34 GMT"
    },
    {
        "key": "WT-4990",
        "number": 4964,
        "state": "closed",
        "title": "WT-4990 Migrate Jenkins \u201cwiredtiger-test-unit-ppc\u201d job to Evergreen",
        "body": "This is a new pull request after restore/revert. ",
        "base_ref": "develop",
        "created_at": "Friday Nov 08, 2019 at 03:56 GMT",
        "updated_at": "Tuesday Nov 12, 2019 at 23:13 GMT",
        "closed_at": "Tuesday Nov 12, 2019 at 23:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4990",
        "number": 4963,
        "state": "closed",
        "title": "Revert \"WT-4990 Migrate Jenkins \u201cwiredtiger-test-unit-ppc\u201d job to Evergreen\"",
        "body": "Reverts wiredtiger/wiredtiger#4960",
        "base_ref": "develop",
        "created_at": "Friday Nov 08, 2019 at 03:53 GMT",
        "updated_at": "Friday Nov 08, 2019 at 03:53 GMT",
        "closed_at": "Friday Nov 08, 2019 at 03:53 GMT",
        "merged_at": "Friday Nov 08, 2019 at 03:53 GMT"
    },
    {
        "key": "WT-5136",
        "number": 4962,
        "state": "closed",
        "title": "WT-5136 Fix reading freed memory due to birthmark after uncommitted updates freed ",
        "body": "Obsolete birthmark cannot be freed if it follows a set of uncommitted\r\nupdates as the uncommitted updates can be aborted and freed causing the\r\nentire update chain being removed in this case.\r\n\r\nBirthmark can be discarded only if there is an update that is globally visible before it.",
        "base_ref": "develop",
        "created_at": "Friday Nov 08, 2019 at 02:58 GMT",
        "updated_at": "Wednesday Nov 13, 2019 at 22:54 GMT",
        "closed_at": "Wednesday Nov 13, 2019 at 22:54 GMT",
        "merged_at": "Wednesday Nov 13, 2019 at 22:54 GMT"
    },
    {
        "key": "WT-5174",
        "number": 4961,
        "state": "closed",
        "title": "WT-5174 truncation rollback locking is insufficient",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 07, 2019 at 18:32 GMT",
        "updated_at": "Monday Nov 11, 2019 at 16:35 GMT",
        "closed_at": "Monday Nov 11, 2019 at 16:35 GMT",
        "merged_at": "Monday Nov 11, 2019 at 16:35 GMT"
    },
    {
        "key": "WT-4990",
        "number": 4960,
        "state": "closed",
        "title": "WT-4990 Migrate Jenkins \u201cwiredtiger-test-unit-ppc\u201d job to Evergreen",
        "body": "Added a new task \"test-unit-ppc\" to set the environment variable as needed and using the existing function \"unit test\"",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 06, 2019 at 23:03 GMT",
        "updated_at": "Tuesday Nov 12, 2019 at 23:13 GMT",
        "closed_at": "Friday Nov 08, 2019 at 03:12 GMT",
        "merged_at": "Friday Nov 08, 2019 at 03:12 GMT"
    },
    {
        "key": "WT-5025",
        "number": 4959,
        "state": "closed",
        "title": "WT-5025 Migrate wiredtiger-test-coverage",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 05, 2019 at 09:53 GMT",
        "updated_at": "Monday Nov 11, 2019 at 06:47 GMT",
        "closed_at": "Monday Nov 11, 2019 at 06:47 GMT",
        "merged_at": "Monday Nov 11, 2019 at 06:47 GMT"
    },
    {
        "key": "WT-4983",
        "number": 4958,
        "state": "closed",
        "title": "WT-4983 Migrating Jenkins wiredtiger job to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 04, 2019 at 23:21 GMT",
        "updated_at": "Monday Nov 11, 2019 at 04:26 GMT",
        "closed_at": "Monday Nov 11, 2019 at 04:26 GMT",
        "merged_at": "Monday Nov 11, 2019 at 04:26 GMT"
    },
    {
        "key": "WT-5189",
        "number": 4957,
        "state": "closed",
        "title": "WT-5189 Python2: handle errors that occur under the concurrent test option (-j)",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 04, 2019 at 20:47 GMT",
        "updated_at": "Tuesday Nov 05, 2019 at 13:53 GMT",
        "closed_at": "Tuesday Nov 05, 2019 at 13:53 GMT",
        "merged_at": "Tuesday Nov 05, 2019 at 13:53 GMT"
    },
    {
        "key": "WT-5227",
        "number": 4956,
        "state": "closed",
        "title": "WT-5227 Enable python test cursor04",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Monday Nov 04, 2019 at 06:08 GMT",
        "updated_at": "Monday Nov 04, 2019 at 06:10 GMT",
        "closed_at": "Monday Nov 04, 2019 at 06:10 GMT",
        "merged_at": "Monday Nov 04, 2019 at 06:10 GMT"
    },
    {
        "key": "WT-4983",
        "number": 4955,
        "state": "closed",
        "title": "WT-4983 Migrating Jenkins wiredtiger job to evergreen",
        "body": "Migrating Jenkins \"wiredtiger\" job to evergreen.",
        "base_ref": "develop",
        "created_at": "Monday Nov 04, 2019 at 05:30 GMT",
        "updated_at": "Monday Nov 04, 2019 at 23:20 GMT",
        "closed_at": "Monday Nov 04, 2019 at 23:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4987",
        "number": 4954,
        "state": "closed",
        "title": "WT-4987 Migrate Jenkins test-checkpoint job to Evergreen",
        "body": "Added a task \"test-checkpoint\" & respective function \"test checkpoint for filetype\" in the evergreen.yml file to migrate \"wiredtiger-test-checkpoint\" job from jenkins to evergreen.",
        "base_ref": "develop",
        "created_at": "Monday Nov 04, 2019 at 04:56 GMT",
        "updated_at": "Tuesday Nov 05, 2019 at 04:25 GMT",
        "closed_at": "Tuesday Nov 05, 2019 at 04:25 GMT",
        "merged_at": "Tuesday Nov 05, 2019 at 04:25 GMT"
    },
    {
        "key": "WT-5218",
        "number": 4953,
        "state": "closed",
        "title": "WT-5218 Add function to determine whether a page should be evicted",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 04, 2019 at 04:52 GMT",
        "updated_at": "Thursday Nov 07, 2019 at 21:39 GMT",
        "closed_at": "Thursday Nov 07, 2019 at 21:39 GMT",
        "merged_at": "Thursday Nov 07, 2019 at 21:39 GMT"
    },
    {
        "key": "WT-5201",
        "number": 4952,
        "state": "closed",
        "title": "WT-5201 Additional backports",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Nov 04, 2019 at 03:56 GMT",
        "updated_at": "Monday Nov 04, 2019 at 23:12 GMT",
        "closed_at": "Monday Nov 04, 2019 at 23:12 GMT",
        "merged_at": "Monday Nov 04, 2019 at 23:12 GMT"
    },
    {
        "key": "WT-5030",
        "number": 4951,
        "state": "closed",
        "title": "WT-5030 Migrate wiredtiger-linux-no-ftruncate",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 04, 2019 at 00:06 GMT",
        "updated_at": "Tuesday Nov 05, 2019 at 00:20 GMT",
        "closed_at": "Tuesday Nov 05, 2019 at 00:20 GMT",
        "merged_at": "Tuesday Nov 05, 2019 at 00:20 GMT"
    },
    {
        "key": "WT-5031",
        "number": 4950,
        "state": "closed",
        "title": "WT-5031 Migrate wiredtiger-nightly-package to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 01, 2019 at 05:45 GMT",
        "updated_at": "Monday Nov 04, 2019 at 04:57 GMT",
        "closed_at": "Monday Nov 04, 2019 at 04:57 GMT",
        "merged_at": "Monday Nov 04, 2019 at 04:57 GMT"
    },
    {
        "key": "WT-5032",
        "number": 4949,
        "state": "closed",
        "title": "WT-5032 Migrate wiredtiger-syscall-linux to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 01, 2019 at 05:01 GMT",
        "updated_at": "Monday Nov 04, 2019 at 04:52 GMT",
        "closed_at": "Monday Nov 04, 2019 at 04:52 GMT",
        "merged_at": "Monday Nov 04, 2019 at 04:52 GMT"
    },
    {
        "key": "WT-5125",
        "number": 4948,
        "state": "closed",
        "title": "WT-5125 eviction target strategy stats",
        "body": "New stats are added to eviction server to find out the strategy\r\nof the eviction server while finding out the pages to be queued for\r\neviction. Based on the eviction strategy, the eviction server\r\nchecks the minimum number of pages before it give up.\r\n\r\nClean strategy and both clean and dirty strategy  - 10 times target pages\r\nDirty strategy - 100 times target pages\r\n\r\nAlong with them, a new stat that tracks the internal pages and also\r\nthe pages that are already present in the queue.\r\n\r\nAdditional stats related to finding out the reason behind why the page is not able\r\nto be evicted even if it is added to the queue are added.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 31, 2019 at 04:48 GMT",
        "updated_at": "Thursday Nov 14, 2019 at 16:11 GMT",
        "closed_at": "Thursday Nov 14, 2019 at 16:11 GMT",
        "merged_at": "Thursday Nov 14, 2019 at 16:11 GMT"
    },
    {
        "key": "WT-5106",
        "number": 4947,
        "state": "closed",
        "title": "WT-5106 Remove temporary files generated by s_clang_format",
        "body": "The temporary files used to store the `clang-format` output haven't been cleaned up properly. So everyone's `/tmp/` is probably full of these. \ud83d\ude1e ",
        "base_ref": "develop",
        "created_at": "Thursday Oct 31, 2019 at 04:38 GMT",
        "updated_at": "Thursday Oct 31, 2019 at 21:31 GMT",
        "closed_at": "Thursday Oct 31, 2019 at 21:29 GMT",
        "merged_at": "Thursday Oct 31, 2019 at 21:29 GMT"
    },
    {
        "key": "WT-5207",
        "number": 4946,
        "state": "closed",
        "title": "WT-5207 Minimize WT-5043 diagnostic tests to exclude time other than eviction itself.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 30, 2019 at 15:31 GMT",
        "updated_at": "Wednesday Oct 30, 2019 at 16:29 GMT",
        "closed_at": "Wednesday Oct 30, 2019 at 16:29 GMT",
        "merged_at": "Wednesday Oct 30, 2019 at 16:29 GMT"
    },
    {
        "key": "WT-5204",
        "number": 4945,
        "state": "closed",
        "title": "WT-5204 Add diagnostic logging code to the generation drain function.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 28, 2019 at 12:08 GMT",
        "updated_at": "Wednesday Oct 30, 2019 at 12:20 GMT",
        "closed_at": "Wednesday Oct 30, 2019 at 12:20 GMT",
        "merged_at": "Wednesday Oct 30, 2019 at 12:20 GMT"
    },
    {
        "key": "WT-5203",
        "number": 4944,
        "state": "closed",
        "title": "WT-5203 lookaside history should no longer be preferentially evicted",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Monday Oct 28, 2019 at 11:25 GMT",
        "updated_at": "Wednesday Oct 30, 2019 at 10:36 GMT",
        "closed_at": "Wednesday Oct 30, 2019 at 10:36 GMT",
        "merged_at": "Wednesday Oct 30, 2019 at 10:36 GMT"
    },
    {
        "key": "WT-5120",
        "number": 4943,
        "state": "closed",
        "title": "WT-5120 checkpoint hangs when reconciliation doesn't release the eviction generation",
        "body": "@bvpvamsikrishna, please feel free to change the reviewers on this ticket, I picked @sueloverso because she looked at a possibly related failure in WT-5043, and Alex because he's been in some of this code before.\r\n\r\nReviewers: I'm going to post some discussion in WT-5120.\r\n\r\nThe changes in 3c2a6a3 are semantic sugar, just getting ready for the change in 62391cc which is the real fix.",
        "base_ref": "develop",
        "created_at": "Monday Oct 28, 2019 at 10:29 GMT",
        "updated_at": "Tuesday Oct 29, 2019 at 10:07 GMT",
        "closed_at": "Tuesday Oct 29, 2019 at 10:07 GMT",
        "merged_at": "Tuesday Oct 29, 2019 at 10:07 GMT"
    },
    {
        "key": "WT-5201",
        "number": 4942,
        "state": "closed",
        "title": "WT-5201 Update test format in mongodb-4.0 branch",
        "body": "So I had to cherry pick the WT-4844 commit as it affects the way wiredtiger logs a message for read timestamps being before oldest timestamp. This then gets caught and ignored in test/format.\r\n\r\nI'll run this on a branch over the weekend to see that we don't get any unexpected failures. Once this is merged we can also close out WT-5188.",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Oct 25, 2019 at 02:09 GMT",
        "updated_at": "Thursday Oct 31, 2019 at 21:10 GMT",
        "closed_at": "Thursday Oct 31, 2019 at 21:10 GMT",
        "merged_at": "Thursday Oct 31, 2019 at 21:10 GMT"
    },
    {
        "key": "WT-5195",
        "number": 4941,
        "state": "closed",
        "title": "WT-5195 Reduce Python unit test build time for Evergreen Windows build variant",
        "body": "Reduce the runtime for Evergreen Windows build variant, unit test bucket 01 and 06 (the bottlenecks), by dedicating the 2 buckets for `compat` and `timestamp` tests, moving the other tests of `c` and `t` families into other buckets. \r\n\r\nAfter this change, bucket 01 and 06 both had less than 9m runtime for the Windows build variant. The ubuntu1804 build variant had a similar evenly distribution. \r\n\r\nPatch build: https://evergreen.mongodb.com/version/5db12ad15623437f20d25a7f",
        "base_ref": "develop",
        "created_at": "Thursday Oct 24, 2019 at 06:44 GMT",
        "updated_at": "Thursday Oct 24, 2019 at 23:56 GMT",
        "closed_at": "Thursday Oct 24, 2019 at 23:56 GMT",
        "merged_at": "Thursday Oct 24, 2019 at 23:56 GMT"
    },
    {
        "key": "WT-4976",
        "number": 4940,
        "state": "closed",
        "title": "WT-4976 Migrate wiredtiger-pull-request-builds",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 23, 2019 at 22:56 GMT",
        "updated_at": "Friday Oct 25, 2019 at 01:18 GMT",
        "closed_at": "Friday Oct 25, 2019 at 01:18 GMT",
        "merged_at": "Friday Oct 25, 2019 at 01:18 GMT"
    },
    {
        "key": "WT-5157",
        "number": 4939,
        "state": "closed",
        "title": "WT-5157 Fix atomics usage in spinlock impl",
        "body": "This bug was introduced in #4740. I didn't notice the deadlock at the time since I didn't run the Python test suite with `--with-spinlock=gcc`.\r\n\r\n> The byte is set to some implementation defined nonzero \u201cset\u201d value and the return value is true if and only if the previous contents were \u201cset\u201d\r\n\r\nThe `__atomic_test_and_set` compiler intrinsic is similar to its `__sync_*` counterpart in that it returns a `bool` for the previous value before the call took place (not for success like I thought). So actually a successful acquisition should return `false` since no other thread should have set it to its \"on\" value.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 23, 2019 at 05:48 GMT",
        "updated_at": "Thursday Oct 24, 2019 at 22:11 GMT",
        "closed_at": "Thursday Oct 24, 2019 at 22:11 GMT",
        "merged_at": "Thursday Oct 24, 2019 at 22:11 GMT"
    },
    {
        "key": "WT-4984",
        "number": 4938,
        "state": "closed",
        "title": "WT-4984 Migrate wiredtiger-clang-sanitizer",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 23, 2019 at 04:51 GMT",
        "updated_at": "Thursday Oct 24, 2019 at 05:45 GMT",
        "closed_at": "Thursday Oct 24, 2019 at 05:36 GMT",
        "merged_at": "Thursday Oct 24, 2019 at 05:36 GMT"
    },
    {
        "key": "WT-4961",
        "number": 4937,
        "state": "closed",
        "title": "WT-4961 WT-5160 Backport v4.0",
        "body": "\u2026#4835)\r\n\r\n(cherry picked from commit 2c9ad42e85083a45670a9a2515e00d34c66bf2ad)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Oct 23, 2019 at 04:42 GMT",
        "updated_at": "Wednesday Nov 06, 2019 at 04:52 GMT",
        "closed_at": "Wednesday Nov 06, 2019 at 04:52 GMT",
        "merged_at": "Wednesday Nov 06, 2019 at 04:52 GMT"
    },
    {
        "key": "WT-5042",
        "number": 4936,
        "state": "closed",
        "title": "WT-5042 Avoid calling config functions during checkpoint.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 22, 2019 at 20:16 GMT",
        "updated_at": "Monday Nov 11, 2019 at 19:24 GMT",
        "closed_at": "Monday Nov 11, 2019 at 19:24 GMT",
        "merged_at": "Monday Nov 11, 2019 at 19:24 GMT"
    },
    {
        "key": "WT-4986",
        "number": 4935,
        "state": "closed",
        "title": "WT-4986 Migrate wiredtiger-linux-directio",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 22, 2019 at 05:35 GMT",
        "updated_at": "Thursday Oct 24, 2019 at 05:44 GMT",
        "closed_at": "Thursday Oct 24, 2019 at 05:44 GMT",
        "merged_at": "Thursday Oct 24, 2019 at 05:44 GMT"
    },
    {
        "key": "WT-5186",
        "number": 4934,
        "state": "closed",
        "title": "WT-5186 Handle reading of LAS modifies on top of a birthmark record",
        "body": "The main work in this PR is to get the lookaside reading/instantiation logic to consider birthmark records and on-disk values however there are a few smaller fixes to get `las07` running properly. With this change, `las06` passes and `las07` gets a stuck cache (which is expected). `las07` gets much further in the test and hits the code paths I've added multiple times so I think this change is reasonable.\r\n\r\nAs part of fixing a bug in the squashing logic, I've done a light refactor by introducing a `WT_MODIFY_VECTOR` data structure to contain the small vector logic we've been using through the codebase. The actual logic for applying the modifies is still repeated however it is hard to abstract since they are subtly different. For example, sometimes we own the updates (because we alloc'd them from lookaside) and sometimes they belong to the update list so the cleanup is different. So I think this is the correct level to generalize. This logic will disappear when we reverse deltas so I don't think it's worth getting too hung up on this part.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Tuesday Oct 22, 2019 at 05:26 GMT",
        "updated_at": "Monday Oct 28, 2019 at 00:56 GMT",
        "closed_at": "Monday Oct 28, 2019 at 00:55 GMT",
        "merged_at": "Monday Oct 28, 2019 at 00:55 GMT"
    },
    {
        "key": "WT-4899",
        "number": 4933,
        "state": "closed",
        "title": "WT-4899 Fix backport mistake in 0c2ae9",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Oct 22, 2019 at 04:16 GMT",
        "updated_at": "Tuesday Oct 22, 2019 at 05:29 GMT",
        "closed_at": "Tuesday Oct 22, 2019 at 05:25 GMT",
        "merged_at": "Tuesday Oct 22, 2019 at 05:25 GMT"
    },
    {
        "key": "WT-5197",
        "number": 4932,
        "state": "closed",
        "title": "WT-5197 Fix sanitizer runtime flags",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 22, 2019 at 02:50 GMT",
        "updated_at": "Wednesday Oct 23, 2019 at 03:58 GMT",
        "closed_at": "Wednesday Oct 23, 2019 at 03:58 GMT",
        "merged_at": "Wednesday Oct 23, 2019 at 03:58 GMT"
    },
    {
        "key": "WT-4985",
        "number": 4931,
        "state": "closed",
        "title": "WT-4985 Migrate wiredtiger-sanitized-undefined",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 22, 2019 at 02:40 GMT",
        "updated_at": "Wednesday Oct 23, 2019 at 04:31 GMT",
        "closed_at": "Wednesday Oct 23, 2019 at 04:31 GMT",
        "merged_at": "Wednesday Oct 23, 2019 at 04:31 GMT"
    },
    {
        "key": "WT-4993",
        "number": 4930,
        "state": "closed",
        "title": "WT-4993 Migrate wiredtiger-configure-combinations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 21, 2019 at 23:59 GMT",
        "updated_at": "Friday Oct 25, 2019 at 01:20 GMT",
        "closed_at": "Friday Oct 25, 2019 at 01:20 GMT",
        "merged_at": "Friday Oct 25, 2019 at 01:20 GMT"
    },
    {
        "key": "WT-5180",
        "number": 4929,
        "state": "closed",
        "title": "WT-5180 Exclude .git from artifact tar ball",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 21, 2019 at 22:56 GMT",
        "updated_at": "Tuesday Oct 22, 2019 at 04:19 GMT",
        "closed_at": "Tuesday Oct 22, 2019 at 04:18 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5191",
        "number": 4928,
        "state": "closed",
        "title": "WT-5191 LAS sweep to consider last checkpoint time",
        "body": "Sometimes it is possible that the obsolete records in\r\nlookaside are still not may be written to disk image. To avoid\r\nremoval of those records, consider the last_ckpt_timestamp also\r\ninto consideration before removing those records.\r\n\r\nCheckpoint will ensure read all the pages in the tree that has\r\nlookaside content for checkpoint, this ensures that proper version\r\nof the lookaside records are written to disk image, so considering\r\nthe last checkpoint time also in obsolete record removal will avoid\r\nof removing any records that don't have disk image.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Sunday Oct 20, 2019 at 23:57 GMT",
        "updated_at": "Wednesday Oct 23, 2019 at 22:49 GMT",
        "closed_at": "Wednesday Oct 23, 2019 at 22:49 GMT",
        "merged_at": "Wednesday Oct 23, 2019 at 22:49 GMT"
    },
    {
        "key": "WT-5193",
        "number": 4927,
        "state": "closed",
        "title": "WT-5193 Revert \"WT-5150 Fix the check to find out whethere LAS is empty (#4908)\"",
        "body": "This reverts commit a74b4299f9cd5701c580cae502a3f81585a4d89f.",
        "base_ref": "develop",
        "created_at": "Friday Oct 18, 2019 at 19:44 GMT",
        "updated_at": "Monday Oct 21, 2019 at 09:18 GMT",
        "closed_at": "Monday Oct 21, 2019 at 01:26 GMT",
        "merged_at": "Monday Oct 21, 2019 at 01:26 GMT"
    },
    {
        "key": "WT-4982",
        "number": 4926,
        "state": "closed",
        "title": "WT-4982 Migrate pull-request-windows to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 17, 2019 at 03:17 GMT",
        "updated_at": "Thursday Oct 17, 2019 at 04:23 GMT",
        "closed_at": "Thursday Oct 17, 2019 at 04:23 GMT",
        "merged_at": "Thursday Oct 17, 2019 at 04:23 GMT"
    },
    {
        "key": "WT-5184",
        "number": 4925,
        "state": "closed",
        "title": "WT-5184 Set default configure_env_vars",
        "body": "Add --enable-silent-rules and CFLAGS=\"-ggdb\" to the default settings.\r\nExtract default configure_env_vars.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 17, 2019 at 02:37 GMT",
        "updated_at": "Thursday Oct 17, 2019 at 04:23 GMT",
        "closed_at": "Thursday Oct 17, 2019 at 04:22 GMT",
        "merged_at": "Thursday Oct 17, 2019 at 04:22 GMT"
    },
    {
        "key": "WT-5187",
        "number": 4924,
        "state": "closed",
        "title": "WT-5187 Checkpoint error path can attempt to release a hazard pointer than isn't held.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 16, 2019 at 21:18 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:23 GMT",
        "closed_at": "Wednesday Oct 16, 2019 at 22:58 GMT",
        "merged_at": "Wednesday Oct 16, 2019 at 22:58 GMT"
    },
    {
        "key": "WT-4486",
        "number": 4923,
        "state": "closed",
        "title": "WT-4486 Make test even more conservative.",
        "body": "@ddanderson this can be reviewed. It is an open question if we can figure out and fix in this PR whatever the issue is that caused the test directory not to be saved and the results saying `passed=True`. They're only sort of related to this, and would be easy to include if we want here.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 16, 2019 at 18:31 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:12 GMT",
        "closed_at": "Wednesday Oct 16, 2019 at 19:54 GMT",
        "merged_at": "Wednesday Oct 16, 2019 at 19:54 GMT"
    },
    {
        "key": "WT-4899",
        "number": 4922,
        "state": "closed",
        "title": "WT-4899 WT-4940 WT-4943 backport v4.0",
        "body": "Backport WT-4899 WT-4940 WT-4943 to mongodb-4.0\r\n\r\nThere are no test cases associated with the change, not really giving me any confidence that I'm doing the right thing. :(",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Oct 16, 2019 at 04:13 GMT",
        "updated_at": "Wednesday Oct 16, 2019 at 05:27 GMT",
        "closed_at": "Wednesday Oct 16, 2019 at 05:27 GMT",
        "merged_at": "Wednesday Oct 16, 2019 at 05:27 GMT"
    },
    {
        "key": "WT-5114",
        "number": 4921,
        "state": "closed",
        "title": "WT-5114 Add memory-sanitizer test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 15, 2019 at 05:27 GMT",
        "updated_at": "Monday Oct 21, 2019 at 06:32 GMT",
        "closed_at": "Monday Oct 21, 2019 at 06:32 GMT",
        "merged_at": "Monday Oct 21, 2019 at 06:32 GMT"
    },
    {
        "key": "WT-5176",
        "number": 4920,
        "state": "closed",
        "title": "WT-5176 Group pull request tasks using Evergreen task tags",
        "body": "Changes include:\r\n- tagging all applicable tasks as `pull_request`\r\n- tagging Windows only tasks as `windows`\r\n- simplifying listing tasks in `ubuntu1804` build variant\r\n- updating task templates to fit recent retro code\r\n\r\n@quchenhao Can you help to take a look? Thanks.",
        "base_ref": "develop",
        "created_at": "Monday Oct 14, 2019 at 05:13 GMT",
        "updated_at": "Tuesday Oct 15, 2019 at 03:04 GMT",
        "closed_at": "Tuesday Oct 15, 2019 at 03:03 GMT",
        "merged_at": "Tuesday Oct 15, 2019 at 03:03 GMT"
    },
    {
        "key": "WT-5145",
        "number": 4919,
        "state": "closed",
        "title": "WT-5145 Fix the race condition in accessing pinned_timestamp and conn\u2026",
        "body": "\u2026ection state\r\n\r\nThe __wt_txn_visible_all function refers both has_pinned_timestamp\r\nand connections state to decide whether the data is visible or not.\r\nBut during the connection close flow, the two variables are set in\r\ntwo different functions and there is a very chance of connection swtich\r\ncan leads to wrong usage.\r\n\r\nSet the connection state as WT_CONN_CLOSING as the first step of\r\nconnection close operation, as this can avoid the race condition\r\nand fix the assert problem.",
        "base_ref": "develop",
        "created_at": "Monday Oct 14, 2019 at 03:23 GMT",
        "updated_at": "Tuesday Oct 15, 2019 at 03:39 GMT",
        "closed_at": "Tuesday Oct 15, 2019 at 03:39 GMT",
        "merged_at": "Tuesday Oct 15, 2019 at 03:39 GMT"
    },
    {
        "key": "WT-5073",
        "number": 4918,
        "state": "closed",
        "title": "WT-5073 Review update chain traversals",
        "body": "The main change here is to squash modifies into a self-sufficient standard update when instantiating a lookaside page. This is necessary because there is logic in WiredTiger to detect how long a given modify chain is which becomes more complex when the chain of consecutive modifies can span all the way into lookaside. Even a normal read becomes more complicated if we have to take this into account. We can sidestep this issue by just squashing the update upon instantiation.\r\n\r\nIn general, I think it's a positive change anyway because if we don't, it defeats the purpose of using modify operations. Whatever efficiency is gained by using modify operations will be lost when performing LAS reads to make sense of the deltas in this situation.\r\n\r\nI've left a few comments in some other spots where we're traversing update lists and explained why I think it's safe. When this gets LGTM'd I'll remove them as the main purpose was to get the relevant code chunks to show up in the PR despite not making changes to them.\r\n\r\n@kommiharibabu @sulabhM I've purposely not touched anything related to `rollback_to_stable` or reconciliation since you're already working on those.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Friday Oct 11, 2019 at 04:23 GMT",
        "updated_at": "Wednesday Oct 16, 2019 at 22:19 GMT",
        "closed_at": "Wednesday Oct 16, 2019 at 22:19 GMT",
        "merged_at": "Wednesday Oct 16, 2019 at 22:19 GMT"
    },
    {
        "key": "WT-5182",
        "number": 4917,
        "state": "closed",
        "title": "WT-5182 Add s-all test to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 11, 2019 at 03:46 GMT",
        "updated_at": "Wednesday Oct 16, 2019 at 01:15 GMT",
        "closed_at": "Wednesday Oct 16, 2019 at 01:14 GMT",
        "merged_at": "Wednesday Oct 16, 2019 at 01:14 GMT"
    },
    {
        "key": "WT-4977",
        "number": 4916,
        "state": "closed",
        "title": "WT-4977 Migrate pull request clang analyzer to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 11, 2019 at 03:43 GMT",
        "updated_at": "Wednesday Oct 16, 2019 at 00:38 GMT",
        "closed_at": "Wednesday Oct 16, 2019 at 00:38 GMT",
        "merged_at": "Wednesday Oct 16, 2019 at 00:38 GMT"
    },
    {
        "key": "WT-4980",
        "number": 4915,
        "state": "closed",
        "title": "WT-4980 Add conf-dump-test to evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 11, 2019 at 03:34 GMT",
        "updated_at": "Wednesday Oct 16, 2019 at 02:46 GMT",
        "closed_at": "Wednesday Oct 16, 2019 at 02:46 GMT",
        "merged_at": "Wednesday Oct 16, 2019 at 02:46 GMT"
    },
    {
        "key": "WT-5166",
        "number": 4914,
        "state": "closed",
        "title": "WT-5166 Make configure flags configurable for evergreen tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 10, 2019 at 04:08 GMT",
        "updated_at": "Thursday Oct 10, 2019 at 07:40 GMT",
        "closed_at": "Thursday Oct 10, 2019 at 07:40 GMT",
        "merged_at": "Thursday Oct 10, 2019 at 07:40 GMT"
    },
    {
        "key": "WT-5123",
        "number": 4913,
        "state": "closed",
        "title": "WT-5123 Fill multi-paragraph comments",
        "body": "It's probably helpful to look at each commit separately in this PR. In this instance, I'd say that it'd be better not to squash these commits since we'll want to cherrypick the script and typo changes separately when backporting.\r\n\r\nIf this review yields some extra code changes, I'll rebase them into the initial commit before merging.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 09, 2019 at 07:39 GMT",
        "updated_at": "Thursday Oct 10, 2019 at 23:51 GMT",
        "closed_at": "Thursday Oct 10, 2019 at 23:51 GMT",
        "merged_at": "Thursday Oct 10, 2019 at 23:51 GMT"
    },
    {
        "key": "WT-5158",
        "number": 4912,
        "state": "closed",
        "title": "WT-5158 Remove assertion in __wt_find_lookaside_upd for cursor comparison",
        "body": "This PR is to fix an assertion failure in our long-running branch that I've been chasing. It happens in `test_las02.py` specifically when we iterate over the entire contents of a table by repeatedly calling `next`.\r\n\r\n```\r\n    /*\r\n     * Prior to calling this function, we should have successfully searched the correct key with our\r\n     * cursor.\r\n     */\r\n    WT_ASSERT(session, cbt->compare == 0);\r\n```\r\n\r\nThe point of the assertion was to ensure that we don't hit a situation where we don't find our desired key and enter this code block. In `__wt_find_lookaside_upd`, we use the search key on `cbt` and use it to read updates from lookaside (and in some cases insert them into the update list) which is quite serious if we're not pointing at the right key.\r\n\r\nThis has been challenging to debug because:\r\n* It only reproduces on `saru`.\r\n* My attempts to set breakpoints in the debugger between the opening of the cursor and the assertion failure causes it to no longer reproduce. I need to be able to do this in order to set a conditional for that particular cursor.\r\n* My attempts at adding prints sometimes cause it to no longer reproduce.\r\n\r\nThe code path for calling `next` on a cursor doesn't involve setting the `compare` value which tells me that it's likely set by a previous cursor search call. I don't fully understand what race is causing this code path but zeroing out the `compare` value on each API call seems necessary regardless since previous calls shouldn't be able to interfere in this way.\r\n\r\nIt's an unsatisfying explanation but my feeling is that it's best to just merge this in and keep forging ahead to avoid sinking too much time into this.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Wednesday Oct 09, 2019 at 04:33 GMT",
        "updated_at": "Sunday Oct 13, 2019 at 23:21 GMT",
        "closed_at": "Sunday Oct 13, 2019 at 23:21 GMT",
        "merged_at": "Sunday Oct 13, 2019 at 23:21 GMT"
    },
    {
        "key": "WT-5167",
        "number": 4911,
        "state": "closed",
        "title": "WT-5167 Fix the missing pieces of page instantiation from las",
        "body": "Update various memory allocations that are done during the page\r\ninstantiation for the tracking stats variables.\r\n\r\nSet the page modify restore_state with proper value once the page\r\nis successfully instantiated.\r\n\r\nIf LAS updates are newer than the disk image, set the flag to include\r\nthese updates in the next checkpoint.\r\n\r\nOtherwise, if the page image contains newest versions of data than\r\nLAS updates, check whether the page that is marked as dirtly can\r\nbe cleared under some conditions.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Wednesday Oct 09, 2019 at 04:09 GMT",
        "updated_at": "Thursday Oct 10, 2019 at 00:49 GMT",
        "closed_at": "Thursday Oct 10, 2019 at 00:49 GMT",
        "merged_at": "Thursday Oct 10, 2019 at 00:49 GMT"
    },
    {
        "key": "WT-5163",
        "number": 4910,
        "state": "closed",
        "title": "WT-5163 Fix ignored failure return in WT_CURSOR.next when random retrieval configured",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 09, 2019 at 01:18 GMT",
        "updated_at": "Wednesday Oct 09, 2019 at 14:53 GMT",
        "closed_at": "Wednesday Oct 09, 2019 at 14:53 GMT",
        "merged_at": "Wednesday Oct 09, 2019 at 14:53 GMT"
    },
    {
        "key": "WT-5164",
        "number": 4909,
        "state": "closed",
        "title": "WT-5164 Use underscore consistently.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 08, 2019 at 17:13 GMT",
        "updated_at": "Tuesday Oct 08, 2019 at 17:56 GMT",
        "closed_at": "Tuesday Oct 08, 2019 at 17:56 GMT",
        "merged_at": "Tuesday Oct 08, 2019 at 17:56 GMT"
    },
    {
        "key": "WT-5150",
        "number": 4908,
        "state": "closed",
        "title": "WT-5150 Fix the check to find out whethere LAS is empty",
        "body": "Sweep server should periodically clean the LAS obsolete\r\nentries when there as any tables are dropped or if the LAS\r\nnot empty. Fix the check that leads to not to remove the\r\nobsolete entries when there are no tables dropped.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 08, 2019 at 05:18 GMT",
        "updated_at": "Wednesday Oct 09, 2019 at 22:23 GMT",
        "closed_at": "Wednesday Oct 09, 2019 at 22:23 GMT",
        "merged_at": "Wednesday Oct 09, 2019 at 22:23 GMT"
    },
    {
        "key": "WT-5161",
        "number": 4907,
        "state": "closed",
        "title": "WT-5161 Remove redundant git apply patch command",
        "body": "git.apply_patch is redundant as it is already done in git.get_project",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 08, 2019 at 03:38 GMT",
        "updated_at": "Wednesday Oct 09, 2019 at 04:50 GMT",
        "closed_at": "Wednesday Oct 09, 2019 at 04:50 GMT",
        "merged_at": "Wednesday Oct 09, 2019 at 04:50 GMT"
    },
    {
        "key": "WT-4975",
        "number": 4906,
        "state": "closed",
        "title": "WT-4975 Migrate wiredtiger-pull-request-asan",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 08, 2019 at 02:11 GMT",
        "updated_at": "Friday Oct 11, 2019 at 03:22 GMT",
        "closed_at": "Friday Oct 11, 2019 at 03:22 GMT",
        "merged_at": "Friday Oct 11, 2019 at 03:22 GMT"
    },
    {
        "key": "WT-5160",
        "number": 4905,
        "state": "closed",
        "title": "WT-5160 Stop requiring a checkpoint before calling rollback_to_stable",
        "body": "We recently introduced this constraint, but it's not acceptable.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 08, 2019 at 01:05 GMT",
        "updated_at": "Tuesday Oct 08, 2019 at 02:14 GMT",
        "closed_at": "Tuesday Oct 08, 2019 at 02:14 GMT",
        "merged_at": "Tuesday Oct 08, 2019 at 02:14 GMT"
    },
    {
        "key": "WT-5118",
        "number": 4904,
        "state": "closed",
        "title": "WT-5118 Fix incorrect assert that there are no hazard references to discarded WT_REF",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 07, 2019 at 23:24 GMT",
        "updated_at": "Tuesday Oct 08, 2019 at 00:43 GMT",
        "closed_at": "Tuesday Oct 08, 2019 at 00:43 GMT",
        "merged_at": "Tuesday Oct 08, 2019 at 00:43 GMT"
    },
    {
        "key": "WT-4681",
        "number": 4903,
        "state": "closed",
        "title": "WT-4681 Fix the las sweep to clean the obsolete records",
        "body": "The Sweep of LAS works by scanning the cursor from start of the LAS\r\ntill the maximum record that is found before the scan start. The records\r\nwith las_timestamp that is less than oldest_timestamp are considered\r\nas obsolete. The identified obsolete records are not removed only when\r\nthe next record of the scan is satisfies the following conditions.\r\n\t- The next LAS record is from a different key.\r\n\t- The next LAS record is not of UPDATE MODIFY type.\r\n\r\nIn case if the next record is UPDATE MODIFY record type, the search\r\ncontinues till the next record doesn't match the key or not of type\r\nUPDATE MODIFY. If any one of the record in update chain is not obsolete\r\nthe removal is skipped.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Friday Oct 04, 2019 at 06:51 GMT",
        "updated_at": "Tuesday Oct 15, 2019 at 03:48 GMT",
        "closed_at": "Tuesday Oct 15, 2019 at 03:48 GMT",
        "merged_at": "Tuesday Oct 15, 2019 at 03:48 GMT"
    },
    {
        "key": "WT-4685",
        "number": 4902,
        "state": "closed",
        "title": "WT-4685 Add new statistics for relevant history in cache",
        "body": "This PR is adding some statistics to track some of the new functionality in our relevant history branch.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Friday Oct 04, 2019 at 05:03 GMT",
        "updated_at": "Monday Oct 07, 2019 at 18:29 GMT",
        "closed_at": "Monday Oct 07, 2019 at 18:29 GMT",
        "merged_at": "Monday Oct 07, 2019 at 18:29 GMT"
    },
    {
        "key": "WT-5156",
        "number": 4901,
        "state": "closed",
        "title": "WT-5156 Lookaside table cursors not operating at isolation level WT_ISO_READ_UNCOMMITTED",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 04, 2019 at 01:19 GMT",
        "updated_at": "Friday Oct 04, 2019 at 15:13 GMT",
        "closed_at": "Friday Oct 04, 2019 at 15:13 GMT",
        "merged_at": "Friday Oct 04, 2019 at 15:13 GMT"
    },
    {
        "key": "WT-5141",
        "number": 4900,
        "state": "closed",
        "title": "WT-5141 Handle multiple modifies for the same key on lookaside eviction",
        "body": "As it stands, if we open a transaction and apply multiple modifies at the same timestamp, lookaside eviction will cause all but one of these modifies to be lost. This is because they occupy the same key in lookaside (`btree_id, key, timestamp, txnid`).\r\n\r\nThis PR adds some logic to detect this situation and squash the modifies into a single standard update upon lookaside eviction.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Thursday Oct 03, 2019 at 13:34 GMT",
        "updated_at": "Monday Oct 07, 2019 at 18:10 GMT",
        "closed_at": "Monday Oct 07, 2019 at 18:07 GMT",
        "merged_at": "Monday Oct 07, 2019 at 18:07 GMT"
    },
    {
        "key": null,
        "number": 4899,
        "state": "closed",
        "title": "Preliminary incremental backup support.",
        "body": "Not for review, but made a PR for ease of viewing file diffs.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 02, 2019 at 18:38 GMT",
        "updated_at": "Wednesday Feb 26, 2020 at 20:34 GMT",
        "closed_at": "Thursday Jan 16, 2020 at 04:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5149",
        "number": 4898,
        "state": "closed",
        "title": "WT-5149 Clear the debugging field value so it cannot get stale.",
        "body": "New branch, I had the wrong name/ticket number on the first one. Otherwise no changes.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 02, 2019 at 17:56 GMT",
        "updated_at": "Wednesday Oct 02, 2019 at 18:30 GMT",
        "closed_at": "Wednesday Oct 02, 2019 at 18:30 GMT",
        "merged_at": "Wednesday Oct 02, 2019 at 18:30 GMT"
    },
    {
        "key": "WT-5144",
        "number": 4897,
        "state": "closed",
        "title": "WT-5144 Clear the debugging field value so it cannot get stale.",
        "body": "@keithbostic This should fix the stale value problem we've been hitting.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 02, 2019 at 17:39 GMT",
        "updated_at": "Wednesday Oct 02, 2019 at 17:56 GMT",
        "closed_at": "Wednesday Oct 02, 2019 at 17:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5072",
        "number": 4896,
        "state": "closed",
        "title": "WT-5072 Consider updates from lookaside when reconciling",
        "body": "* For a given key with updates in lookaside, maintain a cursor in the\r\n  lookaside and iterate records from the newest to the oldest.\r\n* Compare the lookaside records with the in-memory records to pick the\r\n  newest visible record for reconciliation.\r\n* Update las06 to checkpoint at a given stable_timestamp and confirm\r\n  that the correct data gets checkpointed.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Wednesday Oct 02, 2019 at 05:56 GMT",
        "updated_at": "Monday Nov 04, 2019 at 05:35 GMT",
        "closed_at": "Monday Nov 04, 2019 at 04:17 GMT",
        "merged_at": "Monday Nov 04, 2019 at 04:17 GMT"
    },
    {
        "key": "WT-5148",
        "number": 4895,
        "state": "closed",
        "title": "WT-5148 Switch little-endian to run on ubuntu1804",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 02, 2019 at 02:04 GMT",
        "updated_at": "Wednesday Oct 02, 2019 at 04:00 GMT",
        "closed_at": "Wednesday Oct 02, 2019 at 04:00 GMT",
        "merged_at": "Wednesday Oct 02, 2019 at 04:00 GMT"
    },
    {
        "key": "WT-5146",
        "number": 4894,
        "state": "closed",
        "title": "WT-5146 Fix record miss for variable length columnar table",
        "body": "If the ref contains any LAS page, the scan searches the LAS file\r\nfor the satisfied record before returning the disk image record\r\nto the application. During this process, cursor btree tmp buffer\r\nis used to store the key information that is used to search the\r\nLAS file, but using this cursor btree tmp, corrupts the memory\r\nthat is already presents in the buffer that holds the records.\r\nDue to this, the key itself is returned to the application instead\r\nof the actual record.\r\n\r\nUse another temp buffer las to store the key information that is\r\nrequired for scanning the LAS file instead of using the existing\r\ntmp buffer.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Wednesday Oct 02, 2019 at 01:02 GMT",
        "updated_at": "Thursday Oct 03, 2019 at 00:02 GMT",
        "closed_at": "Thursday Oct 03, 2019 at 00:02 GMT",
        "merged_at": "Thursday Oct 03, 2019 at 00:02 GMT"
    },
    {
        "key": "WT-5143",
        "number": 4893,
        "state": "closed",
        "title": "WT-5143 Fix typo.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 01, 2019 at 17:45 GMT",
        "updated_at": "Tuesday Oct 01, 2019 at 18:41 GMT",
        "closed_at": "Tuesday Oct 01, 2019 at 18:41 GMT",
        "merged_at": "Tuesday Oct 01, 2019 at 18:41 GMT"
    },
    {
        "key": "WT-5072",
        "number": 4892,
        "state": "closed",
        "title": "WT-5072 Consider updates from lookaside when reconciling",
        "body": "",
        "base_ref": "WT-5089-unable-to-locate-record",
        "created_at": "Monday Sep 30, 2019 at 02:54 GMT",
        "updated_at": "Wednesday Oct 02, 2019 at 05:56 GMT",
        "closed_at": "Wednesday Oct 02, 2019 at 05:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4972",
        "number": 4891,
        "state": "closed",
        "title": "WT-4972 Run unit tests on red hat",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 30, 2019 at 00:30 GMT",
        "updated_at": "Thursday Oct 10, 2019 at 04:01 GMT",
        "closed_at": "Thursday Oct 10, 2019 at 04:01 GMT",
        "merged_at": "Thursday Oct 10, 2019 at 04:01 GMT"
    },
    {
        "key": "WT-4677",
        "number": 4890,
        "state": "closed",
        "title": "WT-4677 Re-initialize prepared updates",
        "body": "This PR is making it such that we initialise prepared updates into the update list if we happen to read them from the lookaside. This way, if we commit we can rewrite it into the lookaside with the new commit timestamp as the `start_ts` and if we rollback, we can simply avoid writing it back instead of having to search the lookaside to delete each prepared update.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Sunday Sep 29, 2019 at 23:10 GMT",
        "updated_at": "Wednesday Oct 02, 2019 at 01:49 GMT",
        "closed_at": "Wednesday Oct 02, 2019 at 01:49 GMT",
        "merged_at": "Wednesday Oct 02, 2019 at 01:49 GMT"
    },
    {
        "key": "WT-5140",
        "number": 4889,
        "state": "closed",
        "title": "WT-5140 Fix where a cursor returning random items can use an uninitialized buffer.",
        "body": "@agorrod:\r\n\r\n48e1afb is the fix for the build failures. We are probably using `WT_CURSOR_BTREE.tmp` for too many things at this point, but it's a chunk of memory and there are a lot of cursors in the system.\r\n\r\n6f0e4f1 is a fix for a problem I noticed, we weren't correctly reversing the cursor's direction when we hit the beginning of the file.\r\n\r\nc84b331 is the addition of a (really simple), smoke-test of random cursors in `test/format`. I know we'd rather not add random cruft to `format`, so feel free to discard that commit without further discussion.",
        "base_ref": "develop",
        "created_at": "Saturday Sep 28, 2019 at 01:31 GMT",
        "updated_at": "Monday Sep 30, 2019 at 15:12 GMT",
        "closed_at": "Monday Sep 30, 2019 at 15:12 GMT",
        "merged_at": "Monday Sep 30, 2019 at 15:12 GMT"
    },
    {
        "key": "WT-4956",
        "number": 4888,
        "state": "closed",
        "title": "WT-4956 Handle the case where 4 billion updates are made to a page without eviction (v3.4 backport)",
        "body": "Unclean cherry-pick of 4c72fee.\r\nMostly just had to resolve some stylistic changes between these 3.6 and 3.4.",
        "base_ref": "mongodb-3.4",
        "created_at": "Thursday Sep 26, 2019 at 05:37 GMT",
        "updated_at": "Wednesday Oct 02, 2019 at 01:26 GMT",
        "closed_at": "Wednesday Oct 02, 2019 at 01:26 GMT",
        "merged_at": "Wednesday Oct 02, 2019 at 01:26 GMT"
    },
    {
        "key": "WT-5135",
        "number": 4887,
        "state": "closed",
        "title": "WT-5135 Change lookaside file inserts to use cursor.insert.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 25, 2019 at 01:41 GMT",
        "updated_at": "Thursday Sep 26, 2019 at 13:55 GMT",
        "closed_at": "Thursday Sep 26, 2019 at 13:55 GMT",
        "merged_at": "Thursday Sep 26, 2019 at 13:55 GMT"
    },
    {
        "key": "WT-5134",
        "number": 4886,
        "state": "closed",
        "title": "WT-5134 Fix leaf-page only search and search-near operations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 25, 2019 at 01:22 GMT",
        "updated_at": "Thursday Oct 03, 2019 at 01:26 GMT",
        "closed_at": "Thursday Oct 03, 2019 at 01:26 GMT",
        "merged_at": "Thursday Oct 03, 2019 at 01:26 GMT"
    },
    {
        "key": "WT-5131",
        "number": 4885,
        "state": "closed",
        "title": "WT-5131 Fix Evergreen configuration file to use working directory",
        "body": "This PR is to duplicate #4874. \r\nEvergreen patch build: https://evergreen.mongodb.com/version/5d8a17792a60ed61ee142414",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 24, 2019 at 17:10 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 17:51 GMT",
        "closed_at": "Tuesday Sep 24, 2019 at 17:51 GMT",
        "merged_at": "Tuesday Sep 24, 2019 at 17:51 GMT"
    },
    {
        "key": "WT-5132",
        "number": 4884,
        "state": "closed",
        "title": "WT-5132 Fix buffer overflow caused by fscanf range check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 24, 2019 at 17:09 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 19:15 GMT",
        "closed_at": "Tuesday Sep 24, 2019 at 19:15 GMT",
        "merged_at": "Tuesday Sep 24, 2019 at 19:15 GMT"
    },
    {
        "key": "WT-4956",
        "number": 4883,
        "state": "closed",
        "title": "WT-4956 Handle the case where 4 billion updates are made to a page without eviction (v3.6 backport)",
        "body": "Relatively clean cherry-pick of 5697d8b2b2eeba02f4d7d5cb4514427f82207358.\r\nThe only alteration was that `WT_RECONCILE` was defined in a different file so I removed the `orig_write_gen` struct member in `rec_write.c` instead of  the non-existent `reconcile.h`.",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Sep 24, 2019 at 01:36 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 03:17 GMT",
        "closed_at": "Tuesday Sep 24, 2019 at 03:15 GMT",
        "merged_at": "Tuesday Sep 24, 2019 at 03:15 GMT"
    },
    {
        "key": "WT-5113",
        "number": 4882,
        "state": "closed",
        "title": "WT-5113 Add new test format run to smoke config",
        "body": "smoke.sh is run during PR testing when we call `make check` this change simply adds a specific config that forces rebalance to run while also turning statistics logging on, which had we had would've caught the bug introduced by WT-4535. ",
        "base_ref": "develop",
        "created_at": "Monday Sep 23, 2019 at 22:51 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 14:01 GMT",
        "closed_at": "Tuesday Sep 24, 2019 at 12:56 GMT",
        "merged_at": "Tuesday Sep 24, 2019 at 12:56 GMT"
    },
    {
        "key": "WT-5072",
        "number": 4881,
        "state": "closed",
        "title": "WT-5072 Consider updates from lookaside when checkpointing",
        "body": "",
        "base_ref": "WT-5089-unable-to-locate-record",
        "created_at": "Monday Sep 23, 2019 at 18:27 GMT",
        "updated_at": "Monday Sep 30, 2019 at 02:53 GMT",
        "closed_at": "Monday Sep 30, 2019 at 02:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5097",
        "number": 4880,
        "state": "closed",
        "title": "WT-5097 Fix two coverity issues in random_abort/main.c",
        "body": "-remove redundant assignment to data.\r\n-bound the maximum number of characters read by fscanf",
        "base_ref": "develop",
        "created_at": "Monday Sep 23, 2019 at 17:14 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 12:58 GMT",
        "closed_at": "Tuesday Sep 24, 2019 at 12:58 GMT",
        "merged_at": "Tuesday Sep 24, 2019 at 12:58 GMT"
    },
    {
        "key": "WT-5130",
        "number": 4879,
        "state": "closed",
        "title": "WT-5130 Switch big-endian to the ubuntu1804-zseries-build distro",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 23, 2019 at 13:54 GMT",
        "updated_at": "Saturday Sep 28, 2019 at 04:58 GMT",
        "closed_at": "Saturday Sep 28, 2019 at 04:58 GMT",
        "merged_at": "Saturday Sep 28, 2019 at 04:58 GMT"
    },
    {
        "key": null,
        "number": 4878,
        "state": "closed",
        "title": "Wt 5130 new big endian distro",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 23, 2019 at 13:46 GMT",
        "updated_at": "Monday Sep 23, 2019 at 13:53 GMT",
        "closed_at": "Monday Sep 23, 2019 at 13:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5093",
        "number": 4877,
        "state": "closed",
        "title": "WT-5093 Switch to rhel80-build distro for million-collections-test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 20, 2019 at 21:33 GMT",
        "updated_at": "Saturday Sep 28, 2019 at 01:09 GMT",
        "closed_at": "Saturday Sep 28, 2019 at 01:09 GMT",
        "merged_at": "Saturday Sep 28, 2019 at 01:09 GMT"
    },
    {
        "key": "WT-5094",
        "number": 4876,
        "state": "closed",
        "title": "WT-5094 Switch to windows-64-vs2017-test distro and fix scons version",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 20, 2019 at 21:19 GMT",
        "updated_at": "Saturday Sep 28, 2019 at 01:12 GMT",
        "closed_at": "Saturday Sep 28, 2019 at 01:12 GMT",
        "merged_at": "Saturday Sep 28, 2019 at 01:12 GMT"
    },
    {
        "key": "WT-4702",
        "number": 4875,
        "state": "closed",
        "title": "WT-4702 Switch to ubuntu1804-test Evergreen distro",
        "body": "Evergreen patch build: https://evergreen.mongodb.com/version/5d8513777742ae189e690148",
        "base_ref": "develop",
        "created_at": "Friday Sep 20, 2019 at 20:48 GMT",
        "updated_at": "Wednesday Sep 25, 2019 at 15:28 GMT",
        "closed_at": "Wednesday Sep 25, 2019 at 15:27 GMT",
        "merged_at": "Wednesday Sep 25, 2019 at 15:27 GMT"
    },
    {
        "key": "WT-5131",
        "number": 4874,
        "state": "closed",
        "title": "WT-5131 Fix Evergreen configuration file to use working directory",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday Sep 18, 2019 at 22:22 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 17:16 GMT",
        "closed_at": "Tuesday Sep 24, 2019 at 17:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5128",
        "number": 4873,
        "state": "closed",
        "title": "WT-5128 Add script to run wtperf with XRay profiling",
        "body": "This is a script to run `wtperf` with XRay profiling enabled and generate some interesting information using the logs. I'm invoking like so:\r\n```\r\nXRAY_BINARY=llvm-xray-8 FLAME_GRAPH_PATH=~/work/FlameGraph/flamegraph.pl bash ../../../bench/wtperf/runners/wtperf_xray.sh ../../../bench/wtperf/runners/small-btree.wtperf\r\n```\r\n`wtperf_account.txt`: A breakdown of the top 10 functions where the workload is spending most of its time.\r\n```\r\nFunctions with latencies: 308\r\n   funcid      count [      min,       med,       90p,       99p,       max]       sum  function\r\n      258        504 [ 0.001050,  0.731710,  7.316153,  7.316191,  7.316230] 939.480654  os_mtx_cond.c:58:0: __wt_cond_wait_signal\r\n      471         16 [ 5.624216, 88.403520, 88.404453, 88.404574, 88.404574] 752.231184  thread_group.c:17:0: __thread_run\r\n       43          8 [87.809180, 87.809375, 87.809592, 87.809592, 87.809592] 702.474963  wtperf.c:501:0: worker\r\n      898   20483363 [ 0.000011,  0.000030,  0.000031,  0.000042,  0.013131] 610.765654  cur_file.c:184:0: __curfile_search\r\n      578   20483363 [ 0.000009,  0.000028,  0.000030,  0.000040,  0.013127] 582.309584  bt_cursor.c:509:0: __wt_btcur_search\r\n      801   20483369 [ 0.000005,  0.000020,  0.000021,  0.000028,  0.013104] 412.661116  row_srch.c:213:0: __wt_row_search\r\n      166        234 [ 0.000006,  0.731754,  0.731768,  0.731808,  0.731854] 147.538713  evict_lru.c:271:0: __wt_evict_thread_run\r\n       21          1 [94.929063, 94.929063, 94.929063, 94.929063, 94.929063] 94.929063  wtperf.c:2543:0: main\r\n       22          1 [94.689410, 94.689410, 94.689410, 94.689410, 94.689410] 94.689410  wtperf.c:2298:0: start_all_runs\r\n       24          1 [94.689407, 94.689407, 94.689407, 94.689407, 94.689407] 94.689407  wtperf.c:2371:0: start_run\r\n```\r\n`wtperf_stack.txt`: The top 10 stack traces per thread. Here are a few stacks for a given thread.\r\n```\r\nSum: 150608443030\r\nlvl   function                                                            count              sum\r\n#0    worker                                                                  1     263428775618\r\n#1    __curfile_search                                                  2556560     229082313916\r\n#2    __wt_btcur_search                                                 2556564     218432977048\r\n#3    __wt_row_search                                                   2519298     150608443030\r\n\r\nSum: 738365164\r\nlvl   function                                                            count              sum\r\n#0    worker                                                                  1     263428775618\r\n#1    __curfile_search                                                  2556560     229082313916\r\n#2    __wt_btcur_search                                                 2556564     218432977048\r\n#3    __wt_row_search                                                     37266       4124255246\r\n#4    __wt_lex_compare_skip                                               21889        738365164\r\n```\r\n`wtperf_graph.svg`: A function call graph showing which functions call which. The edges are coloured and labelled to show what ratio of time is spent in each function.\r\n<img width=\"898\" alt=\"Screen Shot 2019-09-17 at 6 52 07 pm\" src=\"https://user-images.githubusercontent.com/30496335/65085523-67134900-d97c-11e9-8b19-bb201813a969.png\">\r\n`wtperf_flame.svg`: A flame graph. You've all seen this before since we were generating these with `perf_events` data previously.\r\n\r\nThese commands are mostly copied from the documentation. I think it will take a bit of trial and error to see what sticks so this is just a starting point! @fedorova has mentioned the possibility of parsing the XRay logs into the operation tracking format or something that `t2` can understand.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 17, 2019 at 22:39 GMT",
        "updated_at": "Tuesday Oct 01, 2019 at 12:13 GMT",
        "closed_at": "Tuesday Oct 01, 2019 at 12:13 GMT",
        "merged_at": "Tuesday Oct 01, 2019 at 12:13 GMT"
    },
    {
        "key": "WT-4956",
        "number": 4872,
        "state": "closed",
        "title": "WT-4956 Handle the case where 4 billion updates are made to a page without eviction (v4.0 backport)",
        "body": "Clang formatted cherry-pick of 5697d8b.",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Sep 16, 2019 at 16:20 GMT",
        "updated_at": "Friday Sep 20, 2019 at 16:11 GMT",
        "closed_at": "Friday Sep 20, 2019 at 16:11 GMT",
        "merged_at": "Friday Sep 20, 2019 at 16:11 GMT"
    },
    {
        "key": "WT-5074",
        "number": 4871,
        "state": "closed",
        "title": "WT-5074 Fix \"make check\" on exotic architectures (v4.0 backport)",
        "body": "Unclean cherry-pick of 7ff6a3e.",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Sep 16, 2019 at 14:53 GMT",
        "updated_at": "Monday Sep 16, 2019 at 17:49 GMT",
        "closed_at": "Monday Sep 16, 2019 at 17:49 GMT",
        "merged_at": "Monday Sep 16, 2019 at 17:49 GMT"
    },
    {
        "key": "WT-5089",
        "number": 4870,
        "state": "closed",
        "title": "WT-5089 unable to locate record",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Sunday Sep 15, 2019 at 21:24 GMT",
        "updated_at": "Thursday Oct 03, 2019 at 04:26 GMT",
        "closed_at": "Tuesday Oct 01, 2019 at 23:49 GMT",
        "merged_at": "Tuesday Oct 01, 2019 at 23:49 GMT"
    },
    {
        "key": "WT-5122",
        "number": 4869,
        "state": "closed",
        "title": "WT-5122 the sweep server can close handles the final checkpoint is in the process of using",
        "body": "@agorrod, the interesting work is in 1231279 (fbb894c just moves the final checkpoint code out of the connection-close source and into the transaction subsystem source).\r\n\r\nI moved the shutdown of the capacity, checkpoint and sweep servers to earlier in the shutdown process (it didn't seem useful to let them continue to run during shutdown), but that means we shut them down in two places rather than one, which is obviously more complicated. An alternative would be to not set the `WT_CONN_CLOSING_NO_MORE_OPENS` flag before doing the final checkpoint. That means the sweep server can race with the final checkpoint, but that's been true for a long time without any adverse effects.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 11, 2019 at 23:44 GMT",
        "updated_at": "Friday Sep 27, 2019 at 14:32 GMT",
        "closed_at": "Friday Sep 27, 2019 at 14:32 GMT",
        "merged_at": "Friday Sep 27, 2019 at 14:32 GMT"
    },
    {
        "key": "WT-4898",
        "number": 4868,
        "state": "closed",
        "title": "WT-4898  WT-4957 WT-5050 backport v3.6",
        "body": "Keith please take a look, if these backports look good to you please merge the PR and close the related jiras as I won't be online tomorrow.",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Sep 10, 2019 at 05:51 GMT",
        "updated_at": "Wednesday Sep 11, 2019 at 15:30 GMT",
        "closed_at": "Wednesday Sep 11, 2019 at 15:27 GMT",
        "merged_at": "Wednesday Sep 11, 2019 at 15:27 GMT"
    },
    {
        "key": "WT-4869",
        "number": 4867,
        "state": "closed",
        "title": "WT-4869 WT-4881 WT-4893 v3.6 backport",
        "body": "This is a reopening of the previous pull request that was reverted:\r\nhttps://github.com/wiredtiger/wiredtiger/pull/4804\r\nThat PR was approved so I think these are all good to go straight away.",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Sep 10, 2019 at 00:12 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 14:01 GMT",
        "closed_at": "Tuesday Sep 10, 2019 at 04:47 GMT",
        "merged_at": "Tuesday Sep 10, 2019 at 04:47 GMT"
    },
    {
        "key": "WT-4715",
        "number": 4866,
        "state": "closed",
        "title": "WT-4715 Workloads will stall if old transaction or timestamp pinned by thread co-opted for eviction.",
        "body": "@sueloverso, can you specifically review 0743600, those are changes to move your work in WT-5043 aside so I could grab the \"set a timestamp at the API level\" namespace. I also removed the `DEBUGGING` tag for the `WT_REF.hist.time_sec` field as we discussed, and renamed everything so it's hopefully obvious all of this work should be removed in 6 months.\r\n\r\n@agorrod, can you specifically review the `__wt_txn_is_blocking_pin()` function in 3b29dd9? I'm not confident I'm making the correct checks before looking for the oldest pinned transaction ID, I don't know how that stuff fits together.",
        "base_ref": "develop",
        "created_at": "Saturday Sep 07, 2019 at 18:23 GMT",
        "updated_at": "Thursday Sep 26, 2019 at 14:51 GMT",
        "closed_at": "Thursday Sep 26, 2019 at 14:51 GMT",
        "merged_at": "Thursday Sep 26, 2019 at 14:51 GMT"
    },
    {
        "key": "WT-5108",
        "number": 4865,
        "state": "closed",
        "title": "WT-5108 Remove unneeded no-op line and comment.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 06, 2019 at 18:07 GMT",
        "updated_at": "Friday Sep 06, 2019 at 20:17 GMT",
        "closed_at": "Friday Sep 06, 2019 at 20:17 GMT",
        "merged_at": "Friday Sep 06, 2019 at 20:17 GMT"
    },
    {
        "key": "WT-5104",
        "number": 4864,
        "state": "closed",
        "title": "WT-5104 Add readonly flag to wt util",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 06, 2019 at 06:54 GMT",
        "updated_at": "Tuesday Sep 10, 2019 at 05:49 GMT",
        "closed_at": "Tuesday Sep 10, 2019 at 05:49 GMT",
        "merged_at": "Tuesday Sep 10, 2019 at 05:49 GMT"
    },
    {
        "key": "WT-5105",
        "number": 4863,
        "state": "closed",
        "title": "WT-5105 Bypass test for valgrind.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 04, 2019 at 19:38 GMT",
        "updated_at": "Wednesday Sep 04, 2019 at 20:35 GMT",
        "closed_at": "Wednesday Sep 04, 2019 at 20:35 GMT",
        "merged_at": "Wednesday Sep 04, 2019 at 20:35 GMT"
    },
    {
        "key": "WT-4502",
        "number": 4862,
        "state": "closed",
        "title": "WT-4502 Assertion checking hazard pointers on page discard is too str\u2026",
        "body": "\u2026ong (#4733)\r\n\r\nChecking if there are hazard references when evicting a page requires spinning while walking the list of hazard pointers, it's relatively easy\r\nto race with threads acquiring hazard pointers (but then releasing them\r\nbecause we have the WT_REF locked). Don't repeat the check a second time\r\nduring eviction when freeing an internal page's WT_PAGE_INDEX referenced\r\nWT_REF list, only do that check when freeing a WT_PAGE_INDEX from outside\r\nthe normal page eviction path.\r\n\r\nFix a couple of minor comments.\r\n\r\n(cherry picked from commit 5cc7119f29a445e36c0e038b46baedbe2c7254a5)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Sep 04, 2019 at 05:12 GMT",
        "updated_at": "Wednesday Sep 04, 2019 at 06:10 GMT",
        "closed_at": "Wednesday Sep 04, 2019 at 06:10 GMT",
        "merged_at": "Wednesday Sep 04, 2019 at 06:10 GMT"
    },
    {
        "key": "WT-4966",
        "number": 4861,
        "state": "closed",
        "title": "WT-4966 Fix valgrind detected memory leak from test/csuite/import/smoke.sh",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 03, 2019 at 16:32 GMT",
        "updated_at": "Tuesday Sep 03, 2019 at 19:23 GMT",
        "closed_at": "Tuesday Sep 03, 2019 at 19:23 GMT",
        "merged_at": "Tuesday Sep 03, 2019 at 19:23 GMT"
    },
    {
        "key": "WT-5068",
        "number": 4860,
        "state": "closed",
        "title": "WT-5068 WT_CURSOR.random unnecessarily returns duplicate records",
        "body": "@agorrod, this branch reworks the \"pick a random page and return a random key/value item from it\" version of `WT_CURSOR.next` configured for random key/value returns.\r\n\r\nIt appears to fix the [SERVER-42840](https://jira.mongodb.org/browse/SERVER-42840) failure.\r\n\r\nI ended up with something that I think works better, but the change is chock-full of magic constants I can't defend, there's an awful lot of guesses about what is most likely to return a better random selection.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 03, 2019 at 14:45 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 15:03 GMT",
        "closed_at": "Tuesday Sep 24, 2019 at 15:03 GMT",
        "merged_at": "Tuesday Sep 24, 2019 at 15:03 GMT"
    },
    {
        "key": "WT-5100",
        "number": 4859,
        "state": "closed",
        "title": "WT-5100 Update test format to pass -R to disable readonly in wt util",
        "body": "The statistics_log configuration used by wiredtiger is not readonly, as such when we close the connection and then open it with any readonly wiredtiger util. e.g. dump it reads the config from the WiredTiger.basecfg file which tells it to begin statistic logging, which triggers this assertion:\r\n\r\n`[1567488766:358842][30124:0x7f1ed3d3d700], wt, statlog-server: __wt_open, 248: lock_file || !LF_ISSET(WT_FS_OPEN_CREATE)`",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 03, 2019 at 05:47 GMT",
        "updated_at": "Tuesday Sep 03, 2019 at 17:53 GMT",
        "closed_at": "Tuesday Sep 03, 2019 at 10:25 GMT",
        "merged_at": "Tuesday Sep 03, 2019 at 10:25 GMT"
    },
    {
        "key": "WT-5098",
        "number": 4858,
        "state": "closed",
        "title": "WT-5098 Simplify the __wt_update_alloc() code, stop passing an empty WT_ITEM",
        "body": "structure when allocating a birthmark update.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Tuesday Sep 03, 2019 at 01:01 GMT",
        "updated_at": "Tuesday Sep 03, 2019 at 02:26 GMT",
        "closed_at": "Tuesday Sep 03, 2019 at 02:26 GMT",
        "merged_at": "Tuesday Sep 03, 2019 at 02:26 GMT"
    },
    {
        "key": "WT-4893",
        "number": 4857,
        "state": "closed",
        "title": "WT-4893 Fix a race between internal page child-page eviction checks a\u2026",
        "body": "\u2026nd cursors in the tree(#4749)\r\n\r\nWhen checking if an internal page's children will block the internal page's\r\neviction, there may be cursors in the tree walking the list of child pages.\r\nThe parent is locked, so all we care about is cursors already in the child\r\npages, no thread can enter them. Any cursor moving through the child pages\r\nmust be hazard pointer coupling between pages, where the page on which it\r\ncurrently has a hazard pointer must be in a state other than on-disk. Walk\r\nthe child list forward, then backward, to ensure we don't race with a cursor\r\nwalking in the opposite direction from our check.\r\n\r\nAlso:\r\n* Skip work in __wt_hazard_check() and __wt_hazard_check_assert()\r\nif we aren't maintaining hazard pointers on the tree.\r\n* Don't clear the WT_REF history when we overwrite the WT_REF on\r\ndiscard, it's useful diagnostic information.\r\n\r\n(cherry picked from commit 82082debc5983bfc8e096bec4d812cb085cc026d)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Sep 03, 2019 at 00:31 GMT",
        "updated_at": "Wednesday Sep 04, 2019 at 00:09 GMT",
        "closed_at": "Wednesday Sep 04, 2019 at 00:09 GMT",
        "merged_at": "Wednesday Sep 04, 2019 at 00:09 GMT"
    },
    {
        "key": "WT-5058",
        "number": 4856,
        "state": "closed",
        "title": "WT-5058 Stop loading content from LAS when initializing a lookaside evicted page",
        "body": "@sulabhM, the code snippet I passed along hadn't actually been tested -- this change passes testing for me.",
        "base_ref": "wt-5058-no-las",
        "created_at": "Monday Sep 02, 2019 at 15:40 GMT",
        "updated_at": "Tuesday Sep 03, 2019 at 02:06 GMT",
        "closed_at": "Tuesday Sep 03, 2019 at 02:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5092",
        "number": 4855,
        "state": "closed",
        "title": "WT-5092 Modify lookaside schema to add timestamp and transaction id to the key",
        "body": "This PR is to replace the `las_counter` part of the key in the lookaside schema and replace it with `las_timestamp` and `las_txnid` for more efficient searches.\r\n\r\nSince those values are now embedded in the key, I've removed them from the value.",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Monday Sep 02, 2019 at 07:53 GMT",
        "updated_at": "Tuesday Sep 03, 2019 at 07:23 GMT",
        "closed_at": "Tuesday Sep 03, 2019 at 07:23 GMT",
        "merged_at": "Tuesday Sep 03, 2019 at 07:23 GMT"
    },
    {
        "key": "WT-4869",
        "number": 4854,
        "state": "closed",
        "title": "WT-4869 WT-4881 WT-4898 WT-4957 WT-5050 v4.0 Backport clang formatted",
        "body": "This pull request includes the above mentioned tickets which satisfy:\r\n- BACKPORT-4712\r\n- BACKPORT-4765\r\n- BACKPORT-5033\r\n- BACKPORT-5034\r\n- BACKPORT-5043",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Sep 02, 2019 at 07:51 GMT",
        "updated_at": "Wednesday Sep 04, 2019 at 00:08 GMT",
        "closed_at": "Wednesday Sep 04, 2019 at 00:07 GMT",
        "merged_at": "Wednesday Sep 04, 2019 at 00:07 GMT"
    },
    {
        "key": "WT-5088",
        "number": 4853,
        "state": "closed",
        "title": "WT-5088 Refine clearing and setting of debug timer.",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 29, 2019 at 18:47 GMT",
        "updated_at": "Tuesday Sep 03, 2019 at 17:42 GMT",
        "closed_at": "Tuesday Sep 03, 2019 at 17:42 GMT",
        "merged_at": "Tuesday Sep 03, 2019 at 17:42 GMT"
    },
    {
        "key": "WT-5083",
        "number": 4852,
        "state": "closed",
        "title": "WT-5083 Add mips64el support",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 29, 2019 at 06:49 GMT",
        "updated_at": "Saturday Oct 05, 2019 at 01:23 GMT",
        "closed_at": "Saturday Oct 05, 2019 at 01:18 GMT",
        "merged_at": "Saturday Oct 05, 2019 at 01:18 GMT"
    },
    {
        "key": "WT-5080",
        "number": 4851,
        "state": "closed",
        "title": "WT-5080 New wtperf workload modify_distribute option",
        "body": "The newly added workload configuration parameter can be used for\r\nboth modify/update operations where the new value record is formed\r\nwith a set of modifications distributed evenly across the whole\r\nold record.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 29, 2019 at 03:22 GMT",
        "updated_at": "Sunday Sep 01, 2019 at 23:50 GMT",
        "closed_at": "Sunday Sep 01, 2019 at 23:49 GMT",
        "merged_at": "Sunday Sep 01, 2019 at 23:49 GMT"
    },
    {
        "key": "WT-5074",
        "number": 4850,
        "state": "closed",
        "title": "WT-5074 Fix \"make check\" on exotic architectures",
        "body": "This PR is removing code generation from `make check`. Since we began using `clang-format` as part of our code generation process, this has become a problem on architectures such as ZSeries and PowerPC since we don't have the appropriate binaries for them (and maintaining them all would be untenable).\r\n\r\nI think it's reasonable to remove this from the build process since I don't believe it belongs here anyway. To my way of thinking, this is unnecessarily making a development dependency also a build dependency. Just as an example, if you have a project that uses code generated by Protobuf, I wouldn't expect to need `protoc` to build it (although developers would need it).\r\n\r\nPlease let me know your thoughts on this.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 29, 2019 at 01:49 GMT",
        "updated_at": "Thursday Aug 29, 2019 at 23:57 GMT",
        "closed_at": "Thursday Aug 29, 2019 at 23:57 GMT",
        "merged_at": "Thursday Aug 29, 2019 at 23:57 GMT"
    },
    {
        "key": "WT-5058",
        "number": 4849,
        "state": "closed",
        "title": "WT-5058 Stop loading content from LAS when initializing a lookaside evicted page",
        "body": "",
        "base_ref": "relevant_history_in_cache_migration",
        "created_at": "Thursday Aug 29, 2019 at 00:47 GMT",
        "updated_at": "Monday Jan 13, 2020 at 04:02 GMT",
        "closed_at": "Monday Sep 02, 2019 at 12:14 GMT",
        "merged_at": "Monday Sep 02, 2019 at 12:14 GMT"
    },
    {
        "key": "WT-5087",
        "number": 4848,
        "state": "closed",
        "title": "WT-5087 Add time tracking at start of reconciliation.",
        "body": "@keithbostic please review. I missed some initialization for the debug timing. It hit on an LSM thread. I decided to initialize at the start of reconciliation as well as add in a conditional so that we don't trigger if there are other paths into this code from other places (like `cursor_row_slot_return`).",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 28, 2019 at 18:32 GMT",
        "updated_at": "Monday Jan 13, 2020 at 04:02 GMT",
        "closed_at": "Wednesday Aug 28, 2019 at 20:34 GMT",
        "merged_at": "Wednesday Aug 28, 2019 at 20:34 GMT"
    },
    {
        "key": "WT-5085",
        "number": 4847,
        "state": "closed",
        "title": "WT-5085 Add space to properly format output.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 28, 2019 at 17:48 GMT",
        "updated_at": "Wednesday Aug 28, 2019 at 21:04 GMT",
        "closed_at": "Wednesday Aug 28, 2019 at 21:04 GMT",
        "merged_at": "Wednesday Aug 28, 2019 at 21:04 GMT"
    },
    {
        "key": "WT-5043",
        "number": 4846,
        "state": "closed",
        "title": "WT-5043 Add debugging to aid in hang (if it ever reproduces).",
        "body": "@keithbostic please review this small change to add debugging that records the time we do a few things that are on the stack for this ticket. I believe the issue is real but neither of us has been able to reproduce for a couple weeks with this debugging. This way it'll just be there whenever it happens again but we can close this ticket and move on.",
        "base_ref": "develop",
        "created_at": "Monday Aug 26, 2019 at 18:59 GMT",
        "updated_at": "Wednesday Aug 28, 2019 at 13:13 GMT",
        "closed_at": "Wednesday Aug 28, 2019 at 13:13 GMT",
        "merged_at": "Wednesday Aug 28, 2019 at 13:13 GMT"
    },
    {
        "key": "WT-5083",
        "number": 4845,
        "state": "closed",
        "title": "WT-5083 Add mips64el support",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Aug 25, 2019 at 03:47 GMT",
        "updated_at": "Saturday Nov 02, 2019 at 01:13 GMT",
        "closed_at": "Friday Aug 30, 2019 at 00:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4535",
        "number": 4844,
        "state": "closed",
        "title": "WT-4535 Setting readonly mode on various command line tools",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 23, 2019 at 05:01 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 14:01 GMT",
        "closed_at": "Monday Sep 02, 2019 at 05:47 GMT",
        "merged_at": "Monday Sep 02, 2019 at 05:47 GMT"
    },
    {
        "key": "WT-4831",
        "number": 4843,
        "state": "closed",
        "title": "WT-4831 Add ignore unexpected output python test suite flag",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 23, 2019 at 04:01 GMT",
        "updated_at": "Monday Aug 26, 2019 at 03:00 GMT",
        "closed_at": "Monday Aug 26, 2019 at 03:00 GMT",
        "merged_at": "Monday Aug 26, 2019 at 03:00 GMT"
    },
    {
        "key": "WT-5059",
        "number": 4842,
        "state": "closed",
        "title": "WT-5059 Remove page ID from lookaside",
        "body": "This PR is changing the schema of the lookaside table to remove the `pageid` field and swap the `key` and `las_counter` fields. Since the lookaside table insertions are no longer bound to to a page and can't be removed in \"blocks\", we rely on the sweep server for all cleanup.",
        "base_ref": "wt-5058-no-las",
        "created_at": "Friday Aug 23, 2019 at 00:48 GMT",
        "updated_at": "Friday Aug 30, 2019 at 00:30 GMT",
        "closed_at": "Friday Aug 30, 2019 at 00:29 GMT",
        "merged_at": "Friday Aug 30, 2019 at 00:29 GMT"
    },
    {
        "key": "WT-5062",
        "number": 4841,
        "state": "closed",
        "title": "WT-5062 Adjust the record size to consume less size in Jenkins perf machine",
        "body": "The record size is reduced to consume less disk space for the test\r\nas part of the performance tests. Earlier it used to take around\r\n60GB, now it is reduced to 12GB.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 22, 2019 at 23:26 GMT",
        "updated_at": "Monday Aug 26, 2019 at 01:19 GMT",
        "closed_at": "Friday Aug 23, 2019 at 06:12 GMT",
        "merged_at": "Friday Aug 23, 2019 at 06:12 GMT"
    },
    {
        "key": "WT-5076",
        "number": 4840,
        "state": "closed",
        "title": "WT-5076 Cut WiredTiger 3.2.1 release",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 22, 2019 at 07:12 GMT",
        "updated_at": "Tuesday Aug 27, 2019 at 05:43 GMT",
        "closed_at": "Tuesday Aug 27, 2019 at 05:43 GMT",
        "merged_at": "Tuesday Aug 27, 2019 at 05:43 GMT"
    },
    {
        "key": "WT-4940",
        "number": 4839,
        "state": "closed",
        "title": "WT-4940 Reconciliation should set prepared/uncommitted for each update (v4.0 backport) (Clang Format migration)",
        "body": "This is a migration of #4815.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Aug 20, 2019 at 04:18 GMT",
        "updated_at": "Tuesday Aug 27, 2019 at 02:56 GMT",
        "closed_at": "Tuesday Aug 27, 2019 at 02:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4899",
        "number": 4838,
        "state": "closed",
        "title": "WT-4899 Fix bugs that could allow more than one birthmark in an update chain (v4.0 backport) (Clang Format migration) ",
        "body": "This is a migration of #4816.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Aug 20, 2019 at 03:52 GMT",
        "updated_at": "Monday Sep 09, 2019 at 00:50 GMT",
        "closed_at": "Tuesday Aug 27, 2019 at 02:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4892",
        "number": 4837,
        "state": "closed",
        "title": "WT-4892 Improve statistics about forced eviction (v4.0 backport) (Clang Format migration)",
        "body": "This is a migration of #4825.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Aug 20, 2019 at 03:15 GMT",
        "updated_at": "Wednesday Aug 21, 2019 at 23:21 GMT",
        "closed_at": "Wednesday Aug 21, 2019 at 23:21 GMT",
        "merged_at": "Wednesday Aug 21, 2019 at 23:21 GMT"
    },
    {
        "key": "WT-4955",
        "number": 4836,
        "state": "closed",
        "title": "WT-4955 Extend backup API to allow for efficient incremental copy (Clang Format migration)",
        "body": "This is a migration of #4782.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 20, 2019 at 00:04 GMT",
        "updated_at": "Monday Sep 30, 2019 at 15:30 GMT",
        "closed_at": "Monday Aug 26, 2019 at 01:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4961",
        "number": 4835,
        "state": "closed",
        "title": "WT-4961 Checkpoints with cache overflow must keep history for reads. (Clang Format migration)",
        "body": "This is a migration of #4786.",
        "base_ref": "develop",
        "created_at": "Monday Aug 19, 2019 at 07:00 GMT",
        "updated_at": "Wednesday Sep 25, 2019 at 01:48 GMT",
        "closed_at": "Wednesday Sep 25, 2019 at 01:48 GMT",
        "merged_at": "Wednesday Sep 25, 2019 at 01:48 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4834,
        "state": "closed",
        "title": "WT-4658 Apply Clang Format (v4.0)",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Aug 19, 2019 at 04:36 GMT",
        "updated_at": "Monday Aug 19, 2019 at 05:29 GMT",
        "closed_at": "Monday Aug 19, 2019 at 05:29 GMT",
        "merged_at": "Monday Aug 19, 2019 at 05:29 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4833,
        "state": "closed",
        "title": "WT-4658 Apply Clang Format (v4.2)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Aug 19, 2019 at 04:27 GMT",
        "updated_at": "Monday Aug 19, 2019 at 05:29 GMT",
        "closed_at": "Monday Aug 19, 2019 at 05:29 GMT",
        "merged_at": "Monday Aug 19, 2019 at 05:29 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4832,
        "state": "closed",
        "title": "WT-4658 Clang Format Preparation (v4.2 backport)",
        "body": "",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Aug 19, 2019 at 03:19 GMT",
        "updated_at": "Monday Aug 19, 2019 at 04:18 GMT",
        "closed_at": "Monday Aug 19, 2019 at 04:18 GMT",
        "merged_at": "Monday Aug 19, 2019 at 04:18 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4831,
        "state": "closed",
        "title": "WT-4658 Clang Format Preparation (v4.0 backport)",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Aug 19, 2019 at 03:19 GMT",
        "updated_at": "Monday Aug 19, 2019 at 04:18 GMT",
        "closed_at": "Monday Aug 19, 2019 at 04:18 GMT",
        "merged_at": "Monday Aug 19, 2019 at 04:18 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4830,
        "state": "closed",
        "title": "WT-4658 Clang Format Preparation (v3.6 backport)",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Aug 19, 2019 at 03:19 GMT",
        "updated_at": "Monday Aug 26, 2019 at 01:28 GMT",
        "closed_at": "Monday Aug 19, 2019 at 04:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5063",
        "number": 4829,
        "state": "closed",
        "title": "WT-5063 cursor modify not supported error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 19, 2019 at 03:00 GMT",
        "updated_at": "Monday Aug 26, 2019 at 03:54 GMT",
        "closed_at": "Monday Aug 26, 2019 at 03:53 GMT",
        "merged_at": "Monday Aug 26, 2019 at 03:53 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4828,
        "state": "closed",
        "title": "WT-4658 Apply Clang Format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 19, 2019 at 01:56 GMT",
        "updated_at": "Monday Aug 19, 2019 at 05:28 GMT",
        "closed_at": "Monday Aug 19, 2019 at 05:28 GMT",
        "merged_at": "Monday Aug 19, 2019 at 05:28 GMT"
    },
    {
        "key": "WT-5066",
        "number": 4827,
        "state": "closed",
        "title": "WT-5066 Extend test_las06 to support column store.",
        "body": "I've just added a scenario to use the column store in `test_las06`.\r\nThis PR is pointing at my other branch, `wt-5052-las-modify` since that branch is also touching this test. Once that gets merged, I'll point this back to `relevant_history_in_cache`.",
        "base_ref": "relevant_history_in_cache",
        "created_at": "Friday Aug 16, 2019 at 06:31 GMT",
        "updated_at": "Wednesday Aug 21, 2019 at 01:29 GMT",
        "closed_at": "Wednesday Aug 21, 2019 at 01:29 GMT",
        "merged_at": "Wednesday Aug 21, 2019 at 01:29 GMT"
    },
    {
        "key": "WT-4792",
        "number": 4826,
        "state": "closed",
        "title": "WT-4792 Add stat to track pages queued for eviction after LRU sorting (#4748) (v4.0 backport)",
        "body": "(cherry picked from commit e0cbcd88a122510d8d4b20bff738e5c29cdd6e27)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Aug 16, 2019 at 03:19 GMT",
        "updated_at": "Friday Aug 16, 2019 at 04:38 GMT",
        "closed_at": "Friday Aug 16, 2019 at 04:38 GMT",
        "merged_at": "Friday Aug 16, 2019 at 04:38 GMT"
    },
    {
        "key": "WT-4892",
        "number": 4825,
        "state": "closed",
        "title": "WT-4892 Improve statistics about forced eviction (#4732) (v4.0 backport)",
        "body": "Don't assume all forced eviction not caused by a page with a too-large footprint was caused by large numbers of deleted items on a page.\r\n\r\nRe-word the statistics related to forced eviction so that they sort better and their meaning is clearer. Add in a few more statistics.\r\n\r\n(cherry picked from commit 99e0760cc5f11440b21184874d8dd2ae5bde23d6)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Aug 16, 2019 at 03:13 GMT",
        "updated_at": "Wednesday Aug 21, 2019 at 23:21 GMT",
        "closed_at": "Tuesday Aug 20, 2019 at 03:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5052",
        "number": 4824,
        "state": "closed",
        "title": "WT-5052 Enhance lookaside search functionality to handle WT_MODIFY records",
        "body": "This PR is adding support for modify records with the new lookaside logic. When we search lookaside and find a modify update, we keep walking backwards until we find a regular update and squash all the modifies in between on top of that base update.",
        "base_ref": "relevant_history_in_cache",
        "created_at": "Thursday Aug 15, 2019 at 12:15 GMT",
        "updated_at": "Wednesday Aug 21, 2019 at 01:30 GMT",
        "closed_at": "Wednesday Aug 21, 2019 at 01:20 GMT",
        "merged_at": "Wednesday Aug 21, 2019 at 01:20 GMT"
    },
    {
        "key": "WT-4810",
        "number": 4823,
        "state": "closed",
        "title": "WT-4810 Improve WT_ASSERT",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 13, 2019 at 07:21 GMT",
        "updated_at": "Wednesday Aug 14, 2019 at 04:50 GMT",
        "closed_at": "Wednesday Aug 14, 2019 at 04:50 GMT",
        "merged_at": "Wednesday Aug 14, 2019 at 04:50 GMT"
    },
    {
        "key": "WT-4920",
        "number": 4822,
        "state": "closed",
        "title": "WT-4920 Add statistics tracking when eviction server is waiting for page transitions (#4754) (v4.0 backport)",
        "body": "(cherry picked from commit 2ad627fb20c2bf8f393620ac0a268629a7df0e31)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Aug 13, 2019 at 06:12 GMT",
        "updated_at": "Wednesday Aug 14, 2019 at 04:21 GMT",
        "closed_at": "Wednesday Aug 14, 2019 at 04:21 GMT",
        "merged_at": "Wednesday Aug 14, 2019 at 04:21 GMT"
    },
    {
        "key": "WT-4884",
        "number": 4821,
        "state": "closed",
        "title": "WT-4884 Test for recovery correctness with all WAL operation types",
        "body": "The row store operations like row_put(insert, update), row_modify(modify)\r\nand row_remove(remove) cursor operations are covered in the test.\r\n\r\nThe test creates 3 set of files per worker (insert, modify and delete).\r\nInsert file contains all the records that are inserted, followed by\r\neither the record is modified or deleted those will be in their corresponding\r\nfiles.\r\n\r\nAfter a successful recovery, the main thread verifies the records based\r\non the file the key is present.\r\n\t- insert, the record must present\r\n\t- delete, the record must not present\r\n\t- modify, the record must present with modified data",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 13, 2019 at 05:35 GMT",
        "updated_at": "Sunday Sep 01, 2019 at 23:12 GMT",
        "closed_at": "Sunday Sep 01, 2019 at 23:11 GMT",
        "merged_at": "Sunday Sep 01, 2019 at 23:11 GMT"
    },
    {
        "key": "WT-4895",
        "number": 4820,
        "state": "closed",
        "title": "WT-4895 Avoid overriding the randomization of lookaside eviction (#4736) (v4.0 backport)",
        "body": "Remove the override of the randomization that is choosen Under\r\nWT_CACHE_EVICT_DEBUG_MODE flag.\r\n\r\n(cherry picked from commit dccdc93ba1ca5efcdc2239617d9532f66fa4944e)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Aug 13, 2019 at 04:57 GMT",
        "updated_at": "Wednesday Aug 14, 2019 at 03:27 GMT",
        "closed_at": "Wednesday Aug 14, 2019 at 03:27 GMT",
        "merged_at": "Wednesday Aug 14, 2019 at 03:27 GMT"
    },
    {
        "key": "WT-4882",
        "number": 4819,
        "state": "closed",
        "title": "WT-4882 Allow metadata pages to split under load. (#4722) (v4.0 backport)",
        "body": "Also add a wtperf workload that demonstrates the problem.\r\n\r\n(cherry picked from commit 8313783f309cdfc61818607b8714ab0fe3bdec41)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Aug 13, 2019 at 02:02 GMT",
        "updated_at": "Tuesday Aug 13, 2019 at 04:41 GMT",
        "closed_at": "Tuesday Aug 13, 2019 at 04:41 GMT",
        "merged_at": "Tuesday Aug 13, 2019 at 04:41 GMT"
    },
    {
        "key": "WT-5046",
        "number": 4818,
        "state": "closed",
        "title": "WT-5046 Prepared transactions aren't properly cleared from global table with WT_CONN_LOG_DEBUG_MODE enabled",
        "body": "This PR is adding some additional logic to clear txn IDs from the global table when we have table logging on. To give a bit of background on what this is solving:\r\n\r\nThe lifecycle for a normal prepared txn is:\r\n1. Begin txn.\r\n2. Do operations. The first one will alloc a txn ID and a write to the log.\r\n3. Prepare the txn. Here we clear the txn ID from the global table.\r\n4. Commit the txn. We purposely don't clear the txn ID since we did it at the prepare stage.\r\n\r\nWhen a txn has no operations, it gets neither a txn ID nor a log record allocated for it. When we have table logging turned on, an empty prepared txn will have its log record initialised (and a txn ID allocated) at commit time in order to write it to the log. With our existing logic, this causes the txn ID to not get cleared from the global table and prevents rollback to stable.\r\n\r\nThe lifecycle for an empty prepared txn is:\r\n1. Begin txn.\r\n2. Do no operations. We won't get a txn ID allocated or any log initialised.\r\n3. Prepare the txn. We have no txn ID to clear from the global table so nothing special happens in that regard.\r\n4. Commit the txn. Since we haven't initialised the log yet, we do it here and allocate a txn ID as part of this process. We purposely don't clear the txn ID since we supposedly did it at the prepare stage (!!!).\r\n\r\nSo this PR is modifying the clearing logic at the commit stage to clear the txn ID from the global table for not only non-prepared txns but ALSO prepared txns that have no modifications if table logging is on.",
        "base_ref": "develop",
        "created_at": "Monday Aug 12, 2019 at 09:35 GMT",
        "updated_at": "Wednesday Aug 14, 2019 at 12:45 GMT",
        "closed_at": "Wednesday Aug 14, 2019 at 12:45 GMT",
        "merged_at": "Wednesday Aug 14, 2019 at 12:45 GMT"
    },
    {
        "key": "WT-4840",
        "number": 4817,
        "state": "closed",
        "title": "WT-4840 WT_CURSOR.modify must require explicit, snapshot-isolation transaction (v4.0 backport)(2nd attempt after revert)",
        "body": "Disallow WT_CURSOR.modify in anything other than an explicit transaction\r\nat snapshot isolation.\r\n\r\nAdd tests that other transaction configurations fail.\r\n\r\n(cherry picked from commit 7c486eb1d4aecb67a635e06cdd74d179d69638f1)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Aug 12, 2019 at 04:32 GMT",
        "updated_at": "Monday Aug 12, 2019 at 06:42 GMT",
        "closed_at": "Monday Aug 12, 2019 at 06:42 GMT",
        "merged_at": "Monday Aug 12, 2019 at 06:42 GMT"
    },
    {
        "key": "WT-4899",
        "number": 4816,
        "state": "closed",
        "title": "WT-4899 Fix bugs that could allow more than one birthmark in an update chain (#4763) (v4.0 backport)",
        "body": "Specifically there were cases where writing a page to lookaside multiple times would result in an update chain with multiple birthmarks, which isn't right. A birthmark refers to the on-page value, and there should only ever be one update in a chain that refers to it.\r\n\r\nThere were two issues:\r\n* Sometimes birthmarks weren't being resolved during reconciliation. This would mean that they would be re-written in subsequent lookaside evictions. This would only be a problem if reconciliation had chosen a different record to put in the data file the second time, and it should not have been doing that.\r\n* Sometimes obsolete updates were being written to lookaside, and we never resolve values for obsolete updates. A birthmark could be written, but it would never have been visible.\r\n\r\n(cherry picked from commit a9a9857e32181befc4cba4541325dc36008749d6)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Aug 12, 2019 at 03:31 GMT",
        "updated_at": "Tuesday Aug 27, 2019 at 02:58 GMT",
        "closed_at": "Tuesday Aug 20, 2019 at 03:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4940",
        "number": 4815,
        "state": "closed",
        "title": "WT-4940 Reconciliation should set prepared/uncommitted for each update (v4.0 backport)",
        "body": "\r\n(cherry picked from commit 3e9b3318f2a3ce47707e14d7587dc3ecec1481a0)",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Aug 12, 2019 at 01:14 GMT",
        "updated_at": "Thursday Dec 05, 2019 at 02:45 GMT",
        "closed_at": "Tuesday Aug 20, 2019 at 04:19 GMT",
        "merged_at": null
    },
    {
        "key": "WT-5054",
        "number": 4814,
        "state": "closed",
        "title": "WT-5054 Format test bug where truncation operations could fail repeatable read testing.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 09, 2019 at 18:20 GMT",
        "updated_at": "Sunday Aug 11, 2019 at 19:47 GMT",
        "closed_at": "Sunday Aug 11, 2019 at 19:47 GMT",
        "merged_at": "Sunday Aug 11, 2019 at 19:47 GMT"
    },
    {
        "key": "WT-5040",
        "number": 4813,
        "state": "closed",
        "title": "WT-5040 Add dumping of cursor's page on a mismatch.",
        "body": "@keithbostic for any suggestions of other/additional places to call this new function. Not yet ready for merge.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 08, 2019 at 18:19 GMT",
        "updated_at": "Thursday Aug 08, 2019 at 20:46 GMT",
        "closed_at": "Thursday Aug 08, 2019 at 20:46 GMT",
        "merged_at": "Thursday Aug 08, 2019 at 20:46 GMT"
    },
    {
        "key": "WT-4869",
        "number": 4812,
        "state": "closed",
        "title": "Revert \"WT-4869 / WT-4881 / WT-4893 v4.0 backport\"",
        "body": "Reverts wiredtiger/wiredtiger#4773",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Aug 08, 2019 at 06:06 GMT",
        "updated_at": "Thursday Aug 08, 2019 at 06:26 GMT",
        "closed_at": "Thursday Aug 08, 2019 at 06:06 GMT",
        "merged_at": "Thursday Aug 08, 2019 at 06:06 GMT"
    },
    {
        "key": "WT-4869",
        "number": 4811,
        "state": "closed",
        "title": "Revert \"WT-4869 / WT-4881 / WT-4893 v3.6 backport\"",
        "body": "Reverts wiredtiger/wiredtiger#4804",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Aug 08, 2019 at 06:03 GMT",
        "updated_at": "Thursday Dec 05, 2019 at 02:44 GMT",
        "closed_at": "Thursday Aug 08, 2019 at 06:04 GMT",
        "merged_at": "Thursday Aug 08, 2019 at 06:04 GMT"
    },
    {
        "key": "WT-4940",
        "number": 4810,
        "state": "closed",
        "title": "Revert \"WT-4940 Reconciliation should set prepared/uncommitted for each updat\u2026\"",
        "body": "Reverts wiredtiger/wiredtiger#4791",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Aug 08, 2019 at 06:00 GMT",
        "updated_at": "Thursday Aug 08, 2019 at 06:26 GMT",
        "closed_at": "Thursday Aug 08, 2019 at 06:00 GMT",
        "merged_at": "Thursday Aug 08, 2019 at 06:00 GMT"
    },
    {
        "key": "WT-4943",
        "number": 4809,
        "state": "closed",
        "title": "Revert \"WT-4943 Fix  a bug where uncommitted updates could be discarded (BACKPORT - 4.0)\"",
        "body": "Reverts wiredtiger/wiredtiger#4792",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Aug 08, 2019 at 05:58 GMT",
        "updated_at": "Thursday Aug 08, 2019 at 06:26 GMT",
        "closed_at": "Thursday Aug 08, 2019 at 05:58 GMT",
        "merged_at": "Thursday Aug 08, 2019 at 05:58 GMT"
    },
    {
        "key": "WT-4840",
        "number": 4808,
        "state": "closed",
        "title": "Revert \"WT-4840 WT_CURSOR.modify must require explicit, snapshot-isolation transaction (v4.0 backport)\"",
        "body": "Reverts wiredtiger/wiredtiger#4767",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Aug 08, 2019 at 05:56 GMT",
        "updated_at": "Thursday Aug 08, 2019 at 06:26 GMT",
        "closed_at": "Thursday Aug 08, 2019 at 05:57 GMT",
        "merged_at": "Thursday Aug 08, 2019 at 05:57 GMT"
    },
    {
        "key": "WT-4676",
        "number": 4807,
        "state": "closed",
        "title": "WT-4676 Write a search function to locate an update in the lookaside file.",
        "body": "Also, match the record found with the record in-memory to verify that\r\nthe search function is behaving correctly.",
        "base_ref": "relevant_history_in_cache",
        "created_at": "Wednesday Aug 07, 2019 at 08:06 GMT",
        "updated_at": "Wednesday Aug 14, 2019 at 02:35 GMT",
        "closed_at": "Wednesday Aug 14, 2019 at 02:35 GMT",
        "merged_at": "Wednesday Aug 14, 2019 at 02:35 GMT"
    },
    {
        "key": "WT-5050",
        "number": 4806,
        "state": "closed",
        "title": "WT-5050 Don't allow checkpoints to evict without a snapshot",
        "body": "Checkpoint gives up it's snapshot prior to checkpointing the metadata.\r\nOnce the snapshot is given up, it's not OK for checkpoint to try eviction prior to doing reconciliation.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 07, 2019 at 06:08 GMT",
        "updated_at": "Monday Aug 26, 2019 at 01:20 GMT",
        "closed_at": "Wednesday Aug 07, 2019 at 11:25 GMT",
        "merged_at": "Wednesday Aug 07, 2019 at 11:25 GMT"
    },
    {
        "key": "WT-4678",
        "number": 4805,
        "state": "closed",
        "title": "WT-4678 Write the test workload for relevant history in cache",
        "body": "This PR is adding a test that exercises the new lookaside behaviour and makes some assertions on how the implementation should behave from a memory usage + perf perspective.",
        "base_ref": "relevant_history_in_cache",
        "created_at": "Wednesday Aug 07, 2019 at 01:10 GMT",
        "updated_at": "Thursday Aug 08, 2019 at 07:12 GMT",
        "closed_at": "Thursday Aug 08, 2019 at 07:12 GMT",
        "merged_at": "Thursday Aug 08, 2019 at 07:12 GMT"
    },
    {
        "key": "WT-4869",
        "number": 4804,
        "state": "closed",
        "title": "WT-4869 / WT-4881 / WT-4893 v3.6 backport",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Aug 05, 2019 at 03:34 GMT",
        "updated_at": "Tuesday Sep 24, 2019 at 14:01 GMT",
        "closed_at": "Tuesday Aug 06, 2019 at 02:13 GMT",
        "merged_at": "Tuesday Aug 06, 2019 at 02:13 GMT"
    },
    {
        "key": "WT-4935",
        "number": 4803,
        "state": "closed",
        "title": "WT-4935 Add a perf test to find out the wiredtiger_calc_modify overhead",
        "body": "The wiredtiger_calc_modify function is used to find out the modify vector\r\nbased on the old and new record values. This function may fail when the\r\nchanged modifications of the new record reaches the allowed limit of\r\nmodification for the MODIFY operation, instead of UPDATE.\r\n\r\nThis perf test is to find out the extra overhead because of\r\nwiredtiger_calc_modify function where it fails to find out the modify\r\nvectors because of reach of the limits configured for the MODIFY operation\r\nand at the end the operations is carried out as normal update.",
        "base_ref": "develop",
        "created_at": "Monday Aug 05, 2019 at 02:12 GMT",
        "updated_at": "Wednesday Aug 21, 2019 at 03:26 GMT",
        "closed_at": "Wednesday Aug 21, 2019 at 03:26 GMT",
        "merged_at": "Wednesday Aug 21, 2019 at 03:26 GMT"
    },
    {
        "key": "WT-5038",
        "number": 4802,
        "state": "closed",
        "title": "WT-5038 format heap use after free in __txn_commit_timestamps_assert",
        "body": "This PR is to address the use after free issue exposed by WT-4957. Since `__txn_commit_timestamps_assert` actually populates the update list with pointers to data from a given cursor, that cursor needs to stay open until we're finished with the update list.",
        "base_ref": "develop",
        "created_at": "Monday Aug 05, 2019 at 02:05 GMT",
        "updated_at": "Tuesday Aug 13, 2019 at 06:34 GMT",
        "closed_at": "Tuesday Aug 13, 2019 at 06:33 GMT",
        "merged_at": "Tuesday Aug 13, 2019 at 06:33 GMT"
    },
    {
        "key": "WT-4460",
        "number": 4801,
        "state": "closed",
        "title": "WT-4460 Optimize for in-order, non-overlapping modifications",
        "body": "http://build.wiredtiger.com:8080/job/wiredtiger-configure-combinations/4593/console",
        "base_ref": "develop",
        "created_at": "Friday Aug 02, 2019 at 21:46 GMT",
        "updated_at": "Friday Aug 02, 2019 at 21:50 GMT",
        "closed_at": "Friday Aug 02, 2019 at 21:50 GMT",
        "merged_at": "Friday Aug 02, 2019 at 21:50 GMT"
    },
    {
        "key": "WT-4344",
        "number": 4800,
        "state": "closed",
        "title": "WT-4344 Add a set of tests for salvaging corrupt turtle files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 02, 2019 at 13:31 GMT",
        "updated_at": "Monday Aug 26, 2019 at 01:30 GMT",
        "closed_at": "Wednesday Aug 07, 2019 at 22:40 GMT",
        "merged_at": "Wednesday Aug 07, 2019 at 22:40 GMT"
    },
    {
        "key": "WT-4869",
        "number": 4799,
        "state": "closed",
        "title": "WT-4869 and WT-4881 v3.6 backport",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Friday Aug 02, 2019 at 05:03 GMT",
        "updated_at": "Monday Aug 05, 2019 at 04:52 GMT",
        "closed_at": "Monday Aug 05, 2019 at 04:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4460",
        "number": 4798,
        "state": "closed",
        "title": "WT-4460 Optimize for in-order, non-overlapping modifications",
        "body": "This is a new PR for the restored branch for whatever additional work is needed to pass testing. Before merging, it should be run against several of the test/format stress jobs for a while.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 31, 2019 at 17:32 GMT",
        "updated_at": "Friday Aug 02, 2019 at 21:17 GMT",
        "closed_at": "Friday Aug 02, 2019 at 21:17 GMT",
        "merged_at": "Friday Aug 02, 2019 at 21:17 GMT"
    },
    {
        "key": "WT-4460",
        "number": 4797,
        "state": "closed",
        "title": "Revert \"WT-4460 Optimize for in-order, non-overlapping modifications\"",
        "body": "This reverts commit 2a43429ebff0b8c4f8d27130cfcf009b98d9b7e6.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 31, 2019 at 17:25 GMT",
        "updated_at": "Wednesday Jul 31, 2019 at 17:27 GMT",
        "closed_at": "Wednesday Jul 31, 2019 at 17:27 GMT",
        "merged_at": "Wednesday Jul 31, 2019 at 17:27 GMT"
    },
    {
        "key": "WT-4957",
        "number": 4796,
        "state": "closed",
        "title": "WT-4957 Fix a perf regression in urgent eviction.",
        "body": "If we can't evict immediately (e.g., in the eviction server thread), at least put pages requiring urgent eviction on the urgent queue.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 31, 2019 at 00:21 GMT",
        "updated_at": "Wednesday Jul 31, 2019 at 05:52 GMT",
        "closed_at": "Wednesday Jul 31, 2019 at 05:52 GMT",
        "merged_at": "Wednesday Jul 31, 2019 at 05:52 GMT"
    },
    {
        "key": "WT-5036",
        "number": 4795,
        "state": "closed",
        "title": "WT-5036 fix format bug where tracking buffer wrap causes repeatable operation failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 30, 2019 at 18:51 GMT",
        "updated_at": "Tuesday Jul 30, 2019 at 20:24 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 20:24 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 20:24 GMT"
    },
    {
        "key": "WT-4963",
        "number": 4794,
        "state": "closed",
        "title": "WT-4963 Add debugging for rare test hang.",
        "body": "Since this hang is not reproducible on any Mac after 500 iterations, I have added debugging so that we can gather some additional information in evergreen. It only sometimes fails there too.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 30, 2019 at 18:08 GMT",
        "updated_at": "Tuesday Jul 30, 2019 at 19:22 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 19:22 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 19:22 GMT"
    },
    {
        "key": "WT-4917",
        "number": 4793,
        "state": "closed",
        "title": "WT-4917 fix format bug where truncate operations not correctly compared with previous updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 30, 2019 at 17:50 GMT",
        "updated_at": "Tuesday Jul 30, 2019 at 18:35 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 18:35 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 18:35 GMT"
    },
    {
        "key": "WT-4943",
        "number": 4792,
        "state": "closed",
        "title": "WT-4943 Fix  a bug where uncommitted updates could be discarded (BACKPORT - 4.0)",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Jul 30, 2019 at 01:34 GMT",
        "updated_at": "Monday Aug 26, 2019 at 02:06 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 23:21 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 23:21 GMT"
    },
    {
        "key": "WT-4940",
        "number": 4791,
        "state": "closed",
        "title": "WT-4940 Reconciliation should set prepared/uncommitted for each update (v4.0 backport)",
        "body": "WT-4940 Reconciliation should set prepared/uncommitted for each update. (#4777) (BACKPORT-4.0)\r\n\r\n(cherry picked from commit 3e9b3318f2a3ce47707e14d7587dc3ecec1481a0)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Jul 30, 2019 at 00:53 GMT",
        "updated_at": "Monday Aug 12, 2019 at 01:12 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 07:06 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 07:06 GMT"
    },
    {
        "key": "WT-4935",
        "number": 4790,
        "state": "closed",
        "title": "WT-4935 worst case performance of auto calcuating modify API",
        "body": "wiredtiger_calc_modify API is added to cover the update operations\r\nto modify operations to reduce the overhead. This test is to find out\r\nthe overhead that this API can cause when the modifications reach\r\nthe maximum limit in either maximum size of modification or\r\nmaximum number of modifications. The maximum size of modification\r\nand maximum number of modifications are taken from the MongoDB\r\nusage of this API.",
        "base_ref": "develop",
        "created_at": "Monday Jul 29, 2019 at 06:30 GMT",
        "updated_at": "Friday Aug 02, 2019 at 04:23 GMT",
        "closed_at": "Friday Aug 02, 2019 at 04:23 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4965",
        "number": 4789,
        "state": "closed",
        "title": "WT-4965 Avoid eviction during checkpoints that causes amnesia.",
        "body": "Testing has uncovered a situation where a checkpoint can discard history required for snapshot readers.  Disable this eviction for now when history can be lost, to make sure snapshot transactions get correct results.",
        "base_ref": "develop",
        "created_at": "Friday Jul 26, 2019 at 11:57 GMT",
        "updated_at": "Sunday Jul 28, 2019 at 22:38 GMT",
        "closed_at": "Sunday Jul 28, 2019 at 22:38 GMT",
        "merged_at": "Sunday Jul 28, 2019 at 22:38 GMT"
    },
    {
        "key": "WT-4961",
        "number": 4788,
        "state": "closed",
        "title": "WT-4961 part 2: rewrite of reconciliation visibility checks.",
        "body": "This branch attempts to fix some problems in the base branch, improve efficiency of lookaside evictions and subsequent reads, and simplify the information being tracked for pages with history in lookaside.",
        "base_ref": "wt-4961-checkpoint-eviction-keep-history",
        "created_at": "Friday Jul 26, 2019 at 07:30 GMT",
        "updated_at": "Tuesday Jul 30, 2019 at 00:41 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 00:40 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 00:40 GMT"
    },
    {
        "key": "WT-4956",
        "number": 4787,
        "state": "closed",
        "title": "WT-4956 Handle the case where 4 billion updates are made to a page without eviction",
        "body": "This PR is to handle the issue where we consistently have at least one update that doesn't get written to the data file by a checkpoint causing the `write_gen` to never get reset to 0. This type of workload causes the `write_gen` to continually increase until we hit the check in `__page_write_gen_wrapped_check` and begin stalling.\r\n\r\nThis new scheme involves capping the `write_gen` to 2 since we only need this value to determine whether the page is clean or dirty (or has been dirtied during reconciliation).",
        "base_ref": "develop",
        "created_at": "Thursday Jul 25, 2019 at 08:21 GMT",
        "updated_at": "Thursday Aug 01, 2019 at 03:34 GMT",
        "closed_at": "Thursday Aug 01, 2019 at 03:33 GMT",
        "merged_at": "Thursday Aug 01, 2019 at 03:33 GMT"
    },
    {
        "key": "WT-4961",
        "number": 4786,
        "state": "closed",
        "title": "WT-4961 Checkpoints with cache overflow must keep history for reads.",
        "body": "When cache overflow has been active, checkpoints may need to pull pages into cache in order to rewrite the correct versions.  These pages must be evicted as soon as possible to avoid checkpoint filling the cache with pages that other threads cannot evict (until checkpoint has moved on to another tree).\r\n\r\nThis leads to the unusual case of attempting eviction of pages while writing disk images that are correct as of the checkpoint's transaction.  In other words, `__wt_txn_visible` is used to select the versions of updates written to the disk image.  However, it is not okay in this case to discard history because everything happens to be visible to a checkpoint: snapshot readers may need an earlier version (back to the oldest timestamp).",
        "base_ref": "develop",
        "created_at": "Thursday Jul 25, 2019 at 07:03 GMT",
        "updated_at": "Monday Jan 13, 2020 at 04:02 GMT",
        "closed_at": "Monday Aug 19, 2019 at 08:11 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4909",
        "number": 4785,
        "state": "closed",
        "title": "WT-4909 Potential code caching/re-ordering issue in __search_insert_append",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 24, 2019 at 08:11 GMT",
        "updated_at": "Monday Jul 29, 2019 at 06:24 GMT",
        "closed_at": "Monday Jul 29, 2019 at 06:24 GMT",
        "merged_at": "Monday Jul 29, 2019 at 06:24 GMT"
    },
    {
        "key": "WT-4958",
        "number": 4784,
        "state": "closed",
        "title": "WT-4958 Temporarily never skip checkpoints with a timestamp",
        "body": "It causes failures in MongoDB.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 24, 2019 at 05:20 GMT",
        "updated_at": "Wednesday Jul 24, 2019 at 07:08 GMT",
        "closed_at": "Wednesday Jul 24, 2019 at 07:08 GMT",
        "merged_at": "Wednesday Jul 24, 2019 at 07:08 GMT"
    },
    {
        "key": "WT-4946",
        "number": 4783,
        "state": "closed",
        "title": "WT-4946 Tighten up failure checks in join code and add an assertion to clarify.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 23, 2019 at 11:28 GMT",
        "updated_at": "Monday Aug 26, 2019 at 01:20 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 10:41 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 10:41 GMT"
    },
    {
        "key": "WT-4955",
        "number": 4782,
        "state": "closed",
        "title": "WT-4955 Extend backup API to allow for efficient incremental copy",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 23, 2019 at 02:02 GMT",
        "updated_at": "Sunday Aug 25, 2019 at 17:58 GMT",
        "closed_at": "Tuesday Aug 20, 2019 at 00:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4906",
        "number": 4781,
        "state": "closed",
        "title": "WT-4906 wtperf.c integer overflow and dead code fixes (Coverity)",
        "body": "CID 113115, CID 113116, CID 113117 and CID 113119 (integer overflow)\r\nTypecasted one of the variable to uint64_t to evaluate the arithmetic\r\nusing 64 bits instead of 32 bits.\r\n\r\nCID 113118 (dead code)\r\nRemoved dead code",
        "base_ref": "develop",
        "created_at": "Monday Jul 22, 2019 at 04:12 GMT",
        "updated_at": "Tuesday Jul 30, 2019 at 07:37 GMT",
        "closed_at": "Monday Jul 22, 2019 at 11:25 GMT",
        "merged_at": "Monday Jul 22, 2019 at 11:25 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4780,
        "state": "closed",
        "title": "WT-4658 Make dist scripts cooperate with Clang Format",
        "body": "This is the final PR that needs to be merged in before applying Clang Format. I did some work to get the existing scripts under `dist/` to play nicely with Clang Format.\r\n\r\nI've disabled `s_all` since I don't want to reformat the codebase yet. Locally, it works perfectly and after 2 runs, it finishes cleanly and returns 0. We need 2 runs for the initial reformat since some earlier steps in `s_all` see more opportunities to cleanup after later steps have run for the first time (kind of hard to explain in a comment but it's nothing to be alarmed about).",
        "base_ref": "develop",
        "created_at": "Sunday Jul 21, 2019 at 14:25 GMT",
        "updated_at": "Monday Aug 19, 2019 at 01:50 GMT",
        "closed_at": "Monday Aug 19, 2019 at 01:50 GMT",
        "merged_at": "Monday Aug 19, 2019 at 01:50 GMT"
    },
    {
        "key": "WT-4943",
        "number": 4779,
        "state": "closed",
        "title": "WT-4943 Separate tracking per update list vs per page.",
        "body": "We've tried a few times to get this right, so I've renamed the variables to clarify.  Reconciliation as a whole needs to know whether there are any uncommitted updates on a page (to prevent lookaside eviction): that's tracked in `r->updates_uncommitted`.  Selecting a single update needs to know whether any updates *in the list* are prepared or uncommitted.  That's now tracked in `list_prepared` and `list_uncommitted`.",
        "base_ref": "develop",
        "created_at": "Friday Jul 19, 2019 at 03:45 GMT",
        "updated_at": "Friday Jul 19, 2019 at 04:59 GMT",
        "closed_at": "Friday Jul 19, 2019 at 04:59 GMT",
        "merged_at": "Friday Jul 19, 2019 at 04:59 GMT"
    },
    {
        "key": "WT-4943",
        "number": 4778,
        "state": "closed",
        "title": "WT-4943 Track uncommitted/prepared status through reconciliation.",
        "body": "Don't skip selecting an update after seeing an uncommitted / prepared entry in an update list, but remember whether one has been seen when determining whether the page can be evicted.",
        "base_ref": "develop",
        "created_at": "Friday Jul 19, 2019 at 02:34 GMT",
        "updated_at": "Friday Jul 19, 2019 at 03:37 GMT",
        "closed_at": "Friday Jul 19, 2019 at 03:19 GMT",
        "merged_at": "Friday Jul 19, 2019 at 03:19 GMT"
    },
    {
        "key": "WT-4940",
        "number": 4777,
        "state": "closed",
        "title": "WT-4940 Reconciliation should set prepared/uncommitted for each update.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 18, 2019 at 01:09 GMT",
        "updated_at": "Thursday Jul 18, 2019 at 01:49 GMT",
        "closed_at": "Thursday Jul 18, 2019 at 01:49 GMT",
        "merged_at": "Thursday Jul 18, 2019 at 01:49 GMT"
    },
    {
        "key": "WT-4939",
        "number": 4776,
        "state": "closed",
        "title": "WT-4939 Fix a test for skipping checkpoints, it never returns success.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 17, 2019 at 21:36 GMT",
        "updated_at": "Thursday Jul 18, 2019 at 14:22 GMT",
        "closed_at": "Thursday Jul 18, 2019 at 14:22 GMT",
        "merged_at": "Thursday Jul 18, 2019 at 14:22 GMT"
    },
    {
        "key": "WT-4937",
        "number": 4775,
        "state": "closed",
        "title": "WT-4937 Fix verify_wt_datafiles.sh to run if no LD_LIBRARY_PATH variable set",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 17, 2019 at 03:28 GMT",
        "updated_at": "Wednesday Jul 17, 2019 at 07:03 GMT",
        "closed_at": "Wednesday Jul 17, 2019 at 07:03 GMT",
        "merged_at": "Wednesday Jul 17, 2019 at 07:03 GMT"
    },
    {
        "key": "WT-4936",
        "number": 4774,
        "state": "closed",
        "title": "WT-4936 Update clang-scan expected output.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 17, 2019 at 03:09 GMT",
        "updated_at": "Wednesday Jul 17, 2019 at 03:29 GMT",
        "closed_at": "Wednesday Jul 17, 2019 at 03:29 GMT",
        "merged_at": "Wednesday Jul 17, 2019 at 03:29 GMT"
    },
    {
        "key": "WT-4869",
        "number": 4773,
        "state": "closed",
        "title": "WT-4869 / WT-4881 / WT-4893 v4.0 backport",
        "body": "The 3 tickets are correlated so I backported them together as a group. \r\nIt's a clean cherry-pick for WT-4869 and WT-4881, but not WT-4893. \r\n@keithbostic could you help to take a look? Thanks.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Jul 16, 2019 at 02:17 GMT",
        "updated_at": "Thursday Jul 18, 2019 at 00:08 GMT",
        "closed_at": "Thursday Jul 18, 2019 at 00:08 GMT",
        "merged_at": "Thursday Jul 18, 2019 at 00:08 GMT"
    },
    {
        "key": "WT-4934",
        "number": 4772,
        "state": "closed",
        "title": "WT-4934 Fix and update clang-tidy testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 16, 2019 at 00:50 GMT",
        "updated_at": "Tuesday Jul 16, 2019 at 23:40 GMT",
        "closed_at": "Tuesday Jul 16, 2019 at 23:40 GMT",
        "merged_at": "Tuesday Jul 16, 2019 at 23:40 GMT"
    },
    {
        "key": "RT-4885",
        "number": 4771,
        "state": "closed",
        "title": "BACKPORT-4885 Fix the Windows CRC32 on blocks that aren't 8B aligned and/or multiples of 8B",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Monday Jul 15, 2019 at 22:27 GMT",
        "updated_at": "Friday Jul 19, 2019 at 17:37 GMT",
        "closed_at": "Friday Jul 19, 2019 at 17:37 GMT",
        "merged_at": "Friday Jul 19, 2019 at 17:37 GMT"
    },
    {
        "key": "WT-4932",
        "number": 4770,
        "state": "closed",
        "title": "WT-4932 Add logging files to WiredTiger big/little-endian testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 15, 2019 at 19:52 GMT",
        "updated_at": "Wednesday Jul 17, 2019 at 01:49 GMT",
        "closed_at": "Tuesday Jul 16, 2019 at 10:45 GMT",
        "merged_at": "Tuesday Jul 16, 2019 at 10:45 GMT"
    },
    {
        "key": "WT-4931",
        "number": 4769,
        "state": "closed",
        "title": "WT-4931 Fix clang testing in Jenkins Pull Request testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jul 14, 2019 at 22:21 GMT",
        "updated_at": "Tuesday Jul 16, 2019 at 23:45 GMT",
        "closed_at": "Tuesday Jul 16, 2019 at 23:45 GMT",
        "merged_at": "Tuesday Jul 16, 2019 at 23:45 GMT"
    },
    {
        "key": "WT-4930",
        "number": 4768,
        "state": "closed",
        "title": "WT-4930 review and fix likely coding errors of error returns after jump to error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jul 14, 2019 at 21:04 GMT",
        "updated_at": "Thursday Jul 18, 2019 at 18:02 GMT",
        "closed_at": "Thursday Jul 18, 2019 at 18:02 GMT",
        "merged_at": "Thursday Jul 18, 2019 at 18:02 GMT"
    },
    {
        "key": "WT-4840",
        "number": 4767,
        "state": "closed",
        "title": "WT-4840 WT_CURSOR.modify must require explicit, snapshot-isolation transaction (v4.0 backport)",
        "body": "Disallow WT_CURSOR.modify in anything other than an explicit transaction\r\nat snapshot isolation.\r\n\r\nAdd tests that other transaction configurations fail.\r\n\r\n(cherry picked from commit 7c486eb1d4aecb67a635e06cdd74d179d69638f1)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Jul 12, 2019 at 06:24 GMT",
        "updated_at": "Monday Aug 12, 2019 at 06:42 GMT",
        "closed_at": "Friday Aug 02, 2019 at 04:07 GMT",
        "merged_at": "Friday Aug 02, 2019 at 04:07 GMT"
    },
    {
        "key": "WT-4878",
        "number": 4766,
        "state": "closed",
        "title": "WT-4878 Disable random dhandle selection for eviction (#4716)",
        "body": "This mostly goes back to the state before data handles were chosen\r\nrandomly to search for eviction candidates.  It also changes some of the\r\ncalculations for how many pages to enqueue per tree.\r\n\r\nAlso fix handle lock test to reset cursors before caching them.\r\nOtherwise, for configurations with many threads it can end up in a state\r\nwhere there is a cursor on every page, preventing the pages from\r\nsplitting, and ultimately blocking eviction.  This was exposed by\r\nchanges to eviction, but is a structural problem with the test case.\r\n\r\n(cherry picked from commit 859c527b01143c0f3d1a064b4ae14592c65628d1)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Jul 12, 2019 at 03:02 GMT",
        "updated_at": "Friday Jul 12, 2019 at 05:13 GMT",
        "closed_at": "Friday Jul 12, 2019 at 05:11 GMT",
        "merged_at": "Friday Jul 12, 2019 at 05:11 GMT"
    },
    {
        "key": "WT-4913",
        "number": 4765,
        "state": "closed",
        "title": "WT-4913 Checksum restructure attempt to keep Windows-specific changes local.",
        "body": "",
        "base_ref": "wt-4913-windows-crc32",
        "created_at": "Friday Jul 12, 2019 at 01:43 GMT",
        "updated_at": "Friday Jul 12, 2019 at 04:01 GMT",
        "closed_at": "Friday Jul 12, 2019 at 04:01 GMT",
        "merged_at": "Friday Jul 12, 2019 at 04:01 GMT"
    },
    {
        "key": "WT-4908",
        "number": 4764,
        "state": "closed",
        "title": "WT-4908 Add new flag for recovery of metadata.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 12, 2019 at 00:56 GMT",
        "updated_at": "Sunday Jul 14, 2019 at 21:08 GMT",
        "closed_at": "Sunday Jul 14, 2019 at 21:08 GMT",
        "merged_at": "Sunday Jul 14, 2019 at 21:08 GMT"
    },
    {
        "key": "WT-4899",
        "number": 4763,
        "state": "closed",
        "title": "WT-4899 Write out no more than a single birthmark for a key in the LAS file",
        "body": "@tetsuo-cpp, It appears that WT-4899 and WT-4922 are probably the same.  I would like do some more testing of this before merging(\\*), but I wanted to put this out for consideration.  (\\*) my test scenario is a little convoluted because I'm using an old version of test/format that exposes this problem, but it has an incompatibility with the current develop branch at the moment.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 11, 2019 at 21:03 GMT",
        "updated_at": "Wednesday Jul 17, 2019 at 06:02 GMT",
        "closed_at": "Wednesday Jul 17, 2019 at 06:02 GMT",
        "merged_at": "Wednesday Jul 17, 2019 at 06:02 GMT"
    },
    {
        "key": "WT-4928",
        "number": 4762,
        "state": "closed",
        "title": "WT-4928 Fix clang scan warnings in Jenkins Pull Request testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 11, 2019 at 18:48 GMT",
        "updated_at": "Thursday Jul 11, 2019 at 19:26 GMT",
        "closed_at": "Thursday Jul 11, 2019 at 19:26 GMT",
        "merged_at": "Thursday Jul 11, 2019 at 19:26 GMT"
    },
    {
        "key": "WT-4927",
        "number": 4761,
        "state": "closed",
        "title": "WT-4927 Allow updates with timestamps to be evicted to lookaside.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 11, 2019 at 07:04 GMT",
        "updated_at": "Friday Jul 12, 2019 at 03:55 GMT",
        "closed_at": "Friday Jul 12, 2019 at 03:55 GMT",
        "merged_at": "Friday Jul 12, 2019 at 03:55 GMT"
    },
    {
        "key": "WT-4926",
        "number": 4760,
        "state": "closed",
        "title": "WT-4926 Fix the WiredTiger static test suite's test for EBUSY failures",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 10, 2019 at 18:49 GMT",
        "updated_at": "Wednesday Jul 10, 2019 at 22:35 GMT",
        "closed_at": "Wednesday Jul 10, 2019 at 22:35 GMT",
        "merged_at": "Wednesday Jul 10, 2019 at 22:35 GMT"
    },
    {
        "key": "WT-4674",
        "number": 4759,
        "state": "closed",
        "title": "WT-4674 Initialize birthmarks using in-memory data instead of lookaside.",
        "body": "When doing lookaside eviction keep birthmark data for each record in\r\nmemory. Use this data to instantiate the page back in memory. Also,\r\ncross-reference with the lookaside to assert if there is a mismatch.",
        "base_ref": "relevant_history_in_cache",
        "created_at": "Wednesday Jul 10, 2019 at 03:25 GMT",
        "updated_at": "Thursday Jul 25, 2019 at 00:36 GMT",
        "closed_at": "Thursday Jul 25, 2019 at 00:36 GMT",
        "merged_at": "Thursday Jul 25, 2019 at 00:36 GMT"
    },
    {
        "key": "WT-4913",
        "number": 4758,
        "state": "closed",
        "title": "WT-4913 Fix the Windows CRC32 on blocks that aren't 8B aligned and/or multiples of 8B",
        "body": "@agorrod, this is only lightly tested, but seems to work.\r\n\r\nI can't think of any way to test it (other than hacking the code to exercise it, which seems like cheating). Let me know if either of you have a better idea for testing.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 10, 2019 at 01:16 GMT",
        "updated_at": "Friday Jul 12, 2019 at 04:49 GMT",
        "closed_at": "Friday Jul 12, 2019 at 04:49 GMT",
        "merged_at": "Friday Jul 12, 2019 at 04:49 GMT"
    },
    {
        "key": "WT-4857",
        "number": 4757,
        "state": "closed",
        "title": "WT-4857 Use a local variable to access the insert structure.",
        "body": "This is the simple change that has (so far) fixed the column store mismatch issue. Please review.",
        "base_ref": "develop",
        "created_at": "Monday Jul 08, 2019 at 20:28 GMT",
        "updated_at": "Tuesday Jul 09, 2019 at 05:23 GMT",
        "closed_at": "Tuesday Jul 09, 2019 at 05:23 GMT",
        "merged_at": "Tuesday Jul 09, 2019 at 05:23 GMT"
    },
    {
        "key": "WT-4916",
        "number": 4756,
        "state": "closed",
        "title": "WT-4916 Pre-formatting fixes",
        "body": "This PR is to address some formatting issues identified in the past two Clang Format review PRs. I'd like to merge this before applying Clang Format to make the output as nice as possible.\r\nThe changes are:\r\n- Remove `WT_ILLEGAL_VALUE` macros. We expect these to be indented at the same level as `case` label however, the formatter has no way of knowing it's not just a regular function call.\r\n- Don't allow comments to trail after a `goto` label. It means we can use `s_goto` in its current state and also it is more consistent since Clang Format will not let code trail after a `goto` label like we do now.\r\n- Wrap a few things with braces that don't get formatted well.",
        "base_ref": "develop",
        "created_at": "Monday Jul 08, 2019 at 11:01 GMT",
        "updated_at": "Thursday Jul 11, 2019 at 00:21 GMT",
        "closed_at": "Thursday Jul 11, 2019 at 00:21 GMT",
        "merged_at": "Thursday Jul 11, 2019 at 00:21 GMT"
    },
    {
        "key": "WT-4889",
        "number": 4755,
        "state": "closed",
        "title": "WT-4889 Dumping additional transaction fields",
        "body": "__wt_verbose_dump_txn_one function is enhanced to dump additional\r\ntransaction structure fields for more verbose infomration of the\r\ntransaction.",
        "base_ref": "develop",
        "created_at": "Monday Jul 08, 2019 at 06:53 GMT",
        "updated_at": "Wednesday Jul 10, 2019 at 03:44 GMT",
        "closed_at": "Wednesday Jul 10, 2019 at 03:43 GMT",
        "merged_at": "Wednesday Jul 10, 2019 at 03:43 GMT"
    },
    {
        "key": "WT-4920",
        "number": 4754,
        "state": "closed",
        "title": "WT-4920 Add statistics tracking when eviction server is waiting for page transitions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 08, 2019 at 02:34 GMT",
        "updated_at": "Monday Jul 08, 2019 at 04:44 GMT",
        "closed_at": "Monday Jul 08, 2019 at 03:24 GMT",
        "merged_at": "Monday Jul 08, 2019 at 03:24 GMT"
    },
    {
        "key": "WT-4612",
        "number": 4753,
        "state": "closed",
        "title": "WT-4612 Improve test coverage for prepare updates older than the oldest.",
        "body": "Added a scenario to improve coverage when the oldest timestamp advances past a prepared update.",
        "base_ref": "develop",
        "created_at": "Monday Jul 08, 2019 at 00:09 GMT",
        "updated_at": "Thursday Jul 11, 2019 at 05:20 GMT",
        "closed_at": "Thursday Jul 11, 2019 at 05:18 GMT",
        "merged_at": "Thursday Jul 11, 2019 at 05:18 GMT"
    },
    {
        "key": "WT-4918",
        "number": 4752,
        "state": "closed",
        "title": "WT-4918 LSM allocated mutexes leaked in readonly tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 05, 2019 at 14:52 GMT",
        "updated_at": "Monday Jul 08, 2019 at 00:22 GMT",
        "closed_at": "Monday Jul 08, 2019 at 00:22 GMT",
        "merged_at": "Monday Jul 08, 2019 at 00:22 GMT"
    },
    {
        "key": "WT-4836",
        "number": 4751,
        "state": "closed",
        "title": "WT-4836 Lower scheduling frequency for endianness compatibility tests",
        "body": "Lower the scheduling frequency for endianness compatibility tests from **once per day** to **once per week**, to avoid overwhelming little-endian (zseries/s390x) Evergreen distro queue. ",
        "base_ref": "develop",
        "created_at": "Friday Jul 05, 2019 at 04:28 GMT",
        "updated_at": "Friday Jul 05, 2019 at 06:24 GMT",
        "closed_at": "Friday Jul 05, 2019 at 06:24 GMT",
        "merged_at": "Friday Jul 05, 2019 at 06:24 GMT"
    },
    {
        "key": "WT-4530",
        "number": 4750,
        "state": "closed",
        "title": "WT-4530 get_key and get_value example format corrections",
        "body": "WiredTiger example codes are corrected to follow proper\r\nformat types of the cursors. Also updated the documentation\r\nof these two API's are they can't check the passed argument\r\ntypes.",
        "base_ref": "develop",
        "created_at": "Friday Jul 05, 2019 at 04:18 GMT",
        "updated_at": "Tuesday Jul 09, 2019 at 22:58 GMT",
        "closed_at": "Tuesday Jul 09, 2019 at 22:58 GMT",
        "merged_at": "Tuesday Jul 09, 2019 at 22:58 GMT"
    },
    {
        "key": "WT-4893",
        "number": 4749,
        "state": "closed",
        "title": "WT-4893 internal page child-page eviction checks can race with cursors in the tree",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 05, 2019 at 02:13 GMT",
        "updated_at": "Monday Jul 08, 2019 at 14:12 GMT",
        "closed_at": "Monday Jul 08, 2019 at 00:38 GMT",
        "merged_at": "Monday Jul 08, 2019 at 00:38 GMT"
    },
    {
        "key": "WT-4792",
        "number": 4748,
        "state": "closed",
        "title": "WT-4792 Add stat to track pages queued for eviction after LRU sorting",
        "body": "At the moment, we have a stat called `cache_eviction_pages_queued` which tracks the amount of pages initially queued. Afterwards, we do an LRU sort of the pages and trim some entries off the end of the queue. This PR is adding a statistic to track the size of the queue after this processing.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 04, 2019 at 07:56 GMT",
        "updated_at": "Monday Jul 08, 2019 at 02:20 GMT",
        "closed_at": "Monday Jul 08, 2019 at 02:20 GMT",
        "merged_at": "Monday Jul 08, 2019 at 02:20 GMT"
    },
    {
        "key": "WT-4848",
        "number": 4747,
        "state": "closed",
        "title": "WT-4848 Performance tuning for calculating and caching diffs. (v3.6 backport)",
        "body": "(cherry picked from commit 40e3225e55ffbf0c9819af138fa4a014c0639c72)\r\n(cherry picked from commit e0ba3bc3e1e1c8efd93e144d4df4392bfbabc031)",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jul 04, 2019 at 07:16 GMT",
        "updated_at": "Friday Jul 05, 2019 at 00:27 GMT",
        "closed_at": "Friday Jul 05, 2019 at 00:27 GMT",
        "merged_at": "Friday Jul 05, 2019 at 00:27 GMT"
    },
    {
        "key": "WT-4898",
        "number": 4746,
        "state": "closed",
        "title": "WT-4898 Don't allow the eviction server to reconcile if it's busy",
        "body": "Don't allow reconcile a page refernce when flags indicate\r\nno eviction, session can't perfom slow operation in addition\r\nto the existing.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 04, 2019 at 04:44 GMT",
        "updated_at": "Friday Jul 05, 2019 at 05:41 GMT",
        "closed_at": "Friday Jul 05, 2019 at 05:41 GMT",
        "merged_at": "Friday Jul 05, 2019 at 05:41 GMT"
    },
    {
        "key": "WT-4776",
        "number": 4745,
        "state": "closed",
        "title": "WT-4776 Modify operations should be equivalent to updates. (v3.6 backport)",
        "body": "If modifies are created with out-of-order timestamps, WiredTiger should use apply all previous modifications until it finds a complete copy of the document. Once a modify is identified as the most recent visible version for a value WT should not apply normal visibility rules to the prior versions - they were visible when the modify was performed, so should be included in the read.\r\n\r\n(cherry picked from commit 8eb2d9c36c5c23da09f75e16dff982f0be52d34f)\r\n(cherry picked from commit 4738e7c66f59517d9d9c4a0daa291f53f11bf209)",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jul 04, 2019 at 03:46 GMT",
        "updated_at": "Thursday Jul 04, 2019 at 04:58 GMT",
        "closed_at": "Thursday Jul 04, 2019 at 04:58 GMT",
        "merged_at": "Thursday Jul 04, 2019 at 04:58 GMT"
    },
    {
        "key": "WT-4421",
        "number": 4744,
        "state": "closed",
        "title": "WT-4421 Add a way to calculate modify operations (v3.6 backport)",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jul 04, 2019 at 03:39 GMT",
        "updated_at": "Thursday Jul 04, 2019 at 04:57 GMT",
        "closed_at": "Thursday Jul 04, 2019 at 04:57 GMT",
        "merged_at": "Thursday Jul 04, 2019 at 04:57 GMT"
    },
    {
        "key": "WT-4910",
        "number": 4743,
        "state": "closed",
        "title": "WT-4910 Python 3 Windows support",
        "body": "Two sets of trivial changes. \r\n1. print statement to print function\r\n2. Fix a bad indent\r\n\r\nPython 2 will be still supported since this such a simple file.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 04, 2019 at 00:56 GMT",
        "updated_at": "Thursday Jul 04, 2019 at 18:22 GMT",
        "closed_at": "Thursday Jul 04, 2019 at 18:22 GMT",
        "merged_at": "Thursday Jul 04, 2019 at 18:22 GMT"
    },
    {
        "key": "WT-4887",
        "number": 4742,
        "state": "closed",
        "title": "WT-4887 Skip read timestamp required assert during recovery",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 04, 2019 at 00:41 GMT",
        "updated_at": "Thursday Jul 04, 2019 at 01:26 GMT",
        "closed_at": "Thursday Jul 04, 2019 at 01:25 GMT",
        "merged_at": "Thursday Jul 04, 2019 at 01:25 GMT"
    },
    {
        "key": "WT-4818",
        "number": 4741,
        "state": "closed",
        "title": "WT-4818 Add debugging of bad read file descriptor.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 03, 2019 at 18:53 GMT",
        "updated_at": "Thursday Jul 04, 2019 at 00:46 GMT",
        "closed_at": "Thursday Jul 04, 2019 at 00:46 GMT",
        "merged_at": "Thursday Jul 04, 2019 at 00:46 GMT"
    },
    {
        "key": "WT-4858",
        "number": 4740,
        "state": "closed",
        "title": "WT-4858 Clang 8 and GCC 9 compatibility",
        "body": "This PR is to get WiredTiger to compile with the newest Clang and GCC releases.\r\n\r\nI had a look at the new flags introduced in both releases but all of the interesting ones are either on by default or are part of `-Wextra`.\r\n\r\nThe main change here is to move away from the legacy `__sync` compiler intrinsics and towards the `__atomic` ones. These new functions allow us to specify memory order so we could potentially use one of the weaker orderings for performance reasons. I think for our purposes, we want the strongest ordering (sequentially consistent ordering which is what you get by default with a C++ `std::atomic`).",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 03, 2019 at 06:00 GMT",
        "updated_at": "Wednesday Jul 31, 2019 at 02:37 GMT",
        "closed_at": "Wednesday Jul 31, 2019 at 02:37 GMT",
        "merged_at": "Wednesday Jul 31, 2019 at 02:37 GMT"
    },
    {
        "key": "WT-4805",
        "number": 4739,
        "state": "closed",
        "title": "WT-4805 Modify test verification of error messages",
        "body": "Modified the test to ensure that it verifies the returned\r\nerror messages for the operations",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 03, 2019 at 01:49 GMT",
        "updated_at": "Wednesday Jul 03, 2019 at 04:52 GMT",
        "closed_at": "Wednesday Jul 03, 2019 at 04:51 GMT",
        "merged_at": "Wednesday Jul 03, 2019 at 04:51 GMT"
    },
    {
        "key": "WT-4791",
        "number": 4738,
        "state": "closed",
        "title": "WT-4791 Guard against deference null return (coverity)",
        "body": "CID 112861 (#1 of 1): Deference null return\r\n\r\nThe reported coverity problem is not possible, but in the same\r\nflow with a different branch flow the issue can happen, so added\r\na NULL check.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 02, 2019 at 22:54 GMT",
        "updated_at": "Wednesday Jul 10, 2019 at 14:21 GMT",
        "closed_at": "Wednesday Jul 10, 2019 at 14:18 GMT",
        "merged_at": "Wednesday Jul 10, 2019 at 14:18 GMT"
    },
    {
        "key": "WT-4900",
        "number": 4737,
        "state": "closed",
        "title": "WT-4900 Implement all_durable timestamp",
        "body": "This PR is to add an `all_durable` timestamp to the WiredTiger API.\r\nThis timestamp is designed to replace `all_committed`. We'll keep `all_committed` for the time and then remove it after MongoDB has made the corresponding server change to use `all_durable`.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 02, 2019 at 13:40 GMT",
        "updated_at": "Wednesday Jul 17, 2019 at 08:50 GMT",
        "closed_at": "Wednesday Jul 17, 2019 at 08:49 GMT",
        "merged_at": "Wednesday Jul 17, 2019 at 08:49 GMT"
    },
    {
        "key": "WT-4895",
        "number": 4736,
        "state": "closed",
        "title": "WT-4895 Avoid overriding the randomization of lookaside eviction",
        "body": "Remove the override of the randomization that is choosen Under\r\nWT_CACHE_EVICT_DEBUG_MODE flag.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 02, 2019 at 00:17 GMT",
        "updated_at": "Wednesday Jul 03, 2019 at 19:08 GMT",
        "closed_at": "Wednesday Jul 03, 2019 at 19:08 GMT",
        "merged_at": "Wednesday Jul 03, 2019 at 19:08 GMT"
    },
    {
        "key": "WT-4840",
        "number": 4735,
        "state": "closed",
        "title": "WT-4840 WT_CURSOR.modify must require explicit, snapshot-isolation transaction",
        "body": "at snapshot isolation.",
        "base_ref": "develop",
        "created_at": "Monday Jul 01, 2019 at 19:39 GMT",
        "updated_at": "Monday Jul 01, 2019 at 21:43 GMT",
        "closed_at": "Monday Jul 01, 2019 at 21:43 GMT",
        "merged_at": "Monday Jul 01, 2019 at 21:43 GMT"
    },
    {
        "key": "WT-4891",
        "number": 4734,
        "state": "closed",
        "title": "WT-4891 WT_SESSION.verify memory allocation overrun",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 01, 2019 at 05:46 GMT",
        "updated_at": "Monday Jul 01, 2019 at 21:52 GMT",
        "closed_at": "Monday Jul 01, 2019 at 18:35 GMT",
        "merged_at": "Monday Jul 01, 2019 at 18:35 GMT"
    },
    {
        "key": "WT-4502",
        "number": 4733,
        "state": "closed",
        "title": "WT-4502 Assertion checking hazard pointers on page discard is too strong",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jun 30, 2019 at 21:30 GMT",
        "updated_at": "Monday Jul 01, 2019 at 05:41 GMT",
        "closed_at": "Monday Jul 01, 2019 at 05:41 GMT",
        "merged_at": "Monday Jul 01, 2019 at 05:41 GMT"
    },
    {
        "key": "WT-4892",
        "number": 4732,
        "state": "closed",
        "title": "WT-4892 forced eviction statistics are misleading",
        "body": "@agorrod, this branch continues to track forced evictions caused by large numbers of deleted items, but doesn't track the time those forced evictions required separately from the time other forced evictions required.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 30, 2019 at 18:26 GMT",
        "updated_at": "Monday Jul 08, 2019 at 05:47 GMT",
        "closed_at": "Monday Jul 08, 2019 at 05:47 GMT",
        "merged_at": "Monday Jul 08, 2019 at 05:47 GMT"
    },
    {
        "key": "WT-4743",
        "number": 4731,
        "state": "closed",
        "title": "WT-4743 memory leaks and core dumps in page-split error handling",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jun 29, 2019 at 22:38 GMT",
        "updated_at": "Monday Jul 01, 2019 at 21:59 GMT",
        "closed_at": "Monday Jul 01, 2019 at 21:59 GMT",
        "merged_at": "Monday Jul 01, 2019 at 21:59 GMT"
    },
    {
        "key": "WT-4866",
        "number": 4730,
        "state": "closed",
        "title": "WT-4866 Coverity: WT_SESSION.import can leak memory.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jun 29, 2019 at 16:47 GMT",
        "updated_at": "Monday Jul 01, 2019 at 15:13 GMT",
        "closed_at": "Monday Jul 01, 2019 at 00:06 GMT",
        "merged_at": "Monday Jul 01, 2019 at 00:06 GMT"
    },
    {
        "key": "WT-4864",
        "number": 4729,
        "state": "closed",
        "title": "WT-4864 Coverity: Redundant NULL check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jun 29, 2019 at 16:24 GMT",
        "updated_at": "Sunday Jun 30, 2019 at 21:35 GMT",
        "closed_at": "Sunday Jun 30, 2019 at 21:34 GMT",
        "merged_at": "Sunday Jun 30, 2019 at 21:34 GMT"
    },
    {
        "key": "WT-4786",
        "number": 4728,
        "state": "closed",
        "title": "WT-4786 Coverity: Invalid format specifiers in printf-like invocations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jun 29, 2019 at 16:15 GMT",
        "updated_at": "Sunday Jun 30, 2019 at 23:56 GMT",
        "closed_at": "Sunday Jun 30, 2019 at 23:55 GMT",
        "merged_at": "Sunday Jun 30, 2019 at 23:55 GMT"
    },
    {
        "key": "WT-4888",
        "number": 4727,
        "state": "closed",
        "title": "WT-4888 test/format data mismatch with BDB",
        "body": "@agorrod, this branch removes Berkeley DB from the two places it's used in the source tree.",
        "base_ref": "develop",
        "created_at": "Friday Jun 28, 2019 at 23:49 GMT",
        "updated_at": "Monday Jul 01, 2019 at 17:14 GMT",
        "closed_at": "Monday Jul 01, 2019 at 17:14 GMT",
        "merged_at": "Monday Jul 01, 2019 at 17:14 GMT"
    },
    {
        "key": "WT-4477",
        "number": 4726,
        "state": "closed",
        "title": "WT-4477 Add eviction debug mode and extra checks. (#4663) (v4.0 backport)",
        "body": "(cherry picked from commit 10963a7deb9b520fe0c44e6b55dc390b845ce06d)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Jun 28, 2019 at 01:28 GMT",
        "updated_at": "Monday Jul 01, 2019 at 00:47 GMT",
        "closed_at": "Monday Jul 01, 2019 at 00:46 GMT",
        "merged_at": "Monday Jul 01, 2019 at 00:46 GMT"
    },
    {
        "key": "WT-4848",
        "number": 4725,
        "state": "closed",
        "title": "WT-4848 Performance tuning for calculating and caching diffs. (v4.0 backport)",
        "body": "(cherry picked from commit 40e3225e55ffbf0c9819af138fa4a014c0639c72)",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Jun 27, 2019 at 01:59 GMT",
        "updated_at": "Tuesday Jul 30, 2019 at 07:37 GMT",
        "closed_at": "Thursday Jun 27, 2019 at 04:02 GMT",
        "merged_at": "Thursday Jun 27, 2019 at 04:02 GMT"
    },
    {
        "key": "WT-4881",
        "number": 4724,
        "state": "closed",
        "title": "WT-4881 Don't allow reconciliation to be re-entered",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 25, 2019 at 20:01 GMT",
        "updated_at": "Wednesday Jun 26, 2019 at 04:29 GMT",
        "closed_at": "Wednesday Jun 26, 2019 at 04:29 GMT",
        "merged_at": "Wednesday Jun 26, 2019 at 04:29 GMT"
    },
    {
        "key": "WT-4823",
        "number": 4723,
        "state": "closed",
        "title": "WT-4823 Add check for uninitialised lookaside resources (v3.6 backport)",
        "body": "Clean cherrypick of eb6ba5c off `mongodb-4.0`.",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Jun 25, 2019 at 06:26 GMT",
        "updated_at": "Wednesday Jun 26, 2019 at 04:09 GMT",
        "closed_at": "Wednesday Jun 26, 2019 at 04:09 GMT",
        "merged_at": "Wednesday Jun 26, 2019 at 04:09 GMT"
    },
    {
        "key": "WT-4882",
        "number": 4722,
        "state": "closed",
        "title": "WT-4882 Allow metadata pages to split under load.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 24, 2019 at 14:19 GMT",
        "updated_at": "Wednesday Jun 26, 2019 at 14:22 GMT",
        "closed_at": "Wednesday Jun 26, 2019 at 14:19 GMT",
        "merged_at": "Wednesday Jun 26, 2019 at 14:19 GMT"
    },
    {
        "key": "WT-4878",
        "number": 4721,
        "state": "closed",
        "title": "WT-4878 Disable random dhandle selection for eviction (#4716)",
        "body": "This mostly goes back to the state before data handles were chosen randomly to search for eviction candidates.  It also changes some of the calculations for how many pages to enqueue per tree.\r\n\r\nAlso fix handle lock test to reset cursors before caching them. Otherwise, for configurations with many threads it can end up in a state where there is a cursor on every page, preventing the pages from splitting, and ultimately blocking eviction.  This was exposed by changes to eviction, but is a structural problem with the test case.\r\n\r\n(cherry picked from commit 859c527b01143c0f3d1a064b4ae14592c65628d1)",
        "base_ref": "mongodb-4.2",
        "created_at": "Monday Jun 24, 2019 at 03:31 GMT",
        "updated_at": "Monday Jun 24, 2019 at 03:40 GMT",
        "closed_at": "Monday Jun 24, 2019 at 03:40 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4867",
        "number": 4720,
        "state": "closed",
        "title": "WT-4867 Skip assert when we see reserved updates",
        "body": "This fixes the failure seen in test/format where our update chain has the following pattern:\r\nupdate2 -> reserved -> update1. Originally we were not setting the key repeated flag on update2 as we saw txnid = WT_TXN_ABORTED on the reserved update as it was getting aborted during the prepare call. The fix I have implemented is to introduce a new flag which specifies that we have seen a reserved update on the modification associated with update2 and as such we skip the assertion in commit and rollback that checks if resolved_update_count == visited_update_count.",
        "base_ref": "develop",
        "created_at": "Monday Jun 24, 2019 at 00:40 GMT",
        "updated_at": "Friday Jun 28, 2019 at 00:02 GMT",
        "closed_at": "Friday Jun 28, 2019 at 00:00 GMT",
        "merged_at": "Friday Jun 28, 2019 at 00:00 GMT"
    },
    {
        "key": "WT-4881",
        "number": 4719,
        "state": "closed",
        "title": "WT-4881 don't allow reconciliation to be re-entered",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jun 22, 2019 at 00:53 GMT",
        "updated_at": "Saturday Jun 22, 2019 at 01:09 GMT",
        "closed_at": "Saturday Jun 22, 2019 at 01:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4812",
        "number": 4718,
        "state": "closed",
        "title": "WT-4812 Fix the Python distribution script for Python3 changes.",
        "body": "SWIG generated Python files are now installed in build_posix, so the script needed to be adjusted.",
        "base_ref": "develop",
        "created_at": "Friday Jun 21, 2019 at 13:46 GMT",
        "updated_at": "Tuesday Jul 02, 2019 at 06:50 GMT",
        "closed_at": "Friday Jun 28, 2019 at 05:28 GMT",
        "merged_at": "Friday Jun 28, 2019 at 05:28 GMT"
    },
    {
        "key": "WT-4821",
        "number": 4717,
        "state": "closed",
        "title": "WT-4821 Update evergreen config to pull source for largescale test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 21, 2019 at 02:05 GMT",
        "updated_at": "Friday Jun 21, 2019 at 02:58 GMT",
        "closed_at": "Friday Jun 21, 2019 at 02:58 GMT",
        "merged_at": "Friday Jun 21, 2019 at 02:58 GMT"
    },
    {
        "key": "WT-4878",
        "number": 4716,
        "state": "closed",
        "title": "WT-4878 Disable random dhandle selection for eviction",
        "body": "Disable random selection till we get more testing and confidence with\r\nthat change.\r\n\r\nFix handle lock test to reset cursors before caching them. Otherwise,\r\nfor configurations with many threads it can end up in a state\r\nwhere there is a cursor on every page, preventing the pages from\r\nsplitting, and ultimately blocking eviction.  This was exposed by\r\nchanges to eviction, but is a structural problem with the test case.",
        "base_ref": "develop",
        "created_at": "Friday Jun 21, 2019 at 01:42 GMT",
        "updated_at": "Friday Jun 21, 2019 at 19:00 GMT",
        "closed_at": "Friday Jun 21, 2019 at 19:00 GMT",
        "merged_at": "Friday Jun 21, 2019 at 19:00 GMT"
    },
    {
        "key": "WT-4716",
        "number": 4715,
        "state": "closed",
        "title": "WT-4716 Add recovery_compressor option for logging",
        "body": "This PR adds some functionality to try each available compressor after failing to decompress a log record with the currently used compressor.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 20, 2019 at 08:10 GMT",
        "updated_at": "Monday Aug 26, 2019 at 01:27 GMT",
        "closed_at": "Wednesday Jun 26, 2019 at 03:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4460",
        "number": 4714,
        "state": "closed",
        "title": "WT-4460 Fast path for in-place modifications.",
        "body": "Avoid memory allocation in common paths (both for the buffer and for the array of modifications).  Always pack modifies before applying: that is the common case (during reads), so don't complicate the implementation by supporting a separate implementation for arrays of WT_MODIFY structs.  During WT_CURSOR::modify, we're going to pack them anyway in most cases.\r\n\r\nAdd macros to walk packed modifies (forward and reverse) rather than repeating the unpack logic in multiple places.\r\n\r\nWhile in the area, switch to using value->mem for writes and value->data for reads.  Remove redundant session handle from methods that take a cursor.",
        "base_ref": "wt-4460-fast-modify",
        "created_at": "Thursday Jun 20, 2019 at 04:46 GMT",
        "updated_at": "Tuesday Jul 30, 2019 at 07:36 GMT",
        "closed_at": "Tuesday Jul 30, 2019 at 07:36 GMT",
        "merged_at": "Tuesday Jul 30, 2019 at 07:36 GMT"
    },
    {
        "key": "WT-4733",
        "number": 4713,
        "state": "closed",
        "title": "WT-4733 Enhance format diagnostic logging to include timestamps.",
        "body": "",
        "base_ref": "wt-4733-format-timestamp-testing-keith",
        "created_at": "Thursday Jun 20, 2019 at 03:16 GMT",
        "updated_at": "Monday Jun 24, 2019 at 00:49 GMT",
        "closed_at": "Monday Jun 24, 2019 at 00:48 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4877",
        "number": 4712,
        "state": "closed",
        "title": "WT-4877 Uninitialized memory being written during checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 19, 2019 at 23:42 GMT",
        "updated_at": "Thursday Jun 20, 2019 at 14:41 GMT",
        "closed_at": "Thursday Jun 20, 2019 at 14:41 GMT",
        "merged_at": "Thursday Jun 20, 2019 at 14:41 GMT"
    },
    {
        "key": "WT-4803",
        "number": 4711,
        "state": "closed",
        "title": "WT-4803 Implement file_max configuration for Cache Overflow mechanism (v3.6 backport)",
        "body": "Unclean cherrypick of 0434b61 off `mongodb-4.0`.",
        "base_ref": "mongodb-3.6",
        "created_at": "Wednesday Jun 19, 2019 at 07:24 GMT",
        "updated_at": "Thursday Jun 20, 2019 at 04:12 GMT",
        "closed_at": "Thursday Jun 20, 2019 at 04:12 GMT",
        "merged_at": "Thursday Jun 20, 2019 at 04:12 GMT"
    },
    {
        "key": "WT-4823",
        "number": 4710,
        "state": "closed",
        "title": "WT-4823 Add check for uninitialised lookaside resources (v4.0 backport)",
        "body": "Clean cherrypick of 57bd75f off `develop`.",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jun 19, 2019 at 06:53 GMT",
        "updated_at": "Thursday Jun 20, 2019 at 04:07 GMT",
        "closed_at": "Thursday Jun 20, 2019 at 04:07 GMT",
        "merged_at": "Thursday Jun 20, 2019 at 04:07 GMT"
    },
    {
        "key": "WT-4803",
        "number": 4709,
        "state": "closed",
        "title": "WT-4803 Implement file_max configuration for Cache Overflow mechanism (v4.0 backport)",
        "body": "Clean cherrypick of 1be63c5 off `develop`.",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jun 19, 2019 at 00:30 GMT",
        "updated_at": "Wednesday Jun 19, 2019 at 06:55 GMT",
        "closed_at": "Wednesday Jun 19, 2019 at 01:50 GMT",
        "merged_at": "Wednesday Jun 19, 2019 at 01:50 GMT"
    },
    {
        "key": "WT-4758",
        "number": 4708,
        "state": "closed",
        "title": "WT-4758 Create a workload that stresses eviction by running periodic scans",
        "body": "To wtperf, add scan_table_count, scan_interval, scan_pct, scan_icount to\r\nsupport threads that do scanning, using their own separate tables or the\r\nregular set of tables.\r\n\r\nRecords are not scanned in order, but using a pattern that eventually visits\r\nall records, and using tables in round robin.\r\n\r\nAdded printing for more fail conditions, so we can tell better why threads fail.\r\n\r\nWhen an operation fails with rollback error when running with log_like tables\r\nenabled and ops per txn at 0, do retries, instead of exiting.\r\n\r\nAdded a new wtperf workload using the new scan features, tuned to show\r\nfailures similar to ones seen in the field.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 18, 2019 at 19:27 GMT",
        "updated_at": "Monday Jun 24, 2019 at 17:00 GMT",
        "closed_at": "Monday Jun 24, 2019 at 17:00 GMT",
        "merged_at": "Monday Jun 24, 2019 at 17:00 GMT"
    },
    {
        "key": "WT-4827",
        "number": 4707,
        "state": "closed",
        "title": "WT-4827 Apply commit timestamps when a truncated page is read (#4668) (backport-4.0)",
        "body": "(cherry picked from commit 39d5985b0db70d601a5adeedbbed964c13d61a24)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Jun 18, 2019 at 05:56 GMT",
        "updated_at": "Wednesday Jul 17, 2019 at 00:08 GMT",
        "closed_at": "Tuesday Jun 18, 2019 at 06:56 GMT",
        "merged_at": "Tuesday Jun 18, 2019 at 06:56 GMT"
    },
    {
        "key": "WT-4875",
        "number": 4706,
        "state": "closed",
        "title": "WT-4875 fix commit timestamp assert to consider non transactional",
        "body": "tombstones.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 18, 2019 at 05:46 GMT",
        "updated_at": "Thursday Jun 20, 2019 at 22:11 GMT",
        "closed_at": "Thursday Jun 20, 2019 at 22:11 GMT",
        "merged_at": "Thursday Jun 20, 2019 at 22:11 GMT"
    },
    {
        "key": "WT-4352",
        "number": 4705,
        "state": "closed",
        "title": "WT-4352 Backport data corruption fixes to 3.6 (2nd attempt)",
        "body": "This is the 2nd attempt of backporting the set of data corruption fixes to 3.6, hoping to make a clean commit history easy for non-squash merge.\r\n\r\nPlease note the only diff with the 1st attempt (#4693) is the removal of `has_prepares` field in the `__wt_page_lookaside` structure, as the field is not meant to be used in 3.6. ",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Jun 18, 2019 at 04:57 GMT",
        "updated_at": "Wednesday Jun 19, 2019 at 03:52 GMT",
        "closed_at": "Wednesday Jun 19, 2019 at 03:52 GMT",
        "merged_at": "Wednesday Jun 19, 2019 at 03:52 GMT"
    },
    {
        "key": "WT-4760",
        "number": 4704,
        "state": "closed",
        "title": "WT-4760 Checkpoint should not read past a stable update (#4651) (Backport-4.0)",
        "body": "(cherry picked from commit 6b408028f0267ca26d8821a0be6925e5cb48eca2)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Jun 18, 2019 at 04:26 GMT",
        "updated_at": "Tuesday Jun 18, 2019 at 06:45 GMT",
        "closed_at": "Tuesday Jun 18, 2019 at 06:44 GMT",
        "merged_at": "Tuesday Jun 18, 2019 at 06:44 GMT"
    },
    {
        "key": "WT-4798",
        "number": 4703,
        "state": "closed",
        "title": "WT-4798 Fix bug in picking random dhandle for eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 17, 2019 at 06:09 GMT",
        "updated_at": "Monday Jun 17, 2019 at 14:41 GMT",
        "closed_at": "Monday Jun 17, 2019 at 14:41 GMT",
        "merged_at": "Monday Jun 17, 2019 at 14:41 GMT"
    },
    {
        "key": "WT-4863",
        "number": 4702,
        "state": "closed",
        "title": "WT-4863 Prototype WiredTiger inline functions",
        "body": "@agorrod, the problem here is we don't prototype inline functions and so we're not asking the compiler to complain when return values are ignored.\r\n\r\nWe're also missing out on some other compiler checking:\r\n* because `__wt_snprintf` is inlined, we don't get argument type checking because the compiler doesn't realize it's a printf-style function,\r\n* we're not noticing if we ignore return values from any function returning something other than `bool` or `int`.\r\n\r\nI rewrote `dist/s_prototype` in Python, and then prototyped the inline functions.\r\n\r\nThis change has a bad side-effect: we can no longer use `(void)` to ignore the return value of a function, we have to use `WT_IGNORE_RET` (and `WT_IGNORE_RET` now has two new flavors, `WT_IGNORE_BOOL` and `WT_IGNORE_PTR`, to handle different function return types).",
        "base_ref": "develop",
        "created_at": "Sunday Jun 16, 2019 at 21:22 GMT",
        "updated_at": "Monday Jun 17, 2019 at 07:11 GMT",
        "closed_at": "Monday Jun 17, 2019 at 07:11 GMT",
        "merged_at": "Monday Jun 17, 2019 at 07:11 GMT"
    },
    {
        "key": "WT-4832",
        "number": 4701,
        "state": "closed",
        "title": "WT-4832 closing WiredTiger connection corrupts LSM handles",
        "body": "@agorrod, @michaelcahill, I think this problem has been around for a long time and just surfaced recently because of the changes in the `checkpoint` test program.\r\n\r\nIn summary, `WT_CONNECTION.close` sets `WT_CONN_CLOSING_TIMESTAMP` while LSM is still opening and writing file handles, and nothing good happens after that.\r\n\r\nLike @sueloverso, I inevitably saw one of two failure modes: either a dead handle is written because LSM re-opened a handle (and because `WT_CONN_CLOSING_TIMESTAMP` was set it got discarded out from under us), or, a bloom filter didn't have the expected contents. I didn't chase that one down, so I don't know the details of that failure, but I'm suspicious of how we're evicting dirty pages when `WT_CONN_CLOSING_TIMESTAMP` has been set.\r\n\r\nI tried a couple of different solutions that left shutting down the LSM and async servers in their current place, after we've done the final checkpoint, but they all got messy fast. I thought this change might be OK (because I think of LSM and async servers as running on top of the rest of WiredTiger,) but that may have led me into a bad change. Specifically, while I don't see any place I've broken the final checkpoint code by closing the LSM and async servers first, I wouldn't bet a lot I'm correct.\r\n\r\nAnyway, this branch at least shows where the problem is, I'm happy to work on implementing a different solution if you prefer something else.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 16, 2019 at 02:26 GMT",
        "updated_at": "Friday Jul 05, 2019 at 05:35 GMT",
        "closed_at": "Friday Jul 05, 2019 at 05:35 GMT",
        "merged_at": "Friday Jul 05, 2019 at 05:35 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4700,
        "state": "closed",
        "title": "WT-4658 Clang Format Preview",
        "body": "Here's a preview of the Clang Format output after applying the changes we agreed to.\r\nI'll include the extra script under `dist/` to flush goto labels left shortly.\r\n\r\nI don't intend to actually merge this branch since it will quickly accumulate merge conflicts. Once we agree to merging, I'll run Clang Format over a fresh branch off of develop and use that instead.\r\n\r\nI've also chosen not to bring over server's formatting script as it has dependencies on other scripts under `buildscripts/` that each need to be adapted for WiredTiger making it a maintenance burden.",
        "base_ref": "develop",
        "created_at": "Friday Jun 14, 2019 at 06:30 GMT",
        "updated_at": "Monday Aug 19, 2019 at 01:57 GMT",
        "closed_at": "Monday Aug 19, 2019 at 01:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4869",
        "number": 4699,
        "state": "closed",
        "title": "WT-4869 When eviction isn't keeping up, stop adding pages to cache.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 14, 2019 at 04:24 GMT",
        "updated_at": "Wednesday Jun 19, 2019 at 22:51 GMT",
        "closed_at": "Wednesday Jun 19, 2019 at 22:51 GMT",
        "merged_at": "Wednesday Jun 19, 2019 at 22:51 GMT"
    },
    {
        "key": "WT-4798",
        "number": 4698,
        "state": "closed",
        "title": "WT-4798 Improve eviction efficiency with many active tables.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 14, 2019 at 04:11 GMT",
        "updated_at": "Monday Jun 24, 2019 at 01:08 GMT",
        "closed_at": "Monday Jun 24, 2019 at 01:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4733",
        "number": 4697,
        "state": "closed",
        "title": "WT-4733 bug fixes to long-term repeatable read branch",
        "body": "@bvpvamsikrishna, I'm pushing these changes into a branch so that @michaelcahill can look at the failure I've been seeing.\r\n\r\nThe CONFIG I'm running is:\r\n```\r\n#assert_read_timestamp=1\r\n#assert_commit_timestamp=1\r\n#quiet=1\r\n\r\nbackups=0\r\ncache_minimum=20\r\ncheckpoints=0\r\ndelete_pct=0\r\nfile_type=row\r\nhuffman_key=0\r\nhuffman_value=0\r\nisolation=snapshot\r\nkey_max=50\r\nmodify_pct=0\r\nread_pct=60\r\nrebalance=0\r\nrows=1000000\r\nruns=100\r\nsalvage=0\r\nthreads=2\r\ntimer=4\r\ntransaction_timestamps=1\r\ntruncate=0\r\nvalue_max=100\r\nverify=0\r\n```",
        "base_ref": "wt-4733-format-timestamp-testing",
        "created_at": "Friday Jun 14, 2019 at 01:13 GMT",
        "updated_at": "Monday Jun 24, 2019 at 01:15 GMT",
        "closed_at": "Monday Jun 24, 2019 at 01:15 GMT",
        "merged_at": "Monday Jun 24, 2019 at 01:15 GMT"
    },
    {
        "key": "WT-4862",
        "number": 4696,
        "state": "closed",
        "title": "WT-4862 WT_SESSION.import implies an additional write during checkpoints without an avail list.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 13, 2019 at 20:55 GMT",
        "updated_at": "Monday Aug 26, 2019 at 01:23 GMT",
        "closed_at": "Friday Jun 14, 2019 at 03:07 GMT",
        "merged_at": "Friday Jun 14, 2019 at 03:07 GMT"
    },
    {
        "key": "WT-4842",
        "number": 4695,
        "state": "closed",
        "title": "WT-4842 Adjust lookaside score when walking obsolete.",
        "body": "Some comment fixes I saw along the way too.\r\n\r\n@agorrod Please review this to see if it is what you had in mind. It took me a while to find a location that didn't really have an impact. The obsolete code is one of the few places we're walking the updates already in order to see/detect \"saving due to history\".\r\n\r\nPlease closely look at the conditional to determine an update is unstable to verify it is correct.\r\n\r\nI did write a test to see the value move.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 13, 2019 at 15:55 GMT",
        "updated_at": "Tuesday Jul 09, 2019 at 23:27 GMT",
        "closed_at": "Tuesday Jul 09, 2019 at 23:27 GMT",
        "merged_at": "Tuesday Jul 09, 2019 at 23:27 GMT"
    },
    {
        "key": "WT-4706",
        "number": 4694,
        "state": "closed",
        "title": "WT-4706 Add a statistic to track the lookaside table size (v3.6 backport)",
        "body": "Unclean cherry-pick of the backport commit (b89fdd5) from the `mongodb-4.0` branch.",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jun 13, 2019 at 07:41 GMT",
        "updated_at": "Friday Jun 14, 2019 at 00:50 GMT",
        "closed_at": "Friday Jun 14, 2019 at 00:50 GMT",
        "merged_at": "Friday Jun 14, 2019 at 00:50 GMT"
    },
    {
        "key": "WT-4352",
        "number": 4693,
        "state": "closed",
        "title": "WT-4352 Backport data corruption fixes to 3.6",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jun 13, 2019 at 03:57 GMT",
        "updated_at": "Wednesday Jun 19, 2019 at 04:42 GMT",
        "closed_at": "Wednesday Jun 19, 2019 at 04:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4694",
        "number": 4692,
        "state": "closed",
        "title": "WT-4694 Throttle reads in wtperf to make readonly workload perform more consistently",
        "body": "In our Jenkins testing, IO performance seems to vary a lot. This change is simply throttling the read workload so that variation in IO performance is less likely to affect the `500m-btree-rdonly` workload.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 12, 2019 at 07:29 GMT",
        "updated_at": "Friday Jun 14, 2019 at 03:06 GMT",
        "closed_at": "Friday Jun 14, 2019 at 03:06 GMT",
        "merged_at": "Friday Jun 14, 2019 at 03:06 GMT"
    },
    {
        "key": "WT-4817",
        "number": 4691,
        "state": "closed",
        "title": "WT-4817 Fix off-by-one error. (v4.0 backport)",
        "body": "(cherry picked from commit 88359b9facf9e8e60576ce0caed990e912857577)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jun 12, 2019 at 05:25 GMT",
        "updated_at": "Tuesday Aug 13, 2019 at 06:43 GMT",
        "closed_at": "Thursday Jun 13, 2019 at 00:20 GMT",
        "merged_at": "Thursday Jun 13, 2019 at 00:20 GMT"
    },
    {
        "key": "WT-4803",
        "number": 4690,
        "state": "closed",
        "title": "WT-4803 Implement file_max configuration for Cache Overflow mechanism (v3.6 backport)",
        "body": "Unclean cherrypicks of f654ed4 and 1be63c5 and a clean cherrypick of 57bd75f.",
        "base_ref": "mongodb-3.6",
        "created_at": "Wednesday Jun 12, 2019 at 05:20 GMT",
        "updated_at": "Wednesday Jun 12, 2019 at 06:15 GMT",
        "closed_at": "Wednesday Jun 12, 2019 at 06:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4706",
        "number": 4689,
        "state": "closed",
        "title": "WT-4706 Add a statistic to track the lookaside table size (v4.0 backport)",
        "body": "(cherry picked from commit f654ed4c4d474309c59f05431138d15a5ed88f2d)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jun 12, 2019 at 05:18 GMT",
        "updated_at": "Thursday Jun 13, 2019 at 00:11 GMT",
        "closed_at": "Thursday Jun 13, 2019 at 00:11 GMT",
        "merged_at": "Thursday Jun 13, 2019 at 00:11 GMT"
    },
    {
        "key": "WT-4776",
        "number": 4688,
        "state": "closed",
        "title": "WT-4776 Modify operations should be equivalent to updates (v4.0 backport)",
        "body": "If modifies are created with out-of-order timestamps, WiredTiger should use apply all previous modifications until it finds a complete copy of the document. Once a modify is identified as the most recent visible version for a value WT should not apply normal visibility rules to the prior versions - they were visible when the modify was performed, so should be included in the read.\r\n\r\n(cherry picked from commit 8eb2d9c36c5c23da09f75e16dff982f0be52d34f)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jun 12, 2019 at 05:05 GMT",
        "updated_at": "Thursday Jun 13, 2019 at 23:36 GMT",
        "closed_at": "Thursday Jun 13, 2019 at 23:36 GMT",
        "merged_at": "Thursday Jun 13, 2019 at 23:36 GMT"
    },
    {
        "key": "WT-4859",
        "number": 4687,
        "state": "closed",
        "title": "WT-4859 Failed to find test/format program in endian tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 11, 2019 at 00:31 GMT",
        "updated_at": "Tuesday Jun 11, 2019 at 04:49 GMT",
        "closed_at": "Tuesday Jun 11, 2019 at 04:49 GMT",
        "merged_at": "Tuesday Jun 11, 2019 at 04:49 GMT"
    },
    {
        "key": "WT-4162",
        "number": 4686,
        "state": "closed",
        "title": "WT-4162 Review WT-4162 when considering this change, not WT-4067.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 10, 2019 at 20:12 GMT",
        "updated_at": "Monday Jun 10, 2019 at 20:45 GMT",
        "closed_at": "Monday Jun 10, 2019 at 20:45 GMT",
        "merged_at": "Monday Jun 10, 2019 at 20:45 GMT"
    },
    {
        "key": "WT-4856",
        "number": 4685,
        "state": "closed",
        "title": "WT-4856 format should test LSM and timestamp configurations.",
        "body": "@agorrod, @sueloverso, this turns LSM and timestamp configurations back on in test/format.\r\n\r\nI'm running LSM with timestamps on a test box, I'll let it run for a few hours and see how it goes.",
        "base_ref": "develop",
        "created_at": "Monday Jun 10, 2019 at 14:50 GMT",
        "updated_at": "Monday Jun 10, 2019 at 19:59 GMT",
        "closed_at": "Monday Jun 10, 2019 at 19:59 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4853",
        "number": 4684,
        "state": "closed",
        "title": "WT-4853 clear all existing checkpoints if no leaf pages are salvaged",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jun 09, 2019 at 23:49 GMT",
        "updated_at": "Monday Jun 10, 2019 at 01:05 GMT",
        "closed_at": "Monday Jun 10, 2019 at 01:05 GMT",
        "merged_at": "Monday Jun 10, 2019 at 01:05 GMT"
    },
    {
        "key": "WT-4853",
        "number": 4683,
        "state": "closed",
        "title": "WT-4853 we can't reset the imported file's durability information, it will fail verification",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jun 09, 2019 at 17:44 GMT",
        "updated_at": "Sunday Jun 09, 2019 at 18:47 GMT",
        "closed_at": "Sunday Jun 09, 2019 at 18:47 GMT",
        "merged_at": "Sunday Jun 09, 2019 at 18:47 GMT"
    },
    {
        "key": "WT-4853",
        "number": 4682,
        "state": "closed",
        "title": "WT-4853 update WT_SESSION.import example code and documentation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jun 09, 2019 at 16:41 GMT",
        "updated_at": "Sunday Jun 09, 2019 at 17:26 GMT",
        "closed_at": "Sunday Jun 09, 2019 at 17:26 GMT",
        "merged_at": "Sunday Jun 09, 2019 at 17:26 GMT"
    },
    {
        "key": "WT-4853",
        "number": 4681,
        "state": "closed",
        "title": "WT-4853 standalone recovery code cannot handle deleted checkpoints",
        "body": "@agorrod, @michaelcahill, this is a significant change to the standalone recovery code Michael merged. In summary, the previous code tried to repair the most recent checkpoint found in the metadata, and that doesn't work in all cases. The reason I didn't see it was I had a bug in my test harness, and was only testing the import process, instead of doing a full verification after the import.\r\n\r\nIn this branch, instead of just storing the base file metadata and the corrected checkpoint information in the file, the block manager now constructs the complete, almost-correct, file checkpoint metadata entry, and copies it into the file's avail list along with the base metadata and the corrected checkpoint information.\r\n\r\nAdditionally, I've pushed changes into the test program to do a full verify after the import.\r\n\r\nThe new layering is a little uglier than before (but not that much), and almost all of the changes are in the block-scan and btree-import code, so the added risk in merging this code is minimal.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 09, 2019 at 15:40 GMT",
        "updated_at": "Sunday Jun 09, 2019 at 16:29 GMT",
        "closed_at": "Sunday Jun 09, 2019 at 16:29 GMT",
        "merged_at": "Sunday Jun 09, 2019 at 16:29 GMT"
    },
    {
        "key": "WT-4855",
        "number": 4680,
        "state": "closed",
        "title": "WT-4855 WiredTiger recovery should detect files without unique IDs.",
        "body": "@sueloverso, I hit this when debugging a different problem (the symptom was leaking the allocated memory), so I figured I'd add in a check. I don't think it can happen absent corruption, but it might save us some debugging if we ever start importing objects in a significant way.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 09, 2019 at 00:22 GMT",
        "updated_at": "Monday Jun 10, 2019 at 15:12 GMT",
        "closed_at": "Monday Jun 10, 2019 at 15:10 GMT",
        "merged_at": "Monday Jun 10, 2019 at 15:10 GMT"
    },
    {
        "key": "WT-4854",
        "number": 4679,
        "state": "closed",
        "title": "WT-4854 wt utility list command has a memory leak and minor error handling bugs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jun 08, 2019 at 23:06 GMT",
        "updated_at": "Tuesday Jun 11, 2019 at 00:46 GMT",
        "closed_at": "Sunday Jun 09, 2019 at 17:10 GMT",
        "merged_at": "Sunday Jun 09, 2019 at 17:10 GMT"
    },
    {
        "key": "WT-4852",
        "number": 4678,
        "state": "closed",
        "title": "WT-4852 Evergreen runs of test/format require shared library extensions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 07, 2019 at 21:58 GMT",
        "updated_at": "Tuesday Jun 11, 2019 at 06:30 GMT",
        "closed_at": "Friday Jun 07, 2019 at 22:43 GMT",
        "merged_at": "Friday Jun 07, 2019 at 22:43 GMT"
    },
    {
        "key": "WT-4851",
        "number": 4677,
        "state": "closed",
        "title": "WT-4851 heap-use-after-free when block manager grows buffer during final checkpoint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 07, 2019 at 21:01 GMT",
        "updated_at": "Friday Jun 07, 2019 at 21:33 GMT",
        "closed_at": "Friday Jun 07, 2019 at 21:33 GMT",
        "merged_at": "Friday Jun 07, 2019 at 21:33 GMT"
    },
    {
        "key": "WT-4850",
        "number": 4676,
        "state": "closed",
        "title": "WT-4850 __slvg_checkpoint() metadata memory leak",
        "body": "Memory allocated into `config` was never freed.\r\n\r\nI also explicitly initialized `ckptbase`, just for clarity.",
        "base_ref": "develop",
        "created_at": "Friday Jun 07, 2019 at 20:46 GMT",
        "updated_at": "Friday Jun 07, 2019 at 21:21 GMT",
        "closed_at": "Friday Jun 07, 2019 at 21:21 GMT",
        "merged_at": "Friday Jun 07, 2019 at 21:21 GMT"
    },
    {
        "key": "WT-4787",
        "number": 4675,
        "state": "closed",
        "title": "WT-4787 Coverity: Potential infinite loops",
        "body": "This PR is just changing the loop counter to be the same integer type as the maximum that we're comparing in the terminating condition. Otherwise, it may be impossible to terminate the loop.",
        "base_ref": "develop",
        "created_at": "Friday Jun 07, 2019 at 06:41 GMT",
        "updated_at": "Monday Jun 10, 2019 at 22:41 GMT",
        "closed_at": "Friday Jun 07, 2019 at 18:59 GMT",
        "merged_at": "Friday Jun 07, 2019 at 18:59 GMT"
    },
    {
        "key": "WT-4790",
        "number": 4674,
        "state": "closed",
        "title": "WT-4790 Coverity: Memory leak within __wt_curbulk_init",
        "body": "This PR is just to free the `WT_RECONCILE` struct that we allocate earlier in the function.\r\nI think it makes sense to free here if we're returning non-zero.",
        "base_ref": "develop",
        "created_at": "Friday Jun 07, 2019 at 01:47 GMT",
        "updated_at": "Monday Jun 10, 2019 at 13:51 GMT",
        "closed_at": "Monday Jun 10, 2019 at 13:51 GMT",
        "merged_at": "Monday Jun 10, 2019 at 13:51 GMT"
    },
    {
        "key": "WT-4848",
        "number": 4673,
        "state": "closed",
        "title": "WT-4848 Performance tuning for calculating and caching diffs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 06, 2019 at 06:58 GMT",
        "updated_at": "Wednesday Jun 12, 2019 at 03:44 GMT",
        "closed_at": "Wednesday Jun 12, 2019 at 03:44 GMT",
        "merged_at": "Wednesday Jun 12, 2019 at 03:44 GMT"
    },
    {
        "key": "WT-4712",
        "number": 4672,
        "state": "closed",
        "title": "WT-4712 Add diagnostic logging. (#4572)",
        "body": "* WT-4712 Add diagnostic logging.\r\n\r\n* We may not have a btree here, don't check it.\r\n\r\n* Add bit field on fileid to ignore operation and remove ignore flag\r\nfrom the record.\r\n\r\n* Allocate a txn id in diagnostic mode if needed.\r\n\r\n* Only call logging of timestamp setting if one is set.\r\n\r\n* Skip timestamp operation in recovery. Add diagnostic to timestamp_abort.\r\n\r\n* Need to unpack timestamp operation to move pointers to next operation.\r\n\r\n* Correctly set bit to ignore the fileid. Remove verbose from test.\r\n\r\n* Remove debug line.\r\n\r\n* Conditionalize assertion that is no longer always true.\r\n\r\n* Add support for durable and prepare timestamps.\r\n\r\n* Whitespace and spelling.\r\n\r\n* Add clock time to txn_timestamp log record.\r\n\r\n* Add in support for checkpoint retention (i.e. archiving changes).\r\n\r\n* Remove verbose setting from test.\r\n\r\n* Move diagnostic free to general connection code.\r\n\r\n* Ignore reconfigure while debugging.\r\n\r\n* Fix off by one bug.\r\n\r\n* Add special uint32_id type for fileids so they are printed in both\r\ndecimal and hex in printlog.\r\n\r\n* Minor wordsmithing.\r\n\r\n* Fix wording for long line.\r\n\r\n* Commit auto-generated file.\r\n\r\n* Reinstate code supporting reconfigure.\r\n\r\n* Remove accidentally committed code.\r\n\r\n* Check the flag, not just the bit value.\r\n\r\n* Remove extra arg.\r\n\r\n* Add diagnostic operation range usage to make it easier to ignore\r\nthose operation records.\r\n\r\n* Add some comments to log_data.py file about diagnostic operations.\r\n\r\n* Wordsmithing.\r\n\r\n* Account for size of record we skip.\r\n\r\n* Rename the config string to debug_mode and related changes.\r\n\r\n* Fix editing error.\r\n\r\n* Add test for rollback_error debug mode setting.\r\n\r\n* Add test for checkpoint_retention.\r\n\r\n* Fix minor test issue.\r\n\r\n* Add debug print line.\r\n\r\n* Use // for integer division for python3.\r\n\r\n* Add test for table_logging.\r\n\r\n* Whitespace\r\n\r\n* Accomodate slow machines in sleep/archive test.\r\n\r\n* Review comments.\r\n\r\n* Fix typo\r\n\r\n* Modify description.\r\n\r\n* Turn on verbose=(log) on slow systems.\r\n\r\n* Simplify archive checking to (hopefully) alleviate timing issues.\r\n\r\n(cherry picked from commit a610f847393f5d21923f92e38a7e1aa7258f7d47)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Jun 05, 2019 at 15:03 GMT",
        "updated_at": "Friday Jun 07, 2019 at 06:11 GMT",
        "closed_at": "Friday Jun 07, 2019 at 06:11 GMT",
        "merged_at": "Friday Jun 07, 2019 at 06:11 GMT"
    },
    {
        "key": "WT-4460",
        "number": 4671,
        "state": "closed",
        "title": "WT-4460 Optimize for in-order, non-overlapping modifications",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 04, 2019 at 23:27 GMT",
        "updated_at": "Wednesday Jul 31, 2019 at 17:30 GMT",
        "closed_at": "Wednesday Jul 31, 2019 at 15:31 GMT",
        "merged_at": "Wednesday Jul 31, 2019 at 15:31 GMT"
    },
    {
        "key": "WT-4837",
        "number": 4670,
        "state": "closed",
        "title": "WT-4837 Don't sleep in timing_stress if the cache is totally full.",
        "body": "With this change the LSM + timing stress stuck cache failure does not happen. @keithbostic let me know what you think of these tweaks to the timing stress function.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 04, 2019 at 20:30 GMT",
        "updated_at": "Tuesday Jun 04, 2019 at 23:58 GMT",
        "closed_at": "Tuesday Jun 04, 2019 at 23:58 GMT",
        "merged_at": "Tuesday Jun 04, 2019 at 23:58 GMT"
    },
    {
        "key": "WT-4844",
        "number": 4669,
        "state": "closed",
        "title": "WT-4844 Only log an informational message when a set read-timestamp is older than the oldest timestamp.",
        "body": "Alex, this is a change already queued up in WT-4733 (#4610), to not log an error message if the application specifies a timestamp older than the current oldest timestamp.\r\n\r\nThe argument is an application will hit this unless it explicitly synchronizes the read and oldest timestamps, and it's not an error so much as an alert the application's read timestamp likely needs to move forward.\r\n\r\nThe `test/format` PR #4610 requires this change, and MongoDB is running into it as well (SERVER-40591), which is why I'll pulled it out into its own PR.\r\n\r\n@bvpvamsikrishna, @michaelcahill: is this OK with you?",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 04, 2019 at 19:30 GMT",
        "updated_at": "Wednesday Jun 05, 2019 at 18:10 GMT",
        "closed_at": "Wednesday Jun 05, 2019 at 18:10 GMT",
        "merged_at": "Wednesday Jun 05, 2019 at 18:10 GMT"
    },
    {
        "key": "WT-4827",
        "number": 4668,
        "state": "closed",
        "title": "WT-4827 Apply commit timestamps to deletion operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 04, 2019 at 01:52 GMT",
        "updated_at": "Thursday Jun 06, 2019 at 04:15 GMT",
        "closed_at": "Thursday Jun 06, 2019 at 04:15 GMT",
        "merged_at": "Thursday Jun 06, 2019 at 04:15 GMT"
    },
    {
        "key": "WT-4839",
        "number": 4667,
        "state": "closed",
        "title": "WT-4839 Shuffle python tests and execute every Nth test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 03, 2019 at 08:26 GMT",
        "updated_at": "Friday Jun 07, 2019 at 00:19 GMT",
        "closed_at": "Friday Jun 07, 2019 at 00:19 GMT",
        "merged_at": "Friday Jun 07, 2019 at 00:19 GMT"
    },
    {
        "key": "WT-4671",
        "number": 4666,
        "state": "closed",
        "title": "WT-4671 Remove limbo pages and associated statistics",
        "body": "",
        "base_ref": "relevant_history_in_cache",
        "created_at": "Monday Jun 03, 2019 at 05:39 GMT",
        "updated_at": "Friday Jun 07, 2019 at 01:22 GMT",
        "closed_at": "Friday Jun 07, 2019 at 01:22 GMT",
        "merged_at": "Friday Jun 07, 2019 at 01:22 GMT"
    },
    {
        "key": "WT-4494",
        "number": 4665,
        "state": "closed",
        "title": "WT-4494  Change import API to work directly on a file URI",
        "body": "",
        "base_ref": "wt-4494-standalone-recovery",
        "created_at": "Monday Jun 03, 2019 at 03:25 GMT",
        "updated_at": "Tuesday Jun 04, 2019 at 19:07 GMT",
        "closed_at": "Tuesday Jun 04, 2019 at 19:07 GMT",
        "merged_at": "Tuesday Jun 04, 2019 at 19:07 GMT"
    },
    {
        "key": "WT-4719",
        "number": 4664,
        "state": "closed",
        "title": "WT-4719 Improve validation of prepared update resolution",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 03, 2019 at 00:02 GMT",
        "updated_at": "Tuesday Jun 04, 2019 at 05:12 GMT",
        "closed_at": "Tuesday Jun 04, 2019 at 05:12 GMT",
        "merged_at": "Tuesday Jun 04, 2019 at 05:12 GMT"
    },
    {
        "key": "WT-4477",
        "number": 4663,
        "state": "closed",
        "title": "WT-4477 Add eviction debug mode and extra checks.",
        "body": "This branch pulls in the assertions from the original WT-4750 branch for the data inconsistency reproducer. This branch does not include the assertions in sweep that were commented out on that branch because they were triggering a lot.",
        "base_ref": "develop",
        "created_at": "Friday May 31, 2019 at 20:06 GMT",
        "updated_at": "Friday Jun 07, 2019 at 01:20 GMT",
        "closed_at": "Thursday Jun 06, 2019 at 06:43 GMT",
        "merged_at": "Thursday Jun 06, 2019 at 06:43 GMT"
    },
    {
        "key": "WT-4690",
        "number": 4662,
        "state": "closed",
        "title": "WT-4690 During checkpoints, make sure eviction does not split. (v4.0 backport)",
        "body": "Clean cherrypick of commit 34c1ffa.",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday May 30, 2019 at 03:21 GMT",
        "updated_at": "Friday May 31, 2019 at 06:33 GMT",
        "closed_at": "Friday May 31, 2019 at 06:32 GMT",
        "merged_at": "Friday May 31, 2019 at 06:32 GMT"
    },
    {
        "key": "WT-4608",
        "number": 4661,
        "state": "closed",
        "title": "WT-4608 Skip verbose cache dump of files opened exclusively.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 29, 2019 at 18:43 GMT",
        "updated_at": "Thursday May 30, 2019 at 17:40 GMT",
        "closed_at": "Thursday May 30, 2019 at 17:40 GMT",
        "merged_at": "Thursday May 30, 2019 at 17:40 GMT"
    },
    {
        "key": "RT-4272",
        "number": 4660,
        "state": "closed",
        "title": "BACKPORT-4272 Restructure the reconciliation code",
        "body": "Backport WT-4723 (Restructure the reconciliation code) to 4.0.",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday May 29, 2019 at 15:42 GMT",
        "updated_at": "Thursday May 30, 2019 at 04:26 GMT",
        "closed_at": "Thursday May 30, 2019 at 04:26 GMT",
        "merged_at": "Thursday May 30, 2019 at 04:26 GMT"
    },
    {
        "key": "WT-4190",
        "number": 4659,
        "state": "closed",
        "title": "WT-4190 Decrease shutdown time by doing multi-threaded cache flush",
        "body": "This PR is artificially bringing the dirty target down to encourage the eviction threads to help reconcile prior to shutdown.\r\n\r\nI reproduced similar results to those recorded by @agorrod in the ticket. Bringing the target value down even further doesn't seem to yield any real improvement. And again, this doesn't help much for when we have a single table.",
        "base_ref": "develop",
        "created_at": "Wednesday May 29, 2019 at 06:16 GMT",
        "updated_at": "Thursday May 30, 2019 at 03:48 GMT",
        "closed_at": "Thursday May 30, 2019 at 03:48 GMT",
        "merged_at": "Thursday May 30, 2019 at 03:48 GMT"
    },
    {
        "key": "WT-4829",
        "number": 4658,
        "state": "closed",
        "title": "WT-4829 Fix broken filenames in operation tracking.",
        "body": "After conversion to python 3, file names were encoded as byte arrays and not decoded. As a result the filenames used at HTML links were not properly formed and we could not click on these links. Add proper decoding to fix that.",
        "base_ref": "develop",
        "created_at": "Tuesday May 28, 2019 at 23:08 GMT",
        "updated_at": "Friday Jun 07, 2019 at 20:27 GMT",
        "closed_at": "Friday Jun 07, 2019 at 20:27 GMT",
        "merged_at": "Friday Jun 07, 2019 at 20:27 GMT"
    },
    {
        "key": "WT-4828",
        "number": 4657,
        "state": "closed",
        "title": "WT-4828 Fix the type exception in operation tracking.",
        "body": "Explicitly cast the value to int to avoid a type exception. This started showing up after we converted to Python3.",
        "base_ref": "develop",
        "created_at": "Tuesday May 28, 2019 at 22:37 GMT",
        "updated_at": "Wednesday May 29, 2019 at 09:28 GMT",
        "closed_at": "Wednesday May 29, 2019 at 09:28 GMT",
        "merged_at": "Wednesday May 29, 2019 at 09:28 GMT"
    },
    {
        "key": "WT-4830",
        "number": 4656,
        "state": "closed",
        "title": "WT-4830 Modify encrypt06 test to be clearer and match documentation",
        "body": "",
        "base_ref": "wt-4494-standalone-recovery",
        "created_at": "Tuesday May 28, 2019 at 18:15 GMT",
        "updated_at": "Monday Jun 03, 2019 at 00:37 GMT",
        "closed_at": "Monday Jun 03, 2019 at 00:37 GMT",
        "merged_at": "Monday Jun 03, 2019 at 00:37 GMT"
    },
    {
        "key": "WT-4823",
        "number": 4655,
        "state": "closed",
        "title": "WT-4823 Add check for uninitialised lookaside resources",
        "body": "For in-memory configurations, the lookaside session isn't allocated so we need to add a `NULL` check here.\r\n\r\nI've amended the `test_las04` tests to include in-memory configuration. When I remove the check, this test causes a segmentation fault in the same spot as the reported issue so I believe that this is the correct fix.\r\n\r\nAfter discussing with @agorrod, we elected to simply ignore lookaside configuration for in-memory setups.",
        "base_ref": "develop",
        "created_at": "Tuesday May 28, 2019 at 05:02 GMT",
        "updated_at": "Tuesday May 28, 2019 at 08:31 GMT",
        "closed_at": "Tuesday May 28, 2019 at 08:29 GMT",
        "merged_at": "Tuesday May 28, 2019 at 08:29 GMT"
    },
    {
        "key": "WT-4825",
        "number": 4654,
        "state": "closed",
        "title": "WT-4825 Add warning in operation tracking if the open file limit is too small",
        "body": "After conversion to Python3, a script that visualizes operation tracking logs begin to fail on systems where the open file limit is set to 256. The culprit is the multiprocessing module, which appears to not clean up the open files right away after the processes exit. Others are reporting similar issues online. This is affecting us only on OSX. The workaround is simple: the user only needs to bump the open file limit. To keep things simple, I print a warning to the user and terminate the script if the open file limit is too small. ",
        "base_ref": "develop",
        "created_at": "Monday May 27, 2019 at 22:05 GMT",
        "updated_at": "Tuesday May 28, 2019 at 13:55 GMT",
        "closed_at": "Tuesday May 28, 2019 at 13:55 GMT",
        "merged_at": "Tuesday May 28, 2019 at 13:55 GMT"
    },
    {
        "key": "WT-4822",
        "number": 4653,
        "state": "closed",
        "title": "WT-4822 Track max pre compression page size",
        "body": "This PR is adding two new stats for the max pre compression size for leaf pages and internal pages.",
        "base_ref": "develop",
        "created_at": "Monday May 27, 2019 at 06:02 GMT",
        "updated_at": "Tuesday May 28, 2019 at 06:05 GMT",
        "closed_at": "Tuesday May 28, 2019 at 06:05 GMT",
        "merged_at": "Tuesday May 28, 2019 at 06:05 GMT"
    },
    {
        "key": "WT-4819",
        "number": 4652,
        "state": "closed",
        "title": "WT-4819 wt utility list command drops core on empty objects",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 26, 2019 at 16:29 GMT",
        "updated_at": "Sunday May 26, 2019 at 19:51 GMT",
        "closed_at": "Sunday May 26, 2019 at 19:51 GMT",
        "merged_at": "Sunday May 26, 2019 at 19:51 GMT"
    },
    {
        "key": "WT-4760",
        "number": 4651,
        "state": "closed",
        "title": "WT-4760 Checkpoint should not read past a stable update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 24, 2019 at 03:39 GMT",
        "updated_at": "Monday May 27, 2019 at 00:51 GMT",
        "closed_at": "Monday May 27, 2019 at 00:50 GMT",
        "merged_at": "Monday May 27, 2019 at 00:50 GMT"
    },
    {
        "key": "WT-4816",
        "number": 4650,
        "state": "closed",
        "title": "WT-4816 don't disallow LSM configurations in test/format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 24, 2019 at 01:40 GMT",
        "updated_at": "Friday May 24, 2019 at 17:48 GMT",
        "closed_at": "Friday May 24, 2019 at 17:48 GMT",
        "merged_at": "Friday May 24, 2019 at 17:48 GMT"
    },
    {
        "key": "WT-4817",
        "number": 4649,
        "state": "closed",
        "title": "WT-4817 Fix off-by-one error.",
        "body": "@ddanderson can you do a quick review of this? All sanitizer builds will fail until this is merged. With this change it passes, prior to this sanitizer catches the bug all the time.",
        "base_ref": "develop",
        "created_at": "Thursday May 23, 2019 at 19:55 GMT",
        "updated_at": "Friday May 24, 2019 at 19:54 GMT",
        "closed_at": "Thursday May 23, 2019 at 21:18 GMT",
        "merged_at": "Thursday May 23, 2019 at 21:18 GMT"
    },
    {
        "key": "WT-4775",
        "number": 4648,
        "state": "closed",
        "title": "WT-4775 Make the \"bad file descriptor\" test resilient against crashing.",
        "body": "As part of this change, a function is made available that allows a specialized test method to run in a subprocess.",
        "base_ref": "develop",
        "created_at": "Thursday May 23, 2019 at 15:24 GMT",
        "updated_at": "Monday Jun 03, 2019 at 18:41 GMT",
        "closed_at": "Monday Jun 03, 2019 at 18:41 GMT",
        "merged_at": "Monday Jun 03, 2019 at 18:41 GMT"
    },
    {
        "key": "WT-4804",
        "number": 4647,
        "state": "closed",
        "title": "WT-4804 Add support for ignore_prepare=force.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 23, 2019 at 06:59 GMT",
        "updated_at": "Thursday May 23, 2019 at 21:29 GMT",
        "closed_at": "Thursday May 23, 2019 at 21:29 GMT",
        "merged_at": "Thursday May 23, 2019 at 21:29 GMT"
    },
    {
        "key": "WT-4710",
        "number": 4646,
        "state": "closed",
        "title": "WT-4710 Modify datafile verification test",
        "body": "I've basically just moved the dump section into the verbose block and added the call to unset as it prevents the fork out of memory failure we have been seeing.",
        "base_ref": "develop",
        "created_at": "Thursday May 23, 2019 at 04:10 GMT",
        "updated_at": "Friday May 24, 2019 at 01:01 GMT",
        "closed_at": "Friday May 24, 2019 at 00:31 GMT",
        "merged_at": "Friday May 24, 2019 at 00:31 GMT"
    },
    {
        "key": "WT-4811",
        "number": 4645,
        "state": "closed",
        "title": "WT-4811 Fix durable timestamp assignment for updates created for truncate.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 22, 2019 at 22:49 GMT",
        "updated_at": "Thursday May 23, 2019 at 06:59 GMT",
        "closed_at": "Thursday May 23, 2019 at 00:31 GMT",
        "merged_at": "Thursday May 23, 2019 at 00:31 GMT"
    },
    {
        "key": null,
        "number": 4644,
        "state": "closed",
        "title": "Wt 4811 fix upd durable ts",
        "body": "Fixed durable timestamp assignment for updates created from truncate.",
        "base_ref": "develop",
        "created_at": "Wednesday May 22, 2019 at 22:37 GMT",
        "updated_at": "Thursday May 23, 2019 at 06:59 GMT",
        "closed_at": "Wednesday May 22, 2019 at 22:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4719",
        "number": 4643,
        "state": "closed",
        "title": "Revert \"WT-4719 Modifying prepared update resolution logic\"",
        "body": "Reverts wiredtiger/wiredtiger#4640",
        "base_ref": "develop",
        "created_at": "Tuesday May 21, 2019 at 22:36 GMT",
        "updated_at": "Thursday May 23, 2019 at 06:59 GMT",
        "closed_at": "Tuesday May 21, 2019 at 22:36 GMT",
        "merged_at": "Tuesday May 21, 2019 at 22:36 GMT"
    },
    {
        "key": "WT-4352",
        "number": 4642,
        "state": "closed",
        "title": "WT-4352 Backport data corruption fixes",
        "body": "Tagged with a ticket to get PR testing started.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday May 21, 2019 at 06:25 GMT",
        "updated_at": "Tuesday May 21, 2019 at 23:35 GMT",
        "closed_at": "Tuesday May 21, 2019 at 23:35 GMT",
        "merged_at": "Tuesday May 21, 2019 at 23:35 GMT"
    },
    {
        "key": "WT-4803",
        "number": 4641,
        "state": "closed",
        "title": "WT-4803 Implement file_max configuration for Cache Overflow mechanism",
        "body": "This PR is to add a `file_max` configuration to limit the size of the lookaside table. It includes:\r\n\r\n* A config category called `cache_overflow` within which we can use the `file_max` config to limit the lookaside file size.\r\n* A statistic called `cache_lookaside_ondisk_max` to track the value of `file_max`.\r\n* Logic to set `file_max` at initialisation and reconfiguration time.\r\n* Code to panic when the lookaside size exceeds `file_max`.\r\n* The Python test `test_las04.py` to test configuration/reconfiguration of `file_max` and the effect it has on the `cache_lookaside_ondisk_max` stat.\r\n* A CSuite test to exercise lookaside and check that a panic occurs when we exceed `file_max`.",
        "base_ref": "develop",
        "created_at": "Monday May 20, 2019 at 06:43 GMT",
        "updated_at": "Friday May 24, 2019 at 04:03 GMT",
        "closed_at": "Friday May 24, 2019 at 04:02 GMT",
        "merged_at": "Friday May 24, 2019 at 04:02 GMT"
    },
    {
        "key": "WT-4719",
        "number": 4640,
        "state": "closed",
        "title": "WT-4719 Modifying prepared update resolution logic",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 20, 2019 at 00:54 GMT",
        "updated_at": "Tuesday May 21, 2019 at 05:10 GMT",
        "closed_at": "Tuesday May 21, 2019 at 05:09 GMT",
        "merged_at": "Tuesday May 21, 2019 at 05:09 GMT"
    },
    {
        "key": "WT-4800",
        "number": 4639,
        "state": "closed",
        "title": "WT-4800 wt utility doesn't list all of its flags in its usage error message",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 17, 2019 at 15:07 GMT",
        "updated_at": "Friday May 17, 2019 at 18:49 GMT",
        "closed_at": "Friday May 17, 2019 at 18:49 GMT",
        "merged_at": "Friday May 17, 2019 at 18:49 GMT"
    },
    {
        "key": "WT-4799",
        "number": 4638,
        "state": "closed",
        "title": "WT-4799 wiredtiger.in references the wrong statistics script",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 17, 2019 at 14:55 GMT",
        "updated_at": "Friday May 17, 2019 at 18:47 GMT",
        "closed_at": "Friday May 17, 2019 at 18:47 GMT",
        "merged_at": "Friday May 17, 2019 at 18:47 GMT"
    },
    {
        "key": "WT-4240",
        "number": 4637,
        "state": "closed",
        "title": "WT-4240 document that system crashes may result in files that need salvaging",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 17, 2019 at 13:40 GMT",
        "updated_at": "Friday May 17, 2019 at 18:53 GMT",
        "closed_at": "Friday May 17, 2019 at 18:53 GMT",
        "merged_at": "Friday May 17, 2019 at 18:53 GMT"
    },
    {
        "key": "WT-4771",
        "number": 4636,
        "state": "closed",
        "title": "WT-4771 Updating compatibility tests to include 3.1 and 3.2",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 17, 2019 at 03:51 GMT",
        "updated_at": "Tuesday May 21, 2019 at 16:50 GMT",
        "closed_at": "Tuesday May 21, 2019 at 16:50 GMT",
        "merged_at": "Tuesday May 21, 2019 at 16:50 GMT"
    },
    {
        "key": "WT-4793",
        "number": 4635,
        "state": "closed",
        "title": "WT-4793 Extend test/checkpoint to use timestamps and more",
        "body": "Add options to encourage seeing conditions related to lookaside usage,\r\nhandle sweep, checkpoints and different types of data access patterns.\r\n\r\nThis is the first step, subsequently will make the new functionality\r\nconfigurable.",
        "base_ref": "develop",
        "created_at": "Friday May 17, 2019 at 03:16 GMT",
        "updated_at": "Wednesday May 29, 2019 at 02:42 GMT",
        "closed_at": "Wednesday May 29, 2019 at 02:42 GMT",
        "merged_at": "Wednesday May 29, 2019 at 02:42 GMT"
    },
    {
        "key": "WT-4719",
        "number": 4634,
        "state": "closed",
        "title": "Revert \"WT-4719 Txn prepared update resolution validation\"",
        "body": "Reverts wiredtiger/wiredtiger#4627",
        "base_ref": "develop",
        "created_at": "Thursday May 16, 2019 at 05:48 GMT",
        "updated_at": "Monday May 20, 2019 at 00:53 GMT",
        "closed_at": "Thursday May 16, 2019 at 05:50 GMT",
        "merged_at": "Thursday May 16, 2019 at 05:50 GMT"
    },
    {
        "key": "WT-4796",
        "number": 4633,
        "state": "closed",
        "title": "WT-4796 Enhance diagnostics that track ref state transitions",
        "body": "Include atomic CAS transitions as well as setting state.",
        "base_ref": "develop",
        "created_at": "Thursday May 16, 2019 at 04:06 GMT",
        "updated_at": "Thursday May 16, 2019 at 06:19 GMT",
        "closed_at": "Thursday May 16, 2019 at 06:19 GMT",
        "merged_at": "Thursday May 16, 2019 at 06:19 GMT"
    },
    {
        "key": "WT-4794",
        "number": 4632,
        "state": "closed",
        "title": "WT-4794 Mark lookaside history resolved in all read paths.",
        "body": "When the `resolved` flag was first added to `ref->page_las`, it was only being set in the common case where lookaside history was re-instantiated in memory.  This change sets it consistently in all (currently both) paths.",
        "base_ref": "develop",
        "created_at": "Thursday May 16, 2019 at 03:30 GMT",
        "updated_at": "Thursday May 16, 2019 at 04:14 GMT",
        "closed_at": "Thursday May 16, 2019 at 04:14 GMT",
        "merged_at": "Thursday May 16, 2019 at 04:14 GMT"
    },
    {
        "key": "WT-4779",
        "number": 4631,
        "state": "closed",
        "title": "WT-4779 Disable an assert that commit timestamp is valid",
        "body": "We added an assertion that non-prepared transactions commit\r\ntimestamp is newer than the oldest, which triggered a test failure.",
        "base_ref": "develop",
        "created_at": "Tuesday May 14, 2019 at 02:34 GMT",
        "updated_at": "Tuesday May 14, 2019 at 03:52 GMT",
        "closed_at": "Tuesday May 14, 2019 at 03:51 GMT",
        "merged_at": "Tuesday May 14, 2019 at 03:51 GMT"
    },
    {
        "key": "WT-4768",
        "number": 4630,
        "state": "closed",
        "title": "WT-4768 Save the id for sweep dropping in btree_close instead of eviction.",
        "body": "With this fix, I do not get any data mismatch failures with the test case. Prior to this fix, I was getting 100% failure with 20 parallel processes.\r\n\r\n@michaelcahill I'm a bit concerned this undoes some of the fixes from WT-3715 and dropping the LAS entries for a dropped file with `force=true` by moving it. I also considered some path that would remove or avoid saving the id with the sweep dead versus discard phases if we reopened, but that felt messy pretty quickly.",
        "base_ref": "develop",
        "created_at": "Monday May 13, 2019 at 20:26 GMT",
        "updated_at": "Tuesday May 14, 2019 at 06:12 GMT",
        "closed_at": "Tuesday May 14, 2019 at 06:12 GMT",
        "merged_at": "Tuesday May 14, 2019 at 06:12 GMT"
    },
    {
        "key": "WT-4778",
        "number": 4629,
        "state": "closed",
        "title": "WT-4778 Adding win attribute to function definition",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 13, 2019 at 07:23 GMT",
        "updated_at": "Tuesday May 14, 2019 at 06:11 GMT",
        "closed_at": "Tuesday May 14, 2019 at 06:11 GMT",
        "merged_at": "Tuesday May 14, 2019 at 06:11 GMT"
    },
    {
        "key": "WT-4776",
        "number": 4628,
        "state": "closed",
        "title": "WT-4776 Modify operations should be equivalent to updates.",
        "body": "If modifies are created with out-of-order timestamps, WiredTiger should use apply all previous modifications until it finds a complete copy of the document. Once a modify is identified as the most recent visible version for a value WT should not apply normal visibility rules to the prior versions - they were visible when the modify was performed, so should be included in the read.",
        "base_ref": "develop",
        "created_at": "Monday May 13, 2019 at 06:29 GMT",
        "updated_at": "Tuesday May 14, 2019 at 05:28 GMT",
        "closed_at": "Tuesday May 14, 2019 at 05:27 GMT",
        "merged_at": "Tuesday May 14, 2019 at 05:27 GMT"
    },
    {
        "key": "WT-4719",
        "number": 4627,
        "state": "closed",
        "title": "WT-4719 Txn prepared update resolution validation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 13, 2019 at 00:47 GMT",
        "updated_at": "Monday May 20, 2019 at 00:53 GMT",
        "closed_at": "Thursday May 16, 2019 at 05:44 GMT",
        "merged_at": "Thursday May 16, 2019 at 05:44 GMT"
    },
    {
        "key": "WT-4767",
        "number": 4626,
        "state": "closed",
        "title": "WT-4767 Temporary fix for compatibility tests",
        "body": "Cutting a 3.2.0 WiredTiger release broke the Python compatibility\r\ntests, this change fixes the build failures, but means we no\r\nlonger test against the 3.1 release. I suspect it's not the\r\ncorrect final fix.",
        "base_ref": "develop",
        "created_at": "Sunday May 12, 2019 at 22:08 GMT",
        "updated_at": "Thursday May 23, 2019 at 06:59 GMT",
        "closed_at": "Sunday May 12, 2019 at 22:50 GMT",
        "merged_at": "Sunday May 12, 2019 at 22:50 GMT"
    },
    {
        "key": "WT-4747",
        "number": 4625,
        "state": "closed",
        "title": "WT-4747 Change optrack scripts to run under Python3.",
        "body": "- various simple syntax changes\r\n- rewrote the color palette selection. In python3, colors from matplotlib\r\n  are sorted by name alphabetically, which has some bad effects (lots of\r\n  \"light-\" colors together, for example). Using numbered rather than\r\n  named colors allows us to space color selections.",
        "base_ref": "develop",
        "created_at": "Friday May 10, 2019 at 21:29 GMT",
        "updated_at": "Thursday May 23, 2019 at 06:59 GMT",
        "closed_at": "Monday May 13, 2019 at 06:04 GMT",
        "merged_at": "Monday May 13, 2019 at 06:04 GMT"
    },
    {
        "key": "WT-4451",
        "number": 4624,
        "state": "closed",
        "title": "WT-4451 Add new WiredTiger timestamp APIs that use integral values",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 10, 2019 at 08:41 GMT",
        "updated_at": "Friday May 24, 2019 at 01:45 GMT",
        "closed_at": "Friday May 24, 2019 at 01:45 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4769",
        "number": 4623,
        "state": "closed",
        "title": "WT-4769 Keep empty page references with active history.",
        "body": "It is only okay to discard a reference once its history is no longer required, even if reconciliation created an empty page image.",
        "base_ref": "develop",
        "created_at": "Friday May 10, 2019 at 06:00 GMT",
        "updated_at": "Tuesday May 14, 2019 at 17:08 GMT",
        "closed_at": "Tuesday May 14, 2019 at 17:08 GMT",
        "merged_at": "Tuesday May 14, 2019 at 17:08 GMT"
    },
    {
        "key": "WT-4768",
        "number": 4622,
        "state": "closed",
        "title": "WT-4768 Diagnostics looking for page split bug",
        "body": "@michaelcahill New pull request after renaming the branch for the new ticket number.",
        "base_ref": "wt-4712-logdiag",
        "created_at": "Thursday May 09, 2019 at 18:22 GMT",
        "updated_at": "Friday May 17, 2019 at 01:19 GMT",
        "closed_at": "Friday May 17, 2019 at 01:19 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 4621,
        "state": "closed",
        "title": "Updated debugging with now merged fix.",
        "body": "@michaelcahill Here's a branch of your changes on top of the new log format branch.",
        "base_ref": "wt-4712-logdiag",
        "created_at": "Thursday May 09, 2019 at 18:18 GMT",
        "updated_at": "Thursday May 09, 2019 at 18:21 GMT",
        "closed_at": "Thursday May 09, 2019 at 18:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4750",
        "number": 4620,
        "state": "closed",
        "title": "WT-4750 Remove our id from the LAS dropped list on reopen if it's on it.",
        "body": "@keithbostic and @michaelcahill for consideration.",
        "base_ref": "develop",
        "created_at": "Tuesday May 07, 2019 at 21:37 GMT",
        "updated_at": "Thursday May 09, 2019 at 04:17 GMT",
        "closed_at": "Thursday May 09, 2019 at 04:17 GMT",
        "merged_at": "Thursday May 09, 2019 at 04:17 GMT"
    },
    {
        "key": "WT-4750",
        "number": 4619,
        "state": "closed",
        "title": "WT-4750 Sweep can remove active lookaside records when files are closed and re-opened",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 07, 2019 at 21:10 GMT",
        "updated_at": "Thursday May 09, 2019 at 04:18 GMT",
        "closed_at": "Thursday May 09, 2019 at 04:18 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4766",
        "number": 4618,
        "state": "closed",
        "title": "WT-4766 Make wt_ckpt_decode script work with both python2 and python3",
        "body": "The change is needed because the WT unpack routine now takes a bytes object.  It was working previously for Python3 because a bytearray object behaves like a bytes object in Python3.  In Python2, they are not the same at all, but an explicit conversion will solve the problem.",
        "base_ref": "develop",
        "created_at": "Tuesday May 07, 2019 at 18:55 GMT",
        "updated_at": "Tuesday May 07, 2019 at 21:24 GMT",
        "closed_at": "Tuesday May 07, 2019 at 21:23 GMT",
        "merged_at": "Tuesday May 07, 2019 at 21:23 GMT"
    },
    {
        "key": "WT-4765",
        "number": 4617,
        "state": "closed",
        "title": "WT-4765 Remove support for Helium/Levyx data sources in WiredTiger.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 07, 2019 at 13:43 GMT",
        "updated_at": "Wednesday May 08, 2019 at 03:11 GMT",
        "closed_at": "Wednesday May 08, 2019 at 03:11 GMT",
        "merged_at": "Wednesday May 08, 2019 at 03:11 GMT"
    },
    {
        "key": null,
        "number": 4616,
        "state": "closed",
        "title": "Debug against log format branch",
        "body": "@michaelcahill and @dgottlieb this branch is (clearly) not for merge. But I applied Michael's changes to the 4712 branch with the log format change so that it is easier to see commits to non-logged tables and added some log printf calls to see where they fall in the stream of operations. There are a few changes to `test/checkpoint` as well:\r\n* I've made the key format always 'S' for easier printlog viewing.\r\n* I modified the test `verify` function to keep going after it hits a mismatch error so that we can see all of the errors not just the first one.",
        "base_ref": "wt-4712-logdiag",
        "created_at": "Tuesday May 07, 2019 at 13:18 GMT",
        "updated_at": "Thursday May 09, 2019 at 16:25 GMT",
        "closed_at": "Thursday May 09, 2019 at 16:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4643",
        "number": 4615,
        "state": "closed",
        "title": "Revert \"WT-4643 Stable timestamp can move past durable timestamp of active txns\"",
        "body": "Reverts wiredtiger/wiredtiger#4595",
        "base_ref": "develop",
        "created_at": "Tuesday May 07, 2019 at 01:38 GMT",
        "updated_at": "Tuesday May 21, 2019 at 22:50 GMT",
        "closed_at": "Tuesday May 07, 2019 at 01:38 GMT",
        "merged_at": "Tuesday May 07, 2019 at 01:38 GMT"
    },
    {
        "key": "WT-4764",
        "number": 4614,
        "state": "closed",
        "title": "WT-4764 format shouldn't select a transaction frequency of 0.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 06, 2019 at 20:12 GMT",
        "updated_at": "Monday May 06, 2019 at 21:03 GMT",
        "closed_at": "Monday May 06, 2019 at 21:02 GMT",
        "merged_at": "Monday May 06, 2019 at 21:02 GMT"
    },
    {
        "key": "WT-4759",
        "number": 4613,
        "state": "closed",
        "title": "WT-4759 Save a copy when an old overflow value is discarded.",
        "body": "Reverts part of ace6f599762486eaf980d45c2337fce4660d5180 from WT-4352.",
        "base_ref": "develop",
        "created_at": "Monday May 06, 2019 at 04:56 GMT",
        "updated_at": "Monday May 06, 2019 at 17:15 GMT",
        "closed_at": "Monday May 06, 2019 at 17:15 GMT",
        "merged_at": "Monday May 06, 2019 at 17:15 GMT"
    },
    {
        "key": "WT-3929",
        "number": 4612,
        "state": "closed",
        "title": "WT-3929 Fix \"pip install\" to work with Python3.",
        "body": "- avoid the use of relative imports, it doesn't work well with\r\n  installed packages.\r\n- introduce packutil.py, to remove a circular dependency that causes\r\n  trouble with installed packages.\r\n- minor changes to setup_pip.py for Python3.\r\n- add a new library directory to check for standard compression libs.",
        "base_ref": "develop",
        "created_at": "Monday May 06, 2019 at 03:02 GMT",
        "updated_at": "Sunday May 12, 2019 at 22:56 GMT",
        "closed_at": "Sunday May 12, 2019 at 22:56 GMT",
        "merged_at": "Sunday May 12, 2019 at 22:56 GMT"
    },
    {
        "key": "WT-4756",
        "number": 4611,
        "state": "closed",
        "title": "WT-4756 Fix a comment in integer packing/unpacking code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 05, 2019 at 19:34 GMT",
        "updated_at": "Monday May 06, 2019 at 02:53 GMT",
        "closed_at": "Monday May 06, 2019 at 02:52 GMT",
        "merged_at": "Monday May 06, 2019 at 02:52 GMT"
    },
    {
        "key": "WT-4733",
        "number": 4610,
        "state": "closed",
        "title": "WT-4733 change format to do longer-term repeatable read testing",
        "body": "@michaelcahill, I believe this branch has all of your changes from #4594.",
        "base_ref": "develop",
        "created_at": "Friday May 03, 2019 at 23:13 GMT",
        "updated_at": "Wednesday Jun 26, 2019 at 05:43 GMT",
        "closed_at": "Wednesday Jun 26, 2019 at 05:43 GMT",
        "merged_at": "Wednesday Jun 26, 2019 at 05:43 GMT"
    },
    {
        "key": "WT-4352",
        "number": 4609,
        "state": "closed",
        "title": "WT-4352 Resolve birthmarks during eviction in more cases.",
        "body": "Previously, we would resolve birthmarks for lookaside eviction, and in some other cases (e.g., when overwriting an overflow value).  In particular, we didn't resolve birthmarks during \"scrub\" eviction, where a new disk image is calculated but kept in cache along with active updates.\r\n\r\nSince birthmarks assign version information to on-page data, they should be resolved as part of any eviction that saves updates and overwrites the previous on-page value.",
        "base_ref": "develop",
        "created_at": "Friday May 03, 2019 at 08:37 GMT",
        "updated_at": "Sunday May 05, 2019 at 19:59 GMT",
        "closed_at": "Sunday May 05, 2019 at 19:59 GMT",
        "merged_at": "Sunday May 05, 2019 at 19:59 GMT"
    },
    {
        "key": "WT-4669",
        "number": 4608,
        "state": "closed",
        "title": "WT-4669 Convert operation tracking logs to t2 format.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 23:45 GMT",
        "updated_at": "Tuesday May 07, 2019 at 23:54 GMT",
        "closed_at": "Tuesday May 07, 2019 at 23:54 GMT",
        "merged_at": "Tuesday May 07, 2019 at 23:54 GMT"
    },
    {
        "key": "WT-4670",
        "number": 4607,
        "state": "closed",
        "title": "WT-4670 Remove support for WiredTiger LevelDB APIs",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 21:35 GMT",
        "updated_at": "Monday May 06, 2019 at 13:54 GMT",
        "closed_at": "Monday May 06, 2019 at 13:54 GMT",
        "merged_at": "Monday May 06, 2019 at 13:54 GMT"
    },
    {
        "key": "WT-4728",
        "number": 4606,
        "state": "closed",
        "title": "WT-4728 remove the stop timestamp from the WT_UPDATE structure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 20:47 GMT",
        "updated_at": "Friday May 03, 2019 at 00:40 GMT",
        "closed_at": "Friday May 03, 2019 at 00:40 GMT",
        "merged_at": "Friday May 03, 2019 at 00:40 GMT"
    },
    {
        "key": null,
        "number": 4605,
        "state": "closed",
        "title": "Add Michael's debugging to the log printf branch. Turn on diagnostic",
        "body": "@michaelcahill Here's your branch merged against my diagnostic/log printf branch with the additional calls in where the btree fields are updated and diagnostic turned on in test/checkpoint.",
        "base_ref": "wt-4712-logprintf-only",
        "created_at": "Thursday May 02, 2019 at 20:31 GMT",
        "updated_at": "Thursday May 09, 2019 at 16:19 GMT",
        "closed_at": "Thursday May 09, 2019 at 16:19 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4755",
        "number": 4604,
        "state": "closed",
        "title": "WT-4755 switch to a better timestamp and transaction ID ordering convention",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 19:51 GMT",
        "updated_at": "Sunday May 05, 2019 at 20:05 GMT",
        "closed_at": "Sunday May 05, 2019 at 20:05 GMT",
        "merged_at": "Sunday May 05, 2019 at 20:05 GMT"
    },
    {
        "key": "WT-4754",
        "number": 4603,
        "state": "closed",
        "title": "WT-4754 change the checkpoint code to not require a list order.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 15:38 GMT",
        "updated_at": "Thursday May 02, 2019 at 16:27 GMT",
        "closed_at": "Thursday May 02, 2019 at 16:27 GMT",
        "merged_at": "Thursday May 02, 2019 at 16:27 GMT"
    },
    {
        "key": "WT-4753",
        "number": 4602,
        "state": "closed",
        "title": "WT-4753 timing_stress configuration options should be stripped from the base configuration file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 15:16 GMT",
        "updated_at": "Thursday May 02, 2019 at 16:20 GMT",
        "closed_at": "Thursday May 02, 2019 at 16:20 GMT",
        "merged_at": "Thursday May 02, 2019 at 16:20 GMT"
    },
    {
        "key": "WT-4752",
        "number": 4601,
        "state": "closed",
        "title": "WT-4752 WiredTiger autoconfig check for the compiler incorrectly quoted",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 15:01 GMT",
        "updated_at": "Thursday May 02, 2019 at 16:19 GMT",
        "closed_at": "Thursday May 02, 2019 at 16:19 GMT",
        "merged_at": "Thursday May 02, 2019 at 16:19 GMT"
    },
    {
        "key": "WT-4751",
        "number": 4600,
        "state": "closed",
        "title": "WT-4751 __wt_timestamp_to_string can return a pointer to simplify verbose message handling",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 14:49 GMT",
        "updated_at": "Thursday May 02, 2019 at 15:49 GMT",
        "closed_at": "Thursday May 02, 2019 at 15:49 GMT",
        "merged_at": "Thursday May 02, 2019 at 15:49 GMT"
    },
    {
        "key": "WT-4750",
        "number": 4599,
        "state": "closed",
        "title": "WT-4750 Improve coverage of sweep, lookaside with consistency checking",
        "body": "Make worker threads periodically pause and close cursors so that sweep has a chance to run.  Sweep is supposed to only close handles after all of the changes are on disk and the history is no longer needed, so this should have no effect on consistency.",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 06:47 GMT",
        "updated_at": "Friday May 17, 2019 at 01:26 GMT",
        "closed_at": "Friday May 17, 2019 at 01:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4726",
        "number": 4598,
        "state": "closed",
        "title": "WT-4726 Set up pull request tester to run with Python3 in evergreen",
        "body": "Set up evergreen.yml to run unit tests (Python test suite) with Python3. A new build variant `Ubuntu 14.04 (Python3)` is created, reusing most of existing evergreen variant/task configuration for unit/python tests, by abstracting the difference out into variant expansions. Unit tests are split into 8 buckets so that they can run in parallel to minimise the makespan of the build variant. \r\n\r\nThe evergreen patch build turned green:\r\nhttps://evergreen.mongodb.com/version/5cca63242fbabe450dbbaeeb\r\n\r\nIn order to turn on the new Python3 tests (build variant) as pull request tester, an evergreen project configuration update is needed. We can turn it on once this evergreen configuration change is merged. \r\n",
        "base_ref": "develop",
        "created_at": "Thursday May 02, 2019 at 04:33 GMT",
        "updated_at": "Thursday May 02, 2019 at 13:21 GMT",
        "closed_at": "Thursday May 02, 2019 at 13:21 GMT",
        "merged_at": "Thursday May 02, 2019 at 13:21 GMT"
    },
    {
        "key": "WT-4723",
        "number": 4597,
        "state": "closed",
        "title": "WT-4723 Restructure the reconciliation code",
        "body": "@agorrod, here's my attempt at splitting up the reconciliation code. The result:\r\n```\r\n LOC     Name                    Function\r\n 199     rec_dictionary.c        Leaf-page dictionary value lookup\r\n 317     reconcile.h             Shared #defines, structures\r\n 319     reconcile.i             Shared inline functions\r\n 329     rec_child.c             Internal page child WT_REF handling\r\n 500     rec_visibility.c        Update/visibility window code\r\n 602     rec_track.c             Overflow tracking (unchanged)\r\n1111     rec_row.c               Row-store reconciliation\r\n1255     rec_col.c               Column-store reconciliation\r\n2655     rec_write.c             Shared reconciliation code\r\n                                    (mostly initialization, split management, tear-down)\r\n\r\n7287 total  \r\n```\r\n\r\nThe first 2 commits (175b8fb and 8cbafe7) are similar to what you did in the last branch, except I didn't put the `WT_CELL` information into `reconcile.h`, I put that work into a new file, `cell.h`. (I feel pretty strongly the cell information should not be included in `reconcile.h`, cells are verified and read as well as written, they aren't limited to reconciliation.)\r\n\r\nThe next commit (444d977), splits out the dictionary lookup code, I don't expect that to be controversial.\r\n\r\nThe next commit (056ffb8), is just some minor cleanup.\r\n\r\nThe final commit (f6a481c), is a big change, it splits the row- and column-store reconciliation out  into their own files.\r\n\r\nIt's arguably better than what we have -- there's no way we can argue these files are modular, but at least it's a step in a better direction.",
        "base_ref": "develop",
        "created_at": "Wednesday May 01, 2019 at 14:49 GMT",
        "updated_at": "Thursday May 02, 2019 at 14:01 GMT",
        "closed_at": "Thursday May 02, 2019 at 14:01 GMT",
        "merged_at": "Thursday May 02, 2019 at 14:01 GMT"
    },
    {
        "key": "WT-4749",
        "number": 4596,
        "state": "closed",
        "title": "WT-4749 Fix error case for prepare_transaction",
        "body": "- fixed reference to uninitialized variable.\r\n- removed stray spaces from messages.",
        "base_ref": "develop",
        "created_at": "Wednesday May 01, 2019 at 13:50 GMT",
        "updated_at": "Wednesday May 01, 2019 at 22:40 GMT",
        "closed_at": "Wednesday May 01, 2019 at 22:39 GMT",
        "merged_at": "Wednesday May 01, 2019 at 22:39 GMT"
    },
    {
        "key": "WT-4643",
        "number": 4595,
        "state": "closed",
        "title": "WT-4643 Stable timestamp can move past durable timestamp of active txns",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 01, 2019 at 04:41 GMT",
        "updated_at": "Monday May 27, 2019 at 00:51 GMT",
        "closed_at": "Monday May 06, 2019 at 06:35 GMT",
        "merged_at": "Monday May 06, 2019 at 06:35 GMT"
    },
    {
        "key": "WT-4738",
        "number": 4594,
        "state": "closed",
        "title": "WT-4738 Tighten rules around use of timestamps.",
        "body": "* Check (in diagnostic mode, as per docs) that commit timestamps are after any active readers.\r\n* Make the prepare check also diagnostic-only.\r\n* Require snapshot isolation when timestamps are set (because lower isolation levels allow out-of-order commits to the same key).\r\n* Update tests to comply with these rules.",
        "base_ref": "develop",
        "created_at": "Wednesday May 01, 2019 at 03:20 GMT",
        "updated_at": "Sunday May 05, 2019 at 23:46 GMT",
        "closed_at": "Sunday May 05, 2019 at 23:45 GMT",
        "merged_at": "Sunday May 05, 2019 at 23:45 GMT"
    },
    {
        "key": "WT-4745",
        "number": 4593,
        "state": "closed",
        "title": "WT-4745 Update upgrading doc for 3.2.0 WiredTiger release",
        "body": "The changes of below tickets were identified to worth a description in the upgrading doc, which had been covered by the WT tickets. Just need to replace 3.1.1 with 3.2.0 since we decided to use 3.2.0 as the new release version. \r\n- WT-4192 Remove WiredTiger raw compression support\r\n- WT-4427 Make WiredTiger timestamps always on and 8 bytes\r\n- WT-4193 Make WT_CURSOR.modify require explicit transactions\r\n\r\nPlease note WT-4283 (together with WT-4156) introduced a new top level API (salvage), which did not exist in the previous WT release 3.1.0. Won't mention it in the upgrading doc, instead will cover it in the release note. \r\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 01, 2019 at 01:23 GMT",
        "updated_at": "Wednesday May 01, 2019 at 01:57 GMT",
        "closed_at": "Wednesday May 01, 2019 at 01:57 GMT",
        "merged_at": "Wednesday May 01, 2019 at 01:57 GMT"
    },
    {
        "key": "WT-4748",
        "number": 4592,
        "state": "closed",
        "title": "WT-4748 internal eviction flag handling could be simplified",
        "body": "@michaelcahill, would you comment on whether or not  you like this change?\r\n\r\nWhen I was reviewing Don's changes for WT-4690, I thought about simplifying our eviction flag handling and this is the result.\r\n\r\nThe root change is to not pass `WT_READ_XXX` flags to the `__wt_page_release()` and `__wt_page_release_evict()` functions, replacing the flag handling from there down through `__wt_evict() and `__evict_review()` with boolean arguments.\r\n\r\nI can think of reasons this is a bad idea:\r\n\r\n* We might want to pay attention to additional `WT_READ_XXX` flags in the eviction code in the future, as we have in the past, and we'd have to go back to passing the read flags through the `__wt_page_release` calls.\r\n* If someone adds `WT_READ_NO_SPLIT` to a tree-walk flag set in the future, they can't rely on that automatically being passed through to eviction, they'll need to pay attention to the `__wt_page_release` calls, so this change might be an invitation to add a subtle bug.\r\n\r\nThere were two places we passed the `WT_READ_NO_EVICT` flags to `__wt_page_release()`, and I can't see that was having any effect at all.\r\n\r\nAnyway, don't hesitate to discard this change without further discussion if this isn't a way you want to go.\r\n\r\n@ddanderson, if Michael approves the change, can you please do the review?\r\n\r\nIn eb0e8b0 I replaced the two flags you added with two booleans -- I don't feel strongly about that change, feel free to discard that change if you prefer the flags.\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 30, 2019 at 20:34 GMT",
        "updated_at": "Wednesday May 01, 2019 at 11:38 GMT",
        "closed_at": "Wednesday May 01, 2019 at 11:38 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4688",
        "number": 4591,
        "state": "closed",
        "title": "WT-4688 Fix test and docs for correct log cursor usage.",
        "body": "@ddanderson can you review the test changes.\r\n@keithbostic can you review the doc changes. The doc heavily in this area 5 years ago by you and it appears it was not part of any PR or issue that I could find. Some of the content was not really accurate which I have tried to fix.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 30, 2019 at 17:45 GMT",
        "updated_at": "Monday May 06, 2019 at 16:05 GMT",
        "closed_at": "Monday May 06, 2019 at 16:04 GMT",
        "merged_at": "Monday May 06, 2019 at 16:04 GMT"
    },
    {
        "key": "WT-4746",
        "number": 4590,
        "state": "closed",
        "title": "WT-4746 Document that transactions without timestamps clear history.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 30, 2019 at 16:23 GMT",
        "updated_at": "Wednesday May 01, 2019 at 11:52 GMT",
        "closed_at": "Wednesday May 01, 2019 at 11:52 GMT",
        "merged_at": "Wednesday May 01, 2019 at 11:52 GMT"
    },
    {
        "key": "WT-4725",
        "number": 4589,
        "state": "closed",
        "title": "WT-4725 Fix miscellaneous scripts to work with Python3.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 30, 2019 at 14:43 GMT",
        "updated_at": "Thursday May 02, 2019 at 15:23 GMT",
        "closed_at": "Wednesday May 01, 2019 at 04:43 GMT",
        "merged_at": "Wednesday May 01, 2019 at 04:43 GMT"
    },
    {
        "key": "WT-4687",
        "number": 4588,
        "state": "closed",
        "title": "WT-4687 Querying all_committed shouldn't get timestamp zero. (v4.0 backport)",
        "body": "(cherry picked from commit 7e4c7c40759472df628cad74c68f4bb2df1b51f0)\r\n\r\nThis is a clean cherry-pick.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Apr 30, 2019 at 05:55 GMT",
        "updated_at": "Wednesday May 01, 2019 at 00:03 GMT",
        "closed_at": "Wednesday May 01, 2019 at 00:03 GMT",
        "merged_at": "Wednesday May 01, 2019 at 00:03 GMT"
    },
    {
        "key": "WT-4278",
        "number": 4587,
        "state": "closed",
        "title": "WT-4278 Add documentation to clarify transactionality of certain wt s\u2026",
        "body": "\u2026ession api calls",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 30, 2019 at 04:00 GMT",
        "updated_at": "Friday May 03, 2019 at 02:00 GMT",
        "closed_at": "Friday May 03, 2019 at 02:00 GMT",
        "merged_at": "Friday May 03, 2019 at 02:00 GMT"
    },
    {
        "key": "WT-4690",
        "number": 4586,
        "state": "closed",
        "title": "WT-4690 During checkpoints, make sure eviction does not split.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Apr 28, 2019 at 23:17 GMT",
        "updated_at": "Tuesday Apr 30, 2019 at 19:08 GMT",
        "closed_at": "Tuesday Apr 30, 2019 at 19:08 GMT",
        "merged_at": "Tuesday Apr 30, 2019 at 19:08 GMT"
    },
    {
        "key": "WT-4582",
        "number": 4585,
        "state": "closed",
        "title": "WT-4582 Respect prepared updates in lookaside",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 26, 2019 at 04:06 GMT",
        "updated_at": "Monday Apr 29, 2019 at 05:54 GMT",
        "closed_at": "Monday Apr 29, 2019 at 05:54 GMT",
        "merged_at": "Monday Apr 29, 2019 at 05:54 GMT"
    },
    {
        "key": "WT-4712",
        "number": 4584,
        "state": "closed",
        "title": "WT-4712 A version of diagnostics that only uses log_printf.",
        "body": "@dgottlieb @agorrod and @michaelcahill Here's a different approach that uses only log printf.\r\n\r\nIt does suffer from the issues I mentioned in the ticket about using this approach in that all the individual operations are sprinkled throughout the log. I did add an in-message LSN to allow manual walking backward, but it is not easy.\r\n\r\nHowever, this does not change or introduce any new log records. So it is fully compatible to backport to 4.0 or any earlier release. Let me know what you think.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 24, 2019 at 18:04 GMT",
        "updated_at": "Wednesday May 15, 2019 at 16:08 GMT",
        "closed_at": "Wednesday May 15, 2019 at 16:08 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4309",
        "number": 4583,
        "state": "closed",
        "title": "WT-4309 Increase the maximum expected LAS test reads",
        "body": "From my reading of the comment above, the failing assertion is a ballpark figure to ensure that the number of LAS reads is not out of control. The two test failures I've been able to inspect (the remaining ones have had their logs cleared) have failed with LAS reads of `120`, `130` and `166`. So `200` seems safe to me.\r\n\r\n@michaelcahill \r\n- How did we arrive at `100` to begin with?\r\n- Do you think that `200` is still tight enough to be a useful assertion? Or do you feel that this is unreasonably high.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 24, 2019 at 08:17 GMT",
        "updated_at": "Monday Apr 29, 2019 at 03:23 GMT",
        "closed_at": "Monday Apr 29, 2019 at 03:21 GMT",
        "merged_at": "Monday Apr 29, 2019 at 03:21 GMT"
    },
    {
        "key": "WT-4647",
        "number": 4582,
        "state": "closed",
        "title": " WT-4647 Avoid splitting words when wrapping lines in wiredtiger.in",
        "body": "To fit lines within 80 chars, we allow line splits after a set of\r\nnon-breaking space indicators.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 23, 2019 at 19:16 GMT",
        "updated_at": "Friday Apr 26, 2019 at 05:25 GMT",
        "closed_at": "Wednesday Apr 24, 2019 at 01:47 GMT",
        "merged_at": "Wednesday Apr 24, 2019 at 01:47 GMT"
    },
    {
        "key": "WT-4706",
        "number": 4581,
        "state": "closed",
        "title": "WT-4706 Add a statistic to track the lookaside table size",
        "body": "This PR is adding a new `lookaside_bytes` connection level statistic to track the size of the lookaside file.\r\nI do this by inspecting the underlying block manager's `size`. ",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 23, 2019 at 06:16 GMT",
        "updated_at": "Friday Apr 26, 2019 at 03:21 GMT",
        "closed_at": "Friday Apr 26, 2019 at 03:20 GMT",
        "merged_at": "Friday Apr 26, 2019 at 03:20 GMT"
    },
    {
        "key": "WT-4693",
        "number": 4580,
        "state": "closed",
        "title": "WT-4693 v3.6 Backport",
        "body": "\u2026e downgraded. (#4546)\r\n\r\n(cherry picked from commit b16d36ef0932a36ebcae950ef68e873f0514d5f8)",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Apr 23, 2019 at 05:57 GMT",
        "updated_at": "Tuesday Apr 23, 2019 at 22:39 GMT",
        "closed_at": "Tuesday Apr 23, 2019 at 22:00 GMT",
        "merged_at": "Tuesday Apr 23, 2019 at 22:00 GMT"
    },
    {
        "key": "WT-4693",
        "number": 4579,
        "state": "closed",
        "title": "WT-4693 v4.0 backport",
        "body": "\u2026e downgraded. (#4546)\r\n\r\n(cherry picked from commit b16d36ef0932a36ebcae950ef68e873f0514d5f8)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Apr 23, 2019 at 05:54 GMT",
        "updated_at": "Tuesday Apr 23, 2019 at 22:39 GMT",
        "closed_at": "Tuesday Apr 23, 2019 at 21:55 GMT",
        "merged_at": "Tuesday Apr 23, 2019 at 21:55 GMT"
    },
    {
        "key": "WT-4717",
        "number": 4578,
        "state": "closed",
        "title": "WT-4717 Remove usages of \"round_to_oldest\" configuration",
        "body": "Coverity was complaining about the invocation in `txn_timestamp.c` due to not reading the value of `ret`. This configuration was removed as part of #4550, so I believe the correct solution is to just remove all references to this config item.",
        "base_ref": "develop",
        "created_at": "Sunday Apr 21, 2019 at 10:30 GMT",
        "updated_at": "Monday Apr 22, 2019 at 23:59 GMT",
        "closed_at": "Monday Apr 22, 2019 at 21:40 GMT",
        "merged_at": "Monday Apr 22, 2019 at 21:40 GMT"
    },
    {
        "key": "WT-4731",
        "number": 4577,
        "state": "closed",
        "title": "WT-4731 Add new retries to the checkpoint integrity test.",
        "body": "If the test fails to find a range to run a valid test,\r\nissue a warning, flag it as a soft (retryable) error, and rerun the\r\nentire test so that a new calibration for the range is done.\r\nOnly if that process fails repeated efforts do we abort the test.",
        "base_ref": "develop",
        "created_at": "Friday Apr 19, 2019 at 18:21 GMT",
        "updated_at": "Tuesday Apr 23, 2019 at 00:16 GMT",
        "closed_at": "Tuesday Apr 23, 2019 at 00:16 GMT",
        "merged_at": "Tuesday Apr 23, 2019 at 00:16 GMT"
    },
    {
        "key": "WT-4697",
        "number": 4576,
        "state": "closed",
        "title": "WT-4697 Fixes to workgen and runner scripts to work with Python3",
        "body": "- fix integer division, print, and exception syntax\r\n- fix \"FrozenClass\" implementation for Python3\r\n- added comments for usage of extensions_config.\r\n- in runner scripts, use new property sample_interval_ms of Workload\r\n  (corresponding to a previous workgen change).",
        "base_ref": "develop",
        "created_at": "Thursday Apr 18, 2019 at 11:13 GMT",
        "updated_at": "Monday Apr 29, 2019 at 20:48 GMT",
        "closed_at": "Monday Apr 29, 2019 at 14:25 GMT",
        "merged_at": "Monday Apr 29, 2019 at 14:25 GMT"
    },
    {
        "key": "WT-4732",
        "number": 4575,
        "state": "closed",
        "title": "WT-4732 Eviction walk should pick dhandles randomly",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 17, 2019 at 15:03 GMT",
        "updated_at": "Friday May 24, 2019 at 03:40 GMT",
        "closed_at": "Friday May 24, 2019 at 03:40 GMT",
        "merged_at": "Friday May 24, 2019 at 03:40 GMT"
    },
    {
        "key": "WT-4631",
        "number": 4574,
        "state": "closed",
        "title": "WT-4631 Always clear the read timestamp for transactions (#4528)",
        "body": "Set the read timestamp to WT_TS_NONE during transaction cleanup - to avoid reuse in the future.\r\n\r\n(cherry picked from commit ecbe60ef4f5b4e48898ed54554471bf86a879aa7)",
        "base_ref": "mongodb-4.0",
        "created_at": "Wednesday Apr 17, 2019 at 05:23 GMT",
        "updated_at": "Thursday Apr 18, 2019 at 06:36 GMT",
        "closed_at": "Thursday Apr 18, 2019 at 05:56 GMT",
        "merged_at": "Thursday Apr 18, 2019 at 05:56 GMT"
    },
    {
        "key": "WT-4450",
        "number": 4573,
        "state": "closed",
        "title": "WT-4450 Implementing python test for timestamping updates in the future",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 17, 2019 at 04:33 GMT",
        "updated_at": "Thursday Apr 18, 2019 at 06:36 GMT",
        "closed_at": "Thursday Apr 18, 2019 at 04:46 GMT",
        "merged_at": "Thursday Apr 18, 2019 at 04:46 GMT"
    },
    {
        "key": "WT-4712",
        "number": 4572,
        "state": "closed",
        "title": "WT-4712 Add diagnostic logging.",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 16, 2019 at 17:46 GMT",
        "updated_at": "Thursday May 23, 2019 at 18:12 GMT",
        "closed_at": "Thursday May 23, 2019 at 18:12 GMT",
        "merged_at": "Thursday May 23, 2019 at 18:12 GMT"
    },
    {
        "key": "WT-4732",
        "number": 4571,
        "state": "closed",
        "title": "WT-4732 Remove the bias from the eviction policy on the dhandle order",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 16, 2019 at 13:33 GMT",
        "updated_at": "Monday May 20, 2019 at 01:26 GMT",
        "closed_at": "Monday May 20, 2019 at 01:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4721",
        "number": 4570,
        "state": "closed",
        "title": "WT-4721 Add verbose output for failures in the wt2853_perf test.",
        "body": "This is helpful since failures may naturally occur with slow machines.",
        "base_ref": "develop",
        "created_at": "Monday Apr 15, 2019 at 19:08 GMT",
        "updated_at": "Tuesday Apr 16, 2019 at 15:27 GMT",
        "closed_at": "Tuesday Apr 16, 2019 at 15:27 GMT",
        "merged_at": "Tuesday Apr 16, 2019 at 15:27 GMT"
    },
    {
        "key": "WT-4724",
        "number": 4569,
        "state": "closed",
        "title": "WT-4724 Use /bin/bash for the script.",
        "body": "@ddanderson Please review this tiny change to use `bash` for this shell script instead of whatever system's default `sh`. The other scripts in the `runners` directory already did the same.",
        "base_ref": "develop",
        "created_at": "Monday Apr 15, 2019 at 15:23 GMT",
        "updated_at": "Monday Apr 15, 2019 at 17:57 GMT",
        "closed_at": "Monday Apr 15, 2019 at 17:57 GMT",
        "merged_at": "Monday Apr 15, 2019 at 17:57 GMT"
    },
    {
        "key": "WT-4723",
        "number": 4568,
        "state": "closed",
        "title": "WT-4723 Split rec_write.c into different files",
        "body": "Move the structure definitions into reconcile.h\r\nAdd a new rec_visibility.c that contains rec_upd_select.",
        "base_ref": "develop",
        "created_at": "Monday Apr 15, 2019 at 06:10 GMT",
        "updated_at": "Wednesday May 01, 2019 at 12:01 GMT",
        "closed_at": "Wednesday May 01, 2019 at 12:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4575",
        "number": 4567,
        "state": "closed",
        "title": "WT-4575 Review usages of __wt_errx vs __wt_err",
        "body": "I did a quick review of places where we use `__wt_errx` and switched them over to `__wt_err` and supplied an error code when applicable.",
        "base_ref": "develop",
        "created_at": "Monday Apr 15, 2019 at 02:24 GMT",
        "updated_at": "Tuesday Apr 16, 2019 at 04:46 GMT",
        "closed_at": "Tuesday Apr 16, 2019 at 04:44 GMT",
        "merged_at": "Tuesday Apr 16, 2019 at 04:44 GMT"
    },
    {
        "key": "WT-4642",
        "number": 4566,
        "state": "closed",
        "title": "WT-4642 Store transaction IDs durably.",
        "body": "This is the first set of changes for WT-4642, adding start/stop transactions to the on-leaf-page values. I think it's straight-forward, things to note:\r\n\r\n* I went with the generic word \"history\" to describe what I'm putting on the page, that is, a set of timestamps and/or transaction IDs are the value's \"history\".\r\n\r\n* I added `WT_TXN_MAX` because comparing a stop transaction to `WT_TXN_ABORTED` seems like it would be difficult to read. I used:\r\n```\r\n#define WT_TXN_MAX      UINT64_MAX      /* End of time */\r\n#define WT_TXN_ABORTED  (UINT64_MAX - 1)/* Update rolled back, ignore. */\r\n```\r\n\r\n* @michaelcahill, I changed the `upd_select` work in `__rec_upd_select()`, and note that it's not modifying the actual `WT_UPDATE` structure.\r\n\r\nLet me know if you disagree with these decisions.",
        "base_ref": "develop",
        "created_at": "Saturday Apr 13, 2019 at 17:07 GMT",
        "updated_at": "Monday Apr 29, 2019 at 00:55 GMT",
        "closed_at": "Monday Apr 29, 2019 at 00:55 GMT",
        "merged_at": "Monday Apr 29, 2019 at 00:55 GMT"
    },
    {
        "key": "WT-4720",
        "number": 4565,
        "state": "closed",
        "title": "WT-4720 Coverity complaint #111697: handle tiny sizes in block manager reads",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 12, 2019 at 19:39 GMT",
        "updated_at": "Tuesday Apr 16, 2019 at 01:47 GMT",
        "closed_at": "Tuesday Apr 16, 2019 at 01:46 GMT",
        "merged_at": "Tuesday Apr 16, 2019 at 01:46 GMT"
    },
    {
        "key": "WT-4698",
        "number": 4564,
        "state": "closed",
        "title": "WT-4698 Fixes for modify tests to work with Python3.",
        "body": "- clear Python error code if we guess wrong on what type we are decoding\r\n- fix malloc failure condition\r\n- fixed modify and calc_modify tests to use bytes type for 'u'\r\n- changed calc_modify test to test both 'u' and 'S' types.",
        "base_ref": "develop",
        "created_at": "Friday Apr 12, 2019 at 14:46 GMT",
        "updated_at": "Monday Apr 15, 2019 at 00:06 GMT",
        "closed_at": "Monday Apr 15, 2019 at 00:06 GMT",
        "merged_at": "Monday Apr 15, 2019 at 00:06 GMT"
    },
    {
        "key": "WT-4714",
        "number": 4563,
        "state": "closed",
        "title": "WT-4714 Use the durable timestamp to determine if a page should stay dirty",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 12, 2019 at 03:55 GMT",
        "updated_at": "Tuesday Apr 16, 2019 at 00:16 GMT",
        "closed_at": "Tuesday Apr 16, 2019 at 00:16 GMT",
        "merged_at": "Tuesday Apr 16, 2019 at 00:16 GMT"
    },
    {
        "key": "WT-4699",
        "number": 4562,
        "state": "closed",
        "title": "WT-4699 Save a copy of column list for JSON dump.",
        "body": "Added a test showing the original problem.",
        "base_ref": "develop",
        "created_at": "Friday Apr 12, 2019 at 02:15 GMT",
        "updated_at": "Monday Apr 15, 2019 at 14:33 GMT",
        "closed_at": "Monday Apr 15, 2019 at 14:33 GMT",
        "merged_at": "Monday Apr 15, 2019 at 14:33 GMT"
    },
    {
        "key": "WT-4707",
        "number": 4561,
        "state": "closed",
        "title": "WT-4707 Failure in verifying cells with copied values.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 10, 2019 at 16:35 GMT",
        "updated_at": "Thursday Apr 11, 2019 at 00:00 GMT",
        "closed_at": "Thursday Apr 11, 2019 at 00:00 GMT",
        "merged_at": "Thursday Apr 11, 2019 at 00:00 GMT"
    },
    {
        "key": "WT-4696",
        "number": 4560,
        "state": "closed",
        "title": "WT-4696 Upgrade dist scripts to Python3",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 10, 2019 at 15:30 GMT",
        "updated_at": "Wednesday Apr 10, 2019 at 23:18 GMT",
        "closed_at": "Wednesday Apr 10, 2019 at 23:18 GMT",
        "merged_at": "Wednesday Apr 10, 2019 at 23:18 GMT"
    },
    {
        "key": "WT-4704",
        "number": 4559,
        "state": "closed",
        "title": "WT-4704 Add statistic tracking oldest active read timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 10, 2019 at 04:57 GMT",
        "updated_at": "Friday Apr 12, 2019 at 03:28 GMT",
        "closed_at": "Friday Apr 12, 2019 at 03:28 GMT",
        "merged_at": "Friday Apr 12, 2019 at 03:28 GMT"
    },
    {
        "key": "WT-4711",
        "number": 4558,
        "state": "closed",
        "title": "WT-4711 Dist tools should ignore generated file wiredtiger.py.",
        "body": "Fixed error in fixlinks, called by pyfilter.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 09, 2019 at 18:19 GMT",
        "updated_at": "Wednesday Apr 10, 2019 at 06:21 GMT",
        "closed_at": "Wednesday Apr 10, 2019 at 06:21 GMT",
        "merged_at": "Wednesday Apr 10, 2019 at 06:21 GMT"
    },
    {
        "key": "WT-4598",
        "number": 4557,
        "state": "closed",
        "title": "WT-4598 Enable durable timestamp assertions.",
        "body": "Enabled durable timestamp assertions. ",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 09, 2019 at 04:15 GMT",
        "updated_at": "Friday Apr 12, 2019 at 05:56 GMT",
        "closed_at": "Friday Apr 12, 2019 at 05:56 GMT",
        "merged_at": "Friday Apr 12, 2019 at 05:56 GMT"
    },
    {
        "key": "WT-4709",
        "number": 4556,
        "state": "closed",
        "title": "WT-4709 Add collection-like shadow table to timestamp_abort.",
        "body": "Not For Merge yet.",
        "base_ref": "develop",
        "created_at": "Monday Apr 08, 2019 at 20:51 GMT",
        "updated_at": "Thursday Apr 18, 2019 at 17:37 GMT",
        "closed_at": "Thursday Apr 18, 2019 at 17:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4317",
        "number": 4555,
        "state": "closed",
        "title": "WT-4317 Remove portion of test not guaranteed to work with salvage.",
        "body": "Also code movement to refactor zero'ing part of a file into fs code.",
        "base_ref": "develop",
        "created_at": "Monday Apr 08, 2019 at 19:33 GMT",
        "updated_at": "Tuesday Apr 09, 2019 at 13:55 GMT",
        "closed_at": "Tuesday Apr 09, 2019 at 12:45 GMT",
        "merged_at": "Tuesday Apr 09, 2019 at 12:45 GMT"
    },
    {
        "key": "WT-4700",
        "number": 4554,
        "state": "closed",
        "title": "WT-4700 Python3: use the Python version to build from a single source with Python2/Python3.",
        "body": "Builds using whatever the current python is.  On *nix, uses the python found in configuration; on Windows, uses the python used to run SConstruct.",
        "base_ref": "develop",
        "created_at": "Monday Apr 08, 2019 at 18:31 GMT",
        "updated_at": "Tuesday Apr 09, 2019 at 01:14 GMT",
        "closed_at": "Tuesday Apr 09, 2019 at 01:14 GMT",
        "merged_at": "Tuesday Apr 09, 2019 at 01:14 GMT"
    },
    {
        "key": "WT-4708",
        "number": 4553,
        "state": "closed",
        "title": "WT-4708 Coverity reported copy-paste error in WiredTiger error message",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 08, 2019 at 16:04 GMT",
        "updated_at": "Tuesday Apr 09, 2019 at 04:22 GMT",
        "closed_at": "Tuesday Apr 09, 2019 at 04:21 GMT",
        "merged_at": "Tuesday Apr 09, 2019 at 04:21 GMT"
    },
    {
        "key": "WT-4705",
        "number": 4552,
        "state": "closed",
        "title": "WT-4705 column-store no longer needs to handle WT_COL page offsets of 0",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 05, 2019 at 16:52 GMT",
        "updated_at": "Wednesday Apr 10, 2019 at 01:14 GMT",
        "closed_at": "Wednesday Apr 10, 2019 at 01:14 GMT",
        "merged_at": "Wednesday Apr 10, 2019 at 01:14 GMT"
    },
    {
        "key": "WT-4703",
        "number": 4551,
        "state": "closed",
        "title": "WT-4703 Extend test/checkpoint to do removes and online checking",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 04, 2019 at 23:05 GMT",
        "updated_at": "Tuesday Apr 09, 2019 at 05:08 GMT",
        "closed_at": "Tuesday Apr 09, 2019 at 05:08 GMT",
        "merged_at": "Tuesday Apr 09, 2019 at 05:08 GMT"
    },
    {
        "key": "WT-4640",
        "number": 4550,
        "state": "closed",
        "title": "WT-4640 Remove round_to_oldest in favour of roundup_timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 04, 2019 at 04:52 GMT",
        "updated_at": "Friday Apr 12, 2019 at 03:41 GMT",
        "closed_at": "Friday Apr 12, 2019 at 03:41 GMT",
        "merged_at": "Friday Apr 12, 2019 at 03:41 GMT"
    },
    {
        "key": "WT-4615",
        "number": 4549,
        "state": "closed",
        "title": "WT-4615 Sync backup file before closing. (v3.4 backport)",
        "body": "(cherry picked from commit b68fbf75c1f73467dcb5cce8eac8de67df89a431)\r\n(cherry picked from commit 9308f8a02c7a3f8cd5e816c7f1e6374d43332db0)\r\n(cherry picked from commit 3291c2cbf682f52c88f1b3394c9a94bd80d6a4d6)",
        "base_ref": "mongodb-3.4",
        "created_at": "Thursday Apr 04, 2019 at 00:12 GMT",
        "updated_at": "Thursday Apr 04, 2019 at 03:53 GMT",
        "closed_at": "Thursday Apr 04, 2019 at 03:52 GMT",
        "merged_at": "Thursday Apr 04, 2019 at 03:52 GMT"
    },
    {
        "key": "WT-4695",
        "number": 4548,
        "state": "closed",
        "title": "WT-4695 Python3: allow most tests to run with Python3 with small changes",
        "body": "The test suite still works as is on Python2. To allow Python3 testing, a change to a SWIG %apply statement must be done. With that modification, all but about 20 tests (that fall under a few categories) run. Those will be fixed in separate tickets for Python3.  But there should be no regressions using Python2, and that remains the default.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 03, 2019 at 18:51 GMT",
        "updated_at": "Monday Apr 08, 2019 at 17:52 GMT",
        "closed_at": "Monday Apr 08, 2019 at 14:13 GMT",
        "merged_at": "Monday Apr 08, 2019 at 14:13 GMT"
    },
    {
        "key": "WT-4652",
        "number": 4547,
        "state": "closed",
        "title": "WT-4652 Return error if no durable timestamp for prepared txn.",
        "body": "1)__wt_txn_commit_timestamp_validate is currently overloaded. It is segregated as two:\r\n          __wt_txn_commit_timestamp_validate_and_roundup\r\n          __wt_txn_durable_timestamp_validate.\r\n2) Return error if durable timestamp is not set for a prepared transaction. Also return error if durable timestamp is set for a non-prepared transaction.\r\n3)Support setting the prepare timestamp through timestamp_transaction API.\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 03, 2019 at 05:22 GMT",
        "updated_at": "Monday Apr 08, 2019 at 03:16 GMT",
        "closed_at": "Monday Apr 08, 2019 at 03:16 GMT",
        "merged_at": "Monday Apr 08, 2019 at 03:16 GMT"
    },
    {
        "key": "WT-4693",
        "number": 4546,
        "state": "closed",
        "title": "WT-4693 Allow reconfigure of other settings with open transactions while downgraded.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 02, 2019 at 18:26 GMT",
        "updated_at": "Wednesday Apr 03, 2019 at 20:39 GMT",
        "closed_at": "Wednesday Apr 03, 2019 at 20:39 GMT",
        "merged_at": "Wednesday Apr 03, 2019 at 20:39 GMT"
    },
    {
        "key": "WT-4687",
        "number": 4545,
        "state": "closed",
        "title": "WT-4687 Querying all_committed shouldn't get timestamp zero.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 02, 2019 at 03:43 GMT",
        "updated_at": "Tuesday Apr 02, 2019 at 05:05 GMT",
        "closed_at": "Tuesday Apr 02, 2019 at 05:05 GMT",
        "merged_at": "Tuesday Apr 02, 2019 at 05:05 GMT"
    },
    {
        "key": "WT-4579",
        "number": 4544,
        "state": "closed",
        "title": "WT-4579 Track the newest durable timestamp for each page.",
        "body": "I'm still debugging, but this is the basic shape of the change I expect to merge (there are still some interesting cases around fast-delete I need to solve).",
        "base_ref": "develop",
        "created_at": "Monday Apr 01, 2019 at 22:28 GMT",
        "updated_at": "Thursday Apr 11, 2019 at 07:29 GMT",
        "closed_at": "Thursday Apr 11, 2019 at 07:29 GMT",
        "merged_at": "Thursday Apr 11, 2019 at 07:29 GMT"
    },
    {
        "key": "WT-4324",
        "number": 4543,
        "state": "closed",
        "title": "WT-4324 Ensure checkpoints rewrite pages with data in the future (#4521)",
        "body": "Sometimes we attempt eviction of a page by writing the most recent\r\nversions of updates.  If such a page remains dirty in cache, it must be\r\nvisited by the next checkpoint to make sure the data that appears in the\r\ncheckpoint is a consistent cut of versions.\r\n\r\n(cherry picked from commit d344940895bbf0232ea02e1e56fefac65d1eb2ae)",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Apr 01, 2019 at 03:58 GMT",
        "updated_at": "Monday Apr 01, 2019 at 05:22 GMT",
        "closed_at": "Monday Apr 01, 2019 at 05:22 GMT",
        "merged_at": "Monday Apr 01, 2019 at 05:22 GMT"
    },
    {
        "key": "WT-4639",
        "number": 4542,
        "state": "closed",
        "title": "WT-4639 Use test/format to verify database file portability",
        "body": "This PR is to support wiredtiger database file portability testing across different endian platforms. \r\n- The changes in `evergreen.yml` is used to set up new build variants/tasks infrastructure, and call `./t` program in a for loop to generate wt database files in 10 WT_TEST directories.\r\n- The new script is used to list and dump tables in above generated wt files.\r\n- The evergreen patch build for the changes can be found [here](https://evergreen.mongodb.com/version/5c9df4e4850e610358ee1856).",
        "base_ref": "develop",
        "created_at": "Sunday Mar 31, 2019 at 21:59 GMT",
        "updated_at": "Monday Apr 08, 2019 at 02:04 GMT",
        "closed_at": "Monday Apr 08, 2019 at 02:04 GMT",
        "merged_at": "Monday Apr 08, 2019 at 02:04 GMT"
    },
    {
        "key": "WT-4324",
        "number": 4541,
        "state": "closed",
        "title": "WT-4324 BACKPORT-4.0 Ensure checkpoints rewrite pages with data in the future (#4521)",
        "body": "Sometimes we attempt eviction of a page by writing the most recent\r\nversions of updates.  If such a page remains dirty in cache, it must be\r\nvisited by the next checkpoint to make sure the data that appears in the\r\ncheckpoint is a consistent cut of versions.\r\n\r\n(cherry picked from commit d344940895bbf0232ea02e1e56fefac65d1eb2ae)",
        "base_ref": "mongodb-4.0",
        "created_at": "Sunday Mar 31, 2019 at 21:29 GMT",
        "updated_at": "Sunday Mar 31, 2019 at 23:42 GMT",
        "closed_at": "Sunday Mar 31, 2019 at 23:42 GMT",
        "merged_at": "Sunday Mar 31, 2019 at 23:42 GMT"
    },
    {
        "key": "WT-4623",
        "number": 4540,
        "state": "closed",
        "title": "WT-4623 Remove barriers from transaction ID allocation.",
        "body": "Also try yielding after spinning, evidence suggests this can help on some single-socket servers.",
        "base_ref": "develop",
        "created_at": "Friday Mar 29, 2019 at 06:02 GMT",
        "updated_at": "Monday Apr 15, 2019 at 03:24 GMT",
        "closed_at": "Monday Apr 15, 2019 at 03:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4668",
        "number": 4539,
        "state": "closed",
        "title": "WT-4668 lint",
        "body": "@bvpvamsikrishna, can you please look at c29e5c1?\r\n\r\nJust in case we should be doing something with the `ts` assignment.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 28, 2019 at 19:03 GMT",
        "updated_at": "Sunday Mar 31, 2019 at 21:44 GMT",
        "closed_at": "Sunday Mar 31, 2019 at 21:19 GMT",
        "merged_at": "Sunday Mar 31, 2019 at 21:19 GMT"
    },
    {
        "key": "WT-4614",
        "number": 4538,
        "state": "closed",
        "title": "WT-4614 Trigger sweep immediately to reclaim space after a drop",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 27, 2019 at 00:00 GMT",
        "updated_at": "Wednesday Mar 27, 2019 at 03:23 GMT",
        "closed_at": "Wednesday Mar 27, 2019 at 03:23 GMT",
        "merged_at": "Wednesday Mar 27, 2019 at 03:23 GMT"
    },
    {
        "key": "WT-4636",
        "number": 4537,
        "state": "closed",
        "title": "WT-4636 Fix strace test",
        "body": "There are sort of two fixes rolled into one here as I had to jump through some hoops to fix the issue described in the ticket.\r\n\r\nThe actual Jenkins failure originates from my changes to accomodate Clang Tidy. Clang Tidy recommends that for calls to `open`, that you supply the `O_CLOEXEC` flag which prevents forked processes from inheriting file descriptors from the parent. I think the reasoning for making the change is correct so my fix was to change the expected `strace` output to include the new flag.\r\n\r\nMy original comment about this change is here: https://github.com/wiredtiger/wiredtiger/pull/4501#discussion_r261496029\r\n\r\nThis failure was reproducible on `tinderbox` but locally, I was getting a different failure. On my Ubuntu dev box, `strace` doesn't pick up any `open` calls. After a bit of investigation, I found that newer versions of glibc (later than 2.26) implement `open` in terms of `openat`. So I've modified the test to watch for `openat` calls as well and added some conditionals to let our test know which calls it ought to be expecting.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 26, 2019 at 07:51 GMT",
        "updated_at": "Tuesday Mar 26, 2019 at 11:03 GMT",
        "closed_at": "Tuesday Mar 26, 2019 at 11:03 GMT",
        "merged_at": "Tuesday Mar 26, 2019 at 11:03 GMT"
    },
    {
        "key": "WT-4554",
        "number": 4536,
        "state": "closed",
        "title": "WT-4554 Enhance WT salvage to handle the case of corrupted WiredTiger turtle - Backport 4.0",
        "body": "",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Mar 26, 2019 at 04:05 GMT",
        "updated_at": "Tuesday Mar 26, 2019 at 04:39 GMT",
        "closed_at": "Tuesday Mar 26, 2019 at 04:38 GMT",
        "merged_at": "Tuesday Mar 26, 2019 at 04:38 GMT"
    },
    {
        "key": "WT-4658",
        "number": 4535,
        "state": "closed",
        "title": "WT-4658 Review Clang Format changes",
        "body": "This PR is a preview of what `develop` looks like after applying `s_clang-format`. I've opened this up to review/discuss the changes.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 26, 2019 at 01:51 GMT",
        "updated_at": "Monday Jul 08, 2019 at 10:40 GMT",
        "closed_at": "Friday Jun 14, 2019 at 03:22 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4615",
        "number": 4534,
        "state": "closed",
        "title": "WT-4615 Sync backup file before closing. (v3.6 backport)",
        "body": "(cherry picked from commit b68fbf75c1f73467dcb5cce8eac8de67df89a431)\r\n(cherry picked from commit 9308f8a02c7a3f8cd5e816c7f1e6374d43332db0)\r\n\r\nPlease note `WT_SESSION_BACKUP_CURSOR` was introduced since mongodb-4.0, and the line that sets the session type was removed by git cherry-pick. ",
        "base_ref": "mongodb-3.6",
        "created_at": "Sunday Mar 24, 2019 at 23:32 GMT",
        "updated_at": "Sunday Mar 31, 2019 at 23:37 GMT",
        "closed_at": "Monday Mar 25, 2019 at 00:54 GMT",
        "merged_at": "Monday Mar 25, 2019 at 00:54 GMT"
    },
    {
        "key": "WT-4650",
        "number": 4533,
        "state": "closed",
        "title": "WT-4650 Fix incorrect WT_ASSERT identified by Coverity",
        "body": "This expression would previously always evaluate to `true` meaning that the assertion was not checking anything. I don't have enough context of the surrounding code to understand what is happening here but I deduced what the assertion should be based on the comment above it.",
        "base_ref": "develop",
        "created_at": "Friday Mar 22, 2019 at 06:12 GMT",
        "updated_at": "Monday Mar 25, 2019 at 10:51 GMT",
        "closed_at": "Monday Mar 25, 2019 at 04:48 GMT",
        "merged_at": "Monday Mar 25, 2019 at 04:48 GMT"
    },
    {
        "key": "WT-4654",
        "number": 4532,
        "state": "closed",
        "title": "WT-4654 Split task for Evergreen Windows build variant to reduce makespan",
        "body": "This change is to split the unit-test (python test suite) into 8 buckets for Windows build variant, the same as what we did for the Ubuntu build variant before. With this change, the longest running task in the Windows variant finished within 10 mins (used to be over 40 mins). Patch build is [here](https://evergreen.mongodb.com/build/wiredtiger_windows_64_patch_07a346d2d683cc8a42c0a29753619476cd09314c_5c92e2fc3627e071fa07bd1f_19_03_21_01_03_57).",
        "base_ref": "develop",
        "created_at": "Friday Mar 22, 2019 at 00:05 GMT",
        "updated_at": "Monday Mar 25, 2019 at 00:11 GMT",
        "closed_at": "Monday Mar 25, 2019 at 00:11 GMT",
        "merged_at": "Monday Mar 25, 2019 at 00:11 GMT"
    },
    {
        "key": "WT-4655",
        "number": 4531,
        "state": "closed",
        "title": "WT-4655 Avoid C and C++ compiler incompatibilities",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 21, 2019 at 23:14 GMT",
        "updated_at": "Friday Mar 22, 2019 at 21:47 GMT",
        "closed_at": "Friday Mar 22, 2019 at 21:47 GMT",
        "merged_at": "Friday Mar 22, 2019 at 21:47 GMT"
    },
    {
        "key": "WT-4317",
        "number": 4530,
        "state": "closed",
        "title": "WT-4317 Zero the end of the file if we don't have ftruncate.",
        "body": "Here's a branch that avoids the salvage problem and zeroes out the end of a table that we wanted to ftruncate but it's not available.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 21, 2019 at 17:27 GMT",
        "updated_at": "Monday Apr 08, 2019 at 19:33 GMT",
        "closed_at": "Monday Apr 08, 2019 at 19:33 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4644",
        "number": 4529,
        "state": "closed",
        "title": "WT-4644 column-store missing run-length encoding opportunities",
        "body": "@michaelcahill, this change means we check for `updates that have timestamps but are still globally visible`, earlier in reconciliation than before. Before, we checked during cell layout, but that's too late for variable-length column store, because it's already selected the RLE for the item and we can't go back and fix it up if the timestamp changes mean that we could RLE collapse a pair of adjacent items.\r\n\r\nIt wouldn't be an error to just write the two adjacent items with identical timestamps, but I **really** don't  want to give up the verification checks as to whether or not adjacent column-store items should have been collapsed by RLE (and there are probably workloads where that's the wrong thing anyway and we'd write more data by doing that).\r\n\r\nI tried to separate the column-store and row-store reconciliation paths so we can check for row-store updates later, but not check column-store updates, but that was ugly and complex.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 21, 2019 at 15:20 GMT",
        "updated_at": "Wednesday Apr 03, 2019 at 02:19 GMT",
        "closed_at": "Wednesday Apr 03, 2019 at 02:14 GMT",
        "merged_at": "Wednesday Apr 03, 2019 at 02:14 GMT"
    },
    {
        "key": "WT-4631",
        "number": 4528,
        "state": "closed",
        "title": "WT-4631 Setting read timestamp to WT_TS_NONE in clear readtimestamp",
        "body": "\u2026unction",
        "base_ref": "develop",
        "created_at": "Thursday Mar 21, 2019 at 06:19 GMT",
        "updated_at": "Thursday Mar 28, 2019 at 04:49 GMT",
        "closed_at": "Thursday Mar 28, 2019 at 04:49 GMT",
        "merged_at": "Thursday Mar 28, 2019 at 04:49 GMT"
    },
    {
        "key": "WT-4651",
        "number": 4527,
        "state": "closed",
        "title": "WT-4651 Remove uses of 'incase'.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 20, 2019 at 18:49 GMT",
        "updated_at": "Wednesday Mar 20, 2019 at 21:38 GMT",
        "closed_at": "Wednesday Mar 20, 2019 at 21:38 GMT",
        "merged_at": "Wednesday Mar 20, 2019 at 21:38 GMT"
    },
    {
        "key": "WT-4648",
        "number": 4526,
        "state": "closed",
        "title": "WT-4648 Coverity false positive on fopen call.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 20, 2019 at 13:55 GMT",
        "updated_at": "Tuesday Apr 02, 2019 at 22:58 GMT",
        "closed_at": "Wednesday Mar 20, 2019 at 23:01 GMT",
        "merged_at": "Wednesday Mar 20, 2019 at 23:01 GMT"
    },
    {
        "key": "WT-4646",
        "number": 4525,
        "state": "closed",
        "title": "WT-4646 Coverity false positive on fopen calls",
        "body": "@sueloverso, I don't see the problem, so I just tried to quiet the complaint.\r\n\r\nPlease check me!",
        "base_ref": "develop",
        "created_at": "Monday Mar 18, 2019 at 21:43 GMT",
        "updated_at": "Tuesday Mar 19, 2019 at 14:09 GMT",
        "closed_at": "Tuesday Mar 19, 2019 at 12:59 GMT",
        "merged_at": "Tuesday Mar 19, 2019 at 12:59 GMT"
    },
    {
        "key": "WT-4645",
        "number": 4524,
        "state": "closed",
        "title": "WT-4645 Add isolation level tests",
        "body": "These situations are indirectly tested in a number of existing tests. They typically use the `make_scenarios` helper to create a list of operations and then make some assertions to periodically check how many records are visible at each isolation level.\r\n\r\nI thought it'd be nice to have some tests that check the isolation levels in detail and ensure that the expected value is visible (along with some comments to aid understanding).",
        "base_ref": "develop",
        "created_at": "Monday Mar 18, 2019 at 07:32 GMT",
        "updated_at": "Friday Mar 22, 2019 at 05:38 GMT",
        "closed_at": "Friday Mar 22, 2019 at 05:34 GMT",
        "merged_at": "Friday Mar 22, 2019 at 05:34 GMT"
    },
    {
        "key": "WT-4643",
        "number": 4523,
        "state": "closed",
        "title": "WT-4643 Adding commit timestamp validitiy check into txn commit",
        "body": "This PR fixes the scenario described in WT-4643, it additionally fixes a bug where the commit timestamp can be set at the stable timestamp. These fixes are tested in the provided python test file.",
        "base_ref": "develop",
        "created_at": "Monday Mar 18, 2019 at 02:38 GMT",
        "updated_at": "Tuesday Apr 02, 2019 at 22:58 GMT",
        "closed_at": "Tuesday Mar 26, 2019 at 03:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4641",
        "number": 4522,
        "state": "closed",
        "title": "WT-4641 format verify failures are not returning errors.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 15, 2019 at 14:00 GMT",
        "updated_at": "Friday Mar 15, 2019 at 14:36 GMT",
        "closed_at": "Friday Mar 15, 2019 at 14:36 GMT",
        "merged_at": "Friday Mar 15, 2019 at 14:36 GMT"
    },
    {
        "key": "WT-4324",
        "number": 4521,
        "state": "closed",
        "title": "WT-4324 Checkpoints must rewrite pages with data in the future.",
        "body": "Sometimes we attempt eviction of a page by writing the most recent versions of updates.  If such a page remains dirty in cache, it must be visited by the next checkpoint to make sure the data that appears in the checkpoint is a consistent cut of versions.",
        "base_ref": "develop",
        "created_at": "Friday Mar 15, 2019 at 01:07 GMT",
        "updated_at": "Monday Mar 18, 2019 at 02:59 GMT",
        "closed_at": "Monday Mar 18, 2019 at 02:59 GMT",
        "merged_at": "Monday Mar 18, 2019 at 02:59 GMT"
    },
    {
        "key": "WT-4585",
        "number": 4520,
        "state": "closed",
        "title": "WT-4585 Add WT_WITH_HOTBACKUP_LOCK macro",
        "body": "This PR is adding a convenience macro for managing the hot backup lock as well as a corresponding session flag. The macro is only for acquiring the lock for reading since this is the more common case.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 14, 2019 at 06:15 GMT",
        "updated_at": "Monday Apr 15, 2019 at 04:22 GMT",
        "closed_at": "Monday Apr 15, 2019 at 04:19 GMT",
        "merged_at": "Monday Apr 15, 2019 at 04:19 GMT"
    },
    {
        "key": "WT-4638",
        "number": 4519,
        "state": "closed",
        "title": "WT-4638 Remove the unused variables from the __wt_cache structure.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 14, 2019 at 01:14 GMT",
        "updated_at": "Friday Mar 15, 2019 at 01:34 GMT",
        "closed_at": "Friday Mar 15, 2019 at 01:34 GMT",
        "merged_at": "Friday Mar 15, 2019 at 01:34 GMT"
    },
    {
        "key": "WT-4447",
        "number": 4518,
        "state": "closed",
        "title": "WT-4447 Add prototype implementation allowing limiting of IO per subsystem v4.0 backport",
        "body": "v4.0 backport",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Mar 14, 2019 at 00:18 GMT",
        "updated_at": "Thursday Mar 14, 2019 at 00:43 GMT",
        "closed_at": "Thursday Mar 14, 2019 at 00:42 GMT",
        "merged_at": "Thursday Mar 14, 2019 at 00:42 GMT"
    },
    {
        "key": "WT-4494",
        "number": 4517,
        "state": "closed",
        "title": "WT-4494 Support standalone recovery of WiredTiger files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 13, 2019 at 13:57 GMT",
        "updated_at": "Friday Jun 07, 2019 at 06:05 GMT",
        "closed_at": "Friday Jun 07, 2019 at 06:05 GMT",
        "merged_at": "Friday Jun 07, 2019 at 06:05 GMT"
    },
    {
        "key": "WT-3929",
        "number": 4516,
        "state": "closed",
        "title": "WT-3929 Changes to allow python3 to be used to run the Python test suite.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Mar 09, 2019 at 22:04 GMT",
        "updated_at": "Wednesday Apr 03, 2019 at 19:13 GMT",
        "closed_at": "Wednesday Apr 03, 2019 at 19:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4629",
        "number": 4515,
        "state": "closed",
        "title": "WT-4629 Adding test coverage for oldest reader, all committed and pin\u2026",
        "body": "\u2026ned timestaps",
        "base_ref": "develop",
        "created_at": "Thursday Mar 07, 2019 at 23:47 GMT",
        "updated_at": "Monday Mar 25, 2019 at 00:50 GMT",
        "closed_at": "Monday Mar 25, 2019 at 00:50 GMT",
        "merged_at": "Monday Mar 25, 2019 at 00:50 GMT"
    },
    {
        "key": "WT-4618",
        "number": 4514,
        "state": "closed",
        "title": "WT-4618 Don't hijack other sessions in __wt_verbose_dump_txn.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 07, 2019 at 21:24 GMT",
        "updated_at": "Thursday Mar 07, 2019 at 21:53 GMT",
        "closed_at": "Thursday Mar 07, 2019 at 21:53 GMT",
        "merged_at": "Thursday Mar 07, 2019 at 21:53 GMT"
    },
    {
        "key": "WT-4627",
        "number": 4513,
        "state": "closed",
        "title": "WT-4627 Coverity #111405: out-of-bounds overrun",
        "body": "@nehakhatri5, I removed the `sizeof` argument to  `__wt_timestamp_to_string()`, it's always the same value and it's just something to get wrong.\r\n\r\nIf you can think of a way to get back error checking on this call, I'm open to suggestions, but absent passing in a `WT_SESSION_IMPL *` argument and asserting it, I don't see anything.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 07, 2019 at 15:05 GMT",
        "updated_at": "Thursday Mar 07, 2019 at 16:06 GMT",
        "closed_at": "Thursday Mar 07, 2019 at 16:06 GMT",
        "merged_at": "Thursday Mar 07, 2019 at 16:06 GMT"
    },
    {
        "key": "WT-4628",
        "number": 4512,
        "state": "closed",
        "title": "WT-4628 WiredTiger test-utility-progress function reopens the tracking file on each call",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 07, 2019 at 14:41 GMT",
        "updated_at": "Thursday Mar 07, 2019 at 15:54 GMT",
        "closed_at": "Thursday Mar 07, 2019 at 15:54 GMT",
        "merged_at": "Thursday Mar 07, 2019 at 15:54 GMT"
    },
    {
        "key": "WT-4621",
        "number": 4511,
        "state": "closed",
        "title": "WT-4621 Support rounding off prepare timestamp",
        "body": "Support rounding off prepare timestamp to oldest timestamp, if earlier.\r\nSupport rounding off commit timestamp of a prepared transaction to prepare timestamp, if earlier.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 07, 2019 at 05:23 GMT",
        "updated_at": "Monday Mar 25, 2019 at 00:05 GMT",
        "closed_at": "Monday Mar 25, 2019 at 00:05 GMT",
        "merged_at": "Monday Mar 25, 2019 at 00:05 GMT"
    },
    {
        "key": "WT-4602",
        "number": 4510,
        "state": "closed",
        "title": "WT-4602 Remove macro parentheses and suppress linter instead",
        "body": "Looks like MongoDB builds WiredTiger with different compiler flags. So the extra parentheses around this macro that I added to please Clang Tidy is now creating an \"unnecessary parentheses\" warning in the MongoDB build.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 07, 2019 at 01:42 GMT",
        "updated_at": "Thursday Mar 07, 2019 at 05:14 GMT",
        "closed_at": "Thursday Mar 07, 2019 at 05:14 GMT",
        "merged_at": "Thursday Mar 07, 2019 at 05:14 GMT"
    },
    {
        "key": "WT-4620",
        "number": 4509,
        "state": "closed",
        "title": "WT-4620 Assert a uint64_t can hold a time_t, maintain seconds as uint64_t",
        "body": "@sueloverso, would you please do the detailed review?\r\n@michaelcahill, I can't think of any reason not to make this change, but wanted to run it by you for sanity.   Thanks!",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 06, 2019 at 16:40 GMT",
        "updated_at": "Thursday Mar 07, 2019 at 15:38 GMT",
        "closed_at": "Thursday Mar 07, 2019 at 14:21 GMT",
        "merged_at": "Thursday Mar 07, 2019 at 14:21 GMT"
    },
    {
        "key": "WT-4615",
        "number": 4508,
        "state": "closed",
        "title": "WT-4615 Sync backup file before closing. (v4.0 backport)",
        "body": "(cherry picked from commit b68fbf75c1f73467dcb5cce8eac8de67df89a431)",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Mar 05, 2019 at 23:22 GMT",
        "updated_at": "Sunday Mar 31, 2019 at 23:37 GMT",
        "closed_at": "Tuesday Mar 05, 2019 at 23:55 GMT",
        "merged_at": "Tuesday Mar 05, 2019 at 23:55 GMT"
    },
    {
        "key": "WT-4619",
        "number": 4507,
        "state": "closed",
        "title": "WT-4619 Coverity 111398: leaked memory",
        "body": "`__wt_turtle_init()` isn't freeing memory returned from `__wt_turtle_read()`. \r\n\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 05, 2019 at 16:34 GMT",
        "updated_at": "Tuesday Mar 05, 2019 at 18:37 GMT",
        "closed_at": "Tuesday Mar 05, 2019 at 18:37 GMT",
        "merged_at": "Tuesday Mar 05, 2019 at 18:37 GMT"
    },
    {
        "key": "WT-4532",
        "number": 4506,
        "state": "closed",
        "title": "WT-4532 Fix shared access to the default session. (v4.0 backport)",
        "body": "Cherry picked from commit e727b72.",
        "base_ref": "mongodb-4.0",
        "created_at": "Tuesday Mar 05, 2019 at 03:41 GMT",
        "updated_at": "Thursday Mar 14, 2019 at 00:29 GMT",
        "closed_at": "Thursday Mar 14, 2019 at 00:28 GMT",
        "merged_at": "Thursday Mar 14, 2019 at 00:28 GMT"
    },
    {
        "key": "WT-4613",
        "number": 4505,
        "state": "closed",
        "title": "WT-4613 Processes stuck on 'WT_TEST.wt4333_handle_locks' files on Mac hosts",
        "body": "@agorrod, @lukech, here are changes to skip the `wt4333_handle_locks` test on OS X, I see no evidence there's a real problem here.\r\n\r\nI can't reproduce the problem on any of the 3 test systems I tried, and I don't think it's worth any additional effort to figure out.",
        "base_ref": "develop",
        "created_at": "Monday Mar 04, 2019 at 16:48 GMT",
        "updated_at": "Tuesday Apr 02, 2019 at 22:58 GMT",
        "closed_at": "Monday Mar 04, 2019 at 22:22 GMT",
        "merged_at": "Monday Mar 04, 2019 at 22:22 GMT"
    },
    {
        "key": "WT-4617",
        "number": 4504,
        "state": "closed",
        "title": "WT-4617 Prepare conflict is returned only once.",
        "body": "This fix is related to BF-12253. ",
        "base_ref": "develop",
        "created_at": "Monday Mar 04, 2019 at 04:44 GMT",
        "updated_at": "Monday Mar 04, 2019 at 21:06 GMT",
        "closed_at": "Monday Mar 04, 2019 at 21:05 GMT",
        "merged_at": "Monday Mar 04, 2019 at 21:05 GMT"
    },
    {
        "key": "WT-4554",
        "number": 4503,
        "state": "closed",
        "title": "WT-4554 Enhance WT salvage to handle the case of corrupted WiredTiger turtle",
        "body": "Check if the turtle file is corrupted before salvaging the metadata. If it's corrupted, delete it and create a new turtle.\r\n@sueloverso Please let me know your feedback for this change.",
        "base_ref": "develop",
        "created_at": "Monday Mar 04, 2019 at 03:38 GMT",
        "updated_at": "Monday Mar 04, 2019 at 22:30 GMT",
        "closed_at": "Monday Mar 04, 2019 at 22:30 GMT",
        "merged_at": "Monday Mar 04, 2019 at 22:30 GMT"
    },
    {
        "key": "WT-4615",
        "number": 4502,
        "state": "closed",
        "title": "WT-4615 Sync backup file before closing.",
        "body": "Please review this change. It is from a SERVER ticket where a user did a hardware snapshot backup and the `WiredTiger.backup` file was zero length. We definitely were not syncing the backup file before returning from opening the backup cursor. ",
        "base_ref": "develop",
        "created_at": "Friday Mar 01, 2019 at 20:46 GMT",
        "updated_at": "Monday Mar 04, 2019 at 20:01 GMT",
        "closed_at": "Monday Mar 04, 2019 at 20:01 GMT",
        "merged_at": "Monday Mar 04, 2019 at 20:01 GMT"
    },
    {
        "key": "WT-4602",
        "number": 4501,
        "state": "closed",
        "title": "WT-4602 Clang Tidy and Clang Scan fixes",
        "body": "This PR is to fix or suppress any warnings from Clang Tidy and Clang Scan.",
        "base_ref": "develop",
        "created_at": "Friday Mar 01, 2019 at 06:40 GMT",
        "updated_at": "Wednesday Mar 06, 2019 at 20:54 GMT",
        "closed_at": "Wednesday Mar 06, 2019 at 20:54 GMT",
        "merged_at": "Wednesday Mar 06, 2019 at 20:54 GMT"
    },
    {
        "key": "WT-4630",
        "number": 4500,
        "state": "closed",
        "title": "WT-4630 Add Clang Format script",
        "body": "This PR contains an initial attempt at a `.clang-format` file for the WiredTiger formatting style as well as a script in `dist/` to format everything under `src/`.\r\n\r\nThe `s_clang-format.list` is for specifying files that we don't want to be formatted (mostly files that get auto generated by other scripts within `dist/`).\r\n\r\nI created the `.clang-format` by dumping the full set of LLVM options and reviewing the values one by one.\r\n`clang-format -style=llvm -dump-config > .clang-format`",
        "base_ref": "develop",
        "created_at": "Friday Mar 01, 2019 at 06:29 GMT",
        "updated_at": "Friday Mar 22, 2019 at 04:26 GMT",
        "closed_at": "Friday Mar 22, 2019 at 04:26 GMT",
        "merged_at": "Friday Mar 22, 2019 at 04:26 GMT"
    },
    {
        "key": "WT-4607",
        "number": 4499,
        "state": "closed",
        "title": "WT-4607 Allow prepare timestamp to commit behind oldest timestamp.",
        "body": "Function name changes for less ambiguity.\r\nMask the check of commit timestamp < oldest timestamp.",
        "base_ref": "develop",
        "created_at": "Friday Mar 01, 2019 at 03:20 GMT",
        "updated_at": "Wednesday Mar 06, 2019 at 20:46 GMT",
        "closed_at": "Wednesday Mar 06, 2019 at 20:45 GMT",
        "merged_at": "Wednesday Mar 06, 2019 at 20:45 GMT"
    },
    {
        "key": "WT-4606",
        "number": 4498,
        "state": "closed",
        "title": "WT-4606 workgen: remove lsm from the default table type in wtperf emulation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 28, 2019 at 15:17 GMT",
        "updated_at": "Thursday Feb 28, 2019 at 16:00 GMT",
        "closed_at": "Thursday Feb 28, 2019 at 16:00 GMT",
        "merged_at": "Thursday Feb 28, 2019 at 16:00 GMT"
    },
    {
        "key": "WT-4609",
        "number": 4497,
        "state": "closed",
        "title": "WT-4609 Extend timestamp usage documentation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 28, 2019 at 03:56 GMT",
        "updated_at": "Friday Mar 22, 2019 at 04:42 GMT",
        "closed_at": "Friday Mar 22, 2019 at 04:42 GMT",
        "merged_at": "Friday Mar 22, 2019 at 04:42 GMT"
    },
    {
        "key": "WT-4605",
        "number": 4496,
        "state": "closed",
        "title": "WT-4605 workgen: added public domain message to example/test file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 27, 2019 at 14:58 GMT",
        "updated_at": "Wednesday Feb 27, 2019 at 15:25 GMT",
        "closed_at": "Wednesday Feb 27, 2019 at 15:24 GMT",
        "merged_at": "Wednesday Feb 27, 2019 at 15:24 GMT"
    },
    {
        "key": "WT-4599",
        "number": 4495,
        "state": "closed",
        "title": "WT-4599 Show latency threshold violations in operation visualizations.",
        "body": "This should help to track down the root causes of latency spikes.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 26, 2019 at 18:56 GMT",
        "updated_at": "Tuesday Apr 02, 2019 at 22:58 GMT",
        "closed_at": "Thursday Feb 28, 2019 at 03:06 GMT",
        "merged_at": "Thursday Feb 28, 2019 at 03:06 GMT"
    },
    {
        "key": "WT-4573",
        "number": 4494,
        "state": "closed",
        "title": "WT-4573 Reducing calls to __wt_epoch from session reset.",
        "body": "__wt_epoch is called everytime in __wt_session_cursor_cache_sweep\r\nwhen session reset is called. This change is to set countdown to\r\ncall less often cursor cache sweep during session reset.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 26, 2019 at 06:20 GMT",
        "updated_at": "Monday Mar 04, 2019 at 22:04 GMT",
        "closed_at": "Monday Mar 04, 2019 at 22:04 GMT",
        "merged_at": "Monday Mar 04, 2019 at 22:04 GMT"
    },
    {
        "key": "WT-4556",
        "number": 4493,
        "state": "closed",
        "title": "WT-4556 Add a way to synchronize threads in workgen.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 26, 2019 at 02:04 GMT",
        "updated_at": "Wednesday Feb 27, 2019 at 20:43 GMT",
        "closed_at": "Wednesday Feb 27, 2019 at 20:43 GMT",
        "merged_at": "Wednesday Feb 27, 2019 at 20:43 GMT"
    },
    {
        "key": "WT-4587",
        "number": 4492,
        "state": "closed",
        "title": "WT-4587 Parallelized the diagram-generating part of the visualization script.",
        "body": "This patch updates the visualization script to run the most time-consuming part of the visualization in parallel. Measurements show roughly 30% speedup in total processing time. ",
        "base_ref": "develop",
        "created_at": "Friday Feb 22, 2019 at 23:47 GMT",
        "updated_at": "Monday Feb 25, 2019 at 19:29 GMT",
        "closed_at": "Monday Feb 25, 2019 at 19:29 GMT",
        "merged_at": "Monday Feb 25, 2019 at 19:29 GMT"
    },
    {
        "key": "WT-4324",
        "number": 4491,
        "state": "closed",
        "title": "WT-4324 Re-instate lookaside and checkpoint collision function/test.",
        "body": "I have a bunch of you listed as reviewers. This change reverts part of WT-4094 that removed the check for lookaside and checkpoint collisions. It retains the other portion of the change for the `las_skew` and the transaction id. @nehakhatri5 can you check if this change still satisfies the YCSB issue in the WT-4094 ticket?",
        "base_ref": "develop",
        "created_at": "Thursday Feb 21, 2019 at 19:51 GMT",
        "updated_at": "Monday Mar 18, 2019 at 03:01 GMT",
        "closed_at": "Monday Mar 18, 2019 at 03:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4596",
        "number": 4490,
        "state": "closed",
        "title": "WT-4596 The wt utility has unnecessarily complicated session/connection handling",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 19, 2019 at 23:14 GMT",
        "updated_at": "Wednesday Feb 20, 2019 at 22:57 GMT",
        "closed_at": "Wednesday Feb 20, 2019 at 22:56 GMT",
        "merged_at": "Wednesday Feb 20, 2019 at 22:56 GMT"
    },
    {
        "key": "WT-4595",
        "number": 4489,
        "state": "closed",
        "title": "WT-4595 Coverity \"null pointer dereference\" complaints",
        "body": "@agorrod, I don't see any problems in the Coverity \"null pointer dereference\" complaints themselves ([https://coverity.corp.mongodb.com/reports.htm#v10632/p10001](https://coverity.corp.mongodb.com/reports.htm#v10632/p10001)), but whoever reviews this branch should double check me.\r\n\r\nThis branch cleans up some minor problems in the table get/release code paths that I noticed while reviewing the Coverity complaints.\r\n\r\nEDIT: We triaged the Coverity reports, so they're a bit harder to find. Here's a link to one of them: [https://coverity.corp.mongodb.com/reports.htm#v11943/p10001/fileInstanceId=24060345&defectInstanceId=17273195&mergedDefectId=104925&fileStart=251&fileEnd=318](https://coverity.corp.mongodb.com/reports.htm#v11943/p10001/fileInstanceId=24060345&defectInstanceId=17273195&mergedDefectId=104925&fileStart=251&fileEnd=318)\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 19, 2019 at 17:59 GMT",
        "updated_at": "Wednesday Feb 20, 2019 at 23:23 GMT",
        "closed_at": "Wednesday Feb 20, 2019 at 23:22 GMT",
        "merged_at": "Wednesday Feb 20, 2019 at 23:22 GMT"
    },
    {
        "key": "WT-4465",
        "number": 4488,
        "state": "closed",
        "title": "WT-4465 Add documentation for a dhandle's lifecycle",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 19, 2019 at 07:19 GMT",
        "updated_at": "Thursday Feb 21, 2019 at 00:15 GMT",
        "closed_at": "Thursday Feb 21, 2019 at 00:15 GMT",
        "merged_at": "Thursday Feb 21, 2019 at 00:15 GMT"
    },
    {
        "key": "WT-4580",
        "number": 4487,
        "state": "closed",
        "title": "WT-4580 Make transactions with ignore_prepare=true readonly.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 19, 2019 at 01:35 GMT",
        "updated_at": "Wednesday Jun 12, 2019 at 03:24 GMT",
        "closed_at": "Wednesday Jun 12, 2019 at 03:23 GMT",
        "merged_at": "Wednesday Jun 12, 2019 at 03:23 GMT"
    },
    {
        "key": "WT-4592",
        "number": 4486,
        "state": "closed",
        "title": "WT-4592 OS X build platform doesn't support timer_create() and timer_settime().",
        "body": "@lukech, would you please confirm this branch works on Evergreen's OS X platform? -- Thanks!",
        "base_ref": "develop",
        "created_at": "Monday Feb 18, 2019 at 00:10 GMT",
        "updated_at": "Monday Feb 18, 2019 at 23:37 GMT",
        "closed_at": "Monday Feb 18, 2019 at 23:36 GMT",
        "merged_at": "Monday Feb 18, 2019 at 23:36 GMT"
    },
    {
        "key": "WT-4571",
        "number": 4485,
        "state": "closed",
        "title": "WT-4571 Improve transaction ID allocation",
        "body": "Acquiring a spinlock to allocate transacion ID can be a latent\r\nbottleneck in WiredTiger. This attempts to remove using spinlock while\r\nallocating transaction ID and retry to get valid ID from transaction\r\ngetting its own snapshot.",
        "base_ref": "develop",
        "created_at": "Sunday Feb 17, 2019 at 22:18 GMT",
        "updated_at": "Wednesday Mar 06, 2019 at 07:27 GMT",
        "closed_at": "Wednesday Mar 06, 2019 at 07:27 GMT",
        "merged_at": "Wednesday Mar 06, 2019 at 07:27 GMT"
    },
    {
        "key": "WT-4413",
        "number": 4484,
        "state": "closed",
        "title": "WT-4413 Add optional compact progress messages.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 17, 2019 at 22:14 GMT",
        "updated_at": "Thursday Feb 28, 2019 at 01:58 GMT",
        "closed_at": "Thursday Feb 28, 2019 at 01:58 GMT",
        "merged_at": "Thursday Feb 28, 2019 at 01:58 GMT"
    },
    {
        "key": "WT-4568",
        "number": 4483,
        "state": "closed",
        "title": "WT-4568 Fix operation tracking visualization.",
        "body": "Used to display callstacks incorrectly.",
        "base_ref": "develop",
        "created_at": "Friday Feb 15, 2019 at 23:58 GMT",
        "updated_at": "Sunday Feb 24, 2019 at 22:14 GMT",
        "closed_at": "Friday Feb 22, 2019 at 20:37 GMT",
        "merged_at": "Friday Feb 22, 2019 at 20:37 GMT"
    },
    {
        "key": "WT-4588",
        "number": 4482,
        "state": "closed",
        "title": "WT-4588 test/format should drop core even when Jenkins or connection terminates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 15, 2019 at 22:59 GMT",
        "updated_at": "Monday Feb 18, 2019 at 01:33 GMT",
        "closed_at": "Monday Feb 18, 2019 at 01:33 GMT",
        "merged_at": "Monday Feb 18, 2019 at 01:33 GMT"
    },
    {
        "key": "WT-4578",
        "number": 4481,
        "state": "closed",
        "title": "WT-4578 test/format should drop core even when deadlocked",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 15, 2019 at 00:25 GMT",
        "updated_at": "Friday Feb 15, 2019 at 21:35 GMT",
        "closed_at": "Friday Feb 15, 2019 at 21:35 GMT",
        "merged_at": "Friday Feb 15, 2019 at 21:35 GMT"
    },
    {
        "key": "WT-4517",
        "number": 4480,
        "state": "closed",
        "title": "WT-4517 Change WT data format to avoid writing stable timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 13, 2019 at 22:39 GMT",
        "updated_at": "Thursday Feb 28, 2019 at 02:29 GMT",
        "closed_at": "Thursday Feb 28, 2019 at 02:29 GMT",
        "merged_at": "Thursday Feb 28, 2019 at 02:29 GMT"
    },
    {
        "key": "WT-4583",
        "number": 4479,
        "state": "closed",
        "title": "WT-4583 Collect read/write stats in throttling even if not using capacity.",
        "body": "@ddanderson Please review. Note the textual change in the stats. I felt that 'throttled bytes' was a bit misleading, as in it was a count of the subset of all bytes read/written that only applied when we actually throttled/slept, not a total number. I simply deleted the `throttled` prefix. If adding some other prefix is clearer, let me know.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 13, 2019 at 19:28 GMT",
        "updated_at": "Monday Feb 18, 2019 at 05:30 GMT",
        "closed_at": "Thursday Feb 14, 2019 at 16:31 GMT",
        "merged_at": "Thursday Feb 14, 2019 at 16:31 GMT"
    },
    {
        "key": "WT-4577",
        "number": 4478,
        "state": "closed",
        "title": "WT-4577 test/format LSM deadlock",
        "body": "@sueloverso, @agorrod, this change reverts the functional part of the changes for WT-4561 (commit 6aafde0c).\r\n\r\nThe race that commit was supposed to fix doesn't exist:\r\n```\r\n__lsm_free_chunks() ->\r\n__lsm_drop_file() ->\r\n__wt_schema_drop() ->\r\n__schema_drop() ->\r\n__drop_file() ->\r\n__wt_schema_backup_check() acquires the hot-backup lock.\r\n```\r\nThe original code was:\r\n```\r\n/*\r\n * Don't remove files if a hot backup is in progress.\r\n *\r\n * The schema lock protects the set of live files, this check\r\n * prevents us from removing a file that hot backup already\r\n * knows about.\r\n */\r\nif (S2C(session)->hot_backup)\r\n        break;\r\n```\r\nwhich is wrong because the check can race with the backup cursor, the check doesn't do anything meaningful (other than maybe skipping a schema drop attempt that's likely to fail). I don't know enough about hot backup to know if there is a real issue here for LSM, or if `__wt_schema_backup_check()` is a sufficient check for LSM discarding chunks.\r\n\r\nThis change resolves the deadlock that WT-4561 introduced, and doesn't make anything worse. If `__wt_schema_backup_check()` is insufficient for LSM chunk discard, then we should open a new ticket to deal with that issue.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 13, 2019 at 14:32 GMT",
        "updated_at": "Wednesday Feb 13, 2019 at 18:03 GMT",
        "closed_at": "Wednesday Feb 13, 2019 at 18:03 GMT",
        "merged_at": "Wednesday Feb 13, 2019 at 18:03 GMT"
    },
    {
        "key": "WT-4576",
        "number": 4477,
        "state": "closed",
        "title": "WT-4576 Reworked code collecting capacity stats to address coverity error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 12, 2019 at 13:28 GMT",
        "updated_at": "Tuesday Feb 12, 2019 at 13:54 GMT",
        "closed_at": "Tuesday Feb 12, 2019 at 13:54 GMT",
        "merged_at": "Tuesday Feb 12, 2019 at 13:54 GMT"
    },
    {
        "key": "WT-4514",
        "number": 4476,
        "state": "closed",
        "title": "WT-4514 Adding prepare and timestamp transactions to second half of test",
        "body": "",
        "base_ref": "wt-4514-assert-durable-timestamp",
        "created_at": "Tuesday Feb 12, 2019 at 06:23 GMT",
        "updated_at": "Tuesday Feb 12, 2019 at 23:52 GMT",
        "closed_at": "Tuesday Feb 12, 2019 at 23:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4483",
        "number": 4475,
        "state": "closed",
        "title": "WT-4483 Improve caching of small updates to large values (v3.6 backport)",
        "body": "Be less aggressive about creating full copies of a value, especially when the values are large.\r\n\r\nCleanly cherry picked from original commit.",
        "base_ref": "mongodb-3.6",
        "created_at": "Tuesday Feb 12, 2019 at 02:34 GMT",
        "updated_at": "Wednesday Feb 13, 2019 at 00:04 GMT",
        "closed_at": "Wednesday Feb 13, 2019 at 00:04 GMT",
        "merged_at": "Wednesday Feb 13, 2019 at 00:04 GMT"
    },
    {
        "key": "WT-4558",
        "number": 4474,
        "state": "closed",
        "title": "WT-4558 WiredTiger connection statistics cursor incorrectly provides doubled-up values.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 12, 2019 at 00:31 GMT",
        "updated_at": "Thursday Feb 21, 2019 at 23:00 GMT",
        "closed_at": "Thursday Feb 21, 2019 at 23:00 GMT",
        "merged_at": "Thursday Feb 21, 2019 at 23:00 GMT"
    },
    {
        "key": "WT-4526",
        "number": 4473,
        "state": "closed",
        "title": "WT-4526 Allow durable updates to be evicted to the lookaside file.",
        "body": "This changeset evicts the durable updates to LAS, ensures that the checkpoint honors the durable timestamp and skips reading from LAS respecting the durable timestamp of the update.",
        "base_ref": "develop",
        "created_at": "Monday Feb 11, 2019 at 06:26 GMT",
        "updated_at": "Wednesday Mar 06, 2019 at 20:50 GMT",
        "closed_at": "Wednesday Mar 06, 2019 at 20:49 GMT",
        "merged_at": "Wednesday Mar 06, 2019 at 20:49 GMT"
    },
    {
        "key": "WT-4569",
        "number": 4472,
        "state": "closed",
        "title": "WT-4569 WT_CONN_DATA_CORRUPTION incorrectly set in Btree verify code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Feb 09, 2019 at 22:58 GMT",
        "updated_at": "Tuesday Feb 12, 2019 at 14:23 GMT",
        "closed_at": "Tuesday Feb 12, 2019 at 14:23 GMT",
        "merged_at": "Tuesday Feb 12, 2019 at 14:23 GMT"
    },
    {
        "key": "WT-4559",
        "number": 4471,
        "state": "closed",
        "title": "WT-4559 Create a marker file when a test leaves a database corrupted.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 08, 2019 at 21:39 GMT",
        "updated_at": "Monday Feb 11, 2019 at 23:58 GMT",
        "closed_at": "Monday Feb 11, 2019 at 23:53 GMT",
        "merged_at": "Monday Feb 11, 2019 at 23:53 GMT"
    },
    {
        "key": "WT-4562",
        "number": 4470,
        "state": "closed",
        "title": "WT-4562 Lint/coverity possible divide by zero.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 08, 2019 at 20:35 GMT",
        "updated_at": "Friday Feb 08, 2019 at 23:48 GMT",
        "closed_at": "Friday Feb 08, 2019 at 23:48 GMT",
        "merged_at": "Friday Feb 08, 2019 at 23:48 GMT"
    },
    {
        "key": "WT-4484",
        "number": 4469,
        "state": "closed",
        "title": "WT-4484 workgen wtperf: copy generated python source to test directory, remove stray temp file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 08, 2019 at 17:02 GMT",
        "updated_at": "Monday Feb 11, 2019 at 14:13 GMT",
        "closed_at": "Monday Feb 11, 2019 at 14:13 GMT",
        "merged_at": "Monday Feb 11, 2019 at 14:13 GMT"
    },
    {
        "key": "WT-4518",
        "number": 4468,
        "state": "closed",
        "title": "WT-4518 Give applications a chance to handle panic before API panic returns (v4.0 backport)",
        "body": "Change WiredTiger to wait for the underlying application error function to return before setting the connection-level panic flag, ensuring the application has the opportunity to save the interesting thread stack information.\r\n\r\n(cherry picked from commit 44868cbc74ea6e4bcd99f0a4a2807d5763c4de4c)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Feb 08, 2019 at 03:59 GMT",
        "updated_at": "Sunday Feb 10, 2019 at 23:42 GMT",
        "closed_at": "Sunday Feb 10, 2019 at 23:41 GMT",
        "merged_at": "Sunday Feb 10, 2019 at 23:41 GMT"
    },
    {
        "key": "WT-4522",
        "number": 4467,
        "state": "closed",
        "title": "WT-4522 Update WiredTiger copyrights to 2019 (v4.0 backport)",
        "body": "(cherry picked from commit 6bae39043764e512dfab748e2cc6dceebb40cc49)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Feb 08, 2019 at 03:36 GMT",
        "updated_at": "Wednesday Feb 13, 2019 at 00:26 GMT",
        "closed_at": "Wednesday Feb 13, 2019 at 00:26 GMT",
        "merged_at": "Wednesday Feb 13, 2019 at 00:26 GMT"
    },
    {
        "key": "WT-4528",
        "number": 4466,
        "state": "closed",
        "title": "WT-4528 Move remove/rename retry into Windows fs code (v4.0 backport)",
        "body": "(cherry picked from commit c1bb21ef3c16eb6f68f3e4fd51224dd4dcfec439)",
        "base_ref": "mongodb-4.0",
        "created_at": "Friday Feb 08, 2019 at 03:20 GMT",
        "updated_at": "Friday Feb 08, 2019 at 21:20 GMT",
        "closed_at": "Friday Feb 08, 2019 at 21:20 GMT",
        "merged_at": "Friday Feb 08, 2019 at 21:20 GMT"
    },
    {
        "key": "WT-4547",
        "number": 4465,
        "state": "closed",
        "title": "WT-4547 Remove redundant os_cache_dirty field.",
        "body": "@keithbostic Please review this small fix to remove the redundant field in the block structure now that we have the same information in the file handle. I cannot remove the similar `os_cache` field as that has a different purpose. ",
        "base_ref": "develop",
        "created_at": "Thursday Feb 07, 2019 at 17:40 GMT",
        "updated_at": "Friday Feb 08, 2019 at 04:48 GMT",
        "closed_at": "Friday Feb 08, 2019 at 04:48 GMT",
        "merged_at": "Friday Feb 08, 2019 at 04:48 GMT"
    },
    {
        "key": "WT-4483",
        "number": 4464,
        "state": "closed",
        "title": "WT-4483 Improve caching of small updates to large values. (#4403)",
        "body": "Be less aggressive about creating full copies of a value, especially when the values are large.\r\n\r\n(cherry picked from commit 42865162b40203367904627e5fc39d3274665cc4)",
        "base_ref": "mongodb-4.0",
        "created_at": "Thursday Feb 07, 2019 at 04:45 GMT",
        "updated_at": "Thursday Feb 07, 2019 at 23:52 GMT",
        "closed_at": "Thursday Feb 07, 2019 at 23:51 GMT",
        "merged_at": "Thursday Feb 07, 2019 at 23:51 GMT"
    },
    {
        "key": "WT-4492",
        "number": 4463,
        "state": "closed",
        "title": "WT-4492 Add Evergreen compatibility tests for versioned data format",
        "body": "Add a new Evergreen test (task) to verify backward and forward compatibility for a set of mongodb release pairs, to make sure the newer release wt binary is able to read objects generated by older release, and vice versa. The recent data format changes (PM-1309, targeting for MongoDB 4.2) will also be covered by this new test.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 07, 2019 at 03:41 GMT",
        "updated_at": "Friday Feb 08, 2019 at 00:47 GMT",
        "closed_at": "Friday Feb 08, 2019 at 00:47 GMT",
        "merged_at": "Friday Feb 08, 2019 at 00:47 GMT"
    },
    {
        "key": "WT-4561",
        "number": 4462,
        "state": "closed",
        "title": "WT-4561 WiredTiger LSM chunk drop can race with hot backups",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 06, 2019 at 12:04 GMT",
        "updated_at": "Thursday Feb 07, 2019 at 15:03 GMT",
        "closed_at": "Thursday Feb 07, 2019 at 15:03 GMT",
        "merged_at": "Thursday Feb 07, 2019 at 15:03 GMT"
    },
    {
        "key": "WT-4533",
        "number": 4461,
        "state": "closed",
        "title": "WT-4533 Upgrade to v3 toolchain for Evergreen tests",
        "body": "Update Evergreen configuration of WiredTiger project to use the recently deployed `v3` toolchain. \r\n\r\nCreated an Evergreen patch build to verify the changes, all tasks turned green: https://evergreen.mongodb.com/version/5c5a1f4b1e2d171084b571fe",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 06, 2019 at 05:36 GMT",
        "updated_at": "Thursday Feb 07, 2019 at 04:49 GMT",
        "closed_at": "Thursday Feb 07, 2019 at 04:49 GMT",
        "merged_at": "Thursday Feb 07, 2019 at 04:49 GMT"
    },
    {
        "key": "WT-4313",
        "number": 4460,
        "state": "closed",
        "title": "WT-4313 Update query_timestamp documentation for last_checkpoint and \u2026",
        "body": "\u2026recovery timestamps",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 06, 2019 at 03:51 GMT",
        "updated_at": "Monday Feb 11, 2019 at 13:44 GMT",
        "closed_at": "Monday Feb 11, 2019 at 13:44 GMT",
        "merged_at": "Monday Feb 11, 2019 at 13:44 GMT"
    },
    {
        "key": "WT-4557",
        "number": 4459,
        "state": "closed",
        "title": "WT-4557 Remove error_prefix from base configuration file, set error_prefix in wt command",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 05, 2019 at 16:43 GMT",
        "updated_at": "Wednesday Feb 06, 2019 at 23:33 GMT",
        "closed_at": "Wednesday Feb 06, 2019 at 23:33 GMT",
        "merged_at": "Wednesday Feb 06, 2019 at 23:33 GMT"
    },
    {
        "key": "WT-4546",
        "number": 4458,
        "state": "closed",
        "title": "WT-4546 Added wtperf-like throttling to workgen, and added \"storm\" workloads",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 05, 2019 at 15:33 GMT",
        "updated_at": "Friday Feb 08, 2019 at 00:11 GMT",
        "closed_at": "Friday Feb 08, 2019 at 00:08 GMT",
        "merged_at": "Friday Feb 08, 2019 at 00:08 GMT"
    },
    {
        "key": "WT-4433",
        "number": 4457,
        "state": "closed",
        "title": "WT-4433 Enable dynamic compression for snappy",
        "body": "@bvpvamsikrishna ,I have executed the ` mongodb-ycsb-perf-develop`, `mongodb-ycsb-perf-windows` and sys-perf tests and do not see any performance degradations due to this change.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 05, 2019 at 03:19 GMT",
        "updated_at": "Wednesday Feb 06, 2019 at 23:13 GMT",
        "closed_at": "Wednesday Feb 06, 2019 at 23:13 GMT",
        "merged_at": "Wednesday Feb 06, 2019 at 23:13 GMT"
    },
    {
        "key": "WT-4369",
        "number": 4456,
        "state": "closed",
        "title": "WT-4369 random_directio shouldn't assume children threads wrote any data",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 05, 2019 at 02:55 GMT",
        "updated_at": "Monday Feb 18, 2019 at 05:30 GMT",
        "closed_at": "Tuesday Feb 05, 2019 at 14:48 GMT",
        "merged_at": "Tuesday Feb 05, 2019 at 14:48 GMT"
    },
    {
        "key": "WT-4514",
        "number": 4455,
        "state": "closed",
        "title": "WT-4514 Implement assert=durable_timestamp",
        "body": "I made changes to existing assert=commit_timestamp behaviour as well. The change is that when configured with assert=(commit_timestamp=always) it will perform the key consistent check as well.\r\n@sueloverso, request you to comment on this change.",
        "base_ref": "develop",
        "created_at": "Monday Feb 04, 2019 at 21:26 GMT",
        "updated_at": "Wednesday Feb 20, 2019 at 23:59 GMT",
        "closed_at": "Wednesday Feb 20, 2019 at 23:55 GMT",
        "merged_at": "Wednesday Feb 20, 2019 at 23:55 GMT"
    },
    {
        "key": "WT-4549",
        "number": 4454,
        "state": "closed",
        "title": "WT-4549 Fix wtperf_config.py to work with python2/3.",
        "body": "Fix contributed by github user spease.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 31, 2019 at 19:42 GMT",
        "updated_at": "Thursday Jan 31, 2019 at 20:16 GMT",
        "closed_at": "Thursday Jan 31, 2019 at 20:16 GMT",
        "merged_at": "Thursday Jan 31, 2019 at 20:16 GMT"
    },
    {
        "key": "WT-4501",
        "number": 4453,
        "state": "closed",
        "title": "WT-4501 Increment cache_pool ref count under lock.",
        "body": "@agorrod you've done the most work in the shared cache pool area. Please review this change. I've kicked off a run on tinderbox to see if it fixes the failure seen (after 10 hours, sadly). I'll let it run at least 24 hours.\r\n\r\nI discovered the global reference count is not incremented under the same lock that it is decremented, and all the insert/remove calls are done on the connection list. I fixed that by dropping the process lock, acquiring the cache pool lock, and then re-acquiring the process lock (it is necessary to acquire in that order to avoid deadlock with other code taking them in that order).\r\n\r\nWhile I believe I've maintained the original intent, I'm wondering why we hold the `wt_process` lock for the entire function. Looking later in the function, AFAICT we don't modify or access the `wt_process` structure again. So I think we might be able to drop the process lock and just acquire the `cp->cache_pool_lock` without re-acquiring the process lock. ",
        "base_ref": "develop",
        "created_at": "Thursday Jan 31, 2019 at 16:23 GMT",
        "updated_at": "Wednesday Feb 06, 2019 at 23:31 GMT",
        "closed_at": "Wednesday Feb 06, 2019 at 23:30 GMT",
        "merged_at": "Wednesday Feb 06, 2019 at 23:30 GMT"
    },
    {
        "key": "WT-4548",
        "number": 4452,
        "state": "closed",
        "title": "WT-4548 Skip test for slow machines. Increase time a bit for tinderbox.",
        "body": "@ddanderson and @agorrod  Please review this change. I've already added the environment variable to the Jenkins node settings. I did increase the timeout to 7 seconds so that it can pass the code coverage test on tinderbox. That may be one piece of the change that is contentious.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 31, 2019 at 15:11 GMT",
        "updated_at": "Friday Feb 01, 2019 at 04:25 GMT",
        "closed_at": "Friday Feb 01, 2019 at 04:25 GMT",
        "merged_at": "Friday Feb 01, 2019 at 04:25 GMT"
    },
    {
        "key": "WT-4053",
        "number": 4451,
        "state": "closed",
        "title": "WT-4053 Add statistic for data handle size",
        "body": "A stat variable \"dh_conn_handle_size\" takes the size of dhandle structure.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 29, 2019 at 23:46 GMT",
        "updated_at": "Wednesday Feb 06, 2019 at 00:23 GMT",
        "closed_at": "Wednesday Feb 06, 2019 at 00:23 GMT",
        "merged_at": "Wednesday Feb 06, 2019 at 00:23 GMT"
    },
    {
        "key": "WT-4548",
        "number": 4450,
        "state": "closed",
        "title": "WT-4548 Move timing locations to check if an individual operation took too long.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 29, 2019 at 20:23 GMT",
        "updated_at": "Thursday Jan 31, 2019 at 14:33 GMT",
        "closed_at": "Thursday Jan 31, 2019 at 14:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4516",
        "number": 4449,
        "state": "closed",
        "title": "WT-4516 Change WT data format to include timestamps in checkpoints",
        "body": "@agorrod, here are the changes to aggregate the btree timestamps into the metadata during checkpoint.\r\n\r\nAs I hoped, it's a relatively simple change, assuming I haven't missed anything!\r\n\r\nNote, this is a PR against the WT-4489 PR #4433.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 29, 2019 at 12:27 GMT",
        "updated_at": "Monday Feb 18, 2019 at 05:30 GMT",
        "closed_at": "Monday Feb 18, 2019 at 05:18 GMT",
        "merged_at": "Monday Feb 18, 2019 at 05:18 GMT"
    },
    {
        "key": "WT-4296",
        "number": 4448,
        "state": "closed",
        "title": "WT-4296 Add aggressive mode to sweep server",
        "body": "Wake up sweep server to run every 10 msec in aggressive sweep mode.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 29, 2019 at 03:32 GMT",
        "updated_at": "Wednesday Feb 13, 2019 at 05:38 GMT",
        "closed_at": "Wednesday Feb 13, 2019 at 05:38 GMT",
        "merged_at": "Wednesday Feb 13, 2019 at 05:38 GMT"
    },
    {
        "key": "WT-4549",
        "number": 4447,
        "state": "closed",
        "title": "WT-4549 Fix wtperf_config.py to work with python2/3",
        "body": "Noticed this while attempting to install the AUR wiredtiger package. Arch uses python3 as the default version.",
        "base_ref": "master",
        "created_at": "Sunday Jan 27, 2019 at 21:22 GMT",
        "updated_at": "Thursday Jan 31, 2019 at 19:46 GMT",
        "closed_at": "Thursday Jan 31, 2019 at 19:46 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4537",
        "number": 4446,
        "state": "closed",
        "title": "WT-4537 WiredTiger cursor prev/next traversal failure on prepare retry",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 25, 2019 at 12:17 GMT",
        "updated_at": "Friday Jan 25, 2019 at 12:44 GMT",
        "closed_at": "Friday Jan 25, 2019 at 12:44 GMT",
        "merged_at": "Friday Jan 25, 2019 at 12:44 GMT"
    },
    {
        "key": "WT-4536",
        "number": 4445,
        "state": "closed",
        "title": "WT-4536 Compile wiredtiger under build_posix directory for Evergreen tests",
        "body": "This changes in this PR is to address one technical debt to make wiredtiger compilation happen under `build_posix` directory (previously it was under top-level directory), to keep consistent with Jenkins tests and developer habit. \r\n\r\nThanks @ddanderson for contributing 2 critical fixes to make Python test suite working, and now we have the flexibility of executing run.py under either `build_posix` or `build_posix/.libs` directory. The former option was chosen to be consistent with other test suites, and getting rid of the ugly `python_test_env_vars`.\r\n\r\nIn the mean time, another base change was made to use shell `tar` to replace evergreen build-in `archive.targz_pack` command in the Post section, to avoid the unwanted result of missing `build_posix/.lib` directory in the artifacts - `archive.targz_pack` seems having issue including hidden directories under the non-top-level directories. With this change, in order to avoid duplicated artifacts archiving for compile task, I made a 'trick' to add explicitly an archiving step followed by s3.put with `${build_id}`, and remove the wiredtiger directory (and the wiredtiger.tgz file) so that the common Post archiving commands fail to trigger. There could be errors at the end of compile task log, but won't be treated as task failure so I think it's fine. ",
        "base_ref": "develop",
        "created_at": "Friday Jan 25, 2019 at 06:11 GMT",
        "updated_at": "Friday Feb 01, 2019 at 04:19 GMT",
        "closed_at": "Friday Feb 01, 2019 at 04:19 GMT",
        "merged_at": "Friday Feb 01, 2019 at 04:19 GMT"
    },
    {
        "key": "WT-4532",
        "number": 4444,
        "state": "closed",
        "title": "WT-4532 Fix shared access to the default session.",
        "body": "In particular, `WT_CONNECTION::rollback_to_stable` can run for long enough that other periodic tasks (e.g., calls to `WT_CONNECTION::query_timestamp`) are called concurrently.  Disallow any access to data handles via the default session (outside open / close connection), and use a temporary internal session for rollback_to_stable.",
        "base_ref": "develop",
        "created_at": "Friday Jan 25, 2019 at 04:41 GMT",
        "updated_at": "Friday Jan 25, 2019 at 21:02 GMT",
        "closed_at": "Friday Jan 25, 2019 at 21:02 GMT",
        "merged_at": "Friday Jan 25, 2019 at 21:02 GMT"
    },
    {
        "key": "WT-4508",
        "number": 4443,
        "state": "closed",
        "title": "WT-4508 Fix a leak of index structure memory",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 24, 2019 at 07:05 GMT",
        "updated_at": "Wednesday Jan 30, 2019 at 01:57 GMT",
        "closed_at": "Wednesday Jan 30, 2019 at 01:57 GMT",
        "merged_at": "Wednesday Jan 30, 2019 at 01:57 GMT"
    },
    {
        "key": "WT-4529",
        "number": 4442,
        "state": "closed",
        "title": "WT-4529 Update lookaside schema to store durable timestamp",
        "body": "This brings back the changes in the lookaside schema for the durable timestamp.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 23, 2019 at 23:30 GMT",
        "updated_at": "Friday Jan 25, 2019 at 03:56 GMT",
        "closed_at": "Friday Jan 25, 2019 at 03:56 GMT",
        "merged_at": "Friday Jan 25, 2019 at 03:56 GMT"
    },
    {
        "key": "WT-4529",
        "number": 4441,
        "state": "closed",
        "title": "WT-4529 Update lookaside schema to store durable timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 23, 2019 at 02:24 GMT",
        "updated_at": "Wednesday Jan 30, 2019 at 02:27 GMT",
        "closed_at": "Wednesday Jan 23, 2019 at 02:49 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4539",
        "number": 4440,
        "state": "closed",
        "title": "WT-4539 Set the durable timestamp of the update structure",
        "body": "The durable timestamp of an update structure should be set in congruence with\r\nit's commit timestamp setting. There were couple of functions that were setting\r\nthe commit timestamp but not the durable timestamp. This change sets the durable\r\ntimestamp in those places.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 22, 2019 at 22:23 GMT",
        "updated_at": "Tuesday Jan 22, 2019 at 23:58 GMT",
        "closed_at": "Tuesday Jan 22, 2019 at 23:58 GMT",
        "merged_at": "Tuesday Jan 22, 2019 at 23:58 GMT"
    },
    {
        "key": "WT-4529",
        "number": 4439,
        "state": "closed",
        "title": "Revert \"WT-4529 Update lookaside schema to store durable timestamp\"",
        "body": "Reverts wiredtiger/wiredtiger#4434",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 22, 2019 at 02:20 GMT",
        "updated_at": "Wednesday Jan 30, 2019 at 02:26 GMT",
        "closed_at": "Tuesday Jan 22, 2019 at 02:20 GMT",
        "merged_at": "Tuesday Jan 22, 2019 at 02:20 GMT"
    },
    {
        "key": "WT-4539",
        "number": 4438,
        "state": "closed",
        "title": "WT-4539 Revert \"Update lookaside schema to store durable timestamp (#4434)\"",
        "body": "\u20264434)\"\r\n\r\nThis reverts commit 0c08061322de05171e42b08bc79ee2661642eb73.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 22, 2019 at 02:09 GMT",
        "updated_at": "Tuesday Jan 22, 2019 at 02:19 GMT",
        "closed_at": "Tuesday Jan 22, 2019 at 02:19 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4537",
        "number": 4437,
        "state": "closed",
        "title": "WT-4537 WiredTiger cursor prev/next traversal failure on prepare retry",
        "body": "Discussion in the ticket: [WT-4537](https://jira.mongodb.org/browse/WT-4537).",
        "base_ref": "develop",
        "created_at": "Monday Jan 21, 2019 at 20:52 GMT",
        "updated_at": "Thursday Feb 21, 2019 at 04:16 GMT",
        "closed_at": "Thursday Feb 21, 2019 at 04:16 GMT",
        "merged_at": "Thursday Feb 21, 2019 at 04:16 GMT"
    },
    {
        "key": "WT-4490",
        "number": 4436,
        "state": "closed",
        "title": "WT-4490 Enhance gating variable for durable history content",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 21, 2019 at 14:46 GMT",
        "updated_at": "Wednesday Jan 23, 2019 at 20:05 GMT",
        "closed_at": "Wednesday Jan 23, 2019 at 20:05 GMT",
        "merged_at": "Wednesday Jan 23, 2019 at 20:05 GMT"
    },
    {
        "key": "WT-4491",
        "number": 4435,
        "state": "closed",
        "title": "WT-4491 Change WT data format to include timestamps in internal page address cells",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 18, 2019 at 15:23 GMT",
        "updated_at": "Friday Jan 18, 2019 at 15:52 GMT",
        "closed_at": "Friday Jan 18, 2019 at 15:52 GMT",
        "merged_at": "Friday Jan 18, 2019 at 15:52 GMT"
    },
    {
        "key": "WT-4529",
        "number": 4434,
        "state": "closed",
        "title": "WT-4529 Update lookaside schema to store durable timestamp",
        "body": "As of this change the lookaside schema has been updated to store the durable timestamp of a WT_UPDATE structure.  A LAS read or write also reads/writes the durable timestamp.",
        "base_ref": "develop",
        "created_at": "Friday Jan 18, 2019 at 03:19 GMT",
        "updated_at": "Wednesday Jan 30, 2019 at 02:27 GMT",
        "closed_at": "Monday Jan 21, 2019 at 05:25 GMT",
        "merged_at": "Monday Jan 21, 2019 at 05:25 GMT"
    },
    {
        "key": "WT-4489",
        "number": 4433,
        "state": "closed",
        "title": "WT-4489 Store correct timestamp in cells on disk",
        "body": "The branch to clean up on-disk timestamps: drive timestamps down into reconciliation's update-select code, and change the variable-length and row-store leaf-page reconciliation to pass along those timestamps when writing updates to the page.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 15, 2019 at 22:19 GMT",
        "updated_at": "Tuesday Feb 05, 2019 at 23:23 GMT",
        "closed_at": "Tuesday Feb 05, 2019 at 23:05 GMT",
        "merged_at": "Tuesday Feb 05, 2019 at 23:05 GMT"
    },
    {
        "key": "WT-4528",
        "number": 4432,
        "state": "closed",
        "title": "WT-4528 Move remove/rename retry into Windows fs code.",
        "body": "Please review this diff. I made the windows-specific remove and rename code retry on access issues up to 10 times. One thing is that I retry in a loop with no pause in between. I also removed the similar code from log archiving. This may help other windows access BF failures as well.",
        "base_ref": "develop",
        "created_at": "Monday Jan 14, 2019 at 21:48 GMT",
        "updated_at": "Thursday Jan 17, 2019 at 15:55 GMT",
        "closed_at": "Thursday Jan 17, 2019 at 15:55 GMT",
        "merged_at": "Thursday Jan 17, 2019 at 15:55 GMT"
    },
    {
        "key": "WT-4521",
        "number": 4431,
        "state": "closed",
        "title": "WT-4521 Change WiredTiger to format printed timestamps as 4B integer pairs",
        "body": "There are two interesting changes here:\r\n\r\n* change af46378, switching most of our timestamp displays from hexadecimal to integers, making sure that I switched all of the ones I should have, and none of the ones I shouldn't,\r\n* change 852f06c, shuffling some code in `__wt_txn_parse_read_timestamp()` so we don't format timestamps unless we need to, and we never hold a lock while formatting a timestamp.",
        "base_ref": "wt-4491-addr-timestamps",
        "created_at": "Monday Jan 14, 2019 at 21:39 GMT",
        "updated_at": "Thursday Jan 17, 2019 at 07:45 GMT",
        "closed_at": "Thursday Jan 17, 2019 at 07:45 GMT",
        "merged_at": "Thursday Jan 17, 2019 at 07:45 GMT"
    },
    {
        "key": "WT-4360",
        "number": 4430,
        "state": "closed",
        "title": "WT-4360 Explore getting core dumps from ASAN builds",
        "body": "Try to generate a core dump when ASAN failure occurs.",
        "base_ref": "develop",
        "created_at": "Monday Jan 14, 2019 at 04:08 GMT",
        "updated_at": "Monday Feb 04, 2019 at 02:13 GMT",
        "closed_at": "Monday Feb 04, 2019 at 02:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4503",
        "number": 4429,
        "state": "closed",
        "title": "WT-4503 Pre-allocating log file takes long time on PPC machine",
        "body": "One is covered already, but there was another place in the test code.",
        "base_ref": "develop",
        "created_at": "Friday Jan 11, 2019 at 05:52 GMT",
        "updated_at": "Monday Jan 14, 2019 at 03:09 GMT",
        "closed_at": "Monday Jan 14, 2019 at 03:09 GMT",
        "merged_at": "Monday Jan 14, 2019 at 03:09 GMT"
    },
    {
        "key": "WT-4525",
        "number": 4428,
        "state": "closed",
        "title": "WT-4525 Don't run test in valgrind. Too many threads.",
        "body": "@keithbostic For this one I decided to ignore the test in valgrind. Please review.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 10, 2019 at 20:14 GMT",
        "updated_at": "Thursday Jan 10, 2019 at 21:10 GMT",
        "closed_at": "Thursday Jan 10, 2019 at 21:09 GMT",
        "merged_at": "Thursday Jan 10, 2019 at 21:09 GMT"
    },
    {
        "key": "WT-4524",
        "number": 4427,
        "state": "closed",
        "title": "WT-4524 Ignore slowness failures when running valgrind.",
        "body": "@keithbostic please review. If valgrind is running then ignore any slow operations.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 10, 2019 at 20:02 GMT",
        "updated_at": "Thursday Jan 10, 2019 at 22:28 GMT",
        "closed_at": "Thursday Jan 10, 2019 at 22:28 GMT",
        "merged_at": "Thursday Jan 10, 2019 at 22:28 GMT"
    },
    {
        "key": "WT-4520",
        "number": 4426,
        "state": "closed",
        "title": "WT-4520 prepare transactions fallout during cursor navigation.",
        "body": "When scanning a new page and prepared update is encountered, the cbt->slot is not being updated, it still represents the slot from the earlier page.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 10, 2019 at 04:59 GMT",
        "updated_at": "Friday Jan 18, 2019 at 12:12 GMT",
        "closed_at": "Friday Jan 18, 2019 at 12:11 GMT",
        "merged_at": "Friday Jan 18, 2019 at 12:11 GMT"
    },
    {
        "key": "WT-4503",
        "number": 4425,
        "state": "closed",
        "title": "WT-4503 prealloc file time increase",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 09, 2019 at 04:01 GMT",
        "updated_at": "Wednesday Jan 09, 2019 at 04:03 GMT",
        "closed_at": "Wednesday Jan 09, 2019 at 04:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4522",
        "number": 4424,
        "state": "closed",
        "title": "WT-4522 Update WiredTiger copyrights to 2019",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 07, 2019 at 16:35 GMT",
        "updated_at": "Tuesday Jan 08, 2019 at 03:52 GMT",
        "closed_at": "Tuesday Jan 08, 2019 at 03:52 GMT",
        "merged_at": "Tuesday Jan 08, 2019 at 03:52 GMT"
    },
    {
        "key": "WT-4519",
        "number": 4423,
        "state": "closed",
        "title": "WT-4519 test/format RNG no longer random",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 03, 2019 at 17:09 GMT",
        "updated_at": "Thursday Jan 03, 2019 at 17:33 GMT",
        "closed_at": "Thursday Jan 03, 2019 at 17:33 GMT",
        "merged_at": "Thursday Jan 03, 2019 at 17:33 GMT"
    },
    {
        "key": "WT-4518",
        "number": 4422,
        "state": "closed",
        "title": "WT-4518 give applications a chance to handle panic before API panic returns",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 03, 2019 at 15:22 GMT",
        "updated_at": "Monday Jan 07, 2019 at 02:03 GMT",
        "closed_at": "Monday Jan 07, 2019 at 02:03 GMT",
        "merged_at": "Monday Jan 07, 2019 at 02:03 GMT"
    },
    {
        "key": "WT-4438",
        "number": 4421,
        "state": "closed",
        "title": "WT-4438 Use accurate statistics for cursor cache totals in connection (v3.6 backport)",
        "body": "(cherry picked from commit dfd4f021aca05e62200454c564ecdfce1924478c)\r\n\r\n@ddanderson Please help to take a look. There were merge conflicts while cherry-picking the commit from mongodb-4.0. The `SessionOpStat()` function was introduced by WT-4378, which was not backported to mongodb-3.6. So I kept using `SessionStat()` for this v3.6 backporting change. ",
        "base_ref": "mongodb-3.6",
        "created_at": "Wednesday Jan 02, 2019 at 03:07 GMT",
        "updated_at": "Friday Jan 04, 2019 at 00:21 GMT",
        "closed_at": "Friday Jan 04, 2019 at 00:21 GMT",
        "merged_at": "Friday Jan 04, 2019 at 00:21 GMT"
    },
    {
        "key": "WT-4491",
        "number": 4420,
        "state": "closed",
        "title": "WT-4491 Change WT data format to include timestamps in internal page address cells",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 27, 2018 at 22:12 GMT",
        "updated_at": "Friday Jan 18, 2019 at 07:10 GMT",
        "closed_at": "Friday Jan 18, 2019 at 07:08 GMT",
        "merged_at": "Friday Jan 18, 2019 at 07:08 GMT"
    },
    {
        "key": "WT-4510",
        "number": 4419,
        "state": "closed",
        "title": "WT-4510 Failure when verifying internal pages of older version data files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 24, 2018 at 19:34 GMT",
        "updated_at": "Friday Jan 04, 2019 at 00:26 GMT",
        "closed_at": "Friday Jan 04, 2019 at 00:26 GMT",
        "merged_at": "Friday Jan 04, 2019 at 00:26 GMT"
    },
    {
        "key": "WT-4475",
        "number": 4418,
        "state": "closed",
        "title": "WT-4475 clang detected memory leak while executing csuite tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 20, 2018 at 17:46 GMT",
        "updated_at": "Thursday Dec 20, 2018 at 18:33 GMT",
        "closed_at": "Thursday Dec 20, 2018 at 18:33 GMT",
        "merged_at": "Thursday Dec 20, 2018 at 18:33 GMT"
    },
    {
        "key": "WT-4411",
        "number": 4417,
        "state": "closed",
        "title": "WT-4411 Added connection statistic for current total of cached cursors (v3.6 backport)",
        "body": "Renamed data source statistic for current total.  Tweeked descriptions\r\nof other cache cursor statistics.  Added test to verify new statistic.\r\n\r\n(cherry picked from commit 660c2d688c6c04fb85fbf390f3bc7034cf13cb13)\r\n\r\n@ddanderson Can you help to take a look of this v3.6 backport? Thanks.\r\nOnce this is merged, I'm going to backport WT-4438. ",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Dec 20, 2018 at 03:40 GMT",
        "updated_at": "Thursday Dec 20, 2018 at 16:58 GMT",
        "closed_at": "Thursday Dec 20, 2018 at 16:58 GMT",
        "merged_at": "Thursday Dec 20, 2018 at 16:58 GMT"
    },
    {
        "key": "WT-4506",
        "number": 4416,
        "state": "closed",
        "title": "WT-4506 Bypass some csuite tests for valgrind",
        "body": "Use the new env variable 'TESTUTIL_BYPASS_VALGRIND' to bypass below 3 long-running tests for valgrind:\r\n- test/checkpoint\r\n- test/csuite/test_wt2246_col_append\r\n- test/csuite/test_wt2323_join_visibility\r\nVerified this feature branch on `wiredtiger-valgrind` job, the [build](http://build.wiredtiger.com:8080/job/wiredtiger-valgrind/3046/) concluded/failed in 4h41m (with a known issue), instead of keep running for over 3 days without finishing without the changes. \r\n\r\n@keithbostic @agorrod Could you help to take a look? Thanks.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 20, 2018 at 01:04 GMT",
        "updated_at": "Thursday Dec 20, 2018 at 14:16 GMT",
        "closed_at": "Thursday Dec 20, 2018 at 14:16 GMT",
        "merged_at": "Thursday Dec 20, 2018 at 14:16 GMT"
    },
    {
        "key": "WT-4505",
        "number": 4415,
        "state": "closed",
        "title": "WT-4505 Add ability to manage when prepared transactions appear in checkpoints",
        "body": "Update the WT_UPDATE and WT_TXN structure to add a new member to store durable_timestamp.\r\nAs part of commit transaction, copy the given commit_timestamp to durable_timestamp if it is a prepared transaction and durable_timestamp is not specified.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 19, 2018 at 05:21 GMT",
        "updated_at": "Wednesday Jan 09, 2019 at 23:51 GMT",
        "closed_at": "Wednesday Jan 09, 2019 at 23:51 GMT",
        "merged_at": "Wednesday Jan 09, 2019 at 23:51 GMT"
    },
    {
        "key": "WT-4498",
        "number": 4414,
        "state": "closed",
        "title": "WT-4498 Add Evergreen test to verify data files portability",
        "body": "In order to create a test infrastructure we can use to periodically verify wt data files portability across different platforms (big_endian & little_endian), below changes were made in this pull request:\r\n\r\n- Created a new shell script, try listing and dumping wt data files in the WT_TEST directory\r\n- Created two new Evergreen build variants ('big-endian' and 'little-endian'), and 3 tasks ('compile', generate data files, and dump data files from a different platform) for each build variant. Inter-variant dependency was setup across tasks of the 2 build variants so that data files generated by one platform can be verified by the other platform.\r\n\r\nCurrently the patch [build](https://evergreen.mongodb.com/version/5c196e952fbabe28277f85f8) is still failing with the `s3.get` artifacts problem, which needs to be addressed.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 19, 2018 at 02:32 GMT",
        "updated_at": "Monday Feb 25, 2019 at 00:46 GMT",
        "closed_at": "Monday Feb 25, 2019 at 00:45 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4333",
        "number": 4413,
        "state": "closed",
        "title": "WT-4333 WiredTiger cursor cache doesn't handle all possible locked handle states (v3.6 backport)",
        "body": "@keithbostic Could you help to take a quick look? \r\nThis is a clean cherry-pick (to backport the change to v3.6). ",
        "base_ref": "mongodb-3.6",
        "created_at": "Wednesday Dec 19, 2018 at 00:33 GMT",
        "updated_at": "Friday Dec 21, 2018 at 00:43 GMT",
        "closed_at": "Friday Dec 21, 2018 at 00:38 GMT",
        "merged_at": "Friday Dec 21, 2018 at 00:38 GMT"
    },
    {
        "key": "WT-4366",
        "number": 4412,
        "state": "closed",
        "title": "WT-4366 Test format handling prepare conflicts.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 18, 2018 at 22:57 GMT",
        "updated_at": "Wednesday Dec 19, 2018 at 23:02 GMT",
        "closed_at": "Wednesday Dec 19, 2018 at 23:02 GMT",
        "merged_at": "Wednesday Dec 19, 2018 at 23:02 GMT"
    },
    {
        "key": "WT-4499",
        "number": 4411,
        "state": "closed",
        "title": "WT-4499 Fix prepare transactions key order check failure.",
        "body": "This PR has two changes.\r\n1.A prepared delete operation after resolution will be visible, but should not use the key and value.\r\n\r\n2.cbt->compare to be set to non-zero to indicate that key is not pre-built.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 16, 2018 at 23:54 GMT",
        "updated_at": "Friday Jan 18, 2019 at 07:09 GMT",
        "closed_at": "Tuesday Dec 18, 2018 at 17:36 GMT",
        "merged_at": "Tuesday Dec 18, 2018 at 17:36 GMT"
    },
    {
        "key": "WT-4482",
        "number": 4410,
        "state": "closed",
        "title": "WT-4482 lint",
        "body": "Revert a commit in the #4407 branch, it's incorrect and can potentially lead to a column-store core dump.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 12, 2018 at 14:27 GMT",
        "updated_at": "Thursday Dec 13, 2018 at 13:53 GMT",
        "closed_at": "Thursday Dec 13, 2018 at 04:12 GMT",
        "merged_at": "Thursday Dec 13, 2018 at 04:12 GMT"
    },
    {
        "key": "WT-4430",
        "number": 4409,
        "state": "closed",
        "title": "WT-4430 Fix race between prepare and page instantiate with fast truncate",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 12, 2018 at 06:11 GMT",
        "updated_at": "Friday Dec 14, 2018 at 01:38 GMT",
        "closed_at": "Friday Dec 14, 2018 at 01:38 GMT",
        "merged_at": "Friday Dec 14, 2018 at 01:38 GMT"
    },
    {
        "key": "WT-4447",
        "number": 4408,
        "state": "closed",
        "title": "WT-4447 Add subsystem I/O throttling ability.",
        "body": "@ddanderson Here's a branch for us to share.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 11, 2018 at 19:12 GMT",
        "updated_at": "Thursday Feb 07, 2019 at 15:47 GMT",
        "closed_at": "Thursday Feb 07, 2019 at 15:47 GMT",
        "merged_at": "Thursday Feb 07, 2019 at 15:47 GMT"
    },
    {
        "key": "WT-4482",
        "number": 4407,
        "state": "closed",
        "title": "WT-4482 lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 10, 2018 at 17:09 GMT",
        "updated_at": "Tuesday Dec 11, 2018 at 05:33 GMT",
        "closed_at": "Tuesday Dec 11, 2018 at 05:33 GMT",
        "merged_at": "Tuesday Dec 11, 2018 at 05:33 GMT"
    },
    {
        "key": "WT-4418",
        "number": 4406,
        "state": "closed",
        "title": "WT-4418 Don't keep key/value memory buffers allocated for cached cursor (v3.6 backport)",
        "body": "\r\n(cherry picked from commit ed2bf5948e433eaf9efe62093a9de77026d711be)\r\n\r\nThis is a clean cherry-pick. @ddanderson, can you help to take a look? Cheers.",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Dec 10, 2018 at 06:14 GMT",
        "updated_at": "Monday Dec 10, 2018 at 14:05 GMT",
        "closed_at": "Monday Dec 10, 2018 at 14:05 GMT",
        "merged_at": "Monday Dec 10, 2018 at 14:05 GMT"
    },
    {
        "key": "WT-4426",
        "number": 4405,
        "state": "closed",
        "title": "WT-4426 Change WT data format to optionally include timestamps in cells",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Dec 09, 2018 at 22:21 GMT",
        "updated_at": "Tuesday Dec 18, 2018 at 09:01 GMT",
        "closed_at": "Tuesday Dec 18, 2018 at 09:01 GMT",
        "merged_at": "Tuesday Dec 18, 2018 at 09:01 GMT"
    },
    {
        "key": "WT-4479",
        "number": 4404,
        "state": "closed",
        "title": "WT-4479 Remove schema lock wait assertion from the test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 07, 2018 at 04:52 GMT",
        "updated_at": "Monday Dec 10, 2018 at 03:08 GMT",
        "closed_at": "Monday Dec 10, 2018 at 03:08 GMT",
        "merged_at": "Monday Dec 10, 2018 at 03:08 GMT"
    },
    {
        "key": "WT-4483",
        "number": 4403,
        "state": "closed",
        "title": "WT-4483 Improve caching of small updates to large values.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 07, 2018 at 01:07 GMT",
        "updated_at": "Monday Jan 07, 2019 at 02:08 GMT",
        "closed_at": "Monday Jan 07, 2019 at 02:08 GMT",
        "merged_at": "Monday Jan 07, 2019 at 02:08 GMT"
    },
    {
        "key": "WT-4481",
        "number": 4402,
        "state": "closed",
        "title": "WT-4481 Evergreen script cleanups",
        "body": "@lukech, just minor stuff I ran into today.\r\n\r\nI would suggest that all of the error messages in `evg_cfg.py` should print out the name of the script so it's easy to figure out where the error message is coming from, but I didn't make that change.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2018 at 19:53 GMT",
        "updated_at": "Friday Dec 07, 2018 at 17:26 GMT",
        "closed_at": "Friday Dec 07, 2018 at 17:26 GMT",
        "merged_at": "Friday Dec 07, 2018 at 17:26 GMT"
    },
    {
        "key": "WT-4280",
        "number": 4401,
        "state": "closed",
        "title": "WT-4280 Add debugging to know which session has a hazard pointer.",
        "body": "[NOT FOR MERGE] @keithbostic is debugging like this helpful in the case of the assertion failure here? My quick look at the tarball it seemed like this would help to know which session still has a hazard pointer unexpectedly. ",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2018 at 18:44 GMT",
        "updated_at": "Thursday Dec 13, 2018 at 16:10 GMT",
        "closed_at": "Thursday Dec 13, 2018 at 16:10 GMT",
        "merged_at": "Thursday Dec 13, 2018 at 16:10 GMT"
    },
    {
        "key": "WT-4480",
        "number": 4400,
        "state": "closed",
        "title": "WT-4480 Fix duplicate backup cursor and archiving check.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2018 at 14:51 GMT",
        "updated_at": "Thursday Dec 06, 2018 at 17:08 GMT",
        "closed_at": "Thursday Dec 06, 2018 at 17:08 GMT",
        "merged_at": "Thursday Dec 06, 2018 at 17:08 GMT"
    },
    {
        "key": "WT-4438",
        "number": 4399,
        "state": "closed",
        "title": "WT-4438 Use accurate statistics for cursor cache totals in connection.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 04, 2018 at 17:32 GMT",
        "updated_at": "Friday Dec 07, 2018 at 00:49 GMT",
        "closed_at": "Friday Dec 07, 2018 at 00:49 GMT",
        "merged_at": "Friday Dec 07, 2018 at 00:49 GMT"
    },
    {
        "key": "WT-4444",
        "number": 4398,
        "state": "closed",
        "title": "WT-4444 Rework cursor statistics",
        "body": "Make the set of statistics consistent between connection and dhandles.\r\nReword so they sort together in groups.\r\nExtend to add more information about how much data is being touched by\r\neach operation type.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 04, 2018 at 11:52 GMT",
        "updated_at": "Monday Jan 07, 2019 at 03:21 GMT",
        "closed_at": "Monday Jan 07, 2019 at 03:21 GMT",
        "merged_at": "Monday Jan 07, 2019 at 03:21 GMT"
    },
    {
        "key": "WT-4343",
        "number": 4397,
        "state": "closed",
        "title": "WT-4343 Fix a hang in logging can when overwhelmed (#4336) (v3.6 backport)",
        "body": "Unlock when sleeping to allow other log threads to make progress.\r\n\r\n(cherry picked from commit 8d7847c1837d484d618f52ac0fb4cba825767b54)\r\n\r\nPlease note the original changes to `test/csuite/timestamp_abort/main.c` was skipped here, to avoid dependency to WT-4342 and WT-3995.",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Dec 03, 2018 at 04:23 GMT",
        "updated_at": "Monday Dec 03, 2018 at 23:05 GMT",
        "closed_at": "Monday Dec 03, 2018 at 23:05 GMT",
        "merged_at": "Monday Dec 03, 2018 at 23:05 GMT"
    },
    {
        "key": null,
        "number": 4396,
        "state": "closed",
        "title": "TEST: NOT TO MERGE",
        "body": "",
        "base_ref": "wt-4463-reduce-run-time",
        "created_at": "Monday Dec 03, 2018 at 02:09 GMT",
        "updated_at": "Monday Dec 03, 2018 at 02:12 GMT",
        "closed_at": "Monday Dec 03, 2018 at 02:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4433",
        "number": 4395,
        "state": "closed",
        "title": "WT-4433 Revert Enable dynamic compression for snappy",
        "body": "To check the perf regression reported for ycsb small docs, reverting the change made to enable dynamic compression for snappy WT-4433.",
        "base_ref": "develop",
        "created_at": "Monday Dec 03, 2018 at 00:03 GMT",
        "updated_at": "Tuesday Dec 04, 2018 at 05:34 GMT",
        "closed_at": "Tuesday Dec 04, 2018 at 05:34 GMT",
        "merged_at": "Tuesday Dec 04, 2018 at 05:34 GMT"
    },
    {
        "key": "WT-4393",
        "number": 4394,
        "state": "closed",
        "title": "WT-4393 Explain cursor behaviour for read committed isolation.",
        "body": "WT_CURSOR::next and WT_CURSOR::prev behaviour for read committed isolation.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 02, 2018 at 22:20 GMT",
        "updated_at": "Monday Dec 03, 2018 at 04:29 GMT",
        "closed_at": "Monday Dec 03, 2018 at 04:29 GMT",
        "merged_at": "Monday Dec 03, 2018 at 04:29 GMT"
    },
    {
        "key": "WT-4331",
        "number": 4393,
        "state": "closed",
        "title": "WT-4331 Further extend max wait time for test case.",
        "body": "Our PPC machine has very slow I/O allow the test to wait up to 90 seconds for log file pre-allocation to work.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 02, 2018 at 22:08 GMT",
        "updated_at": "Monday Dec 03, 2018 at 00:31 GMT",
        "closed_at": "Monday Dec 03, 2018 at 00:31 GMT",
        "merged_at": "Monday Dec 03, 2018 at 00:31 GMT"
    },
    {
        "key": "WT-4393",
        "number": 4392,
        "state": "closed",
        "title": "WT-4393 explain read committed isolation",
        "body": "WT_CURSOR::next and WT_CURSOR::prev behaviour for read-committed isolation level. ",
        "base_ref": "develop",
        "created_at": "Sunday Dec 02, 2018 at 22:07 GMT",
        "updated_at": "Sunday Dec 02, 2018 at 22:16 GMT",
        "closed_at": "Sunday Dec 02, 2018 at 22:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4470",
        "number": 4391,
        "state": "closed",
        "title": "WT-4470 Minimize testing that requires TESTUTIL_ENABLE_LONG_TESTS",
        "body": "@lukech, @agorrod, with these changes, I think we're close to getting rid of `TESTUTIL_ENABLE_LONG_TESTS`.\r\n\r\nThe only remaining uses of `TESTUTIL_ENABLE_LONG_TESTS` are:\r\n```\r\ntest/evergreen.yml\r\ntest/csuite/time_shift_test.sh\r\n```\r\n\r\n@bvpvamsikrishna, I'm not sure what's going on with `time_shift_test.sh`. I can't find any place in the system that runs that shell script, and when I tried to run it, it hung on me.\r\n\r\nMost of the commits simply remove checks for `TESTUTIL_ENABLE_LONG_TESTS`, because the tests involved were almost always reasonably fast, there wasn't any point in limiting the tests to \"long\" runs.\r\n\r\nThere were two tests I changed in other ways:\r\n\r\n* 675b0c8: I increased the run-time of `wt2535_insert_race`, and changed it so the threads were queued behind a gate and didn't start until all of them were ready to run, to avoid them executing serially. This is more of a bug fix than anything else, the test wasn't really doing anything useful.\r\n\r\n* 50519a3: I reworked `wt2909_checkpoint_integrity` in a couple of ways, first to reduce the amount of testing done to find a midpoint, and second, to only do a single test run per value near the midpoint. @ddanderson, this probably deserves real review.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Sunday Dec 02, 2018 at 18:58 GMT",
        "updated_at": "Wednesday Dec 05, 2018 at 04:35 GMT",
        "closed_at": "Wednesday Dec 05, 2018 at 04:35 GMT",
        "merged_at": "Wednesday Dec 05, 2018 at 04:35 GMT"
    },
    {
        "key": "WT-4463",
        "number": 4390,
        "state": "closed",
        "title": "WT-4463 Reduce runtime for csuite handle locks testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Dec 02, 2018 at 14:32 GMT",
        "updated_at": "Monday Dec 03, 2018 at 02:25 GMT",
        "closed_at": "Monday Dec 03, 2018 at 01:57 GMT",
        "merged_at": "Monday Dec 03, 2018 at 01:57 GMT"
    },
    {
        "key": "WT-4469",
        "number": 4389,
        "state": "closed",
        "title": "WT-4469 Coverity #105148: redundant test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Dec 02, 2018 at 13:58 GMT",
        "updated_at": "Monday Dec 03, 2018 at 16:18 GMT",
        "closed_at": "Monday Dec 03, 2018 at 16:18 GMT",
        "merged_at": "Monday Dec 03, 2018 at 16:18 GMT"
    },
    {
        "key": "WT-4454",
        "number": 4388,
        "state": "closed",
        "title": "WT-4454 Auto-generate Evergreen configuration when adding new 'make check' or csuite tests",
        "body": "The changes in this PR include: \r\n- A new Python CLI script `test/evergreen/evg_cfg.py` that supports `check` (to identify missing tests in Evergreen configuration file) and `generate` (to generate and apply Evergreen configuration for missing tests) action types, both support 3 different test types - `make_check`, `csuite`, and `all`. \r\n- Hook the `check` action call of the new script into developer workflow through `dist/s_evergreen`, which will be called by `dist/s_all`.\r\n- A README for `test/csuite` \r\n\r\nSome sample output for the script runs can be found [here](https://jira.mongodb.org/browse/WT-4454?focusedCommentId=2076413&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-2076413). ",
        "base_ref": "develop",
        "created_at": "Friday Nov 30, 2018 at 06:12 GMT",
        "updated_at": "Thursday Dec 06, 2018 at 03:40 GMT",
        "closed_at": "Thursday Dec 06, 2018 at 03:40 GMT",
        "merged_at": "Thursday Dec 06, 2018 at 03:40 GMT"
    },
    {
        "key": "WT-4457",
        "number": 4387,
        "state": "closed",
        "title": "WT-4457 Add a maximum of dirty system buffers for the logging subsystem",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 29, 2018 at 14:01 GMT",
        "updated_at": "Monday Dec 03, 2018 at 15:05 GMT",
        "closed_at": "Monday Dec 03, 2018 at 15:05 GMT",
        "merged_at": "Monday Dec 03, 2018 at 15:05 GMT"
    },
    {
        "key": "WT-4384",
        "number": 4386,
        "state": "closed",
        "title": "WT-4384 Add documentation about session statistics cursor.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 29, 2018 at 03:30 GMT",
        "updated_at": "Friday Dec 07, 2018 at 00:31 GMT",
        "closed_at": "Friday Dec 07, 2018 at 00:31 GMT",
        "merged_at": "Friday Dec 07, 2018 at 00:31 GMT"
    },
    {
        "key": "WT-4464",
        "number": 4385,
        "state": "closed",
        "title": "WT-4464 In debug output row-store internal page keys may not format correctly",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 29, 2018 at 00:36 GMT",
        "updated_at": "Thursday Nov 29, 2018 at 04:27 GMT",
        "closed_at": "Thursday Nov 29, 2018 at 03:21 GMT",
        "merged_at": "Thursday Nov 29, 2018 at 03:21 GMT"
    },
    {
        "key": "WT-4455",
        "number": 4384,
        "state": "closed",
        "title": "WT-4455 test_wt4156_metadata_salvage with HAVE_ATTACH fails on zSeries",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 28, 2018 at 17:12 GMT",
        "updated_at": "Wednesday Nov 28, 2018 at 19:37 GMT",
        "closed_at": "Wednesday Nov 28, 2018 at 19:37 GMT",
        "merged_at": "Wednesday Nov 28, 2018 at 19:37 GMT"
    },
    {
        "key": "WT-4442",
        "number": 4383,
        "state": "closed",
        "title": "WT-4442 Add duplicate backup cursor functionality.",
        "body": "Not yet ready for merge.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 28, 2018 at 17:09 GMT",
        "updated_at": "Friday Nov 30, 2018 at 20:54 GMT",
        "closed_at": "Friday Nov 30, 2018 at 20:54 GMT",
        "merged_at": "Friday Nov 30, 2018 at 20:54 GMT"
    },
    {
        "key": "WT-4433",
        "number": 4382,
        "state": "closed",
        "title": "WT-4433 Enable dynamic compression for snappy",
        "body": "Enable dynamic compression for snappy",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 28, 2018 at 03:17 GMT",
        "updated_at": "Sunday Dec 02, 2018 at 23:25 GMT",
        "closed_at": "Thursday Nov 29, 2018 at 00:36 GMT",
        "merged_at": "Thursday Nov 29, 2018 at 00:36 GMT"
    },
    {
        "key": "WT-4421",
        "number": 4381,
        "state": "closed",
        "title": "WT-4421 wiredtiger calc modify test",
        "body": "@michaelcahill, @sulabhM, when I was looking at WT-4421 today, I hooked the new API into the `csuite/wt3338_partial_update` test program (that's code that tests if the underlying WiredTiger modify API does the right thing).\r\n\r\nThis branch fixes a minor problem, if the old/new data sizes are 0, in commit b023cb0.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 27, 2018 at 22:49 GMT",
        "updated_at": "Wednesday Nov 28, 2018 at 02:59 GMT",
        "closed_at": "Wednesday Nov 28, 2018 at 02:59 GMT",
        "merged_at": "Wednesday Nov 28, 2018 at 02:59 GMT"
    },
    {
        "key": "WT-4434",
        "number": 4380,
        "state": "closed",
        "title": "WT-4434 modify zstd compression level from 3 to 6",
        "body": "update zstd compression level from 3 to 6.\r\nI believe this will not have any compatibility issues. If I am wrong, request to comment.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 27, 2018 at 22:12 GMT",
        "updated_at": "Wednesday Nov 28, 2018 at 01:36 GMT",
        "closed_at": "Wednesday Nov 28, 2018 at 01:36 GMT",
        "merged_at": "Wednesday Nov 28, 2018 at 01:36 GMT"
    },
    {
        "key": "WT-4421",
        "number": 4379,
        "state": "closed",
        "title": "WT-4421 Exclude wiredtiger_calc_modify from the Java API.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 27, 2018 at 21:58 GMT",
        "updated_at": "Tuesday Nov 27, 2018 at 22:51 GMT",
        "closed_at": "Tuesday Nov 27, 2018 at 22:51 GMT",
        "merged_at": "Tuesday Nov 27, 2018 at 22:51 GMT"
    },
    {
        "key": "WT-4406",
        "number": 4378,
        "state": "closed",
        "title": "WT-4406 perf testing",
        "body": "@ddanderson This isn't for merge but will show you what I did to test using `os_cache_dirty_max` on the wtperf Jenkins jobs.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 27, 2018 at 14:31 GMT",
        "updated_at": "Thursday Dec 20, 2018 at 14:09 GMT",
        "closed_at": "Thursday Dec 20, 2018 at 14:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4434",
        "number": 4377,
        "state": "closed",
        "title": "WT-4434-update-zstd-compression-level",
        "body": "Updated the zstd compression level from 3 to 6.\r\nI believe this change will not have any backward compatibility issue.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 27, 2018 at 03:13 GMT",
        "updated_at": "Tuesday Nov 27, 2018 at 05:01 GMT",
        "closed_at": "Tuesday Nov 27, 2018 at 05:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4383",
        "number": 4376,
        "state": "closed",
        "title": "WT-4383 Update session statistics to reflect the operation statistics.",
        "body": "This change set increments the new session statistics at the desired locations. It does not add any decrement macro yet because s_define complains about the unused macros.",
        "base_ref": "develop",
        "created_at": "Monday Nov 26, 2018 at 22:19 GMT",
        "updated_at": "Wednesday Dec 05, 2018 at 04:05 GMT",
        "closed_at": "Wednesday Dec 05, 2018 at 04:04 GMT",
        "merged_at": "Wednesday Dec 05, 2018 at 04:04 GMT"
    },
    {
        "key": "WT-4192",
        "number": 4375,
        "state": "closed",
        "title": "WT-4192 Remove WiredTiger raw compression support.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 23, 2018 at 22:38 GMT",
        "updated_at": "Tuesday Nov 27, 2018 at 05:10 GMT",
        "closed_at": "Tuesday Nov 27, 2018 at 05:10 GMT",
        "merged_at": "Tuesday Nov 27, 2018 at 05:10 GMT"
    },
    {
        "key": "WT-4410",
        "number": 4374,
        "state": "closed",
        "title": "WT-4410 Split 'unit-test' task to reduce Evergreen Ubuntu build variant runtime",
        "body": "Split 'unit-test' Evergreen task (Python test/suite) into 8 buckets/tasks to reduce Makespan for the WiredTiger Ubuntu build variant. The split was based on test name (alphabetic order for the 1st letter after 'test_' prefix) and test runtime, a few alphabetics were grouped together to get them 'relatively' evenly-distributed runtime for each bucket/task. \r\n\r\nThere's a plan to implement a mechanism to auto-group and auto-generate buckets/tasks based on historic runtime for each tests, which would be covered later in WT-4441. Added a REAME under test/suite to describe the situation and plan. \r\n\r\nA patch build of the change is [here](https://evergreen.mongodb.com/version/5bf745092a60ed72f37df437). ",
        "base_ref": "develop",
        "created_at": "Friday Nov 23, 2018 at 01:20 GMT",
        "updated_at": "Tuesday Nov 27, 2018 at 02:33 GMT",
        "closed_at": "Tuesday Nov 27, 2018 at 02:33 GMT",
        "merged_at": "Tuesday Nov 27, 2018 at 02:33 GMT"
    },
    {
        "key": "WT-4452",
        "number": 4373,
        "state": "closed",
        "title": "WT-4452 big-endian checksums being written on zSeries platforms.",
        "body": "@agorrod, the WiredTiger library assumed that checksums are created in big-endian format on big-endian hardware, and that's not the case: both the software and hardware checksum implementations return checksums in little-endian format, even on big-endian hardware.\r\n\r\nThere's some cleanup and bug fix changes in the `salvage` test program, and clarifying the library verbose and error messages, and then the bug fix commit is f280c8a.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 22, 2018 at 19:29 GMT",
        "updated_at": "Friday Jan 11, 2019 at 00:29 GMT",
        "closed_at": "Friday Jan 11, 2019 at 00:29 GMT",
        "merged_at": "Friday Jan 11, 2019 at 00:29 GMT"
    },
    {
        "key": "WT-4440",
        "number": 4372,
        "state": "closed",
        "title": "WT-4440 Force a copy of the stable timestamp for clarity.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 21, 2018 at 12:35 GMT",
        "updated_at": "Thursday Nov 22, 2018 at 01:07 GMT",
        "closed_at": "Thursday Nov 22, 2018 at 01:07 GMT",
        "merged_at": "Thursday Nov 22, 2018 at 01:07 GMT"
    },
    {
        "key": "WT-4381",
        "number": 4371,
        "state": "closed",
        "title": "WT-4381 Reset session statistics on WT_SESSION::reset()",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 21, 2018 at 01:37 GMT",
        "updated_at": "Thursday Nov 22, 2018 at 02:30 GMT",
        "closed_at": "Thursday Nov 22, 2018 at 02:30 GMT",
        "merged_at": "Thursday Nov 22, 2018 at 02:30 GMT"
    },
    {
        "key": "WT-4417",
        "number": 4370,
        "state": "closed",
        "title": "WT-4417 Make os_cache_max and os_cache_dirty_max reconfigurable.",
        "body": "@agorrod This is a simple change that moves `os_cache[_dirty]_max` to reconfigurable via alter(). The ticket discusses another approach which can be something done at a later date. If we do that additional work, these options still need to be reconfigurable. Please review.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 20, 2018 at 21:26 GMT",
        "updated_at": "Tuesday Nov 27, 2018 at 02:23 GMT",
        "closed_at": "Tuesday Nov 27, 2018 at 02:23 GMT",
        "merged_at": "Tuesday Nov 27, 2018 at 02:23 GMT"
    },
    {
        "key": "WT-4319",
        "number": 4369,
        "state": "closed",
        "title": "WT-4319 Improvements to csuite tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 20, 2018 at 08:32 GMT",
        "updated_at": "Tuesday Dec 04, 2018 at 03:32 GMT",
        "closed_at": "Tuesday Dec 04, 2018 at 03:32 GMT",
        "merged_at": "Tuesday Dec 04, 2018 at 03:32 GMT"
    },
    {
        "key": "wt-4319",
        "number": 4368,
        "state": "closed",
        "title": "wt-4319",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 20, 2018 at 08:31 GMT",
        "updated_at": "Tuesday Nov 20, 2018 at 08:32 GMT",
        "closed_at": "Tuesday Nov 20, 2018 at 08:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4403",
        "number": 4367,
        "state": "closed",
        "title": "WT-4403 Add a statistic that tracks accumulated dirty cache content.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 19, 2018 at 23:57 GMT",
        "updated_at": "Tuesday Nov 20, 2018 at 05:18 GMT",
        "closed_at": "Tuesday Nov 20, 2018 at 05:18 GMT",
        "merged_at": "Tuesday Nov 20, 2018 at 05:18 GMT"
    },
    {
        "key": "WT-4427",
        "number": 4366,
        "state": "closed",
        "title": "WT-4427 Make WiredTiger timestamps always on and 8 bytes",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Nov 17, 2018 at 23:51 GMT",
        "updated_at": "Wednesday Nov 21, 2018 at 06:31 GMT",
        "closed_at": "Wednesday Nov 21, 2018 at 06:31 GMT",
        "merged_at": "Wednesday Nov 21, 2018 at 06:31 GMT"
    },
    {
        "key": "WT-3756",
        "number": 4365,
        "state": "closed",
        "title": "WT-3756 Adjust pre-allocated file amount downward if we're not using them quickly enough",
        "body": "@sueloverso I created this new pull request using the old `wt-3756-prealloc` branch. The previous pull request #4356 was reverted due to the failures described in [WT-3756](https://jira.mongodb.org/browse/WT-3756?focusedCommentId=2064129&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-2064129).",
        "base_ref": "develop",
        "created_at": "Friday Nov 16, 2018 at 05:33 GMT",
        "updated_at": "Wednesday Nov 21, 2018 at 22:51 GMT",
        "closed_at": "Wednesday Nov 21, 2018 at 22:51 GMT",
        "merged_at": "Wednesday Nov 21, 2018 at 22:51 GMT"
    },
    {
        "key": "WT-3756",
        "number": 4364,
        "state": "closed",
        "title": "Revert \"WT-3756 Adjust pre-allocated file amount downward if we're not using them quickly enough.\"",
        "body": "Reverts wiredtiger/wiredtiger#4356",
        "base_ref": "develop",
        "created_at": "Friday Nov 16, 2018 at 05:20 GMT",
        "updated_at": "Thursday Nov 22, 2018 at 21:46 GMT",
        "closed_at": "Friday Nov 16, 2018 at 05:21 GMT",
        "merged_at": "Friday Nov 16, 2018 at 05:21 GMT"
    },
    {
        "key": "WT-4419",
        "number": 4363,
        "state": "closed",
        "title": "WT-4419 big-endian machines incorrectly configure little-endian crc32c support",
        "body": "Replacement for #4362.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 15, 2018 at 13:43 GMT",
        "updated_at": "Wednesday Nov 21, 2018 at 15:36 GMT",
        "closed_at": "Wednesday Nov 21, 2018 at 15:36 GMT",
        "merged_at": "Wednesday Nov 21, 2018 at 15:36 GMT"
    },
    {
        "key": "WT-4419",
        "number": 4362,
        "state": "closed",
        "title": "WT-4419 big-endian machines incorrectly configure little-endian crc32c support",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 14, 2018 at 16:23 GMT",
        "updated_at": "Thursday Nov 15, 2018 at 13:44 GMT",
        "closed_at": "Thursday Nov 15, 2018 at 13:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4409",
        "number": 4361,
        "state": "closed",
        "title": "WT-4409 Fix workgen throttling",
        "body": "Fix wtperf.py to not modify the throttling number of a thread to account for log-like operations, it was doing the wrong calculation before.\r\n\r\nFix workgen so that small throttle numbers, or generally numbers that aren't divisible by 20 (internal THROTTLE_PER_SEC constant) are still handled.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 13, 2018 at 20:28 GMT",
        "updated_at": "Monday Nov 19, 2018 at 15:00 GMT",
        "closed_at": "Monday Nov 19, 2018 at 15:00 GMT",
        "merged_at": "Monday Nov 19, 2018 at 15:00 GMT"
    },
    {
        "key": "WT-4159",
        "number": 4360,
        "state": "closed",
        "title": "WT-4159 Start timer in log_server inside loop.",
        "body": "@ddanderson Please review this small change to make the timer in the log server thread more accurate. It is needed for PR #4356.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 13, 2018 at 16:19 GMT",
        "updated_at": "Tuesday Nov 13, 2018 at 16:52 GMT",
        "closed_at": "Tuesday Nov 13, 2018 at 16:52 GMT",
        "merged_at": "Tuesday Nov 13, 2018 at 16:52 GMT"
    },
    {
        "key": "WT-4378",
        "number": 4359,
        "state": "closed",
        "title": "WT-4378 Create new auto functions and cursor for the session level statistics.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 13, 2018 at 06:07 GMT",
        "updated_at": "Tuesday Nov 20, 2018 at 03:42 GMT",
        "closed_at": "Tuesday Nov 20, 2018 at 03:42 GMT",
        "merged_at": "Tuesday Nov 20, 2018 at 03:42 GMT"
    },
    {
        "key": "WT-4378",
        "number": 4358,
        "state": "closed",
        "title": "WT-4378 Create new functions and cursor for the session level statistics",
        "body": "__",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 13, 2018 at 06:02 GMT",
        "updated_at": "Tuesday Nov 13, 2018 at 06:03 GMT",
        "closed_at": "Tuesday Nov 13, 2018 at 06:03 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4378",
        "number": 4357,
        "state": "closed",
        "title": "WT-4378 Create new stats functions and cursor for session level stats.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 13, 2018 at 04:19 GMT",
        "updated_at": "Tuesday Nov 13, 2018 at 06:00 GMT",
        "closed_at": "Tuesday Nov 13, 2018 at 06:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3756",
        "number": 4356,
        "state": "closed",
        "title": "WT-3756 Adjust pre-allocated file amount downward if we're not using them quickly enough.",
        "body": "@agorrod, here's one possible algorithm to adjust the number of pre-allocated log files downward. It may be just right or too aggressive.\r\n\r\nI have also modified a test that generates a lot of log files in a burst so that I can detect it being adjusted once it is idle.",
        "base_ref": "develop",
        "created_at": "Monday Nov 12, 2018 at 21:14 GMT",
        "updated_at": "Friday Nov 16, 2018 at 05:17 GMT",
        "closed_at": "Friday Nov 16, 2018 at 00:36 GMT",
        "merged_at": "Friday Nov 16, 2018 at 00:36 GMT"
    },
    {
        "key": "WT-4345",
        "number": 4355,
        "state": "closed",
        "title": "WT-4345 Set corruption and return salvage on encountering a missing log file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 12, 2018 at 05:27 GMT",
        "updated_at": "Wednesday Nov 14, 2018 at 02:21 GMT",
        "closed_at": "Wednesday Nov 14, 2018 at 02:21 GMT",
        "merged_at": "Wednesday Nov 14, 2018 at 02:21 GMT"
    },
    {
        "key": "WT-4422",
        "number": 4354,
        "state": "closed",
        "title": "WT-4422 Don't queue clean pages for urgent eviction.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 12, 2018 at 03:33 GMT",
        "updated_at": "Monday Nov 12, 2018 at 04:52 GMT",
        "closed_at": "Monday Nov 12, 2018 at 04:52 GMT",
        "merged_at": "Monday Nov 12, 2018 at 04:52 GMT"
    },
    {
        "key": "WT-4421",
        "number": 4353,
        "state": "closed",
        "title": "WT-4421 Add a way to calculate modify operations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 12, 2018 at 03:07 GMT",
        "updated_at": "Tuesday Nov 27, 2018 at 18:24 GMT",
        "closed_at": "Tuesday Nov 27, 2018 at 18:23 GMT",
        "merged_at": "Tuesday Nov 27, 2018 at 18:23 GMT"
    },
    {
        "key": "WT-4418",
        "number": 4352,
        "state": "closed",
        "title": "WT-4418 Don't keep key/value memory buffers allocated for cached cursors",
        "body": "This change was suggested by @michaelcahill .",
        "base_ref": "develop",
        "created_at": "Friday Nov 09, 2018 at 15:26 GMT",
        "updated_at": "Friday Nov 09, 2018 at 16:18 GMT",
        "closed_at": "Friday Nov 09, 2018 at 16:18 GMT",
        "merged_at": "Friday Nov 09, 2018 at 16:18 GMT"
    },
    {
        "key": "WT-4411",
        "number": 4351,
        "state": "closed",
        "title": "WT-4411 Added connection statistic for current total of cached cursors.",
        "body": "Renamed data source statistic for current total.  Tweeked descriptions\r\nof other cache cursor statistics.  Added test to verify new statistic.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 08, 2018 at 17:07 GMT",
        "updated_at": "Monday Nov 12, 2018 at 03:48 GMT",
        "closed_at": "Monday Nov 12, 2018 at 03:48 GMT",
        "merged_at": "Monday Nov 12, 2018 at 03:48 GMT"
    },
    {
        "key": "WT-4412",
        "number": 4350,
        "state": "closed",
        "title": "WT-4412 Fix Coverity issues.",
        "body": "@ddanderson please review these small fixes for issues that Coverity found.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 07, 2018 at 20:08 GMT",
        "updated_at": "Wednesday Nov 07, 2018 at 23:43 GMT",
        "closed_at": "Wednesday Nov 07, 2018 at 23:43 GMT",
        "merged_at": "Wednesday Nov 07, 2018 at 23:43 GMT"
    },
    {
        "key": "WT-4395",
        "number": 4349,
        "state": "closed",
        "title": "WT-4395 Use WT_TRET so error return is not overwritten. (#4339) [v3.6 backport]",
        "body": "* WT-4395 Use WT_TRET so error return is not overwritten.\r\n\r\n* Update comment and use T_RET in one more place.\r\n\r\n(cherry picked from commit 311601ee79024301cda62e6fd07c59473595e9f4)",
        "base_ref": "mongodb-3.6",
        "created_at": "Sunday Nov 04, 2018 at 23:14 GMT",
        "updated_at": "Sunday Nov 04, 2018 at 23:45 GMT",
        "closed_at": "Sunday Nov 04, 2018 at 23:43 GMT",
        "merged_at": "Sunday Nov 04, 2018 at 23:43 GMT"
    },
    {
        "key": "WT-4372",
        "number": 4348,
        "state": "closed",
        "title": "WT-4372 Add a script to measure and compare latency runs in a standard way",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 02, 2018 at 16:58 GMT",
        "updated_at": "Monday Nov 19, 2018 at 22:00 GMT",
        "closed_at": "Monday Nov 19, 2018 at 21:59 GMT",
        "merged_at": "Monday Nov 19, 2018 at 21:59 GMT"
    },
    {
        "key": "WT-4405",
        "number": 4347,
        "state": "closed",
        "title": "WT-4405 Fix cursor next & prev for prepared transactions.",
        "body": "I have added a python test to test the cursor next / prev behaviour with respect to prepared transactions.\r\nI have made some code changes as well.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 02, 2018 at 06:22 GMT",
        "updated_at": "Monday Nov 19, 2018 at 02:17 GMT",
        "closed_at": "Monday Nov 19, 2018 at 02:15 GMT",
        "merged_at": "Monday Nov 19, 2018 at 02:15 GMT"
    },
    {
        "key": "WT-4402",
        "number": 4346,
        "state": "closed",
        "title": "WT-4402 Add rollback support and monitor JSON output.",
        "body": "@ddanderson please review this. While debugging throttling in workgen, I'm running the configuration on wtperf. I'm seeing stalls during checkpoints and wanted the monitoring JSON that is in workgen, and it needed rollback support for the log like table.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 01, 2018 at 18:19 GMT",
        "updated_at": "Tuesday Nov 06, 2018 at 15:03 GMT",
        "closed_at": "Tuesday Nov 06, 2018 at 15:02 GMT",
        "merged_at": "Tuesday Nov 06, 2018 at 15:02 GMT"
    },
    {
        "key": "WT-4401",
        "number": 4345,
        "state": "closed",
        "title": "WT-4401 workgen: wtperf emulation: fix sample_interval with integer values",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 31, 2018 at 16:08 GMT",
        "updated_at": "Monday Nov 05, 2018 at 15:15 GMT",
        "closed_at": "Monday Nov 05, 2018 at 15:15 GMT",
        "merged_at": "Monday Nov 05, 2018 at 15:15 GMT"
    },
    {
        "key": "WT-4400",
        "number": 4344,
        "state": "closed",
        "title": "WT-4400 Fix workgen use of PRIxxx macros, needed for old C++ compilers.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 31, 2018 at 15:07 GMT",
        "updated_at": "Wednesday Oct 31, 2018 at 15:42 GMT",
        "closed_at": "Wednesday Oct 31, 2018 at 15:41 GMT",
        "merged_at": "Wednesday Oct 31, 2018 at 15:41 GMT"
    },
    {
        "key": "WT-4399",
        "number": 4343,
        "state": "closed",
        "title": " WT-4399 Fix compression for workgen's wtperf emulation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 31, 2018 at 01:10 GMT",
        "updated_at": "Monday Nov 05, 2018 at 15:16 GMT",
        "closed_at": "Monday Nov 05, 2018 at 15:16 GMT",
        "merged_at": "Monday Nov 05, 2018 at 15:16 GMT"
    },
    {
        "key": "WT-4043",
        "number": 4342,
        "state": "closed",
        "title": "WT-4043 Fix assertion failure while dumping the cache",
        "body": "Acquire a read lock on the dhandle just before dumping cache information. This would prevent concurrent updates to dhandle state. Also prevent dumping the handle if it is already marked discarded.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 30, 2018 at 22:52 GMT",
        "updated_at": "Monday Nov 12, 2018 at 03:43 GMT",
        "closed_at": "Monday Nov 12, 2018 at 03:43 GMT",
        "merged_at": "Monday Nov 12, 2018 at 03:43 GMT"
    },
    {
        "key": "WT-4366",
        "number": 4341,
        "state": "closed",
        "title": "WT-4366 Fix how test/format handles prepare conflict errors",
        "body": "Re-create the WT-4366 branch, we still can't merge it.\r\n\r\nIt's already been reviewed, see #4323.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 30, 2018 at 20:38 GMT",
        "updated_at": "Friday Dec 07, 2018 at 01:07 GMT",
        "closed_at": "Monday Dec 03, 2018 at 00:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4396",
        "number": 4340,
        "state": "closed",
        "title": "WT-4396 when retrying after prepare-conflict, cursor unable to find a valid update",
        "body": "@bvpvamsikrishna, in this failure, I'm seeing update chains where all of the updates are in the `WT_PREPARE_INPROGRESS` state. I'm guessing the right approach is to retry until the update we're waiting for moves out of that state?\r\n\r\nHere's the relevant state at one of the failures:\r\n\r\n```\r\n(gdb) p session.txn\r\n$3 = {\r\n  id = 940387,\r\n  isolation = WT_ISO_READ_COMMITTED,\r\n  forced_iso = 0,\r\n  snap_min = 940344,\r\n  snap_max = 940400,\r\n  snapshot = 0x7f197cf70a70,\r\n  snapshot_count = 6,\r\n  txn_logsync = 0,\r\n  commit_timestamp = {\r\n    val = 605637\r\n  },\r\n  first_commit_timestamp = {\r\n    val = 605637\r\n  },\r\n  prepare_timestamp = {\r\n    val = 605602\r\n  },\r\n  read_timestamp = {\r\n    val = 605651\r\n  },\r\n  commit_timestampq = {\r\n    tqe_next = 0x0,\r\n    tqe_prev = 0x242fe88\r\n  },\r\n  read_timestampq = {\r\n    tqe_next = 0x7f19c03db460,\r\n    tqe_prev = 0x242fec0\r\n  },\r\n  clear_commit_q = false,\r\n  clear_read_q = false,\r\n  mod = 0x7f197c1cb080,\r\n  mod_alloc = 1040,\r\n  mod_count = 3,\r\n  multi_update_count = 0,\r\n  logrec = 0x0,\r\n  notify = 0x0,\r\n  ckpt_lsn = {\r\n    l = {\r\n      offset = 0,\r\n      file = 0\r\n    },\r\n    file_offset = 0\r\n  },\r\n  ckpt_nsnapshot = 0,\r\n  ckpt_snapshot = 0x0,\r\n  full_ckpt = false,\r\n  rollback_reason = 0x0,\r\n  flags = 4108\r\n}\r\n\r\n(gdb) p cbt.ins\r\n$4 = (WT_INSERT *) 0x7f19900272b0\r\n\r\n(gdb) yyy cbt.ins.upd\r\n$5 = {\r\n  txnid = 18446744073709551615,\r\n  timestamp = {\r\n    val = 605670\r\n  },\r\n  next = 0x7f19983f03a0,\r\n  size = 11,\r\n  type = 4 '\\004',\r\n  prepare_state = 1 '\\001',\r\n  data = 0x7f198c0b9a0e \"0000172032/\"\r\n}\r\n$6 = {\r\n  txnid = 18446744073709551615,\r\n  timestamp = {\r\n    val = 605553\r\n  },\r\n  next = 0x7f1990027300,\r\n  size = 11,\r\n  type = 4 '\\004',\r\n  prepare_state = 1 '\\001',\r\n  data = 0x7f19983f03be \"0000172032/\"\r\n}                                     \r\n$7 = {\r\n  txnid = 18446744073709551615,\r\n  timestamp = {                       \r\n    val = 605510\r\n  },\r\n  next = 0x0,\r\n  size = 11,\r\n  type = 4 '\\004',\r\n  prepare_state = 1 '\\001',\r\n  data = 0x7f199002731e \"0000172032/\"\r\n}\r\n```",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 30, 2018 at 18:47 GMT",
        "updated_at": "Thursday Nov 01, 2018 at 03:07 GMT",
        "closed_at": "Thursday Nov 01, 2018 at 03:06 GMT",
        "merged_at": "Thursday Nov 01, 2018 at 03:06 GMT"
    },
    {
        "key": "WT-4395",
        "number": 4339,
        "state": "closed",
        "title": "WT-4395 Use WT_TRET so error return is not overwritten.",
        "body": "@ddanderson Please review this small change. The code path changed slightly with the log corruption/salvage work a couple months ago and in the specific case of a log cursor getting an error, that error return would get overwritten and lost.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 30, 2018 at 17:33 GMT",
        "updated_at": "Wednesday Oct 31, 2018 at 14:12 GMT",
        "closed_at": "Wednesday Oct 31, 2018 at 14:12 GMT",
        "merged_at": "Wednesday Oct 31, 2018 at 14:12 GMT"
    },
    {
        "key": "WT-4394",
        "number": 4338,
        "state": "closed",
        "title": "WT-4394 Reduce Evergreen Ubuntu build variant runtime",
        "body": "This is NOT READY FOR REVIEW yet!\r\n\r\nChanges include:\r\n- Add SMP command option (-j 4) to the 'make check' command\r\n- Remove (disable) 'TESTUTIL_ENABLE_LONG_TESTS=1' setting before calling 'make check'\r\n- Split csuite tests into a separate task",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 30, 2018 at 05:19 GMT",
        "updated_at": "Thursday Nov 22, 2018 at 05:43 GMT",
        "closed_at": "Thursday Nov 22, 2018 at 05:43 GMT",
        "merged_at": "Thursday Nov 22, 2018 at 05:43 GMT"
    },
    {
        "key": "WT-4393",
        "number": 4337,
        "state": "closed",
        "title": "WT-4393 Fix read committed transaction visibility problem of next / prev",
        "body": "For read committed isolation, each operation needs to get a transaction snapshot.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 30, 2018 at 03:57 GMT",
        "updated_at": "Monday Nov 05, 2018 at 22:39 GMT",
        "closed_at": "Monday Nov 05, 2018 at 22:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4343",
        "number": 4336,
        "state": "closed",
        "title": "WT-4343 Unlock when sleeping to allow other log threads to make progress.",
        "body": "@agorrod here's a lighter version of the same fix from the other branch. I found that simply releasing and re-acquiring the locks allows threads to make progress and I am unable to reproduce the many-thread failure with these smaller changes (well over 500 iterations). On develop I can reproduce usually in under 30 iterations.\r\n\r\nI also moved the Jenkins log perf test to this branch and it avoids the issues the original branch showed. The min/max throughput is back where it was and the performance of the logging variants is within normal variations.\r\n\r\nI believe this branch will have less impact on MongoDB. If you agree, this should be reviewed and merged and the other one closed.",
        "base_ref": "develop",
        "created_at": "Monday Oct 29, 2018 at 20:04 GMT",
        "updated_at": "Monday Oct 29, 2018 at 21:13 GMT",
        "closed_at": "Monday Oct 29, 2018 at 21:13 GMT",
        "merged_at": "Monday Oct 29, 2018 at 21:13 GMT"
    },
    {
        "key": "WT-4371",
        "number": 4335,
        "state": "closed",
        "title": "WT-4371 workgen improvements to create a MongoDB-like workload",
        "body": "Includes the ability specify a fractional sample_interval,\r\nan operator for log_flush, and more realistic log_like files\r\n(enables logging on that file, and adds a flush/sleep thread).\r\nResolved some warnings for variables and parameters that were unused.",
        "base_ref": "develop",
        "created_at": "Monday Oct 29, 2018 at 03:06 GMT",
        "updated_at": "Tuesday Oct 30, 2018 at 23:12 GMT",
        "closed_at": "Tuesday Oct 30, 2018 at 23:12 GMT",
        "merged_at": "Tuesday Oct 30, 2018 at 23:12 GMT"
    },
    {
        "key": "WT-4392",
        "number": 4334,
        "state": "closed",
        "title": "WT-4392 Lint",
        "body": "Each unrelated change is an individual commit, reviewing the commits is probably the simplest way to review.",
        "base_ref": "develop",
        "created_at": "Sunday Oct 28, 2018 at 21:56 GMT",
        "updated_at": "Tuesday Oct 30, 2018 at 02:34 GMT",
        "closed_at": "Tuesday Oct 30, 2018 at 02:34 GMT",
        "merged_at": "Tuesday Oct 30, 2018 at 02:34 GMT"
    },
    {
        "key": "WT-4376",
        "number": 4333,
        "state": "closed",
        "title": "WT-4376 Single-thread index open with WT_WITH_TABLE_WRITE_LOCK.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Oct 28, 2018 at 17:30 GMT",
        "updated_at": "Tuesday Oct 30, 2018 at 02:37 GMT",
        "closed_at": "Tuesday Oct 30, 2018 at 02:37 GMT",
        "merged_at": "Tuesday Oct 30, 2018 at 02:37 GMT"
    },
    {
        "key": "WT-4389",
        "number": 4332,
        "state": "closed",
        "title": "WT-4389 Allow multiple arguments to be passed to wtperf.",
        "body": "When using the wtperf_run.sh script.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 25, 2018 at 21:42 GMT",
        "updated_at": "Friday Oct 26, 2018 at 05:23 GMT",
        "closed_at": "Friday Oct 26, 2018 at 05:23 GMT",
        "merged_at": "Friday Oct 26, 2018 at 05:23 GMT"
    },
    {
        "key": "WT-4385",
        "number": 4331,
        "state": "closed",
        "title": "WT-4385 Prepare-conflict during a cursor scan can return the wrong key",
        "body": "@bvpvamsikrishna, the core bug fix is 96a3059.\r\n\r\nI think 7ae8a03 probably needs close review. If I'm wrong in my assertion, we'll still need some kind of change there because it must be wrong to fall into the iteration code.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 25, 2018 at 17:48 GMT",
        "updated_at": "Tuesday Oct 30, 2018 at 04:05 GMT",
        "closed_at": "Tuesday Oct 30, 2018 at 04:05 GMT",
        "merged_at": "Tuesday Oct 30, 2018 at 04:05 GMT"
    },
    {
        "key": "WT-4366",
        "number": 4330,
        "state": "closed",
        "title": "WT-4366 Fix how test/format handles prepare conflict errors",
        "body": "There was fallout from the initial merge of #4325 regarding cursor out-of-order:\r\nhttp://build.wiredtiger.com:8080/job/wiredtiger-test-race-condition-stress-sanitizer/27811/\r\nhttp://build.wiredtiger.com:8080/job/wiredtiger-test-format-stress/68652/\r\n\r\n@keithbostic @agorrod I recreated the PR based on the old `wt-4366-format-prepare-conflict2`  branch for further work. ",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 24, 2018 at 22:33 GMT",
        "updated_at": "Tuesday Oct 30, 2018 at 17:33 GMT",
        "closed_at": "Tuesday Oct 30, 2018 at 17:33 GMT",
        "merged_at": "Tuesday Oct 30, 2018 at 17:33 GMT"
    },
    {
        "key": "WT-4366",
        "number": 4329,
        "state": "closed",
        "title": "Revert \"WT-4366 Fix how test/format handles prepare conflict errors\"",
        "body": "Reverts wiredtiger/wiredtiger#4325",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 24, 2018 at 22:02 GMT",
        "updated_at": "Wednesday Oct 24, 2018 at 22:19 GMT",
        "closed_at": "Wednesday Oct 24, 2018 at 22:15 GMT",
        "merged_at": "Wednesday Oct 24, 2018 at 22:15 GMT"
    },
    {
        "key": "WT-4298",
        "number": 4328,
        "state": "closed",
        "title": "WT-4298 Workgen fixes. Retry on WT_ROLLBACK. Clear ops after warmup.",
        "body": "Not yet ready for review. There is still one more area that needs fixing.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 24, 2018 at 19:46 GMT",
        "updated_at": "Monday Oct 29, 2018 at 14:47 GMT",
        "closed_at": "Monday Oct 29, 2018 at 14:47 GMT",
        "merged_at": "Monday Oct 29, 2018 at 14:47 GMT"
    },
    {
        "key": "WT-4387",
        "number": 4327,
        "state": "closed",
        "title": "WT-4387 Fix ordering of referenced shared libraries",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 24, 2018 at 14:47 GMT",
        "updated_at": "Thursday Nov 22, 2018 at 21:46 GMT",
        "closed_at": "Wednesday Oct 24, 2018 at 15:57 GMT",
        "merged_at": "Wednesday Oct 24, 2018 at 15:57 GMT"
    },
    {
        "key": "WT-4371",
        "number": 4326,
        "state": "closed",
        "title": "WT-4371 Change ordering of referenced shared libraries",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 24, 2018 at 14:41 GMT",
        "updated_at": "Wednesday Oct 24, 2018 at 14:42 GMT",
        "closed_at": "Wednesday Oct 24, 2018 at 14:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4366",
        "number": 4325,
        "state": "closed",
        "title": "WT-4366 Fix how test/format handles prepare conflict errors",
        "body": "It should retry until a different result is seen.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 24, 2018 at 02:00 GMT",
        "updated_at": "Tuesday Oct 30, 2018 at 17:33 GMT",
        "closed_at": "Wednesday Oct 24, 2018 at 02:32 GMT",
        "merged_at": "Wednesday Oct 24, 2018 at 02:32 GMT"
    },
    {
        "key": "WT-4374",
        "number": 4324,
        "state": "closed",
        "title": "WT-4374 Fix a bug where a page could transition from WT_REF_LIMBO incorrectly",
        "body": "It's possible to transition from WT_REF_LIMBO to WT_REF_MEM incorrectly.",
        "base_ref": "develop",
        "created_at": "Monday Oct 22, 2018 at 23:46 GMT",
        "updated_at": "Tuesday Oct 23, 2018 at 00:24 GMT",
        "closed_at": "Tuesday Oct 23, 2018 at 00:24 GMT",
        "merged_at": "Tuesday Oct 23, 2018 at 00:24 GMT"
    },
    {
        "key": "WT-4366",
        "number": 4323,
        "state": "closed",
        "title": "WT-4366 format doesn't handle WT_PREPARE_CONFLICT returns on reads",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 22, 2018 at 12:57 GMT",
        "updated_at": "Wednesday Oct 24, 2018 at 02:01 GMT",
        "closed_at": "Wednesday Oct 24, 2018 at 02:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4366",
        "number": 4322,
        "state": "closed",
        "title": "WT-4366 format doesn't handle WT_PREPARE_CONFLICT returns on reads",
        "body": "",
        "base_ref": "wt-3898-prepared-lookaside",
        "created_at": "Monday Oct 22, 2018 at 12:52 GMT",
        "updated_at": "Monday Oct 22, 2018 at 12:56 GMT",
        "closed_at": "Monday Oct 22, 2018 at 12:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3898",
        "number": 4321,
        "state": "closed",
        "title": "WT-3898 Keep prepared updates in lookaside until they are read.",
        "body": "We need to consider a lookaside block with prepared updates \"active\" until they are read back into cache (as part of commit or rollback).  Otherwise we can decide that the history is no longer relevant and transition a page to the WT_REF_MEM state, ignoring its history.",
        "base_ref": "develop",
        "created_at": "Saturday Oct 20, 2018 at 12:26 GMT",
        "updated_at": "Wednesday Oct 24, 2018 at 04:06 GMT",
        "closed_at": "Wednesday Oct 24, 2018 at 04:06 GMT",
        "merged_at": "Wednesday Oct 24, 2018 at 04:06 GMT"
    },
    {
        "key": "WT-4339",
        "number": 4320,
        "state": "closed",
        "title": "WT-4339 Revert part of a previous commit that simplified handle locking",
        "body": "There was a bug in that change that we don't fully understand yet. Also add a test enhancement that lets us see the bug quickly.",
        "base_ref": "develop",
        "created_at": "Monday Oct 15, 2018 at 20:11 GMT",
        "updated_at": "Friday Oct 19, 2018 at 19:41 GMT",
        "closed_at": "Friday Oct 19, 2018 at 19:41 GMT",
        "merged_at": "Friday Oct 19, 2018 at 19:41 GMT"
    },
    {
        "key": "WT-4358",
        "number": 4319,
        "state": "closed",
        "title": "WT-4358 operating on closed/evicted tree",
        "body": "@agorrod, this is the test program I've been using to try and reproduce the handle-locking issues.\r\n\r\nIt pushes the handle code pretty hard, but it's not finding any problems.\r\n\r\nAnyway, I figured I'd go ahead and merge the test program, absent any other ideas on ways to make it push the system harder.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 11, 2018 at 16:16 GMT",
        "updated_at": "Monday Oct 22, 2018 at 07:06 GMT",
        "closed_at": "Monday Oct 22, 2018 at 04:18 GMT",
        "merged_at": "Monday Oct 22, 2018 at 04:18 GMT"
    },
    {
        "key": "WT-4355",
        "number": 4318,
        "state": "closed",
        "title": "WT-4355 transaction rollback crash for prepared updates.",
        "body": "multi_update_count is tracked only for commit, but not for rollback. Hence moved the assertion to check only in case of commit.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 09, 2018 at 19:26 GMT",
        "updated_at": "Tuesday Oct 09, 2018 at 20:05 GMT",
        "closed_at": "Tuesday Oct 09, 2018 at 20:05 GMT",
        "merged_at": "Tuesday Oct 09, 2018 at 20:05 GMT"
    },
    {
        "key": "WT-4343",
        "number": 4317,
        "state": "closed",
        "title": "WT-4343 Switch slot after releasing to avoid deadlock.",
        "body": "Release slot lock if waiting for a new one.\r\n\r\nNot yet ready for review. Want to run log perf tests on branch to see if there's any perf regression.",
        "base_ref": "develop",
        "created_at": "Monday Oct 08, 2018 at 15:11 GMT",
        "updated_at": "Monday Oct 29, 2018 at 21:16 GMT",
        "closed_at": "Monday Oct 29, 2018 at 21:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4214",
        "number": 4316,
        "state": "closed",
        "title": "WT-4214 Initialize rwlock before use.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 05, 2018 at 01:46 GMT",
        "updated_at": "Friday Oct 05, 2018 at 02:09 GMT",
        "closed_at": "Friday Oct 05, 2018 at 02:09 GMT",
        "merged_at": "Friday Oct 05, 2018 at 02:09 GMT"
    },
    {
        "key": "WT-4293",
        "number": 4315,
        "state": "closed",
        "title": "WT-4293 WT_CURSOR.remove can lose a cursor position",
        "body": "@michaelcahill, the simplest solution I could find was to maintain the \"positioned\" status of the cursor in the upper-level cursor code. That's arguably a layering violation, let me know if you see something better.\r\n\r\nI also reworked error handling in the Btree cursor remove code, there were paths were we could lose errors.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 04, 2018 at 16:32 GMT",
        "updated_at": "Friday Oct 05, 2018 at 06:42 GMT",
        "closed_at": "Friday Oct 05, 2018 at 06:42 GMT",
        "merged_at": "Friday Oct 05, 2018 at 06:42 GMT"
    },
    {
        "key": "WT-4351",
        "number": 4314,
        "state": "closed",
        "title": "WT-4351 Ensure resolving prepared transactions use updates from itself",
        "body": "As part of indirect reference resolution in prepared transactions, the transaction operation structure currently always refer the first update in the update chain. This assumption is wrong, first update might be from a different transaction in case of lower isolation levels.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 04, 2018 at 06:40 GMT",
        "updated_at": "Friday Oct 05, 2018 at 03:00 GMT",
        "closed_at": "Friday Oct 05, 2018 at 03:00 GMT",
        "merged_at": "Friday Oct 05, 2018 at 03:00 GMT"
    },
    {
        "key": "WT-4220",
        "number": 4313,
        "state": "closed",
        "title": "WT-4220 Enable long running prepared transaction support",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 04, 2018 at 01:37 GMT",
        "updated_at": "Monday Oct 08, 2018 at 06:23 GMT",
        "closed_at": "Monday Oct 08, 2018 at 06:23 GMT",
        "merged_at": "Monday Oct 08, 2018 at 06:23 GMT"
    },
    {
        "key": "WT-4348",
        "number": 4312,
        "state": "closed",
        "title": "WT-4348 In directio test, create all tables before spawning threads.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 02, 2018 at 19:49 GMT",
        "updated_at": "Wednesday Oct 03, 2018 at 15:04 GMT",
        "closed_at": "Wednesday Oct 03, 2018 at 15:04 GMT",
        "merged_at": "Wednesday Oct 03, 2018 at 15:04 GMT"
    },
    {
        "key": "WT-4346",
        "number": 4311,
        "state": "closed",
        "title": "WT-4346 Remove prepared updates from lookaside on reading the page back",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 02, 2018 at 06:23 GMT",
        "updated_at": "Friday Oct 05, 2018 at 03:04 GMT",
        "closed_at": "Friday Oct 05, 2018 at 03:03 GMT",
        "merged_at": "Friday Oct 05, 2018 at 03:03 GMT"
    },
    {
        "key": "WT-4347",
        "number": 4310,
        "state": "closed",
        "title": "WT-4347 Limit the threads spawned by timestamp_abort with defualt config",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 02, 2018 at 03:25 GMT",
        "updated_at": "Tuesday Oct 02, 2018 at 08:08 GMT",
        "closed_at": "Tuesday Oct 02, 2018 at 08:08 GMT",
        "merged_at": "Tuesday Oct 02, 2018 at 08:08 GMT"
    },
    {
        "key": "WT-4342",
        "number": 4309,
        "state": "closed",
        "title": "WT-4342 Set session max on all configuration strings.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2018 at 17:55 GMT",
        "updated_at": "Saturday Sep 29, 2018 at 19:17 GMT",
        "closed_at": "Saturday Sep 29, 2018 at 19:17 GMT",
        "merged_at": "Saturday Sep 29, 2018 at 19:17 GMT"
    },
    {
        "key": "WT-4297",
        "number": 4308,
        "state": "closed",
        "title": "WT-4297 workgen support for checkpoints and better tracking of latencies",
        "body": "- In workgen, added an internal implementation to Operations, created a sleep operation, a checkpoint operation and a no-op operation.\r\n- Added tracking of checkpoint operations.\r\n- Track the number of operations in progress to make it easier to tell if we are in the middle of a checkpoint.\r\n- Removed latency smoothing, it doesn't help.\r\n- Added support for 50/95/99 percentile latencies\r\n- Added support to the wtperf simulation script for checkpoint_threads, checkpoint_interval and added a new (non-wtperf) option sample_file.\r\n- Added a wtperf file to track latency of operations during checkpoints.\r\n\r\nWorkgen previously had capability of generating the latency information as time series that could be read by t2. These changes enhance the information and expose it as an option to .wtperf files.",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2018 at 16:31 GMT",
        "updated_at": "Friday Oct 05, 2018 at 02:34 GMT",
        "closed_at": "Friday Oct 05, 2018 at 02:34 GMT",
        "merged_at": "Friday Oct 05, 2018 at 02:34 GMT"
    },
    {
        "key": "WT-3633",
        "number": 4307,
        "state": "closed",
        "title": "WT-3633 workgen support for checkpoints and better tracking of latencies",
        "body": "In workgen, added an internal implementation to Operations, created a\r\nsleep operation, a checkpoint operation and a no-op operation.\r\nAdded tracking of checkpoint operations.\r\nTrack the number of operations in progress to make it easier to tell if\r\nwe are in the middle of a checkpoint.\r\nRemoved latency smoothing, it doesn't help.\r\nAdded support to the wtperf simulation script for checkpoint_threads,\r\ncheckpoint_interval and added a new (non-wtperf) option sample_file.\r\nAdded a wtperf file to track latency of operations during checkpoints.",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2018 at 15:33 GMT",
        "updated_at": "Friday Sep 28, 2018 at 16:07 GMT",
        "closed_at": "Friday Sep 28, 2018 at 16:07 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4341",
        "number": 4306,
        "state": "closed",
        "title": "WT-4341 Support million collection test in Evergreen",
        "body": "This part of the change is about Evergreen yaml configuration in order to support million collection testing in Evergreen CI system. \r\n\r\nThe solution is to put the new `million-collect-test` task into a newly created `large-scale-test` build variant of the existing `WiredTiger` project.\r\n\r\nThe related script changes for `largescale/run-million-collection-test.sh` within `mongo-tests` repo will be covered by BUILD-6194 (PR #[8](https://github.com/wiredtiger/mongo-tests/pull/8)).",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2018 at 08:14 GMT",
        "updated_at": "Thursday Oct 11, 2018 at 19:24 GMT",
        "closed_at": "Thursday Oct 11, 2018 at 19:24 GMT",
        "merged_at": "Thursday Oct 11, 2018 at 19:24 GMT"
    },
    {
        "key": "WT-4315",
        "number": 4305,
        "state": "closed",
        "title": "WT-4315 In rollback_to_stable, only check timestamp order if enforced",
        "body": "Unless a table is configured with assert=(commit_timestamp=XX)\r\nskip validating the timestamp ordering during rollback to stable.",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2018 at 04:53 GMT",
        "updated_at": "Friday Sep 28, 2018 at 07:11 GMT",
        "closed_at": "Friday Sep 28, 2018 at 07:11 GMT",
        "merged_at": "Friday Sep 28, 2018 at 07:11 GMT"
    },
    {
        "key": "WT-4224",
        "number": 4304,
        "state": "closed",
        "title": "WT-4224 statistics for long running prepared transactions.",
        "body": "Added initial set of statistics.\r\n  1.  Number of active prepared updates ( represents the number of updates unlined from txn op)\r\n   2. Number of prepared updates resolved ( represents the number of updates resolved through indirect references).\r\n   3. Number of prepared updates added to lookaside.",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2018 at 01:41 GMT",
        "updated_at": "Tuesday Oct 02, 2018 at 07:58 GMT",
        "closed_at": "Tuesday Oct 02, 2018 at 07:58 GMT",
        "merged_at": "Tuesday Oct 02, 2018 at 07:58 GMT"
    },
    {
        "key": "WT-4328",
        "number": 4303,
        "state": "closed",
        "title": "WT-4328 Use an internal session handle for schema operations in a txn.",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 27, 2018 at 18:08 GMT",
        "updated_at": "Tuesday Oct 02, 2018 at 12:40 GMT",
        "closed_at": "Tuesday Oct 02, 2018 at 12:40 GMT",
        "merged_at": "Tuesday Oct 02, 2018 at 12:40 GMT"
    },
    {
        "key": "WT-4164",
        "number": 4302,
        "state": "closed",
        "title": "WT-4164 Evict clean internal pages where possible when there is cache pressure",
        "body": "@michaelcahill, this change takes the in-memory page maximum size into account when sizing the cache, guaranteeing every worker thread can pin two maximum-sized pages into memory without blowing out the cache. This change significantly increases the memory that format will allocate to a cache in the presence of larger numbers of threads and so has an outsized impact on our small-cache testing.\r\n\r\nOn the other hand, this should resolve the category of small-cache problems where we're simply filling the cache.\r\n\r\nI don't like it, but I like playing whack-a-mole even less, and I think that's where we've ended up.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 27, 2018 at 17:08 GMT",
        "updated_at": "Wednesday Oct 03, 2018 at 05:53 GMT",
        "closed_at": "Wednesday Oct 03, 2018 at 05:53 GMT",
        "merged_at": "Wednesday Oct 03, 2018 at 05:53 GMT"
    },
    {
        "key": "WT-4214",
        "number": 4301,
        "state": "closed",
        "title": "WT-4214 Simplify timestamp handling for timestamp abort test",
        "body": "@nehakhatri5 I created a pull request of your branch in order to see the code differences more easily.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 27, 2018 at 15:00 GMT",
        "updated_at": "Thursday Oct 04, 2018 at 06:15 GMT",
        "closed_at": "Thursday Oct 04, 2018 at 06:15 GMT",
        "merged_at": "Thursday Oct 04, 2018 at 06:15 GMT"
    },
    {
        "key": "WT-4307",
        "number": 4300,
        "state": "closed",
        "title": "WT-4307 NOT TO REVIEW Perf test key copy for prepared transactions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 27, 2018 at 03:59 GMT",
        "updated_at": "Wednesday Oct 03, 2018 at 08:22 GMT",
        "closed_at": "Wednesday Oct 03, 2018 at 08:22 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4340",
        "number": 4299,
        "state": "closed",
        "title": "WT-4340 the cursor caching layer can incorrectly release too many handle locks.",
        "body": "@ddanderson, I introduced a bug in #4292, __wt_session_lock_dhandle() returns 0 with is_dead set, and we're not holding a lock in those cases.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 26, 2018 at 20:28 GMT",
        "updated_at": "Wednesday Sep 26, 2018 at 22:57 GMT",
        "closed_at": "Wednesday Sep 26, 2018 at 22:57 GMT",
        "merged_at": "Wednesday Sep 26, 2018 at 22:57 GMT"
    },
    {
        "key": "WT-4338",
        "number": 4298,
        "state": "closed",
        "title": "WT-4338 New WT_TXN_TS_XXX flags break #undef HAVE_TIMESTAMPS build",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 26, 2018 at 12:19 GMT",
        "updated_at": "Tuesday Oct 02, 2018 at 01:50 GMT",
        "closed_at": "Wednesday Sep 26, 2018 at 23:03 GMT",
        "merged_at": "Wednesday Sep 26, 2018 at 23:03 GMT"
    },
    {
        "key": "WT-4337",
        "number": 4297,
        "state": "closed",
        "title": "WT-4337 Coverity #1395811 Time of check time of use",
        "body": "Don't call stat(), save the file size and then open the file, there's a potential race. Instead, open the file and use fstat().",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 26, 2018 at 11:51 GMT",
        "updated_at": "Wednesday Sep 26, 2018 at 12:41 GMT",
        "closed_at": "Wednesday Sep 26, 2018 at 12:41 GMT",
        "merged_at": "Wednesday Sep 26, 2018 at 12:41 GMT"
    },
    {
        "key": "WT-4335",
        "number": 4296,
        "state": "closed",
        "title": "WT-4335 Don't fail rollback_to_stable due to sweep activity",
        "body": "Since the later phase of rollback_to_stable holds a lock to prevent sweep running concurrently, this check should use the same approach to avoid spurious failures.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 26, 2018 at 05:49 GMT",
        "updated_at": "Thursday Sep 27, 2018 at 01:09 GMT",
        "closed_at": "Thursday Sep 27, 2018 at 01:09 GMT",
        "merged_at": "Thursday Sep 27, 2018 at 01:09 GMT"
    },
    {
        "key": "WT-4333",
        "number": 4295,
        "state": "closed",
        "title": "WT-4333 WiredTiger cursor cache doesn't handle all possible locked handle states",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 24, 2018 at 19:16 GMT",
        "updated_at": "Monday Sep 24, 2018 at 19:41 GMT",
        "closed_at": "Monday Sep 24, 2018 at 19:41 GMT",
        "merged_at": "Monday Sep 24, 2018 at 19:41 GMT"
    },
    {
        "key": null,
        "number": 4294,
        "state": "closed",
        "title": "Code simplifications.",
        "body": "@keithbostic, can you review please?  Your changes look right, and it leads to some nice simplification.  The diff is a little confusing, better to look at the raw code.  I just added the early return which changed indenting for the function.  Thanks for finding/fixing this!",
        "base_ref": "wt-4333-cache-retrieves-closed-handle",
        "created_at": "Monday Sep 24, 2018 at 16:25 GMT",
        "updated_at": "Monday Sep 24, 2018 at 16:30 GMT",
        "closed_at": "Monday Sep 24, 2018 at 16:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3995",
        "number": 4293,
        "state": "closed",
        "title": "WT-3995 Enhance timestamp abort to accept more number of threads.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 24, 2018 at 01:31 GMT",
        "updated_at": "Friday Sep 28, 2018 at 12:18 GMT",
        "closed_at": "Friday Sep 28, 2018 at 12:18 GMT",
        "merged_at": "Friday Sep 28, 2018 at 12:18 GMT"
    },
    {
        "key": "WT-4333",
        "number": 4292,
        "state": "closed",
        "title": "WT-4333 WiredTiger cursor cache doesn't handle all possible locked handle states",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Sep 23, 2018 at 16:22 GMT",
        "updated_at": "Monday Sep 24, 2018 at 18:26 GMT",
        "closed_at": "Monday Sep 24, 2018 at 18:25 GMT",
        "merged_at": "Monday Sep 24, 2018 at 18:25 GMT"
    },
    {
        "key": "WT-4330",
        "number": 4291,
        "state": "closed",
        "title": "WT-4330 The wt dump and printlog commands redirect stdout, can lose WiredTiger messages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 20, 2018 at 15:39 GMT",
        "updated_at": "Thursday Sep 20, 2018 at 20:30 GMT",
        "closed_at": "Thursday Sep 20, 2018 at 20:30 GMT",
        "merged_at": "Thursday Sep 20, 2018 at 20:30 GMT"
    },
    {
        "key": "WT-4323",
        "number": 4290,
        "state": "closed",
        "title": "WT-4323 Recalculate pinned timestamp before updating global pinned.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 19, 2018 at 05:16 GMT",
        "updated_at": "Monday Sep 24, 2018 at 11:06 GMT",
        "closed_at": "Monday Sep 24, 2018 at 11:06 GMT",
        "merged_at": "Monday Sep 24, 2018 at 11:06 GMT"
    },
    {
        "key": "WT-4322",
        "number": 4289,
        "state": "closed",
        "title": "WT-4322 Reenable direct IO 'crash' test, with directory copying in C",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 18, 2018 at 14:05 GMT",
        "updated_at": "Tuesday Sep 25, 2018 at 23:49 GMT",
        "closed_at": "Tuesday Sep 25, 2018 at 23:49 GMT",
        "merged_at": "Tuesday Sep 25, 2018 at 23:49 GMT"
    },
    {
        "key": "WT-4149",
        "number": 4288,
        "state": "closed",
        "title": "WT-4149 If salvaging, recovery should checkpoint and complete.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 17, 2018 at 20:55 GMT",
        "updated_at": "Wednesday Sep 19, 2018 at 18:59 GMT",
        "closed_at": "Wednesday Sep 19, 2018 at 18:59 GMT",
        "merged_at": "Wednesday Sep 19, 2018 at 18:59 GMT"
    },
    {
        "key": "WT-4314",
        "number": 4287,
        "state": "closed",
        "title": "WT-4314 Don't access unmapped pages when evicting a tree.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 17, 2018 at 16:20 GMT",
        "updated_at": "Thursday Nov 22, 2018 at 21:46 GMT",
        "closed_at": "Thursday Sep 20, 2018 at 06:14 GMT",
        "merged_at": "Thursday Sep 20, 2018 at 06:14 GMT"
    },
    {
        "key": "WT-4325",
        "number": 4286,
        "state": "closed",
        "title": "WT-4325 ubuntu sanitizer complains if qsort takes NULL base reference",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 17, 2018 at 12:16 GMT",
        "updated_at": "Monday Sep 17, 2018 at 15:07 GMT",
        "closed_at": "Monday Sep 17, 2018 at 15:07 GMT",
        "merged_at": "Monday Sep 17, 2018 at 15:07 GMT"
    },
    {
        "key": "WT-4321",
        "number": 4285,
        "state": "closed",
        "title": "WT-4321 In direct IO test, added checkpoint after table creation so they will be available for checking",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 17, 2018 at 00:55 GMT",
        "updated_at": "Monday Sep 17, 2018 at 05:21 GMT",
        "closed_at": "Monday Sep 17, 2018 at 05:21 GMT",
        "merged_at": "Monday Sep 17, 2018 at 05:21 GMT"
    },
    {
        "key": "WT-4314",
        "number": 4284,
        "state": "closed",
        "title": "WT-4314 Don't access unmapped pages when evicting a tree.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 14, 2018 at 02:12 GMT",
        "updated_at": "Tuesday Sep 18, 2018 at 01:34 GMT",
        "closed_at": "Tuesday Sep 18, 2018 at 01:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4308",
        "number": 4283,
        "state": "closed",
        "title": "WT-4308 Insert split during sync should not free blocks.",
        "body": "It is not currently safe to allocate or free blocks in a tree where checkpoint is running. That's because the checkpoint needs to calculate a map of free space that corresponds to the pages referenced by the checkpoint (otherwise either verify reports holes in the file).\r\n\r\nWhat we saw was an in-memory split is causing an on-disk block to be freed. That was because the split freed any deleted references it found in the parent, which includes freeing their blocks.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 11, 2018 at 05:16 GMT",
        "updated_at": "Tuesday Sep 11, 2018 at 11:12 GMT",
        "closed_at": "Tuesday Sep 11, 2018 at 11:12 GMT",
        "merged_at": "Tuesday Sep 11, 2018 at 11:12 GMT"
    },
    {
        "key": "WT-4306",
        "number": 4282,
        "state": "closed",
        "title": "WT-4306 Fix mode if metadata pages need eviction.",
        "body": "Specifically, as a checkpoint is running, it writes updates to the metadata table, which can cause pages to exceed maximum sizes.  It's fine to attempt eviction in that situation, but it should be ordinary eviction that respects the usual visibility rules.",
        "base_ref": "develop",
        "created_at": "Monday Sep 10, 2018 at 21:57 GMT",
        "updated_at": "Monday Sep 10, 2018 at 22:56 GMT",
        "closed_at": "Monday Sep 10, 2018 at 22:56 GMT",
        "merged_at": "Monday Sep 10, 2018 at 22:56 GMT"
    },
    {
        "key": "WT-4292",
        "number": 4281,
        "state": "closed",
        "title": "WT-4292 Add call to testutil_cleanup to avoid memory leak.",
        "body": "Test branch against the clang sanitizer Jenkins job.",
        "base_ref": "develop",
        "created_at": "Monday Sep 10, 2018 at 17:34 GMT",
        "updated_at": "Monday Sep 10, 2018 at 21:54 GMT",
        "closed_at": "Monday Sep 10, 2018 at 21:54 GMT",
        "merged_at": "Monday Sep 10, 2018 at 21:54 GMT"
    },
    {
        "key": "WT-4305",
        "number": 4280,
        "state": "closed",
        "title": "WT-4305 Avoid key copy for txn operations with timestamps as they cannot be prepared.",
        "body": "If txn operations have timestamp, then that transaction cannot be prepared, so we avoid making a copy of the key.",
        "base_ref": "develop",
        "created_at": "Monday Sep 10, 2018 at 02:40 GMT",
        "updated_at": "Tuesday Sep 11, 2018 at 02:31 GMT",
        "closed_at": "Tuesday Sep 11, 2018 at 02:27 GMT",
        "merged_at": "Tuesday Sep 11, 2018 at 02:27 GMT"
    },
    {
        "key": "WT-4300",
        "number": 4279,
        "state": "closed",
        "title": "WT-4300 setting the update timestamp can overwrite the WT_REF.addr field",
        "body": "@bvpvamsikrishna, @agorrod, I'm not sure this fix is correct, but hopefully 2551e61 points out where the problem is.",
        "base_ref": "develop",
        "created_at": "Sunday Sep 09, 2018 at 13:20 GMT",
        "updated_at": "Monday Sep 10, 2018 at 13:39 GMT",
        "closed_at": "Monday Sep 10, 2018 at 13:39 GMT",
        "merged_at": "Monday Sep 10, 2018 at 13:39 GMT"
    },
    {
        "key": "WT-4301",
        "number": 4278,
        "state": "closed",
        "title": "WT-4301 WT_CURSOR.reserve operations can leak memory when committed.",
        "body": "@michaelcahill, @bvpvamsikrishna, this changes the meaning of `WT_TXN_OP_NONE`, so it's potentially interesting for that reason.",
        "base_ref": "develop",
        "created_at": "Saturday Sep 08, 2018 at 16:28 GMT",
        "updated_at": "Monday Sep 10, 2018 at 01:34 GMT",
        "closed_at": "Monday Sep 10, 2018 at 01:34 GMT",
        "merged_at": "Monday Sep 10, 2018 at 01:34 GMT"
    },
    {
        "key": "WT-3736",
        "number": 4277,
        "state": "closed",
        "title": "WT-3736 Add a statistics to measure contention on lookaside cursor.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 07, 2018 at 06:18 GMT",
        "updated_at": "Tuesday Sep 11, 2018 at 14:29 GMT",
        "closed_at": "Tuesday Sep 11, 2018 at 14:29 GMT",
        "merged_at": "Tuesday Sep 11, 2018 at 14:29 GMT"
    },
    {
        "key": "WT-3879",
        "number": 4276,
        "state": "closed",
        "title": "WT-3879 Fix a race if checkpoint evicts a metadata page.",
        "body": "The existing WT_SESSION_IS_CHECKPOINT macro is too broad: it allows a session-wide checkpoint to bypass the usual rules that make eviction of dirty pages safe.  Since we allow operations like WT_SESSION::create to run concurrent with a checkpoint and flush the metadata, we can't have the checkpoint being tapped for forced eviction in the metadata while it is being flushed.\r\n\r\nTrack the tree a checkpoint is currently flushing, and only allow checkpoint to bypass eviction rules in that tree.",
        "base_ref": "develop",
        "created_at": "Friday Sep 07, 2018 at 02:36 GMT",
        "updated_at": "Monday Sep 10, 2018 at 06:55 GMT",
        "closed_at": "Monday Sep 10, 2018 at 06:55 GMT",
        "merged_at": "Monday Sep 10, 2018 at 06:55 GMT"
    },
    {
        "key": "WT-3879",
        "number": 4275,
        "state": "closed",
        "title": "WT-3879 checkpoint race when WT_SESSION_LOCKED_METADATA isn't held",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 07, 2018 at 00:11 GMT",
        "updated_at": "Friday Sep 07, 2018 at 03:10 GMT",
        "closed_at": "Friday Sep 07, 2018 at 03:10 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4284",
        "number": 4274,
        "state": "closed",
        "title": "WT-4284 Print a verbose message in recovery on error too.",
        "body": "@ddanderson  Here's a minor change to the verbose error message in recovery. I needed this when debugging WT-4284 since the call to `recovery_cursor` was failing.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 06, 2018 at 19:58 GMT",
        "updated_at": "Friday Sep 07, 2018 at 03:03 GMT",
        "closed_at": "Friday Sep 07, 2018 at 03:03 GMT",
        "merged_at": "Friday Sep 07, 2018 at 03:03 GMT"
    },
    {
        "key": "WT-4259",
        "number": 4273,
        "state": "closed",
        "title": "WT-4259 Restore ref to previous state rather than MEM when eviction fails",
        "body": "During eviction we could move a page from WT_REF_LIMBO to WT_REF_LOCKED. But if the page eviction fails due to some reason we would call __evict_exclusive_clear which used to transition the ref->state from WT_REF_LOCKED to WT_REF_MEM which is undesired. This change set restores the page ref state to the previous state rather than WT_REF_MEM when eviction fails.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 05, 2018 at 03:03 GMT",
        "updated_at": "Friday Sep 07, 2018 at 02:52 GMT",
        "closed_at": "Friday Sep 07, 2018 at 02:52 GMT",
        "merged_at": "Friday Sep 07, 2018 at 02:52 GMT"
    },
    {
        "key": "WT-4272",
        "number": 4272,
        "state": "closed",
        "title": "WT-4272 Increase startup timeout to 30 seconds for slow I/O systems.",
        "body": "@agorrod Here's the change to increase the timeout to 30 seconds, as discussed in the ticket.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 04, 2018 at 15:57 GMT",
        "updated_at": "Tuesday Sep 04, 2018 at 22:07 GMT",
        "closed_at": "Tuesday Sep 04, 2018 at 22:07 GMT",
        "merged_at": "Tuesday Sep 04, 2018 at 22:07 GMT"
    },
    {
        "key": "WT-4217",
        "number": 4271,
        "state": "closed",
        "title": "WT-4217 Enhance commit and rollback to re-read prepared updates",
        "body": "This PR is for review only, not to be merged.\r\nThis handles re-reading of prepared updates for commit and rollback.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 04, 2018 at 05:22 GMT",
        "updated_at": "Wednesday Sep 26, 2018 at 07:56 GMT",
        "closed_at": "Wednesday Sep 26, 2018 at 07:56 GMT",
        "merged_at": "Wednesday Sep 26, 2018 at 07:56 GMT"
    },
    {
        "key": "WT-4247",
        "number": 4270,
        "state": "closed",
        "title": "WT-4247 resolve indirect references of txn op. (for review only)",
        "body": "This pull request is not ready for merge. \r\nThis is only for review feedback.\r\nI tried to put the logic to resolve the indirect references of txn op in place.\r\nThe resolution function has an assert to check the correctness.\r\nIn this PR I called the resolution function in commit / rollback, so that testing can verify that the resolution is working fine.",
        "base_ref": "wt-4246-transaction-change-for-long-running-prepared",
        "created_at": "Monday Sep 03, 2018 at 06:27 GMT",
        "updated_at": "Tuesday Sep 04, 2018 at 05:14 GMT",
        "closed_at": "Tuesday Sep 04, 2018 at 05:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4291",
        "number": 4269,
        "state": "closed",
        "title": "WT-4291 Look for WT_ERROR.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 31, 2018 at 19:25 GMT",
        "updated_at": "Friday Aug 31, 2018 at 19:58 GMT",
        "closed_at": "Friday Aug 31, 2018 at 19:58 GMT",
        "merged_at": "Friday Aug 31, 2018 at 19:58 GMT"
    },
    {
        "key": "WT-4243",
        "number": 4268,
        "state": "closed",
        "title": " WT-4243 Fix lookaside sweep to not remove required entries",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 31, 2018 at 06:52 GMT",
        "updated_at": "Friday Sep 07, 2018 at 05:52 GMT",
        "closed_at": "Friday Sep 07, 2018 at 05:52 GMT",
        "merged_at": "Friday Sep 07, 2018 at 05:52 GMT"
    },
    {
        "key": "WT-4289",
        "number": 4267,
        "state": "closed",
        "title": "WT-4289 Update WT_DATA_CORRUPTION to WT_TRY_SALVAGE in test_txn19.py",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 30, 2018 at 19:34 GMT",
        "updated_at": "Friday Aug 31, 2018 at 02:43 GMT",
        "closed_at": "Friday Aug 31, 2018 at 02:41 GMT",
        "merged_at": "Friday Aug 31, 2018 at 02:41 GMT"
    },
    {
        "key": "WT-4288",
        "number": 4266,
        "state": "closed",
        "title": "WT-4288 Don't let return value of closing conn overwrite WT_TRY_SALVAGE.",
        "body": "@agorrod Here are a couple minor fixes debugging with Louis. Please review.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 30, 2018 at 19:06 GMT",
        "updated_at": "Monday Sep 03, 2018 at 01:06 GMT",
        "closed_at": "Monday Sep 03, 2018 at 01:06 GMT",
        "merged_at": "Monday Sep 03, 2018 at 01:06 GMT"
    },
    {
        "key": "WT-4177",
        "number": 4265,
        "state": "closed",
        "title": "WT-4177 Force a log switch when opening a backup cursor.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 30, 2018 at 18:40 GMT",
        "updated_at": "Monday Sep 10, 2018 at 16:28 GMT",
        "closed_at": "Monday Sep 10, 2018 at 16:28 GMT",
        "merged_at": "Monday Sep 10, 2018 at 16:28 GMT"
    },
    {
        "key": "WT-4231",
        "number": 4264,
        "state": "closed",
        "title": "WT-4231 Fix ctags index of functions with attributes.",
        "body": "Running `dist/s_tags` will now correctly index the functions with `WT_GCC_FUNC_ATTRIBUTE` tag.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2018 at 23:52 GMT",
        "updated_at": "Friday Aug 31, 2018 at 06:26 GMT",
        "closed_at": "Friday Aug 31, 2018 at 06:26 GMT",
        "merged_at": "Friday Aug 31, 2018 at 06:26 GMT"
    },
    {
        "key": "WT-4286",
        "number": 4263,
        "state": "closed",
        "title": "WT-4286 Column store should skip end-of-table checks if there's an exact match.",
        "body": "In summary, the change in #4262 to clear `WT_CURSOR_BTREE.ins` in the case of finding a record past the end of the page breaks if there are already records past the end of the page and we found an exact match to one of those records.\r\n\r\nI don't see any point in doing the work to check past the end of the page if we've already found an exact match, and I want to clear `WT_CURSOR_BTREE.ins` in the append case.\r\n\r\nTwo bits worth thinking about:\r\n\r\n* I'm only checking `WT_CURSOR_BTREE.compare` to determine if an exact match exists, which means any search ending up past the tree is required to pass in a non-zero compare value. I reviewed the usage and I think it's correct (with one fix for `WT_RECNO_OOB`), regardless, I don't think we should be passing in a non-NULL `WT_CURSOR_BTREE.ins` if we didn't find an exact match.\r\n\r\n* I split the test for `modify_type == WT_UPDATE_RESERVE || modify_type == WT_UPDATE_TOMBSTONE` from the test for a record past the end of the table. (The tests have always been joined that way, see: https://github.com/wiredtiger/wiredtiger/blame/897c1c89dc5b7670daa53fa3822905ebd72d423b/src/btree/col_modify.c.) Anyway, that code assumes a remove operation can't operate on a record that doesn't already exist. That's **probably** correct, but I wouldn't bet a lot on it, especially with implicit records, and I don't see any reason to make the assumption, it doesn't buy us anything that I can see.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2018 at 19:40 GMT",
        "updated_at": "Thursday Aug 30, 2018 at 03:06 GMT",
        "closed_at": "Thursday Aug 30, 2018 at 03:06 GMT",
        "merged_at": "Thursday Aug 30, 2018 at 03:06 GMT"
    },
    {
        "key": "WT-4277",
        "number": 4262,
        "state": "closed",
        "title": "WT-4277 Make truncate in column stores more efficient",
        "body": "@michaelcahill, I understand removing `cbt->compare != 0`, but I don't understand adding `!append`, I don't see that path.\r\n\r\nRegardless, I would agree with adding the append check just out of caution.\r\n\r\nI moved the append check into the code that sets `append` (I've been trying to keep to a pattern of **\"all the information is passed around by setting cursor.ins and cursor.ins_head and nothing else\"**, I hope that's OK with you.)\r\n\r\nRunning the WT-4277 CONFIG with your change and diagnostics, I still see some `WT_RESTART` hits, but as far as I can tell, they're expected: the path to the restart is from truncate, where truncate isn't finding any insert list at all (that is, `WT_CURSOR_BTREE.ins_head == NULL`), which makes me think it's a genuine race where truncate found no insert list and another thread did a removal on the key/value pair creating an insert list before truncate made it into the serialization function. If that's not correct, there's still a  hole.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2018 at 18:24 GMT",
        "updated_at": "Thursday Aug 30, 2018 at 11:01 GMT",
        "closed_at": "Thursday Aug 30, 2018 at 11:01 GMT",
        "merged_at": "Thursday Aug 30, 2018 at 11:01 GMT"
    },
    {
        "key": "WT-4285",
        "number": 4261,
        "state": "closed",
        "title": "WT-4285 wt4156_metadata_salvage Coverity/lint complaints.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2018 at 16:09 GMT",
        "updated_at": "Wednesday Aug 29, 2018 at 18:03 GMT",
        "closed_at": "Wednesday Aug 29, 2018 at 18:03 GMT",
        "merged_at": "Wednesday Aug 29, 2018 at 18:03 GMT"
    },
    {
        "key": "WT-4283",
        "number": 4260,
        "state": "closed",
        "title": "WT-4283 Restore WT_ERROR and use a corrupt flag",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2018 at 15:46 GMT",
        "updated_at": "Thursday Aug 30, 2018 at 12:23 GMT",
        "closed_at": "Thursday Aug 30, 2018 at 12:23 GMT",
        "merged_at": "Thursday Aug 30, 2018 at 12:23 GMT"
    },
    {
        "key": "WT-4282",
        "number": 4259,
        "state": "closed",
        "title": "WT-4282 Restructure __page_read and avoid moving from limbo to lookaside",
        "body": "Sometimes it may be possible to avoid the transition.\r\n\r\nIt's likely the check in __wt_page_in avoids this transition - but it's not clear to me that the code always goes through that path - so I think we might as well be explicit in __page_read as well.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2018 at 07:22 GMT",
        "updated_at": "Tuesday Sep 04, 2018 at 07:13 GMT",
        "closed_at": "Tuesday Sep 04, 2018 at 07:13 GMT",
        "merged_at": "Tuesday Sep 04, 2018 at 07:13 GMT"
    },
    {
        "key": "WT-4281",
        "number": 4258,
        "state": "closed",
        "title": "WT-4281 Reduce Python test suite runtime",
        "body": "By reducing runtime for longest running tests.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2018 at 06:56 GMT",
        "updated_at": "Wednesday Sep 05, 2018 at 06:09 GMT",
        "closed_at": "Wednesday Sep 05, 2018 at 06:09 GMT",
        "merged_at": "Wednesday Sep 05, 2018 at 06:09 GMT"
    },
    {
        "key": "WT-4277",
        "number": 4257,
        "state": "closed",
        "title": "WT-4277 Make truncate in column stores more efficient",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 28, 2018 at 21:23 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 23:46 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 23:46 GMT",
        "merged_at": "Tuesday Aug 28, 2018 at 23:46 GMT"
    },
    {
        "key": "WT-4261",
        "number": 4256,
        "state": "closed",
        "title": "WT-4261 Add out of sync metadata/turtle files to salvage test.",
        "body": "@agorrod The changes for this test to test out of sync are in and working. Please review. It is a lot of directory and file copying, so it isn't all that pretty. But we are testing corruption and out of sync now.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 28, 2018 at 20:24 GMT",
        "updated_at": "Friday Sep 07, 2018 at 05:57 GMT",
        "closed_at": "Friday Sep 07, 2018 at 05:57 GMT",
        "merged_at": "Friday Sep 07, 2018 at 05:57 GMT"
    },
    {
        "key": "WT-4225",
        "number": 4255,
        "state": "closed",
        "title": "WT-4225 Add test to simulate random system crashes using direct IO",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 28, 2018 at 18:41 GMT",
        "updated_at": "Tuesday Oct 02, 2018 at 01:50 GMT",
        "closed_at": "Sunday Sep 16, 2018 at 15:57 GMT",
        "merged_at": "Sunday Sep 16, 2018 at 15:57 GMT"
    },
    {
        "key": "WT-4274",
        "number": 4254,
        "state": "closed",
        "title": "WT-4274 Free buffer.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 28, 2018 at 14:43 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 15:25 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 15:25 GMT",
        "merged_at": "Tuesday Aug 28, 2018 at 15:25 GMT"
    },
    {
        "key": "WT-4131",
        "number": 4253,
        "state": "closed",
        "title": "WT-4131 Rename lookaside to cache overflow.",
        "body": "The cache overflow mechanism used by WiredTiger is referred to as the `lookaside table`, which isn't very meaningful to non-WiredTiger developers. This change replaces the references to `lookaside` with `cache overflow` in statistics phrases.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 28, 2018 at 06:46 GMT",
        "updated_at": "Thursday Aug 30, 2018 at 00:38 GMT",
        "closed_at": "Thursday Aug 30, 2018 at 00:37 GMT",
        "merged_at": "Thursday Aug 30, 2018 at 00:37 GMT"
    },
    {
        "key": "WT-4131",
        "number": 4252,
        "state": "closed",
        "title": "WT-4131 Rename lookaside to cache overflow.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 28, 2018 at 06:23 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 06:34 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 06:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4218",
        "number": 4251,
        "state": "closed",
        "title": "WT-4218 Evict prepared updates to lookaside, gated behind ifdef",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 28, 2018 at 04:45 GMT",
        "updated_at": "Friday Sep 07, 2018 at 06:14 GMT",
        "closed_at": "Friday Sep 07, 2018 at 00:26 GMT",
        "merged_at": "Friday Sep 07, 2018 at 00:26 GMT"
    },
    {
        "key": "WT-4270",
        "number": 4250,
        "state": "closed",
        "title": "WT-4270 Add an operation field to know where threads hang.",
        "body": "@agorrod This is a branch to add debugging for schema_abort when threads hang. This will give us some more information if it fails on a sanitizer build. We still need a core dump to know exactly where they're all hanging. But this is a step forward.",
        "base_ref": "develop",
        "created_at": "Monday Aug 27, 2018 at 21:03 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 03:51 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 03:51 GMT",
        "merged_at": "Tuesday Aug 28, 2018 at 03:51 GMT"
    },
    {
        "key": "WT-4268",
        "number": 4249,
        "state": "closed",
        "title": "WT-4268 Random abort should wait until record files exist before starting timer.",
        "body": "Waiting for the table to exist was insufficient as that was created before the threads were started.\r\nInstead wait for the record files that each thread creates for itself.",
        "base_ref": "develop",
        "created_at": "Monday Aug 27, 2018 at 15:48 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 13:58 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 13:58 GMT",
        "merged_at": "Tuesday Aug 28, 2018 at 13:58 GMT"
    },
    {
        "key": "WT-4185",
        "number": 4248,
        "state": "closed",
        "title": "WT-4185 Don't remove all lookaside entries when reading a page.",
        "body": "The lookaside sweep code removes entries in the background so stop removing lookaside entries when reading pages from lookaside tree.",
        "base_ref": "develop",
        "created_at": "Monday Aug 27, 2018 at 07:15 GMT",
        "updated_at": "Wednesday Sep 12, 2018 at 02:04 GMT",
        "closed_at": "Wednesday Sep 12, 2018 at 02:04 GMT",
        "merged_at": "Wednesday Sep 12, 2018 at 02:04 GMT"
    },
    {
        "key": "WT-4154",
        "number": 4247,
        "state": "closed",
        "title": "WT-4154 Surface the oldest read timestamp.",
        "body": "Added a new option `oldest_reader` to the `query_timestamp` API. When `query_timestamp` is used with this option, WT will return the minimum of the read timestamps of all the active transactions which includes the checkpoint transaction. If there are no active readers at the time of issuing this API, WT will return WT_NOTFOUND.\r\n@bvpvamsikrishna please review.",
        "base_ref": "develop",
        "created_at": "Monday Aug 27, 2018 at 03:49 GMT",
        "updated_at": "Thursday Aug 30, 2018 at 00:41 GMT",
        "closed_at": "Thursday Aug 30, 2018 at 00:41 GMT",
        "merged_at": "Thursday Aug 30, 2018 at 00:41 GMT"
    },
    {
        "key": "WT-4154",
        "number": 4246,
        "state": "closed",
        "title": "WT-4154 Surface the oldest read timestamp.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 27, 2018 at 03:30 GMT",
        "updated_at": "Monday Aug 27, 2018 at 03:46 GMT",
        "closed_at": "Monday Aug 27, 2018 at 03:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4267",
        "number": 4245,
        "state": "closed",
        "title": "WT-4267 fixed-length column store operations can corrupt data",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Aug 26, 2018 at 21:34 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 03:26 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 03:26 GMT",
        "merged_at": "Tuesday Aug 28, 2018 at 03:26 GMT"
    },
    {
        "key": "WT-4090",
        "number": 4244,
        "state": "closed",
        "title": "WT-4090 Add a read_once configuration to cursors",
        "body": "To give applications a facility for doing low reads that are less disruptive to cache.",
        "base_ref": "develop",
        "created_at": "Friday Aug 24, 2018 at 06:55 GMT",
        "updated_at": "Monday Aug 27, 2018 at 17:44 GMT",
        "closed_at": "Monday Aug 27, 2018 at 17:44 GMT",
        "merged_at": "Monday Aug 27, 2018 at 17:44 GMT"
    },
    {
        "key": "WT-4090",
        "number": 4243,
        "state": "closed",
        "title": "Revert \"WT-4090 low priority reads\"",
        "body": "Reverts wiredtiger/wiredtiger#4222",
        "base_ref": "develop",
        "created_at": "Friday Aug 24, 2018 at 06:54 GMT",
        "updated_at": "Friday Aug 24, 2018 at 06:56 GMT",
        "closed_at": "Friday Aug 24, 2018 at 06:56 GMT",
        "merged_at": "Friday Aug 24, 2018 at 06:56 GMT"
    },
    {
        "key": "WT-4216",
        "number": 4242,
        "state": "closed",
        "title": "WT-4216 Use separate counters for page_swap yield and sleep.",
        "body": "@keithbostic Please review this. It slightly modifies the change you made in WT-4208. Basically I separate out the two different callers to `wt_spin_backoff` so they do not interfere with each other. This change recovers a bit more than half the performance loss.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 23, 2018 at 20:04 GMT",
        "updated_at": "Thursday Aug 23, 2018 at 21:36 GMT",
        "closed_at": "Thursday Aug 23, 2018 at 21:36 GMT",
        "merged_at": "Thursday Aug 23, 2018 at 21:36 GMT"
    },
    {
        "key": "WT-4264",
        "number": 4241,
        "state": "closed",
        "title": "WT-4264 Compact can race with page modifications",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 23, 2018 at 14:30 GMT",
        "updated_at": "Friday Aug 24, 2018 at 10:57 GMT",
        "closed_at": "Friday Aug 24, 2018 at 05:34 GMT",
        "merged_at": "Friday Aug 24, 2018 at 05:34 GMT"
    },
    {
        "key": "WT-4248",
        "number": 4240,
        "state": "closed",
        "title": "WT-4248 Fix checkpoints in schema_abort for slow machines.",
        "body": "@agorrod Please review this PR. It contains changes to `schema_abort` only for the failures on slow machines where the stable timestamp was never set. The former code was taking a checkpoint immediately and therefore wrote out (all) data before the stable timestamp was ever set, that could result in the failures we saw. \r\n\r\nNow this code does not take a checkpoint until it sees the stable timestamp set the first time.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 22, 2018 at 18:02 GMT",
        "updated_at": "Thursday Aug 23, 2018 at 05:19 GMT",
        "closed_at": "Thursday Aug 23, 2018 at 05:19 GMT",
        "merged_at": "Thursday Aug 23, 2018 at 05:19 GMT"
    },
    {
        "key": "WT-4246",
        "number": 4239,
        "state": "closed",
        "title": "WT-4246 Transaction changes to support indirect references for prepared transactions.",
        "body": "This PR is to make changes to transaction structure such that during commit/rollback, it can access the update structure through indirect references ( indirect references are needed as prepared updates can be stored to lookaside), hence commit/rollback might be referring to an update structure stored in lookaside.\r\n\r\nEach TXN_OP structure will store the key of the operation as indirect reference, which can be used to retrieve the update structure.\r\nOperation key is not available in TXN_OP or WT_UPDATE structure to use during prepare time, hence coping the key to TXN_OP as part of the operation itself.\r\nKey is needed only in case of single record level operation (not for truncate).\r\nChanges made to TXN_OP so that sizeof it will not increase.\r\n\r\nNew types are added to facilitate the release of key in __wt_txn_op_free. ( In case of column store, the key will not be allocated) ",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 22, 2018 at 06:53 GMT",
        "updated_at": "Tuesday Sep 04, 2018 at 07:15 GMT",
        "closed_at": "Tuesday Sep 04, 2018 at 04:17 GMT",
        "merged_at": "Tuesday Sep 04, 2018 at 04:17 GMT"
    },
    {
        "key": "WT-4263",
        "number": 4238,
        "state": "closed",
        "title": "WT-4263 When copying a key for a lookaside write, use the right tree.",
        "body": "Previously this code juggled two session handles, one of which referenced the original tree and the other was specific to the lookaside table.  Now that the code has been simplified to just use one session, we need to take care when we need to operate on the original tree.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 22, 2018 at 05:55 GMT",
        "updated_at": "Thursday Aug 23, 2018 at 03:06 GMT",
        "closed_at": "Thursday Aug 23, 2018 at 03:06 GMT",
        "merged_at": "Thursday Aug 23, 2018 at 03:06 GMT"
    },
    {
        "key": "WT-4262",
        "number": 4237,
        "state": "closed",
        "title": "WT-4262 In eviction of internal pages, lock deleted children.",
        "body": "Elsewhere we assume that flipping `ref->state` from `DELETED` to `LOCKED` makes it safe to free `ref->page_del`.  If we're attempting to evict an internal page, we have it locked, so no thread can descend into it, but a walk could be attempting to couple into a child page, so we can't assume exclusive access to all of the children.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 22, 2018 at 05:51 GMT",
        "updated_at": "Thursday Aug 23, 2018 at 05:44 GMT",
        "closed_at": "Thursday Aug 23, 2018 at 05:44 GMT",
        "merged_at": "Thursday Aug 23, 2018 at 05:44 GMT"
    },
    {
        "key": "WT-4119",
        "number": 4236,
        "state": "closed",
        "title": "WT-4119 Avoid restarts updating / removing during a column store scan",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 22, 2018 at 05:45 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 04:09 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 04:09 GMT",
        "merged_at": "Tuesday Aug 28, 2018 at 04:09 GMT"
    },
    {
        "key": "WT-4239",
        "number": 4235,
        "state": "closed",
        "title": "WT-4239 Checkpoint doing insert-splits can corrupt the tree.",
        "body": "@agorrod, @michaelcahill and I figured this out today, the problem is checkpoint can do insert-splits and that can corrupt the tree.\r\n\r\nI'm running overnight to confirm, but I think this is ready for review.\r\n\r\nThis should probably be backported to any release where checkpoint attempts to evict pages.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 22, 2018 at 01:59 GMT",
        "updated_at": "Wednesday Aug 22, 2018 at 21:52 GMT",
        "closed_at": "Wednesday Aug 22, 2018 at 14:16 GMT",
        "merged_at": "Wednesday Aug 22, 2018 at 14:16 GMT"
    },
    {
        "key": "WT-4251",
        "number": 4234,
        "state": "closed",
        "title": "WT-4251 Prepared updates cannot be discarded.",
        "body": "We have a check in ordinary eviction that prepared updates are not discarded, but not in other places (e.g., the code that garbage collects obsolete updates).  Rather than find all of the places, this change checks for prepared updates as part of the \"visible all\" check for updates.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 21, 2018 at 05:01 GMT",
        "updated_at": "Wednesday Aug 22, 2018 at 00:22 GMT",
        "closed_at": "Wednesday Aug 22, 2018 at 00:22 GMT",
        "merged_at": "Wednesday Aug 22, 2018 at 00:22 GMT"
    },
    {
        "key": "WT-3710",
        "number": 4233,
        "state": "closed",
        "title": "WT-3710 Fix a race condition between concurrent page splits",
        "body": "(cherry picked from commit d5061d5a500cacce3e637faef4f6d88be477b65c)",
        "base_ref": "mongodb-3.2",
        "created_at": "Tuesday Aug 21, 2018 at 04:58 GMT",
        "updated_at": "Wednesday Aug 22, 2018 at 01:43 GMT",
        "closed_at": "Wednesday Aug 22, 2018 at 01:43 GMT",
        "merged_at": "Wednesday Aug 22, 2018 at 01:43 GMT"
    },
    {
        "key": "WT-3637",
        "number": 4232,
        "state": "closed",
        "title": "WT-3637 Fix a heap use after free from evicting of a page that just split (v3.2 backport)",
        "body": "(cherry picked from commit a86638be657f647ce1656d24d8f653e72a9e6eee)\r\n(cherry picked from commit 7a6598ca9b54c358803aa6290dce618f0abed63f)",
        "base_ref": "mongodb-3.2",
        "created_at": "Tuesday Aug 21, 2018 at 04:24 GMT",
        "updated_at": "Wednesday Aug 22, 2018 at 00:19 GMT",
        "closed_at": "Wednesday Aug 22, 2018 at 00:19 GMT",
        "merged_at": "Wednesday Aug 22, 2018 at 00:19 GMT"
    },
    {
        "key": "WT-4257",
        "number": 4231,
        "state": "closed",
        "title": "WT-4257 Don't assume timestamps from lookaside are aligned in memory.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 21, 2018 at 03:23 GMT",
        "updated_at": "Tuesday Aug 21, 2018 at 06:37 GMT",
        "closed_at": "Tuesday Aug 21, 2018 at 06:37 GMT",
        "merged_at": "Tuesday Aug 21, 2018 at 06:37 GMT"
    },
    {
        "key": "WT-4256",
        "number": 4230,
        "state": "closed",
        "title": "WT-4256 Loosen check during rollback_to_stable.",
        "body": "In particular, cope with updates that are already rolled back, and don't fire for updates that were never assigned a timestamp unless \"assert=(commit_timestamp=X)\" is configured for the table.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 21, 2018 at 03:12 GMT",
        "updated_at": "Thursday Aug 23, 2018 at 06:12 GMT",
        "closed_at": "Thursday Aug 23, 2018 at 06:12 GMT",
        "merged_at": "Thursday Aug 23, 2018 at 06:12 GMT"
    },
    {
        "key": "WT-3637",
        "number": 4229,
        "state": "closed",
        "title": "WT-3637 Fix a heap use after free from evicting of a page that just split (v3.4 backport)",
        "body": "(cherry picked from commit a86638be657f647ce1656d24d8f653e72a9e6eee)",
        "base_ref": "mongodb-3.4",
        "created_at": "Monday Aug 20, 2018 at 00:54 GMT",
        "updated_at": "Monday Aug 20, 2018 at 07:20 GMT",
        "closed_at": "Monday Aug 20, 2018 at 07:19 GMT",
        "merged_at": "Monday Aug 20, 2018 at 07:19 GMT"
    },
    {
        "key": "WT-4253",
        "number": 4228,
        "state": "closed",
        "title": "WT-4253 Btree debug function to do blind reads doesn't handle row-store internal pages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Aug 19, 2018 at 16:00 GMT",
        "updated_at": "Sunday Aug 19, 2018 at 23:21 GMT",
        "closed_at": "Sunday Aug 19, 2018 at 23:21 GMT",
        "merged_at": "Sunday Aug 19, 2018 at 23:21 GMT"
    },
    {
        "key": "WT-4233",
        "number": 4227,
        "state": "closed",
        "title": "WT-4233 Change log corruption errors to warnings and truncate log",
        "body": "Most reports of log corruption will now be reported as messages,\r\nand they will not stop recovery from succeeding.",
        "base_ref": "develop",
        "created_at": "Saturday Aug 18, 2018 at 14:02 GMT",
        "updated_at": "Monday Aug 20, 2018 at 22:46 GMT",
        "closed_at": "Monday Aug 20, 2018 at 22:46 GMT",
        "merged_at": "Monday Aug 20, 2018 at 22:46 GMT"
    },
    {
        "key": "WT-4252",
        "number": 4226,
        "state": "closed",
        "title": "WT-4252 Btree debug functions can leak scratch buffers on error.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 17, 2018 at 19:23 GMT",
        "updated_at": "Sunday Aug 19, 2018 at 16:33 GMT",
        "closed_at": "Friday Aug 17, 2018 at 20:18 GMT",
        "merged_at": "Friday Aug 17, 2018 at 20:18 GMT"
    },
    {
        "key": "WT-4211",
        "number": 4225,
        "state": "closed",
        "title": "WT-4211 test for long running prepared transactions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 17, 2018 at 07:05 GMT",
        "updated_at": "Monday Aug 20, 2018 at 01:51 GMT",
        "closed_at": "Monday Aug 20, 2018 at 01:51 GMT",
        "merged_at": "Monday Aug 20, 2018 at 01:51 GMT"
    },
    {
        "key": "WT-4211",
        "number": 4224,
        "state": "closed",
        "title": "Revert \"WT-4211 test for long running prepared transactions.\"",
        "body": "Reverts wiredtiger/wiredtiger#4221",
        "base_ref": "develop",
        "created_at": "Friday Aug 17, 2018 at 07:00 GMT",
        "updated_at": "Friday Aug 17, 2018 at 07:01 GMT",
        "closed_at": "Friday Aug 17, 2018 at 07:01 GMT",
        "merged_at": "Friday Aug 17, 2018 at 07:01 GMT"
    },
    {
        "key": "WT-3735",
        "number": 4223,
        "state": "closed",
        "title": "WT-3735 Split stress test workgen",
        "body": "A workload to stress page splits.",
        "base_ref": "develop",
        "created_at": "Friday Aug 17, 2018 at 03:16 GMT",
        "updated_at": "Tuesday Aug 21, 2018 at 03:42 GMT",
        "closed_at": "Tuesday Aug 21, 2018 at 03:39 GMT",
        "merged_at": "Tuesday Aug 21, 2018 at 03:39 GMT"
    },
    {
        "key": "WT-4090",
        "number": 4222,
        "state": "closed",
        "title": "WT-4090 low priority reads",
        "body": "This is not ready for merging.\r\n\r\n@michaelcahill @sueloverso, I've found all the callers of the btree walk methods and `__wt_page_in` and either:\r\n* Used an immediately available `WT_CURSOR_BTREE` to inform the local flags variable.\r\n* Or left a comment asking \"can this be called from contexts with a cursor that we care about honoring a `read_once` setting\".\r\n\r\nPlease review those assessments and let me know if it's important for potential cursor information to be plumbed through deeper in any of those locations. I'm also happy to dig up another layer if you need more investigation to make a judgment (the btree splitting methods were suspicious to me, but perhaps they're only called in the context of a writer and less important to honor any `read_once` settings).",
        "base_ref": "develop",
        "created_at": "Thursday Aug 16, 2018 at 21:00 GMT",
        "updated_at": "Saturday Aug 25, 2018 at 03:11 GMT",
        "closed_at": "Friday Aug 24, 2018 at 06:34 GMT",
        "merged_at": "Friday Aug 24, 2018 at 06:34 GMT"
    },
    {
        "key": "WT-4211",
        "number": 4221,
        "state": "closed",
        "title": "WT-4211 test for long running prepared transactions.",
        "body": "Currently I kept updates to be low, so that test case will not hang.\r\nWill change the values after lookaside is enabled for prepared transactions.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 16, 2018 at 04:36 GMT",
        "updated_at": "Friday Aug 17, 2018 at 07:00 GMT",
        "closed_at": "Friday Aug 17, 2018 at 06:46 GMT",
        "merged_at": "Friday Aug 17, 2018 at 06:46 GMT"
    },
    {
        "key": "WT-4233",
        "number": 4220,
        "state": "closed",
        "title": "WT-4233 Disable random_abort on OS/X, it is currently unreliable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 15, 2018 at 14:23 GMT",
        "updated_at": "Saturday Aug 18, 2018 at 15:32 GMT",
        "closed_at": "Saturday Aug 18, 2018 at 15:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3894",
        "number": 4219,
        "state": "closed",
        "title": "WT-3894 Timestamp queue statistics and usage",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 15, 2018 at 05:27 GMT",
        "updated_at": "Monday Aug 20, 2018 at 00:32 GMT",
        "closed_at": "Monday Aug 20, 2018 at 00:32 GMT",
        "merged_at": "Monday Aug 20, 2018 at 00:32 GMT"
    },
    {
        "key": "WT-3894",
        "number": 4218,
        "state": "closed",
        "title": "Revert \"WT-3894 Timestamp queue statistics and usage\"",
        "body": "This reverts commit 94a1be4f4d2e9c1be4d4935efe1718888841308a.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 15, 2018 at 05:12 GMT",
        "updated_at": "Wednesday Aug 15, 2018 at 05:23 GMT",
        "closed_at": "Wednesday Aug 15, 2018 at 05:23 GMT",
        "merged_at": "Wednesday Aug 15, 2018 at 05:23 GMT"
    },
    {
        "key": "WT-4156",
        "number": 4217,
        "state": "closed",
        "title": "WT-4156 Add salvage API option to wiredtiger_open.",
        "body": "Not ready for merge, but first modifications to get the API and new error code in and make it work for the existing log recovery salvage code paths.\r\n\r\n@ddanderson and @agorrod if you could eyeball this before I go too far down the path. Next up is the metadata salvage which is new code.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 14, 2018 at 15:05 GMT",
        "updated_at": "Tuesday Aug 28, 2018 at 04:49 GMT",
        "closed_at": "Tuesday Aug 28, 2018 at 04:49 GMT",
        "merged_at": "Tuesday Aug 28, 2018 at 04:49 GMT"
    },
    {
        "key": "WT-4249",
        "number": 4216,
        "state": "closed",
        "title": "WT-4249 Don't dirty pages during verify.",
        "body": "This is fall out from WT-4104 fix, where handles opened by verify are\r\nmissed to mark as read-only.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 14, 2018 at 05:10 GMT",
        "updated_at": "Tuesday Aug 14, 2018 at 05:32 GMT",
        "closed_at": "Tuesday Aug 14, 2018 at 05:31 GMT",
        "merged_at": "Tuesday Aug 14, 2018 at 05:31 GMT"
    },
    {
        "key": "WT-4212",
        "number": 4215,
        "state": "closed",
        "title": "WT-4212 Modify lookaside schema to carry prepared update state",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 14, 2018 at 04:00 GMT",
        "updated_at": "Friday Aug 17, 2018 at 06:47 GMT",
        "closed_at": "Friday Aug 17, 2018 at 06:47 GMT",
        "merged_at": "Friday Aug 17, 2018 at 06:47 GMT"
    },
    {
        "key": "WT-3894",
        "number": 4214,
        "state": "closed",
        "title": "WT-3894 Timestamp queue statistics and usage",
        "body": "@michaelcahill and @agorrod this is ready for merge. There are a number of interesting things to note:\r\n1. I pulled in Michael's change to walk the queues backward. Some performance was better and none seemed worse and it still only takes the lock once.\r\n2. I created changes to `timestamp_abort` to use the timestamps in a way similar to MongoDB when not using prepared transactions. This is using Michael's change but supporting prepared as well.\r\n3. I added in two `walked` statistics to count how many entries in the timestamp queues we walk per insert.\r\n4. I changed the use of the `read_timestamp_queue` to work the same way as the commit timestamp queue. This change was committed separately so we can undo that one commit if you want. This means we take the write lock only once rather than both on set/clear. I modeled it after the new commit timestamp queue so that it walks backward also.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 13, 2018 at 18:41 GMT",
        "updated_at": "Wednesday Aug 15, 2018 at 05:10 GMT",
        "closed_at": "Wednesday Aug 15, 2018 at 03:21 GMT",
        "merged_at": "Wednesday Aug 15, 2018 at 03:21 GMT"
    },
    {
        "key": "WT-3894",
        "number": 4213,
        "state": "closed",
        "title": "WT-3894 Add stats about how many queue entries we walk.",
        "body": "Not yet for merge.",
        "base_ref": "develop",
        "created_at": "Monday Aug 13, 2018 at 15:34 GMT",
        "updated_at": "Monday Aug 13, 2018 at 18:37 GMT",
        "closed_at": "Monday Aug 13, 2018 at 15:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4144",
        "number": 4212,
        "state": "closed",
        "title": "WT-4144 Fix rollback_to_stable with lookaside history.",
        "body": "There were several bugs, resulting in incorrect data after a rollback_to_stable call in the presence of lookaside history.\r\n\r\nThe main issue was with pages images containing updates newer than the stable timestamp (which is a common case because WiredTiger evicts optimistically, assuming the stable timestamp will move forward by the time the next checkpoint starts).  Since rollback_to_stable doesn't modify page images, it instead was marking such pages \"invalid\" so the history would always be loaded before the pages could be read correctly.  However, the required history to make sense of such pages could be removed by a lookaside sweep, which makes decisions solely on the contents of the lookaside table without access to the \"invalid\" flag.\r\n\r\nThe solution here is to read the history into cache for such pages during rollback_to_stable.  The page is marked dirty, with updates newer than the stable timestamp rolled back, then it can be evicted or rewritten in memory.  This eliminates the special \"invalid\" flag.\r\n\r\nIn the process of finding that bug, a number of other issues were found and fixed, including:\r\n* don't read all lookaside content into cache during rollback_to_stable;\r\n* avoid races between eviction threads and rollback_to_stable (fix nesting of locks and transactions, use an explicit flag check during eviction rather than relying on the eviction server thread to update cache-wide flags); and\r\n* simplify functions accessing the lookaside table so each function has a single session.",
        "base_ref": "develop",
        "created_at": "Monday Aug 13, 2018 at 06:21 GMT",
        "updated_at": "Monday Aug 20, 2018 at 00:32 GMT",
        "closed_at": "Sunday Aug 19, 2018 at 23:52 GMT",
        "merged_at": "Sunday Aug 19, 2018 at 23:52 GMT"
    },
    {
        "key": "WT-4143",
        "number": 4211,
        "state": "closed",
        "title": "WT-4143 Use WiredTiger.turtle.set if it exists but WiredTiger.turtle does not (v3.6 backport)",
        "body": "This allows wiredtiger_open to succeed on Windows if a crash happened during a rename at the conclusion of checkpoint.\r\n\r\n(cherry picked from commit 0846890fd6f4673d6e7f673262147b0eef8112f9)",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Aug 13, 2018 at 01:20 GMT",
        "updated_at": "Monday Aug 13, 2018 at 03:35 GMT",
        "closed_at": "Monday Aug 13, 2018 at 02:00 GMT",
        "merged_at": "Monday Aug 13, 2018 at 02:00 GMT"
    },
    {
        "key": "WT-4104",
        "number": 4210,
        "state": "closed",
        "title": "WT-4104 keys reappear after fast truncate.",
        "body": "As per my understanding, checkpoint is marking the btree as clean, which is resulting in not constructing the update chain when fast truncate page is read back from disk.",
        "base_ref": "develop",
        "created_at": "Sunday Aug 12, 2018 at 23:09 GMT",
        "updated_at": "Monday Aug 20, 2018 at 23:51 GMT",
        "closed_at": "Tuesday Aug 14, 2018 at 01:30 GMT",
        "merged_at": "Tuesday Aug 14, 2018 at 01:30 GMT"
    },
    {
        "key": "WT-4242",
        "number": 4209,
        "state": "closed",
        "title": "WT-4242 Wait for prep log creation in log file extend test.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 10, 2018 at 05:01 GMT",
        "updated_at": "Friday Aug 10, 2018 at 07:06 GMT",
        "closed_at": "Friday Aug 10, 2018 at 07:06 GMT",
        "merged_at": "Friday Aug 10, 2018 at 07:06 GMT"
    },
    {
        "key": "WT-4241",
        "number": 4208,
        "state": "closed",
        "title": "WT-4241 GNU-stack section should never be conditionally compiled out",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 09, 2018 at 17:38 GMT",
        "updated_at": "Tuesday Aug 14, 2018 at 17:40 GMT",
        "closed_at": "Tuesday Aug 14, 2018 at 17:40 GMT",
        "merged_at": "Tuesday Aug 14, 2018 at 17:40 GMT"
    },
    {
        "key": "WT-4176",
        "number": 4207,
        "state": "closed",
        "title": "WT-4176 Expose a WT_SESSION.query_timestamp method.",
        "body": "Accepts configuration `get=read_timestamp` which returns a timestamp representing which updates are visible to the running transaction.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 08, 2018 at 20:38 GMT",
        "updated_at": "Tuesday Aug 14, 2018 at 01:33 GMT",
        "closed_at": "Monday Aug 13, 2018 at 14:10 GMT",
        "merged_at": "Monday Aug 13, 2018 at 14:10 GMT"
    },
    {
        "key": "WT-4193",
        "number": 4206,
        "state": "closed",
        "title": "WT-4193 test/format snapshot-isolation search mismatch",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 08, 2018 at 19:02 GMT",
        "updated_at": "Thursday Aug 09, 2018 at 23:05 GMT",
        "closed_at": "Thursday Aug 09, 2018 at 23:05 GMT",
        "merged_at": "Thursday Aug 09, 2018 at 23:05 GMT"
    },
    {
        "key": "WT-4215",
        "number": 4205,
        "state": "closed",
        "title": "WT-4215 Allow recovery of log files from a backup without salvage.",
        "body": "Because they are being read concurrently with being written, log files copied as part of a backup may have various portions that are zeroed. In particular, some log records may have their first part zeroed, and subsequent parts filled in. This should never happen for log records used after an application crash, so we must apply different rules for these cases. For backup log files, we allow checksums to fail, or holes in log files to end without the start of a valid record. Either one of these 'corruptions' is unreported, but causes the log to truncate at that point.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 08, 2018 at 17:35 GMT",
        "updated_at": "Thursday Aug 09, 2018 at 00:19 GMT",
        "closed_at": "Thursday Aug 09, 2018 at 00:19 GMT",
        "merged_at": "Thursday Aug 09, 2018 at 00:19 GMT"
    },
    {
        "key": "WT-4194",
        "number": 4204,
        "state": "closed",
        "title": "WT-4194 Improve fairness of eviction across trees.",
        "body": "Track the number of pages to queue from each tree across multiple eviction walks.  The previous calculation was local and was skewed by the number of slots left in the queue when each tree was visited (i.e., with a small number of trees there could be systematic bias between the first and last trees based on their order in the handle list).",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 08, 2018 at 06:36 GMT",
        "updated_at": "Friday Aug 10, 2018 at 02:23 GMT",
        "closed_at": "Friday Aug 10, 2018 at 02:23 GMT",
        "merged_at": "Friday Aug 10, 2018 at 02:23 GMT"
    },
    {
        "key": "WT-3894",
        "number": 4203,
        "state": "closed",
        "title": "WT-3894 Search the commit_timestamp queue in reverse order.",
        "body": "The idea is that for workloads with many active transactions where commit timestamps are supplied to WiredTiger mostly in order, this will avoid long scans through the queue.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 08, 2018 at 06:04 GMT",
        "updated_at": "Tuesday Aug 14, 2018 at 01:33 GMT",
        "closed_at": "Tuesday Aug 14, 2018 at 01:33 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4234",
        "number": 4202,
        "state": "closed",
        "title": "WT-4234 tools/statlog.py is mentioned in the documentation but has been removed from the tree",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 07, 2018 at 13:33 GMT",
        "updated_at": "Tuesday Aug 07, 2018 at 16:25 GMT",
        "closed_at": "Tuesday Aug 07, 2018 at 16:25 GMT",
        "merged_at": "Tuesday Aug 07, 2018 at 16:25 GMT"
    },
    {
        "key": "WT-4235",
        "number": 4201,
        "state": "closed",
        "title": "WT-4235 Fix workgen tracking of table runtime across workloads.",
        "body": "Previously, there was code approximating realloc in C++, but it assumed the wrong size of TableRuntime objects in an array.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 07, 2018 at 06:40 GMT",
        "updated_at": "Tuesday Aug 07, 2018 at 11:05 GMT",
        "closed_at": "Tuesday Aug 07, 2018 at 11:05 GMT",
        "merged_at": "Tuesday Aug 07, 2018 at 11:05 GMT"
    },
    {
        "key": "WT-4210",
        "number": 4200,
        "state": "closed",
        "title": "WT-4210 Start timer after checkpoint completes.",
        "body": "@agorrod This fixes the failures on tinderbox that result from very slow IO on that machine and a false positive timeout. Please review.",
        "base_ref": "develop",
        "created_at": "Monday Aug 06, 2018 at 18:20 GMT",
        "updated_at": "Monday Aug 06, 2018 at 23:10 GMT",
        "closed_at": "Monday Aug 06, 2018 at 23:10 GMT",
        "merged_at": "Monday Aug 06, 2018 at 23:10 GMT"
    },
    {
        "key": "WT-4207",
        "number": 4199,
        "state": "closed",
        "title": "WT-4207 Guard against null log pointer dereference",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 06, 2018 at 14:22 GMT",
        "updated_at": "Monday Aug 06, 2018 at 14:55 GMT",
        "closed_at": "Monday Aug 06, 2018 at 14:55 GMT",
        "merged_at": "Monday Aug 06, 2018 at 14:55 GMT"
    },
    {
        "key": "WT-4193",
        "number": 4198,
        "state": "closed",
        "title": "WT-4193 Fix WT_CURSOR::modify autocommit operations to include read.",
        "body": "Previously, a WT_CURSOR::modify operation outside a transaction would first read the existing value, then start a transaction to apply the modification.  Another thread could commit an update in between, leaving the value in the cursor inconsistent with the committed modifications.",
        "base_ref": "develop",
        "created_at": "Monday Aug 06, 2018 at 03:24 GMT",
        "updated_at": "Tuesday Aug 07, 2018 at 16:23 GMT",
        "closed_at": "Tuesday Aug 07, 2018 at 16:23 GMT",
        "merged_at": "Tuesday Aug 07, 2018 at 16:23 GMT"
    },
    {
        "key": "WT-4229",
        "number": 4197,
        "state": "closed",
        "title": "WT-4229 lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Aug 05, 2018 at 18:33 GMT",
        "updated_at": "Tuesday Aug 07, 2018 at 23:02 GMT",
        "closed_at": "Tuesday Aug 07, 2018 at 23:02 GMT",
        "merged_at": "Tuesday Aug 07, 2018 at 23:02 GMT"
    },
    {
        "key": "WT-4226",
        "number": 4196,
        "state": "closed",
        "title": "WT-4226 test/format LSM configurations can misconfigure prepare and timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 03, 2018 at 13:46 GMT",
        "updated_at": "Friday Aug 03, 2018 at 14:16 GMT",
        "closed_at": "Friday Aug 03, 2018 at 14:16 GMT",
        "merged_at": "Friday Aug 03, 2018 at 14:16 GMT"
    },
    {
        "key": "WT-3968",
        "number": 4195,
        "state": "closed",
        "title": "WT-3968 Use compression ratio to tune page sizes",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 01, 2018 at 14:52 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 22:54 GMT",
        "closed_at": "Wednesday Aug 01, 2018 at 22:54 GMT",
        "merged_at": "Wednesday Aug 01, 2018 at 22:54 GMT"
    },
    {
        "key": "WT-4213",
        "number": 4194,
        "state": "closed",
        "title": "WT-4213 Remove redundant and incorrect stat description text.",
        "body": "@bdlucas1 and @agorrod here's the proposed text changes for the incorrect locking statistic descriptions. The change is simply to remove the redundant phrase from the end `for the dhandle lock` from all applicable stats. I did not otherwise change the text.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 01, 2018 at 14:05 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 22:57 GMT",
        "closed_at": "Wednesday Aug 01, 2018 at 22:57 GMT",
        "merged_at": "Wednesday Aug 01, 2018 at 22:57 GMT"
    },
    {
        "key": "WT-4134",
        "number": 4193,
        "state": "closed",
        "title": "WT-4134 Rework assertion that we don't discard required history.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 01, 2018 at 05:12 GMT",
        "updated_at": "Friday Aug 03, 2018 at 05:55 GMT",
        "closed_at": "Friday Aug 03, 2018 at 05:54 GMT",
        "merged_at": "Friday Aug 03, 2018 at 05:54 GMT"
    },
    {
        "key": "WT-3856",
        "number": 4192,
        "state": "closed",
        "title": "WT-3856 Add schema test to truncate and recover from every LSN.",
        "body": "I created a new Python test that does some schema operations, walks the log, gathering LSNs and then truncates the log to each of those offsets and then runs recovery in each of those.\r\n\r\nI'm slightly unsatisfied with it. @keithbostic was correct in the ticket that detailed verification is difficult as we don't know what the system should look like at any given LSN. I copy the database and then truncate the log, but I don't know whether, at that LSN, the actual file should or should not exist during that point in the processing. So the only thing I do is run recovery and get `list -v`. So that makes sure the metadata can be read.\r\n\r\nAnother path I started on was a `test/csuite` program that would try to make sure we created and then ran recovery on every type of log record and log operation type that exists. That is more complicated, so writing this test was much faster turnaround.\r\n\r\nAnyway, this test is certainly not harmful. We still might want to have a different-focused test to verify that every log record and operation is tested.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 31, 2018 at 18:44 GMT",
        "updated_at": "Tuesday Aug 07, 2018 at 00:00 GMT",
        "closed_at": "Monday Aug 06, 2018 at 23:59 GMT",
        "merged_at": "Monday Aug 06, 2018 at 23:59 GMT"
    },
    {
        "key": "WT-4208",
        "number": 4191,
        "state": "closed",
        "title": "WT-4208 tree walks can be interrupted by locked internal pages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 30, 2018 at 19:36 GMT",
        "updated_at": "Tuesday Jul 31, 2018 at 11:15 GMT",
        "closed_at": "Tuesday Jul 31, 2018 at 05:35 GMT",
        "merged_at": "Tuesday Jul 31, 2018 at 05:35 GMT"
    },
    {
        "key": "WT-4206",
        "number": 4190,
        "state": "closed",
        "title": "WT-4206 cursor close routines can fail, leaking resources",
        "body": "",
        "base_ref": "wt-4206-cursor-close-cleanup",
        "created_at": "Monday Jul 30, 2018 at 15:01 GMT",
        "updated_at": "Monday Jul 30, 2018 at 17:58 GMT",
        "closed_at": "Monday Jul 30, 2018 at 17:58 GMT",
        "merged_at": "Monday Jul 30, 2018 at 17:58 GMT"
    },
    {
        "key": "WT-4206",
        "number": 4189,
        "state": "closed",
        "title": "WT-4206 Fix error handling in cursor close routines",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 27, 2018 at 20:38 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 02:16 GMT",
        "closed_at": "Wednesday Aug 01, 2018 at 02:16 GMT",
        "merged_at": "Wednesday Aug 01, 2018 at 02:16 GMT"
    },
    {
        "key": "WT-4199",
        "number": 4188,
        "state": "closed",
        "title": "WT-4199 Fix log corruption errantly reported due to buffer overrun",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 26, 2018 at 20:06 GMT",
        "updated_at": "Friday Jul 27, 2018 at 19:04 GMT",
        "closed_at": "Friday Jul 27, 2018 at 19:04 GMT",
        "merged_at": "Friday Jul 27, 2018 at 19:04 GMT"
    },
    {
        "key": "WT-4201",
        "number": 4187,
        "state": "closed",
        "title": "WT-4201 Fix Coverity static analysis issues",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 26, 2018 at 15:10 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 02:12 GMT",
        "closed_at": "Wednesday Aug 01, 2018 at 02:12 GMT",
        "merged_at": "Wednesday Aug 01, 2018 at 02:12 GMT"
    },
    {
        "key": "WT-4198",
        "number": 4186,
        "state": "closed",
        "title": "WT-4198 Some supported MongoDB architectures don't support crc32 hardware",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 25, 2018 at 18:44 GMT",
        "updated_at": "Wednesday Jul 25, 2018 at 22:09 GMT",
        "closed_at": "Wednesday Jul 25, 2018 at 22:08 GMT",
        "merged_at": "Wednesday Jul 25, 2018 at 22:08 GMT"
    },
    {
        "key": "WT-4186",
        "number": 4185,
        "state": "closed",
        "title": "WT-4186 Log recovery/salvage now detects/reports corruption within log records",
        "body": "A small code change, with a big comment!  The test case has been updated accordingly.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 25, 2018 at 18:11 GMT",
        "updated_at": "Wednesday Jul 25, 2018 at 18:49 GMT",
        "closed_at": "Wednesday Jul 25, 2018 at 18:49 GMT",
        "merged_at": "Wednesday Jul 25, 2018 at 18:49 GMT"
    },
    {
        "key": "WT-4195",
        "number": 4184,
        "state": "closed",
        "title": "WT-4195 when encountering an illegal value, log the value that failed",
        "body": "@agorrod, here are a set of changes to clean up and enhance our use of `__wt_illegal_value()`.\r\n\r\nThe first set are all cleaning up places where we called `__wt_illegal_value()` and it didn't make a lot of sense, basically, places that passed an additional message to `__wt_illegal_value()` so an error message could be logged. For most of those, I replaced the call with some variant of the `WT_PANIC` macro with an error message. I did those as separate commits so it would be easier to review the changes, that is, each change that needed a different fix got its own commit.\r\n\r\nOnce that was done, I removed the additional message being passed to `__wt_illegal_value()`, and added a \"failing value\" argument that's now displayed by the function.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 25, 2018 at 14:05 GMT",
        "updated_at": "Thursday Jul 26, 2018 at 05:23 GMT",
        "closed_at": "Thursday Jul 26, 2018 at 05:23 GMT",
        "merged_at": "Thursday Jul 26, 2018 at 05:23 GMT"
    },
    {
        "key": "WT-4196",
        "number": 4183,
        "state": "closed",
        "title": "WT-4196 Make log corruption checking work regardless of the machine byte order",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 25, 2018 at 02:40 GMT",
        "updated_at": "Wednesday Jul 25, 2018 at 14:40 GMT",
        "closed_at": "Wednesday Jul 25, 2018 at 14:33 GMT",
        "merged_at": "Wednesday Jul 25, 2018 at 14:33 GMT"
    },
    {
        "key": "WT-4191",
        "number": 4182,
        "state": "closed",
        "title": "WT-4191 Coverity errors.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 20, 2018 at 20:45 GMT",
        "updated_at": "Thursday Jul 26, 2018 at 05:32 GMT",
        "closed_at": "Thursday Jul 26, 2018 at 05:32 GMT",
        "merged_at": "Thursday Jul 26, 2018 at 05:32 GMT"
    },
    {
        "key": "WT-4189",
        "number": 4181,
        "state": "closed",
        "title": "WT-4189 Potential infinite loop in __async_flush_wait().",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 20, 2018 at 18:06 GMT",
        "updated_at": "Monday Jul 23, 2018 at 14:11 GMT",
        "closed_at": "Monday Jul 23, 2018 at 14:11 GMT",
        "merged_at": "Monday Jul 23, 2018 at 14:11 GMT"
    },
    {
        "key": "WT-4188",
        "number": 4180,
        "state": "closed",
        "title": "WT-4188 Coverity: unchecked return value complaints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 20, 2018 at 17:40 GMT",
        "updated_at": "Monday Jul 23, 2018 at 00:32 GMT",
        "closed_at": "Monday Jul 23, 2018 at 00:32 GMT",
        "merged_at": "Monday Jul 23, 2018 at 00:32 GMT"
    },
    {
        "key": "WT-4187",
        "number": 4179,
        "state": "closed",
        "title": "WT-4187 Coverity: unused value complaints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 20, 2018 at 17:15 GMT",
        "updated_at": "Tuesday Jul 24, 2018 at 04:16 GMT",
        "closed_at": "Tuesday Jul 24, 2018 at 04:14 GMT",
        "merged_at": "Tuesday Jul 24, 2018 at 04:14 GMT"
    },
    {
        "key": "WT-4183",
        "number": 4178,
        "state": "closed",
        "title": "WT-4183 Add verbose option to log more messages on error returns",
        "body": "Review WiredTiger error returns for `WT_ERROR`, `WT_PANIC` and `WT_RUN_RECOVERY`, ensure the appropriate places include verbose error messages.",
        "base_ref": "develop",
        "created_at": "Friday Jul 20, 2018 at 16:27 GMT",
        "updated_at": "Wednesday Jul 25, 2018 at 23:14 GMT",
        "closed_at": "Wednesday Jul 25, 2018 at 23:14 GMT",
        "merged_at": "Wednesday Jul 25, 2018 at 23:14 GMT"
    },
    {
        "key": "WT-4147",
        "number": 4177,
        "state": "closed",
        "title": "WT-4147 For log recovery/salvage, report/fix corruption outside of log records",
        "body": "We do a conservative consistency check of log record headers, as well as\r\nconsistency checks of 'holes' in log files. This catches corruptions that\r\noccur from appending junk to a valid log file, or inserting corruption\r\nin the unused portion of the final log file.\r\n\r\nCorruption errors are reported in a standard way that suggests using\r\nsalvage to fix.\r\n\r\nTests have been updated, along with extra commentary.",
        "base_ref": "develop",
        "created_at": "Friday Jul 20, 2018 at 13:59 GMT",
        "updated_at": "Tuesday Jul 24, 2018 at 20:58 GMT",
        "closed_at": "Tuesday Jul 24, 2018 at 20:57 GMT",
        "merged_at": "Tuesday Jul 24, 2018 at 20:57 GMT"
    },
    {
        "key": "WT-4182",
        "number": 4176,
        "state": "closed",
        "title": "WT-4182 Use conservative approach for log checksum errors.",
        "body": "A checksum error in a log does not necessarily imply corruption. Any log entry that was only partially written will result in a checksum mismatch.  This change reverts a selected portion of the change for WT-3270 that basically marked the end of the log to be recovered unconditionally as soon as a checksum error happened.\r\n\r\nCertain test scenarios unfortunately need to be watered down as well.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 19, 2018 at 03:52 GMT",
        "updated_at": "Thursday Jul 19, 2018 at 04:56 GMT",
        "closed_at": "Thursday Jul 19, 2018 at 04:56 GMT",
        "merged_at": "Thursday Jul 19, 2018 at 04:56 GMT"
    },
    {
        "key": "WT-4179",
        "number": 4175,
        "state": "closed",
        "title": "WT-4179 Expose WiredTiger crc32c functions",
        "body": "@agorrod, this change is probably worth consideration.\r\n\r\nI missed it in the first round of changes, and what it means is we can no longer use autoconf configuration to turn off hardware checksum acceleration in WiredTiger. I went back through the original checksum tickets, and I didn't find any reason why we wanted that ability, but I wanted to call it out, just in case.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 18, 2018 at 12:55 GMT",
        "updated_at": "Wednesday Jul 18, 2018 at 16:00 GMT",
        "closed_at": "Wednesday Jul 18, 2018 at 16:00 GMT",
        "merged_at": "Wednesday Jul 18, 2018 at 16:00 GMT"
    },
    {
        "key": "WT-4179",
        "number": 4174,
        "state": "closed",
        "title": "WT-4179 Expose WiredTiger crc32c functions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 18, 2018 at 11:40 GMT",
        "updated_at": "Wednesday Jul 18, 2018 at 12:10 GMT",
        "closed_at": "Wednesday Jul 18, 2018 at 12:10 GMT",
        "merged_at": "Wednesday Jul 18, 2018 at 12:10 GMT"
    },
    {
        "key": "WT-4178",
        "number": 4173,
        "state": "closed",
        "title": "WT-4178 Check for in-memory in btree durability test.",
        "body": "This PR is to allow the btree durability test to work with an in-memory database.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 17, 2018 at 16:04 GMT",
        "updated_at": "Wednesday Jul 18, 2018 at 16:18 GMT",
        "closed_at": "Wednesday Jul 18, 2018 at 16:17 GMT",
        "merged_at": "Wednesday Jul 18, 2018 at 16:17 GMT"
    },
    {
        "key": "WT-4135",
        "number": 4172,
        "state": "closed",
        "title": "WT-4135 Test github2jira",
        "body": "Here is the first comment.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 17, 2018 at 06:25 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 06:48 GMT",
        "closed_at": "Wednesday Jul 18, 2018 at 05:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4172",
        "number": 4171,
        "state": "closed",
        "title": "WT-4172 Add diagnostic hazard pointer checks in more places before freeing refs",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 16, 2018 at 20:24 GMT",
        "updated_at": "Wednesday Jul 18, 2018 at 23:32 GMT",
        "closed_at": "Wednesday Jul 18, 2018 at 23:32 GMT",
        "merged_at": "Wednesday Jul 18, 2018 at 23:32 GMT"
    },
    {
        "key": "WT-4147",
        "number": 4170,
        "state": "closed",
        "title": "WT-4147 Detect and salvage corruption of log record size in log file.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 13, 2018 at 15:20 GMT",
        "updated_at": "Friday Jul 20, 2018 at 14:00 GMT",
        "closed_at": "Friday Jul 20, 2018 at 14:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3943",
        "number": 4169,
        "state": "closed",
        "title": "WT-3943 Display full error message on python test failure",
        "body": "When there is an unexpected content in stderr, python test treats it\r\nas a test failure and displays the content of stderr on console.\r\nThis content on console used to be truncated. This change elongates\r\nthe stderr content displayed on console to ease failure triage.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 12, 2018 at 00:02 GMT",
        "updated_at": "Tuesday Jul 17, 2018 at 11:39 GMT",
        "closed_at": "Monday Jul 16, 2018 at 06:31 GMT",
        "merged_at": "Monday Jul 16, 2018 at 06:31 GMT"
    },
    {
        "key": "WT-4179",
        "number": 4168,
        "state": "closed",
        "title": "WT-4179 Expose WiredTiger crc32c functions",
        "body": "@agorrod, this approach is intended to make it possible to build the checksum functions in a separate library from the WiredTiger library: in short, we don't use any WiredTiger include files or structures.\r\n\r\nReturning a pointer to a function is intended to minimize the wrapping required for C++.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 11, 2018 at 21:56 GMT",
        "updated_at": "Tuesday Jul 17, 2018 at 17:40 GMT",
        "closed_at": "Tuesday Jul 17, 2018 at 17:40 GMT",
        "merged_at": "Tuesday Jul 17, 2018 at 17:40 GMT"
    },
    {
        "key": "WT-4171",
        "number": 4167,
        "state": "closed",
        "title": "WT-4171 Enabling tree walk timing stress causes excessive slowdown",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 11, 2018 at 16:38 GMT",
        "updated_at": "Thursday Jul 19, 2018 at 23:59 GMT",
        "closed_at": "Thursday Jul 19, 2018 at 23:59 GMT",
        "merged_at": "Thursday Jul 19, 2018 at 23:59 GMT"
    },
    {
        "key": "WT-4160",
        "number": 4166,
        "state": "closed",
        "title": "WT-4160 Restore performance when timestamps are not in use.",
        "body": "@michaelcahill Please review this change that modifies some of the changes made in WT-4141 that resulted in a perf drop for the overflow test. These are things I saw eyeballing that diff in #4147 that can affect a timestamp build that is not actually using timestamps. Here are the things to know:\r\n1. The change to `rec_write.c` does NOT impact performance, but it feels like a correct change and avoids calling the function when timestamps are built but not being used.\r\n2. The real change is in `btree.i`. In particular, the pre-WT-4141 code would return `true` in the case that timestamps were not in use. Restoring that via the `else` restores performance in all my local tests.\r\n3. The other change in `btree.i` is a bug in the original code, IMO. The code gets the `pinned_ts` in the line before, but then never uses it.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 11, 2018 at 15:36 GMT",
        "updated_at": "Thursday Jul 12, 2018 at 07:12 GMT",
        "closed_at": "Thursday Jul 12, 2018 at 07:12 GMT",
        "merged_at": "Thursday Jul 12, 2018 at 07:12 GMT"
    },
    {
        "key": "WT-4174",
        "number": 4165,
        "state": "closed",
        "title": "WT-4174 Only rollback lookaside if we're not an in-memory database.",
        "body": "@keithbostic Please review. I'll open a new ticket to add in-mem to timestamp testing where I originally reproduced this, but am pushing the code fix now because Dianna is blocked on this failure.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 10, 2018 at 15:58 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 06:48 GMT",
        "closed_at": "Tuesday Jul 10, 2018 at 18:05 GMT",
        "merged_at": "Tuesday Jul 10, 2018 at 18:05 GMT"
    },
    {
        "key": "WT-4010",
        "number": 4164,
        "state": "closed",
        "title": "WT-4010 Simplify test/format timestamp handling.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 10, 2018 at 14:24 GMT",
        "updated_at": "Friday Aug 03, 2018 at 02:44 GMT",
        "closed_at": "Friday Aug 03, 2018 at 02:44 GMT",
        "merged_at": "Friday Aug 03, 2018 at 02:44 GMT"
    },
    {
        "key": "WT-3955",
        "number": 4163,
        "state": "closed",
        "title": "WT-3955 Add function + line number context to error logging",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 09, 2018 at 16:40 GMT",
        "updated_at": "Wednesday Jul 11, 2018 at 02:05 GMT",
        "closed_at": "Wednesday Jul 11, 2018 at 02:05 GMT",
        "merged_at": "Wednesday Jul 11, 2018 at 02:05 GMT"
    },
    {
        "key": "WT-4169",
        "number": 4162,
        "state": "closed",
        "title": "WT-4169 wt verify dump-pages failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 06, 2018 at 17:00 GMT",
        "updated_at": "Thursday Jul 12, 2018 at 23:09 GMT",
        "closed_at": "Thursday Jul 12, 2018 at 23:09 GMT",
        "merged_at": "Thursday Jul 12, 2018 at 23:09 GMT"
    },
    {
        "key": "WT-4168",
        "number": 4161,
        "state": "closed",
        "title": "WT-4168 Doc changes for upgrading. Typos.",
        "body": "@agorrod and @lukech here are upgrading changes from WT-4029. I fixed a couple typos I saw in the docs also.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 05, 2018 at 18:02 GMT",
        "updated_at": "Thursday Jul 12, 2018 at 01:42 GMT",
        "closed_at": "Thursday Jul 12, 2018 at 01:42 GMT",
        "merged_at": "Thursday Jul 12, 2018 at 01:42 GMT"
    },
    {
        "key": "WT-4163",
        "number": 4160,
        "state": "closed",
        "title": "WT-4163 lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 03, 2018 at 21:01 GMT",
        "updated_at": "Thursday Jul 05, 2018 at 05:17 GMT",
        "closed_at": "Thursday Jul 05, 2018 at 05:17 GMT",
        "merged_at": "Thursday Jul 05, 2018 at 05:17 GMT"
    },
    {
        "key": "WT-3955",
        "number": 4159,
        "state": "closed",
        "title": "WT-3955 Add function + line number context to error logging",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 03, 2018 at 20:14 GMT",
        "updated_at": "Monday Jul 09, 2018 at 16:36 GMT",
        "closed_at": "Monday Jul 09, 2018 at 16:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4152",
        "number": 4158,
        "state": "closed",
        "title": "WT-4152 Save return value for later comparison.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 02, 2018 at 06:04 GMT",
        "updated_at": "Monday Jul 02, 2018 at 07:10 GMT",
        "closed_at": "Monday Jul 02, 2018 at 07:09 GMT",
        "merged_at": "Monday Jul 02, 2018 at 07:09 GMT"
    },
    {
        "key": "WT-4145",
        "number": 4157,
        "state": "closed",
        "title": "WT-4145 Only include the checkpoint timestamp during checkpoints.",
        "body": "Otherwise the visibility check will compare to zero - and lead to bad decisions.",
        "base_ref": "develop",
        "created_at": "Sunday Jul 01, 2018 at 23:53 GMT",
        "updated_at": "Monday Jul 02, 2018 at 04:34 GMT",
        "closed_at": "Monday Jul 02, 2018 at 04:33 GMT",
        "merged_at": "Monday Jul 02, 2018 at 04:33 GMT"
    },
    {
        "key": "WT-4143",
        "number": 4156,
        "state": "closed",
        "title": "WT-4143 Use WiredTiger.turtle.set if it exists but WiredTiger.turtle does not.",
        "body": "I don't see any reason we can't use WiredTiger.turtle.set if it exists but WiredTiger.turtle does not. There are probably other paths that can lead to the problem (imagine removal of the  `WiredTiger.turtle` file during filesystem checks), but we're already dead in the water, so it's not unreasonable to try.\r\n\r\n@sueloverso, I'm doing the rename at  a high-enough level that I don't think hot backup is affected, but I'd appreciate your agreement with that.",
        "base_ref": "develop",
        "created_at": "Sunday Jul 01, 2018 at 20:10 GMT",
        "updated_at": "Tuesday Jul 03, 2018 at 01:27 GMT",
        "closed_at": "Tuesday Jul 03, 2018 at 01:27 GMT",
        "merged_at": "Tuesday Jul 03, 2018 at 01:27 GMT"
    },
    {
        "key": "WT-4146",
        "number": 4155,
        "state": "closed",
        "title": "WT-4146 Coverity 1393639, unused variable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 29, 2018 at 14:01 GMT",
        "updated_at": "Monday Jul 02, 2018 at 01:29 GMT",
        "closed_at": "Monday Jul 02, 2018 at 01:29 GMT",
        "merged_at": "Monday Jul 02, 2018 at 01:29 GMT"
    },
    {
        "key": "WT-4026",
        "number": 4154,
        "state": "closed",
        "title": "WT-4026 Add implementation for existing file extension configuration API",
        "body": "File extend API on Windows(setEndOfFile) could be slow at times based on MSDN API\r\ndocumentation hence disable it.",
        "base_ref": "develop",
        "created_at": "Friday Jun 29, 2018 at 06:32 GMT",
        "updated_at": "Thursday Aug 09, 2018 at 16:05 GMT",
        "closed_at": "Thursday Aug 09, 2018 at 16:05 GMT",
        "merged_at": "Thursday Aug 09, 2018 at 16:05 GMT"
    },
    {
        "key": "WT-4026",
        "number": 4153,
        "state": "closed",
        "title": "WT-4026 Disable file extension on Windows ",
        "body": "File extension on Windows could be slow at times, based on MSDN API. \r\nDisabling it could help to achieve better performance for certain use-cases.",
        "base_ref": "develop",
        "created_at": "Friday Jun 29, 2018 at 06:28 GMT",
        "updated_at": "Friday Jun 29, 2018 at 06:29 GMT",
        "closed_at": "Friday Jun 29, 2018 at 06:29 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3276",
        "number": 4152,
        "state": "closed",
        "title": "WT-3276 Add recover=salvage to recover from a corrupted log file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 28, 2018 at 23:53 GMT",
        "updated_at": "Wednesday Jul 11, 2018 at 17:09 GMT",
        "closed_at": "Wednesday Jul 11, 2018 at 17:05 GMT",
        "merged_at": "Wednesday Jul 11, 2018 at 17:05 GMT"
    },
    {
        "key": "WT-3839",
        "number": 4151,
        "state": "closed",
        "title": "WT-3839 Document parallel insert truncate behaviour.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 28, 2018 at 23:08 GMT",
        "updated_at": "Monday Jul 02, 2018 at 23:12 GMT",
        "closed_at": "Monday Jul 02, 2018 at 23:12 GMT",
        "merged_at": "Monday Jul 02, 2018 at 23:12 GMT"
    },
    {
        "key": "WT-4136",
        "number": 4150,
        "state": "closed",
        "title": "WT-4136 Add a new timing stress flag that yields during tree search",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 28, 2018 at 18:21 GMT",
        "updated_at": "Monday Jul 02, 2018 at 23:11 GMT",
        "closed_at": "Monday Jul 02, 2018 at 23:11 GMT",
        "merged_at": "Monday Jul 02, 2018 at 23:11 GMT"
    },
    {
        "key": "WT-4112",
        "number": 4149,
        "state": "closed",
        "title": "WT-4112 Debugging to prove write(2) succeeds.",
        "body": "Not for review. Debugging only.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 28, 2018 at 18:17 GMT",
        "updated_at": "Monday Jul 23, 2018 at 14:06 GMT",
        "closed_at": "Monday Jul 23, 2018 at 14:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3917",
        "number": 4148,
        "state": "closed",
        "title": "WT-3917 Update reserve() documentation to have a note around commit visibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 28, 2018 at 05:09 GMT",
        "updated_at": "Friday Jun 29, 2018 at 06:44 GMT",
        "closed_at": "Friday Jun 29, 2018 at 06:44 GMT",
        "merged_at": "Friday Jun 29, 2018 at 06:44 GMT"
    },
    {
        "key": "WT-4141",
        "number": 4147,
        "state": "closed",
        "title": "WT-4141 Allow dirty eviction during checkpoint as of a timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 27, 2018 at 06:25 GMT",
        "updated_at": "Friday Jun 29, 2018 at 06:38 GMT",
        "closed_at": "Friday Jun 29, 2018 at 06:38 GMT",
        "merged_at": "Friday Jun 29, 2018 at 06:38 GMT"
    },
    {
        "key": "WT-4104",
        "number": 4146,
        "state": "closed",
        "title": "WT-4104 Fix test/format failure during comparing data content with berkeley db. (Not ready for review)",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 25, 2018 at 04:18 GMT",
        "updated_at": "Sunday Aug 12, 2018 at 22:54 GMT",
        "closed_at": "Sunday Aug 12, 2018 at 22:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4140",
        "number": 4145,
        "state": "closed",
        "title": "WT-4140 Cursor walk limits quick eviction page selection unnecessarily.",
        "body": "Alex, what I think happened here is that in commit [68138e2](https://github.com/wiredtiger/wiredtiger/commit/68138e21d0fe1529d7f65cebd2556699e3fa854b), this code was changed from:\r\n```\r\n\t\t\t/*\r\n\t\t\t * If we got all the way through an internal page and\r\n\t\t\t * all of the child pages were deleted, evict it.\r\n\t\t\t */\r\n\t\t\tif (empty_internal) {\r\n\t\t\t\t__wt_page_evict_soon(ref->page);\r\n\t\t\t\tempty_internal = false;\r\n\t\t\t}\r\n```\r\nto:\r\n```\r\n\t\t\t/*\r\n\t\t\t * If we got all the way through an internal page and\r\n\t\t\t * all of the child pages were deleted, mark it for\r\n\t\t\t * eviction.  If we see enough deleted refs at either\r\n\t\t\t * end, try a reverse split immediately.\r\n\t\t\t */\r\n\t\t\tif (empty_internal && pindex->entries > 1) {\r\n\t\t\t\t__wt_page_evict_soon(ref->page);\r\n\t\t\t\tempty_internal = false;\r\n\t\t\t} else if (delete_count > 0)\r\n\t\t\t\tWT_ERR(__wt_split_reverse(session, ref));\r\n```\r\nthen at some point, the call to `__wt_split_reverse()` call was removed and the `pindex->entries > 1` check wasn't removed along with it.\r\n\r\nI'm still confused by this, because it seems to me the right check would have been `pindex->entries < 2`, that is, don't try and reverse split anything without enough entries to split.\r\n\r\nHoping you or @michaelcahill know.\r\n\r\nJust discard out of hand if I'm reading this whole thing wrong.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 21, 2018 at 20:32 GMT",
        "updated_at": "Monday Jun 25, 2018 at 05:49 GMT",
        "closed_at": "Monday Jun 25, 2018 at 05:49 GMT",
        "merged_at": "Monday Jun 25, 2018 at 05:49 GMT"
    },
    {
        "key": "WT-4140",
        "number": 4144,
        "state": "closed",
        "title": "WT-4140 Cursor walk marks the wrong internal page for quick eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 21, 2018 at 20:07 GMT",
        "updated_at": "Thursday Jun 21, 2018 at 20:24 GMT",
        "closed_at": "Thursday Jun 21, 2018 at 20:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4139",
        "number": 4143,
        "state": "closed",
        "title": "WT-4139 rename the cursor restart statistic to match implementation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 21, 2018 at 19:11 GMT",
        "updated_at": "Friday Jun 22, 2018 at 10:49 GMT",
        "closed_at": "Friday Jun 22, 2018 at 06:32 GMT",
        "merged_at": "Friday Jun 22, 2018 at 06:32 GMT"
    },
    {
        "key": "WT-4024",
        "number": 4142,
        "state": "closed",
        "title": "WT-4024 Fix a race between split and next/prev",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 21, 2018 at 15:35 GMT",
        "updated_at": "Tuesday Jun 26, 2018 at 12:45 GMT",
        "closed_at": "Tuesday Jun 26, 2018 at 12:45 GMT",
        "merged_at": "Tuesday Jun 26, 2018 at 12:45 GMT"
    },
    {
        "key": "WT-4067",
        "number": 4141,
        "state": "closed",
        "title": "WT-4067 Enhance LSM to allow eviction in chunks pinned by history",
        "body": "If the transaction ID or timestamp lags in LSM, it currently causes chunks to be pinned in memory, which can lead to the cache becoming full of un-evictable pages.\r\n\r\nThe change here looks for such situations and \"unpins\" chunks in that case - allowing eviction and hopefully progress. This is only useful if applications aren't holding a cursor open on the active chunks (i.e: if there isn't a cursor doing a range scan).",
        "base_ref": "develop",
        "created_at": "Thursday Jun 21, 2018 at 06:12 GMT",
        "updated_at": "Friday Jun 29, 2018 at 07:01 GMT",
        "closed_at": "Friday Jun 29, 2018 at 07:01 GMT",
        "merged_at": "Friday Jun 29, 2018 at 07:01 GMT"
    },
    {
        "key": "WT-4138",
        "number": 4140,
        "state": "closed",
        "title": "WT-4138 Add option to timeout operations waiting for cache.",
        "body": "The option is to wiredtiger_open called cache_max_wait, and applies per operation on a session.\r\n\r\nAlso:\r\nFixup error reporting in bloom filter code.\r\nEnhance test/format to work with new timeout code.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 21, 2018 at 06:04 GMT",
        "updated_at": "Friday Jun 29, 2018 at 06:53 GMT",
        "closed_at": "Friday Jun 29, 2018 at 06:53 GMT",
        "merged_at": "Friday Jun 29, 2018 at 06:53 GMT"
    },
    {
        "key": "WT-4101",
        "number": 4139,
        "state": "closed",
        "title": "WT-4101 Ensure tracked maximum transaction ID is always updated",
        "body": "We were skipping such updates for clean pages - even though they may contain history that includes the largest transaction ID.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 21, 2018 at 00:24 GMT",
        "updated_at": "Friday Jun 22, 2018 at 06:29 GMT",
        "closed_at": "Friday Jun 22, 2018 at 06:29 GMT",
        "merged_at": "Friday Jun 22, 2018 at 06:29 GMT"
    },
    {
        "key": "WT-4048",
        "number": 4138,
        "state": "closed",
        "title": "WT-4048 Extend timing_stress_for_test split options",
        "body": "Make the timing stress function generally available.\r\nInsert a random delay, up to 1/10th of a second, always delaying that long significantly slows down some applications which could lead to less useful testing.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 20, 2018 at 20:22 GMT",
        "updated_at": "Wednesday Jun 20, 2018 at 23:24 GMT",
        "closed_at": "Wednesday Jun 20, 2018 at 23:24 GMT",
        "merged_at": "Wednesday Jun 20, 2018 at 23:24 GMT"
    },
    {
        "key": "WT-4111",
        "number": 4137,
        "state": "closed",
        "title": "WT-4111 Tune checkpoint scrubbing.",
        "body": "1. drop the floor at which eviction of dirty pages cut out from 5% to 1% of the cache size (making checkpoint more efficient for workloads with low write rates); and\r\n2. don't slow down writes to reduce the amount of dirty data in cache (reducing the effect of scrubbing on workloads with high write rates).",
        "base_ref": "develop",
        "created_at": "Monday Jun 18, 2018 at 04:35 GMT",
        "updated_at": "Thursday Jun 28, 2018 at 05:36 GMT",
        "closed_at": "Thursday Jun 28, 2018 at 05:36 GMT",
        "merged_at": "Thursday Jun 28, 2018 at 05:36 GMT"
    },
    {
        "key": "WT-4133",
        "number": 4136,
        "state": "closed",
        "title": "WT-4133 Coverity 1393445, 1393446 Dereference before null check.",
        "body": "The variables fullp and use_timestampp are dereferenced before being checked for NULL.",
        "base_ref": "develop",
        "created_at": "Friday Jun 15, 2018 at 10:49 GMT",
        "updated_at": "Sunday Jun 17, 2018 at 23:06 GMT",
        "closed_at": "Sunday Jun 17, 2018 at 23:06 GMT",
        "merged_at": "Sunday Jun 17, 2018 at 23:06 GMT"
    },
    {
        "key": "WT-4127",
        "number": 4135,
        "state": "closed",
        "title": "WT-4127 Add compatibility prefix.",
        "body": "@agorrod @dgottlieb Here are the changes for adding a prefix, and I changed the unit tests to reflect it.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 13, 2018 at 20:50 GMT",
        "updated_at": "Thursday Jun 14, 2018 at 00:39 GMT",
        "closed_at": "Thursday Jun 14, 2018 at 00:39 GMT",
        "merged_at": "Thursday Jun 14, 2018 at 00:39 GMT"
    },
    {
        "key": "WT-4128",
        "number": 4134,
        "state": "closed",
        "title": "WT-4128 Skip creating checkpoints if the stable timestamp allows.",
        "body": "If the stable timestamp doesn't move between checkpoints, their content would be identical.\r\nAlso move the similar existing check for clean databases from the checkpoint server into the checkpoint code itself.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 13, 2018 at 09:37 GMT",
        "updated_at": "Tuesday Jun 26, 2018 at 01:56 GMT",
        "closed_at": "Thursday Jun 14, 2018 at 02:17 GMT",
        "merged_at": "Thursday Jun 14, 2018 at 02:17 GMT"
    },
    {
        "key": "WT-9998",
        "number": 4133,
        "state": "closed",
        "title": "WT-9998 Test pull request for mongodb-3.2",
        "body": "",
        "base_ref": "mongodb-3.2",
        "created_at": "Wednesday Jun 13, 2018 at 04:59 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 06:48 GMT",
        "closed_at": "Thursday Jun 14, 2018 at 03:50 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4125",
        "number": 4132,
        "state": "closed",
        "title": "WT-4125 Repeated checkpoints at the same timestamp shouldn't read pages.",
        "body": "1. Add a test demonstrating the problem.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 13, 2018 at 02:57 GMT",
        "updated_at": "Friday Jun 29, 2018 at 06:57 GMT",
        "closed_at": "Friday Jun 29, 2018 at 01:41 GMT",
        "merged_at": "Friday Jun 29, 2018 at 01:41 GMT"
    },
    {
        "key": "WT-4122",
        "number": 4131,
        "state": "closed",
        "title": "WT-4122 Add test and fix for MongoDB's downgrade usage.",
        "body": "Not yet ready for review. This change, while fixing the problem may not detect an actual error condition properly. Adding more test scenarios and debugging that.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 12, 2018 at 21:33 GMT",
        "updated_at": "Thursday Jun 14, 2018 at 02:11 GMT",
        "closed_at": "Thursday Jun 14, 2018 at 02:11 GMT",
        "merged_at": "Thursday Jun 14, 2018 at 02:11 GMT"
    },
    {
        "key": "WT-4123",
        "number": 4130,
        "state": "closed",
        "title": "WT-4123 Jenkins compiler tester on old branches fails with GCC8",
        "body": "",
        "base_ref": "mongodb-3.2",
        "created_at": "Tuesday Jun 12, 2018 at 11:35 GMT",
        "updated_at": "Friday Jun 15, 2018 at 00:33 GMT",
        "closed_at": "Friday Jun 15, 2018 at 00:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-9998",
        "number": 4129,
        "state": "closed",
        "title": "WT-9998 Test pull request for mongodb-3.4",
        "body": "",
        "base_ref": "mongodb-3.4",
        "created_at": "Tuesday Jun 12, 2018 at 06:10 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 06:48 GMT",
        "closed_at": "Thursday Jun 14, 2018 at 03:51 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4115",
        "number": 4128,
        "state": "closed",
        "title": "WT-4115 fix valgrind error in test program",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 12, 2018 at 03:51 GMT",
        "updated_at": "Tuesday Jun 12, 2018 at 05:22 GMT",
        "closed_at": "Tuesday Jun 12, 2018 at 05:22 GMT",
        "merged_at": "Tuesday Jun 12, 2018 at 05:22 GMT"
    },
    {
        "key": "WT-4120",
        "number": 4127,
        "state": "closed",
        "title": "WT-4120 format should dump the cache when timing out",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jun 10, 2018 at 13:09 GMT",
        "updated_at": "Tuesday Jun 12, 2018 at 03:16 GMT",
        "closed_at": "Tuesday Jun 12, 2018 at 03:16 GMT",
        "merged_at": "Tuesday Jun 12, 2018 at 03:16 GMT"
    },
    {
        "key": "RT-2218",
        "number": 4126,
        "state": "closed",
        "title": "BACKPORT-2218 Don't retry fsync calls after EIO failure",
        "body": "Cherry-pick ae8bccc from WT-4045.",
        "base_ref": "mongodb-3.2",
        "created_at": "Friday Jun 08, 2018 at 20:52 GMT",
        "updated_at": "Thursday Jun 14, 2018 at 13:11 GMT",
        "closed_at": "Thursday Jun 14, 2018 at 03:53 GMT",
        "merged_at": "Thursday Jun 14, 2018 at 03:53 GMT"
    },
    {
        "key": "WT-4117",
        "number": 4125,
        "state": "closed",
        "title": "WT-4117 Expose WiredTiger crc32c functions",
        "body": "Alex, I took a run at exposing the WiredTiger crc32c checksum functions for MongoDB.",
        "base_ref": "develop",
        "created_at": "Friday Jun 08, 2018 at 16:52 GMT",
        "updated_at": "Tuesday Jun 12, 2018 at 04:20 GMT",
        "closed_at": "Tuesday Jun 12, 2018 at 04:20 GMT",
        "merged_at": "Tuesday Jun 12, 2018 at 04:20 GMT"
    },
    {
        "key": "WT-4116",
        "number": 4124,
        "state": "closed",
        "title": "WT-4116 Coverity #1393311 Copy-paste error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 08, 2018 at 15:10 GMT",
        "updated_at": "Tuesday Jun 12, 2018 at 00:15 GMT",
        "closed_at": "Tuesday Jun 12, 2018 at 00:15 GMT",
        "merged_at": "Tuesday Jun 12, 2018 at 00:15 GMT"
    },
    {
        "key": "WT-4071",
        "number": 4123,
        "state": "closed",
        "title": "WT-4071 Disable tests requiring timestamps for non-timestamp builds.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 08, 2018 at 04:38 GMT",
        "updated_at": "Tuesday Jun 12, 2018 at 05:18 GMT",
        "closed_at": "Tuesday Jun 12, 2018 at 05:18 GMT",
        "merged_at": "Tuesday Jun 12, 2018 at 05:18 GMT"
    },
    {
        "key": "WT-4105",
        "number": 4122,
        "state": "closed",
        "title": "WT-4105 restore max modify update value and tune to run as short test.",
        "body": "Restored the max modify update value back to 10.\r\nTune the test to run as short test instead of long test.\r\nprint test statements are masked with verbose flag.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 07, 2018 at 23:29 GMT",
        "updated_at": "Friday Jun 08, 2018 at 00:34 GMT",
        "closed_at": "Friday Jun 08, 2018 at 00:33 GMT",
        "merged_at": "Friday Jun 08, 2018 at 00:33 GMT"
    },
    {
        "key": "WT-4110",
        "number": 4121,
        "state": "closed",
        "title": "WT-4110 Fix a checkpoint timestamp race that skipped recent commits.",
        "body": "Checkpoints were first starting a snapshot transaction without a read timestamp, than checking if a stable timestamp was set by the application.  If the stable timestamp was updated after checkpoint\r\nestablished its snapshot, the checkpoint's transaction was invalid and could skip over records that were committed after the snapshot with timestamps less than the stable timestamp.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 06, 2018 at 23:32 GMT",
        "updated_at": "Thursday Jun 07, 2018 at 10:30 GMT",
        "closed_at": "Thursday Jun 07, 2018 at 04:02 GMT",
        "merged_at": "Thursday Jun 07, 2018 at 04:02 GMT"
    },
    {
        "key": "WT-4076",
        "number": 4120,
        "state": "closed",
        "title": "WT-4076 Discard obsolete lookaside history",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 05, 2018 at 22:43 GMT",
        "updated_at": "Thursday Jun 07, 2018 at 05:42 GMT",
        "closed_at": "Thursday Jun 07, 2018 at 05:42 GMT",
        "merged_at": "Thursday Jun 07, 2018 at 05:42 GMT"
    },
    {
        "key": "WT-4076",
        "number": 4119,
        "state": "closed",
        "title": "Revert \"WT-4076 Discard obsolete lookaside history from cache.\"",
        "body": "Reverts wiredtiger/wiredtiger#4111\r\n\r\nThe change caused some automated test failures.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 05, 2018 at 22:42 GMT",
        "updated_at": "Tuesday Jun 05, 2018 at 22:49 GMT",
        "closed_at": "Tuesday Jun 05, 2018 at 22:49 GMT",
        "merged_at": "Tuesday Jun 05, 2018 at 22:49 GMT"
    },
    {
        "key": "WT-4098",
        "number": 4118,
        "state": "closed",
        "title": "WT-4098 Add require_max compatibility support.",
        "body": "Not yet ready for review. It still needs unit tests added.",
        "base_ref": "develop",
        "created_at": "Monday Jun 04, 2018 at 18:21 GMT",
        "updated_at": "Thursday Jun 07, 2018 at 23:49 GMT",
        "closed_at": "Thursday Jun 07, 2018 at 23:48 GMT",
        "merged_at": "Thursday Jun 07, 2018 at 23:48 GMT"
    },
    {
        "key": "WT-4094",
        "number": 4117,
        "state": "closed",
        "title": "WT-4094 Improve conditions that decide whether to read from lookaside or not",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 01, 2018 at 05:06 GMT",
        "updated_at": "Thursday Jun 07, 2018 at 23:55 GMT",
        "closed_at": "Thursday Jun 07, 2018 at 09:33 GMT",
        "merged_at": "Thursday Jun 07, 2018 at 09:33 GMT"
    },
    {
        "key": "WT-4105",
        "number": 4116,
        "state": "closed",
        "title": "WT-4105 Reduce cache use by modify operations with history pinned.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 31, 2018 at 06:29 GMT",
        "updated_at": "Thursday Jun 07, 2018 at 05:54 GMT",
        "closed_at": "Thursday Jun 07, 2018 at 05:54 GMT",
        "merged_at": "Thursday Jun 07, 2018 at 05:54 GMT"
    },
    {
        "key": "WT-4087",
        "number": 4115,
        "state": "closed",
        "title": "WT-4087 Store compatibility version in turtle file and check on require_min.",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Thursday May 24, 2018 at 21:33 GMT",
        "updated_at": "Friday Jun 01, 2018 at 03:55 GMT",
        "closed_at": "Friday Jun 01, 2018 at 03:54 GMT",
        "merged_at": "Friday Jun 01, 2018 at 03:54 GMT"
    },
    {
        "key": "WT-4077",
        "number": 4114,
        "state": "closed",
        "title": "WT-4077 Revert a change to release logging slot outside of the lock. (v3.6 backport)",
        "body": "\u2026(#4074)\" (#4110)\r\n\r\nThis reverts commit 38f494b08419017e3c7c06fc3b41be9ea7e95a6f which resolved JIRA ticket WT-4058 and adds a comment explaining why the change wasn't correct.\r\n\r\n(cherry picked from commit 8bacd49f4c2a2a6a20766471c768aa4c1e8fdeb1)",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday May 24, 2018 at 01:11 GMT",
        "updated_at": "Thursday May 24, 2018 at 01:39 GMT",
        "closed_at": "Thursday May 24, 2018 at 01:39 GMT",
        "merged_at": "Thursday May 24, 2018 at 01:39 GMT"
    },
    {
        "key": "WT-4056",
        "number": 4113,
        "state": "closed",
        "title": "WT-4056 Add API to set minimum required file version. (#4092)",
        "body": "* Add API to set minimum required file version.\r\n\r\n* Move processing config into else clause.\r\n\r\n* Whitespace in error message. Add test.\r\n\r\n* Remove unused function\r\n\r\n* Review comments and fixes for log file version bump.\r\n\r\n(cherry picked from commit 3b1f623c2cd84e8df3b90adf2dc77a35c594d020)",
        "base_ref": "mongodb-3.6",
        "created_at": "Wednesday May 23, 2018 at 06:11 GMT",
        "updated_at": "Thursday May 24, 2018 at 01:47 GMT",
        "closed_at": "Thursday May 24, 2018 at 01:47 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4049",
        "number": 4112,
        "state": "closed",
        "title": "WT-4049 Adjust restarted search backoff algorithm.",
        "body": "If we backoff too aggressively it makes page splits less effective in some workloads.",
        "base_ref": "develop",
        "created_at": "Wednesday May 23, 2018 at 06:07 GMT",
        "updated_at": "Thursday May 24, 2018 at 10:47 GMT",
        "closed_at": "Thursday May 24, 2018 at 10:47 GMT",
        "merged_at": "Thursday May 24, 2018 at 10:47 GMT"
    },
    {
        "key": "WT-4076",
        "number": 4111,
        "state": "closed",
        "title": "WT-4076 Discard obsolete lookaside history from cache.",
        "body": "This unblocks workloads where internal pages containing references to leaf pages with lookaside history remain pinned in cache, even after the lookaside history is obsolete.",
        "base_ref": "develop",
        "created_at": "Tuesday May 22, 2018 at 07:33 GMT",
        "updated_at": "Tuesday Jun 05, 2018 at 22:42 GMT",
        "closed_at": "Tuesday Jun 05, 2018 at 06:14 GMT",
        "merged_at": "Tuesday Jun 05, 2018 at 06:14 GMT"
    },
    {
        "key": "WT-4077",
        "number": 4110,
        "state": "closed",
        "title": "WT-4077 Revert a change to release logging slot outside of the lock. (#4074)\"",
        "body": "This reverts commit 38f494b08419017e3c7c06fc3b41be9ea7e95a6f.",
        "base_ref": "develop",
        "created_at": "Monday May 21, 2018 at 19:12 GMT",
        "updated_at": "Monday May 21, 2018 at 22:57 GMT",
        "closed_at": "Monday May 21, 2018 at 22:57 GMT",
        "merged_at": "Monday May 21, 2018 at 22:57 GMT"
    },
    {
        "key": "WT-4079",
        "number": 4109,
        "state": "closed",
        "title": "WT-4079 confirm WiredTiger builds under gcc8",
        "body": "Don't turn on \"unsafe-loop-optimizations\" after gcc7, it's too noisy to tolerate. This reverts part of a change in e7c2ee6.",
        "base_ref": "develop",
        "created_at": "Monday May 21, 2018 at 13:28 GMT",
        "updated_at": "Monday May 21, 2018 at 23:15 GMT",
        "closed_at": "Monday May 21, 2018 at 13:55 GMT",
        "merged_at": "Monday May 21, 2018 at 13:55 GMT"
    },
    {
        "key": "WT-3963",
        "number": 4108,
        "state": "closed",
        "title": "WT-3963 Add a new schema abort test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 21, 2018 at 07:10 GMT",
        "updated_at": "Thursday Jul 26, 2018 at 05:16 GMT",
        "closed_at": "Thursday Jul 26, 2018 at 05:16 GMT",
        "merged_at": "Thursday Jul 26, 2018 at 05:16 GMT"
    },
    {
        "key": "WT-3963",
        "number": 4107,
        "state": "closed",
        "title": "Revert \"WT-3963 Add a schema-abort test.\"",
        "body": "Reverts wiredtiger/wiredtiger#3969",
        "base_ref": "develop",
        "created_at": "Monday May 21, 2018 at 06:55 GMT",
        "updated_at": "Monday May 21, 2018 at 07:09 GMT",
        "closed_at": "Monday May 21, 2018 at 06:56 GMT",
        "merged_at": "Monday May 21, 2018 at 06:56 GMT"
    },
    {
        "key": "WT-4093",
        "number": 4106,
        "state": "closed",
        "title": "WT-4093 Temporarily disable test/format LSM testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday May 20, 2018 at 12:45 GMT",
        "updated_at": "Monday May 21, 2018 at 21:26 GMT",
        "closed_at": "Monday May 21, 2018 at 21:26 GMT",
        "merged_at": "Monday May 21, 2018 at 21:26 GMT"
    },
    {
        "key": "WT-4091",
        "number": 4105,
        "state": "closed",
        "title": "WT-4091 Make timing_stress_test options for page split race conditions work",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 18, 2018 at 12:31 GMT",
        "updated_at": "Monday May 21, 2018 at 04:56 GMT",
        "closed_at": "Monday May 21, 2018 at 04:56 GMT",
        "merged_at": "Monday May 21, 2018 at 04:56 GMT"
    },
    {
        "key": "WT-3892",
        "number": 4104,
        "state": "closed",
        "title": "WT-3892 timing stress test for lookaside cleanup",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 18, 2018 at 04:41 GMT",
        "updated_at": "Friday May 25, 2018 at 05:25 GMT",
        "closed_at": "Friday May 25, 2018 at 05:25 GMT",
        "merged_at": "Friday May 25, 2018 at 05:25 GMT"
    },
    {
        "key": "WT-4075",
        "number": 4103,
        "state": "closed",
        "title": "WT-4075 Allow timestamp_transaction after prepare.",
        "body": "I made these modifications. @keithbostic please review the reversion (discussed in the ticket) to `test/format` for this. I ran this with the CONFIG from WT-3698 and it has run some iterations.\r\n\r\n@michaelcahill or @bvpvamsikrishna please review the code and unit test changes.",
        "base_ref": "develop",
        "created_at": "Wednesday May 16, 2018 at 20:22 GMT",
        "updated_at": "Friday May 18, 2018 at 02:57 GMT",
        "closed_at": "Friday May 18, 2018 at 02:57 GMT",
        "merged_at": "Friday May 18, 2018 at 02:57 GMT"
    },
    {
        "key": "WT-4086",
        "number": 4102,
        "state": "closed",
        "title": "WT-4086 Always verify the logging subsystem.",
        "body": "@agorrod This is a small change to always verify the logging subsystem, not just when we specify a compatibility required version.",
        "base_ref": "develop",
        "created_at": "Wednesday May 16, 2018 at 18:32 GMT",
        "updated_at": "Thursday May 17, 2018 at 13:26 GMT",
        "closed_at": "Thursday May 17, 2018 at 13:18 GMT",
        "merged_at": "Thursday May 17, 2018 at 13:18 GMT"
    },
    {
        "key": "WT-4079",
        "number": 4101,
        "state": "closed",
        "title": "WT-4079 confirm WiredTiger builds under gcc8",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 16, 2018 at 15:57 GMT",
        "updated_at": "Monday May 21, 2018 at 13:59 GMT",
        "closed_at": "Monday May 21, 2018 at 11:34 GMT",
        "merged_at": "Monday May 21, 2018 at 11:34 GMT"
    },
    {
        "key": "WT-4081",
        "number": 4100,
        "state": "closed",
        "title": "WT-4081 Add comments to syscall.py explaining how it works and run file syntax.",
        "body": "Also: consistently track line numbers and file names with lines associated with output and run files, so they can be shown when needed. This fixes verbose mode, which was broken.  Collect a context of recent output lines that are shown on failure.",
        "base_ref": "develop",
        "created_at": "Tuesday May 15, 2018 at 13:08 GMT",
        "updated_at": "Thursday May 17, 2018 at 05:21 GMT",
        "closed_at": "Thursday May 17, 2018 at 05:21 GMT",
        "merged_at": "Thursday May 17, 2018 at 05:21 GMT"
    },
    {
        "key": "WT-3557",
        "number": 4099,
        "state": "closed",
        "title": "WT-3557 format should ignore incompatible keywords (v3.4 backport)",
        "body": "test/format should ignore incompatible keywords, it makes it easier to remove/change keywords and run old CONFIGs.\r\n\r\n(cherry picked from commit 8cebaa823ef68d7ba170e154f6bb1a7e3eb21546)",
        "base_ref": "mongodb-3.4",
        "created_at": "Tuesday May 15, 2018 at 06:36 GMT",
        "updated_at": "Wednesday May 16, 2018 at 00:22 GMT",
        "closed_at": "Wednesday May 16, 2018 at 00:22 GMT",
        "merged_at": "Wednesday May 16, 2018 at 00:22 GMT"
    },
    {
        "key": "WT-4080",
        "number": 4098,
        "state": "closed",
        "title": "WT-4080 gcc8 -Wparentheses complains about WiredTiger's __F() macro.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 10, 2018 at 17:08 GMT",
        "updated_at": "Friday May 11, 2018 at 03:45 GMT",
        "closed_at": "Friday May 11, 2018 at 03:45 GMT",
        "merged_at": "Friday May 11, 2018 at 03:45 GMT"
    },
    {
        "key": "WT-4004",
        "number": 4097,
        "state": "closed",
        "title": "WT-4004 format snapshot-isolation search mismatch failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 10, 2018 at 15:13 GMT",
        "updated_at": "Friday May 11, 2018 at 02:00 GMT",
        "closed_at": "Friday May 11, 2018 at 01:59 GMT",
        "merged_at": "Friday May 11, 2018 at 01:59 GMT"
    },
    {
        "key": "WT-4045",
        "number": 4096,
        "state": "closed",
        "title": "WT-4045 Don't retry fsync calls after EIO failure. (v3.4 backport)",
        "body": "(cherry picked from commit ae8bccce3d8a8248afa0e4e0cf67674a43dede96)",
        "base_ref": "mongodb-3.4",
        "created_at": "Tuesday May 08, 2018 at 05:08 GMT",
        "updated_at": "Tuesday May 08, 2018 at 22:07 GMT",
        "closed_at": "Tuesday May 08, 2018 at 22:07 GMT",
        "merged_at": "Tuesday May 08, 2018 at 22:07 GMT"
    },
    {
        "key": "WT-4045",
        "number": 4095,
        "state": "closed",
        "title": "WT-4045 Don't retry fsync calls after EIO failure. (v3.4 backport)",
        "body": "",
        "base_ref": "master",
        "created_at": "Tuesday May 08, 2018 at 05:06 GMT",
        "updated_at": "Tuesday May 08, 2018 at 22:07 GMT",
        "closed_at": "Tuesday May 08, 2018 at 05:07 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4078",
        "number": 4094,
        "state": "closed",
        "title": "WT-4078 Splits can leak a page lock if memory allocation fails.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 07, 2018 at 15:56 GMT",
        "updated_at": "Monday May 07, 2018 at 23:24 GMT",
        "closed_at": "Monday May 07, 2018 at 23:24 GMT",
        "merged_at": "Monday May 07, 2018 at 23:24 GMT"
    },
    {
        "key": "WT-4045",
        "number": 4093,
        "state": "closed",
        "title": "WT-4045 Don't retry fsync calls after EIO failure. (v3.6 backport)",
        "body": "(cherry picked from commit ae8bccce3d8a8248afa0e4e0cf67674a43dede96)",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday May 07, 2018 at 01:59 GMT",
        "updated_at": "Tuesday May 08, 2018 at 00:05 GMT",
        "closed_at": "Tuesday May 08, 2018 at 00:04 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4056",
        "number": 4092,
        "state": "closed",
        "title": "WT-4056 Add API to set minimum required file version.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 04, 2018 at 04:52 GMT",
        "updated_at": "Tuesday May 08, 2018 at 17:28 GMT",
        "closed_at": "Tuesday May 08, 2018 at 17:28 GMT",
        "merged_at": "Tuesday May 08, 2018 at 17:28 GMT"
    },
    {
        "key": "WT-4067",
        "number": 4091,
        "state": "closed",
        "title": "WT-4067 format LSM cache requirements are wrong",
        "body": "@agorrod, feel free to just modify and merge this if there's anything you disagree with.",
        "base_ref": "develop",
        "created_at": "Thursday May 03, 2018 at 15:23 GMT",
        "updated_at": "Friday May 11, 2018 at 03:50 GMT",
        "closed_at": "Friday May 11, 2018 at 03:50 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4074",
        "number": 4090,
        "state": "closed",
        "title": "WT-4074 May lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 03, 2018 at 14:08 GMT",
        "updated_at": "Friday May 04, 2018 at 04:58 GMT",
        "closed_at": "Friday May 04, 2018 at 04:58 GMT",
        "merged_at": "Friday May 04, 2018 at 04:58 GMT"
    },
    {
        "key": "WT-4070",
        "number": 4089,
        "state": "closed",
        "title": "WT-4070 Avoid flushing individual files when a stable_timestamp is set.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 03, 2018 at 06:27 GMT",
        "updated_at": "Thursday May 03, 2018 at 20:42 GMT",
        "closed_at": "Thursday May 03, 2018 at 20:41 GMT",
        "merged_at": "Thursday May 03, 2018 at 20:41 GMT"
    },
    {
        "key": "WT-3698",
        "number": 4088,
        "state": "closed",
        "title": "WT-3698 Don't have format pin timestamp across begin/commit.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 03, 2018 at 06:23 GMT",
        "updated_at": "Friday May 04, 2018 at 04:50 GMT",
        "closed_at": "Friday May 04, 2018 at 04:50 GMT",
        "merged_at": "Friday May 04, 2018 at 04:50 GMT"
    },
    {
        "key": "WT-4037",
        "number": 4087,
        "state": "closed",
        "title": "WT-4037 Fix a bug where WT_REF structures are freed while still in use (v3.4 backport)",
        "body": "This PR includes backport changes for both WT-3710 and WT-4037. ",
        "base_ref": "mongodb-3.4",
        "created_at": "Thursday May 03, 2018 at 05:07 GMT",
        "updated_at": "Tuesday May 08, 2018 at 06:48 GMT",
        "closed_at": "Tuesday May 08, 2018 at 06:45 GMT",
        "merged_at": "Tuesday May 08, 2018 at 06:45 GMT"
    },
    {
        "key": "WT-3710",
        "number": 4086,
        "state": "closed",
        "title": "WT-3710 Fix a race condition between concurrent page splits",
        "body": "",
        "base_ref": "mongodb-3.4",
        "created_at": "Thursday May 03, 2018 at 00:39 GMT",
        "updated_at": "Friday May 04, 2018 at 04:08 GMT",
        "closed_at": "Friday May 04, 2018 at 03:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3698",
        "number": 4085,
        "state": "closed",
        "title": "WT-3698 Threads doing eviction can stall indefinitely when timestamps fail to advance.",
        "body": "@michaelcahill, the problem I'm currently chasing is when a truncate operation dirties a relatively large number of pages (usually a truncate), and the operation resolves, but the thread that would allow format to update the current timestamp values and unpin a bunch of pages gets trapped in `__wt_cache_eviction_worker()`, and we eventually hang because eviction isn't making any progress.\r\n\r\nNow that timestamp progress is essential to eviction success, it seems to me we don't want to co-opt  threads committing or rolling back transactions into eviction work. (We'll catch them on their next operation, of course.)\r\n\r\nThat said... the change to co-opt those threads into eviction went in about 6 months ago, ticket WT-3745, PR #3788, commit fd0c611, with this comment:\r\n```\r\nWT-3745 Favor oplog reads when under cache pressure. (#3788)\r\n\r\nThere are several behavior changes here to avoid situations where oplog\r\nreads can block when a primary is under severe cache update pressure.\r\nIn particular:\r\n* don't block if a scan encounters a large page;\r\n* don't stall reads when the dirty limit of cache is reached;\r\n* mark pages read from lookaside clean if it is safe to do so.\r\n\r\n* Revert to including lookaside pages in the dirty limit.\r\n\r\nAlways check for cache full before starting a transaction, check the\r\ndirty limit at the end of transactions that do updates.\r\n\r\n* Don't retry page rewrites until transaction state changes.\r\n\r\nWe used to have this check for transaction IDs, extend it to also check\r\nwhen the pinned timestamp hasn't moved forward and don't retry eviction.\r\n```",
        "base_ref": "develop",
        "created_at": "Wednesday May 02, 2018 at 18:57 GMT",
        "updated_at": "Thursday May 03, 2018 at 14:15 GMT",
        "closed_at": "Thursday May 03, 2018 at 14:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4032",
        "number": 4084,
        "state": "closed",
        "title": "WT-4032 parent pages can be evicted while being split. (v3.4 backport)",
        "body": "Parent pages are often not marked dirty until after their page-index structures have been replaced, opening up a window for eviction during the split. There's no reason to wait, once the parent is locked, the page split should succeed, mark the page dirty immediately.\r\n\r\n(cherry picked from commit 02e7fd4e22395507f799353d74e5bb94057469ff)",
        "base_ref": "mongodb-3.4",
        "created_at": "Wednesday May 02, 2018 at 06:03 GMT",
        "updated_at": "Friday May 04, 2018 at 04:51 GMT",
        "closed_at": "Thursday May 03, 2018 at 00:53 GMT",
        "merged_at": "Thursday May 03, 2018 at 00:53 GMT"
    },
    {
        "key": "WT-4069",
        "number": 4083,
        "state": "closed",
        "title": "WT-4069 Commit of a truncate can leave a page permanently locked",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 01, 2018 at 21:36 GMT",
        "updated_at": "Tuesday May 01, 2018 at 23:51 GMT",
        "closed_at": "Tuesday May 01, 2018 at 23:51 GMT",
        "merged_at": "Tuesday May 01, 2018 at 23:51 GMT"
    },
    {
        "key": "WT-4000",
        "number": 4082,
        "state": "closed",
        "title": "WT-4000 Optimize getting a txn snapshot if nothing has committed.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 01, 2018 at 06:24 GMT",
        "updated_at": "Friday May 11, 2018 at 03:47 GMT",
        "closed_at": "Friday May 11, 2018 at 03:47 GMT",
        "merged_at": "Friday May 11, 2018 at 03:47 GMT"
    },
    {
        "key": "WT-4069",
        "number": 4081,
        "state": "closed",
        "title": "WT-4069 format run exceeded 15 minutes past the maximum time",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 30, 2018 at 14:58 GMT",
        "updated_at": "Tuesday May 01, 2018 at 21:44 GMT",
        "closed_at": "Tuesday May 01, 2018 at 21:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4051",
        "number": 4080,
        "state": "closed",
        "title": "WT-4051 format configures too-small LSM caches.",
        "body": "@sueloverso, I'm going to merge this once it passes PR testing to get general testing back on track, but if you'd take a look when you're back next week, I'd really appreciate it.\r\n\r\nThanks!",
        "base_ref": "develop",
        "created_at": "Saturday Apr 28, 2018 at 12:30 GMT",
        "updated_at": "Monday Apr 30, 2018 at 15:06 GMT",
        "closed_at": "Saturday Apr 28, 2018 at 17:15 GMT",
        "merged_at": "Saturday Apr 28, 2018 at 17:15 GMT"
    },
    {
        "key": "WT-4051",
        "number": 4079,
        "state": "closed",
        "title": "WT-4051 format configures too-small LSM caches.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 27, 2018 at 17:33 GMT",
        "updated_at": "Friday Apr 27, 2018 at 20:33 GMT",
        "closed_at": "Friday Apr 27, 2018 at 20:33 GMT",
        "merged_at": "Friday Apr 27, 2018 at 20:33 GMT"
    },
    {
        "key": "WT-4061",
        "number": 4078,
        "state": "closed",
        "title": "WT-4061 Don't rollback during recovery due to cache pressure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 27, 2018 at 14:12 GMT",
        "updated_at": "Monday Apr 30, 2018 at 23:41 GMT",
        "closed_at": "Monday Apr 30, 2018 at 23:14 GMT",
        "merged_at": "Monday Apr 30, 2018 at 23:14 GMT"
    },
    {
        "key": "WT-4064",
        "number": 4077,
        "state": "closed",
        "title": "WT-4064 Relax checking of lookaside entry count.",
        "body": "If there is a race between inserting and removing lookaside records (or some bug where the entry count is not updated correctly), treat underflow the same as a zero entry count (i.e., treat the lookaside table as empty).\r\n\r\nAt worst, this will leave some data in the lookaside table that could potentially be swept.  It should avoid assertion failures during tests while we search for the source of the underflow.",
        "base_ref": "develop",
        "created_at": "Friday Apr 27, 2018 at 03:58 GMT",
        "updated_at": "Tuesday May 01, 2018 at 06:02 GMT",
        "closed_at": "Tuesday May 01, 2018 at 06:02 GMT",
        "merged_at": "Tuesday May 01, 2018 at 06:02 GMT"
    },
    {
        "key": "WT-4016",
        "number": 4076,
        "state": "closed",
        "title": "WT-4016 Change lookaside skew heuristic.",
        "body": "This heuristic attempts to ensure that most pages evicted with lookaside history get the versions on-disk that will be chosen by the next checkpoint.  Even if a stable_timestamp is set, under normal circumstances it will be moving forward regularly, so the next checkpoint is likely to choose the most recent committed versions to write to the backing file.\r\n\r\nOnly skew towards choosing the oldest versions of records if a page is evicted twice without the pinned timestamp moving forward.",
        "base_ref": "develop",
        "created_at": "Friday Apr 27, 2018 at 02:45 GMT",
        "updated_at": "Friday May 11, 2018 at 03:45 GMT",
        "closed_at": "Friday May 11, 2018 at 03:45 GMT",
        "merged_at": "Friday May 11, 2018 at 03:45 GMT"
    },
    {
        "key": "WT-4063",
        "number": 4075,
        "state": "closed",
        "title": "WT-4063 Explicitly state log archiving is disabled. Fix a typo.",
        "body": "@agorrod Please review these minor changes to the docs to be clearer when log archiving is disabled. This arose from confusion and a slack chat today.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 26, 2018 at 20:53 GMT",
        "updated_at": "Thursday Apr 26, 2018 at 23:06 GMT",
        "closed_at": "Thursday Apr 26, 2018 at 23:06 GMT",
        "merged_at": "Thursday Apr 26, 2018 at 23:06 GMT"
    },
    {
        "key": "WT-4058",
        "number": 4074,
        "state": "closed",
        "title": "WT-4058 Release a slot outside of the lock.",
        "body": "@agorrod Please review this change. After the user opened the ticket and questioned this, I believe this is safe. I have been running on this branch for a few hours in both the `wiredtiger-test-recovery-stress` and `wiredtiger-perf` jobs and have not seen any problems.\r\n\r\nOther uses of `wt_log_release` do not hold any locks so that function does not require it.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 26, 2018 at 20:47 GMT",
        "updated_at": "Tuesday May 01, 2018 at 03:33 GMT",
        "closed_at": "Tuesday May 01, 2018 at 03:33 GMT",
        "merged_at": "Tuesday May 01, 2018 at 03:33 GMT"
    },
    {
        "key": "WT-4060",
        "number": 4073,
        "state": "closed",
        "title": "WT-4060 Clean up __wt_getenv() error handling.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 26, 2018 at 16:31 GMT",
        "updated_at": "Tuesday May 08, 2018 at 06:19 GMT",
        "closed_at": "Tuesday May 08, 2018 at 06:19 GMT",
        "merged_at": "Tuesday May 08, 2018 at 06:19 GMT"
    },
    {
        "key": "WT-4045",
        "number": 4072,
        "state": "closed",
        "title": "WT-4045 Don't retry fsync calls after EIO failure.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 26, 2018 at 13:35 GMT",
        "updated_at": "Monday Apr 30, 2018 at 23:20 GMT",
        "closed_at": "Monday Apr 30, 2018 at 23:20 GMT",
        "merged_at": "Monday Apr 30, 2018 at 23:20 GMT"
    },
    {
        "key": "WT-4059",
        "number": 4071,
        "state": "closed",
        "title": "WT-4059 Start lookaside sweep at full records.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 26, 2018 at 12:34 GMT",
        "updated_at": "Friday Apr 27, 2018 at 02:30 GMT",
        "closed_at": "Thursday Apr 26, 2018 at 16:26 GMT",
        "merged_at": "Thursday Apr 26, 2018 at 16:26 GMT"
    },
    {
        "key": "WT-4057",
        "number": 4070,
        "state": "closed",
        "title": "WT-4057 Update snapshot after handling round_to_oldest.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 26, 2018 at 06:33 GMT",
        "updated_at": "Friday Apr 27, 2018 at 00:07 GMT",
        "closed_at": "Friday Apr 27, 2018 at 00:07 GMT",
        "merged_at": "Friday Apr 27, 2018 at 00:07 GMT"
    },
    {
        "key": "WT-4056",
        "number": 4069,
        "state": "closed",
        "title": "WT-4056 Add log file version statistic",
        "body": "@agorrod Here is one fairly easy way to get the information needed by MongoDB to determine a database is an illegal 3.4-based without corrupting the database, if opened read-only.  I did run a test on a 3.4-based database directory, opening it read-only, grabbing the version and checking it, and then running `wt list -v` on the 3.4 directory after to make sure it is still usable. Again, there are no good ways to test it other than manually.\r\n\r\nAlso note that this branch is based off the WT-4029 branch.\r\n\r\n@dgottlieb FYI.",
        "base_ref": "wt-4029-log-version",
        "created_at": "Wednesday Apr 25, 2018 at 17:29 GMT",
        "updated_at": "Wednesday May 02, 2018 at 14:54 GMT",
        "closed_at": "Wednesday May 02, 2018 at 14:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4057",
        "number": 4068,
        "state": "closed",
        "title": "WT-4057 round read timestamp to oldest after setting snapshot",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 25, 2018 at 14:16 GMT",
        "updated_at": "Thursday Apr 26, 2018 at 06:34 GMT",
        "closed_at": "Thursday Apr 26, 2018 at 06:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4055",
        "number": 4067,
        "state": "closed",
        "title": "WT-4055 format transaction prepare and logging configuration is incorrect",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 24, 2018 at 13:37 GMT",
        "updated_at": "Tuesday Apr 24, 2018 at 20:54 GMT",
        "closed_at": "Tuesday Apr 24, 2018 at 20:54 GMT",
        "merged_at": "Tuesday Apr 24, 2018 at 20:54 GMT"
    },
    {
        "key": "WT-4029",
        "number": 4066,
        "state": "closed",
        "title": "WT-4029 Bump log file version.",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Monday Apr 23, 2018 at 19:23 GMT",
        "updated_at": "Tuesday May 08, 2018 at 06:23 GMT",
        "closed_at": "Tuesday May 08, 2018 at 06:17 GMT",
        "merged_at": "Tuesday May 08, 2018 at 06:17 GMT"
    },
    {
        "key": "WT-4052",
        "number": 4065,
        "state": "closed",
        "title": "WT-4052 Transaction resources should be freed on session reset.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 23, 2018 at 15:06 GMT",
        "updated_at": "Tuesday Apr 24, 2018 at 10:53 GMT",
        "closed_at": "Tuesday Apr 24, 2018 at 10:53 GMT",
        "merged_at": "Tuesday Apr 24, 2018 at 10:53 GMT"
    },
    {
        "key": "WT-3914",
        "number": 4064,
        "state": "closed",
        "title": "WT-3914 Add general documentation for prepared transactions.",
        "body": "<img width=\"1444\" alt=\"prepare_doc\" src=\"https://user-images.githubusercontent.com/1930121/39047253-9958c33a-44dc-11e8-95a4-0a4073dbf46c.png\">\r\n\r\nAttaching a screenshot showing the generated documentation.\r\n\r\n@sueloverso Would you please review? I could definitely be convinced to move some/all the content into either the timestamps documentation on the same page, or the API doc in wiredtiger.in.",
        "base_ref": "develop",
        "created_at": "Friday Apr 20, 2018 at 10:53 GMT",
        "updated_at": "Thursday Apr 26, 2018 at 07:08 GMT",
        "closed_at": "Thursday Apr 26, 2018 at 07:08 GMT",
        "merged_at": "Thursday Apr 26, 2018 at 07:08 GMT"
    },
    {
        "key": "WT-4039",
        "number": 4063,
        "state": "closed",
        "title": "WT-4039 Revert change to encapsulate NULL into cell decoding.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 20, 2018 at 05:42 GMT",
        "updated_at": "Friday Apr 20, 2018 at 05:46 GMT",
        "closed_at": "Friday Apr 20, 2018 at 05:43 GMT",
        "merged_at": "Friday Apr 20, 2018 at 05:43 GMT"
    },
    {
        "key": "WT-4039",
        "number": 4062,
        "state": "closed",
        "title": "WT-4039 Move row-store missing-value support into the cell unpack code.",
        "body": "Change __wt_row_leaf_value_cell() to return an unpacked cell, where the\r\ncell can potentially representing a missing row-store value, instead of\r\nreturning a pointer to the cell (which might be NULL if there was no value\r\ncell), then subsequently handling the NULL cell explicitly or unpacking\r\nthe non-NULL cell.\r\n\r\nThis requires that the standard cell unpacking code handling a NULL cell\r\npointer (__wt_cell_unpack() can now handle a NULL cell reference and\r\ncreate an \"empty\" unpacked cell), plus the __cell_data_ref() function\r\nhas to handle the empty unpacked cell created by __wt_cell_unpack().\r\nThe latter was already the case, but there's a minor change there so we\r\ndon't attempt to Huffman decode empty values.\r\n\r\nThis means a slightly slower code path in general, but simplifies some\r\nhigher-level code.",
        "base_ref": "develop",
        "created_at": "Friday Apr 20, 2018 at 05:35 GMT",
        "updated_at": "Tuesday Apr 24, 2018 at 11:16 GMT",
        "closed_at": "Tuesday Apr 24, 2018 at 11:16 GMT",
        "merged_at": "Tuesday Apr 24, 2018 at 11:16 GMT"
    },
    {
        "key": "WT-4039",
        "number": 4061,
        "state": "closed",
        "title": "Revert \"WT-4039 Move row-store missing-value support into the cell unpack code.\"",
        "body": "Reverts wiredtiger/wiredtiger#4052",
        "base_ref": "develop",
        "created_at": "Friday Apr 20, 2018 at 05:35 GMT",
        "updated_at": "Friday Apr 20, 2018 at 05:40 GMT",
        "closed_at": "Friday Apr 20, 2018 at 05:40 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3851",
        "number": 4060,
        "state": "closed",
        "title": "WT-3851 Optimize wt_compare* routines with NEON instructions for ARM platform",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 19, 2018 at 16:59 GMT",
        "updated_at": "Thursday Apr 19, 2018 at 23:49 GMT",
        "closed_at": "Thursday Apr 19, 2018 at 23:49 GMT",
        "merged_at": "Thursday Apr 19, 2018 at 23:49 GMT"
    },
    {
        "key": "WT-9999",
        "number": 4059,
        "state": "closed",
        "title": "WT-9999 Test pull request",
        "body": "A dummy change is made to help trigger Pull Request testing.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 19, 2018 at 06:03 GMT",
        "updated_at": "Sunday Jun 21, 2020 at 22:49 GMT",
        "closed_at": "Sunday Jun 21, 2020 at 22:49 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3937",
        "number": 4058,
        "state": "closed",
        "title": "WT-3937 Tune lookaside sweep to react to workload",
        "body": "Not yet ready for review. First draft of separating LAS sweep timing from dhandle sweep timing. Dynamic adjusting of number of entries per pass is still in progress.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 18, 2018 at 21:31 GMT",
        "updated_at": "Thursday Apr 26, 2018 at 07:09 GMT",
        "closed_at": "Thursday Apr 26, 2018 at 04:51 GMT",
        "merged_at": "Thursday Apr 26, 2018 at 04:51 GMT"
    },
    {
        "key": "WT-4044",
        "number": 4057,
        "state": "closed",
        "title": "WT-4044 add API to return if a generation is active",
        "body": "Alex, feel free to discard without further discussion if you don't like it.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 18, 2018 at 21:17 GMT",
        "updated_at": "Friday Apr 20, 2018 at 05:06 GMT",
        "closed_at": "Friday Apr 20, 2018 at 05:06 GMT",
        "merged_at": "Friday Apr 20, 2018 at 05:06 GMT"
    },
    {
        "key": null,
        "number": 4056,
        "state": "closed",
        "title": "Add NEON intrinsic support for WT lexicographic comparison routine",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday Apr 18, 2018 at 19:38 GMT",
        "updated_at": "Thursday Apr 19, 2018 at 17:00 GMT",
        "closed_at": "Thursday Apr 19, 2018 at 17:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4037",
        "number": 4055,
        "state": "closed",
        "title": "WT-4037 WT_REF structures freed while still in use",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 18, 2018 at 12:03 GMT",
        "updated_at": "Thursday Apr 19, 2018 at 05:06 GMT",
        "closed_at": "Thursday Apr 19, 2018 at 05:06 GMT",
        "merged_at": "Thursday Apr 19, 2018 at 05:06 GMT"
    },
    {
        "key": "WT-4042",
        "number": 4054,
        "state": "closed",
        "title": "WT-4042 Access data handles safely during cursor reopen.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 17, 2018 at 14:03 GMT",
        "updated_at": "Tuesday Apr 17, 2018 at 14:51 GMT",
        "closed_at": "Tuesday Apr 17, 2018 at 14:50 GMT",
        "merged_at": "Tuesday Apr 17, 2018 at 14:50 GMT"
    },
    {
        "key": "WT-3998",
        "number": 4053,
        "state": "closed",
        "title": "WT-3998 clear pinned timestamp after closing checkpoint",
        "body": "Not yet ready for merge, but for discussion.",
        "base_ref": "develop",
        "created_at": "Monday Apr 16, 2018 at 23:26 GMT",
        "updated_at": "Tuesday Apr 17, 2018 at 02:56 GMT",
        "closed_at": "Tuesday Apr 17, 2018 at 02:56 GMT",
        "merged_at": "Tuesday Apr 17, 2018 at 02:56 GMT"
    },
    {
        "key": "WT-4039",
        "number": 4052,
        "state": "closed",
        "title": "WT-4039 Move row-store missing-value support into the cell unpack code.",
        "body": "@michaelcahill, I like your idea a lot, but the actual mechanics of it make me nervous.\r\n\r\nI split this work into a different ticket from WT-4031 (#4049) because we don't need to backport this work to fix the bug, and second, I think we want to pound on this change hard before we let it out into the wild.",
        "base_ref": "develop",
        "created_at": "Monday Apr 16, 2018 at 15:48 GMT",
        "updated_at": "Friday Apr 20, 2018 at 05:34 GMT",
        "closed_at": "Friday Apr 20, 2018 at 05:04 GMT",
        "merged_at": "Friday Apr 20, 2018 at 05:04 GMT"
    },
    {
        "key": "WT-4033",
        "number": 4051,
        "state": "closed",
        "title": "WT-4033 Add ability to alter tables without taking exclusive access",
        "body": "This particular commit changes which object types app_metadata appears in - we want it to be in only table, so we can alter without exclusive access.",
        "base_ref": "develop",
        "created_at": "Monday Apr 16, 2018 at 05:23 GMT",
        "updated_at": "Tuesday May 01, 2018 at 07:12 GMT",
        "closed_at": "Tuesday May 01, 2018 at 07:09 GMT",
        "merged_at": "Tuesday May 01, 2018 at 07:09 GMT"
    },
    {
        "key": "WT-4019",
        "number": 4050,
        "state": "closed",
        "title": "WT-4019 reduce prepare and snapshot-isolation interactions in format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Apr 14, 2018 at 19:44 GMT",
        "updated_at": "Sunday Apr 15, 2018 at 21:35 GMT",
        "closed_at": "Sunday Apr 15, 2018 at 21:35 GMT",
        "merged_at": "Sunday Apr 15, 2018 at 21:35 GMT"
    },
    {
        "key": "WT-4031",
        "number": 4049,
        "state": "closed",
        "title": "WT-4031 on-page zero-length row-store values can be discarded from checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Apr 14, 2018 at 18:52 GMT",
        "updated_at": "Monday Apr 16, 2018 at 14:44 GMT",
        "closed_at": "Monday Apr 16, 2018 at 14:42 GMT",
        "merged_at": "Monday Apr 16, 2018 at 14:42 GMT"
    },
    {
        "key": "WT-4035",
        "number": 4048,
        "state": "closed",
        "title": "WT-4035 page-delete information discarded before it was globally visible",
        "body": "Michael, what happened was AddressSanitizer failed in `__wt_delete_page_rollback()`, with a `WT_REF` in the `WT_REF_DELETED` state but `ref.page_del == NULL`, which is a core dump.\r\n\r\nThe only path I could find where I thought that might happen is `__rec_child_deleted()`, and I was able to make the free of `ref.page_del` assert with a not-yet-globally visible transaction there, with this stack:\r\n```\r\n#3  0x0000000000496ba1 in __wt_assert (session=0x7f62cf8ed498, error=0, \r\n    file_name=0x5b6210 <__func__.16654> \"__rec_child_deleted\", \r\n    line_number=1691, fmt=0x5b54fa \"%s\") at src/support/err.c:512\r\n#4  0x000000000046995f in __rec_child_deleted (session=0x7f62cf8ed498, \r\n    r=0x7f6224009b20, ref=0x7f627c0a3ec0, statep=0x7f62617f98bc)\r\n    at src/reconcile/rec_write.c:1691\r\n#5  0x0000000000469aaf in __rec_child_modify (session=0x7f62cf8ed498, \r\n    r=0x7f6224009b20, ref=0x7f627c0a3ec0, hazardp=0x7f62617f98af, \r\n    statep=0x7f62617f98bc) at src/reconcile/rec_write.c:1777\r\n#6  0x000000000047085b in __rec_row_int (session=0x7f62cf8ed498, \r\n    r=0x7f6224009b20, page=0x7f62840e7830) at src/reconcile/rec_write.c:5099\r\n#7  0x00000000004672bf in __wt_reconcile (session=0x7f62cf8ed498, \r\n    ref=0x7f62840ed740, salvage=0x0, flags=1, lookaside_retryp=0x0)\r\n    at src/reconcile/rec_write.c:470\r\n#8  0x00000000004f4e0c in __sync_file (session=0x7f62cf8ed498, \r\n    syncop=WT_SYNC_CHECKPOINT) at src/btree/bt_sync.c:320\r\n#9  0x00000000004f5187 in __wt_cache_op (session=0x7f62cf8ed498, \r\n    op=WT_SYNC_CHECKPOINT) at src/btree/bt_sync.c:414\r\n#10 0x00000000004b1164 in __checkpoint_tree (session=0x7f62cf8ed498, \r\n    is_checkpoint=true, cfg=0x7f62617f9e10) at src/txn/txn_ckpt.c:1611\r\n``` \r\nI stared at it a little while, but I'm not clear on what execution path leads us to a `ref.addr == NULL` and a state of `WT_REF_DELETED`.  It's either a chunk that never had a backing block, or was instantiated somehow without a backing block, and reconciliation does that enough now that I'm not sure what all the cases are.\r\n\r\nRegardless, it clearly can happen, and this fix looks correct to me.\r\n\r\nThere are repro details in the ticket if you want to look at this further.",
        "base_ref": "develop",
        "created_at": "Friday Apr 13, 2018 at 12:28 GMT",
        "updated_at": "Monday Apr 16, 2018 at 01:00 GMT",
        "closed_at": "Monday Apr 16, 2018 at 01:00 GMT",
        "merged_at": "Monday Apr 16, 2018 at 01:00 GMT"
    },
    {
        "key": "WT-3959",
        "number": 4047,
        "state": "closed",
        "title": "WT-3959 Remove metadata entry for checkpoint timestamp if zero.",
        "body": "We added a \"system:checkpoint\" entry to the metadata to store the most recent timestamp at which a checkpoint completed.  Current versions of WiredTiger treat a missing entry as equivalent to a zero timestamp.\r\n\r\nHowever, this metadata entry can confuse older versions of WiredTiger (specifically, opening a backup cursor fails when the new entry exists). Since MongoDB will always checkpoint without a timestamp as part of the downgrade process, remove the metadata entry in that case so that older versions of WiredTiger never see it.\r\n\r\nAlso, check for the \"system:\" previous generally rather than this specific entry.  Then if future versions of WiredTiger introduce new entries, they will be silently skipped when not expected.",
        "base_ref": "develop",
        "created_at": "Friday Apr 13, 2018 at 04:29 GMT",
        "updated_at": "Friday Apr 13, 2018 at 07:00 GMT",
        "closed_at": "Friday Apr 13, 2018 at 07:00 GMT",
        "merged_at": "Friday Apr 13, 2018 at 07:00 GMT"
    },
    {
        "key": "WT-4036",
        "number": 4046,
        "state": "closed",
        "title": "WT-4036 Coverity tickets: #1129045, #1129046, #1382093 out-of-bounds access",
        "body": "Alex, I've been talking with the Coverity folks about getting rid of this false positive -- it's pretty common because we have so many code paths that go through this function. Hopefully this will do the trick!",
        "base_ref": "develop",
        "created_at": "Thursday Apr 12, 2018 at 22:21 GMT",
        "updated_at": "Monday Apr 16, 2018 at 01:13 GMT",
        "closed_at": "Monday Apr 16, 2018 at 01:13 GMT",
        "merged_at": "Monday Apr 16, 2018 at 01:13 GMT"
    },
    {
        "key": "WT-4027",
        "number": 4045,
        "state": "closed",
        "title": "WT-4027 cursors should yield the CPU on repeated restart",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 12, 2018 at 11:44 GMT",
        "updated_at": "Monday Apr 16, 2018 at 03:49 GMT",
        "closed_at": "Monday Apr 16, 2018 at 03:49 GMT",
        "merged_at": "Monday Apr 16, 2018 at 03:49 GMT"
    },
    {
        "key": "WT-3959",
        "number": 4044,
        "state": "closed",
        "title": "WT-3959 Read the recovery timestamp after rolling forward the metadata.",
        "body": "",
        "base_ref": "wt-3959-recovery-schema",
        "created_at": "Thursday Apr 12, 2018 at 03:45 GMT",
        "updated_at": "Thursday Apr 12, 2018 at 23:01 GMT",
        "closed_at": "Thursday Apr 12, 2018 at 12:38 GMT",
        "merged_at": "Thursday Apr 12, 2018 at 12:38 GMT"
    },
    {
        "key": "WT-3959",
        "number": 4043,
        "state": "closed",
        "title": "WT-3959 Manage recovery timestamp via a new schema entry",
        "body": "This branch was merged once, but introduced [test failures](http://build.wiredtiger.com:8080/job/wiredtiger-test-spinlock/4246/), so I reverted.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 12, 2018 at 02:04 GMT",
        "updated_at": "Thursday Apr 12, 2018 at 23:01 GMT",
        "closed_at": "Thursday Apr 12, 2018 at 13:24 GMT",
        "merged_at": "Thursday Apr 12, 2018 at 13:24 GMT"
    },
    {
        "key": "WT-3959",
        "number": 4042,
        "state": "closed",
        "title": "Revert \"WT-3959 Manage recovery timestamp via a new schema entry.\"",
        "body": "Reverts wiredtiger/wiredtiger#4038",
        "base_ref": "develop",
        "created_at": "Thursday Apr 12, 2018 at 02:02 GMT",
        "updated_at": "Thursday Apr 12, 2018 at 02:02 GMT",
        "closed_at": "Thursday Apr 12, 2018 at 02:02 GMT",
        "merged_at": "Thursday Apr 12, 2018 at 02:02 GMT"
    },
    {
        "key": "WT-4034",
        "number": 4041,
        "state": "closed",
        "title": "WT-4034 re-entering eviction can result in checkpoint corruption",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 11, 2018 at 21:18 GMT",
        "updated_at": "Wednesday Apr 11, 2018 at 23:51 GMT",
        "closed_at": "Wednesday Apr 11, 2018 at 23:51 GMT",
        "merged_at": "Wednesday Apr 11, 2018 at 23:51 GMT"
    },
    {
        "key": "WT-4032",
        "number": 4040,
        "state": "closed",
        "title": "WT-4032 parent pages can be evicted while being split.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 10, 2018 at 22:55 GMT",
        "updated_at": "Wednesday Apr 11, 2018 at 23:45 GMT",
        "closed_at": "Wednesday Apr 11, 2018 at 23:45 GMT",
        "merged_at": "Wednesday Apr 11, 2018 at 23:45 GMT"
    },
    {
        "key": "WT-4028",
        "number": 4039,
        "state": "closed",
        "title": "WT-4028 page-is-modified check requires the page be locked",
        "body": "Revert part of 32793d9: it's not safe to call page-is-modified without first locking the WT_REF, the page can be evicted out from underneath.",
        "base_ref": "develop",
        "created_at": "Sunday Apr 08, 2018 at 18:40 GMT",
        "updated_at": "Sunday Apr 08, 2018 at 22:48 GMT",
        "closed_at": "Sunday Apr 08, 2018 at 22:48 GMT",
        "merged_at": "Sunday Apr 08, 2018 at 22:48 GMT"
    },
    {
        "key": "WT-3959",
        "number": 4038,
        "state": "closed",
        "title": "WT-3959 Manage recovery timestamp via a new schema entry.",
        "body": "Not ready for review.",
        "base_ref": "develop",
        "created_at": "Friday Apr 06, 2018 at 20:37 GMT",
        "updated_at": "Thursday Apr 12, 2018 at 02:02 GMT",
        "closed_at": "Thursday Apr 12, 2018 at 00:01 GMT",
        "merged_at": "Thursday Apr 12, 2018 at 00:01 GMT"
    },
    {
        "key": "WT-3910",
        "number": 4037,
        "state": "closed",
        "title": "WT-3910 Fix evergreen build on macOS.",
        "body": "In particular, force the use of Python from mongodbtoolchain/v2 and fix up the libwiredtiger.so path in binaries.",
        "base_ref": "develop",
        "created_at": "Friday Apr 06, 2018 at 07:45 GMT",
        "updated_at": "Monday Apr 09, 2018 at 04:25 GMT",
        "closed_at": "Friday Apr 06, 2018 at 08:58 GMT",
        "merged_at": "Friday Apr 06, 2018 at 08:58 GMT"
    },
    {
        "key": "WT-4014",
        "number": 4036,
        "state": "closed",
        "title": "WT-4014 If eviction walk is interrupted, clean up the queue.",
        "body": "Later walks assume there is a clear range of the queue and interrupts could violate that assumption.",
        "base_ref": "develop",
        "created_at": "Friday Apr 06, 2018 at 06:25 GMT",
        "updated_at": "Friday Apr 06, 2018 at 07:07 GMT",
        "closed_at": "Friday Apr 06, 2018 at 07:07 GMT",
        "merged_at": "Friday Apr 06, 2018 at 07:07 GMT"
    },
    {
        "key": "WT-4017",
        "number": 4035,
        "state": "closed",
        "title": "WT-4017 When evicting during a checkpoint, avoid splits.",
        "body": "If eviction has to pull pages into cache (generally because they have lookaside history that is relevant to the checkpoint), we try to evict those pages immediately, writing the correct version to disk in the process.\r\n\r\nHowever, if the eviction causes the page to split (which can happen because a different set of data is visible to the checkpoint than was visible when the page was previously evicted and the lookaside entries written), then splitting up the tree could invalidate the internal page image already calculated by the checkpoint.\r\n\r\nThe solution taken here is to give up on eviction if it would cause a page to split during a checkpoint.  The pages will stay in cache a little longer (though this should be rare in real workloads), but a valid snapshot of data will be written to disk.",
        "base_ref": "develop",
        "created_at": "Friday Apr 06, 2018 at 06:17 GMT",
        "updated_at": "Sunday Apr 08, 2018 at 22:49 GMT",
        "closed_at": "Sunday Apr 08, 2018 at 22:49 GMT",
        "merged_at": "Sunday Apr 08, 2018 at 22:49 GMT"
    },
    {
        "key": "WT-4025",
        "number": 4034,
        "state": "closed",
        "title": "WT-4025 Allow debug dumping of internal pages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 05, 2018 at 22:24 GMT",
        "updated_at": "Friday Apr 06, 2018 at 00:21 GMT",
        "closed_at": "Friday Apr 06, 2018 at 00:21 GMT",
        "merged_at": "Friday Apr 06, 2018 at 00:21 GMT"
    },
    {
        "key": "WT-4023",
        "number": 4033,
        "state": "closed",
        "title": "WT-4023 naked error returns",
        "body": "@sueloverso, I was chasing a `WT_ERROR` return today that didn't have an associated message, and so I went looking. I'm asking you for the review because `log.c` is involved.\r\n\r\nThanks!",
        "base_ref": "develop",
        "created_at": "Thursday Apr 05, 2018 at 19:47 GMT",
        "updated_at": "Wednesday May 02, 2018 at 02:25 GMT",
        "closed_at": "Wednesday May 02, 2018 at 02:25 GMT",
        "merged_at": "Wednesday May 02, 2018 at 02:25 GMT"
    },
    {
        "key": "WT-4022",
        "number": 4032,
        "state": "closed",
        "title": "WT-4022 Avoid WT_RESTART error return during eviction walk",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 05, 2018 at 15:39 GMT",
        "updated_at": "Friday Apr 06, 2018 at 00:05 GMT",
        "closed_at": "Friday Apr 06, 2018 at 00:05 GMT",
        "merged_at": "Friday Apr 06, 2018 at 00:05 GMT"
    },
    {
        "key": "WT-3886",
        "number": 4031,
        "state": "closed",
        "title": "WT-3886 Statistics for prepare transactions",
        "body": "Currently added statistics to count:\r\n1. prepare transactions.\r\n2. prepare transactions committed.\r\n3. prepare transactions rolled back.\r\n4. yields due to prepare state stabilisation.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 05, 2018 at 06:40 GMT",
        "updated_at": "Tuesday Apr 10, 2018 at 02:08 GMT",
        "closed_at": "Tuesday Apr 10, 2018 at 02:08 GMT",
        "merged_at": "Tuesday Apr 10, 2018 at 02:08 GMT"
    },
    {
        "key": "WT-4015",
        "number": 4030,
        "state": "closed",
        "title": "WT-4015 add drop index calls to test.",
        "body": "@ddanderson Please review this minor change to a test you wrote a (very) long time ago. I noticed it wasn't actually doing the drop.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 04, 2018 at 20:50 GMT",
        "updated_at": "Sunday Apr 08, 2018 at 22:51 GMT",
        "closed_at": "Sunday Apr 08, 2018 at 22:51 GMT",
        "merged_at": "Sunday Apr 08, 2018 at 22:51 GMT"
    },
    {
        "key": "WT-3931",
        "number": 4029,
        "state": "closed",
        "title": "WT-3931 cursor.prev split race",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 04, 2018 at 15:43 GMT",
        "updated_at": "Thursday Apr 05, 2018 at 05:30 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 16:06 GMT",
        "merged_at": "Wednesday Apr 04, 2018 at 16:06 GMT"
    },
    {
        "key": "WT-3931",
        "number": 4028,
        "state": "closed",
        "title": "WT-3931 format column store fix",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 04, 2018 at 13:38 GMT",
        "updated_at": "Wednesday Apr 04, 2018 at 14:19 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 14:19 GMT",
        "merged_at": "Wednesday Apr 04, 2018 at 14:19 GMT"
    },
    {
        "key": "WT-4012",
        "number": 4027,
        "state": "closed",
        "title": "WT-4012 Fix lookaside entry count.",
        "body": "We now \"pre-allocate\" the lookaside entry count by incrementing it by\r\n100 as records are inserted.  At the end, we need to fix up the final\r\ncount to match the number that were actually inserted.  That is always a\r\ndecrement.\r\n\r\nI merged this once and it trigger a stress [test failure](http://build.wiredtiger.com:8080/job/wiredtiger-test-format-stress/65747/), so I reverted and re-created the PR based on the original branch.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 04, 2018 at 09:26 GMT",
        "updated_at": "Monday Apr 16, 2018 at 01:50 GMT",
        "closed_at": "Monday Apr 16, 2018 at 01:50 GMT",
        "merged_at": "Monday Apr 16, 2018 at 01:50 GMT"
    },
    {
        "key": "WT-4012",
        "number": 4026,
        "state": "closed",
        "title": "Revert \"WT-4012 Fix lookaside entry count.\"",
        "body": "Reverts wiredtiger/wiredtiger#4024",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 04, 2018 at 09:24 GMT",
        "updated_at": "Wednesday Apr 04, 2018 at 09:24 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 09:24 GMT",
        "merged_at": "Wednesday Apr 04, 2018 at 09:24 GMT"
    },
    {
        "key": "WT-3994",
        "number": 4025,
        "state": "closed",
        "title": "WT-3994 Avoid GCC-7 and Clang errors for mongodb-3.2 branch (#3989)",
        "body": "Add GCC 7 and Clang warning settings to avoid build errors.\r\n\r\n(cherry picked from commit 5efdaecd1ce7f610d5f40d0b12d73b3b5abede29)",
        "base_ref": "mongodb-3.2",
        "created_at": "Wednesday Apr 04, 2018 at 06:48 GMT",
        "updated_at": "Thursday Apr 12, 2018 at 00:44 GMT",
        "closed_at": "Thursday Apr 12, 2018 at 00:44 GMT",
        "merged_at": "Thursday Apr 12, 2018 at 00:44 GMT"
    },
    {
        "key": "WT-4012",
        "number": 4024,
        "state": "closed",
        "title": "WT-4012 Fix lookaside entry count.",
        "body": "We now \"pre-allocate\" the lookaside entry count by incrementing it by 100 as records are inserted.  At the end, we need to fix up the final count to match the number that were actually inserted.  That is always a decrement.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 04, 2018 at 06:08 GMT",
        "updated_at": "Wednesday Apr 04, 2018 at 09:24 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 07:08 GMT",
        "merged_at": "Wednesday Apr 04, 2018 at 07:08 GMT"
    },
    {
        "key": "WT-4011",
        "number": 4023,
        "state": "closed",
        "title": "WT-4011 Checkpoint should not read truncated pages.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 04, 2018 at 05:55 GMT",
        "updated_at": "Wednesday Apr 04, 2018 at 12:41 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 06:47 GMT",
        "merged_at": "Wednesday Apr 04, 2018 at 06:47 GMT"
    },
    {
        "key": "WT-3959",
        "number": 4022,
        "state": "closed",
        "title": "WT-3959 Use recovery timestamp if stable isn't set.",
        "body": "Not for merge just for diff viewing.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 03, 2018 at 17:57 GMT",
        "updated_at": "Wednesday Apr 04, 2018 at 16:52 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 16:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4009",
        "number": 4021,
        "state": "closed",
        "title": "WT-4009 Create fast path for cursor caching with \"overwrite=false\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 03, 2018 at 14:08 GMT",
        "updated_at": "Monday Apr 09, 2018 at 21:46 GMT",
        "closed_at": "Monday Apr 09, 2018 at 21:46 GMT",
        "merged_at": "Monday Apr 09, 2018 at 21:46 GMT"
    },
    {
        "key": "WT-4007",
        "number": 4020,
        "state": "closed",
        "title": "WT-4007 Eviction should never read pages.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 03, 2018 at 06:21 GMT",
        "updated_at": "Tuesday Apr 03, 2018 at 16:30 GMT",
        "closed_at": "Tuesday Apr 03, 2018 at 16:30 GMT",
        "merged_at": "Tuesday Apr 03, 2018 at 16:30 GMT"
    },
    {
        "key": "WT-3724",
        "number": 4019,
        "state": "closed",
        "title": "WT-3724 Log an error if flushing with F_FULLSYNC fails",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Apr 01, 2018 at 15:55 GMT",
        "updated_at": "Monday Apr 02, 2018 at 22:07 GMT",
        "closed_at": "Monday Apr 02, 2018 at 22:07 GMT",
        "merged_at": "Monday Apr 02, 2018 at 22:07 GMT"
    },
    {
        "key": "WT-4008",
        "number": 4018,
        "state": "closed",
        "title": "WT-4008 Add ARM NEON support for row search operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Mar 31, 2018 at 15:07 GMT",
        "updated_at": "Monday Apr 09, 2018 at 08:39 GMT",
        "closed_at": "Saturday Mar 31, 2018 at 17:22 GMT",
        "merged_at": "Saturday Mar 31, 2018 at 17:22 GMT"
    },
    {
        "key": "WT-4008",
        "number": 4017,
        "state": "closed",
        "title": "Revert \"WT-4008 Add ARM NEON support for row search operations\"",
        "body": "Reverts wiredtiger/wiredtiger#4016",
        "base_ref": "master",
        "created_at": "Saturday Mar 31, 2018 at 14:58 GMT",
        "updated_at": "Saturday Mar 31, 2018 at 14:58 GMT",
        "closed_at": "Saturday Mar 31, 2018 at 14:58 GMT",
        "merged_at": "Saturday Mar 31, 2018 at 14:58 GMT"
    },
    {
        "key": "WT-4008",
        "number": 4016,
        "state": "closed",
        "title": "WT-4008 Add ARM NEON support for row search operations",
        "body": "This is a contribution for adding AArch64 FTS fast byte vector support & NEON support for row search operations.",
        "base_ref": "master",
        "created_at": "Friday Mar 30, 2018 at 18:38 GMT",
        "updated_at": "Saturday Mar 31, 2018 at 14:57 GMT",
        "closed_at": "Saturday Mar 31, 2018 at 14:57 GMT",
        "merged_at": "Saturday Mar 31, 2018 at 14:57 GMT"
    },
    {
        "key": "WT-3971",
        "number": 4015,
        "state": "closed",
        "title": "WT-3971 Cursor duplicates use the cursor cache.",
        "body": "This fixes a cursor cache leak of sorts when dups of the same URI are repeatedly made.",
        "base_ref": "develop",
        "created_at": "Friday Mar 30, 2018 at 14:16 GMT",
        "updated_at": "Tuesday Apr 03, 2018 at 06:25 GMT",
        "closed_at": "Tuesday Apr 03, 2018 at 06:25 GMT",
        "merged_at": "Tuesday Apr 03, 2018 at 06:25 GMT"
    },
    {
        "key": "WT-3870",
        "number": 4014,
        "state": "closed",
        "title": "WT-3870 lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 30, 2018 at 11:52 GMT",
        "updated_at": "Tuesday Apr 03, 2018 at 06:37 GMT",
        "closed_at": "Tuesday Apr 03, 2018 at 06:37 GMT",
        "merged_at": "Tuesday Apr 03, 2018 at 06:37 GMT"
    },
    {
        "key": "WT-4007",
        "number": 4013,
        "state": "closed",
        "title": "WT-4007 eviction instantiates pages from dead trees.",
        "body": "I don't believe a handle can be marked dead while eviction is traversing the tree, but this fix isn't sufficient if I'm wrong (and that's possible).",
        "base_ref": "develop",
        "created_at": "Thursday Mar 29, 2018 at 18:19 GMT",
        "updated_at": "Tuesday Apr 03, 2018 at 14:20 GMT",
        "closed_at": "Tuesday Apr 03, 2018 at 14:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-4006",
        "number": 4012,
        "state": "closed",
        "title": "WT-4006 format should support stress timing configurations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 29, 2018 at 15:59 GMT",
        "updated_at": "Tuesday Apr 10, 2018 at 01:48 GMT",
        "closed_at": "Tuesday Apr 10, 2018 at 01:48 GMT",
        "merged_at": "Tuesday Apr 10, 2018 at 01:48 GMT"
    },
    {
        "key": "WT-3931",
        "number": 4011,
        "state": "closed",
        "title": "WT-3931 cursor.prev split race",
        "body": "The bug fix is in 268d1c4.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 29, 2018 at 15:22 GMT",
        "updated_at": "Friday Apr 06, 2018 at 07:46 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 12:03 GMT",
        "merged_at": "Wednesday Apr 04, 2018 at 12:03 GMT"
    },
    {
        "key": "WT-4005",
        "number": 4010,
        "state": "closed",
        "title": "WT-4005 Check that ref->page_del is set before reading from it.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 29, 2018 at 06:09 GMT",
        "updated_at": "Thursday Mar 29, 2018 at 10:35 GMT",
        "closed_at": "Thursday Mar 29, 2018 at 10:35 GMT",
        "merged_at": "Thursday Mar 29, 2018 at 10:35 GMT"
    },
    {
        "key": "WT-4002",
        "number": 4009,
        "state": "closed",
        "title": "WT-4002 Allow duplicate config keys when defining a method",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 28, 2018 at 07:16 GMT",
        "updated_at": "Wednesday Mar 28, 2018 at 23:48 GMT",
        "closed_at": "Wednesday Mar 28, 2018 at 23:48 GMT",
        "merged_at": "Wednesday Mar 28, 2018 at 23:48 GMT"
    },
    {
        "key": "WT-3981",
        "number": 4008,
        "state": "closed",
        "title": "WT-3981 Update transaction snapshot when a read_timestamp is set.",
        "body": "Without this change, reads could miss committed updates with commit_timestamp lower than the read_timestamp if the commit raced with starting the read transaction.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 27, 2018 at 05:44 GMT",
        "updated_at": "Wednesday Mar 28, 2018 at 06:37 GMT",
        "closed_at": "Wednesday Mar 28, 2018 at 06:37 GMT",
        "merged_at": "Wednesday Mar 28, 2018 at 06:37 GMT"
    },
    {
        "key": "WT-3849",
        "number": 4007,
        "state": "closed",
        "title": "WT-3849 Add timestamp validation to WT_SESSION::prepare_transaction",
        "body": "I'm re-opening this after a revert, since there were test/format failures after the first version was merged.\r\n\r\nI suspect the failures were due to misuse of prepare by test/format.\r\n\r\nAn example of a failure:\r\n```\r\n[1522125514:954994][37349:0x7f8ad67ad700], t, WT_SESSION.prepare_transaction: prepare timestamp 217 not later than an active read timestamp 219 : Invalid argument\r\n```",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 27, 2018 at 05:09 GMT",
        "updated_at": "Thursday Apr 05, 2018 at 02:13 GMT",
        "closed_at": "Thursday Apr 05, 2018 at 02:12 GMT",
        "merged_at": "Thursday Apr 05, 2018 at 02:12 GMT"
    },
    {
        "key": "WT-3849",
        "number": 4006,
        "state": "closed",
        "title": "Revert \"WT-3849 Prepare timestamp validation.\"",
        "body": "Reverts wiredtiger/wiredtiger#3985",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 27, 2018 at 05:05 GMT",
        "updated_at": "Tuesday Mar 27, 2018 at 05:07 GMT",
        "closed_at": "Tuesday Mar 27, 2018 at 05:07 GMT",
        "merged_at": "Tuesday Mar 27, 2018 at 05:07 GMT"
    },
    {
        "key": "WT-3984",
        "number": 4005,
        "state": "closed",
        "title": "WT-3984 Fix race conditions around prepare state transitions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 27, 2018 at 03:59 GMT",
        "updated_at": "Friday Apr 06, 2018 at 00:19 GMT",
        "closed_at": "Friday Apr 06, 2018 at 00:19 GMT",
        "merged_at": "Friday Apr 06, 2018 at 00:19 GMT"
    },
    {
        "key": "WT-3997",
        "number": 4004,
        "state": "closed",
        "title": "WT-3997 The cursor walk code can spin without sleeping on restart/split.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 26, 2018 at 15:17 GMT",
        "updated_at": "Wednesday Mar 28, 2018 at 00:05 GMT",
        "closed_at": "Wednesday Mar 28, 2018 at 00:05 GMT",
        "merged_at": "Wednesday Mar 28, 2018 at 00:05 GMT"
    },
    {
        "key": "WT-3996",
        "number": 4003,
        "state": "closed",
        "title": "WT-3996 Add a test of truncate with timestamps and lookaside.",
        "body": "Makes sure we read the expected data when lookaside eviction is active and data is truncated with a timestamp.  Fixes a bug checking whether truncate operation need the commit timestamp to be applied.  Even with that fix, this test failed before a8fde4b was merged.",
        "base_ref": "develop",
        "created_at": "Monday Mar 26, 2018 at 06:28 GMT",
        "updated_at": "Monday Mar 26, 2018 at 14:32 GMT",
        "closed_at": "Monday Mar 26, 2018 at 14:32 GMT",
        "merged_at": "Monday Mar 26, 2018 at 14:32 GMT"
    },
    {
        "key": "WT-3994",
        "number": 4002,
        "state": "closed",
        "title": "WT-3994 Dummy change to trigger 3.2 PR test",
        "body": "",
        "base_ref": "mongodb-3.2",
        "created_at": "Monday Mar 26, 2018 at 04:34 GMT",
        "updated_at": "Tuesday Mar 27, 2018 at 22:56 GMT",
        "closed_at": "Tuesday Mar 27, 2018 at 22:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3982",
        "number": 4001,
        "state": "closed",
        "title": "WT-3982 Revert a test change that broke in some configurations",
        "body": "Timestamp abort needs to increase the allowed number of session handles, if a high thread count were chosen.",
        "base_ref": "develop",
        "created_at": "Monday Mar 26, 2018 at 04:25 GMT",
        "updated_at": "Monday Mar 26, 2018 at 05:47 GMT",
        "closed_at": "Monday Mar 26, 2018 at 05:47 GMT",
        "merged_at": "Monday Mar 26, 2018 at 05:47 GMT"
    },
    {
        "key": "WT-3994",
        "number": 4000,
        "state": "closed",
        "title": "WT-3994 Dummy change to trigger 3.6 PR test",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Mar 26, 2018 at 04:07 GMT",
        "updated_at": "Tuesday Mar 27, 2018 at 22:57 GMT",
        "closed_at": "Tuesday Mar 27, 2018 at 22:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3973",
        "number": 3999,
        "state": "closed",
        "title": "WT-3973 Allow alter to modify app_metadata",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 26, 2018 at 04:00 GMT",
        "updated_at": "Wednesday Mar 28, 2018 at 06:47 GMT",
        "closed_at": "Wednesday Mar 28, 2018 at 06:47 GMT",
        "merged_at": "Wednesday Mar 28, 2018 at 06:47 GMT"
    },
    {
        "key": "WT-3990",
        "number": 3998,
        "state": "closed",
        "title": "WT-3990 Coverity tickets",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 23, 2018 at 19:13 GMT",
        "updated_at": "Monday Mar 26, 2018 at 12:03 GMT",
        "closed_at": "Monday Mar 26, 2018 at 01:36 GMT",
        "merged_at": "Monday Mar 26, 2018 at 01:36 GMT"
    },
    {
        "key": "WT-3979",
        "number": 3997,
        "state": "closed",
        "title": "WT-3979 Doxygen upgrade reports warnings on build.",
        "body": "This isn't a complete fix, but it gets rid of most of the warnings.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 22, 2018 at 22:22 GMT",
        "updated_at": "Monday Mar 26, 2018 at 04:37 GMT",
        "closed_at": "Monday Mar 26, 2018 at 04:37 GMT",
        "merged_at": "Monday Mar 26, 2018 at 04:37 GMT"
    },
    {
        "key": "WT-3987",
        "number": 3996,
        "state": "closed",
        "title": "WT-3987 Avoid reading lookaside pages in truncate fast path",
        "body": "@michaelcahill, @agorrod, for your review.\r\n\r\nI split the commits into two parts so we can separately revert them, if I've gone in the wrong direction on page instantiation.\r\n\r\nAlso, can you think of a reason we didn't see this fail in format stress testing? It seems to me cursors reading from instantiated deleted pages in snapshot isolation should have read the wrong records (because we weren't applying lookaside records in the deleted-page instantiation path). I found the problem by inspection, and I'm worried we're not testing lookaside as well as we should be.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 22, 2018 at 15:56 GMT",
        "updated_at": "Monday Mar 26, 2018 at 04:39 GMT",
        "closed_at": "Monday Mar 26, 2018 at 04:39 GMT",
        "merged_at": "Monday Mar 26, 2018 at 04:39 GMT"
    },
    {
        "key": "WT-3982",
        "number": 3995,
        "state": "closed",
        "title": "WT-3982 Fix transaction visibility bugs related to lookaside usage.",
        "body": "At low isolation levels, new records can appear in between positioning a cursor and calling next/prev.  For this reason, search_near cannot assume that after calling next (or prev), it will have a key larger (or smaller) than the search key.  Loop and check in this (rare) case instead.\r\n\r\nThis applies particularly to internal code that searches in the lookaside table, because that access is always done at read-uncommitted isolation.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 22, 2018 at 10:38 GMT",
        "updated_at": "Monday Mar 26, 2018 at 01:56 GMT",
        "closed_at": "Monday Mar 26, 2018 at 01:56 GMT",
        "merged_at": "Monday Mar 26, 2018 at 01:56 GMT"
    },
    {
        "key": "WT-3987",
        "number": 3994,
        "state": "closed",
        "title": "WT-3987 Avoid reading lookaside pages in truncate fast path.",
        "body": "@michaelcahill, this is [Zseries failure 41508](http://build.wiredtiger.com:8080/job/wiredtiger-test-format-stress-zseries/41508/console).\r\n\r\nI believe the fix to only read `WT_REF.addr` once is needed, but I've never seen it fail, I noticed it while looking at the core dump.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 21, 2018 at 15:17 GMT",
        "updated_at": "Thursday Mar 22, 2018 at 04:57 GMT",
        "closed_at": "Thursday Mar 22, 2018 at 04:57 GMT",
        "merged_at": "Thursday Mar 22, 2018 at 04:57 GMT"
    },
    {
        "key": "WT-3987",
        "number": 3993,
        "state": "closed",
        "title": "WT-3987 Avoid reading lookaside pages in truncate fast path.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 21, 2018 at 06:25 GMT",
        "updated_at": "Wednesday Mar 21, 2018 at 21:57 GMT",
        "closed_at": "Wednesday Mar 21, 2018 at 12:06 GMT",
        "merged_at": "Wednesday Mar 21, 2018 at 12:06 GMT"
    },
    {
        "key": "re-",
        "number": 3992,
        "state": "closed",
        "title": "Add test of pre-allocated log files.",
        "body": "@keithbostic I created a test that passes on linux. It should fail on Windows but I don't know for sure. And it should pass once the fix is in. This branch is off of your branch.",
        "base_ref": "wt-3985-windows-list-single",
        "created_at": "Tuesday Mar 20, 2018 at 09:08 GMT",
        "updated_at": "Tuesday Mar 20, 2018 at 10:44 GMT",
        "closed_at": "Tuesday Mar 20, 2018 at 10:44 GMT",
        "merged_at": "Tuesday Mar 20, 2018 at 10:44 GMT"
    },
    {
        "key": "WT-3985",
        "number": 3991,
        "state": "closed",
        "title": "WT-3985 Pre-allocated log files accumulate on Windows",
        "body": "@sueloverso, the problem was the \"continue\" statements when we hit `.` and `..` were branching to the end of the loop, `single` was true and so we returned immediately.\r\n\r\nAll the credit goes to @markbenvenuto, he figured it out.",
        "base_ref": "develop",
        "created_at": "Monday Mar 19, 2018 at 23:33 GMT",
        "updated_at": "Thursday Mar 22, 2018 at 17:36 GMT",
        "closed_at": "Thursday Mar 22, 2018 at 01:14 GMT",
        "merged_at": "Thursday Mar 22, 2018 at 01:14 GMT"
    },
    {
        "key": "WT-3869",
        "number": 3990,
        "state": "closed",
        "title": "WT-3869 Lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 16, 2018 at 18:34 GMT",
        "updated_at": "Wednesday Mar 21, 2018 at 06:36 GMT",
        "closed_at": "Wednesday Mar 21, 2018 at 06:36 GMT",
        "merged_at": "Wednesday Mar 21, 2018 at 06:36 GMT"
    },
    {
        "key": "WT-3994",
        "number": 3989,
        "state": "closed",
        "title": "WT-3994 Avoid GCC-7 and Clang errors for mongodb-3.4 branch",
        "body": "Test old branch PR Jenkins jobs",
        "base_ref": "mongodb-3.4",
        "created_at": "Friday Mar 16, 2018 at 03:49 GMT",
        "updated_at": "Wednesday Apr 04, 2018 at 00:32 GMT",
        "closed_at": "Wednesday Apr 04, 2018 at 00:02 GMT",
        "merged_at": "Wednesday Apr 04, 2018 at 00:02 GMT"
    },
    {
        "key": "WT-3922",
        "number": 3988,
        "state": "closed",
        "title": "WT-3922 Allow truncate operations to be prepared",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 15, 2018 at 22:34 GMT",
        "updated_at": "Tuesday Mar 27, 2018 at 03:26 GMT",
        "closed_at": "Tuesday Mar 27, 2018 at 03:25 GMT",
        "merged_at": "Tuesday Mar 27, 2018 at 03:25 GMT"
    },
    {
        "key": "WT-3977",
        "number": 3987,
        "state": "closed",
        "title": "WT-3977 Print out actual checkpoint stable timestamp in timestamp_abort.",
        "body": "@keithbostic Please review. Now that WT-3958 is merged the test can print out the actual timestamp used in a checkpoint instead of an approximation. Knowing that exact value will help debug the failure.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 15, 2018 at 16:51 GMT",
        "updated_at": "Thursday Mar 15, 2018 at 18:50 GMT",
        "closed_at": "Thursday Mar 15, 2018 at 18:50 GMT",
        "merged_at": "Thursday Mar 15, 2018 at 18:50 GMT"
    },
    {
        "key": "WT-3980",
        "number": 3986,
        "state": "closed",
        "title": "WT-3980 failure returning a modified update without a backing \"real\" update",
        "body": "@agorrod, this should make future failures of this type more obvious.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 15, 2018 at 16:15 GMT",
        "updated_at": "Thursday Mar 15, 2018 at 23:24 GMT",
        "closed_at": "Thursday Mar 15, 2018 at 23:24 GMT",
        "merged_at": "Thursday Mar 15, 2018 at 23:24 GMT"
    },
    {
        "key": "WT-3849",
        "number": 3985,
        "state": "closed",
        "title": "WT-3849 Prepare timestamp validation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 14, 2018 at 04:30 GMT",
        "updated_at": "Tuesday Mar 27, 2018 at 05:07 GMT",
        "closed_at": "Tuesday Mar 27, 2018 at 03:51 GMT",
        "merged_at": "Tuesday Mar 27, 2018 at 03:51 GMT"
    },
    {
        "key": "WT-3959",
        "number": 3984,
        "state": "closed",
        "title": "WT-3959 Fix setting recovery timestamp on restart.",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 13, 2018 at 20:24 GMT",
        "updated_at": "Thursday Apr 12, 2018 at 03:24 GMT",
        "closed_at": "Wednesday Apr 11, 2018 at 14:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3975",
        "number": 3983,
        "state": "closed",
        "title": "WT-3975 Fix arg mismatch errors in rwlock test.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 13, 2018 at 18:29 GMT",
        "updated_at": "Tuesday Mar 13, 2018 at 18:53 GMT",
        "closed_at": "Tuesday Mar 13, 2018 at 18:53 GMT",
        "merged_at": "Tuesday Mar 13, 2018 at 18:53 GMT"
    },
    {
        "key": "WT-9999",
        "number": 3982,
        "state": "closed",
        "title": "WT-9999 BUILD-4163 test PR after Jenkins plugin update/rollback",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 13, 2018 at 03:24 GMT",
        "updated_at": "Tuesday Mar 13, 2018 at 23:27 GMT",
        "closed_at": "Tuesday Mar 13, 2018 at 23:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-9999",
        "number": 3981,
        "state": "closed",
        "title": "WT-9999 (BUILD-4163) test PR after Jenkins plugin update/rollback",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 13, 2018 at 03:13 GMT",
        "updated_at": "Tuesday Mar 13, 2018 at 23:27 GMT",
        "closed_at": "Tuesday Mar 13, 2018 at 03:23 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3958",
        "number": 3980,
        "state": "closed",
        "title": "WT-3958 Add last checkpoint timestamp to query_timestamp.",
        "body": "@agorrod or @keithbostic please review.",
        "base_ref": "develop",
        "created_at": "Monday Mar 12, 2018 at 19:18 GMT",
        "updated_at": "Tuesday Mar 13, 2018 at 23:34 GMT",
        "closed_at": "Tuesday Mar 13, 2018 at 23:34 GMT",
        "merged_at": "Tuesday Mar 13, 2018 at 23:34 GMT"
    },
    {
        "key": "WT-3950",
        "number": 3979,
        "state": "closed",
        "title": "WT-3950 Add rollback_to_stable statistics.",
        "body": "@agorrod Here is a small branch to add a few statistics to the `rollback_to_stable` API and related test changes.",
        "base_ref": "develop",
        "created_at": "Monday Mar 12, 2018 at 18:22 GMT",
        "updated_at": "Tuesday Mar 13, 2018 at 00:54 GMT",
        "closed_at": "Tuesday Mar 13, 2018 at 00:54 GMT",
        "merged_at": "Tuesday Mar 13, 2018 at 00:54 GMT"
    },
    {
        "key": "WT-3972",
        "number": 3978,
        "state": "closed",
        "title": "WT-3972 Allow more than 64K cursors on a single table.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 11, 2018 at 22:59 GMT",
        "updated_at": "Tuesday Mar 13, 2018 at 02:53 GMT",
        "closed_at": "Tuesday Mar 13, 2018 at 02:53 GMT",
        "merged_at": "Tuesday Mar 13, 2018 at 02:53 GMT"
    },
    {
        "key": "WT-3969",
        "number": 3977,
        "state": "closed",
        "title": "WT-3969 format tester bug fix and enhancement to account for prepare state",
        "body": "A set of changes to make format work with the new `WT_PREPARE_CONFLICT` error.",
        "base_ref": "develop",
        "created_at": "Saturday Mar 10, 2018 at 23:26 GMT",
        "updated_at": "Tuesday Mar 13, 2018 at 22:32 GMT",
        "closed_at": "Tuesday Mar 13, 2018 at 22:30 GMT",
        "merged_at": "Tuesday Mar 13, 2018 at 22:30 GMT"
    },
    {
        "key": "WT-3968",
        "number": 3976,
        "state": "closed",
        "title": "WT-3968 Use compression ratio to tune page sizes",
        "body": "@agorrod, for your consideration, I've written up some notes in the JIRA ticket.",
        "base_ref": "develop",
        "created_at": "Friday Mar 09, 2018 at 18:26 GMT",
        "updated_at": "Wednesday Aug 01, 2018 at 06:44 GMT",
        "closed_at": "Wednesday Aug 01, 2018 at 06:42 GMT",
        "merged_at": "Wednesday Aug 01, 2018 at 06:42 GMT"
    },
    {
        "key": "WT-3967",
        "number": 3975,
        "state": "closed",
        "title": "WT-3967 Fix a coding error that was causing cursor sweep not to run.",
        "body": "Also updated the long sweep test to correspond to the current sweep algorithm,\r\nwhich doesn't run as often.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 08, 2018 at 17:27 GMT",
        "updated_at": "Thursday Mar 08, 2018 at 20:42 GMT",
        "closed_at": "Thursday Mar 08, 2018 at 20:42 GMT",
        "merged_at": "Thursday Mar 08, 2018 at 20:42 GMT"
    },
    {
        "key": "WT-3938",
        "number": 3974,
        "state": "closed",
        "title": "WT-3938 Ignore the \"session_table_cache\" wiredtiger_open config.",
        "body": "This was added to support older versions of MongoDB but is no longer required because the per-session table cache has been replaced.  Making this change so that customers with this option enabled will have a seamless upgrade.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 08, 2018 at 03:12 GMT",
        "updated_at": "Thursday Mar 08, 2018 at 03:49 GMT",
        "closed_at": "Thursday Mar 08, 2018 at 03:49 GMT",
        "merged_at": "Thursday Mar 08, 2018 at 03:49 GMT"
    },
    {
        "key": "WT-3815",
        "number": 3973,
        "state": "closed",
        "title": "WT-3815 Performance changes and code simplification",
        "body": "Performance changes include:\r\n  - don't sweep for dead cursors too often\r\n  - handle a \"\" config string in open_cursor efficiently.\r\n  - cursors with checkpoint specified are not cached.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 08, 2018 at 01:23 GMT",
        "updated_at": "Thursday Mar 08, 2018 at 12:19 GMT",
        "closed_at": "Thursday Mar 08, 2018 at 12:19 GMT",
        "merged_at": "Thursday Mar 08, 2018 at 12:19 GMT"
    },
    {
        "key": "WT-3964",
        "number": 3972,
        "state": "closed",
        "title": "WT-3964 Stop wrapping schema operations in a transaction",
        "body": "It causes an issue with recovery after a hard crash.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 07, 2018 at 03:38 GMT",
        "updated_at": "Wednesday Mar 07, 2018 at 14:57 GMT",
        "closed_at": "Wednesday Mar 07, 2018 at 14:57 GMT",
        "merged_at": "Wednesday Mar 07, 2018 at 14:57 GMT"
    },
    {
        "key": "WT-3938",
        "number": 3971,
        "state": "closed",
        "title": "WT-3938 Allow the session table cache to be disabled.",
        "body": "Adds a new config to ::wiredtiger_open, \"session_table_cache\", which\r\ndefaults to true (maintaining existing behavior).  With\r\n\"session_table_cache=false\", table handles are only held open while in\r\nuse, reducing the memory associated with each session handle (at the\r\nexpense of additional work next time the table is accessed).",
        "base_ref": "mongodb-3.4",
        "created_at": "Wednesday Mar 07, 2018 at 02:56 GMT",
        "updated_at": "Thursday Mar 08, 2018 at 05:24 GMT",
        "closed_at": "Thursday Mar 08, 2018 at 02:52 GMT",
        "merged_at": "Thursday Mar 08, 2018 at 02:52 GMT"
    },
    {
        "key": "WT-3904",
        "number": 3970,
        "state": "closed",
        "title": "WT-3904 Allow log server thread to retry on permission error. (#3934) -- v3.4 backport",
        "body": "This is a v3.4 backport. There was a merge conflict while doing git cherry-pick. Solved the conflict by removing the definition of 2 local variables '**time_start**' and '**time_stop**', which seems not being used in v3.4 codebase. \r\n\r\n(cherry picked from commit f9541110bba7dea27adac2a0d083fb077de4d13f)",
        "base_ref": "mongodb-3.4",
        "created_at": "Wednesday Mar 07, 2018 at 01:40 GMT",
        "updated_at": "Friday Mar 16, 2018 at 03:43 GMT",
        "closed_at": "Thursday Mar 08, 2018 at 22:59 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3963",
        "number": 3969,
        "state": "closed",
        "title": "WT-3963 Add a schema-abort test.",
        "body": "Not ready for merge but for discussion and debugging.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 07, 2018 at 01:05 GMT",
        "updated_at": "Monday May 21, 2018 at 07:10 GMT",
        "closed_at": "Monday May 21, 2018 at 05:15 GMT",
        "merged_at": "Monday May 21, 2018 at 05:15 GMT"
    },
    {
        "key": "WT-3961",
        "number": 3968,
        "state": "closed",
        "title": "WT-3961 Subtract one from active timestamps for \"all_committed\".",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 06, 2018 at 21:54 GMT",
        "updated_at": "Wednesday Mar 07, 2018 at 00:26 GMT",
        "closed_at": "Wednesday Mar 07, 2018 at 00:26 GMT",
        "merged_at": "Wednesday Mar 07, 2018 at 00:26 GMT"
    },
    {
        "key": "WT-3942",
        "number": 3967,
        "state": "closed",
        "title": "WT-3942 Update test_compact02 to handle being halted by eviction pressure",
        "body": "@agorrod, I'm pushing a fix for this one so we don't have to keep triaging the failure.\r\n\r\nI don't see any evidence there's an underlying bug, it's just taking a very long time for eviction to finish in the small cache case, so I'm increasing the maximum timer from 1 minute to 5.",
        "base_ref": "develop",
        "created_at": "Monday Mar 05, 2018 at 11:50 GMT",
        "updated_at": "Monday Mar 05, 2018 at 22:28 GMT",
        "closed_at": "Monday Mar 05, 2018 at 22:28 GMT",
        "merged_at": "Monday Mar 05, 2018 at 22:28 GMT"
    },
    {
        "key": "WT-3954",
        "number": 3966,
        "state": "closed",
        "title": "WT-3954 prepared operations evicted before commit",
        "body": "@bvpvamsikrishna, @michaelcahill, for your review.\r\n\r\nCommit e4d9ad8 changes format so the oldest timestamp doesn't move past the prepared timestamp. That fix seems right to me, and seems to help, but I may not have it right, since it doesn't avoid the problem entirely (or maybe there's just another failure path I haven't found yet).\r\n\r\nCommit 694eeed changes `__wt_txn_rollback()` to allow aborted transactions, `__wt_txn_prepare` sets `WT_UPDATE_RESERVE` updates to aborted. With that change, commit fc4b42d changes format to prepare transactions that are then rolled back.\r\n\r\nCommit 6eb70e4 changes the prepare and rollback code to assert no updates are being prepared/rolled back from the lookaside file, and ignores all prepare/rollback updates from the metadata file.  I may have been a little too aggressive here: the original prepare code ignored metadata updates for the purposes of setting the prepare timestamp, but still set the update state to prepared. That looked wrong to me, but the change should be confirmed by one of you.\r\n\r\nEdit:\r\nCommit b18dc22 is on a separate commit because I'm suspicious I'm misunderstanding a visibility rule. Anyway, it seems to me like it's unsafe to do a type switch there because the update list can be truncated and freed (that's the whole point of switching the type), which means commit/rollback will update a freed WT_UPDATE.\r\n\r\nEdit:\r\nCommit 34bde21 changes prepare to not remove the transaction from the global table, which keeps eviction from discarding pages which include prepared (but not resolved), transactions.\r\n@bvpvamsikrishna, I'd suggest expanding where WT_UPDATE.state field is set so we can assert `__wt_free_update_list()` never frees a WT_UPDATE structure in an unresolved state.\r\n\r\nThat fixes the last problem I'm seeing, this branch is now passing my testing.",
        "base_ref": "develop",
        "created_at": "Saturday Mar 03, 2018 at 23:30 GMT",
        "updated_at": "Monday Mar 05, 2018 at 15:23 GMT",
        "closed_at": "Monday Mar 05, 2018 at 13:46 GMT",
        "merged_at": "Monday Mar 05, 2018 at 13:46 GMT"
    },
    {
        "key": "WT-3952",
        "number": 3965,
        "state": "closed",
        "title": "WT-3952 page-delete update list traversed after it has been discarded.",
        "body": "@michaelcahill, the changes in 2c697cd and c984903 are the only ones that should require careful review, the others are comment clarification and code shuffling to make it easier to make the fix.",
        "base_ref": "develop",
        "created_at": "Saturday Mar 03, 2018 at 18:49 GMT",
        "updated_at": "Monday Mar 26, 2018 at 05:47 GMT",
        "closed_at": "Monday Mar 05, 2018 at 06:13 GMT",
        "merged_at": "Monday Mar 05, 2018 at 06:13 GMT"
    },
    {
        "key": "WT-3953",
        "number": 3964,
        "state": "closed",
        "title": "WT-3953 test/format can attempt to set an illegal prepare timestamp",
        "body": "@sueloverso, I plan to merge this one once it passes PR testing to get our stress testing back on track.",
        "base_ref": "develop",
        "created_at": "Saturday Mar 03, 2018 at 18:02 GMT",
        "updated_at": "Saturday Mar 03, 2018 at 21:43 GMT",
        "closed_at": "Saturday Mar 03, 2018 at 21:43 GMT",
        "merged_at": "Saturday Mar 03, 2018 at 21:43 GMT"
    },
    {
        "key": "WT-3868",
        "number": 3963,
        "state": "closed",
        "title": "WT-3868 Bi-weekly WT codebase lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 02, 2018 at 17:56 GMT",
        "updated_at": "Friday Mar 16, 2018 at 18:34 GMT",
        "closed_at": "Saturday Mar 03, 2018 at 02:08 GMT",
        "merged_at": "Saturday Mar 03, 2018 at 02:08 GMT"
    },
    {
        "key": "WT-3949",
        "number": 3962,
        "state": "closed",
        "title": "WT-3949 WT_CURSOR::modify buffer overflow for string values.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 02, 2018 at 06:52 GMT",
        "updated_at": "Friday Mar 02, 2018 at 11:36 GMT",
        "closed_at": "Friday Mar 02, 2018 at 11:36 GMT",
        "merged_at": "Friday Mar 02, 2018 at 11:36 GMT"
    },
    {
        "key": "WT-3936",
        "number": 3961,
        "state": "closed",
        "title": "WT-3936 Add prepare testing to timestamp_abort and format.",
        "body": "Here are the changes to test prepare in both `test/format` and `timestamp_abort`. It required some slight gymnastics in `timestamp_abort` because of the assertion in the code that there are no logged records that are part of the transaction when we prepare. It also means we cannot test prepared transactions in `format` unless logging is turned off.\r\n\r\nPlease review.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 01, 2018 at 20:17 GMT",
        "updated_at": "Saturday Mar 03, 2018 at 01:48 GMT",
        "closed_at": "Saturday Mar 03, 2018 at 01:47 GMT",
        "merged_at": "Saturday Mar 03, 2018 at 01:47 GMT"
    },
    {
        "key": "WT-3935",
        "number": 3960,
        "state": "closed",
        "title": " WT-3935 Fix cursor pointers to btree memory after reopen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 01, 2018 at 04:53 GMT",
        "updated_at": "Thursday Mar 01, 2018 at 19:22 GMT",
        "closed_at": "Thursday Mar 01, 2018 at 19:22 GMT",
        "merged_at": "Thursday Mar 01, 2018 at 19:22 GMT"
    },
    {
        "key": "WT-3947",
        "number": 3959,
        "state": "closed",
        "title": "WT-3947 Added wiredtiger_open configuration 'cache_cursors' to disable cursor caching.",
        "body": "Added and improved tests that check cursor caching.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 28, 2018 at 19:43 GMT",
        "updated_at": "Thursday Mar 01, 2018 at 19:08 GMT",
        "closed_at": "Thursday Mar 01, 2018 at 19:07 GMT",
        "merged_at": "Thursday Mar 01, 2018 at 19:07 GMT"
    },
    {
        "key": "WT-3948",
        "number": 3958,
        "state": "closed",
        "title": "WT-3948 Clarify metadata apply loop, don't exit early on busy errors.",
        "body": "Here's a possible way to make this clearer, to invite discussion.  Open question as to whether an EBUSY is even possible. And if it is, is it safe to ignore?",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 28, 2018 at 17:48 GMT",
        "updated_at": "Friday Mar 02, 2018 at 21:15 GMT",
        "closed_at": "Friday Mar 02, 2018 at 21:15 GMT",
        "merged_at": "Friday Mar 02, 2018 at 21:15 GMT"
    },
    {
        "key": "WT-3946",
        "number": 3957,
        "state": "closed",
        "title": "WT-3946 Fix a truncate segfault resetting a NULL start cursor.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 28, 2018 at 06:43 GMT",
        "updated_at": "Wednesday Feb 28, 2018 at 06:44 GMT",
        "closed_at": "Wednesday Feb 28, 2018 at 06:44 GMT",
        "merged_at": "Wednesday Feb 28, 2018 at 06:44 GMT"
    },
    {
        "key": "WT-3945",
        "number": 3956,
        "state": "closed",
        "title": "WT-3945 Support libwiredtiger.so checking in s_export",
        "body": "Hi @keithbostic, it looks libwiredtiger.so has more symbols compared to libwiredtiger.a, and the old check() picked up below 5 symbols from libwiredtiger.so on Linux env, which I believe to be noise (instead of error).\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\nunexpected external symbols in the WiredTiger library\r\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\r\n__bss_start\r\n_edata\r\n_end\r\n_fini\r\n_init\r\n\r\nI know the solution is a bit overdosed by excluding \"^_\", thought it could auto-cover symbols we could potentially add in the future. But do let me know if you have concern so that I will change it by specifying the 5 symbols in the excluding list. ",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 28, 2018 at 05:21 GMT",
        "updated_at": "Friday Mar 16, 2018 at 03:45 GMT",
        "closed_at": "Thursday Mar 01, 2018 at 00:05 GMT",
        "merged_at": "Thursday Mar 01, 2018 at 00:05 GMT"
    },
    {
        "key": "WT-3911",
        "number": 3955,
        "state": "closed",
        "title": "WT-3911 Allow LRU eviction from dead trees.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 28, 2018 at 05:01 GMT",
        "updated_at": "Wednesday Feb 28, 2018 at 05:13 GMT",
        "closed_at": "Wednesday Feb 28, 2018 at 05:12 GMT",
        "merged_at": "Wednesday Feb 28, 2018 at 05:12 GMT"
    },
    {
        "key": "WT-3913",
        "number": 3954,
        "state": "closed",
        "title": "WT-3913 Enhance cursor operations to account for prepare",
        "body": "Read operations to return prepare conflict is still pending.\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 28, 2018 at 00:31 GMT",
        "updated_at": "Monday Mar 26, 2018 at 05:47 GMT",
        "closed_at": "Monday Mar 12, 2018 at 21:36 GMT",
        "merged_at": "Monday Mar 12, 2018 at 21:36 GMT"
    },
    {
        "key": "WT-3935",
        "number": 3953,
        "state": "closed",
        "title": "WT-3935 Enable cursor caching by default",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 27, 2018 at 21:38 GMT",
        "updated_at": "Wednesday Feb 28, 2018 at 05:10 GMT",
        "closed_at": "Wednesday Feb 28, 2018 at 05:10 GMT",
        "merged_at": "Wednesday Feb 28, 2018 at 05:10 GMT"
    },
    {
        "key": "WT-3935",
        "number": 3952,
        "state": "closed",
        "title": "Revert \"WT-3935 Enable cursor caching by default, add additional tests\"",
        "body": "Reverts wiredtiger/wiredtiger#3946",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 27, 2018 at 21:35 GMT",
        "updated_at": "Friday Mar 02, 2018 at 05:58 GMT",
        "closed_at": "Tuesday Feb 27, 2018 at 21:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3940",
        "number": 3951,
        "state": "closed",
        "title": "WT-3940 Enhance libwiredtiger file checking in s_export",
        "body": "Hi @keithbostic, since @michaelcahill mentioned adding support to macOS, so I just enhanced the lib file checking by incorporate all 3 file extensions - .a / .so / .dylib (macOS). If none of the files is found then print the message. ",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 27, 2018 at 07:04 GMT",
        "updated_at": "Friday Mar 16, 2018 at 03:45 GMT",
        "closed_at": "Tuesday Feb 27, 2018 at 11:43 GMT",
        "merged_at": "Tuesday Feb 27, 2018 at 11:43 GMT"
    },
    {
        "key": "WT-3913",
        "number": 3950,
        "state": "closed",
        "title": "WT-3913 Enhance cursor operations to account for prepare : WIP",
        "body": "Work in progress.\r\nModify to return WT_ROLLBACK error for updated operations when encounter a prepared updated.",
        "base_ref": "develop",
        "created_at": "Monday Feb 26, 2018 at 21:57 GMT",
        "updated_at": "Wednesday Feb 28, 2018 at 00:27 GMT",
        "closed_at": "Wednesday Feb 28, 2018 at 00:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3919",
        "number": 3949,
        "state": "closed",
        "title": "WT-3919 Add Python test cases for cursor cache sweep.",
        "body": "",
        "base_ref": "wt-3935-cursor-cache-enable",
        "created_at": "Monday Feb 26, 2018 at 20:36 GMT",
        "updated_at": "Monday Feb 26, 2018 at 23:19 GMT",
        "closed_at": "Monday Feb 26, 2018 at 23:19 GMT",
        "merged_at": "Monday Feb 26, 2018 at 23:19 GMT"
    },
    {
        "key": "WT-3934",
        "number": 3948,
        "state": "closed",
        "title": "WT-3934 LSM chunk checkpoints can race with system checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 26, 2018 at 13:29 GMT",
        "updated_at": "Tuesday Feb 27, 2018 at 05:47 GMT",
        "closed_at": "Tuesday Feb 27, 2018 at 04:27 GMT",
        "merged_at": "Tuesday Feb 27, 2018 at 04:27 GMT"
    },
    {
        "key": "WT-3939",
        "number": 3947,
        "state": "closed",
        "title": "WT-3939 test_txn14.test_txn14.test_log_flush timeout",
        "body": "Increase the timeout to 30 seconds, it's been periodically failing on the PPC at 10 seconds.",
        "base_ref": "develop",
        "created_at": "Monday Feb 26, 2018 at 11:59 GMT",
        "updated_at": "Monday Feb 26, 2018 at 22:43 GMT",
        "closed_at": "Monday Feb 26, 2018 at 22:43 GMT",
        "merged_at": "Monday Feb 26, 2018 at 22:43 GMT"
    },
    {
        "key": "WT-3935",
        "number": 3946,
        "state": "closed",
        "title": "WT-3935 Enable cursor caching by default, add additional tests",
        "body": "Enabling this exposed a bug which is also fixed: cursors with owners should not be eligible for caching.\r\nModified cursor cache test to expect caching by default, and removed\r\nsome scenarios that use complex datasets, they won't work.",
        "base_ref": "develop",
        "created_at": "Sunday Feb 25, 2018 at 21:03 GMT",
        "updated_at": "Tuesday Feb 27, 2018 at 21:37 GMT",
        "closed_at": "Tuesday Feb 27, 2018 at 05:46 GMT",
        "merged_at": "Tuesday Feb 27, 2018 at 05:46 GMT"
    },
    {
        "key": "WT-3911",
        "number": 3945,
        "state": "closed",
        "title": "WT-3911 Ignore lookaside data on shutdown",
        "body": "@michaelcahill, I'm not terribly happy with this, but it's the simplest solution I found.\r\n\r\nEverything else I tried (mostly, trying to find a cleaner restructuring of `conn_dhandle.c` functions), got ugly fast, so I ended up looking at the `closing` flag at a relatively low level.",
        "base_ref": "develop",
        "created_at": "Saturday Feb 24, 2018 at 20:18 GMT",
        "updated_at": "Tuesday Feb 27, 2018 at 04:35 GMT",
        "closed_at": "Tuesday Feb 27, 2018 at 04:35 GMT",
        "merged_at": "Tuesday Feb 27, 2018 at 04:35 GMT"
    },
    {
        "key": "WT-3933",
        "number": 3944,
        "state": "closed",
        "title": "WT-3933 test/format failure illegal WT_REF.state rolling back deleted page",
        "body": "@michaelcahill, setting `WT_REF.page_del.txnid` to `WT_TXN_ABORTED` allows the page to be evicted and the `WT_REF.page_del` structure to be discarded.\r\n\r\nSo, making that change before marking the updates are aborted means we can drop core accessing the updates, making the change after we swap in the WT_REF's previous state means we can drop core getting to the `WT_REF.page_del.txnid` field.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 22, 2018 at 20:21 GMT",
        "updated_at": "Friday Feb 23, 2018 at 12:36 GMT",
        "closed_at": "Friday Feb 23, 2018 at 12:34 GMT",
        "merged_at": "Friday Feb 23, 2018 at 12:34 GMT"
    },
    {
        "key": "WT-3932",
        "number": 3943,
        "state": "closed",
        "title": "WT-3932 Move hash tables out of session handles.",
        "body": "In 043f61e, we embedded hash tables for cursors and data handles directly in the WT_SESSION_IMPL structure.  That is problematic because we allocate all configured session handles in a single block of memory on startup, and the hash tables grew the structre from just over 1KB to ~18KB.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 22, 2018 at 05:47 GMT",
        "updated_at": "Thursday Feb 22, 2018 at 18:41 GMT",
        "closed_at": "Thursday Feb 22, 2018 at 18:41 GMT",
        "merged_at": "Thursday Feb 22, 2018 at 18:41 GMT"
    },
    {
        "key": "WT-3930",
        "number": 3942,
        "state": "closed",
        "title": "WT-3930 Set the recovery timestamp at the end of recovery.",
        "body": "We need to set it no matter if recovery actually ran or not.\r\n@agorrod Please review. It is a fix for a bug @dgottlieb discovered where the recovery timestamp information was not set if `wt` was run in between. ",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 21, 2018 at 21:40 GMT",
        "updated_at": "Monday Mar 05, 2018 at 22:31 GMT",
        "closed_at": "Monday Mar 05, 2018 at 22:31 GMT",
        "merged_at": "Monday Mar 05, 2018 at 22:31 GMT"
    },
    {
        "key": "WT-3927",
        "number": 3941,
        "state": "closed",
        "title": "WT-3927 LSM truncate operations are too slow.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 21, 2018 at 17:15 GMT",
        "updated_at": "Wednesday Feb 21, 2018 at 21:12 GMT",
        "closed_at": "Wednesday Feb 21, 2018 at 21:12 GMT",
        "merged_at": "Wednesday Feb 21, 2018 at 21:12 GMT"
    },
    {
        "key": "WT-3906",
        "number": 3940,
        "state": "closed",
        "title": "WT-3906 Add config API to connection close for checkpoint.",
        "body": "Not ready for merge. Add API and new test for forcing the checkpoint on connection close to write to the stable timestamp or to write out all dirty data.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 21, 2018 at 16:06 GMT",
        "updated_at": "Tuesday Feb 27, 2018 at 18:54 GMT",
        "closed_at": "Tuesday Feb 27, 2018 at 18:54 GMT",
        "merged_at": "Tuesday Feb 27, 2018 at 18:54 GMT"
    },
    {
        "key": "WT-3926",
        "number": 3939,
        "state": "closed",
        "title": "WT-3926 Allow read_timestamp to be set after begin_transaction.",
        "body": "Decoupling these means setting a read_timestamp will not be blocked due to a full cache, so is reasonable to do while holding an application lock (which may be necessary to allocate a valid timestamp).",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 21, 2018 at 02:32 GMT",
        "updated_at": "Friday Feb 23, 2018 at 05:54 GMT",
        "closed_at": "Friday Feb 23, 2018 at 05:54 GMT",
        "merged_at": "Friday Feb 23, 2018 at 05:54 GMT"
    },
    {
        "key": "WT-3829",
        "number": 3938,
        "state": "closed",
        "title": "WT-3829 All metadata reads should be at read-uncommitted isolation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 21, 2018 at 01:10 GMT",
        "updated_at": "Wednesday Feb 21, 2018 at 03:03 GMT",
        "closed_at": "Wednesday Feb 21, 2018 at 03:03 GMT",
        "merged_at": "Wednesday Feb 21, 2018 at 03:03 GMT"
    },
    {
        "key": "WT-3925",
        "number": 3937,
        "state": "closed",
        "title": "WT-3925 format: salvage dump comparison failure",
        "body": "@agorrod, I introduced a bug in the last set of format changes, the result is we're doing almost nothing other than remove operations in our format runs.\r\n\r\nI'd like to push this as soon as we can, and then I'll watch format testing overnight.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 20, 2018 at 22:58 GMT",
        "updated_at": "Wednesday Feb 21, 2018 at 00:31 GMT",
        "closed_at": "Wednesday Feb 21, 2018 at 00:31 GMT",
        "merged_at": "Wednesday Feb 21, 2018 at 00:31 GMT"
    },
    {
        "key": "WT-3923",
        "number": 3936,
        "state": "closed",
        "title": "WT-3923 __wt_txn_context_prepare_check() requires API initialization",
        "body": "@agorrod, I noticed some functions were calling `__wt_txn_context_prepare_check()` explicitly (probably because they didn't call `API_XXX` macros?).\r\n\r\nAnyway, that won't work because `__wt_txn_context_prepare_check()` uses `WT_SESSION.name`.\r\n\r\nI added `API_XXX` macros in a few places, I don't see any reason that's not safe.",
        "base_ref": "develop",
        "created_at": "Monday Feb 19, 2018 at 15:02 GMT",
        "updated_at": "Tuesday Feb 20, 2018 at 03:57 GMT",
        "closed_at": "Tuesday Feb 20, 2018 at 03:57 GMT",
        "merged_at": "Tuesday Feb 20, 2018 at 03:57 GMT"
    },
    {
        "key": "WT-3919",
        "number": 3935,
        "state": "closed",
        "title": "WT-3919 Add Python test cases for cursor cache sweep.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 19, 2018 at 04:07 GMT",
        "updated_at": "Monday Feb 26, 2018 at 23:20 GMT",
        "closed_at": "Monday Feb 26, 2018 at 23:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3904",
        "number": 3934,
        "state": "closed",
        "title": "WT-3904 Allow log server thread to retry on permission error.",
        "body": "@agorrod Here is the small change to allow the log server thread to retry on a permission error. We record a message and retry up to 10 times. We reset if it soon succeeds and it if doesn't we will eventually panic. Please review. ",
        "base_ref": "develop",
        "created_at": "Saturday Feb 17, 2018 at 01:04 GMT",
        "updated_at": "Monday Feb 19, 2018 at 05:25 GMT",
        "closed_at": "Monday Feb 19, 2018 at 05:25 GMT",
        "merged_at": "Monday Feb 19, 2018 at 05:25 GMT"
    },
    {
        "key": "WT-3919",
        "number": 3933,
        "state": "closed",
        "title": "WT-3919 Added cursor sweep tests",
        "body": "Needed to rework the test substantially.",
        "base_ref": "wt-1228-cursor-cache",
        "created_at": "Friday Feb 16, 2018 at 20:19 GMT",
        "updated_at": "Monday Feb 19, 2018 at 04:09 GMT",
        "closed_at": "Monday Feb 19, 2018 at 04:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3867",
        "number": 3932,
        "state": "closed",
        "title": " WT-3867 Bi-weekly WT codebase lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 16, 2018 at 19:36 GMT",
        "updated_at": "Monday Feb 19, 2018 at 05:29 GMT",
        "closed_at": "Monday Feb 19, 2018 at 05:29 GMT",
        "merged_at": "Monday Feb 19, 2018 at 05:29 GMT"
    },
    {
        "key": "WT-3850",
        "number": 3931,
        "state": "closed",
        "title": "WT-3850 Implement WT_SESSION::prepare_transaction",
        "body": "Raising this pull request for intermediate reviews, not ready for merge.\r\nThe changes are to implement and update the below functions to support prepared transactions. \r\nprepare_transaction\r\ncommit_transaction\r\nrollback_transaction\r\n\r\nRead / Update operation support of prepared transactions in not part of this ticket.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 15, 2018 at 23:56 GMT",
        "updated_at": "Wednesday Feb 21, 2018 at 21:15 GMT",
        "closed_at": "Wednesday Feb 21, 2018 at 10:55 GMT",
        "merged_at": "Wednesday Feb 21, 2018 at 10:55 GMT"
    },
    {
        "key": "WT-3905",
        "number": 3930,
        "state": "closed",
        "title": "WT-3905 Save the checkpoint timestamp in metadata. Use it in tests.",
        "body": "@michaelcahill Here are the changes to store the timestamp that checkpoint is using in the metadata. @agorrod for your review also. And @dgottlieb mostly FYI for API usage. Some considerations:\r\n1. I write a `checkpoint_stable` record into the metadata. This is written for all file records, not just the record in the turtle file.  The record in the turtle file is the only one used to store the timestamp on restart.  I did this for a couple reasons:\r\n- It allows us to see timestamps in other metadata records in a `wt list -v` that may give helpful information in debugging.\r\n- It allows us to extend querying the recovery timestamp in the future to an individual table if we ever wanted.\r\n2. I named it `query_timestamp(\"get=recovery\")`.\r\n3. One benefit of this is that it allowed me to use it in the `timestamp_abort` test with better accuracy on the verification side and removal of an entire table and a bunch of code.\r\n4. Currently, until WT-3906 is complete, this only works on an unclean shutdown. The APIs work and information is correct but the data after restart from a clean shutdown in a collection-like table will not (yet) be as of the stable. The testing will be extended when I do that ticket.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 14, 2018 at 18:02 GMT",
        "updated_at": "Thursday Feb 15, 2018 at 21:05 GMT",
        "closed_at": "Thursday Feb 15, 2018 at 21:04 GMT",
        "merged_at": "Thursday Feb 15, 2018 at 21:04 GMT"
    },
    {
        "key": "WT-3912",
        "number": 3929,
        "state": "closed",
        "title": "WT-3912 reading a truncated page must set timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 14, 2018 at 17:12 GMT",
        "updated_at": "Tuesday Feb 20, 2018 at 05:34 GMT",
        "closed_at": "Tuesday Feb 20, 2018 at 05:34 GMT",
        "merged_at": "Tuesday Feb 20, 2018 at 05:34 GMT"
    },
    {
        "key": "WT-3805",
        "number": 3928,
        "state": "closed",
        "title": "WT-3805 Avoid reading lookaside pages in truncate fast path",
        "body": "",
        "base_ref": "wt-3909-format-truncate",
        "created_at": "Tuesday Feb 13, 2018 at 00:20 GMT",
        "updated_at": "Monday Feb 19, 2018 at 23:20 GMT",
        "closed_at": "Monday Feb 19, 2018 at 06:15 GMT",
        "merged_at": "Monday Feb 19, 2018 at 06:15 GMT"
    },
    {
        "key": "WT-3912",
        "number": 3927,
        "state": "closed",
        "title": "WT-3912 fast-delete pages should re-instantiate the delete transaction's timestamp.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 12, 2018 at 23:29 GMT",
        "updated_at": "Tuesday Feb 13, 2018 at 20:19 GMT",
        "closed_at": "Tuesday Feb 13, 2018 at 09:38 GMT",
        "merged_at": "Tuesday Feb 13, 2018 at 09:38 GMT"
    },
    {
        "key": "WT-3805",
        "number": 3926,
        "state": "closed",
        "title": "WT-3805 Avoid reading lookaside pages in truncate fast path.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 11, 2018 at 20:55 GMT",
        "updated_at": "Tuesday Feb 20, 2018 at 05:53 GMT",
        "closed_at": "Tuesday Feb 20, 2018 at 05:53 GMT",
        "merged_at": "Tuesday Feb 20, 2018 at 05:53 GMT"
    },
    {
        "key": "WT-3901",
        "number": 3925,
        "state": "closed",
        "title": "WT-3901 Fixed the log corruption bug.",
        "body": "Flushing the operation tracking memory buffer to the file works as follows:\r\n1. We remember the old value of the file offset.\r\n2. We flush the buffer, opening the file if it has not been open yet.\r\n3. We add the return value to the remembered offset.\r\n\r\nThe problem occurs in the situation when we flush to a file that has not been open yet. Here is what happens:\r\n1. We remember the old value. It is 0, because the file has not been opened yet.\r\n2. As we flush the buffer, the file is opened. BUT: opening the file writes some metadata to it and advances the offset to 12. We flush the buffer at offset 12. We return the number of bytes flushed.\r\nUpon return we should add the number of bytes flushed to 12, the previous offset, but:\r\n\r\n3. We add the returned value (number of bytes flushed) to the remembered offset, which was 0!\r\nSo the offset is now incorrect. Next time we flush the buffer, we corrupt the data.\r\n\r\nThis fix avoids remembering the old offset value (step 1). It calls the flush function, remembers the number of flushed bytes it returns, then in step 3 it gets the fresh value of the offset and adds to it the returned bytes. ",
        "base_ref": "develop",
        "created_at": "Thursday Feb 08, 2018 at 02:51 GMT",
        "updated_at": "Friday Feb 09, 2018 at 18:27 GMT",
        "closed_at": "Friday Feb 09, 2018 at 18:27 GMT",
        "merged_at": "Friday Feb 09, 2018 at 18:27 GMT"
    },
    {
        "key": "WT-3866",
        "number": 3924,
        "state": "closed",
        "title": "WT-3866 Bi-weekly WT codebase lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 07, 2018 at 18:02 GMT",
        "updated_at": "Wednesday Feb 07, 2018 at 18:24 GMT",
        "closed_at": "Wednesday Feb 07, 2018 at 18:24 GMT",
        "merged_at": "Wednesday Feb 07, 2018 at 18:24 GMT"
    },
    {
        "key": "WT-3895",
        "number": 3923,
        "state": "closed",
        "title": "WT-3895 Fixes to manage the timestamp queue.",
        "body": "@agorrod There are fixes for the commit timestamp queue bugs that the mongodb tests found. First we need to modify the `first_commit_timestamp` under the lock and later than it was before. Also we want to remove ourselves from the queue first because our timestamp may be smaller than it was last time and we could end up with a list loop. The alternative would have been to walk the entire queue removing all to-be-cleared transactions from the list but we want to minimize the walks.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 07, 2018 at 14:16 GMT",
        "updated_at": "Wednesday Feb 07, 2018 at 16:27 GMT",
        "closed_at": "Wednesday Feb 07, 2018 at 16:27 GMT",
        "merged_at": "Wednesday Feb 07, 2018 at 16:27 GMT"
    },
    {
        "key": "WT-0000",
        "number": 3922,
        "state": "closed",
        "title": "WT-0000 Test pull requests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 07, 2018 at 00:38 GMT",
        "updated_at": "Wednesday Feb 07, 2018 at 01:09 GMT",
        "closed_at": "Wednesday Feb 07, 2018 at 01:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3889",
        "number": 3921,
        "state": "closed",
        "title": "WT-3889 format key-order return failure in LSM",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 06, 2018 at 15:41 GMT",
        "updated_at": "Tuesday Feb 06, 2018 at 18:32 GMT",
        "closed_at": "Tuesday Feb 06, 2018 at 18:32 GMT",
        "merged_at": "Tuesday Feb 06, 2018 at 18:32 GMT"
    },
    {
        "key": "WT-3891",
        "number": 3920,
        "state": "closed",
        "title": "WT-3891 Take the sweep walk rwlock whenever removing content from lookaside",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 05, 2018 at 20:16 GMT",
        "updated_at": "Tuesday Feb 06, 2018 at 15:21 GMT",
        "closed_at": "Tuesday Feb 06, 2018 at 15:21 GMT",
        "merged_at": "Tuesday Feb 06, 2018 at 15:21 GMT"
    },
    {
        "key": "WT-3891",
        "number": 3919,
        "state": "closed",
        "title": "WT-3891 A couple more places needing the sweep walk rwlock.",
        "body": "@michaelcahill my run hit a place where I needed to also use the sweepwalk rwlock. @agorrod I also added it to the rollback to stable code. While in there, I noticed that the entry count is not being updated after the removal like it is in all the other remove loops. I fixed that. Please let me know if my change is not correct.",
        "base_ref": "develop",
        "created_at": "Friday Feb 02, 2018 at 21:47 GMT",
        "updated_at": "Friday Feb 02, 2018 at 23:13 GMT",
        "closed_at": "Friday Feb 02, 2018 at 23:13 GMT",
        "merged_at": "Friday Feb 02, 2018 at 23:13 GMT"
    },
    {
        "key": "WT-3866",
        "number": 3918,
        "state": "closed",
        "title": "WT-3866 Bi-weekly WT codebase lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 02, 2018 at 13:55 GMT",
        "updated_at": "Monday Feb 05, 2018 at 23:16 GMT",
        "closed_at": "Monday Feb 05, 2018 at 23:15 GMT",
        "merged_at": "Monday Feb 05, 2018 at 23:15 GMT"
    },
    {
        "key": null,
        "number": 3917,
        "state": "closed",
        "title": "test evergreen integration, please ignore",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 01, 2018 at 19:16 GMT",
        "updated_at": "Thursday Feb 01, 2018 at 19:17 GMT",
        "closed_at": "Thursday Feb 01, 2018 at 19:17 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 3916,
        "state": "closed",
        "title": "test evergreen integration, please ignore",
        "body": "",
        "base_ref": "master",
        "created_at": "Thursday Feb 01, 2018 at 19:11 GMT",
        "updated_at": "Thursday Feb 01, 2018 at 19:17 GMT",
        "closed_at": "Thursday Feb 01, 2018 at 19:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3888",
        "number": 3915,
        "state": "closed",
        "title": "WT-3888 cursor search-near can return the wrong value for \"exact\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 01, 2018 at 17:04 GMT",
        "updated_at": "Friday Feb 02, 2018 at 01:47 GMT",
        "closed_at": "Friday Feb 02, 2018 at 01:47 GMT",
        "merged_at": "Friday Feb 02, 2018 at 01:47 GMT"
    },
    {
        "key": "WT-3890",
        "number": 3914,
        "state": "closed",
        "title": "WT-3890 Clear the flag after removal and add a write barrier.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 01, 2018 at 16:12 GMT",
        "updated_at": "Thursday Feb 01, 2018 at 18:42 GMT",
        "closed_at": "Thursday Feb 01, 2018 at 18:42 GMT",
        "merged_at": "Thursday Feb 01, 2018 at 18:42 GMT"
    },
    {
        "key": "WT-3881",
        "number": 3913,
        "state": "closed",
        "title": "WT-3881 Add more test cases and complete checking on commit timestamp.",
        "body": "@agorrod and @dgottlieb one more time! ",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 31, 2018 at 21:25 GMT",
        "updated_at": "Thursday Feb 01, 2018 at 03:39 GMT",
        "closed_at": "Thursday Feb 01, 2018 at 03:39 GMT",
        "merged_at": "Thursday Feb 01, 2018 at 03:39 GMT"
    },
    {
        "key": "WT-3887",
        "number": 3912,
        "state": "closed",
        "title": "WT-3887 log operations in format snapshot-isolation tracking",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 31, 2018 at 15:00 GMT",
        "updated_at": "Wednesday Jan 31, 2018 at 16:20 GMT",
        "closed_at": "Wednesday Jan 31, 2018 at 16:20 GMT",
        "merged_at": "Wednesday Jan 31, 2018 at 16:20 GMT"
    },
    {
        "key": "WT-3848",
        "number": 3911,
        "state": "closed",
        "title": "WT-3848 enhance post conditions of prepared transactions",
        "body": "WIP : For review of approach. In this approach we return error, if transaction state is prepared, we will add this check in all possible API's which should not be supported after a prepare-transaction call.\r\nTo enhance post conditions of prepared transactions to check validity of operation invoked.\r\nOnly session level API's are modified.\r\nCursor level API's are not updated to return error yet.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 30, 2018 at 04:41 GMT",
        "updated_at": "Monday Feb 19, 2018 at 06:57 GMT",
        "closed_at": "Monday Feb 19, 2018 at 03:18 GMT",
        "merged_at": "Monday Feb 19, 2018 at 03:18 GMT"
    },
    {
        "key": "WT-3848",
        "number": 3910,
        "state": "closed",
        "title": "WT-3848 enhance post conditions of prepared transactions(approach-1)",
        "body": "WIP : For review of approach. In this approach, we change the function pointers of API such that the new functions will return error, and we reset the pointers back to original form in commit / rollback.\r\nTo enhance post conditions of prepared transactions to check validity of operation invoked.\r\nOnly session level API's are modified.\r\nCursor level API's are not updated to return error yet.",
        "base_ref": "wt-3847-add-stub-api-prepare-transaction",
        "created_at": "Tuesday Jan 30, 2018 at 04:21 GMT",
        "updated_at": "Monday Feb 19, 2018 at 06:17 GMT",
        "closed_at": "Tuesday Feb 06, 2018 at 05:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3881",
        "number": 3909,
        "state": "closed",
        "title": "WT-3881 Skip validating update structures from this txn.",
        "body": "@agorrod and @dgottlieb here's a PR that solves an issue Dan saw over the weekend when the commit timestamp is set in the middle or the end of the transaction, the new validate code was comparing against updates from earlier in the transaction. I modified the validation to skip updates from its own transaction. The code does not set the timestamp in the update structures until much later in the commit process, long past the time where we're allowed to error. So we need to skip them.",
        "base_ref": "develop",
        "created_at": "Monday Jan 29, 2018 at 19:49 GMT",
        "updated_at": "Tuesday Jan 30, 2018 at 15:44 GMT",
        "closed_at": "Tuesday Jan 30, 2018 at 15:44 GMT",
        "merged_at": "Tuesday Jan 30, 2018 at 15:44 GMT"
    },
    {
        "key": "WT-3877",
        "number": 3908,
        "state": "closed",
        "title": "WT-3877 WT_CONN_EVICTION_NO_LOOKASIDE is cleared unconditionally",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 29, 2018 at 12:02 GMT",
        "updated_at": "Wednesday Jan 31, 2018 at 03:20 GMT",
        "closed_at": "Wednesday Jan 31, 2018 at 03:20 GMT",
        "merged_at": "Wednesday Jan 31, 2018 at 03:20 GMT"
    },
    {
        "key": "db-3",
        "number": 3907,
        "state": "closed",
        "title": "test only: mongodb-3.6 bump to mongodb-3.8",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Sunday Jan 28, 2018 at 23:34 GMT",
        "updated_at": "Monday Jan 29, 2018 at 00:20 GMT",
        "closed_at": "Monday Jan 29, 2018 at 00:20 GMT",
        "merged_at": "Monday Jan 29, 2018 at 00:20 GMT"
    },
    {
        "key": "WT-3878",
        "number": 3906,
        "state": "closed",
        "title": "WT-3878 Iteration can lose its position when updating a limbo page",
        "body": "@agorrod, @michaelcahill, the changes in this branch (so far) are only changes to `format` to validate that cursor next/prev always returns keys in order after an operation that positions the cursor. With these testing changes, the configurations associated with WT-3766 testing will fail.",
        "base_ref": "develop",
        "created_at": "Friday Jan 26, 2018 at 23:57 GMT",
        "updated_at": "Wednesday Jan 31, 2018 at 06:05 GMT",
        "closed_at": "Wednesday Jan 31, 2018 at 06:05 GMT",
        "merged_at": "Wednesday Jan 31, 2018 at 06:05 GMT"
    },
    {
        "key": "WT-3766",
        "number": 3905,
        "state": "closed",
        "title": "WT-3766 Remove LAS entries if they're visible and no longer needed.",
        "body": "@sueloverso, here's my review comments in more tangible form -- feel free to discard this branch without further discussion.",
        "base_ref": "wt-3766-las-sweep",
        "created_at": "Thursday Jan 25, 2018 at 13:58 GMT",
        "updated_at": "Thursday Jan 25, 2018 at 14:26 GMT",
        "closed_at": "Thursday Jan 25, 2018 at 14:26 GMT",
        "merged_at": "Thursday Jan 25, 2018 at 14:26 GMT"
    },
    {
        "key": "WT-3875",
        "number": 3904,
        "state": "closed",
        "title": "WT-3875 Collisions in operation tracking map file when a connection is reopened within the same process.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 25, 2018 at 12:35 GMT",
        "updated_at": "Thursday Jan 25, 2018 at 14:00 GMT",
        "closed_at": "Thursday Jan 25, 2018 at 14:00 GMT",
        "merged_at": "Thursday Jan 25, 2018 at 14:00 GMT"
    },
    {
        "key": "WT-3876",
        "number": 3903,
        "state": "closed",
        "title": "WT-3876 Added missing operation tracking macros. Those missing macros resulte\u2026",
        "body": "\u2026d in inaccurate log files. Added a version of WT_RET macro that tracks the exit from the function before returning.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 25, 2018 at 02:37 GMT",
        "updated_at": "Thursday Jan 25, 2018 at 13:59 GMT",
        "closed_at": "Thursday Jan 25, 2018 at 13:58 GMT",
        "merged_at": "Thursday Jan 25, 2018 at 13:58 GMT"
    },
    {
        "key": "WT-3840",
        "number": 3902,
        "state": "closed",
        "title": "WT-3840 Dump more information on data corruption in diagnostic mode",
        "body": "@agorrod, I ended up increasing the stack buffer size from 2KB to 4KB, and I added an error complaint, if we truncate a message we should notice it.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 25, 2018 at 01:22 GMT",
        "updated_at": "Wednesday Jan 31, 2018 at 16:27 GMT",
        "closed_at": "Wednesday Jan 31, 2018 at 16:26 GMT",
        "merged_at": "Wednesday Jan 31, 2018 at 16:26 GMT"
    },
    {
        "key": "WT-3854",
        "number": 3901,
        "state": "closed",
        "title": "WT-3854 Remove write lock from commit path leaving old entries in queue.",
        "body": "Not quite fully tested or ready for merge.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 24, 2018 at 22:00 GMT",
        "updated_at": "Wednesday Jan 31, 2018 at 23:46 GMT",
        "closed_at": "Wednesday Jan 31, 2018 at 23:46 GMT",
        "merged_at": "Wednesday Jan 31, 2018 at 23:46 GMT"
    },
    {
        "key": "WT-3863",
        "number": 3900,
        "state": "closed",
        "title": "WT-3863 Use the tsc/nanosecond ratio when parsing the operation tracking files.",
        "body": "This way, we show the time units in nanoseconds, not in clock cycles.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 24, 2018 at 20:59 GMT",
        "updated_at": "Thursday Jan 25, 2018 at 02:46 GMT",
        "closed_at": "Thursday Jan 25, 2018 at 02:46 GMT",
        "merged_at": "Thursday Jan 25, 2018 at 02:46 GMT"
    },
    {
        "key": "WT-3852",
        "number": 3899,
        "state": "closed",
        "title": "WT-3852 Add per-key timestamp validation checking as an option to assert()",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 24, 2018 at 18:58 GMT",
        "updated_at": "Thursday Jan 25, 2018 at 02:44 GMT",
        "closed_at": "Thursday Jan 25, 2018 at 02:44 GMT",
        "merged_at": "Thursday Jan 25, 2018 at 02:44 GMT"
    },
    {
        "key": "WT-3874",
        "number": 3898,
        "state": "closed",
        "title": "WT-3874 Use the custom collator for diagnostic verification of keys",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 23, 2018 at 20:30 GMT",
        "updated_at": "Wednesday Jan 24, 2018 at 00:37 GMT",
        "closed_at": "Wednesday Jan 24, 2018 at 00:37 GMT",
        "merged_at": "Wednesday Jan 24, 2018 at 00:37 GMT"
    },
    {
        "key": "WT-3766",
        "number": 3897,
        "state": "closed",
        "title": "WT-3766 Remove LAS entries if they're visible and no longer needed.",
        "body": "@keithbostic and @michaelcahill  here's the code version of our discussion. I don't know if we have a solid test to know we're taking this path. It passes the python LAS test and normal tests.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 23, 2018 at 17:09 GMT",
        "updated_at": "Friday Feb 02, 2018 at 20:58 GMT",
        "closed_at": "Friday Feb 02, 2018 at 20:58 GMT",
        "merged_at": "Friday Feb 02, 2018 at 20:58 GMT"
    },
    {
        "key": "WT-3871",
        "number": 3896,
        "state": "closed",
        "title": "WT-3871 format should read from a timestamp",
        "body": "@michaelcahill, in thinking about the upcoming work in WT-3766 and WT-3805, I thought it would be useful to explicitly read from a timestamp and verify we're seeing the record we expect to see.",
        "base_ref": "develop",
        "created_at": "Monday Jan 22, 2018 at 21:13 GMT",
        "updated_at": "Thursday Jan 25, 2018 at 02:53 GMT",
        "closed_at": "Thursday Jan 25, 2018 at 02:53 GMT",
        "merged_at": "Thursday Jan 25, 2018 at 02:53 GMT"
    },
    {
        "key": "WT-3865",
        "number": 3895,
        "state": "closed",
        "title": "WT-3865 avoid cache misses in WiredTiger tree-walk and hazard functions",
        "body": "WT_REF.state is a volatile, avoid pounding on memory in the heavily-used tree-walk and hazard pointer functions.\r\n\r\n@michaelcahill, feel free to discard this branch without further discussion if you don't think it's worth doing. (I made a note to myself based on some debugging in WT-3767 to review if WT_REF.state should really be declared non-volatile -- after reviewing that today, I think it's better being volatile, but we are forcing a bunch of cache misses in some heavily-used code.)",
        "base_ref": "develop",
        "created_at": "Monday Jan 22, 2018 at 14:38 GMT",
        "updated_at": "Wednesday Jan 24, 2018 at 21:14 GMT",
        "closed_at": "Wednesday Jan 24, 2018 at 21:14 GMT",
        "merged_at": "Wednesday Jan 24, 2018 at 21:14 GMT"
    },
    {
        "key": "WT-3862",
        "number": 3894,
        "state": "closed",
        "title": "WT-3862 Remove invalid diagnostic assertion during reconciliation",
        "body": "Remove invalid diagnostic assertion.",
        "base_ref": "develop",
        "created_at": "Monday Jan 22, 2018 at 12:12 GMT",
        "updated_at": "Tuesday Jan 23, 2018 at 05:23 GMT",
        "closed_at": "Tuesday Jan 23, 2018 at 02:56 GMT",
        "merged_at": "Tuesday Jan 23, 2018 at 02:56 GMT"
    },
    {
        "key": "WT-3847",
        "number": 3893,
        "state": "closed",
        "title": "WT-3847 Add stub api for prepared transaction",
        "body": "Added stub api for prepared transaction.\r\nUpdated begin_transaction to take an additional argument ignore_prepare.\r\nAdded a python test test_prepare01.py to check that invoking prepare_transaction will return error, for test_prepare01.py, copied test-txn01.py and added prepare_transaction call before commit_transaction.\r\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 22, 2018 at 05:07 GMT",
        "updated_at": "Monday Feb 19, 2018 at 06:17 GMT",
        "closed_at": "Tuesday Feb 06, 2018 at 20:23 GMT",
        "merged_at": "Tuesday Feb 06, 2018 at 20:23 GMT"
    },
    {
        "key": "WT-3846",
        "number": 3892,
        "state": "closed",
        "title": "WT-3846 Added a navigator chart to the top of every HTML page showing an inte\u2026",
        "body": "\u2026rval of execution across all threads (trace files). Using the navigator chart, we can easily navigate to another interval (by clicking on that interval) without having to go back to the main page. Unified the legend, so we have just one for all trace files, and it appears on top of the HTML file for that interval.",
        "base_ref": "develop",
        "created_at": "Sunday Jan 21, 2018 at 00:25 GMT",
        "updated_at": "Monday Jan 22, 2018 at 02:39 GMT",
        "closed_at": "Monday Jan 22, 2018 at 02:39 GMT",
        "merged_at": "Monday Jan 22, 2018 at 02:39 GMT"
    },
    {
        "key": "WT-3860",
        "number": 3891,
        "state": "closed",
        "title": "WT-3860 lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 19, 2018 at 15:55 GMT",
        "updated_at": "Tuesday Jan 23, 2018 at 01:20 GMT",
        "closed_at": "Tuesday Jan 23, 2018 at 01:20 GMT",
        "merged_at": "Tuesday Jan 23, 2018 at 01:20 GMT"
    },
    {
        "key": "WT-3829",
        "number": 3890,
        "state": "closed",
        "title": "WT-3829 Make schema operations atomic.",
        "body": "For example, if creating \"table:T\" consisting of \"colgoup:T\" and \"file:T.wt\", all of the metadata updates should commit atomically rather than doing multiple auto-committed writes.\r\n\r\nAlso, when scanning the metadata to see created objects, if a partially created object is found, skip over it rather than making the scan fail.",
        "base_ref": "develop",
        "created_at": "Friday Jan 19, 2018 at 06:54 GMT",
        "updated_at": "Tuesday Feb 20, 2018 at 17:54 GMT",
        "closed_at": "Tuesday Feb 20, 2018 at 17:54 GMT",
        "merged_at": "Tuesday Feb 20, 2018 at 17:54 GMT"
    },
    {
        "key": "WT-3835",
        "number": 3889,
        "state": "closed",
        "title": "WT-3835 cursor remove tries to return a key that doesn't exist",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 18, 2018 at 23:01 GMT",
        "updated_at": "Tuesday Jan 23, 2018 at 05:23 GMT",
        "closed_at": "Friday Jan 19, 2018 at 03:10 GMT",
        "merged_at": "Friday Jan 19, 2018 at 03:10 GMT"
    },
    {
        "key": "GE-",
        "number": 3888,
        "state": "closed",
        "title": "Not to MERGE- Only for Review : WT-3769 backport to 36",
        "body": "@keithbostic \r\nThis pull request is to backport [WT-3769](https://jira.mongodb.org/browse/WT-3769).\r\nRequest your review and to indicate your review result in this pull request, but not to merge.\r\n\r\nOnce you approve the changes, I will push them directly to mongodb-3.6.\r\n\r\nI tested timestamp04.py which triggered this change.\r\n\r\n@agorrod \r\nThe changes of this backport is only bug fixing identified as part of enabling compression by default on LAS, but doesn't include the change to LAS config to enable compression by default. Request to check and confirm  if required I can add the change to LAS config to enable compression by default.\r\n",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday Jan 18, 2018 at 03:51 GMT",
        "updated_at": "Friday Jan 19, 2018 at 06:56 GMT",
        "closed_at": "Friday Jan 19, 2018 at 06:56 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3074",
        "number": 3887,
        "state": "closed",
        "title": "WT-3074 Automate a test to stress eviction walk",
        "body": "Added a new file to wtperf/runners, to test the eviction fairness in walking active trees.\r\nAutomation will be done in jenkins, which will use this configuration for test.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 18, 2018 at 03:14 GMT",
        "updated_at": "Friday Jan 19, 2018 at 06:57 GMT",
        "closed_at": "Friday Jan 19, 2018 at 06:57 GMT",
        "merged_at": "Friday Jan 19, 2018 at 06:57 GMT"
    },
    {
        "key": "WT-3853",
        "number": 3886,
        "state": "closed",
        "title": "WT-3853 LSM version 1 metadata incompatibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 17, 2018 at 16:34 GMT",
        "updated_at": "Thursday Jan 18, 2018 at 01:11 GMT",
        "closed_at": "Thursday Jan 18, 2018 at 01:11 GMT",
        "merged_at": "Thursday Jan 18, 2018 at 01:11 GMT"
    },
    {
        "key": "WT-3799",
        "number": 3885,
        "state": "closed",
        "title": "WT-3799 Don't have format set oldest_timestamp=0.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 17, 2018 at 01:18 GMT",
        "updated_at": "Wednesday Jan 17, 2018 at 02:40 GMT",
        "closed_at": "Wednesday Jan 17, 2018 at 02:40 GMT",
        "merged_at": "Wednesday Jan 17, 2018 at 02:40 GMT"
    },
    {
        "key": "WT-3845",
        "number": 3884,
        "state": "closed",
        "title": "WT-3845 Fix compiler warning in example and test.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 16, 2018 at 01:25 GMT",
        "updated_at": "Tuesday Jan 16, 2018 at 04:31 GMT",
        "closed_at": "Tuesday Jan 16, 2018 at 04:31 GMT",
        "merged_at": "Tuesday Jan 16, 2018 at 04:31 GMT"
    },
    {
        "key": "WT-3597",
        "number": 3883,
        "state": "closed",
        "title": "WT-3597 Change WT_UPDATE ordering check to be part of verbose timestamp.",
        "body": "Rather than gating it unconditionally on HAVE_DIAGNOSTIC, the condition\r\nwon't flag an error to the application, but can generate a log message,\r\nwhich should be seen in the MongoDB log if verbose=timestamp is enabled.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 16, 2018 at 01:11 GMT",
        "updated_at": "Tuesday Jan 16, 2018 at 16:30 GMT",
        "closed_at": "Tuesday Jan 16, 2018 at 05:25 GMT",
        "merged_at": "Tuesday Jan 16, 2018 at 05:25 GMT"
    },
    {
        "key": "WT-3844",
        "number": 3882,
        "state": "closed",
        "title": "WT-3844 Avoid a checkpoint deadlock after lookaside eviction.",
        "body": "Make sure the eviction server thread doesn't stop on a limbo page (blocking exclusive access to the page if eviction is no longer necessary).",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 16, 2018 at 00:03 GMT",
        "updated_at": "Tuesday Jan 16, 2018 at 01:14 GMT",
        "closed_at": "Tuesday Jan 16, 2018 at 01:14 GMT",
        "merged_at": "Tuesday Jan 16, 2018 at 01:14 GMT"
    },
    {
        "key": "WT-3740",
        "number": 3881,
        "state": "closed",
        "title": "WT-3740 race in page dirty-byte decrement.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 15, 2018 at 15:53 GMT",
        "updated_at": "Monday Jan 15, 2018 at 23:22 GMT",
        "closed_at": "Monday Jan 15, 2018 at 23:22 GMT",
        "merged_at": "Monday Jan 15, 2018 at 23:22 GMT"
    },
    {
        "key": "WT-3799",
        "number": 3880,
        "state": "closed",
        "title": "WT-3799 Idle format threads should not pin timestamps.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 15, 2018 at 00:41 GMT",
        "updated_at": "Tuesday Jan 16, 2018 at 00:04 GMT",
        "closed_at": "Tuesday Jan 16, 2018 at 00:04 GMT",
        "merged_at": "Tuesday Jan 16, 2018 at 00:04 GMT"
    },
    {
        "key": "WT-3842",
        "number": 3879,
        "state": "closed",
        "title": "WT-3842 lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jan 13, 2018 at 19:54 GMT",
        "updated_at": "Monday Jan 15, 2018 at 14:17 GMT",
        "closed_at": "Monday Jan 15, 2018 at 14:17 GMT",
        "merged_at": "Monday Jan 15, 2018 at 14:17 GMT"
    },
    {
        "key": "WT-3796",
        "number": 3878,
        "state": "closed",
        "title": "WT-3796 Report a better error message if transaction commit fails",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 12, 2018 at 19:49 GMT",
        "updated_at": "Monday Jan 15, 2018 at 13:19 GMT",
        "closed_at": "Monday Jan 15, 2018 at 13:19 GMT",
        "merged_at": "Monday Jan 15, 2018 at 13:19 GMT"
    },
    {
        "key": "WT-3831",
        "number": 3877,
        "state": "closed",
        "title": "WT-3831 uninitialized buffer value in statlog server path comparison",
        "body": "@sueloverso, I got it wrong last time, hopefully this time it's correct!\r\n\r\nThere are two separate commits, and they aren't related, the second one is just a trivial cleanup.",
        "base_ref": "develop",
        "created_at": "Friday Jan 12, 2018 at 13:20 GMT",
        "updated_at": "Friday Jan 12, 2018 at 21:02 GMT",
        "closed_at": "Friday Jan 12, 2018 at 21:01 GMT",
        "merged_at": "Friday Jan 12, 2018 at 21:01 GMT"
    },
    {
        "key": "WT-3841",
        "number": 3876,
        "state": "closed",
        "title": "WT-3841 Fix error message pattern in timestamp09.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 12, 2018 at 05:45 GMT",
        "updated_at": "Friday Jan 12, 2018 at 06:27 GMT",
        "closed_at": "Friday Jan 12, 2018 at 06:27 GMT",
        "merged_at": "Friday Jan 12, 2018 at 06:27 GMT"
    },
    {
        "key": "WT-3811",
        "number": 3875,
        "state": "closed",
        "title": "WT-3811 Python scripts for visualizing optrack logs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 12, 2018 at 00:52 GMT",
        "updated_at": "Thursday Jan 25, 2018 at 19:15 GMT",
        "closed_at": "Tuesday Jan 16, 2018 at 02:52 GMT",
        "merged_at": "Tuesday Jan 16, 2018 at 02:52 GMT"
    },
    {
        "key": "WT-3792",
        "number": 3874,
        "state": "closed",
        "title": "WT-3792 LSM version 1 metadata incompatibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 11, 2018 at 23:25 GMT",
        "updated_at": "Friday Jan 12, 2018 at 01:46 GMT",
        "closed_at": "Friday Jan 12, 2018 at 01:46 GMT",
        "merged_at": "Friday Jan 12, 2018 at 01:46 GMT"
    },
    {
        "key": "WT-3831",
        "number": 3873,
        "state": "closed",
        "title": "WT-3831 uninitialized buffer value in statlog server path comparison",
        "body": "@sueloverso,  here's the valgrind failure: http://build.wiredtiger.com:8080/job/wiredtiger-valgrind/2664/valgrindResult/pid=34127,0x0/",
        "base_ref": "develop",
        "created_at": "Thursday Jan 11, 2018 at 21:52 GMT",
        "updated_at": "Friday Jan 12, 2018 at 01:06 GMT",
        "closed_at": "Friday Jan 12, 2018 at 01:06 GMT",
        "merged_at": "Friday Jan 12, 2018 at 01:06 GMT"
    },
    {
        "key": "WT-3565",
        "number": 3872,
        "state": "closed",
        "title": "WT-3565 Add test with mixed timestamp/no timestamp usage.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 11, 2018 at 20:14 GMT",
        "updated_at": "Thursday Jan 11, 2018 at 22:42 GMT",
        "closed_at": "Thursday Jan 11, 2018 at 22:42 GMT",
        "merged_at": "Thursday Jan 11, 2018 at 22:42 GMT"
    },
    {
        "key": "WT-3833",
        "number": 3871,
        "state": "closed",
        "title": "WT-3833 Allow 0 as cache minimum.",
        "body": "@keithbostic This is a simplistic fix for the bug that a generated CONFIG gives an error when reused. You added the `cache_minimum` setting. I'm happy to close this branch if you have a better informed solution.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 09, 2018 at 16:16 GMT",
        "updated_at": "Tuesday Jan 09, 2018 at 20:34 GMT",
        "closed_at": "Tuesday Jan 09, 2018 at 20:34 GMT",
        "merged_at": "Tuesday Jan 09, 2018 at 20:34 GMT"
    },
    {
        "key": "WT-3079",
        "number": 3870,
        "state": "closed",
        "title": "WT-3079 Further backport fix.",
        "body": "Remove some old code that changed the target_pages calculation.",
        "base_ref": "mongodb-3.4",
        "created_at": "Tuesday Jan 09, 2018 at 06:50 GMT",
        "updated_at": "Wednesday Jan 10, 2018 at 01:59 GMT",
        "closed_at": "Wednesday Jan 10, 2018 at 01:59 GMT",
        "merged_at": "Wednesday Jan 10, 2018 at 01:59 GMT"
    },
    {
        "key": "WT-3826",
        "number": 3869,
        "state": "closed",
        "title": "WT-3826 Consider anything other than fscanf success to be EOF.",
        "body": "@keithbostic Please review this defensive change for the file system issue. Interestingly enough, `timestamp-abort` already had a similar change in it for when `ret == 0`.",
        "base_ref": "develop",
        "created_at": "Monday Jan 08, 2018 at 16:37 GMT",
        "updated_at": "Monday Jan 08, 2018 at 20:13 GMT",
        "closed_at": "Monday Jan 08, 2018 at 20:12 GMT",
        "merged_at": "Monday Jan 08, 2018 at 20:12 GMT"
    },
    {
        "key": "WT-3832",
        "number": 3868,
        "state": "closed",
        "title": "WT-3832 Add string to dictionary for lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jan 08, 2018 at 05:04 GMT",
        "updated_at": "Monday Jan 08, 2018 at 05:20 GMT",
        "closed_at": "Monday Jan 08, 2018 at 05:19 GMT",
        "merged_at": "Monday Jan 08, 2018 at 05:19 GMT"
    },
    {
        "key": "WT-3828",
        "number": 3867,
        "state": "closed",
        "title": "WT-3828 Add a function reference to resolve a link error on some systems",
        "body": "This resolves the problem on my laptop OS/X.",
        "base_ref": "develop",
        "created_at": "Friday Jan 05, 2018 at 16:39 GMT",
        "updated_at": "Sunday Jan 07, 2018 at 22:10 GMT",
        "closed_at": "Sunday Jan 07, 2018 at 22:09 GMT",
        "merged_at": "Sunday Jan 07, 2018 at 22:09 GMT"
    },
    {
        "key": "WT-3827",
        "number": 3866,
        "state": "closed",
        "title": "WT-3827 test_compact02 failure",
        "body": "Increase the retry time to a minute, 10 seconds wasn't enough.",
        "base_ref": "develop",
        "created_at": "Friday Jan 05, 2018 at 16:13 GMT",
        "updated_at": "Friday Jan 12, 2018 at 02:31 GMT",
        "closed_at": "Friday Jan 05, 2018 at 16:41 GMT",
        "merged_at": "Friday Jan 05, 2018 at 16:41 GMT"
    },
    {
        "key": "WT-3825",
        "number": 3865,
        "state": "closed",
        "title": "WT-3825 Fix calculation of CPU ticks per unit time.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 05, 2018 at 13:44 GMT",
        "updated_at": "Friday Jan 05, 2018 at 14:17 GMT",
        "closed_at": "Friday Jan 05, 2018 at 14:16 GMT",
        "merged_at": "Friday Jan 05, 2018 at 14:16 GMT"
    },
    {
        "key": "WT-3824",
        "number": 3864,
        "state": "closed",
        "title": "WT-3824 Move tick calibration early - into global process structure.",
        "body": "@keithbostic and @agorrod here's a change that moves the tsc calibration into the `__wt_process` global instead of the connection. ",
        "base_ref": "develop",
        "created_at": "Thursday Jan 04, 2018 at 21:11 GMT",
        "updated_at": "Friday Jan 05, 2018 at 13:15 GMT",
        "closed_at": "Friday Jan 05, 2018 at 07:05 GMT",
        "merged_at": "Friday Jan 05, 2018 at 07:05 GMT"
    },
    {
        "key": "WT-1228",
        "number": 3863,
        "state": "closed",
        "title": "WT-1228 Implementation of cursor caching.",
        "body": "This branch/pull request is not yet ready for merge.  It's mainly for comments and pre-review.\r\n\r\nThere are some basic tests for caching, including some with drops.  More testing and performance work remain to be done.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 04, 2018 at 20:37 GMT",
        "updated_at": "Monday Feb 19, 2018 at 06:17 GMT",
        "closed_at": "Friday Feb 16, 2018 at 21:15 GMT",
        "merged_at": "Friday Feb 16, 2018 at 21:15 GMT"
    },
    {
        "key": "WT-3824",
        "number": 3862,
        "state": "closed",
        "title": "WT-3824 Calibrate the ticks much earlier. Check for too small value.",
        "body": "@agorrod and @sulabhM Please review these changes. The stack and assertion showed that we were using the time function very early in startup. I moved the calibration to the first thing after creating and initializing the connection structure. I also reorganized the calibration to default to using epoch time and only overriding that if we have good values.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 04, 2018 at 16:32 GMT",
        "updated_at": "Friday Jan 05, 2018 at 03:23 GMT",
        "closed_at": "Thursday Jan 04, 2018 at 19:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3822",
        "number": 3861,
        "state": "closed",
        "title": "WT-3822 Update WiredTiger copyrights to 2018",
        "body": "It's that time of the year.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 02, 2018 at 15:38 GMT",
        "updated_at": "Tuesday Jan 02, 2018 at 23:27 GMT",
        "closed_at": "Tuesday Jan 02, 2018 at 23:27 GMT",
        "merged_at": "Tuesday Jan 02, 2018 at 23:27 GMT"
    },
    {
        "key": "WT-3775",
        "number": 3860,
        "state": "closed",
        "title": "WT-3775 Improve set timestamp error message",
        "body": "1. txn_global->rwlock was not acquired as access of txn_global->oldest_timestamp & txn_global->stable_timestamp is for printing in error msg purpose only. ",
        "base_ref": "develop",
        "created_at": "Monday Jan 01, 2018 at 23:06 GMT",
        "updated_at": "Tuesday Jan 09, 2018 at 00:02 GMT",
        "closed_at": "Tuesday Jan 09, 2018 at 00:02 GMT",
        "merged_at": "Tuesday Jan 09, 2018 at 00:02 GMT"
    },
    {
        "key": "WT-3820",
        "number": 3859,
        "state": "closed",
        "title": "WT-3820 Add a WT_SESSION.breakpoint method for Python debugging.",
        "body": "@agorrod, I was hacking this into the tree again today, and thought I'd clean it up enough that maybe we could leave it in permanently?\r\n\r\nIt's the obvious hack allowing you to set a gdb breakpoint in `__wt_session_breakpoint` and then do something like:\r\n```\r\nif key == 5:\r\n     self.session.breakpoint()\r\n```\r\nin Python.\r\n\r\nI do that kind of thing a fair amount because it let's me pick a point in a Python test and then squirrel around in the in-memory tree. (I'm guessing @michaelcahill does that a fair bit as well, maybe he's got a better way of doing it?)",
        "base_ref": "develop",
        "created_at": "Sunday Dec 31, 2017 at 15:45 GMT",
        "updated_at": "Monday Jan 01, 2018 at 21:55 GMT",
        "closed_at": "Monday Jan 01, 2018 at 21:55 GMT",
        "merged_at": "Monday Jan 01, 2018 at 21:55 GMT"
    },
    {
        "key": "WT-3819",
        "number": 3858,
        "state": "closed",
        "title": "WT-3819 clang improvements",
        "body": "@agorrod, these are the last set of changes to move the clang static analysis tools, scan-build and clang-tidy, into the source tree.\r\n\r\nTo run the tests, you clone a tree and do:\r\n```\r\n% sh dist/clang-scan/s_clang-scan\r\n% sh dist/clang-tidy/s_clang-tidy\r\n```\r\n\r\nThe output is minimal, none for scan-build and maybe 20 lines for clang-tidy (which means we could incorporate scan-build into the Jenkins tests, I suppose).\r\n\r\nThe scripts are unfortunately a little fiddly, and we don't run cleanly under clang-tidy, but this should allow people other than me to run the tests.\r\n\r\nAlso, I have not parallelized clang-tidy and it takes 10-15 minutes to run.\r\n\r\ncc: @markbenvenuto, @acmorrow ",
        "base_ref": "develop",
        "created_at": "Friday Dec 29, 2017 at 22:11 GMT",
        "updated_at": "Wednesday Jan 03, 2018 at 01:35 GMT",
        "closed_at": "Wednesday Jan 03, 2018 at 01:35 GMT",
        "merged_at": "Wednesday Jan 03, 2018 at 01:35 GMT"
    },
    {
        "key": "WT-3079",
        "number": 3857,
        "state": "closed",
        "title": "DON'T MERGE: ONLY FOR REVIEW: WT-3079 Resume eviction walks per tree. (#3822)",
        "body": "Record how many pages we want and how many pages we have queued so far in a tree, then resume the walk next iteration.  This avoids a single tree with a target larger than the queue size being walked completely before the eviction server moves on to the next tree.\r\n(cherry picked from commit fca6a8d71e5cf3b887a0749ae85519c963ba40d1)",
        "base_ref": "mongodb-3.4",
        "created_at": "Thursday Dec 28, 2017 at 06:11 GMT",
        "updated_at": "Monday Jan 08, 2018 at 00:45 GMT",
        "closed_at": "Monday Jan 08, 2018 at 00:45 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3800",
        "number": 3856,
        "state": "closed",
        "title": "WT-3800 Add debugging to retain database directories.",
        "body": "I created this branch against the fix in the WT-3800 branch for debugging the hang and having artifacts after a failure.",
        "base_ref": "wt-3800-notreached-cleanup",
        "created_at": "Wednesday Dec 27, 2017 at 20:29 GMT",
        "updated_at": "Thursday Dec 28, 2017 at 19:35 GMT",
        "closed_at": "Thursday Dec 28, 2017 at 19:35 GMT",
        "merged_at": "Thursday Dec 28, 2017 at 19:35 GMT"
    },
    {
        "key": "WT-3800",
        "number": 3855,
        "state": "closed",
        "title": "WT-3800 Removed incorrect NOTREACHED comment",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 27, 2017 at 17:12 GMT",
        "updated_at": "Friday Dec 29, 2017 at 15:04 GMT",
        "closed_at": "Friday Dec 29, 2017 at 15:03 GMT",
        "merged_at": "Friday Dec 29, 2017 at 15:03 GMT"
    },
    {
        "key": "WT-3769",
        "number": 3854,
        "state": "closed",
        "title": "WT-3769 Fix a bug in reverse cursor walks with particular delete patterns and prefix compression enabled",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 27, 2017 at 16:24 GMT",
        "updated_at": "Wednesday Dec 27, 2017 at 17:00 GMT",
        "closed_at": "Wednesday Dec 27, 2017 at 17:00 GMT",
        "merged_at": "Wednesday Dec 27, 2017 at 17:00 GMT"
    },
    {
        "key": "WT-3284",
        "number": 3853,
        "state": "closed",
        "title": "WT-3284 tree-walk restart bug",
        "body": "@agorrod, here's the backport to 3.2. It looks applicable and relatively safe.",
        "base_ref": "mongodb-3.2",
        "created_at": "Tuesday Dec 26, 2017 at 22:02 GMT",
        "updated_at": "Wednesday Jan 10, 2018 at 16:04 GMT",
        "closed_at": "Wednesday Jan 10, 2018 at 16:04 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3750",
        "number": 3852,
        "state": "closed",
        "title": "WT-3750 Fast-path fs_directory_list of a single file.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Dec 24, 2017 at 20:04 GMT",
        "updated_at": "Wednesday Dec 27, 2017 at 16:22 GMT",
        "closed_at": "Wednesday Dec 27, 2017 at 16:22 GMT",
        "merged_at": "Wednesday Dec 27, 2017 at 16:22 GMT"
    },
    {
        "key": "WT-3779",
        "number": 3851,
        "state": "closed",
        "title": "WT-3779 Add support for string formats with WT_CURSOR::modify",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Dec 24, 2017 at 18:14 GMT",
        "updated_at": "Tuesday Jan 02, 2018 at 05:17 GMT",
        "closed_at": "Tuesday Jan 02, 2018 at 05:17 GMT",
        "merged_at": "Tuesday Jan 02, 2018 at 05:17 GMT"
    },
    {
        "key": "WT-3818",
        "number": 3850,
        "state": "closed",
        "title": "WT-3818 __rec_txn_read() code order cleanup",
        "body": "@michaelcahill, I made some changes in WT-3768 that made a not-great situation worse, so I've tried to clean it up.\r\n\r\nThere shouldn't be any real changes here, just code ordering for clarity.\r\n\r\nFeel free to discard without further discussion if you don't want this change.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 21, 2017 at 15:18 GMT",
        "updated_at": "Friday Jan 12, 2018 at 13:33 GMT",
        "closed_at": "Friday Jan 12, 2018 at 13:33 GMT",
        "merged_at": "Friday Jan 12, 2018 at 13:33 GMT"
    },
    {
        "key": "WT-3816",
        "number": 3849,
        "state": "closed",
        "title": "WT-3816 Enable prefix compression on the lookaside table",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 21, 2017 at 00:08 GMT",
        "updated_at": "Thursday Dec 21, 2017 at 00:48 GMT",
        "closed_at": "Thursday Dec 21, 2017 at 00:47 GMT",
        "merged_at": "Thursday Dec 21, 2017 at 00:47 GMT"
    },
    {
        "key": "WT-3812",
        "number": 3848,
        "state": "closed",
        "title": "WT-3812 debugging page output should handle complex key/value items.",
        "body": "@michaelcahill, @bvpvamsikrishna suggested a couple of weeks ago we should crack complex key/value pairs when dumping pages for debugging, and it's a good idea. I ended up implementing it when I was working on WT-3768, it made it a lot easier to figure out what the lookaside table was doing.\r\n\r\nFirst, I ended up using the streaming pack/unpack APIs, is there anything that would be simpler?\r\n\r\nSecond, it mostly works, but there's a problem with zero-length `u` formats. I'm  using the pack stream APIs you added, and there's some magic around zero-length `U/u` formats that I don't understand.\r\n\r\nThe lookaside `__wt_las_insert_block()` code has no problem inserting zero-length items, and obviously we can subsequently read them, but when I try and call `wiredtiger_unpack_item()` on the \"QuBu\" format it fails because the saved byte string isn't long enough -- there's no stored length, as near as I can figure out, and `wiredtiger_unpack_item()` fails here:\r\n```\r\n/* Lower-level packing routines treat a length of zero as unchecked. */\r\nif (ps->p >= ps->end)\r\n        return (ENOMEM);\r\n```\r\nDon't bother chasing this if you don't know the answer off-hand, but I've been staring at it for a little while now, and I'm hoping you just know what's going on.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 20, 2017 at 15:06 GMT",
        "updated_at": "Friday Dec 22, 2017 at 12:46 GMT",
        "closed_at": "Friday Dec 22, 2017 at 12:46 GMT",
        "merged_at": "Friday Dec 22, 2017 at 12:46 GMT"
    },
    {
        "key": "WT-3632",
        "number": 3847,
        "state": "closed",
        "title": "WT-3632 Increase how granularly cache usage settings can be configured",
        "body": "Now on the cache config param value greater than 100 is considered an absolute\r\nvalue for that parameter. Hence more granular values can be configured for cache \r\nusage settings.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 20, 2017 at 05:24 GMT",
        "updated_at": "Friday Jan 12, 2018 at 05:44 GMT",
        "closed_at": "Friday Jan 12, 2018 at 05:43 GMT",
        "merged_at": "Friday Jan 12, 2018 at 05:43 GMT"
    },
    {
        "key": "WT-3810",
        "number": 3846,
        "state": "closed",
        "title": "WT-3810 Add repeated tries to calibrate and avoid divide by zero.",
        "body": "@agorrod This branch hopefully fixes the divide by zero build failure. In that, I could only come up with two scenarios where we could divide by zero: 1. the loop of only 1 million was so short it didn't register and 2. somehow even with volatile, the loop was optimized away.\r\n\r\nI've addressed the first one by increasing the loop to 100M, and added an outer loop to calibrate three times, to avoid one iteration getting a scheduling issue. The idea is that weird scheduling issues won't happen every single iteration through this tight loop and we'll get at least one good reading. I cannot reproduce nor verify whether the second situation is happening. If you have other suggestions instead of `volatile` for not allowing optimization, let me know because that is supposed to work.",
        "base_ref": "develop",
        "created_at": "Monday Dec 18, 2017 at 18:03 GMT",
        "updated_at": "Wednesday Dec 20, 2017 at 01:11 GMT",
        "closed_at": "Wednesday Dec 20, 2017 at 01:11 GMT",
        "merged_at": "Wednesday Dec 20, 2017 at 01:11 GMT"
    },
    {
        "key": "WT-3809",
        "number": 3845,
        "state": "closed",
        "title": "WT-3809 Fix a bug in lookaside related to birthmarks",
        "body": "@michaelcahill, my guess is this can happen but we're not seeing the failure because the compiler is reversing the tests as they don't contain any side-effects?\r\n\r\nThe comment leading into the return if/else pattern could use some work as well.",
        "base_ref": "develop",
        "created_at": "Monday Dec 18, 2017 at 12:13 GMT",
        "updated_at": "Friday Jan 12, 2018 at 03:56 GMT",
        "closed_at": "Friday Jan 12, 2018 at 03:56 GMT",
        "merged_at": "Friday Jan 12, 2018 at 03:56 GMT"
    },
    {
        "key": "RT-1123",
        "number": 3844,
        "state": "closed",
        "title": "BACKPORT-1123 perform a full checkpoint for clean shutdowns",
        "body": "BACKPORT-1123-perform-a-full-checkpoint-for-clean-shutdowns (original ticket is [WT-3590](https://jira.mongodb.org/browse/WT-3590))\r\n\r\nthree cherry-picks, created the pull request as this backport is not straight forward.\r\n\r\n    (cherry picked from commit 8b4b80138867c3f35ee3a5e7cb1fc198dbee7889)\r\n\r\n        WT-3590 Keep data consistent if writes fail during a clean shutdown    (#3666)\r\n\r\n        * Add a regular checkpoint during close.\r\n\r\n        * Add a test case showing trees out of sync when writes fail during     close.\r\n\r\n        * Make sure the metadata is flushed during clean shutdown.  A database-wide checkpoint can be complex, flush the metadata again afterwards to make it easy to detect that recovery can be skipped.\r\n\r\n        * Do a \"soft panic\" if anything goes wrong during close.  Avoid aborting diagnostic builds, but make sure there are no further writes to disk (e.g., if the checkpoint fails).\r\n\r\n    (cherry picked from commit 1077984843d5c8594ec93790c896b344fa901862)\r\n\r\n        WT-3590 Call __wt_checkpoint_close during final close, even after panic.\r\n\r\n        This code has been restructured since the version in mongodb-3.4: if there is an error during close, trees are marked dead and __wt_checkpoint_close will not write anything.  So it is safe to\r\n    call it, and if we don't, the cache accounting goes wrong for other cases such as in-memory.\r\n\r\n\r\n    (cherry picked from commit 15aacb8d1301acb926d964c214caf4ab989107a5)\r\n\r\n        WT-3590 Fixup backport to not reference timestamps.\r\n\r\n        Since timestamp support isn't present in the 3.4 release.\r\n\r\n",
        "base_ref": "mongodb-3.2",
        "created_at": "Monday Dec 18, 2017 at 02:15 GMT",
        "updated_at": "Tuesday Dec 19, 2017 at 00:25 GMT",
        "closed_at": "Tuesday Dec 19, 2017 at 00:25 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3769",
        "number": 3843,
        "state": "closed",
        "title": "WT-3769 Fix a bug in reverse cursor walks with prefix compression enabled",
        "body": "@michaelcahill, please review this one carefully, I've repeatedly gotten it wrong.\r\n\r\nOnce it's merged, I'll update the WT-3767 (#3813) branch, they aren't going to merge cleanly.\r\n\r\nThere is a related branch that includes tests, see #3820.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 17, 2017 at 21:25 GMT",
        "updated_at": "Thursday Dec 21, 2017 at 00:05 GMT",
        "closed_at": "Thursday Dec 21, 2017 at 00:05 GMT",
        "merged_at": "Thursday Dec 21, 2017 at 00:05 GMT"
    },
    {
        "key": "WT-3807",
        "number": 3842,
        "state": "closed",
        "title": "WT-3807 clang static analysis updates",
        "body": "Bring the tree up-to-date with the latest clang release static analysis tools.",
        "base_ref": "develop",
        "created_at": "Friday Dec 15, 2017 at 22:31 GMT",
        "updated_at": "Wednesday Dec 20, 2017 at 06:22 GMT",
        "closed_at": "Wednesday Dec 20, 2017 at 06:21 GMT",
        "merged_at": "Wednesday Dec 20, 2017 at 06:21 GMT"
    },
    {
        "key": "WT-3767",
        "number": 3841,
        "state": "closed",
        "title": "WT-3767 Avoid lookaside reads when history is not required for queries.",
        "body": "",
        "base_ref": "wt-3767-ref-amnesia",
        "created_at": "Thursday Dec 14, 2017 at 20:11 GMT",
        "updated_at": "Friday Dec 15, 2017 at 05:56 GMT",
        "closed_at": "Friday Dec 15, 2017 at 05:56 GMT",
        "merged_at": "Friday Dec 15, 2017 at 05:56 GMT"
    },
    {
        "key": "WT-3806",
        "number": 3840,
        "state": "closed",
        "title": "WT-3806 Make sure rdtsc values move forward in time",
        "body": "Not quite ready for review. Needs additional testing.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 14, 2017 at 18:20 GMT",
        "updated_at": "Wednesday Dec 20, 2017 at 06:15 GMT",
        "closed_at": "Wednesday Dec 20, 2017 at 06:15 GMT",
        "merged_at": "Wednesday Dec 20, 2017 at 06:15 GMT"
    },
    {
        "key": "WT-3303",
        "number": 3839,
        "state": "closed",
        "title": "WT-3303 Deadlock during first access to lookaside table",
        "body": "Don't acquire the eviction walk-lock when releasing exclusive eviction access to a file, it can deadlock. Instead, atomically decrement the counter.\r\n(cherry picked from commit 5c4e0e9ee90b343e9878dd8f6cab1365fc0dce97)",
        "base_ref": "mongodb-3.4",
        "created_at": "Thursday Dec 14, 2017 at 05:48 GMT",
        "updated_at": "Monday Dec 18, 2017 at 23:59 GMT",
        "closed_at": "Monday Dec 18, 2017 at 23:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3681",
        "number": 3838,
        "state": "closed",
        "title": "WT-3681 Don't truncate the last log file in recovery (#3753)",
        "body": "(cherry picked from commit fb12f583c86809c566141745daa6077bf22cf728) and resolved merge conflicts.",
        "base_ref": "mongodb-3.4",
        "created_at": "Wednesday Dec 13, 2017 at 02:14 GMT",
        "updated_at": "Thursday Dec 14, 2017 at 00:34 GMT",
        "closed_at": "Thursday Dec 14, 2017 at 00:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3790",
        "number": 3837,
        "state": "closed",
        "title": "WT-3790 Add translation from rdtsc ticks to nanoseconds.",
        "body": "@agorrod, here is one implementation to convert rdtsc to nanoseconds to make the time comparisons useful. Please review. In addition I replaced places where we do intra-function timings for stats in several locations. There are other replacements in the WT-3725 branch that are disjoint from these. \r\n\r\nHere I searched for \"timespec start, stop\" and in WT-3725 I searched for \"timespec enter, leave\". Once this is merged, in WT-3725 I'll make the names consistent.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 12, 2017 at 20:56 GMT",
        "updated_at": "Thursday Dec 14, 2017 at 00:51 GMT",
        "closed_at": "Thursday Dec 14, 2017 at 00:51 GMT",
        "merged_at": "Thursday Dec 14, 2017 at 00:51 GMT"
    },
    {
        "key": "WT-1228",
        "number": 3836,
        "state": "closed",
        "title": "WT-1228 Cursor caching proof of concept",
        "body": "Not ready for merge.  Making this available for testing as a proof of concept.",
        "base_ref": "develop",
        "created_at": "Saturday Dec 09, 2017 at 21:41 GMT",
        "updated_at": "Thursday Jan 04, 2018 at 20:39 GMT",
        "closed_at": "Thursday Jan 04, 2018 at 20:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3734",
        "number": 3835,
        "state": "closed",
        "title": "WT-3734 Fix undefined behavior in verbose output",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Dec 09, 2017 at 20:23 GMT",
        "updated_at": "Sunday Dec 10, 2017 at 23:48 GMT",
        "closed_at": "Sunday Dec 10, 2017 at 23:47 GMT",
        "merged_at": "Sunday Dec 10, 2017 at 23:47 GMT"
    },
    {
        "key": "WT-3780",
        "number": 3834,
        "state": "closed",
        "title": "WT-3780 Improve error messages on invalid WT_CURSOR::modify usage",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Dec 09, 2017 at 20:12 GMT",
        "updated_at": "Monday Dec 11, 2017 at 00:12 GMT",
        "closed_at": "Monday Dec 11, 2017 at 00:12 GMT",
        "merged_at": "Monday Dec 11, 2017 at 00:12 GMT"
    },
    {
        "key": "WT-3716",
        "number": 3833,
        "state": "closed",
        "title": "WT-3716 Restore the WT_VERB_TEMPORARY verbose flag.",
        "body": "@agorrod, here's the rest of the WT-3720/WT-3716 change, putting the temporary verbose flag back in, and moving the verbose flags from 32 to 64 bits\r\n\r\nJust for clarity, I redid the change from scratch by adding the verbose flag and then looking for compiler/lint complaints. The compiler/lint checks found everything I needed to change, so I think there's some evidence that we made the correct design choices here.",
        "base_ref": "develop",
        "created_at": "Saturday Dec 09, 2017 at 19:34 GMT",
        "updated_at": "Monday Dec 11, 2017 at 01:20 GMT",
        "closed_at": "Monday Dec 11, 2017 at 01:20 GMT",
        "merged_at": "Monday Dec 11, 2017 at 01:20 GMT"
    },
    {
        "key": "WT-3795",
        "number": 3832,
        "state": "closed",
        "title": "WT-3795 lint cleanups for the op-tracking software, reduce record write size.",
        "body": "@agorrod, @fedorova, these are the changes to get the static analysis software to quit complaining about how we were using `__func__`. Sorry about the mess. There is a bit of carrot here, though, I think I've reduced the size of the op-tracking write record from 24B to 16B.\r\n\r\nThe only thing I don't like about this change is the need for `WT_TRACK_OP_DECL` (because `WT_TRACK_OP_INIT` can't always immediately follow the function declarations), but I don't see any alternative.",
        "base_ref": "develop",
        "created_at": "Friday Dec 08, 2017 at 19:53 GMT",
        "updated_at": "Thursday Dec 14, 2017 at 05:21 GMT",
        "closed_at": "Thursday Dec 14, 2017 at 05:21 GMT",
        "merged_at": "Thursday Dec 14, 2017 at 05:21 GMT"
    },
    {
        "key": "WT-3794",
        "number": 3831,
        "state": "closed",
        "title": "WT-3794 Coverity 1383547 and lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 08, 2017 at 14:41 GMT",
        "updated_at": "Monday Dec 11, 2017 at 01:18 GMT",
        "closed_at": "Monday Dec 11, 2017 at 01:18 GMT",
        "merged_at": "Monday Dec 11, 2017 at 01:18 GMT"
    },
    {
        "key": "WT-3793",
        "number": 3830,
        "state": "closed",
        "title": "WT-3793 WiredTiger page debug dump functions should unpack integer keys",
        "body": "Change page debug dump functions for integer keys so we see:\r\n```\r\n0x801c518d0: row-store leaf\r\n        disk 0x807480000, dsk_mem_size 1066, entries 99, clean, memory_size 1938, disk-alloc\r\n        K {1}\r\n        V {VALUE-H}\r\n```\r\ninstead of:\r\n```\r\n0x801c518d0: row-store leaf\r\n        disk 0x807480000, dsk_mem_size 1066, entries 99, clean, memory_size 1938, disk-alloc\r\n        K {#81}\r\n        V {VALUE-H}\r\n```",
        "base_ref": "develop",
        "created_at": "Friday Dec 08, 2017 at 01:27 GMT",
        "updated_at": "Friday Dec 08, 2017 at 04:06 GMT",
        "closed_at": "Friday Dec 08, 2017 at 04:04 GMT",
        "merged_at": "Friday Dec 08, 2017 at 04:04 GMT"
    },
    {
        "key": "WT-3787",
        "number": 3829,
        "state": "closed",
        "title": "WT-3787 test_compact02 failed as compaction halted due to eviction pressure",
        "body": "@ddanderson, is there a way to change this code to only ignore failure in the case of `EBUSY`, rather than ignoring all errors?",
        "base_ref": "develop",
        "created_at": "Thursday Dec 07, 2017 at 15:26 GMT",
        "updated_at": "Friday Jan 05, 2018 at 03:23 GMT",
        "closed_at": "Saturday Dec 09, 2017 at 20:56 GMT",
        "merged_at": "Saturday Dec 09, 2017 at 20:56 GMT"
    },
    {
        "key": null,
        "number": 3828,
        "state": "closed",
        "title": "Change AMNESIA to LIMBO",
        "body": "@michaelcahill and @agorrod I pushed this branch off of the WT-3767 branch changing the name from `AMNESIA` to `LIMBO`. It is mostly for consideration with the visual context. Feel free to drop this if you don't like it.",
        "base_ref": "wt-3767-ref-amnesia",
        "created_at": "Wednesday Dec 06, 2017 at 20:57 GMT",
        "updated_at": "Thursday Dec 07, 2017 at 05:49 GMT",
        "closed_at": "Thursday Dec 07, 2017 at 05:49 GMT",
        "merged_at": "Thursday Dec 07, 2017 at 05:49 GMT"
    },
    {
        "key": "WT-3597",
        "number": 3827,
        "state": "closed",
        "title": "WT-3597 Timestamp diagnostic when inserting older key",
        "body": "This is not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 05, 2017 at 20:10 GMT",
        "updated_at": "Monday Jan 08, 2018 at 04:57 GMT",
        "closed_at": "Monday Jan 08, 2018 at 04:57 GMT",
        "merged_at": "Monday Jan 08, 2018 at 04:57 GMT"
    },
    {
        "key": "WT-3786",
        "number": 3826,
        "state": "closed",
        "title": "WT-3786 Transactions should read their writes regardless of timestamps.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 05, 2017 at 04:15 GMT",
        "updated_at": "Tuesday Dec 05, 2017 at 21:34 GMT",
        "closed_at": "Tuesday Dec 05, 2017 at 21:34 GMT",
        "merged_at": "Tuesday Dec 05, 2017 at 21:34 GMT"
    },
    {
        "key": "WT-3776",
        "number": 3825,
        "state": "closed",
        "title": "WT-3776 Segmentation fault during cursor remove operation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Dec 02, 2017 at 17:23 GMT",
        "updated_at": "Monday Dec 04, 2017 at 21:34 GMT",
        "closed_at": "Monday Dec 04, 2017 at 21:34 GMT",
        "merged_at": "Monday Dec 04, 2017 at 21:34 GMT"
    },
    {
        "key": "WT-3753",
        "number": 3824,
        "state": "closed",
        "title": "WT-3753 Added --enable-java to documentation for building windows.",
        "body": "Minor cleanup of recent changes to SConstruct.",
        "base_ref": "develop",
        "created_at": "Friday Dec 01, 2017 at 15:26 GMT",
        "updated_at": "Friday Dec 01, 2017 at 17:13 GMT",
        "closed_at": "Friday Dec 01, 2017 at 17:12 GMT",
        "merged_at": "Friday Dec 01, 2017 at 17:12 GMT"
    },
    {
        "key": "WT-3783",
        "number": 3823,
        "state": "closed",
        "title": "WT-3783 Fix transaction isolation to use the correct enum",
        "body": "@michaelcahill, can you please look at dfd2c6f?\r\n\r\nI think we're setting `las_session->txn.isolation = WT_ISO_SNAPSHOT`, because `WT_TXN_ISO_READ_UNCOMMITTED` == 2.",
        "base_ref": "develop",
        "created_at": "Friday Dec 01, 2017 at 13:14 GMT",
        "updated_at": "Tuesday Dec 05, 2017 at 05:21 GMT",
        "closed_at": "Tuesday Dec 05, 2017 at 05:21 GMT",
        "merged_at": "Tuesday Dec 05, 2017 at 05:21 GMT"
    },
    {
        "key": "WT-3079",
        "number": 3822,
        "state": "closed",
        "title": "WT-3079 Resume eviction walks per tree.",
        "body": "Record how many pages we want and how many pages we have queued so far in a tree, then resume the walk next iteration.  This avoids a single tree with a target larger than the queue size being walked completely before the eviction server moves on to the next tree.",
        "base_ref": "develop",
        "created_at": "Friday Dec 01, 2017 at 06:21 GMT",
        "updated_at": "Monday Dec 04, 2017 at 08:32 GMT",
        "closed_at": "Monday Dec 04, 2017 at 08:32 GMT",
        "merged_at": "Monday Dec 04, 2017 at 08:32 GMT"
    },
    {
        "key": "WT-3587",
        "number": 3821,
        "state": "closed",
        "title": "WT-3587 Remove HAVE_VERBOSE conditional compilation",
        "body": "Not ready for review yet.\r\nNeed to check the performance implications.",
        "base_ref": "develop",
        "created_at": "Friday Dec 01, 2017 at 06:08 GMT",
        "updated_at": "Friday Dec 08, 2017 at 04:39 GMT",
        "closed_at": "Friday Dec 08, 2017 at 04:39 GMT",
        "merged_at": "Friday Dec 08, 2017 at 04:39 GMT"
    },
    {
        "key": "WT-3769",
        "number": 3820,
        "state": "closed",
        "title": "WT-3769 Enable prefix compression by default for LAS",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 30, 2017 at 22:33 GMT",
        "updated_at": "Sunday Dec 17, 2017 at 21:15 GMT",
        "closed_at": "Sunday Dec 17, 2017 at 21:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3654",
        "number": 3819,
        "state": "closed",
        "title": "WT-3654 Fix warnings in Windows build on evergreen",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 30, 2017 at 22:24 GMT",
        "updated_at": "Thursday Dec 07, 2017 at 05:50 GMT",
        "closed_at": "Friday Dec 01, 2017 at 06:10 GMT",
        "merged_at": "Friday Dec 01, 2017 at 06:10 GMT"
    },
    {
        "key": "WT-3774",
        "number": 3818,
        "state": "closed",
        "title": "WT-3774 Add a test case that covers lookaside and modify",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 29, 2017 at 06:24 GMT",
        "updated_at": "Thursday Nov 30, 2017 at 06:43 GMT",
        "closed_at": "Thursday Nov 30, 2017 at 06:43 GMT",
        "merged_at": "Thursday Nov 30, 2017 at 06:43 GMT"
    },
    {
        "key": "WT-3773",
        "number": 3817,
        "state": "closed",
        "title": "WT-3773 Fix a bug calculating on-disk images for modify updates.",
        "body": "Previously, when evicting a page with modify updates, some of the modifications could be skipped when calculating the complete value to write to the new page.  This could lead to updates being lost.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 29, 2017 at 05:29 GMT",
        "updated_at": "Wednesday Nov 29, 2017 at 06:22 GMT",
        "closed_at": "Wednesday Nov 29, 2017 at 06:22 GMT",
        "merged_at": "Wednesday Nov 29, 2017 at 06:22 GMT"
    },
    {
        "key": "WT-3763",
        "number": 3816,
        "state": "closed",
        "title": "WT-3763 Revert part of the change that made reconciliation more likely to use lookaside",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 29, 2017 at 05:07 GMT",
        "updated_at": "Wednesday Nov 29, 2017 at 05:31 GMT",
        "closed_at": "Wednesday Nov 29, 2017 at 05:31 GMT",
        "merged_at": "Wednesday Nov 29, 2017 at 05:31 GMT"
    },
    {
        "key": "WT-3772",
        "number": 3815,
        "state": "closed",
        "title": "WT-3772 Do not increment missed pre-allocated logs counter when a hot backup \u2026",
        "body": "\u2026is in progress since we deliberately not using pre-allocated log files in that case.\r\n\r\nTo resolve https://jira.mongodb.org/browse/WT-3772",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 29, 2017 at 03:40 GMT",
        "updated_at": "Thursday Nov 30, 2017 at 04:27 GMT",
        "closed_at": "Thursday Nov 30, 2017 at 04:27 GMT",
        "merged_at": "Thursday Nov 30, 2017 at 04:27 GMT"
    },
    {
        "key": "WT-3763",
        "number": 3814,
        "state": "closed",
        "title": "WT-3763 Disable suffix compression on key with saved updates.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 28, 2017 at 05:26 GMT",
        "updated_at": "Thursday Nov 30, 2017 at 00:52 GMT",
        "closed_at": "Tuesday Nov 28, 2017 at 05:35 GMT",
        "merged_at": "Tuesday Nov 28, 2017 at 05:35 GMT"
    },
    {
        "key": "WT-3767",
        "number": 3813,
        "state": "closed",
        "title": "WT-3767 Avoid lookaside reads when history is not required for queries.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 27, 2017 at 12:24 GMT",
        "updated_at": "Friday Jan 12, 2018 at 04:06 GMT",
        "closed_at": "Friday Jan 12, 2018 at 04:06 GMT",
        "merged_at": "Friday Jan 12, 2018 at 04:06 GMT"
    },
    {
        "key": "WT-3768",
        "number": 3812,
        "state": "closed",
        "title": "WT-3768 Add an update type to version on-page values.",
        "body": "Previously, we stored full copies of on-disk values in the lookaside table as well as in the disk image when we stored values that were not globally visible.\r\n\r\nThis branch uses a different approach, and stores a new update type (called WT_UPDATE_BIRTHMARK) whose purpose is to give the on-page value a transaction time when it becomes visible.  Readers that see a birthmark should read the on-disk value.  Readers that skip over a birthmark because it is not visible to them should not see the on-page value (equivalent to reading a tombstone at the end of the update list).",
        "base_ref": "develop",
        "created_at": "Monday Nov 27, 2017 at 06:13 GMT",
        "updated_at": "Friday Dec 15, 2017 at 05:27 GMT",
        "closed_at": "Friday Dec 15, 2017 at 05:27 GMT",
        "merged_at": "Friday Dec 15, 2017 at 05:27 GMT"
    },
    {
        "key": "WT-3753",
        "number": 3811,
        "state": "closed",
        "title": "WT-3753 Building on Windows --enable-java",
        "body": "SConstruct update to support building wiredtiger_java.dll.\r\n\r\n-> wiredtiger.jar is created inside lang/java/**wiredtiger.jar**\r\n-> **wiredtiger_java.dll** is created in root repo folder.\r\n\r\nUsage example from cmd:\r\nc:\\Python27\\python.exe c:\\Python27\\Scripts\\scons.py --enable-java=c:/Users/paco/Downloads/swigwin-3.0.12/swig.exe,\"C:/Program Files/Java/jdk1.8.0_151/\"\r\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 25, 2017 at 16:58 GMT",
        "updated_at": "Friday Dec 01, 2017 at 15:11 GMT",
        "closed_at": "Friday Dec 01, 2017 at 15:08 GMT",
        "merged_at": "Friday Dec 01, 2017 at 15:08 GMT"
    },
    {
        "key": "WT-3763",
        "number": 3810,
        "state": "closed",
        "title": "WT-3763 Retry eviction if we're using lookaside.",
        "body": "When we're not under cache pressure, retrying eviction of pages can waste effort if the global transaction state hasn't changed.  However, lookaside eviction allows pages to be evicted even when a timestamp or transaction ID is stuck, so we should retry in that case.",
        "base_ref": "wt-3763-eviction-tuning",
        "created_at": "Friday Nov 24, 2017 at 06:41 GMT",
        "updated_at": "Monday Nov 27, 2017 at 01:47 GMT",
        "closed_at": "Monday Nov 27, 2017 at 01:47 GMT",
        "merged_at": "Monday Nov 27, 2017 at 01:47 GMT"
    },
    {
        "key": "WT-3765",
        "number": 3809,
        "state": "closed",
        "title": "WT-3765 Prevent eviction of pages being truncated.",
        "body": "When an application performs a truncate operation, WiredTiger marks pages deleted.  If such a page is subsequently read with a view earlier than the truncate, the page is reinstantiated and all records deleted (as if truncate had taken the slow path).\r\n\r\nSuch a page cannot be evicted: if the truncate is rolled back, it expects to find the page and any tombstones so it can roll them all back.  If the page is evicted or split, the rollback will fail.\r\n\r\nThis change takes two approaches: don't allow checkpoints to queue pages for urgent eviction, since checkpoints use special rules to determine whether eviction is permitted.  In addition, check for uncommitted truncate operations before allowing any page to be evicted.",
        "base_ref": "develop",
        "created_at": "Friday Nov 24, 2017 at 06:10 GMT",
        "updated_at": "Sunday Nov 26, 2017 at 21:53 GMT",
        "closed_at": "Sunday Nov 26, 2017 at 21:53 GMT",
        "merged_at": "Sunday Nov 26, 2017 at 21:53 GMT"
    },
    {
        "key": null,
        "number": 3808,
        "state": "closed",
        "title": "Create ISSUE_TEMPLATE.md",
        "body": "New Feature\tRequired.\r\nDescription in ISSUE_TEMPLATE.md",
        "base_ref": "master",
        "created_at": "Friday Nov 24, 2017 at 04:31 GMT",
        "updated_at": "Tuesday Dec 12, 2017 at 04:55 GMT",
        "closed_at": "Monday Nov 27, 2017 at 11:41 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3763",
        "number": 3807,
        "state": "closed",
        "title": "WT-3763 Decide whether to retry eviction based on eviction activity",
        "body": "Rather than on whether transaction visibility is moving forward, this should help since transaction visibility isn't as simple as it was before timestamps.",
        "base_ref": "wt-3763-eviction-tuning",
        "created_at": "Friday Nov 24, 2017 at 02:13 GMT",
        "updated_at": "Monday Nov 27, 2017 at 01:47 GMT",
        "closed_at": "Monday Nov 27, 2017 at 01:47 GMT",
        "merged_at": "Monday Nov 27, 2017 at 01:47 GMT"
    },
    {
        "key": "WT-3764",
        "number": 3806,
        "state": "closed",
        "title": "WT-3764 Allow fast eviction of unwanted clean pages.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 24, 2017 at 01:02 GMT",
        "updated_at": "Monday Nov 27, 2017 at 21:02 GMT",
        "closed_at": "Monday Nov 27, 2017 at 21:02 GMT",
        "merged_at": "Monday Nov 27, 2017 at 21:02 GMT"
    },
    {
        "key": "WT-3761",
        "number": 3805,
        "state": "closed",
        "title": "WT-3761 Don't immediately evict pages even if they look clean",
        "body": "It is an optimization that tickles a corner case with checkpoints and the fast truncate path.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 23, 2017 at 23:34 GMT",
        "updated_at": "Friday Nov 24, 2017 at 00:47 GMT",
        "closed_at": "Friday Nov 24, 2017 at 00:46 GMT",
        "merged_at": "Friday Nov 24, 2017 at 00:46 GMT"
    },
    {
        "key": "WT-3763",
        "number": 3804,
        "state": "closed",
        "title": "WT-3763 Tune eviction for various MongoDB workloads.",
        "body": "In particular, balance primary inserts, overflowing the cache to use the lookaside table, secondary inserts and secondary reads of the oplog (assuming the oplog is at least partially stored in the lookaside table).",
        "base_ref": "develop",
        "created_at": "Thursday Nov 23, 2017 at 06:22 GMT",
        "updated_at": "Tuesday Nov 28, 2017 at 01:53 GMT",
        "closed_at": "Tuesday Nov 28, 2017 at 01:53 GMT",
        "merged_at": "Tuesday Nov 28, 2017 at 01:53 GMT"
    },
    {
        "key": "WT-3761",
        "number": 3803,
        "state": "closed",
        "title": "WT-3761 Queue page for urgent eviction on page release",
        "body": "Queue the page for urgent eviction when application thread is not supposed to do\r\nit. This is done to allow splitting the pages to maintain the performance of\r\nwrite operations.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 23, 2017 at 04:32 GMT",
        "updated_at": "Thursday Nov 23, 2017 at 11:12 GMT",
        "closed_at": "Thursday Nov 23, 2017 at 11:12 GMT",
        "merged_at": "Thursday Nov 23, 2017 at 11:12 GMT"
    },
    {
        "key": "WT-3738",
        "number": 3802,
        "state": "closed",
        "title": "WT-3738 Review internal session allocation accounting",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 22, 2017 at 23:05 GMT",
        "updated_at": "Friday Dec 08, 2017 at 09:54 GMT",
        "closed_at": "Friday Dec 08, 2017 at 09:53 GMT",
        "merged_at": "Friday Dec 08, 2017 at 09:53 GMT"
    },
    {
        "key": "WT-3607",
        "number": 3801,
        "state": "closed",
        "title": "WT-3607 compaction skips all in-cache blocks with associated disk images",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 22, 2017 at 19:21 GMT",
        "updated_at": "Thursday Nov 23, 2017 at 05:56 GMT",
        "closed_at": "Thursday Nov 23, 2017 at 05:56 GMT",
        "merged_at": "Thursday Nov 23, 2017 at 05:56 GMT"
    },
    {
        "key": "WT-3762",
        "number": 3800,
        "state": "closed",
        "title": "WT-3762 Add a \"force\" flag to WT_CONNECTION::set_timestamp.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 22, 2017 at 10:35 GMT",
        "updated_at": "Thursday Nov 23, 2017 at 05:55 GMT",
        "closed_at": "Thursday Nov 23, 2017 at 05:54 GMT",
        "merged_at": "Thursday Nov 23, 2017 at 05:54 GMT"
    },
    {
        "key": "WT-3760",
        "number": 3799,
        "state": "closed",
        "title": "WT-3760 Avoid writing overflow values into the lookaside file",
        "body": "Avoid writing overflow values into the lookaside file",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 22, 2017 at 05:08 GMT",
        "updated_at": "Wednesday Nov 22, 2017 at 05:33 GMT",
        "closed_at": "Wednesday Nov 22, 2017 at 05:33 GMT",
        "merged_at": "Wednesday Nov 22, 2017 at 05:33 GMT"
    },
    {
        "key": "WT-3732",
        "number": 3798,
        "state": "closed",
        "title": "WT-3732 For index add/drop, temporarily get the table dhandle exclusively",
        "body": "This ensures that there is a time during the add/drop that all cursors\r\non the table are closed and must be reopened.\r\n\r\nFix some tests that leave cursors open during add/drop.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 22, 2017 at 01:43 GMT",
        "updated_at": "Monday Dec 11, 2017 at 16:43 GMT",
        "closed_at": "Monday Dec 11, 2017 at 16:42 GMT",
        "merged_at": "Monday Dec 11, 2017 at 16:42 GMT"
    },
    {
        "key": "WT-3758",
        "number": 3797,
        "state": "closed",
        "title": "WT-3758 Turn on snappy by default for LAS",
        "body": "To turn on snappy by default for LAS.\r\nThis improves the performance of insert-heavy workloads that end up disk-bound writing lookaside records.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 21, 2017 at 05:43 GMT",
        "updated_at": "Wednesday Nov 22, 2017 at 00:15 GMT",
        "closed_at": "Wednesday Nov 22, 2017 at 00:15 GMT",
        "merged_at": "Wednesday Nov 22, 2017 at 00:15 GMT"
    },
    {
        "key": "WT-3754",
        "number": 3796,
        "state": "closed",
        "title": "WT-3754 serial updates to the oldest to consider pinned ts for visibility",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 21, 2017 at 02:33 GMT",
        "updated_at": "Wednesday Nov 22, 2017 at 00:14 GMT",
        "closed_at": "Wednesday Nov 22, 2017 at 00:14 GMT",
        "merged_at": "Wednesday Nov 22, 2017 at 00:14 GMT"
    },
    {
        "key": "WT-3751",
        "number": 3795,
        "state": "closed",
        "title": "WT-3751 Allow splits when no data is visible.",
        "body": "A slightly different approach, routing all of the built keys through the\r\n\"current\" buffer.",
        "base_ref": "wt-3751-split-while-lagged",
        "created_at": "Monday Nov 20, 2017 at 21:12 GMT",
        "updated_at": "Tuesday Nov 21, 2017 at 00:07 GMT",
        "closed_at": "Tuesday Nov 21, 2017 at 00:07 GMT",
        "merged_at": "Tuesday Nov 21, 2017 at 00:07 GMT"
    },
    {
        "key": "WT-3752",
        "number": 3794,
        "state": "closed",
        "title": "WT-3752 Allow trimming of obsolete modify updates.",
        "body": "Obsolete update discards look for a contiguous block of obsolete updates at the end of an update chain.  Previously, we reset the search each time we saw a modify update.  That is not what we want: it is fine to discard obsolete modify updates as long as there is a complete value somewhere after them in the list.",
        "base_ref": "develop",
        "created_at": "Monday Nov 20, 2017 at 00:25 GMT",
        "updated_at": "Monday Nov 20, 2017 at 03:25 GMT",
        "closed_at": "Monday Nov 20, 2017 at 03:25 GMT",
        "merged_at": "Monday Nov 20, 2017 at 03:25 GMT"
    },
    {
        "key": "WT-3751",
        "number": 3793,
        "state": "closed",
        "title": "WT-3751 Allow splits when no data is visible.",
        "body": "In particular, when reconciling insert lists on row store leaf pages, we also need to check for splits.  Now that we are handling this case correctly, we are seeing splits with empty page images, which requires further changes in reconciliation to track the last key associated with a page (even if that key wasn't written to the page image).",
        "base_ref": "develop",
        "created_at": "Friday Nov 17, 2017 at 04:35 GMT",
        "updated_at": "Tuesday Nov 21, 2017 at 05:24 GMT",
        "closed_at": "Tuesday Nov 21, 2017 at 05:24 GMT",
        "merged_at": "Tuesday Nov 21, 2017 at 05:24 GMT"
    },
    {
        "key": "WT-3725",
        "number": 3792,
        "state": "closed",
        "title": "WT-3725 Add timestamp related statistics",
        "body": "@agorrod and @keithbostic I'm choosing you both because you're often have different views on how many statistics we should have. I went pretty far on these (but could go farther) or I could scale back.  Please take a look.  Here are some points to consider:\r\n* I added statistics around the 3 timestamp and transaction related rwlocks. I added contention statistics around only the write locks. I did add the 6 more stats for the fail/success of the read locks.\r\n* I committed the fail/success changes separately so we can choose to take/discard those entirely.\r\n* If someone adds another code path that acquires one of these locks, they need to remember to add the stats line too.  I could, but did not, add a macro for acquiring these rwlocks and bumping the stat. But even with the macro, someone would need to remember to use the macro instead of just `__wt_read/writelock`.  ",
        "base_ref": "develop",
        "created_at": "Thursday Nov 16, 2017 at 20:03 GMT",
        "updated_at": "Wednesday Dec 20, 2017 at 01:12 GMT",
        "closed_at": "Wednesday Dec 20, 2017 at 01:12 GMT",
        "merged_at": "Wednesday Dec 20, 2017 at 01:12 GMT"
    },
    {
        "key": "WT-3746",
        "number": 3791,
        "state": "closed",
        "title": "WT-3746 Add sleep if we need to wait for writes to complete.",
        "body": "@agorrod please review this small change.  With this 1 msec sleep it eliminates nearly all extraneous calls to `log_force_write`.  The tests I have run show no impact on performance and in MongoDB there is an independent thread calling log flush.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 15, 2017 at 19:43 GMT",
        "updated_at": "Thursday Nov 16, 2017 at 03:37 GMT",
        "closed_at": "Thursday Nov 16, 2017 at 03:37 GMT",
        "merged_at": "Thursday Nov 16, 2017 at 03:37 GMT"
    },
    {
        "key": "WT-3745",
        "number": 3790,
        "state": "closed",
        "title": "WT-3745 Don't allow an error late in commit path. Fix readonly check.",
        "body": "@michaelcahill Here are some changes that I made to address the issues I commented on in your branch.  The test runs to completion and shows some performance improvements (see ticket for details). This branch is forked off your branch.  Merge or discard as you see fit.",
        "base_ref": "wt-3745-favor-oplog-reads",
        "created_at": "Tuesday Nov 14, 2017 at 17:44 GMT",
        "updated_at": "Tuesday Nov 14, 2017 at 23:01 GMT",
        "closed_at": "Tuesday Nov 14, 2017 at 23:01 GMT",
        "merged_at": "Tuesday Nov 14, 2017 at 23:01 GMT"
    },
    {
        "key": "WT-3720",
        "number": 3789,
        "state": "closed",
        "title": "WT-3720 flags macros cast flags to unsigned values, hiding warnings.",
        "body": "@agorrod, @michaelcahill, based on the discussion in WT-3716, here's the first step.\r\n\r\nIf you agree this is a reasonable approach, I'll go ahead and do the rest of the work required for WT-3716 and WT-3720.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 14, 2017 at 16:07 GMT",
        "updated_at": "Friday Dec 08, 2017 at 03:23 GMT",
        "closed_at": "Friday Dec 08, 2017 at 03:23 GMT",
        "merged_at": "Friday Dec 08, 2017 at 03:23 GMT"
    },
    {
        "key": "WT-3745",
        "number": 3788,
        "state": "closed",
        "title": "WT-3745 Favor oplog reads when under cache pressure.",
        "body": "There are several behavior changes here to avoid situations where oplog\r\nreads can block when a primary is under severe cache update pressure.\r\nIn particular:\r\n* don't block if a scan encounters a large page;\r\n* don't stall reads when the dirty limit of cache is reached;\r\n* mark pages read from lookaside clean if it is safe to do so.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 14, 2017 at 06:26 GMT",
        "updated_at": "Friday Nov 17, 2017 at 04:30 GMT",
        "closed_at": "Friday Nov 17, 2017 at 04:30 GMT",
        "merged_at": "Friday Nov 17, 2017 at 04:30 GMT"
    },
    {
        "key": "WT-3444",
        "number": 3787,
        "state": "closed",
        "title": "WT-3444 Don't try to flush LSM if already in compact.",
        "body": "@agorrod Here are fixes for the LSM issue where an update sees an LSM cursor with read-only settings.  There really are three different but related fixes in here.  Please review this.  The fixes are:\r\n1.  In `wt_lsm_compact` we should hold the `lsm_tree` writelock until after we set the `WT_LSM_TREE_COMPACTING` flag. There could be a race with another compact and the existing code could end up with two threads in compact.\r\n2. The LSM alter code should do a full discard on the tree.  The code that was there was a \"mostly discard\" and that wasn't clean and left things in a weird state.  I modified that to discard to force a tree open after an alter.  The alter was forcing the tree to be fully flushed to disk.\r\n3. The LSM compact code should only push a flush work unit if the primary chunk isn't already stable.  This change is what really fixes the issue because if compact follows an alter, reopening the tree ends up with the primary chunk on disk and we want to proceed to the compact (i.e. the else clause).  We do not want to start a txn and force out a flush.\r\n\r\nBut you know LSM better than I do so please review this carefully.  The CONFIG in the ticket could reliably reproduce the bug in under 50 iterations and this ran for over 6000 over the weekend on PPC. ",
        "base_ref": "develop",
        "created_at": "Monday Nov 13, 2017 at 16:53 GMT",
        "updated_at": "Tuesday Nov 14, 2017 at 05:08 GMT",
        "closed_at": "Tuesday Nov 14, 2017 at 05:08 GMT",
        "merged_at": "Tuesday Nov 14, 2017 at 05:08 GMT"
    },
    {
        "key": "WT-3658",
        "number": 3786,
        "state": "closed",
        "title": "WT-3658 Fix the string length calculation when size is given",
        "body": "When the format 'S' is preceded by a size, that indicates the maximum number of\r\nbytes the string can store. This does not include the terminating NULL byte.\r\nHence strlen cannot be used to determine the length of the string. Instead use\r\ncustom version of strnlen.",
        "base_ref": "develop",
        "created_at": "Monday Nov 13, 2017 at 01:49 GMT",
        "updated_at": "Thursday Nov 23, 2017 at 05:52 GMT",
        "closed_at": "Thursday Nov 23, 2017 at 05:52 GMT",
        "merged_at": "Thursday Nov 23, 2017 at 05:52 GMT"
    },
    {
        "key": "WT-3743",
        "number": 3785,
        "state": "closed",
        "title": "WT-3743 In lookaside sweep, check btree IDs are in range.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 13, 2017 at 00:54 GMT",
        "updated_at": "Monday Nov 13, 2017 at 02:25 GMT",
        "closed_at": "Monday Nov 13, 2017 at 02:25 GMT",
        "merged_at": "Monday Nov 13, 2017 at 02:25 GMT"
    },
    {
        "key": "WT-3710",
        "number": 3784,
        "state": "closed",
        "title": "WT-3710 Get page-level lock to ensure single threaded page-split",
        "body": "When a page split is in progress it is possible to get another split on this\r\npage through its child in another thread. Acquire a page lock on the page\r\nundergoing the split to prevent concurrent split on same page.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 09, 2017 at 23:35 GMT",
        "updated_at": "Friday Nov 10, 2017 at 01:11 GMT",
        "closed_at": "Friday Nov 10, 2017 at 01:10 GMT",
        "merged_at": "Friday Nov 10, 2017 at 01:10 GMT"
    },
    {
        "key": "WT-3637",
        "number": 3783,
        "state": "closed",
        "title": "WT-3637 Heap use after free failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 09, 2017 at 22:00 GMT",
        "updated_at": "Friday Nov 10, 2017 at 01:42 GMT",
        "closed_at": "Friday Nov 10, 2017 at 01:42 GMT",
        "merged_at": "Friday Nov 10, 2017 at 01:42 GMT"
    },
    {
        "key": "WT-3648",
        "number": 3782,
        "state": "closed",
        "title": "WT-3648 Fix timestamp_abort test calculation of the oldest timestamp",
        "body": "@agorrod Please review.  This should fix the failure seen in `timestamp_abort` and fixes the similar usage in `test/format`.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 08, 2017 at 19:40 GMT",
        "updated_at": "Friday Nov 10, 2017 at 03:21 GMT",
        "closed_at": "Friday Nov 10, 2017 at 02:57 GMT",
        "merged_at": "Friday Nov 10, 2017 at 02:57 GMT"
    },
    {
        "key": "WT-3648",
        "number": 3781,
        "state": "closed",
        "title": "WT-3648 add debug information",
        "body": "@agorrod Here's a debug branch for the timestamp problem.  I have not been able to reproduce it (with or without this change). Since you were able to reproduce it locally, can you try this branch?  I added a couple asserts and record what value we set as the oldest and what thread had it on each iteration.  Next step might be to copy the th_ts array into the debug structure so we know what it looked like at the time we set the oldest.\r\n\r\nNot for merge.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 08, 2017 at 18:59 GMT",
        "updated_at": "Wednesday Nov 08, 2017 at 19:36 GMT",
        "closed_at": "Wednesday Nov 08, 2017 at 19:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3730",
        "number": 3780,
        "state": "closed",
        "title": "WT-3730 For simple tables, do not use table dhandle after it is released.",
        "body": "\r\nReverts \"WT-3555 Streamline open_cursor for simple tables. (#3637)\"\r\nThis reverts commit 982121f68b336eb58edfbae26300ef46935277b8.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 07, 2017 at 11:51 GMT",
        "updated_at": "Tuesday Nov 07, 2017 at 21:42 GMT",
        "closed_at": "Tuesday Nov 07, 2017 at 21:42 GMT",
        "merged_at": "Tuesday Nov 07, 2017 at 21:42 GMT"
    },
    {
        "key": "WT-3716",
        "number": 3779,
        "state": "closed",
        "title": "WT-3716 Out of bits for verbose flags",
        "body": "Make 64 bits available for verbose flags.",
        "base_ref": "develop",
        "created_at": "Friday Nov 03, 2017 at 07:36 GMT",
        "updated_at": "Saturday Nov 04, 2017 at 10:39 GMT",
        "closed_at": "Saturday Nov 04, 2017 at 10:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3133",
        "number": 3778,
        "state": "closed",
        "title": "WT-3133 Try to isolate Windows build failure more closely.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 03, 2017 at 00:20 GMT",
        "updated_at": "Friday Nov 10, 2017 at 01:00 GMT",
        "closed_at": "Friday Nov 10, 2017 at 01:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3715",
        "number": 3777,
        "state": "closed",
        "title": "WT-3715 Lookaside eviction tuning.",
        "body": "Multiple changes aimed at improving performance and decreasing stalls\r\nwhen applications keep more history than fits in cache.\r\n\r\n* Change the order of fields in lookaside keys so that writes to lookaside are mostly appends.\r\n\r\n* Allow splits when writing to lookaside.  This involved breaking a \"NO_EVICTION\" flag into two parts: (1) ignore the cache size, and (2) avoid splits.  There is a further \"NO_RECONCILE\" flag to prevent re-entry into reconciliation if writing to the lookaside table triggers eviction.\r\n\r\n* Support multiple lookaside sessions / cursors simultaneously (initially 5).\r\n\r\n* Don't count lookaside pages as part of the dirty content in cache. This means lookaside eviction unblocks operations more quickly (rather than moving dirty data from one page to another).  Prefer to evict lookaside pages as soon as possible unless operations are blocked by the dirty limit in cache.\r\n\r\n* Only sweep the lookaside table when dropping a table that had lookaside entries.  There can still be significant pauses during drop, so we should consider moving this work into the sweep thread and making it incremental.\r\n\r\n* Add statistics that indicate the range of pinned timestamps.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 02, 2017 at 03:51 GMT",
        "updated_at": "Friday Nov 10, 2017 at 03:25 GMT",
        "closed_at": "Friday Nov 10, 2017 at 03:25 GMT",
        "merged_at": "Friday Nov 10, 2017 at 03:25 GMT"
    },
    {
        "key": "WT-3675",
        "number": 3776,
        "state": "closed",
        "title": "WT-3675 Fix the lookaside info saved by reconciliation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 01, 2017 at 18:22 GMT",
        "updated_at": "Thursday Nov 02, 2017 at 00:58 GMT",
        "closed_at": "Thursday Nov 02, 2017 at 00:58 GMT",
        "merged_at": "Thursday Nov 02, 2017 at 00:58 GMT"
    },
    {
        "key": "WT-3713",
        "number": 3775,
        "state": "closed",
        "title": "WT-3713 Make timestamp abort test output more concise",
        "body": "@michaelcahill Here's a fix that makes the output from timestamp_abort more concise and readable. ",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 01, 2017 at 17:52 GMT",
        "updated_at": "Wednesday Nov 01, 2017 at 18:07 GMT",
        "closed_at": "Wednesday Nov 01, 2017 at 18:06 GMT",
        "merged_at": "Wednesday Nov 01, 2017 at 18:06 GMT"
    },
    {
        "key": "WT-3717",
        "number": 3774,
        "state": "closed",
        "title": "WT-3717 Add a verbose lookaside mode",
        "body": "This required removing the temporary lookaside option, since we are about to run out of bits in verbose flags.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 01, 2017 at 04:26 GMT",
        "updated_at": "Friday Nov 03, 2017 at 21:36 GMT",
        "closed_at": "Friday Nov 03, 2017 at 21:36 GMT",
        "merged_at": "Friday Nov 03, 2017 at 21:36 GMT"
    },
    {
        "key": "WT-3714",
        "number": 3773,
        "state": "closed",
        "title": "WT-3714 Make the data ranges easier to view.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 31, 2017 at 19:10 GMT",
        "updated_at": "Tuesday Oct 31, 2017 at 19:36 GMT",
        "closed_at": "Tuesday Oct 31, 2017 at 19:33 GMT",
        "merged_at": "Tuesday Oct 31, 2017 at 19:33 GMT"
    },
    {
        "key": "WT-3711",
        "number": 3772,
        "state": "closed",
        "title": "WT-3711 Add signal handler to random_abort.",
        "body": "@keithbostic Same change as yesterday added to the random_abort test program. Please review.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 31, 2017 at 14:28 GMT",
        "updated_at": "Tuesday Oct 31, 2017 at 15:08 GMT",
        "closed_at": "Tuesday Oct 31, 2017 at 15:08 GMT",
        "merged_at": "Tuesday Oct 31, 2017 at 15:08 GMT"
    },
    {
        "key": "WT-3705",
        "number": 3771,
        "state": "closed",
        "title": "WT-3705 Code style fixes, and remove debian packaging",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 31, 2017 at 01:29 GMT",
        "updated_at": "Thursday Nov 02, 2017 at 02:27 GMT",
        "closed_at": "Thursday Nov 02, 2017 at 02:27 GMT",
        "merged_at": "Thursday Nov 02, 2017 at 02:27 GMT"
    },
    {
        "key": "WT-3705",
        "number": 3770,
        "state": "closed",
        "title": "WT-3705 Full build Friday and lint",
        "body": "Reverts wiredtiger/wiredtiger#3765",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 31, 2017 at 01:23 GMT",
        "updated_at": "Tuesday Oct 31, 2017 at 01:28 GMT",
        "closed_at": "Tuesday Oct 31, 2017 at 01:28 GMT",
        "merged_at": "Tuesday Oct 31, 2017 at 01:28 GMT"
    },
    {
        "key": "WT-3707",
        "number": 3769,
        "state": "closed",
        "title": "WT-3707 Install signal handler to detect child unexpectedly failing.",
        "body": "@keithbostic Please review this change to `timestamp_abort` to install a signal handler.",
        "base_ref": "develop",
        "created_at": "Monday Oct 30, 2017 at 18:32 GMT",
        "updated_at": "Monday Oct 30, 2017 at 20:34 GMT",
        "closed_at": "Monday Oct 30, 2017 at 20:34 GMT",
        "merged_at": "Monday Oct 30, 2017 at 20:34 GMT"
    },
    {
        "key": "WT-3708",
        "number": 3768,
        "state": "closed",
        "title": "WT-3708 PRIu64 format incorrectly specified for size_t",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 30, 2017 at 16:06 GMT",
        "updated_at": "Monday Oct 30, 2017 at 18:31 GMT",
        "closed_at": "Monday Oct 30, 2017 at 18:31 GMT",
        "merged_at": "Monday Oct 30, 2017 at 18:31 GMT"
    },
    {
        "key": "WT-3708",
        "number": 3767,
        "state": "closed",
        "title": "WT-3708 Cast page->memory_footprint for debug statement.",
        "body": "@michaelcahill Please review this simple fix for the build problem.  @keithbostic you can too if you're still around.",
        "base_ref": "develop",
        "created_at": "Monday Oct 30, 2017 at 16:04 GMT",
        "updated_at": "Friday Nov 10, 2017 at 01:12 GMT",
        "closed_at": "Monday Oct 30, 2017 at 16:18 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3630",
        "number": 3766,
        "state": "closed",
        "title": "WT-3630 Send the test environment to \"make check\".",
        "body": "(It also invokes Python to sanitize the build).",
        "base_ref": "develop",
        "created_at": "Monday Oct 30, 2017 at 13:17 GMT",
        "updated_at": "Monday Oct 30, 2017 at 17:53 GMT",
        "closed_at": "Monday Oct 30, 2017 at 17:53 GMT",
        "merged_at": "Monday Oct 30, 2017 at 17:53 GMT"
    },
    {
        "key": "WT-3705",
        "number": 3765,
        "state": "closed",
        "title": "WT-3705 Full build Friday and lint",
        "body": "@agorrod, this is all random cleanup along with clang-tidy and clang50 warnings.\r\n\r\nThere are no bug fixes at all, the branch can be ignored as long as you like.",
        "base_ref": "develop",
        "created_at": "Saturday Oct 28, 2017 at 21:17 GMT",
        "updated_at": "Monday Oct 30, 2017 at 23:30 GMT",
        "closed_at": "Monday Oct 30, 2017 at 04:39 GMT",
        "merged_at": "Monday Oct 30, 2017 at 04:39 GMT"
    },
    {
        "key": "WT-3652",
        "number": 3764,
        "state": "closed",
        "title": "WT-3652 Skip unnecessary lookaside reads / writes",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 27, 2017 at 07:03 GMT",
        "updated_at": "Tuesday Oct 31, 2017 at 03:40 GMT",
        "closed_at": "Tuesday Oct 31, 2017 at 03:40 GMT",
        "merged_at": "Tuesday Oct 31, 2017 at 03:40 GMT"
    },
    {
        "key": "WT-3652",
        "number": 3763,
        "state": "closed",
        "title": "Revert \"WT-3652 Skip unnecessary lookaside reads / writes.\"",
        "body": "Reverts wiredtiger/wiredtiger#3744",
        "base_ref": "develop",
        "created_at": "Friday Oct 27, 2017 at 07:01 GMT",
        "updated_at": "Friday Oct 27, 2017 at 07:02 GMT",
        "closed_at": "Friday Oct 27, 2017 at 07:02 GMT",
        "merged_at": "Friday Oct 27, 2017 at 07:02 GMT"
    },
    {
        "key": "WT-3699",
        "number": 3762,
        "state": "closed",
        "title": "WT-3699 support minimum cache sizes in format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 26, 2017 at 19:20 GMT",
        "updated_at": "Friday Oct 27, 2017 at 02:48 GMT",
        "closed_at": "Friday Oct 27, 2017 at 02:48 GMT",
        "merged_at": "Friday Oct 27, 2017 at 02:48 GMT"
    },
    {
        "key": "WT-3695",
        "number": 3761,
        "state": "closed",
        "title": "WT-3695 format failed to report a stuck cache",
        "body": "@michaelcahill, a branch for your consideration, to catch another case where we're timing out rather than reporting cache stuck.\r\n\r\nThe workload in WT-3695 fails to report eviction is stuck because we're managing to write root pages and lookaside pages created during checkpoints, neither of which are actual progress, those pages are created in-memory.\r\n\r\nBecause there are a bunch of pages we create in memory (root or internal page splits, insert splits, root page reconciliations, and rebalance or salvage operations), I flipped the way we check for eviction progress. Instead of flagging if page eviction **doesn't** count as eviction progress, I flag if page eviction **should** count as eviction progress. It seems to me that if eviction progress isn't tied to page counts, it's safer and simpler to do it that way.\r\n\r\nI'm only counting eviction of pages we read without eviction disabled, or pages we created from those pages, as eviction progress. That seems right: if we haven't evicted a page we've read in 15 minutes, we're either not reading pages at all, or we're kind of done.\r\n\r\nBut... what about insert-only workloads, where all we're doing is appending new items and internally splitting and evicting those pages? I could set \"eviction progress\" on in-memory split pages as a special case (but exclude lookaside table inserts?), as long as there aren't a bunch more special cases in the future.\r\n\r\nThoughts?\r\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 26, 2017 at 13:30 GMT",
        "updated_at": "Monday Jan 15, 2018 at 14:36 GMT",
        "closed_at": "Monday Jan 15, 2018 at 14:36 GMT",
        "merged_at": "Monday Jan 15, 2018 at 14:36 GMT"
    },
    {
        "key": "WT-3696",
        "number": 3760,
        "state": "closed",
        "title": "WT-3696 Add checks to ensure session usage is single threaded.",
        "body": "This currently fails with at least test/fops - that will need to be fixed before the branch is merged.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 26, 2017 at 02:00 GMT",
        "updated_at": "Monday Nov 06, 2017 at 12:29 GMT",
        "closed_at": "Monday Nov 06, 2017 at 12:29 GMT",
        "merged_at": "Monday Nov 06, 2017 at 12:29 GMT"
    },
    {
        "key": "WT-3666",
        "number": 3759,
        "state": "closed",
        "title": "WT-3666 Fix lost updates with lookaside eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 25, 2017 at 16:51 GMT",
        "updated_at": "Friday Nov 10, 2017 at 01:12 GMT",
        "closed_at": "Thursday Oct 26, 2017 at 18:55 GMT",
        "merged_at": "Thursday Oct 26, 2017 at 18:55 GMT"
    },
    {
        "key": "WT-3693",
        "number": 3758,
        "state": "closed",
        "title": "WT-3693 Add a callback for when the all_committed timestamp changes.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 25, 2017 at 14:34 GMT",
        "updated_at": "Thursday Nov 30, 2017 at 14:17 GMT",
        "closed_at": "Thursday Nov 30, 2017 at 14:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3133",
        "number": 3757,
        "state": "closed",
        "title": "WT-3133 Track operations by default in database root",
        "body": "",
        "base_ref": "wt-3133-track-long-ops",
        "created_at": "Wednesday Oct 25, 2017 at 00:05 GMT",
        "updated_at": "Friday Oct 27, 2017 at 06:16 GMT",
        "closed_at": "Friday Oct 27, 2017 at 06:16 GMT",
        "merged_at": "Friday Oct 27, 2017 at 06:16 GMT"
    },
    {
        "key": "WT-3683",
        "number": 3756,
        "state": "closed",
        "title": "WT-3683 WT tests failing with cache full of clean pages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 24, 2017 at 20:47 GMT",
        "updated_at": "Tuesday Oct 24, 2017 at 21:09 GMT",
        "closed_at": "Tuesday Oct 24, 2017 at 21:09 GMT",
        "merged_at": "Tuesday Oct 24, 2017 at 21:09 GMT"
    },
    {
        "key": "WT-3677",
        "number": 3755,
        "state": "closed",
        "title": "WT-3677 test/format compaction doesn't handle timeout error return",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 24, 2017 at 19:44 GMT",
        "updated_at": "Tuesday Oct 24, 2017 at 22:36 GMT",
        "closed_at": "Tuesday Oct 24, 2017 at 22:36 GMT",
        "merged_at": "Tuesday Oct 24, 2017 at 22:36 GMT"
    },
    {
        "key": "WT-3683",
        "number": 3754,
        "state": "closed",
        "title": "WT-3683 Allow eviction of clean pages with history when cache is stuck.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 24, 2017 at 16:25 GMT",
        "updated_at": "Tuesday Oct 24, 2017 at 18:57 GMT",
        "closed_at": "Tuesday Oct 24, 2017 at 18:57 GMT",
        "merged_at": "Tuesday Oct 24, 2017 at 18:57 GMT"
    },
    {
        "key": "WT-3681",
        "number": 3753,
        "state": "closed",
        "title": "WT-3681 Don't truncate the last log file in recovery",
        "body": "@michaelcahill Please review this change.  The real fix is checking if `rd_lsn` is less than the `trunc_lsn`.  I also fixed verbose messages.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 24, 2017 at 13:55 GMT",
        "updated_at": "Wednesday Oct 25, 2017 at 16:51 GMT",
        "closed_at": "Tuesday Oct 24, 2017 at 18:53 GMT",
        "merged_at": "Tuesday Oct 24, 2017 at 18:53 GMT"
    },
    {
        "key": "WT-3680",
        "number": 3752,
        "state": "closed",
        "title": "WT-3680 metadata unroll should discard in-process checkpoints",
        "body": "Alex, I don't know what happened in BF-6928, but my guess is an operation did a checkpoint and then subsequently failed, and we don't clean up checkpoints when unrolling tracked operations.\r\n\r\nI've added code to do that, and I've also added code to panic if we fail to successfully either apply or unroll any set of tracked operations.",
        "base_ref": "develop",
        "created_at": "Monday Oct 23, 2017 at 21:38 GMT",
        "updated_at": "Wednesday Oct 25, 2017 at 00:44 GMT",
        "closed_at": "Wednesday Oct 25, 2017 at 00:43 GMT",
        "merged_at": "Wednesday Oct 25, 2017 at 00:43 GMT"
    },
    {
        "key": "WT-3679",
        "number": 3751,
        "state": "closed",
        "title": "WT-3679 When 'wt' fails in the test suite, display its output and error files",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 23, 2017 at 16:26 GMT",
        "updated_at": "Monday Oct 23, 2017 at 22:13 GMT",
        "closed_at": "Monday Oct 23, 2017 at 22:13 GMT",
        "merged_at": "Monday Oct 23, 2017 at 22:13 GMT"
    },
    {
        "key": "WT-3674",
        "number": 3750,
        "state": "closed",
        "title": "WT-3674 wiredtiger-test-spinlock #3916, snapshot isolation failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Oct 22, 2017 at 15:43 GMT",
        "updated_at": "Sunday Oct 22, 2017 at 16:04 GMT",
        "closed_at": "Sunday Oct 22, 2017 at 16:03 GMT",
        "merged_at": "Sunday Oct 22, 2017 at 16:03 GMT"
    },
    {
        "key": "WT-3630",
        "number": 3749,
        "state": "closed",
        "title": "WT-3630 Avoid the system Python binary on Evergreen.",
        "body": "The System Integrity Protection feature of macOS means DYLD_LIBRARY_PATH is ignored for /usr/bin/python, so choose another by default.  Luckily there is a Python binary included in MongoDB's toolchain, so prefer than unless overridden.",
        "base_ref": "develop",
        "created_at": "Friday Oct 20, 2017 at 01:11 GMT",
        "updated_at": "Thursday Oct 26, 2017 at 23:56 GMT",
        "closed_at": "Thursday Oct 26, 2017 at 23:56 GMT",
        "merged_at": "Thursday Oct 26, 2017 at 23:56 GMT"
    },
    {
        "key": "WT-3235",
        "number": 3748,
        "state": "closed",
        "title": "WT-3235 LSM cursor handling on error, code review",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 19, 2017 at 01:17 GMT",
        "updated_at": "Thursday Oct 19, 2017 at 03:25 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 03:25 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 03:25 GMT"
    },
    {
        "key": "WT-3672",
        "number": 3747,
        "state": "closed",
        "title": "WT-3672 Test format failure with commit timestamp older than oldest timestamp",
        "body": "FTR, I can't reproduce this one, but I think there is a way format can race.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 18, 2017 at 23:03 GMT",
        "updated_at": "Thursday Oct 19, 2017 at 05:42 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 05:42 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 05:42 GMT"
    },
    {
        "key": "WT-3673",
        "number": 3746,
        "state": "closed",
        "title": "WT-3673 opening the lookaside table can race with the statistics server",
        "body": "@michaelcahill, @agorrod, I was thinking we might want to do something to avoid introducing this kind of race in the future. \r\n\r\nI was wondering about something similar to what we do on WiredTiger close with the `WT_CONN_CLOSING` flag. We could add a `WT_CONN_OPENING` flag that's initially set,\r\nand change the servers to not execute their work loops until that flag is cleared?",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 18, 2017 at 16:15 GMT",
        "updated_at": "Monday Oct 23, 2017 at 13:21 GMT",
        "closed_at": "Sunday Oct 22, 2017 at 23:43 GMT",
        "merged_at": "Sunday Oct 22, 2017 at 23:43 GMT"
    },
    {
        "key": "WT-3616",
        "number": 3745,
        "state": "closed",
        "title": "WT-3616 format failed to report a stuck cache",
        "body": "@agorrod, there are two changes here.\r\n\r\n48cc54c sets a flag when a page is read on behalf of checkpoint, and then doesn't count evicting that page towards eviction progress. I am hesitant to not count \"normal\" eviction of metadata or lookaside pages towards eviction progress, it's not impossible that those pages could consume a reasonable piece of the cache and evicting them could be progress. So instead, I don't count the eviction of pages read on behalf of a checkpoint as eviction progress. (To be clear, I'm not excited about this approach, and it's a special case I'd rather not have, I just couldn't think of anything I liked better.)\r\n\r\n4d8c187 restructures `__evict_server()` to remove the `WT_CACHE.pages_evicted` field.  In summary, I think `WT_CACHE.pages_evicted` can be more replaced with comparing the value of `WT_CACHE.pages_evict` when `__evict_server()` is entered, against its current value when evaluating if work has been done. The original code was relatively tricky though, I might have missed something.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 18, 2017 at 15:17 GMT",
        "updated_at": "Friday Oct 20, 2017 at 05:29 GMT",
        "closed_at": "Friday Oct 20, 2017 at 05:29 GMT",
        "merged_at": "Friday Oct 20, 2017 at 05:29 GMT"
    },
    {
        "key": "WT-3652",
        "number": 3744,
        "state": "closed",
        "title": "WT-3652 Skip unnecessary lookaside reads / writes.",
        "body": "Also fix reads during checkpoint so the expected read generation is set, and checkpoint can attempt to clean up after itself.\r\n\r\nAdd a \"lookaside_score\" measuring the proportion of unstable updates in cache (those required for historic reads), use that to determine when to use the lookaside table rather than waiting for the cache to become stuck.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 18, 2017 at 06:27 GMT",
        "updated_at": "Friday Oct 27, 2017 at 07:02 GMT",
        "closed_at": "Friday Oct 27, 2017 at 04:36 GMT",
        "merged_at": "Friday Oct 27, 2017 at 04:36 GMT"
    },
    {
        "key": "WT-3662",
        "number": 3743,
        "state": "closed",
        "title": "WT-3662 Write lookaside after reconciliation has succeeded.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 17, 2017 at 13:10 GMT",
        "updated_at": "Tuesday Oct 17, 2017 at 13:43 GMT",
        "closed_at": "Tuesday Oct 17, 2017 at 13:43 GMT",
        "merged_at": "Tuesday Oct 17, 2017 at 13:43 GMT"
    },
    {
        "key": "WT-3669",
        "number": 3742,
        "state": "closed",
        "title": "WT-3669 Check for aborted updates during reconciliation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 17, 2017 at 06:17 GMT",
        "updated_at": "Wednesday Oct 25, 2017 at 16:51 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 06:01 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 06:01 GMT"
    },
    {
        "key": "WT-3667",
        "number": 3741,
        "state": "closed",
        "title": "WT-3667 fix timestamp tests to backup with log archive set to false",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 17, 2017 at 01:06 GMT",
        "updated_at": "Thursday Oct 19, 2017 at 15:53 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 15:52 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 15:52 GMT"
    },
    {
        "key": "WT-3665",
        "number": 3740,
        "state": "closed",
        "title": "WT-3665 change format to configure the WiredTiger checkpoint thread",
        "body": "@sueloverso, the reason I wanted a review from you is the library checkpoint configuration.\r\n\r\nWhen configuring the library checkpoint thread, I'm waiting between 1 and 20 MB of log file between checkpoints (max 1024MB), and between 5 and 100 seconds (max 3600). Does that sound reasonable to you?\r\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 15, 2017 at 15:19 GMT",
        "updated_at": "Monday Oct 16, 2017 at 15:51 GMT",
        "closed_at": "Monday Oct 16, 2017 at 15:51 GMT",
        "merged_at": "Monday Oct 16, 2017 at 15:51 GMT"
    },
    {
        "key": "WT-3663",
        "number": 3739,
        "state": "closed",
        "title": "WT-3663 lookaside records ignored unless a backing disk block written",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Oct 14, 2017 at 19:00 GMT",
        "updated_at": "Tuesday Oct 17, 2017 at 02:12 GMT",
        "closed_at": "Monday Oct 16, 2017 at 03:27 GMT",
        "merged_at": "Monday Oct 16, 2017 at 03:27 GMT"
    },
    {
        "key": "WT-3662",
        "number": 3738,
        "state": "closed",
        "title": "WT-3662 Write lookaside after reconciliation has succeeded.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 22:35 GMT",
        "updated_at": "Tuesday Oct 17, 2017 at 02:12 GMT",
        "closed_at": "Monday Oct 16, 2017 at 06:47 GMT",
        "merged_at": "Monday Oct 16, 2017 at 06:47 GMT"
    },
    {
        "key": "WT-3660",
        "number": 3737,
        "state": "closed",
        "title": "WT-3660 WiredTiger documentation refers to WT_CURSOR::first.",
        "body": "That method is no longer available, replaced by WT_CURSOR::reset.",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 16:53 GMT",
        "updated_at": "Friday Oct 13, 2017 at 18:48 GMT",
        "closed_at": "Friday Oct 13, 2017 at 18:48 GMT",
        "merged_at": "Friday Oct 13, 2017 at 18:48 GMT"
    },
    {
        "key": "WT-3657",
        "number": 3736,
        "state": "closed",
        "title": "WT-3657 Timestamp and lookaside related automated test failures",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 15:30 GMT",
        "updated_at": "Friday Oct 13, 2017 at 16:02 GMT",
        "closed_at": "Friday Oct 13, 2017 at 16:02 GMT",
        "merged_at": "Friday Oct 13, 2017 at 16:02 GMT"
    },
    {
        "key": "WT-3657",
        "number": 3735,
        "state": "closed",
        "title": "WT-3657 Use saved update size for splits, don't grow raw buffer.",
        "body": "Previously, we would split pages once reconciliation saw 100 saved updates.  Apart from suffering from the same problems as other naive split approaches (e.g., creating a new page with a single saved update each time a new insert plus eviction happens), the previous approach also doubled the size of the buffer passed to raw compression each time splits were triggered by the saved update count, leading to attempts to allocate unexpectedly large amounts of memory.",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 07:44 GMT",
        "updated_at": "Friday Oct 13, 2017 at 13:18 GMT",
        "closed_at": "Friday Oct 13, 2017 at 13:18 GMT",
        "merged_at": "Friday Oct 13, 2017 at 13:18 GMT"
    },
    {
        "key": "WT-3657",
        "number": 3734,
        "state": "closed",
        "title": "WT-3657 Revert transaction changes for lookaside updates.",
        "body": "Specifically, reverts most of WT-3645 (#3725).",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 07:32 GMT",
        "updated_at": "Tuesday Oct 17, 2017 at 06:16 GMT",
        "closed_at": "Tuesday Oct 17, 2017 at 06:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3598",
        "number": 3733,
        "state": "closed",
        "title": "WT-3598 Open cursor not to set txn error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 03:54 GMT",
        "updated_at": "Friday Oct 20, 2017 at 04:58 GMT",
        "closed_at": "Friday Oct 20, 2017 at 04:58 GMT",
        "merged_at": "Friday Oct 20, 2017 at 04:58 GMT"
    },
    {
        "key": "WT-3655",
        "number": 3732,
        "state": "closed",
        "title": "WT-3655 Don't dirty pages to induce lookaside eviction.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 01:08 GMT",
        "updated_at": "Friday Oct 13, 2017 at 01:26 GMT",
        "closed_at": "Friday Oct 13, 2017 at 01:26 GMT",
        "merged_at": "Friday Oct 13, 2017 at 01:26 GMT"
    },
    {
        "key": "WT-3553",
        "number": 3731,
        "state": "closed",
        "title": "WT-3553 Change testutil_die to abort rather than exit",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 00:31 GMT",
        "updated_at": "Friday Oct 13, 2017 at 14:17 GMT",
        "closed_at": "Friday Oct 13, 2017 at 14:17 GMT",
        "merged_at": "Friday Oct 13, 2017 at 14:17 GMT"
    },
    {
        "key": "WT-3223",
        "number": 3730,
        "state": "closed",
        "title": "WT-3223 Checkpoint progress messages",
        "body": "During a database checkpoint, output verbose progress messages indicating the the cumulative amount of pages synced every 20 seconds",
        "base_ref": "develop",
        "created_at": "Friday Oct 13, 2017 at 00:13 GMT",
        "updated_at": "Wednesday Oct 25, 2017 at 00:45 GMT",
        "closed_at": "Wednesday Oct 25, 2017 at 00:45 GMT",
        "merged_at": "Wednesday Oct 25, 2017 at 00:45 GMT"
    },
    {
        "key": "WT-3650",
        "number": 3729,
        "state": "closed",
        "title": "WT-3650 Fix minimum timestamp tracking in lookaside.",
        "body": "Previously, the minimum timestamp was tracked incorrectly, which meant that checkpoints as-of a timestamp would incorrectly skip some pages with lookaside entries.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 12, 2017 at 11:27 GMT",
        "updated_at": "Thursday Oct 12, 2017 at 13:02 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 13:02 GMT",
        "merged_at": "Thursday Oct 12, 2017 at 13:02 GMT"
    },
    {
        "key": "WT-3651",
        "number": 3728,
        "state": "closed",
        "title": "WT-3651 Shorten runtime for Python lookaside test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 12, 2017 at 09:45 GMT",
        "updated_at": "Friday Oct 13, 2017 at 00:39 GMT",
        "closed_at": "Friday Oct 13, 2017 at 00:39 GMT",
        "merged_at": "Friday Oct 13, 2017 at 00:39 GMT"
    },
    {
        "key": "WT-3646",
        "number": 3727,
        "state": "closed",
        "title": "WT-3646 Revert a change to rec_write.c that broke lookaside testing.",
        "body": "Which is setting a timestamp for lookaside evictions.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 12, 2017 at 09:44 GMT",
        "updated_at": "Thursday Oct 12, 2017 at 11:28 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 11:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3646",
        "number": 3726,
        "state": "closed",
        "title": "WT-3646 Don't trigger eviction from checkpoints in write heavy workloads",
        "body": "Previously, checkpoint attempted to push out any page requiring forced eviction.  With this change, pages read into cache by checkpoint are marked with a different read generation, so that checkpoint can distinguish between pages it read (from lookaside) and big / hot pages that happen to be in cache when a checkpoint runs.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 12, 2017 at 01:27 GMT",
        "updated_at": "Thursday Oct 12, 2017 at 04:27 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 04:26 GMT",
        "merged_at": "Thursday Oct 12, 2017 at 04:26 GMT"
    },
    {
        "key": "WT-3645",
        "number": 3725,
        "state": "closed",
        "title": "WT-3645 Allow eviction of lookaside pages as soon as writes commit.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 12, 2017 at 00:41 GMT",
        "updated_at": "Thursday Oct 12, 2017 at 04:25 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 04:25 GMT",
        "merged_at": "Thursday Oct 12, 2017 at 04:25 GMT"
    },
    {
        "key": "WT-3649",
        "number": 3724,
        "state": "closed",
        "title": "WT-3649 Disable lookaside eviction during close.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 12, 2017 at 00:14 GMT",
        "updated_at": "Thursday Oct 12, 2017 at 04:18 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 04:18 GMT",
        "merged_at": "Thursday Oct 12, 2017 at 04:18 GMT"
    },
    {
        "key": "WT-3646",
        "number": 3723,
        "state": "closed",
        "title": "WT-3646 Improve performance when lookaside eviction is required.",
        "body": "In particular,\r\n* fix the optimization for checkpoints so most lookaside pages can be skipped when the stable timestamp is lagging.\r\n* allow row store leaf pages to split when evicting and no values are visible (currently using a dumb heuristic of splitting as soon as 100 records need updates saved).\r\n* allow use of lookaside and splits when checkpoints do eviction.",
        "base_ref": "wt-3646-less-lookaside",
        "created_at": "Wednesday Oct 11, 2017 at 10:04 GMT",
        "updated_at": "Thursday Oct 12, 2017 at 05:07 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 05:07 GMT",
        "merged_at": "Thursday Oct 12, 2017 at 05:07 GMT"
    },
    {
        "key": "WT-3646",
        "number": 3722,
        "state": "closed",
        "title": "WT-3646 Only use lookaside when operations are blocked waiting for cache",
        "body": "We recently changed eviction to try using the lookaside table sooner. For some workloads, this can lead to poor performance and runaway growth in the lookaside table size.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 11, 2017 at 03:55 GMT",
        "updated_at": "Thursday Oct 12, 2017 at 21:14 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 05:45 GMT",
        "merged_at": "Thursday Oct 12, 2017 at 05:45 GMT"
    },
    {
        "key": "WT-3585",
        "number": 3721,
        "state": "closed",
        "title": "WT-3585 round up read timestamp to oldest",
        "body": "Added test in test_timestamp03.py",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 11, 2017 at 00:55 GMT",
        "updated_at": "Friday Oct 20, 2017 at 05:08 GMT",
        "closed_at": "Friday Oct 20, 2017 at 05:08 GMT",
        "merged_at": "Friday Oct 20, 2017 at 05:08 GMT"
    },
    {
        "key": "WT-3643",
        "number": 3720,
        "state": "closed",
        "title": "WT-3643 Set panic on error path if recovery needed.",
        "body": "@michaelcahill Please review this.  There is explanation in the ticket as well.  Basically on the error path out of wiredtiger_open, we were checkpointing the metadata file, updating the checkpoint LSN causing us to ignore and never recover the data.  This is one approach, because having panic set means we discard the dhandle.  Given it is the error path of `wiredtiger_open` it seemed cleaner than drilling more special case connection checking down into the dhandle code.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 10, 2017 at 20:10 GMT",
        "updated_at": "Thursday Oct 19, 2017 at 01:20 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 01:20 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 01:20 GMT"
    },
    {
        "key": "WT-3644",
        "number": 3719,
        "state": "closed",
        "title": "WT-3644 Port to FreeBSD release 11.1",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 10, 2017 at 18:12 GMT",
        "updated_at": "Wednesday Oct 11, 2017 at 10:51 GMT",
        "closed_at": "Wednesday Oct 11, 2017 at 10:51 GMT",
        "merged_at": "Wednesday Oct 11, 2017 at 10:51 GMT"
    },
    {
        "key": "WT-3257",
        "number": 3718,
        "state": "closed",
        "title": "WT-3257 Add test for log=recover settings",
        "body": "@agorrod Please review this new test.  It uncovered a bug, tracked in WT-3643. That line is commented out in this test for now.  This is ready to merge.",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 10, 2017 at 16:13 GMT",
        "updated_at": "Thursday Oct 19, 2017 at 16:31 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 16:31 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 16:31 GMT"
    },
    {
        "key": "WT-3642",
        "number": 3717,
        "state": "closed",
        "title": "WT-3642 Use calculated walk flags consistently when closing a tree.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 10, 2017 at 02:43 GMT",
        "updated_at": "Tuesday Oct 10, 2017 at 04:57 GMT",
        "closed_at": "Tuesday Oct 10, 2017 at 04:57 GMT",
        "merged_at": "Tuesday Oct 10, 2017 at 04:57 GMT"
    },
    {
        "key": "WT-3296",
        "number": 3716,
        "state": "closed",
        "title": "WT-3296 BACKPORT-1135 Port LAS improvements to mongodb-3.4",
        "body": "cherry pick b9bfe41b26db9acb53d37f5919b7d2bbe29db275 into mongodb-3.4",
        "base_ref": "mongodb-3.4",
        "created_at": "Tuesday Oct 10, 2017 at 00:45 GMT",
        "updated_at": "Tuesday Oct 17, 2017 at 21:20 GMT",
        "closed_at": "Tuesday Oct 17, 2017 at 21:20 GMT",
        "merged_at": "Tuesday Oct 17, 2017 at 21:20 GMT"
    },
    {
        "key": "WT-3611",
        "number": 3715,
        "state": "closed",
        "title": "WT-3611 Backup comment doesn't match the code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 09, 2017 at 21:17 GMT",
        "updated_at": "Friday Oct 13, 2017 at 01:23 GMT",
        "closed_at": "Friday Oct 13, 2017 at 01:23 GMT",
        "merged_at": "Friday Oct 13, 2017 at 01:23 GMT"
    },
    {
        "key": "WT-3640",
        "number": 3714,
        "state": "closed",
        "title": "WT-3640 Change bytes-read statistic.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 09, 2017 at 11:40 GMT",
        "updated_at": "Wednesday Oct 25, 2017 at 16:51 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 01:18 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 01:18 GMT"
    },
    {
        "key": "WT-3638",
        "number": 3713,
        "state": "closed",
        "title": "WT-3638 When restoring updates, don't discard on-page tombstones.",
        "body": "Reconciliation selects an update as the \"on-page\" version that is correct as-of the reconciliation.  If that update is a tombstone, no value will appear on the page.  Our API permits a modify of a deleted record, so we can't discard a tombstone if it was chosen as the on-page update, or a later modify update will have no starting value.",
        "base_ref": "develop",
        "created_at": "Monday Oct 09, 2017 at 05:35 GMT",
        "updated_at": "Monday Oct 09, 2017 at 23:02 GMT",
        "closed_at": "Monday Oct 09, 2017 at 23:02 GMT",
        "merged_at": "Monday Oct 09, 2017 at 23:02 GMT"
    },
    {
        "key": "WT-3640",
        "number": 3712,
        "state": "closed",
        "title": "Revert \"WT-3640 Fix bytes-read and bytes-written statistics.\"",
        "body": "Reverts wiredtiger/wiredtiger#3706",
        "base_ref": "develop",
        "created_at": "Monday Oct 09, 2017 at 03:35 GMT",
        "updated_at": "Monday Oct 09, 2017 at 03:35 GMT",
        "closed_at": "Monday Oct 09, 2017 at 03:35 GMT",
        "merged_at": "Monday Oct 09, 2017 at 03:35 GMT"
    },
    {
        "key": "WT-3642",
        "number": 3711,
        "state": "closed",
        "title": "WT-3642 Avoid lookaside reads for dead trees.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 09, 2017 at 01:31 GMT",
        "updated_at": "Monday Oct 09, 2017 at 03:09 GMT",
        "closed_at": "Monday Oct 09, 2017 at 03:08 GMT",
        "merged_at": "Monday Oct 09, 2017 at 03:08 GMT"
    },
    {
        "key": "WT-3641",
        "number": 3710,
        "state": "closed",
        "title": "WT-3641 Track maximum timestamp used in each btree.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Oct 08, 2017 at 23:35 GMT",
        "updated_at": "Monday Oct 09, 2017 at 01:09 GMT",
        "closed_at": "Monday Oct 09, 2017 at 01:09 GMT",
        "merged_at": "Monday Oct 09, 2017 at 01:09 GMT"
    },
    {
        "key": "WT-3622",
        "number": 3709,
        "state": "closed",
        "title": "WT-3622 Allow upper case hexadecimal timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Oct 08, 2017 at 22:28 GMT",
        "updated_at": "Sunday Oct 08, 2017 at 23:24 GMT",
        "closed_at": "Sunday Oct 08, 2017 at 23:24 GMT",
        "merged_at": "Sunday Oct 08, 2017 at 23:24 GMT"
    },
    {
        "key": "WT-3627",
        "number": 3708,
        "state": "closed",
        "title": "WT-3627 test_txn14.test_txn14.test_log_flush timeout",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Oct 08, 2017 at 16:22 GMT",
        "updated_at": "Monday Oct 09, 2017 at 11:58 GMT",
        "closed_at": "Sunday Oct 08, 2017 at 21:17 GMT",
        "merged_at": "Sunday Oct 08, 2017 at 21:17 GMT"
    },
    {
        "key": "WT-3619",
        "number": 3707,
        "state": "closed",
        "title": "WT-3619 compaction interactions with checkpoints and eviction.",
        "body": "@michaelcahill, a possible approach for your consideration that makes the test case run.\r\n\r\n* Of the changes, it might not be necessary to quit compaction if eviction is stuck. I didn't test it extensively, but not tapping the compaction thread to do eviction plus allowing checkpoints to interrupt compaction, appeared sufficient to fix the specific test case (at least, it didn't fail as quickly). Also note, the code in this branch allows eviction to starve compaction. That said, I think there are reasons compaction is a bad idea if there's eviction pressure and I can live with it if you and @agorrod can.\r\n\r\n* This branch changes compaction to take/release the WT_BTREE handle flush-lock on every page it reviews. I don't expect that lock to be a contentious operation since checkpoint is the only other thread that takes it  (and if it is contentious, the first collision will stop compaction from trying again). If it's a problem, we could switch to read/write locks instead and/or we could acquire the lock on every N pages that compaction reviews.\r\n\r\n* I used `__wt_eviction_needed` instead of `__wt_cache_stuck` to measure eviction's state because I didn't want to wait until eviction was totally screwed -- but that might not be the right thing to do.\r\n\r\n* This doesn't help LSM, it has completely different code (using LSM merges) for compaction. I didn't look at whether or not LSM has similar problems to Btree.",
        "base_ref": "develop",
        "created_at": "Sunday Oct 08, 2017 at 15:30 GMT",
        "updated_at": "Friday Oct 13, 2017 at 04:49 GMT",
        "closed_at": "Friday Oct 13, 2017 at 04:49 GMT",
        "merged_at": "Friday Oct 13, 2017 at 04:49 GMT"
    },
    {
        "key": "WT-3640",
        "number": 3706,
        "state": "closed",
        "title": "WT-3640 Fix bytes-read and bytes-written statistics.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Oct 07, 2017 at 21:10 GMT",
        "updated_at": "Monday Oct 09, 2017 at 03:36 GMT",
        "closed_at": "Monday Oct 09, 2017 at 03:10 GMT",
        "merged_at": "Monday Oct 09, 2017 at 03:10 GMT"
    },
    {
        "key": "WT-3639",
        "number": 3705,
        "state": "closed",
        "title": "WT-3639 format tried to drop checkpoints during a hot backup",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Oct 07, 2017 at 12:20 GMT",
        "updated_at": "Sunday Oct 08, 2017 at 21:08 GMT",
        "closed_at": "Sunday Oct 08, 2017 at 21:08 GMT",
        "merged_at": "Sunday Oct 08, 2017 at 21:08 GMT"
    },
    {
        "key": "WT-3629",
        "number": 3704,
        "state": "closed",
        "title": "WT-3629 cache underflow and logging",
        "body": "@michaelcahill, this branch is ready for review, but mostly just to give us something concrete to talk about.\r\n\r\nThere are 4 changes:\r\n* 3fc6a3c: `__wt_cache_bytes_other` needs to protect against underflow and it wasn't doing that. I fixed it by changing the reads to use `volatile`. I know you prefer setting variables to volatile instead of casting, but that will be a more invasive change because there are general routines that take `WT_CACHE` fields for update, and we'd have to create volatile versions of those functions and/or change many (most?) of the `WT_CACHE` fields to volatile. (For the record, I don't think setting more `WT_CACHE` fields to volatile is necessarily a bad idea.)\r\n\r\n* 1aae727: the `__wt_cache_decr_XXX` functions were detecting overflow by doing an atomic decrement and checking for underflow. AFAICT, `__sync_sub_and_fetch` isn't going to be slower than `__sync_val_compare_and_swap` on platforms we care about, and I think it's a safer/cleaner approach.\r\n\r\n* 1aae727: the `__wt_cache_decr_XXX` functions were only logging failure in `HAVE_DIAGNOSTIC` mode, and the HELP-5066 ticket made me think we should log the error in all cases. The previous code tried to avoid logging field underflow more than once, and I removed that -- in this code, we'll log every underflow of a value. If that's a bad idea, we can switch it to once a second or something. (Although the previous approach doesn't work; it used a static in the inline function, and static variables in inline functions always refer to the same object.)\r\n\r\n* c0b0cd2: there was a special case function `__wt_cache_decr_zero_uint64` that reset values to 0 after any underflow. As this branch won't underflow the variable, I don't think that function is needed, I think we can use `__wt_cache_decr_check_uint64` instead.",
        "base_ref": "develop",
        "created_at": "Friday Oct 06, 2017 at 19:45 GMT",
        "updated_at": "Friday Oct 20, 2017 at 13:14 GMT",
        "closed_at": "Friday Oct 20, 2017 at 13:14 GMT",
        "merged_at": "Friday Oct 20, 2017 at 13:14 GMT"
    },
    {
        "key": "WT-3636",
        "number": 3703,
        "state": "closed",
        "title": "WT-3636 Account for page image sizes in cache consistently",
        "body": "@agorrod, @michaelcahill, I did some review today based on talking to Bruce Lucas about HELP-5066, and found a couple of problems in our page-image accounting. I don't believe this would lead to eviction problems, but in the presence of mapped files, I think our statistics for page-image bytes would grow without bound.",
        "base_ref": "develop",
        "created_at": "Friday Oct 06, 2017 at 16:09 GMT",
        "updated_at": "Monday Oct 09, 2017 at 03:48 GMT",
        "closed_at": "Monday Oct 09, 2017 at 03:48 GMT",
        "merged_at": "Monday Oct 09, 2017 at 03:48 GMT"
    },
    {
        "key": "WT-3635",
        "number": 3702,
        "state": "closed",
        "title": "WT-3635 Coverity 1381606 & Friday builds & lint.",
        "body": "@sulabhM, would you be kind enough to do the review?\r\n\r\nThe individual commits should be descriptive and easier than reviewing the changes as a whole.",
        "base_ref": "develop",
        "created_at": "Friday Oct 06, 2017 at 13:49 GMT",
        "updated_at": "Tuesday Oct 17, 2017 at 10:40 GMT",
        "closed_at": "Tuesday Oct 17, 2017 at 10:40 GMT",
        "merged_at": "Tuesday Oct 17, 2017 at 10:40 GMT"
    },
    {
        "key": "WT-3631",
        "number": 3701,
        "state": "closed",
        "title": "WT-3631 Convert timestamps to integers before comparing.",
        "body": "",
        "base_ref": "wt-3631-stripzero",
        "created_at": "Friday Oct 06, 2017 at 04:13 GMT",
        "updated_at": "Friday Oct 06, 2017 at 05:35 GMT",
        "closed_at": "Friday Oct 06, 2017 at 05:35 GMT",
        "merged_at": "Friday Oct 06, 2017 at 05:35 GMT"
    },
    {
        "key": "WT-3631",
        "number": 3700,
        "state": "closed",
        "title": "WT-3631 strip leading zeroes from timestamps before comparing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 06, 2017 at 03:53 GMT",
        "updated_at": "Friday Oct 06, 2017 at 05:43 GMT",
        "closed_at": "Friday Oct 06, 2017 at 05:39 GMT",
        "merged_at": "Friday Oct 06, 2017 at 05:39 GMT"
    },
    {
        "key": "WT-0000",
        "number": 3699,
        "state": "closed",
        "title": "WT-0000 test pull req: should fail for timestamp size 16",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 06, 2017 at 00:54 GMT",
        "updated_at": "Friday Oct 06, 2017 at 01:25 GMT",
        "closed_at": "Friday Oct 06, 2017 at 01:25 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3628",
        "number": 3698,
        "state": "closed",
        "title": "WT-3628 Fix function and macro usage for new assert flags.",
        "body": "Going to run on the failing job too.  When that passes then it will be ready for review.",
        "base_ref": "develop",
        "created_at": "Thursday Oct 05, 2017 at 14:54 GMT",
        "updated_at": "Friday Oct 06, 2017 at 12:42 GMT",
        "closed_at": "Friday Oct 06, 2017 at 12:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3582",
        "number": 3697,
        "state": "closed",
        "title": "WT-3582 Move test/format checkpoints to a dedicated thread.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 05, 2017 at 06:28 GMT",
        "updated_at": "Thursday Oct 05, 2017 at 23:59 GMT",
        "closed_at": "Thursday Oct 05, 2017 at 13:04 GMT",
        "merged_at": "Thursday Oct 05, 2017 at 13:04 GMT"
    },
    {
        "key": "WT-3596",
        "number": 3696,
        "state": "closed",
        "title": "WT-3596 Make improvements to timestamp documentation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 05, 2017 at 05:28 GMT",
        "updated_at": "Thursday Oct 19, 2017 at 01:04 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 01:04 GMT",
        "merged_at": "Thursday Oct 19, 2017 at 01:04 GMT"
    },
    {
        "key": "WT-3600",
        "number": 3695,
        "state": "closed",
        "title": "WT-3600 validate timestamps to be lowercase hex",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 05, 2017 at 00:26 GMT",
        "updated_at": "Thursday Oct 05, 2017 at 02:08 GMT",
        "closed_at": "Thursday Oct 05, 2017 at 02:08 GMT",
        "merged_at": "Thursday Oct 05, 2017 at 02:08 GMT"
    },
    {
        "key": "WT-3612",
        "number": 3694,
        "state": "closed",
        "title": "WT-3612 backup cursors and checkpoint durability can lose committed data",
        "body": "Cross-document the issues with backup cursors and checkpoint durability.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 04, 2017 at 20:12 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 20:34 GMT",
        "closed_at": "Wednesday Oct 04, 2017 at 20:34 GMT",
        "merged_at": "Wednesday Oct 04, 2017 at 20:34 GMT"
    },
    {
        "key": "WT-3621",
        "number": 3693,
        "state": "closed",
        "title": "WT-3621 Add a new test for a full backup followed by a table create.",
        "body": "@agorrod Please review this new test.  It was a scenario we didn't test that came out of discussions about backup and schema operations.  The good news is that we pass gracefully and we don't have a bug that would cause recovery to fail.  We already test drop and rename in another test but not explicitly create like this.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 04, 2017 at 19:18 GMT",
        "updated_at": "Thursday Oct 05, 2017 at 02:25 GMT",
        "closed_at": "Thursday Oct 05, 2017 at 02:25 GMT",
        "merged_at": "Thursday Oct 05, 2017 at 02:25 GMT"
    },
    {
        "key": "WT-0000",
        "number": 3692,
        "state": "closed",
        "title": "WT-0000 Test",
        "body": "Just testing !!",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 04, 2017 at 18:14 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 18:21 GMT",
        "closed_at": "Wednesday Oct 04, 2017 at 18:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3435",
        "number": 3691,
        "state": "closed",
        "title": "WT-3435 lookaside with timestamps lookaside cursor",
        "body": "@michaelcahill, some suggested changes from review, the individual commits should be descriptive.\r\n\r\nFeel free to discard/cherry-pick without further discussion.",
        "base_ref": "wt-3435-lookaside-with-timestamps",
        "created_at": "Wednesday Oct 04, 2017 at 14:22 GMT",
        "updated_at": "Thursday Oct 05, 2017 at 00:50 GMT",
        "closed_at": "Thursday Oct 05, 2017 at 00:49 GMT",
        "merged_at": "Thursday Oct 05, 2017 at 00:49 GMT"
    },
    {
        "key": "WT-3200",
        "number": 3690,
        "state": "closed",
        "title": "WT-3200 Reset the bloom filter cursor after failed search",
        "body": "On error, the bloom cursor is positioned at whatever key it was on from the\r\nsearch. As a general practice a cursor should be reset after its use. So reset\r\nthis cursor after a failed search too.",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 04, 2017 at 13:53 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 20:16 GMT",
        "closed_at": "Wednesday Oct 04, 2017 at 20:16 GMT",
        "merged_at": "Wednesday Oct 04, 2017 at 20:16 GMT"
    },
    {
        "key": "WT-3600",
        "number": 3689,
        "state": "closed",
        "title": "Revert \"WT-3600 Improve timestamp parsing to validate characters passed\"",
        "body": "Reverts wiredtiger/wiredtiger#3687",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 04, 2017 at 05:56 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 06:01 GMT",
        "closed_at": "Wednesday Oct 04, 2017 at 06:01 GMT",
        "merged_at": "Wednesday Oct 04, 2017 at 06:01 GMT"
    },
    {
        "key": "WT-3620",
        "number": 3688,
        "state": "closed",
        "title": "WT-3620 POSIX thread attribute structures must be destroyed",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 03, 2017 at 18:42 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:19 GMT",
        "closed_at": "Wednesday Oct 04, 2017 at 05:19 GMT",
        "merged_at": "Wednesday Oct 04, 2017 at 05:19 GMT"
    },
    {
        "key": "WT-3600",
        "number": 3687,
        "state": "closed",
        "title": "WT-3600 Improve timestamp parsing to validate characters passed",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 03, 2017 at 02:46 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 14:38 GMT",
        "closed_at": "Wednesday Oct 04, 2017 at 05:30 GMT",
        "merged_at": "Wednesday Oct 04, 2017 at 05:30 GMT"
    },
    {
        "key": "WT-3617",
        "number": 3686,
        "state": "closed",
        "title": "WT-3617 Fail update/restore with uncommitted updates after stable.",
        "body": "This can't happen at snapshot isolation (where only one update can be uncommitted per record), but can happen at lower isolation levels.  Since update/restore has to discard updates from the stable (on-page) update and older, it can't cope with an uncommitted update after the stable update.",
        "base_ref": "wt-3435-lookaside-with-timestamps",
        "created_at": "Tuesday Oct 03, 2017 at 00:58 GMT",
        "updated_at": "Tuesday Oct 03, 2017 at 03:29 GMT",
        "closed_at": "Tuesday Oct 03, 2017 at 03:29 GMT",
        "merged_at": "Tuesday Oct 03, 2017 at 03:29 GMT"
    },
    {
        "key": "WT-3613",
        "number": 3685,
        "state": "closed",
        "title": "WT-3613 Enable eviction in LSM chunks after they are flushed.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 03, 2017 at 00:20 GMT",
        "updated_at": "Tuesday Oct 03, 2017 at 03:31 GMT",
        "closed_at": "Tuesday Oct 03, 2017 at 03:31 GMT",
        "merged_at": "Tuesday Oct 03, 2017 at 03:31 GMT"
    },
    {
        "key": "WT-3618",
        "number": 3684,
        "state": "closed",
        "title": "WT-3618 remove solaris support",
        "body": "sorry if this PR is unorthodox, MCI (our evergreen deployment) no\nlonger has solaris support, and it'll make things easier on our end if\nwe remove this.",
        "base_ref": "develop",
        "created_at": "Monday Oct 02, 2017 at 16:29 GMT",
        "updated_at": "Tuesday Oct 03, 2017 at 03:08 GMT",
        "closed_at": "Tuesday Oct 03, 2017 at 03:08 GMT",
        "merged_at": "Tuesday Oct 03, 2017 at 03:08 GMT"
    },
    {
        "key": "WT-3614",
        "number": 3683,
        "state": "closed",
        "title": "WT-3614 Full-build Friday lint",
        "body": "@nehakhatri5, since you're on the East Coast, can I ask you for review, please?\r\n\r\nThanks!",
        "base_ref": "develop",
        "created_at": "Friday Sep 29, 2017 at 12:24 GMT",
        "updated_at": "Monday Oct 02, 2017 at 16:12 GMT",
        "closed_at": "Monday Oct 02, 2017 at 16:12 GMT",
        "merged_at": "Monday Oct 02, 2017 at 16:12 GMT"
    },
    {
        "key": "WT-3579",
        "number": 3682,
        "state": "closed",
        "title": "WT-3579 Enhance support for running wtperf workloads with workgen",
        "body": "Not ready for merge, need to do more testing.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 28, 2017 at 19:44 GMT",
        "updated_at": "Friday Oct 06, 2017 at 05:43 GMT",
        "closed_at": "Friday Oct 06, 2017 at 05:42 GMT",
        "merged_at": "Friday Oct 06, 2017 at 05:42 GMT"
    },
    {
        "key": "WT-3610",
        "number": 3681,
        "state": "closed",
        "title": "WT-3610 Only require that the first commit_timestamp is oldest.",
        "body": "We don't actually need commit timestamps to move forward within a transaction as long as the first timestamp used is the oldest one (it determines the transaction's order in a list sorted by timestamp).",
        "base_ref": "develop",
        "created_at": "Thursday Sep 28, 2017 at 06:41 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:37 GMT",
        "closed_at": "Thursday Sep 28, 2017 at 13:10 GMT",
        "merged_at": "Thursday Sep 28, 2017 at 13:10 GMT"
    },
    {
        "key": "WT-3609",
        "number": 3680,
        "state": "closed",
        "title": "WT-3609 Change __wt_panic to handle a NULL session argument",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 27, 2017 at 12:57 GMT",
        "updated_at": "Thursday Sep 28, 2017 at 02:31 GMT",
        "closed_at": "Thursday Sep 28, 2017 at 02:31 GMT",
        "merged_at": "Thursday Sep 28, 2017 at 02:31 GMT"
    },
    {
        "key": "WT-3595",
        "number": 3679,
        "state": "closed",
        "title": "WT-3595 Make sure the Python example gets the right _wiredtiger.so",
        "body": "Having site dependent directories searched may mean that a shared objects from a previous build may be mistakenly used.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 27, 2017 at 02:17 GMT",
        "updated_at": "Thursday Sep 28, 2017 at 02:34 GMT",
        "closed_at": "Thursday Sep 28, 2017 at 02:34 GMT",
        "merged_at": "Thursday Sep 28, 2017 at 02:34 GMT"
    },
    {
        "key": "WT-3230",
        "number": 3678,
        "state": "closed",
        "title": "WT-3230 automatic style checking: function local variable declarations",
        "body": "@michaelcahill, @agorrod: this was one of my scripts that I had lying around, it complained if I was about to commit a file with unexpected local function declarations.\r\n\r\nI've cleaned up to work on the file in-place, rather than just complaining.\r\n\r\nThe idea is to make it easy for people to match the existing function declaration style -- let's face it, it's hard for people not steeped in the KNF/BSD/whatever tradition to get this right, even if we could write it up in a coherent way.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 27, 2017 at 01:35 GMT",
        "updated_at": "Thursday Sep 28, 2017 at 22:51 GMT",
        "closed_at": "Thursday Sep 28, 2017 at 22:51 GMT",
        "merged_at": "Thursday Sep 28, 2017 at 22:51 GMT"
    },
    {
        "key": "WT-3230",
        "number": 3677,
        "state": "closed",
        "title": "WT-3230 Add automatic style checking scripts",
        "body": "@michaelcahill, @agorrod: this was one of my scripts that I had lying around, it complained if I was about to commit a file with unexpected local function declarations.\r\n\r\nI've cleaned up to work on the file in-place, rather than just complaining.\r\n\r\nThe idea is to make it easy for people to match the existing function declaration style -- let's face it, it's hard for people not steeped in the KNF/BSD/whatever tradition to get this right, even if we could write it up in a coherent way.\r\n\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 27, 2017 at 01:19 GMT",
        "updated_at": "Wednesday Sep 27, 2017 at 01:32 GMT",
        "closed_at": "Wednesday Sep 27, 2017 at 01:19 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3605",
        "number": 3676,
        "state": "closed",
        "title": "WT-3605 LSM doesn't support type 'r'",
        "body": "@agorrod, I took a look at WT-3605 (because it was a user question), and here's a branch that I hope makes things better.\r\n\r\nIt looks to me like LSM doesn't currently support anything other than 'S' or 'u' because the underlying file format is always 'u' (and 'S' is the only other format than  'u' that naturally looks like 'u' when it's stored in a WT_ITEM structure).\r\n\r\nThat said, it seems LSM could support other formats? (For example, couldn't a record-number be packed and stored in a WT_ITEM as format 'u'?)\r\n\r\nI'm also unclear on how this connects to more complex tables schemas, that can presumably be configured to store in LSM tables.\r\n\r\nAnyway, I hope this branch is moving in the right direction. Happy to wrap this up if you can give me a little guidance, or happy to have it handed off to someone else.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 26, 2017 at 14:15 GMT",
        "updated_at": "Thursday Sep 28, 2017 at 14:02 GMT",
        "closed_at": "Thursday Sep 28, 2017 at 14:02 GMT",
        "merged_at": "Thursday Sep 28, 2017 at 14:02 GMT"
    },
    {
        "key": "WT-3351",
        "number": 3675,
        "state": "closed",
        "title": "WT-3351 Fix assertion condition. (#3452)",
        "body": "(cherry picked from commit d4986a2b851a7e507c3748d660845cc32b21e3c1)",
        "base_ref": "mongodb-3.4",
        "created_at": "Monday Sep 25, 2017 at 19:42 GMT",
        "updated_at": "Tuesday Sep 26, 2017 at 02:09 GMT",
        "closed_at": "Tuesday Sep 26, 2017 at 02:09 GMT",
        "merged_at": "Tuesday Sep 26, 2017 at 02:09 GMT"
    },
    {
        "key": "WT-3606",
        "number": 3674,
        "state": "closed",
        "title": "WT-3606 Set connection fields after error checking.",
        "body": "@agorrod Please review.  I found this by inspection while looking at the compatibility code for another ticket.",
        "base_ref": "develop",
        "created_at": "Monday Sep 25, 2017 at 18:59 GMT",
        "updated_at": "Tuesday Sep 26, 2017 at 02:17 GMT",
        "closed_at": "Tuesday Sep 26, 2017 at 02:17 GMT",
        "merged_at": "Tuesday Sep 26, 2017 at 02:17 GMT"
    },
    {
        "key": "WT-3602",
        "number": 3673,
        "state": "closed",
        "title": "WT-3602 Write the compatibility version given into the basecfg file.",
        "body": "@michaelcahill or @agorrod Please review this change.  It only addresses fixing the compatibility in the `basecfg` file on database creation.  It does not address whether we should modify the `basecfg` file on a `conn->reconfigure()` call.  Currently the `basecfg` file is static after creation and that change would be a new path to modifying it later, unless we come up with some other solution.",
        "base_ref": "develop",
        "created_at": "Monday Sep 25, 2017 at 17:57 GMT",
        "updated_at": "Tuesday Sep 26, 2017 at 02:19 GMT",
        "closed_at": "Tuesday Sep 26, 2017 at 02:19 GMT",
        "merged_at": "Tuesday Sep 26, 2017 at 02:19 GMT"
    },
    {
        "key": "WT-3603",
        "number": 3672,
        "state": "closed",
        "title": "WT-3603 format threads always traverse the same RNG space.",
        "body": "While looking at one of the WT-3435/#3644 failures, I realized all of the format threads were pounding on the same key/value pairs. Interestingly enough, if you change that, the failure goes away.\r\n\r\nI think we generally want the format threads to work different parts of the RNG space, but clearly we also want to stress the same key/value pairs as well.",
        "base_ref": "develop",
        "created_at": "Sunday Sep 24, 2017 at 15:03 GMT",
        "updated_at": "Tuesday Sep 26, 2017 at 02:13 GMT",
        "closed_at": "Tuesday Sep 26, 2017 at 02:13 GMT",
        "merged_at": "Tuesday Sep 26, 2017 at 02:13 GMT"
    },
    {
        "key": "WT-3435",
        "number": 3671,
        "state": "closed",
        "title": "WT-3435 Fix lookaside eviction with timestamps.",
        "body": "@michaelcahill, here's a possible change for checkpoint eviction.\r\n\r\nInstead of trying to maintain our position in the tree while evicting, we accumulate pages we'd like to evict, and once we step past an internal page, we process the list and evict the pages we've accumulated. It's obviously not as efficient with respect to the cache, but it avoids trying to maintain our position in the tree.",
        "base_ref": "wt-3435-lookaside-with-timestamps",
        "created_at": "Saturday Sep 23, 2017 at 19:36 GMT",
        "updated_at": "Thursday Sep 28, 2017 at 14:13 GMT",
        "closed_at": "Thursday Sep 28, 2017 at 14:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3601",
        "number": 3670,
        "state": "closed",
        "title": "WT-3601 Coverity 1381365: bt_split.c:__split_ref_move() resource leak",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 22, 2017 at 11:52 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:37 GMT",
        "closed_at": "Monday Sep 25, 2017 at 01:19 GMT",
        "merged_at": "Monday Sep 25, 2017 at 01:19 GMT"
    },
    {
        "key": "WT-3453",
        "number": 3669,
        "state": "closed",
        "title": "WT-3453 Enhance lookaside table test coverage in Python suite",
        "body": "Added scenarios for old reader and old timestamp\r\nas well as to check the values after recovery\r\nThis branch will pass only after wt-3435 is merged.",
        "base_ref": "develop",
        "created_at": "Friday Sep 22, 2017 at 06:55 GMT",
        "updated_at": "Friday Oct 06, 2017 at 00:14 GMT",
        "closed_at": "Friday Oct 06, 2017 at 00:14 GMT",
        "merged_at": "Friday Oct 06, 2017 at 00:14 GMT"
    },
    {
        "key": "WT-3599",
        "number": 3668,
        "state": "closed",
        "title": "WT-3599 reconciliation calculates block matching checksums too frequently.",
        "body": "We can ignore this branch until WT-3435/#3644 is merged, it should be an easy fix-up afterward.",
        "base_ref": "develop",
        "created_at": "Thursday Sep 21, 2017 at 20:52 GMT",
        "updated_at": "Tuesday Oct 03, 2017 at 04:17 GMT",
        "closed_at": "Tuesday Oct 03, 2017 at 04:17 GMT",
        "merged_at": "Tuesday Oct 03, 2017 at 04:17 GMT"
    },
    {
        "key": "WT-3593",
        "number": 3667,
        "state": "closed",
        "title": "WT-3593 Add an API to enforce consistent use of timestamps",
        "body": "Not ready for review.",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 20, 2017 at 20:58 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:35 GMT",
        "closed_at": "Wednesday Oct 04, 2017 at 05:35 GMT",
        "merged_at": "Wednesday Oct 04, 2017 at 05:35 GMT"
    },
    {
        "key": "WT-3590",
        "number": 3666,
        "state": "closed",
        "title": "WT-3590 Keep data consistent if writes fail during a clean shutdown",
        "body": "@michaelcahill I separated the commits because the more I think about it, the more it seems like just checking `ret` before writing the clean close checkpoint record will solve the problem.  I think it is a change we should take even if you still want the checkpoint.  Hopefully that is the only change needed.  I separately committed adding in the checkpoint call.  But if we don't need that, it'd be great!",
        "base_ref": "develop",
        "created_at": "Monday Sep 18, 2017 at 18:14 GMT",
        "updated_at": "Wednesday Sep 20, 2017 at 06:23 GMT",
        "closed_at": "Wednesday Sep 20, 2017 at 06:16 GMT",
        "merged_at": "Wednesday Sep 20, 2017 at 06:16 GMT"
    },
    {
        "key": "WT-3559",
        "number": 3665,
        "state": "closed",
        "title": "WT-3559 Detect when a checkpoint races with metadata changes",
        "body": "Checkpoint will skip the tree if it sees more recent version due to contention between checkpoint and DDL operations on that tree.\r\nenhanced fops test as well for detection of this issue with -i option",
        "base_ref": "develop",
        "created_at": "Monday Sep 18, 2017 at 06:47 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:37 GMT",
        "closed_at": "Tuesday Oct 03, 2017 at 04:12 GMT",
        "merged_at": "Tuesday Oct 03, 2017 at 04:12 GMT"
    },
    {
        "key": "WT-3589",
        "number": 3664,
        "state": "closed",
        "title": "WT-3589 replace return checks and testutil_die() pairs, with testutil_check().",
        "body": "@bvpvamsikrishna, Sulabh, Sue & I have all been incrementally replacing patterns in the test code that look like this:\r\n```\r\nif ((ret = call(args)) != 0)\r\n        testutil_die(ret, message);\r\n```\r\nwith:\r\n```\r\ntestutil_check(call(args));\r\n```\r\nI started running lint on some test programs that hadn't been linted before, and while I was in the area I did a pass over the test suite to find examples of that pattern and fix them. (I didn't replace them all, specifically, I tried to leave alone any place where the \"message\" to `testutil_die` actually provided some additional value.)\r\n\r\nThere are a few bug fixes here as well: places where we reported an error using `errno` paired with calls that don't set `errno`, places where we ignored possible error returns from functions, and places where we set variables that were never subsequently used.\r\n\r\nIf it's OK with @agorrod and you have time, would you please do the review?",
        "base_ref": "develop",
        "created_at": "Saturday Sep 16, 2017 at 18:05 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:38 GMT",
        "closed_at": "Tuesday Sep 19, 2017 at 00:11 GMT",
        "merged_at": "Tuesday Sep 19, 2017 at 00:11 GMT"
    },
    {
        "key": "WT-3588",
        "number": 3663,
        "state": "closed",
        "title": "WT-3588 test/format references freed memory.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Sep 16, 2017 at 12:20 GMT",
        "updated_at": "Saturday Sep 16, 2017 at 12:41 GMT",
        "closed_at": "Saturday Sep 16, 2017 at 12:41 GMT",
        "merged_at": "Saturday Sep 16, 2017 at 12:41 GMT"
    },
    {
        "key": "WT-3588",
        "number": 3662,
        "state": "closed",
        "title": "WT-3588 test/format references freed memory.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 15, 2017 at 22:05 GMT",
        "updated_at": "Friday Sep 15, 2017 at 22:26 GMT",
        "closed_at": "Friday Sep 15, 2017 at 22:26 GMT",
        "merged_at": "Friday Sep 15, 2017 at 22:26 GMT"
    },
    {
        "key": "WT-0000",
        "number": 3661,
        "state": "closed",
        "title": "WT-0000 delme check pr",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 15, 2017 at 06:28 GMT",
        "updated_at": "Friday Sep 15, 2017 at 06:29 GMT",
        "closed_at": "Friday Sep 15, 2017 at 06:29 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3457",
        "number": 3660,
        "state": "closed",
        "title": "WT-3457 skip scrubbing if very little data to scrub",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 15, 2017 at 06:14 GMT",
        "updated_at": "Tuesday Sep 19, 2017 at 05:31 GMT",
        "closed_at": "Tuesday Sep 19, 2017 at 05:30 GMT",
        "merged_at": "Tuesday Sep 19, 2017 at 05:30 GMT"
    },
    {
        "key": "WT-3223",
        "number": 3659,
        "state": "closed",
        "title": "WT-3223 Progress messages for checkpoint operation.",
        "body": "While checkpointing a table (tree), log verbose message every 20 seconds\r\nindicating the amount of work done in that duration. It was also observed that\r\nthe step of deleting the checkpoints, that are no longer required, is consuming\r\nconsiderable amount of time while checkpointing a tree. Hence added a log\r\nmessage at this step too.",
        "base_ref": "develop",
        "created_at": "Friday Sep 15, 2017 at 05:15 GMT",
        "updated_at": "Wednesday Oct 25, 2017 at 16:52 GMT",
        "closed_at": "Thursday Oct 12, 2017 at 22:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3295",
        "number": 3658,
        "state": "closed",
        "title": "WT-3295 Fix LSM merge span calculations",
        "body": "```\r\nchunk->generation > max_gen \r\n// could be expanded as\r\nchunk->generation - youngest->generation > max_gap\r\n// which is always FALSE, given the predicate above\r\nif (oldest_gen - youngest_gen > max_gap) break;\r\n```\r\nthus this predicate is useless. besides,\r\n```\r\nprevious->generation <= max_gen\r\n// could be expanded as\r\nprevious->generation - youngest->generation <= max_gap\r\n// which is always TRUE. otherwise it'll jump out in the previous loop\r\n```\r\n\r\nThought what this part actually intended is\r\n```\r\nif (nchunks >= merge_min &&\r\n    chunk->generation - youngest_gen > max_level) {\r\n    break;\r\n}\r\n```\r\n1.  place it near another generation predicate, a little more cohesive;\r\n2. replace youngest->generation with youngest_gen, thought youngest_gen is intended for generation compare; \r\n3. doubt should 'youngest' be renamed ? it's the chunk at the end, not 'youngest';\r\n",
        "base_ref": "wt-3295-lsm-custom-merge",
        "created_at": "Wednesday Sep 13, 2017 at 12:10 GMT",
        "updated_at": "Wednesday Dec 06, 2017 at 05:06 GMT",
        "closed_at": "Wednesday Dec 06, 2017 at 05:06 GMT",
        "merged_at": "Wednesday Dec 06, 2017 at 05:06 GMT"
    },
    {
        "key": "WT-3561",
        "number": 3657,
        "state": "closed",
        "title": "WT-3561 Remove test/recovery from Make.subdirs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 13, 2017 at 03:21 GMT",
        "updated_at": "Wednesday Sep 13, 2017 at 23:25 GMT",
        "closed_at": "Wednesday Sep 13, 2017 at 23:25 GMT",
        "merged_at": "Wednesday Sep 13, 2017 at 23:25 GMT"
    },
    {
        "key": "WT-3576",
        "number": 3656,
        "state": "closed",
        "title": "WT-3576 convert timestamps to integers before comparing in python test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 13, 2017 at 03:15 GMT",
        "updated_at": "Wednesday Sep 13, 2017 at 22:53 GMT",
        "closed_at": "Wednesday Sep 13, 2017 at 22:53 GMT",
        "merged_at": "Wednesday Sep 13, 2017 at 22:53 GMT"
    },
    {
        "key": "WT-3581",
        "number": 3655,
        "state": "closed",
        "title": "WT-3581 format: unexpected checkpoint resolution",
        "body": "@agorrod, this was an error I didn't expect to happen, obviously it does. This is a fix to ensure we don't panic in this case (there's no reason to panic as far as the block manager is concerned). I'm chasing the root cause, as I said, I didn't expect this failure.\r\n\r\nUpdate: the root cause is discussed in the [JIRA ticket](https://jira.mongodb.org/browse/WT-3581?focusedCommentId=1671385&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-1671385).\r\n\r\nI believe this change is correct and ready for merge.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 12, 2017 at 22:45 GMT",
        "updated_at": "Tuesday Sep 12, 2017 at 23:39 GMT",
        "closed_at": "Tuesday Sep 12, 2017 at 23:39 GMT",
        "merged_at": "Tuesday Sep 12, 2017 at 23:39 GMT"
    },
    {
        "key": "WT-3430",
        "number": 3654,
        "state": "closed",
        "title": "WT-3430 Add timestamp queue statistics.",
        "body": "@agorrod Please review.  I added the timestamp queue statistics.  I tested it with the `timestamp_abort` program (yielding additional tickets yesterday).  The statistics indicate that that program can insert at the head of the queue about 23-28% of the time in my couple of runs.\r\n\r\nThe ticket mentions \"how many entries need to be walked to update IDs\".  I did not add in a statistic for that because the ordered queues means we only have to look at the head to know our minimum timestamp value.  If you have something else in mind let me know.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 12, 2017 at 19:39 GMT",
        "updated_at": "Thursday Sep 14, 2017 at 16:09 GMT",
        "closed_at": "Thursday Sep 14, 2017 at 16:09 GMT",
        "merged_at": "Thursday Sep 14, 2017 at 16:09 GMT"
    },
    {
        "key": "WT-3578",
        "number": 3653,
        "state": "closed",
        "title": "WT-3578 Failed to parse oldest timestamp '0': zero not permitted",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 12, 2017 at 13:34 GMT",
        "updated_at": "Tuesday Sep 12, 2017 at 14:19 GMT",
        "closed_at": "Tuesday Sep 12, 2017 at 14:19 GMT",
        "merged_at": "Tuesday Sep 12, 2017 at 14:19 GMT"
    },
    {
        "key": "WT-3575",
        "number": 3652,
        "state": "closed",
        "title": "WT-3575 ASCII statistics log printing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 12, 2017 at 12:26 GMT",
        "updated_at": "Tuesday Sep 12, 2017 at 14:55 GMT",
        "closed_at": "Tuesday Sep 12, 2017 at 14:55 GMT",
        "merged_at": "Tuesday Sep 12, 2017 at 14:55 GMT"
    },
    {
        "key": "WT-3571",
        "number": 3651,
        "state": "closed",
        "title": "WT-3571 Fix bug in clsm chunk count assignment",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 12, 2017 at 05:14 GMT",
        "updated_at": "Tuesday Sep 12, 2017 at 07:30 GMT",
        "closed_at": "Tuesday Sep 12, 2017 at 07:30 GMT",
        "merged_at": "Tuesday Sep 12, 2017 at 07:30 GMT"
    },
    {
        "key": "WT-3574",
        "number": 3650,
        "state": "closed",
        "title": "WT-3574 remove locking from programs using timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 11, 2017 at 20:05 GMT",
        "updated_at": "Friday Sep 15, 2017 at 19:18 GMT",
        "closed_at": "Friday Sep 15, 2017 at 19:18 GMT",
        "merged_at": "Friday Sep 15, 2017 at 19:18 GMT"
    },
    {
        "key": "WT-3574",
        "number": 3649,
        "state": "closed",
        "title": "WT-3574 No need for atomic add.",
        "body": "@agorrod and @sulabhM please review.  I may be missing some motivation that requires this operation to be atomic.  While the test isn't a performance related test, performing more operations means we test more code when it is killed.",
        "base_ref": "develop",
        "created_at": "Monday Sep 11, 2017 at 18:15 GMT",
        "updated_at": "Tuesday Sep 12, 2017 at 19:21 GMT",
        "closed_at": "Tuesday Sep 12, 2017 at 19:21 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3556",
        "number": 3648,
        "state": "closed",
        "title": "WT-3556 remove wtstats support from WiredTiger",
        "body": "@agorrod, this branch removes wtstats support. I left the `stat_data.py` file in place for now, until we figure out whether or not t2 needs it.",
        "base_ref": "develop",
        "created_at": "Monday Sep 11, 2017 at 15:30 GMT",
        "updated_at": "Wednesday Sep 13, 2017 at 22:56 GMT",
        "closed_at": "Wednesday Sep 13, 2017 at 22:56 GMT",
        "merged_at": "Wednesday Sep 13, 2017 at 22:56 GMT"
    },
    {
        "key": "WT-3572",
        "number": 3647,
        "state": "closed",
        "title": "WT-3572 format should limit runs to 6 hours.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 11, 2017 at 15:00 GMT",
        "updated_at": "Tuesday Sep 12, 2017 at 06:24 GMT",
        "closed_at": "Tuesday Sep 12, 2017 at 06:23 GMT",
        "merged_at": "Tuesday Sep 12, 2017 at 06:23 GMT"
    },
    {
        "key": "WT-3543",
        "number": 3646,
        "state": "closed",
        "title": "WT-3543 Ensure that failed checkpoints cleanup properly",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Sep 10, 2017 at 16:40 GMT",
        "updated_at": "Tuesday Sep 12, 2017 at 05:32 GMT",
        "closed_at": "Tuesday Sep 12, 2017 at 05:32 GMT",
        "merged_at": "Tuesday Sep 12, 2017 at 05:32 GMT"
    },
    {
        "key": "WT-3561",
        "number": 3645,
        "state": "closed",
        "title": "WT-3561 move test/recovery, fix timestamp-abort for non-timestamp builds",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 06, 2017 at 07:56 GMT",
        "updated_at": "Wednesday Sep 06, 2017 at 14:50 GMT",
        "closed_at": "Wednesday Sep 06, 2017 at 14:50 GMT",
        "merged_at": "Wednesday Sep 06, 2017 at 14:50 GMT"
    },
    {
        "key": "WT-3435",
        "number": 3644,
        "state": "closed",
        "title": "WT-3435 Fix lookaside eviction with timestamps.",
        "body": "Previously we disabled lookaside eviction with timestamps more recent than the stable timestamp, which has the effect of disabling lookaside eviction.  This branch changes which updates are used to create page images so that checkpoints as-of a stable timestamp are correct.",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 05, 2017 at 02:38 GMT",
        "updated_at": "Thursday Oct 05, 2017 at 06:04 GMT",
        "closed_at": "Thursday Oct 05, 2017 at 06:04 GMT",
        "merged_at": "Thursday Oct 05, 2017 at 06:04 GMT"
    },
    {
        "key": "WT-3510",
        "number": 3643,
        "state": "closed",
        "title": "WT-3510 Test use of timestamp API when timestamp disabled",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 04, 2017 at 07:18 GMT",
        "updated_at": "Tuesday Sep 05, 2017 at 06:51 GMT",
        "closed_at": "Tuesday Sep 05, 2017 at 06:51 GMT",
        "merged_at": "Tuesday Sep 05, 2017 at 06:51 GMT"
    },
    {
        "key": "WT-3437",
        "number": 3642,
        "state": "closed",
        "title": "WT-3437 Improvements to tuning of number of eviction workers",
        "body": "Updated the eviction workers tune algorithm to improve the eviction rate\r\nand minimize the impact of re-tuning on the IOs.\u00a0\r\n\r\n* Remove just one eviction worker forcefully every retune cycle to\u00a0\r\n\u00a0 avoid the situation of less numbers of eviction workers evicting\r\n\r\n* Perform retune more frequently i.e. every 25 seconds to increase the\u00a0\r\n\u00a0 dynamism of the parallel eviction workers.\r\n\r\n* Reduce the time period of collecting the datapoints to 60ms and\r\n\u00a0 increase the number of datapoints so that there is sufficient data\u00a0\r\n\u00a0 about eviction rate to settle on a stable number of workers. This also\r\n\u00a0 minimizes the time spent in retuning.\r\n\r\nWhile at it, remove the restriction of thread[0] doing the retune. Any\r\nof the thread in the eviction worker thread group could be an eviction\u00a0\r\nserver and can do the retune.",
        "base_ref": "develop",
        "created_at": "Monday Sep 04, 2017 at 03:56 GMT",
        "updated_at": "Thursday Sep 07, 2017 at 01:35 GMT",
        "closed_at": "Thursday Sep 07, 2017 at 01:35 GMT",
        "merged_at": "Thursday Sep 07, 2017 at 01:35 GMT"
    },
    {
        "key": "WT-3511",
        "number": 3641,
        "state": "closed",
        "title": "WT-3511 timestamp partway change multistep transaction",
        "body": "Initial draft. not completed.",
        "base_ref": "develop",
        "created_at": "Sunday Sep 03, 2017 at 22:20 GMT",
        "updated_at": "Thursday Sep 07, 2017 at 05:25 GMT",
        "closed_at": "Thursday Sep 07, 2017 at 05:25 GMT",
        "merged_at": "Thursday Sep 07, 2017 at 05:25 GMT"
    },
    {
        "key": "WT-3252",
        "number": 3640,
        "state": "closed",
        "title": "WT-3252 Remove the reconciliation WT_BOUNDARY structure.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Sep 03, 2017 at 18:49 GMT",
        "updated_at": "Thursday Sep 21, 2017 at 03:16 GMT",
        "closed_at": "Thursday Sep 21, 2017 at 03:16 GMT",
        "merged_at": "Thursday Sep 21, 2017 at 03:16 GMT"
    },
    {
        "key": "WT-3537",
        "number": 3639,
        "state": "closed",
        "title": "WT-3537 Split pages when nothing can be written",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 01, 2017 at 12:35 GMT",
        "updated_at": "Friday Sep 01, 2017 at 12:53 GMT",
        "closed_at": "Friday Sep 01, 2017 at 12:53 GMT",
        "merged_at": "Friday Sep 01, 2017 at 12:53 GMT"
    },
    {
        "key": "WT-3558",
        "number": 3638,
        "state": "closed",
        "title": "WT-3558 Disable metadata visibility assertion in checkpoints",
        "body": "It is better to return a WT_ROLLBACK so the checkpoint can be retried.",
        "base_ref": "develop",
        "created_at": "Friday Sep 01, 2017 at 01:22 GMT",
        "updated_at": "Friday Sep 01, 2017 at 01:43 GMT",
        "closed_at": "Friday Sep 01, 2017 at 01:43 GMT",
        "merged_at": "Friday Sep 01, 2017 at 01:43 GMT"
    },
    {
        "key": "WT-3555",
        "number": 3637,
        "state": "closed",
        "title": "WT-3555 Streamline open_cursor for simple tables.",
        "body": "This change results in a consistent 20% improvement for my focused benchmark that repeatedly calls WT_SESSION->open_cursor/close_cursor in a single thread.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 31, 2017 at 19:49 GMT",
        "updated_at": "Wednesday Sep 13, 2017 at 02:51 GMT",
        "closed_at": "Wednesday Sep 13, 2017 at 02:51 GMT",
        "merged_at": "Wednesday Sep 13, 2017 at 02:51 GMT"
    },
    {
        "key": "WT-3524",
        "number": 3636,
        "state": "closed",
        "title": "WT-3524 Test format likely to pin cache full when enabling timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 31, 2017 at 18:48 GMT",
        "updated_at": "Monday Sep 11, 2017 at 07:16 GMT",
        "closed_at": "Monday Sep 11, 2017 at 07:15 GMT",
        "merged_at": "Monday Sep 11, 2017 at 07:15 GMT"
    },
    {
        "key": "WT-3468",
        "number": 3635,
        "state": "closed",
        "title": "WT-3468 Avoid shared timespec usage in LSM",
        "body": "@agorrod Please review.  I implemented a form of @michaelcahill 's suggestions.  I have an atomic work unit counter and only the server thread looks for idleness and keeps track of how long a tree has been idle.\r\n\r\nI've run `make check` and all the `run.py lsm` and `test/format` with `data_source=lsm` for over 100 iterations.  But I do not know for sure whether or not the lsm manager idle settings have kicked in or not.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 31, 2017 at 18:05 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:38 GMT",
        "closed_at": "Friday Sep 01, 2017 at 06:00 GMT",
        "merged_at": "Friday Sep 01, 2017 at 06:00 GMT"
    },
    {
        "key": "WT-3557",
        "number": 3634,
        "state": "closed",
        "title": "WT-3557 format should ignore incompatible keywords",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 31, 2017 at 16:10 GMT",
        "updated_at": "Friday Sep 01, 2017 at 05:25 GMT",
        "closed_at": "Friday Sep 01, 2017 at 05:25 GMT",
        "merged_at": "Friday Sep 01, 2017 at 05:25 GMT"
    },
    {
        "key": "WT-3550",
        "number": 3633,
        "state": "closed",
        "title": "WT-3550 Minor output format changes",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 30, 2017 at 20:05 GMT",
        "updated_at": "Wednesday Aug 30, 2017 at 20:37 GMT",
        "closed_at": "Wednesday Aug 30, 2017 at 20:37 GMT",
        "merged_at": "Wednesday Aug 30, 2017 at 20:37 GMT"
    },
    {
        "key": "WT-3495",
        "number": 3632,
        "state": "closed",
        "title": "WT-3495 Don't ftruncate if log cursors are open",
        "body": "@agorrod Please review this.  It avoids the ftruncate if there are log cursors open.  Other than test programs log cursors are very rarely used so I don't think it has much user-visible impact.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 30, 2017 at 17:23 GMT",
        "updated_at": "Thursday Aug 31, 2017 at 01:37 GMT",
        "closed_at": "Thursday Aug 31, 2017 at 01:37 GMT",
        "merged_at": "Thursday Aug 31, 2017 at 01:37 GMT"
    },
    {
        "key": "WT-3540",
        "number": 3631,
        "state": "closed",
        "title": "WT-3540 For debugging only copy log files.",
        "body": "Tables can be so large that they fill test machine file systems.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 30, 2017 at 16:48 GMT",
        "updated_at": "Wednesday Oct 04, 2017 at 05:38 GMT",
        "closed_at": "Wednesday Aug 30, 2017 at 17:12 GMT",
        "merged_at": "Wednesday Aug 30, 2017 at 17:12 GMT"
    },
    {
        "key": "WT-3549",
        "number": 3630,
        "state": "closed",
        "title": "WT-3549 Fix a deadlock sweeping table handles.",
        "body": "We need to acquire the global table lock before the table handle lock.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 30, 2017 at 01:49 GMT",
        "updated_at": "Wednesday Aug 30, 2017 at 04:24 GMT",
        "closed_at": "Wednesday Aug 30, 2017 at 04:24 GMT",
        "merged_at": "Wednesday Aug 30, 2017 at 04:24 GMT"
    },
    {
        "key": "WT-3431",
        "number": 3629,
        "state": "closed",
        "title": "WT-3431 Replace WT_TXN_STATE with sorted lists.",
        "body": "Each list is protected by a separate rwlock, allowing us to create\r\nsnapshots without sorting and avoid any transaction operations having to\r\nscan sessions.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 29, 2017 at 11:53 GMT",
        "updated_at": "Thursday Oct 19, 2017 at 01:01 GMT",
        "closed_at": "Thursday Oct 19, 2017 at 01:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3512",
        "number": 3628,
        "state": "closed",
        "title": "WT-3512 Add timestamp API python test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 29, 2017 at 07:31 GMT",
        "updated_at": "Thursday Sep 07, 2017 at 05:17 GMT",
        "closed_at": "Thursday Sep 07, 2017 at 05:17 GMT",
        "merged_at": "Thursday Sep 07, 2017 at 05:17 GMT"
    },
    {
        "key": "WT-3547",
        "number": 3627,
        "state": "closed",
        "title": "WT-3547 Fix a deadlock dropping LSM table handles.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 29, 2017 at 02:31 GMT",
        "updated_at": "Tuesday Aug 29, 2017 at 03:22 GMT",
        "closed_at": "Tuesday Aug 29, 2017 at 03:21 GMT",
        "merged_at": "Tuesday Aug 29, 2017 at 03:21 GMT"
    },
    {
        "key": "WT-3546",
        "number": 3626,
        "state": "closed",
        "title": "WT-3546 Coverity 1380021 dereference before NULL check, lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 28, 2017 at 12:40 GMT",
        "updated_at": "Wednesday Aug 30, 2017 at 04:28 GMT",
        "closed_at": "Wednesday Aug 30, 2017 at 04:28 GMT",
        "merged_at": "Wednesday Aug 30, 2017 at 04:28 GMT"
    },
    {
        "key": "WT-3544",
        "number": 3625,
        "state": "closed",
        "title": "WT-3544 Fix memory stomping during rollback_to_stable.",
        "body": "This was caused by an off-by-one bug calculating the size of a\r\nbitstring, leading to writes past the end of the array when the largest\r\nactive file ID was a multiple of 8.",
        "base_ref": "develop",
        "created_at": "Monday Aug 28, 2017 at 05:49 GMT",
        "updated_at": "Monday Aug 28, 2017 at 05:49 GMT",
        "closed_at": "Monday Aug 28, 2017 at 05:49 GMT",
        "merged_at": "Monday Aug 28, 2017 at 05:49 GMT"
    },
    {
        "key": "WT-3544",
        "number": 3624,
        "state": "closed",
        "title": "Revert \"WT-3544 Fix memory stomping during rollback_to_stable.\"",
        "body": "Reverts wiredtiger/wiredtiger#3623",
        "base_ref": "develop",
        "created_at": "Monday Aug 28, 2017 at 05:48 GMT",
        "updated_at": "Monday Aug 28, 2017 at 05:48 GMT",
        "closed_at": "Monday Aug 28, 2017 at 05:48 GMT",
        "merged_at": "Monday Aug 28, 2017 at 05:48 GMT"
    },
    {
        "key": "WT-3544",
        "number": 3623,
        "state": "closed",
        "title": "WT-3544 Fix memory stomping during rollback_to_stable.",
        "body": "This was caused by an off-by-one bug calculating the size of a bitstring, leading to writes past the end of the array when the largest active file ID was a multiple of 8.",
        "base_ref": "develop",
        "created_at": "Monday Aug 28, 2017 at 04:59 GMT",
        "updated_at": "Monday Aug 28, 2017 at 05:49 GMT",
        "closed_at": "Monday Aug 28, 2017 at 05:46 GMT",
        "merged_at": "Monday Aug 28, 2017 at 05:46 GMT"
    },
    {
        "key": "WT-3545",
        "number": 3622,
        "state": "closed",
        "title": "WT-3545 Fix array bounds warnings with gcc 7.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 28, 2017 at 02:46 GMT",
        "updated_at": "Monday Aug 28, 2017 at 04:07 GMT",
        "closed_at": "Monday Aug 28, 2017 at 04:07 GMT",
        "merged_at": "Monday Aug 28, 2017 at 04:07 GMT"
    },
    {
        "key": "WT-3537",
        "number": 3621,
        "state": "closed",
        "title": "WT-3537 Split pages when nothing can be written",
        "body": "I tried a few different approaches, I liked this one the best.\r\n\r\nIn summary, the change is to copy the insert/append list key into the created disk image with a zero-length value, when reconciling row-store insert/append lists in the evict/restore path. That means we'll split the page (once the total memory required by the keys crosses the split boundary), and the restore of the page will split large insert/append lists into multiple update lists.\r\n\r\nWe're not splitting as aggressively as we could because we're not taking into account the update list's memory requirements (if values are larger than keys, that's where all the memory is). In other words, if the total memory required by the keys alone isn't significant, we're not going to split the page. That works if the in-memory max page size is significantly larger than the split size, not so much if they're about the same.\r\n\r\nI tried a couple of times to take update list memory into account in choosing to split, but it gets ugly fast when you lie to reconciliation about how much memory you're using for the disk image. I suspect we could make progress here by configuring the split boundary differently for evict/restore when there's a large page memory footprint, or even placing a maximum count of items we'll put on a page during an evict/restore reconciliation.",
        "base_ref": "develop",
        "created_at": "Sunday Aug 27, 2017 at 14:07 GMT",
        "updated_at": "Friday Sep 01, 2017 at 04:28 GMT",
        "closed_at": "Friday Sep 01, 2017 at 04:28 GMT",
        "merged_at": "Friday Sep 01, 2017 at 04:28 GMT"
    },
    {
        "key": "WT-3533",
        "number": 3620,
        "state": "closed",
        "title": "WT-3533 eviction handle walk can race with handle re-open",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 25, 2017 at 13:49 GMT",
        "updated_at": "Friday Sep 01, 2017 at 05:13 GMT",
        "closed_at": "Friday Sep 01, 2017 at 05:13 GMT",
        "merged_at": "Friday Sep 01, 2017 at 05:13 GMT"
    },
    {
        "key": "WT-3536",
        "number": 3619,
        "state": "closed",
        "title": "WT-3536 Re-enable build warnings for clang strict build.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 25, 2017 at 05:50 GMT",
        "updated_at": "Tuesday Aug 29, 2017 at 03:31 GMT",
        "closed_at": "Monday Aug 28, 2017 at 01:08 GMT",
        "merged_at": "Monday Aug 28, 2017 at 01:08 GMT"
    },
    {
        "key": "WT-3542",
        "number": 3618,
        "state": "closed",
        "title": "WT-3542 Python test_stats_log_on_json_with_tables timeout on the PPC",
        "body": "Still seeing timeout failures on the PPC: rewrite to not use timers at all.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 23:12 GMT",
        "updated_at": "Friday Aug 25, 2017 at 05:30 GMT",
        "closed_at": "Friday Aug 25, 2017 at 05:30 GMT",
        "merged_at": "Friday Aug 25, 2017 at 05:30 GMT"
    },
    {
        "key": "WT-3540",
        "number": 3617,
        "state": "closed",
        "title": "WT-3540 Add copying of pre-recovery database for debugging.",
        "body": "Needed to start debugging the evergreen failure.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 19:26 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 19:48 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 19:48 GMT",
        "merged_at": "Thursday Aug 24, 2017 at 19:48 GMT"
    },
    {
        "key": "WT-3542",
        "number": 3616,
        "state": "closed",
        "title": "WT-3542 Python test_stats_log_on_json_with_tables timeout on the PPC",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 18:53 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 20:00 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 19:59 GMT",
        "merged_at": "Thursday Aug 24, 2017 at 19:59 GMT"
    },
    {
        "key": "WT-3542",
        "number": 3615,
        "state": "closed",
        "title": "WT-3542 Python test_stats_log_on_json_with_tables timeout on the PPC",
        "body": "Still seeing timeouts at 30 seconds, increase it to a minute.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 17:11 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 17:17 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 17:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3542",
        "number": 3614,
        "state": "closed",
        "title": "WT-3542 Python test_stats_log_on_json_with_tables timeout on the PPC",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 15:08 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 15:44 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 15:44 GMT",
        "merged_at": "Thursday Aug 24, 2017 at 15:44 GMT"
    },
    {
        "key": "WT-3541",
        "number": 3613,
        "state": "closed",
        "title": "WT-3541 Python test_reconfig02 timeout on the PPC",
        "body": "I can't reproduce this failure, but I do see the test taking over 10 seconds for the pre-allocated log files to appear, so I don't think it's unlikely that periodically some runs take even longer.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 12:46 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 13:20 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 13:20 GMT",
        "merged_at": "Thursday Aug 24, 2017 at 13:20 GMT"
    },
    {
        "key": "WT-3539",
        "number": 3612,
        "state": "closed",
        "title": "WT-3539 Document API requirements for exclusive access.",
        "body": "Some WiredTiger methods require exclusive access to a table or file (e.g., alter, drop, verify, salvage, rebalance).  Add a shared paragraph to each of these methods explaining that they will fail if any cursors are open or the data source is otherwise busy.\r\n\r\nWhile in the area, move \"alter\" into the \"Table operations\" section of WT_SESSION, clean up wording around methods that require a transaction to be active/inactive.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 02:16 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 14:08 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 14:07 GMT",
        "merged_at": "Thursday Aug 24, 2017 at 14:07 GMT"
    },
    {
        "key": "WT-3474",
        "number": 3611,
        "state": "closed",
        "title": "WT-3474 Extend Python timestamp rollback test",
        "body": "@agorrod  @sueloverso  @michaelcahill \r\n\r\ninitial commit to share Hang testcase.\r\nWhen we have log enabled on both connection and table, then the call to rollback_to_stable is hanged.\r\n\r\nWhen we run test_timestamp04.py from this pull request, the system is hung.\r\n \r\nYou can comment \"'nolog'\" in conncfg option to save 4 seconds before seeing hang.\r\nRequest to check\r\n\r\nThis pull request also includes the correction in error msg when the lsm cache size configured is smaller than required.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 24, 2017 at 01:27 GMT",
        "updated_at": "Friday Sep 01, 2017 at 01:56 GMT",
        "closed_at": "Friday Sep 01, 2017 at 01:56 GMT",
        "merged_at": "Friday Sep 01, 2017 at 01:56 GMT"
    },
    {
        "key": "WT-3529",
        "number": 3610,
        "state": "closed",
        "title": "WT-3529 Add WT_CONNECTION::debug_info method.",
        "body": "Not yet complete so it's not ready for review.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 23, 2017 at 18:01 GMT",
        "updated_at": "Wednesday Aug 30, 2017 at 13:41 GMT",
        "closed_at": "Wednesday Aug 30, 2017 at 13:41 GMT",
        "merged_at": "Wednesday Aug 30, 2017 at 13:41 GMT"
    },
    {
        "key": "WT-3538",
        "number": 3609,
        "state": "closed",
        "title": "WT-3538 Misaligned reads when using the lookaside table and timestamps",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 23, 2017 at 15:25 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 03:00 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 03:00 GMT",
        "merged_at": "Thursday Aug 24, 2017 at 03:00 GMT"
    },
    {
        "key": "WT-3525",
        "number": 3608,
        "state": "closed",
        "title": "WT-3525 Disable 500 keys until LAS and reconciliation changes complete.",
        "body": "self-review once PR testing is done.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 23, 2017 at 14:14 GMT",
        "updated_at": "Wednesday Aug 23, 2017 at 15:26 GMT",
        "closed_at": "Wednesday Aug 23, 2017 at 15:26 GMT",
        "merged_at": "Wednesday Aug 23, 2017 at 15:26 GMT"
    },
    {
        "key": "WT-3535",
        "number": 3607,
        "state": "closed",
        "title": "WT-3535 Disable compiler warnings for clang, so ASAN build passes.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 23, 2017 at 03:46 GMT",
        "updated_at": "Wednesday Aug 23, 2017 at 05:49 GMT",
        "closed_at": "Wednesday Aug 23, 2017 at 05:49 GMT",
        "merged_at": "Wednesday Aug 23, 2017 at 05:49 GMT"
    },
    {
        "key": "WT-3528",
        "number": 3606,
        "state": "closed",
        "title": "WT-3528 Txn must be running to call timestamp_transaction",
        "body": "@michaelcahill or @agorrod Please review.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 22, 2017 at 16:09 GMT",
        "updated_at": "Wednesday Aug 23, 2017 at 01:33 GMT",
        "closed_at": "Wednesday Aug 23, 2017 at 01:33 GMT",
        "merged_at": "Wednesday Aug 23, 2017 at 01:33 GMT"
    },
    {
        "key": "WT-3386",
        "number": 3605,
        "state": "closed",
        "title": "WT-3386 Remove support for timestamps in test/checkpoint.",
        "body": "Coverage in test/recovery/timestamp-abort instead.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 22, 2017 at 12:53 GMT",
        "updated_at": "Tuesday Aug 22, 2017 at 18:36 GMT",
        "closed_at": "Tuesday Aug 22, 2017 at 18:36 GMT",
        "merged_at": "Tuesday Aug 22, 2017 at 18:36 GMT"
    },
    {
        "key": "WT-3531",
        "number": 3604,
        "state": "closed",
        "title": "WT-3531 Add a \"timestamp_unordered\" mode to log_flush.",
        "body": "This mode syncs the log if transactions have committed out of timestamp order, and is a noop when all commits are in order.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 22, 2017 at 07:48 GMT",
        "updated_at": "Tuesday Oct 17, 2017 at 06:13 GMT",
        "closed_at": "Tuesday Oct 17, 2017 at 06:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-0000",
        "number": 3603,
        "state": "closed",
        "title": "WT-0000 ignore-this: check pull req tester for cleanup",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 22, 2017 at 01:08 GMT",
        "updated_at": "Tuesday Aug 22, 2017 at 02:35 GMT",
        "closed_at": "Tuesday Aug 22, 2017 at 02:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3527",
        "number": 3602,
        "state": "closed",
        "title": "WT-3527 Use power of two hash table size.",
        "body": "A good hash function should give us good distribution no matter what modulo we use, and we use a good hash function.",
        "base_ref": "develop",
        "created_at": "Monday Aug 21, 2017 at 20:56 GMT",
        "updated_at": "Thursday Aug 24, 2017 at 02:20 GMT",
        "closed_at": "Thursday Aug 24, 2017 at 02:20 GMT",
        "merged_at": "Thursday Aug 24, 2017 at 02:20 GMT"
    },
    {
        "key": "WT-3525",
        "number": 3601,
        "state": "closed",
        "title": "WT-3525 Remove eviction stats check.",
        "body": "@keithbostic Please review this small test change.  I hope it is sufficient.  Instead of checking the stats after segments of the test I only left in the one at the end of the test.  The test is supposed to be testing eviction so the original intent was to make sure eviction happened (or not based on a boolean).",
        "base_ref": "develop",
        "created_at": "Monday Aug 21, 2017 at 20:24 GMT",
        "updated_at": "Tuesday Aug 22, 2017 at 15:34 GMT",
        "closed_at": "Tuesday Aug 22, 2017 at 15:34 GMT",
        "merged_at": "Tuesday Aug 22, 2017 at 15:34 GMT"
    },
    {
        "key": "WT-3523",
        "number": 3600,
        "state": "closed",
        "title": "WT-3523 Fix incorrect use of configure API in test format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 21, 2017 at 12:14 GMT",
        "updated_at": "Monday Aug 21, 2017 at 19:23 GMT",
        "closed_at": "Monday Aug 21, 2017 at 19:23 GMT",
        "merged_at": "Monday Aug 21, 2017 at 19:23 GMT"
    },
    {
        "key": "WT-3516",
        "number": 3599,
        "state": "closed",
        "title": "WT-3516 Optimize schema operations when we are certain of URI prefixes.",
        "body": "These changes speed up a focused benchmark by 13%.  The benchmark is a single threaded application that does cursor_open in a loop.",
        "base_ref": "develop",
        "created_at": "Friday Aug 18, 2017 at 17:52 GMT",
        "updated_at": "Monday Aug 21, 2017 at 02:12 GMT",
        "closed_at": "Monday Aug 21, 2017 at 02:12 GMT",
        "merged_at": "Monday Aug 21, 2017 at 02:12 GMT"
    },
    {
        "key": "WT-3522",
        "number": 3598,
        "state": "closed",
        "title": "WT-3522 Coverity 1379736, full build Friday lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 18, 2017 at 13:11 GMT",
        "updated_at": "Monday Aug 21, 2017 at 01:51 GMT",
        "closed_at": "Monday Aug 21, 2017 at 01:51 GMT",
        "merged_at": "Monday Aug 21, 2017 at 01:51 GMT"
    },
    {
        "key": "WT-3514",
        "number": 3597,
        "state": "closed",
        "title": "WT-3514 Fix checkpoint's use of stable_timestamp.",
        "body": "Prior to this change, there was a window in between checkpoint reading the stable timestamp and using it to start a transaction.  In that window, the application could update timestamps, making it invalid for checkpoint's transaction to start.\r\n\r\nRemove the undocumented \"read_timestamp\" config to WT_SESSION::checkpoint, and instead copy the stable timestamp directly into checkpoint's transaction while holding the global transaction state locked.",
        "base_ref": "develop",
        "created_at": "Friday Aug 18, 2017 at 06:54 GMT",
        "updated_at": "Tuesday Aug 22, 2017 at 04:27 GMT",
        "closed_at": "Friday Aug 18, 2017 at 18:15 GMT",
        "merged_at": "Friday Aug 18, 2017 at 18:15 GMT"
    },
    {
        "key": "WT-3521",
        "number": 3596,
        "state": "closed",
        "title": "WT-3521 Prevent lookaside eviction of unstable updates.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 18, 2017 at 04:22 GMT",
        "updated_at": "Friday Aug 18, 2017 at 06:13 GMT",
        "closed_at": "Friday Aug 18, 2017 at 06:13 GMT",
        "merged_at": "Friday Aug 18, 2017 at 06:13 GMT"
    },
    {
        "key": "WT-3517",
        "number": 3595,
        "state": "closed",
        "title": "WT-3517 WT_SESSION::reset doesn't need to call out EBUSY specially.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 18, 2017 at 00:54 GMT",
        "updated_at": "Friday Aug 18, 2017 at 00:54 GMT",
        "closed_at": "Friday Aug 18, 2017 at 00:54 GMT",
        "merged_at": "Friday Aug 18, 2017 at 00:54 GMT"
    },
    {
        "key": "WT-3328",
        "number": 3594,
        "state": "closed",
        "title": "WT-3328 wiredtiger-test-format-stress-ppc failed due to EBUSY during verify",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 17, 2017 at 12:53 GMT",
        "updated_at": "Friday Aug 18, 2017 at 02:29 GMT",
        "closed_at": "Friday Aug 18, 2017 at 02:12 GMT",
        "merged_at": "Friday Aug 18, 2017 at 02:12 GMT"
    },
    {
        "key": "WT-3454",
        "number": 3593,
        "state": "closed",
        "title": "WT-3454 Enhance Python test_timestamp03 to test with logged and non-l\u2026",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 17, 2017 at 08:05 GMT",
        "updated_at": "Tuesday Aug 22, 2017 at 16:41 GMT",
        "closed_at": "Tuesday Aug 22, 2017 at 16:41 GMT",
        "merged_at": "Tuesday Aug 22, 2017 at 16:41 GMT"
    },
    {
        "key": "WT-3365",
        "number": 3592,
        "state": "closed",
        "title": "WT-3365 Fix LSM tree visibility rules when timestamps are used.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 17, 2017 at 02:06 GMT",
        "updated_at": "Friday Aug 18, 2017 at 01:59 GMT",
        "closed_at": "Friday Aug 18, 2017 at 01:59 GMT",
        "merged_at": "Friday Aug 18, 2017 at 01:59 GMT"
    },
    {
        "key": "WT-3498",
        "number": 3591,
        "state": "closed",
        "title": "WT-3498 snapshot isolation failure with overflow records",
        "body": "Rework reconciliation to cache overflow records required by readers as part of selecting the WT_UPDATE to be written. That way we know the cached record is associated with the appropriate update.\r\n\r\nInstead of caching a single copy of an on-page overflow value that's being removed, and referencing it from both the WT_OVFL_TRACK structure (for existing reader threads), and from all of the WT_UPDATE affected chains, cache a complete copy of the on-disk overflow value itself everywhere it might be needed. This requires 2x the memory when updating row-store overflow tables, and potentially more for column-store tables with RLEs greater than 1, but it has the virtue of working. Additionally, the memory used should be discarded relatively quickly if there's cache pressure: from both the update chains and from the WT_OVFL_TRACK structure whenever we attempt to evict the page.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 16, 2017 at 19:17 GMT",
        "updated_at": "Friday Aug 18, 2017 at 02:33 GMT",
        "closed_at": "Friday Aug 18, 2017 at 02:33 GMT",
        "merged_at": "Friday Aug 18, 2017 at 02:33 GMT"
    },
    {
        "key": "WT-3509",
        "number": 3590,
        "state": "closed",
        "title": "WT-3509 __wt_illegal_value doesn't always provide a failure location",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 16, 2017 at 12:42 GMT",
        "updated_at": "Wednesday Aug 16, 2017 at 13:24 GMT",
        "closed_at": "Wednesday Aug 16, 2017 at 13:24 GMT",
        "merged_at": "Wednesday Aug 16, 2017 at 13:24 GMT"
    },
    {
        "key": "WT-3465",
        "number": 3589,
        "state": "closed",
        "title": "WT-3465 Avoid locks when reading 8-byte timestamps.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 16, 2017 at 07:19 GMT",
        "updated_at": "Thursday Aug 17, 2017 at 04:04 GMT",
        "closed_at": "Thursday Aug 17, 2017 at 04:04 GMT",
        "merged_at": "Thursday Aug 17, 2017 at 04:04 GMT"
    },
    {
        "key": "WT-3508",
        "number": 3588,
        "state": "closed",
        "title": "WT-3508 Fix some minor bugs in timestamp-abort.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 15, 2017 at 18:30 GMT",
        "updated_at": "Wednesday Aug 16, 2017 at 02:26 GMT",
        "closed_at": "Wednesday Aug 16, 2017 at 01:22 GMT",
        "merged_at": "Wednesday Aug 16, 2017 at 01:22 GMT"
    },
    {
        "key": "WT-3509",
        "number": 3587,
        "state": "closed",
        "title": "WT-3509 __wt_illegal_value doesn't always provide a failure location",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 15, 2017 at 15:29 GMT",
        "updated_at": "Tuesday Aug 15, 2017 at 23:58 GMT",
        "closed_at": "Tuesday Aug 15, 2017 at 22:44 GMT",
        "merged_at": "Tuesday Aug 15, 2017 at 22:44 GMT"
    },
    {
        "key": "WT-3417",
        "number": 3586,
        "state": "closed",
        "title": "WT-3417 Fix compiler warning when timestamps are disabled.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 15, 2017 at 07:39 GMT",
        "updated_at": "Tuesday Aug 15, 2017 at 07:58 GMT",
        "closed_at": "Tuesday Aug 15, 2017 at 07:58 GMT",
        "merged_at": "Tuesday Aug 15, 2017 at 07:58 GMT"
    },
    {
        "key": "WT-3455",
        "number": 3585,
        "state": "closed",
        "title": "WT-3455 Make eviction timestamp aware.",
        "body": "NOT READY FOR REVIEW.\r\n@michaelcahill Here's the first pass at adding some timestamp awareness to eviction.  This isn't correct because the (tiny, fits in cache) iteration of the test even fails, with EBUSY and memory left in cache.  I'm sure the visibility checks aren't quite right, but they do eliminate the failure where the records are evicted.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 15, 2017 at 02:38 GMT",
        "updated_at": "Friday Aug 18, 2017 at 01:16 GMT",
        "closed_at": "Friday Aug 18, 2017 at 01:16 GMT",
        "merged_at": "Friday Aug 18, 2017 at 01:16 GMT"
    },
    {
        "key": "WT-3460",
        "number": 3584,
        "state": "closed",
        "title": "WT-3460 Implement col store rollback to stable timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 14, 2017 at 13:01 GMT",
        "updated_at": "Wednesday Aug 16, 2017 at 12:29 GMT",
        "closed_at": "Wednesday Aug 16, 2017 at 06:31 GMT",
        "merged_at": "Wednesday Aug 16, 2017 at 06:31 GMT"
    },
    {
        "key": "WT-3417",
        "number": 3583,
        "state": "closed",
        "title": "WT-3417 Check for active transactions during upgrade/downgrade.",
        "body": "Fail upgrade / downgrade if the system isn't quiescent.  Document that applications must wait for an upgrade / downgrade to complete before starting any new operations.  Handle WiredTiger's checkpoint thread carefully: make sure no checkpoint is in progress when the compatibility version changes, and the checkpoint thread is already restarted by reconfigure.\r\n\r\nSplit out the reconfigure functionality into its own source file.",
        "base_ref": "develop",
        "created_at": "Monday Aug 14, 2017 at 02:16 GMT",
        "updated_at": "Tuesday Aug 15, 2017 at 06:54 GMT",
        "closed_at": "Tuesday Aug 15, 2017 at 06:54 GMT",
        "merged_at": "Tuesday Aug 15, 2017 at 06:54 GMT"
    },
    {
        "key": "WT-3358",
        "number": 3582,
        "state": "closed",
        "title": "WT-3358 LSM will hang if the manager fails to start",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Aug 12, 2017 at 19:17 GMT",
        "updated_at": "Monday Aug 14, 2017 at 11:25 GMT",
        "closed_at": "Monday Aug 14, 2017 at 11:25 GMT",
        "merged_at": "Monday Aug 14, 2017 at 11:25 GMT"
    },
    {
        "key": "WT-3441",
        "number": 3581,
        "state": "closed",
        "title": "WT-3441 test_timestamp01 doesn't account for a large WT_TIMESTAMP_SIZE",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Aug 12, 2017 at 17:51 GMT",
        "updated_at": "Sunday Aug 13, 2017 at 23:03 GMT",
        "closed_at": "Sunday Aug 13, 2017 at 23:03 GMT",
        "merged_at": "Sunday Aug 13, 2017 at 23:03 GMT"
    },
    {
        "key": "WT-3493",
        "number": 3580,
        "state": "closed",
        "title": "WT-3493 wt_verbose_dump_txn should display timestamp information",
        "body": "@michaelcahill, there's one minor change here that might be of interest. I changed `__wt_timestamp_to_hex_string()` to return the string \"0\" in the case of a zero timestamp.\r\n\r\nThat's potentially interesting if `__wt_txn_global_query_timestamp()` calls that function with a zero timestamp as we'll return \"0\" instead of the empty string. I think that's a bug fix, if anything (unless we document somewhere that an empty string is the same as a \"0\" string), but wanted to call it to your attention.",
        "base_ref": "develop",
        "created_at": "Saturday Aug 12, 2017 at 16:47 GMT",
        "updated_at": "Monday Aug 14, 2017 at 12:51 GMT",
        "closed_at": "Monday Aug 14, 2017 at 06:14 GMT",
        "merged_at": "Monday Aug 14, 2017 at 06:14 GMT"
    },
    {
        "key": "WT-3497",
        "number": 3579,
        "state": "closed",
        "title": "WT-3497 Improve logging message when hitting the WT session limits",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Aug 12, 2017 at 15:23 GMT",
        "updated_at": "Monday Aug 14, 2017 at 06:07 GMT",
        "closed_at": "Monday Aug 14, 2017 at 06:07 GMT",
        "merged_at": "Monday Aug 14, 2017 at 06:07 GMT"
    },
    {
        "key": "WT-3503",
        "number": 3578,
        "state": "closed",
        "title": "WT-3503 Coverity 1379333: unchecked return value, full-build Friday",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 11, 2017 at 15:25 GMT",
        "updated_at": "Monday Aug 14, 2017 at 06:08 GMT",
        "closed_at": "Monday Aug 14, 2017 at 06:07 GMT",
        "merged_at": "Monday Aug 14, 2017 at 06:07 GMT"
    },
    {
        "key": "WT-3499",
        "number": 3577,
        "state": "closed",
        "title": "WT-3499 Move txn_global outside of timestamp ifdef.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 11, 2017 at 11:58 GMT",
        "updated_at": "Friday Aug 11, 2017 at 16:02 GMT",
        "closed_at": "Friday Aug 11, 2017 at 12:48 GMT",
        "merged_at": "Friday Aug 11, 2017 at 12:48 GMT"
    },
    {
        "key": "WT-3502",
        "number": 3576,
        "state": "closed",
        "title": "WT-3502 Only keep 10 modify records between full updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 10, 2017 at 13:09 GMT",
        "updated_at": "Friday Aug 11, 2017 at 07:16 GMT",
        "closed_at": "Friday Aug 11, 2017 at 07:16 GMT",
        "merged_at": "Friday Aug 11, 2017 at 07:16 GMT"
    },
    {
        "key": "WT-3499",
        "number": 3575,
        "state": "closed",
        "title": "WT-3499 Add a visibility rwlock between transactions and checkpoints.",
        "body": "@michaelcahill and @agorrod here's a branch that solves the visibility and checkpoint issue that my test uncovered.  Please review.  It solves the problem even with my aggressive sleep repro case.  I am going to point the perf jobs at this branch for the day too.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 10, 2017 at 11:49 GMT",
        "updated_at": "Friday Aug 11, 2017 at 11:06 GMT",
        "closed_at": "Friday Aug 11, 2017 at 11:06 GMT",
        "merged_at": "Friday Aug 11, 2017 at 11:06 GMT"
    },
    {
        "key": "WT-3499",
        "number": 3574,
        "state": "closed",
        "title": "WT-3499 Have checkpoint wait for in-flight commits to finish.",
        "body": "After checkpoint calculates an LSN that recovery should roll forward from, it should wait for any commits that are in progress (i.e., transactions that have written to the log but not yet become visible) to complete.  This is done by having all transactions hold a read lock from before the log write until they become visible.  Checkpoint waits for a write lock which ensures all in-flight transactions have drained before checkpoint starts its transaction.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 10, 2017 at 10:36 GMT",
        "updated_at": "Thursday Aug 10, 2017 at 23:57 GMT",
        "closed_at": "Thursday Aug 10, 2017 at 23:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3492",
        "number": 3573,
        "state": "closed",
        "title": "WT-3492 Fix for ex_all.c with timestamps disabled.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 10, 2017 at 04:41 GMT",
        "updated_at": "Thursday Aug 10, 2017 at 05:19 GMT",
        "closed_at": "Thursday Aug 10, 2017 at 05:19 GMT",
        "merged_at": "Thursday Aug 10, 2017 at 05:19 GMT"
    },
    {
        "key": "WT-3399",
        "number": 3572,
        "state": "closed",
        "title": "WT-3399 Change the checkpoint conflict test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 10, 2017 at 01:01 GMT",
        "updated_at": "Thursday Aug 10, 2017 at 01:38 GMT",
        "closed_at": "Thursday Aug 10, 2017 at 01:38 GMT",
        "merged_at": "Thursday Aug 10, 2017 at 01:38 GMT"
    },
    {
        "key": "WT-3500",
        "number": 3571,
        "state": "closed",
        "title": "WT-3500 timestamp-abort improvements.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 09, 2017 at 16:13 GMT",
        "updated_at": "Thursday Aug 10, 2017 at 03:43 GMT",
        "closed_at": "Wednesday Aug 09, 2017 at 16:37 GMT",
        "merged_at": "Wednesday Aug 09, 2017 at 16:37 GMT"
    },
    {
        "key": "WT-3483",
        "number": 3570,
        "state": "closed",
        "title": "WT-3483 Keep timestamps out of metadata.",
        "body": "@milkie Let me know if this fixes your issue as well.  I've repro'ed with @michaelcahill 's test and reviewed the proposed fix.  If it works for you then I'll get this merged.",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 08, 2017 at 17:37 GMT",
        "updated_at": "Thursday Aug 10, 2017 at 11:17 GMT",
        "closed_at": "Thursday Aug 10, 2017 at 11:16 GMT",
        "merged_at": "Thursday Aug 10, 2017 at 11:16 GMT"
    },
    {
        "key": "WT-3450",
        "number": 3569,
        "state": "closed",
        "title": "WT-3450 Add verbose=[timestamp] functionality and related verbose messages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 08, 2017 at 05:50 GMT",
        "updated_at": "Wednesday Aug 09, 2017 at 06:51 GMT",
        "closed_at": "Wednesday Aug 09, 2017 at 06:51 GMT",
        "merged_at": "Wednesday Aug 09, 2017 at 06:51 GMT"
    },
    {
        "key": "WT-3489",
        "number": 3568,
        "state": "closed",
        "title": "WT-3489 set commit timestamp",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 08, 2017 at 04:57 GMT",
        "updated_at": "Tuesday Aug 08, 2017 at 05:23 GMT",
        "closed_at": "Tuesday Aug 08, 2017 at 05:23 GMT",
        "merged_at": "Tuesday Aug 08, 2017 at 05:23 GMT"
    },
    {
        "key": "WT-3489",
        "number": 3567,
        "state": "closed",
        "title": "Revert \"WT-3489 Add an API to set the tracked commit_timestamp.\"",
        "body": "Reverts wiredtiger/wiredtiger#3562",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 08, 2017 at 04:55 GMT",
        "updated_at": "Tuesday Aug 08, 2017 at 04:56 GMT",
        "closed_at": "Tuesday Aug 08, 2017 at 04:56 GMT",
        "merged_at": "Tuesday Aug 08, 2017 at 04:56 GMT"
    },
    {
        "key": "WT-3449",
        "number": 3566,
        "state": "closed",
        "title": "WT-3449 Get the Helium software running again.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 07, 2017 at 23:18 GMT",
        "updated_at": "Friday Sep 01, 2017 at 05:05 GMT",
        "closed_at": "Friday Sep 01, 2017 at 05:05 GMT",
        "merged_at": "Friday Sep 01, 2017 at 05:05 GMT"
    },
    {
        "key": "WT-3494",
        "number": 3565,
        "state": "closed",
        "title": "WT-3494 __cursor_needvalue() calls __cursor_localkey(), not __cursor_localvalue()",
        "body": "Found as a bug in the Helium port.",
        "base_ref": "develop",
        "created_at": "Monday Aug 07, 2017 at 21:41 GMT",
        "updated_at": "Monday Aug 07, 2017 at 23:19 GMT",
        "closed_at": "Monday Aug 07, 2017 at 23:19 GMT",
        "merged_at": "Monday Aug 07, 2017 at 23:19 GMT"
    },
    {
        "key": "WT-3492",
        "number": 3564,
        "state": "closed",
        "title": "WT-3492 Cleanup ex_all.c.",
        "body": "In particular, execute as much of the code as possible (the backup calls use an absolute path for documentation purposes so can't be run).  Make all functions static so we have to deliberately avoid calling them.",
        "base_ref": "develop",
        "created_at": "Monday Aug 07, 2017 at 02:51 GMT",
        "updated_at": "Thursday Aug 10, 2017 at 03:38 GMT",
        "closed_at": "Thursday Aug 10, 2017 at 03:38 GMT",
        "merged_at": "Thursday Aug 10, 2017 at 03:38 GMT"
    },
    {
        "key": "WT-3490",
        "number": 3563,
        "state": "closed",
        "title": "WT-3490 WT_CURSOR.modify unaligned size_t access.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 04, 2017 at 19:32 GMT",
        "updated_at": "Tuesday Aug 08, 2017 at 01:33 GMT",
        "closed_at": "Tuesday Aug 08, 2017 at 01:33 GMT",
        "merged_at": "Tuesday Aug 08, 2017 at 01:33 GMT"
    },
    {
        "key": "WT-3489",
        "number": 3562,
        "state": "closed",
        "title": "WT-3489 Add an API to set the tracked commit_timestamp.",
        "body": "This is required during rollback, because the commit_timestamp determines how much of the oplog is visible.",
        "base_ref": "develop",
        "created_at": "Friday Aug 04, 2017 at 07:41 GMT",
        "updated_at": "Tuesday Aug 08, 2017 at 04:55 GMT",
        "closed_at": "Tuesday Aug 08, 2017 at 04:27 GMT",
        "merged_at": "Tuesday Aug 08, 2017 at 04:27 GMT"
    },
    {
        "key": "WT-3486",
        "number": 3561,
        "state": "closed",
        "title": "WT-3486 Discard obsolete updates as part of re-instantiating updates based on the lookaside table.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 04, 2017 at 06:53 GMT",
        "updated_at": "Monday Aug 07, 2017 at 02:47 GMT",
        "closed_at": "Monday Aug 07, 2017 at 02:47 GMT",
        "merged_at": "Monday Aug 07, 2017 at 02:47 GMT"
    },
    {
        "key": "WT-3486",
        "number": 3560,
        "state": "closed",
        "title": "Revert \"WT-3486 Discard obsolete updates as part of re-instantiating updates based on the lookaside table.\"",
        "body": "Reverts wiredtiger/wiredtiger#3557",
        "base_ref": "develop",
        "created_at": "Friday Aug 04, 2017 at 06:51 GMT",
        "updated_at": "Friday Aug 04, 2017 at 06:53 GMT",
        "closed_at": "Friday Aug 04, 2017 at 06:53 GMT",
        "merged_at": "Friday Aug 04, 2017 at 06:53 GMT"
    },
    {
        "key": "WT-3481",
        "number": 3559,
        "state": "closed",
        "title": "WT-3481 Fix an LSM bug where expected chunks size could be overestimated",
        "body": "when choosing chunks for a merge.",
        "base_ref": "develop",
        "created_at": "Friday Aug 04, 2017 at 06:33 GMT",
        "updated_at": "Friday Aug 04, 2017 at 07:33 GMT",
        "closed_at": "Friday Aug 04, 2017 at 07:33 GMT",
        "merged_at": "Friday Aug 04, 2017 at 07:33 GMT"
    },
    {
        "key": "WT-3471",
        "number": 3558,
        "state": "closed",
        "title": "WT-3471 Sweep the table cache after schema changes.",
        "body": "During WT_SESSION::reset, if there has been a schema change (such as a WT_SESSION::drop operation) since the last sweep, do a pass through the table cache and remove any obsolete table handles.\r\n\r\n(cherry picked from commit 74510af)",
        "base_ref": "develop",
        "created_at": "Friday Aug 04, 2017 at 02:20 GMT",
        "updated_at": "Friday Aug 04, 2017 at 02:40 GMT",
        "closed_at": "Friday Aug 04, 2017 at 02:40 GMT",
        "merged_at": "Friday Aug 04, 2017 at 02:40 GMT"
    },
    {
        "key": "WT-3486",
        "number": 3557,
        "state": "closed",
        "title": "WT-3486 Discard obsolete updates as part of re-instantiating updates based on the lookaside table.",
        "body": "@agorrod, a minor change that occurred to me that might be helpful in some workloads.\r\n\r\nFeel free to simply discard the branch without discussion if you don't think it's worth doing.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 03, 2017 at 15:16 GMT",
        "updated_at": "Friday Aug 04, 2017 at 06:53 GMT",
        "closed_at": "Friday Aug 04, 2017 at 02:04 GMT",
        "merged_at": "Friday Aug 04, 2017 at 02:04 GMT"
    },
    {
        "key": "WT-3458",
        "number": 3556,
        "state": "closed",
        "title": "WT-3458 Checkpoint timestamps only apply to non-logged tables.",
        "body": "When logging is enabled for a table, that indicates that updates should become durable immediately, since they will be unconditionally rolled forward by recovery after a crash.  Since checkpoints with a timestamp are intended to create a version on disk that does not include newer changes, it doesn't make sense with immediately durable tables.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 03, 2017 at 06:17 GMT",
        "updated_at": "Thursday Aug 03, 2017 at 13:24 GMT",
        "closed_at": "Thursday Aug 03, 2017 at 13:24 GMT",
        "merged_at": "Thursday Aug 03, 2017 at 13:24 GMT"
    },
    {
        "key": "WT-3459",
        "number": 3555,
        "state": "closed",
        "title": "WT-3459 Clock shifting WT test",
        "body": "This script will test the WT for clock shift.\r\nCurrently this is standalone and need to decide \r\n1. When this test to be initiated\r\n     a) make check\r\n     b) separate test job\r\n2. How to handle libfaketime source / libraries on which this test is dependent.",
        "base_ref": "develop",
        "created_at": "Thursday Aug 03, 2017 at 02:45 GMT",
        "updated_at": "Friday Aug 18, 2017 at 02:41 GMT",
        "closed_at": "Monday Aug 14, 2017 at 00:38 GMT",
        "merged_at": "Monday Aug 14, 2017 at 00:38 GMT"
    },
    {
        "key": "WT-3452",
        "number": 3554,
        "state": "closed",
        "title": "WT-3452 Add timestamp-based recovery test.",
        "body": "@agorrod I added a new test in `test/recovery` for testing timestamps, aborts and recovery.  It is a new program instead of modifying the other one because it adds a new checkpoint thread.  There is a section that is currently ifdef'd out because it can fail until the code for WT-3458 is completed.  Once this is merged I'll add a reminder to that ticket.",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 02, 2017 at 20:28 GMT",
        "updated_at": "Wednesday Aug 09, 2017 at 06:08 GMT",
        "closed_at": "Wednesday Aug 09, 2017 at 06:08 GMT",
        "merged_at": "Wednesday Aug 09, 2017 at 06:08 GMT"
    },
    {
        "key": "WT-3472",
        "number": 3553,
        "state": "closed",
        "title": "WT-3472 WT_CURSOR.modify has incorrect API wrapping macros",
        "body": "Instead of using CURSOR_UPDATE_API_CALL/CURSOR_UPDATE_API_END, use CURSOR_API_CALL/API_END_RET, we're not doing an update, we're only calling an update function.\r\n\r\nReplace an API_END/return (ret) pair with API_END_RET().",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 02, 2017 at 17:01 GMT",
        "updated_at": "Wednesday Aug 02, 2017 at 23:42 GMT",
        "closed_at": "Wednesday Aug 02, 2017 at 23:42 GMT",
        "merged_at": "Wednesday Aug 02, 2017 at 23:42 GMT"
    },
    {
        "key": "WT-3479",
        "number": 3552,
        "state": "closed",
        "title": "WT-3479 resolving modify updates before writing them to the lookaside file causes snapshot isolation failures.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 02, 2017 at 13:22 GMT",
        "updated_at": "Thursday Aug 03, 2017 at 12:44 GMT",
        "closed_at": "Thursday Aug 03, 2017 at 05:28 GMT",
        "merged_at": "Thursday Aug 03, 2017 at 05:28 GMT"
    },
    {
        "key": "WT-3471",
        "number": 3551,
        "state": "closed",
        "title": "WT-3471 Sweep the table cache after schema changes.",
        "body": "During `WT_SESSION::reset`, if there has been a schema change (such as a `WT_SESSION::drop` operation) since the last sweep, do a pass through the table cache and remove any obsolete table handles.",
        "base_ref": "mongodb-3.4",
        "created_at": "Wednesday Aug 02, 2017 at 07:52 GMT",
        "updated_at": "Thursday Aug 03, 2017 at 05:29 GMT",
        "closed_at": "Thursday Aug 03, 2017 at 05:29 GMT",
        "merged_at": "Thursday Aug 03, 2017 at 05:29 GMT"
    },
    {
        "key": "WT-3378",
        "number": 3550,
        "state": "closed",
        "title": "WT-3378 Add workload to maintain dirty cache around 5% during checkpoint scrub",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 01, 2017 at 23:47 GMT",
        "updated_at": "Thursday Aug 03, 2017 at 03:59 GMT",
        "closed_at": "Thursday Aug 03, 2017 at 03:59 GMT",
        "merged_at": "Thursday Aug 03, 2017 at 03:59 GMT"
    },
    {
        "key": "WT-3480",
        "number": 3549,
        "state": "closed",
        "title": "WT-3480 Don't set the async flag durings async stats",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 01, 2017 at 07:11 GMT",
        "updated_at": "Wednesday Aug 02, 2017 at 17:50 GMT",
        "closed_at": "Wednesday Aug 02, 2017 at 17:50 GMT",
        "merged_at": "Wednesday Aug 02, 2017 at 17:50 GMT"
    },
    {
        "key": "WT-3478",
        "number": 3548,
        "state": "closed",
        "title": "WT-3478 Coverity CID 1378760: Insecure data handling (TAINTED_SCALAR)",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 31, 2017 at 13:31 GMT",
        "updated_at": "Monday Jul 31, 2017 at 14:01 GMT",
        "closed_at": "Monday Jul 31, 2017 at 14:01 GMT",
        "merged_at": "Monday Jul 31, 2017 at 14:01 GMT"
    },
    {
        "key": "WT-3476",
        "number": 3545,
        "state": "closed",
        "title": "WT-3476 Make tables first class data handles.",
        "body": "Keep a single handle for each table (rather than one per session) and reuse existing sweep logic so that idle tables are closed.",
        "base_ref": "develop",
        "created_at": "Monday Jul 31, 2017 at 06:54 GMT",
        "updated_at": "Monday Aug 28, 2017 at 02:27 GMT",
        "closed_at": "Monday Aug 28, 2017 at 02:27 GMT",
        "merged_at": "Monday Aug 28, 2017 at 02:27 GMT"
    },
    {
        "key": "WT-3456",
        "number": 3544,
        "state": "closed",
        "title": "WT-3456 Ensure stats are disabled when statistics is set to none",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jul 30, 2017 at 23:52 GMT",
        "updated_at": "Monday Jul 31, 2017 at 03:59 GMT",
        "closed_at": "Monday Jul 31, 2017 at 03:59 GMT",
        "merged_at": "Monday Jul 31, 2017 at 03:59 GMT"
    },
    {
        "key": "WT-3471",
        "number": 3543,
        "state": "closed",
        "title": "WT-3471 the session table cache is never cleared leading to apparent memory leaks",
        "body": "@agorrod, I'm suspicious this is the problem we're seeing in HELP-4534.\r\n\r\nNote that this fix isn't sufficient in the case of a session never being reset.",
        "base_ref": "develop",
        "created_at": "Sunday Jul 30, 2017 at 22:34 GMT",
        "updated_at": "Monday Jul 31, 2017 at 06:19 GMT",
        "closed_at": "Monday Jul 31, 2017 at 06:19 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3470",
        "number": 3542,
        "state": "closed",
        "title": "WT-3470 table open/drop always open a metadata cursor",
        "body": "@agorrod, in short, `__schema_open_table` holds the metadata cursor pinned across a call to `__wt_schema_open_colgroups`, which calls `__wt_metadata_search`, and so is forced to open an additional metadata cursor.\r\n\r\nThere's a similar case when dropping a table: `__wt_metadata_remove` opens a metadata cursor, and then calls `__wt_meta_track_update` which also opens a metadata cursor, forcing drop to open a second metadata cursor. I'm less comfortable with this change, but I think it's safe.",
        "base_ref": "develop",
        "created_at": "Sunday Jul 30, 2017 at 21:18 GMT",
        "updated_at": "Monday Jul 31, 2017 at 03:47 GMT",
        "closed_at": "Monday Jul 31, 2017 at 03:47 GMT",
        "merged_at": "Monday Jul 31, 2017 at 03:47 GMT"
    },
    {
        "key": "WT-3467",
        "number": 3541,
        "state": "closed",
        "title": "WT-3467 Minor lint/cleanup",
        "body": "Full-build Friday.",
        "base_ref": "develop",
        "created_at": "Friday Jul 28, 2017 at 14:55 GMT",
        "updated_at": "Monday Jul 31, 2017 at 01:11 GMT",
        "closed_at": "Monday Jul 31, 2017 at 01:11 GMT",
        "merged_at": "Monday Jul 31, 2017 at 01:11 GMT"
    },
    {
        "key": "WT-3466",
        "number": 3540,
        "state": "closed",
        "title": "WT-3466 Track the first commit_timestamp set in a transaction.",
        "body": "In particular, if a commit_timestamp is set via `WT_SESSION::timestamp_transaction` and again later via `WT_SESSION::commit_transaction`, there was a window where `session->txn.commit_timestamp` was zero, which caused `WT_CONNECTION::query_timestamp` to return incorrect results.\r\n\r\nSimilarly, the shared list of transactions with commit timestamps should be sorted by the first commit timestamp: we don't (and shouldn't) re-sort that list if a transaction's commit_timestamp is updated.",
        "base_ref": "develop",
        "created_at": "Friday Jul 28, 2017 at 06:16 GMT",
        "updated_at": "Friday Jul 28, 2017 at 07:21 GMT",
        "closed_at": "Friday Jul 28, 2017 at 07:21 GMT",
        "merged_at": "Friday Jul 28, 2017 at 07:21 GMT"
    },
    {
        "key": "WT-3463",
        "number": 3539,
        "state": "closed",
        "title": "WT-3463 Add test phase to take backup without a checkpoint.",
        "body": "@agorrod This case didn't seem covered in any of the other tickets.  I added a phase to the timestamp test that makes a backup without first doing a checkpoint, recovering from the previous checkpoint.  Please review.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 27, 2017 at 20:22 GMT",
        "updated_at": "Friday Jul 28, 2017 at 01:34 GMT",
        "closed_at": "Friday Jul 28, 2017 at 01:34 GMT",
        "merged_at": "Friday Jul 28, 2017 at 01:34 GMT"
    },
    {
        "key": "WT-3422",
        "number": 3538,
        "state": "closed",
        "title": "WT-3422 Add upgrade/downgrade doc text",
        "body": "@keithbostic Here are some text changes for upgrade/downgrade in the docs.  Please review.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 27, 2017 at 19:48 GMT",
        "updated_at": "Friday Jul 28, 2017 at 01:59 GMT",
        "closed_at": "Friday Jul 28, 2017 at 01:59 GMT",
        "merged_at": "Friday Jul 28, 2017 at 01:59 GMT"
    },
    {
        "key": "WT-3461",
        "number": 3537,
        "state": "closed",
        "title": "WT-3461 Use CLOCK_MONOTONIC for pthread_cond_timedwait if possible.",
        "body": "Regardless, don't adjust the realtime clock before calculating when a timed sleep should end.  Otherwise, we can sleep for longer than expected by however much the clock changed.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 27, 2017 at 06:24 GMT",
        "updated_at": "Friday Jul 28, 2017 at 06:21 GMT",
        "closed_at": "Friday Jul 28, 2017 at 06:21 GMT",
        "merged_at": "Friday Jul 28, 2017 at 06:21 GMT"
    },
    {
        "key": "WT-3410",
        "number": 3536,
        "state": "closed",
        "title": "WT-3410 Add activity diagram in the documentation for schema rename",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 27, 2017 at 04:17 GMT",
        "updated_at": "Thursday Jul 27, 2017 at 05:37 GMT",
        "closed_at": "Thursday Jul 27, 2017 at 05:36 GMT",
        "merged_at": "Thursday Jul 27, 2017 at 05:36 GMT"
    },
    {
        "key": "WT-3336",
        "number": 3535,
        "state": "closed",
        "title": "WT-3336 Enable statistics by default in wtperf",
        "body": "Statistics gathering enabled on a 1s basis and output in JSON.",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 25, 2017 at 02:23 GMT",
        "updated_at": "Monday Jul 31, 2017 at 03:16 GMT",
        "closed_at": "Monday Jul 31, 2017 at 03:16 GMT",
        "merged_at": "Monday Jul 31, 2017 at 03:16 GMT"
    },
    {
        "key": "WT-3412",
        "number": 3534,
        "state": "closed",
        "title": "WT-3412 Backoff logic in bt_delete and bt_walk",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 24, 2017 at 06:46 GMT",
        "updated_at": "Wednesday Jul 26, 2017 at 06:32 GMT",
        "closed_at": "Wednesday Jul 26, 2017 at 06:32 GMT",
        "merged_at": "Wednesday Jul 26, 2017 at 06:32 GMT"
    },
    {
        "key": "WT-3446",
        "number": 3533,
        "state": "closed",
        "title": "WT-3446 Temporarily disabled checkpoint timestamp testing.",
        "body": "Also modified checkpoint testing to return error if timestamp testing\r\nis initiated",
        "base_ref": "develop",
        "created_at": "Monday Jul 24, 2017 at 05:51 GMT",
        "updated_at": "Monday Jul 24, 2017 at 07:52 GMT",
        "closed_at": "Monday Jul 24, 2017 at 07:52 GMT",
        "merged_at": "Monday Jul 24, 2017 at 07:52 GMT"
    },
    {
        "key": "WT-3447",
        "number": 3532,
        "state": "closed",
        "title": "WT-3447 Fix python test so it will loop checking for WiredTigerTables",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 24, 2017 at 04:26 GMT",
        "updated_at": "Tuesday Jul 25, 2017 at 04:26 GMT",
        "closed_at": "Tuesday Jul 25, 2017 at 04:26 GMT",
        "merged_at": "Tuesday Jul 25, 2017 at 04:26 GMT"
    },
    {
        "key": "WT-2309",
        "number": 3531,
        "state": "closed",
        "title": "WT-2309 Add option to cause delays in internal page split code to aid testing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 24, 2017 at 04:20 GMT",
        "updated_at": "Wednesday Jul 26, 2017 at 07:27 GMT",
        "closed_at": "Wednesday Jul 26, 2017 at 07:27 GMT",
        "merged_at": "Wednesday Jul 26, 2017 at 07:27 GMT"
    },
    {
        "key": "WT-3442",
        "number": 3529,
        "state": "closed",
        "title": "WT-3442 Coverity 1378213: false positive on diagnostic assignment.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 21, 2017 at 11:26 GMT",
        "updated_at": "Friday Jul 21, 2017 at 11:45 GMT",
        "closed_at": "Friday Jul 21, 2017 at 11:44 GMT",
        "merged_at": "Friday Jul 21, 2017 at 11:44 GMT"
    },
    {
        "key": "WT-3387",
        "number": 3528,
        "state": "closed",
        "title": "WT-3387 Fix checkpoint support for read_timestamp.",
        "body": "Recent changes cleared the `WT_TXN_HAS_TS_READ` flag in the special handling of the checkpoint transaction in `__checkpoint_prepare`.  This change splits the functional flag (HAS_TS_READ) from the flag indicating whether the information has been published by hooking the transaction into a list (PUBLIC_TS_READ).",
        "base_ref": "develop",
        "created_at": "Friday Jul 21, 2017 at 07:37 GMT",
        "updated_at": "Friday Jul 21, 2017 at 19:57 GMT",
        "closed_at": "Friday Jul 21, 2017 at 19:57 GMT",
        "merged_at": "Friday Jul 21, 2017 at 19:57 GMT"
    },
    {
        "key": "WT-2705",
        "number": 3527,
        "state": "closed",
        "title": "WT-2705 Add statistics to track latency of cursor operations and of disk operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 21, 2017 at 07:25 GMT",
        "updated_at": "Friday Dec 22, 2017 at 16:34 GMT",
        "closed_at": "Friday Dec 22, 2017 at 16:34 GMT",
        "merged_at": "Friday Dec 22, 2017 at 16:34 GMT"
    },
    {
        "key": "WT-3433",
        "number": 3526,
        "state": "closed",
        "title": "WT-3433 Add support for alter and readonly.  Add test case.",
        "body": "@agorrod Please review this small change to correctly handle alter in a readonly connection.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 20, 2017 at 20:40 GMT",
        "updated_at": "Friday Jul 21, 2017 at 03:00 GMT",
        "closed_at": "Friday Jul 21, 2017 at 03:00 GMT",
        "merged_at": "Friday Jul 21, 2017 at 03:00 GMT"
    },
    {
        "key": "WT-3440",
        "number": 3525,
        "state": "closed",
        "title": "WT-3440 Checkpoint start should add a log record.",
        "body": "@michaelcahill and @agorrod Here's a fix for the problem where the checkpoint LSN refers to the last real record and then recovery applies that record.  Here are points of note:\r\n* The test has a lot of enhancements over the original in WT-3434.\r\n* This pull request is based off develop as of 46975e5.  It will not pass on current develop due to the issues described in the ticket about different behavior.\r\n* I use a log message/printf record.  Should any other information be added to the message?",
        "base_ref": "develop",
        "created_at": "Thursday Jul 20, 2017 at 19:29 GMT",
        "updated_at": "Wednesday Jul 26, 2017 at 06:24 GMT",
        "closed_at": "Wednesday Jul 26, 2017 at 06:24 GMT",
        "merged_at": "Wednesday Jul 26, 2017 at 06:24 GMT"
    },
    {
        "key": "WT-3432",
        "number": 3524,
        "state": "closed",
        "title": "WT-3432 workgen: fix braces error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 20, 2017 at 18:08 GMT",
        "updated_at": "Friday Jul 21, 2017 at 11:13 GMT",
        "closed_at": "Friday Jul 21, 2017 at 03:00 GMT",
        "merged_at": "Friday Jul 21, 2017 at 03:00 GMT"
    },
    {
        "key": "WT-3380",
        "number": 3523,
        "state": "closed",
        "title": "WT-3380 Remove packed attribute from WT_UPDATE.",
        "body": "@michaelcahill, @sulabhM, here's a different change.\r\n\r\nThe fundamental change is adding `uint8_t data[3]` at the end of the `WT_UPDATE` structure: that means we can allocate `sizeof(WT_UPDATE)` without wasting bytes and it gives us a field name to use, we can replace `WT_UPDATE_DATA(upd);` with the more natural `upd->data;`\r\n\r\nThe only downside I see is we potentially waste 3 bytes on `WT_UPDATE` structures with no data package (so, `WT_UPDATE_DELETED`, `WT_UPDATE_RESERVED`, or zero-length values), but because we calculate the memory use of a `WT_UPDATE` structure as aligned to 32B, I don't think there's any actual loss.\r\n\r\nAlso, I tucked in a separate change in 14d3d0a, which locates the declaration of the `WT_UPDATE` timestamp. If you don't do that, using a non-8B timestamp (for example, `--with-timestamp-size=37`) will either fail the build because padding will get inserted in the middle of the structure, or fields like `upd->next` will be unaligned.",
        "base_ref": "wt-3380",
        "created_at": "Thursday Jul 20, 2017 at 13:39 GMT",
        "updated_at": "Friday Jul 21, 2017 at 07:21 GMT",
        "closed_at": "Friday Jul 21, 2017 at 07:21 GMT",
        "merged_at": "Friday Jul 21, 2017 at 07:21 GMT"
    },
    {
        "key": "WT-3380",
        "number": 3522,
        "state": "closed",
        "title": "WT-3380 Remove packed attribute from WT_UPDATE.",
        "body": "We still check that the compiler doesn't add padding between fields, so the structure is the expected size, but deal with any padding added at the end.\r\n\r\nThis should allow compilers to generate more efficient code when reading fields from WT_UPDATE because they can assume fields are aligned appropriately.",
        "base_ref": "wt-3380",
        "created_at": "Thursday Jul 20, 2017 at 04:49 GMT",
        "updated_at": "Friday Jul 21, 2017 at 02:33 GMT",
        "closed_at": "Friday Jul 21, 2017 at 02:33 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3316",
        "number": 3521,
        "state": "closed",
        "title": "WT-3316 Add a developer documentation section starting with schema create",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 20, 2017 at 01:25 GMT",
        "updated_at": "Sunday Jul 23, 2017 at 23:24 GMT",
        "closed_at": "Sunday Jul 23, 2017 at 23:24 GMT",
        "merged_at": "Sunday Jul 23, 2017 at 23:24 GMT"
    },
    {
        "key": "WT-3439",
        "number": 3520,
        "state": "closed",
        "title": "WT-3439 lint cleanup",
        "body": "@agorrod, there's a bug in the new timestamp code (b06db73), so I did \"full-build Friday\" a few days early.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 19, 2017 at 14:34 GMT",
        "updated_at": "Thursday Jul 20, 2017 at 00:44 GMT",
        "closed_at": "Thursday Jul 20, 2017 at 00:44 GMT",
        "merged_at": "Thursday Jul 20, 2017 at 00:44 GMT"
    },
    {
        "key": "WT-3438",
        "number": 3519,
        "state": "closed",
        "title": "WT-3438 Don't tune eviction thread count when the count is fixed",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 19, 2017 at 06:41 GMT",
        "updated_at": "Wednesday Jul 19, 2017 at 07:38 GMT",
        "closed_at": "Wednesday Jul 19, 2017 at 07:37 GMT",
        "merged_at": "Wednesday Jul 19, 2017 at 07:37 GMT"
    },
    {
        "key": "WT-3047",
        "number": 3518,
        "state": "closed",
        "title": "WT-3047 To uncover race conditions in page split in diagnostics mode",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 19, 2017 at 06:32 GMT",
        "updated_at": "Friday Jul 21, 2017 at 06:14 GMT",
        "closed_at": "Friday Jul 21, 2017 at 06:14 GMT",
        "merged_at": "Friday Jul 21, 2017 at 06:14 GMT"
    },
    {
        "key": "WT-3426",
        "number": 3517,
        "state": "closed",
        "title": "WT-3426 Add update only wtperf workload",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 19, 2017 at 01:35 GMT",
        "updated_at": "Wednesday Jul 19, 2017 at 02:01 GMT",
        "closed_at": "Wednesday Jul 19, 2017 at 02:01 GMT",
        "merged_at": "Wednesday Jul 19, 2017 at 02:01 GMT"
    },
    {
        "key": "WT-3406",
        "number": 3516,
        "state": "closed",
        "title": "WT-3406 Reconciliation should ignore concurrent updates.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 19, 2017 at 00:55 GMT",
        "updated_at": "Thursday Jul 20, 2017 at 01:58 GMT",
        "closed_at": "Thursday Jul 20, 2017 at 01:58 GMT",
        "merged_at": "Thursday Jul 20, 2017 at 01:58 GMT"
    },
    {
        "key": "WT-3381",
        "number": 3515,
        "state": "closed",
        "title": "WT-3381 Improve concurrency in the transaction subsystem",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 18, 2017 at 07:03 GMT",
        "updated_at": "Wednesday Jul 19, 2017 at 05:42 GMT",
        "closed_at": "Wednesday Jul 19, 2017 at 05:42 GMT",
        "merged_at": "Wednesday Jul 19, 2017 at 05:42 GMT"
    },
    {
        "key": "WT-3381",
        "number": 3514,
        "state": "closed",
        "title": "Revert \"WT-3381 Improve timestamp concurrency.\"",
        "body": "Reverts wiredtiger/wiredtiger#3511",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 18, 2017 at 06:59 GMT",
        "updated_at": "Thursday Jul 20, 2017 at 04:42 GMT",
        "closed_at": "Tuesday Jul 18, 2017 at 07:00 GMT",
        "merged_at": "Tuesday Jul 18, 2017 at 07:00 GMT"
    },
    {
        "key": "WT-3140",
        "number": 3513,
        "state": "closed",
        "title": "WT-3140 Revert change removing camel casing in JSON statistics",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 18, 2017 at 01:16 GMT",
        "updated_at": "Tuesday Jul 18, 2017 at 02:57 GMT",
        "closed_at": "Tuesday Jul 18, 2017 at 02:57 GMT",
        "merged_at": "Tuesday Jul 18, 2017 at 02:57 GMT"
    },
    {
        "key": "WT-3418",
        "number": 3512,
        "state": "closed",
        "title": "WT-3418 Fix a block manager race in tree close/open",
        "body": "@sueloverso, for your consideration.\r\n\r\nI don't see any reason not to delay setting the `WT_DHANDLE_DEAD` flag until after the block object is discarded, it's a cheap operation.\r\n\r\nI don't think this helps with WT-3232 because my reading of that ticket was the cache blocks themselves need to be discarded (although I don't understand why that's the case).",
        "base_ref": "develop",
        "created_at": "Monday Jul 17, 2017 at 14:23 GMT",
        "updated_at": "Thursday Jul 20, 2017 at 04:19 GMT",
        "closed_at": "Thursday Jul 20, 2017 at 04:19 GMT",
        "merged_at": "Thursday Jul 20, 2017 at 04:19 GMT"
    },
    {
        "key": "WT-3381",
        "number": 3511,
        "state": "closed",
        "title": "WT-3381 Improve timestamp concurrency.",
        "body": "Removes timestamps from `WT_TXN_STATE` as a step towards merging `WT_TXN_STATE` with `WT_TXN`.\r\n\r\nThis change has transactions add themselves to global, sorted lists (one ordered by commit timestamp, the other ordered by read timestamp).  Each list has its own rwlock, and scans have been replaced by peeking at the first (oldest) transaction in the list.  The list's lock protects the\r\nrelevant fields in `WT_TXN` (i.e., no thread will read `txn->commit_timestamp` unless the transaction is in the `commit_timestamp` list).\r\n\r\nThis should reduce contention for `txn_global->rwlock`, which can be further decomposed in future (e.g., eliminating the scan for `__wt_txn_update_oldest` and replacing `__wt_txn_get_snapshot` with a loop that makes a copy of running transaction IDs in order).",
        "base_ref": "develop",
        "created_at": "Monday Jul 17, 2017 at 06:50 GMT",
        "updated_at": "Tuesday Jul 18, 2017 at 06:59 GMT",
        "closed_at": "Tuesday Jul 18, 2017 at 05:26 GMT",
        "merged_at": "Tuesday Jul 18, 2017 at 05:26 GMT"
    },
    {
        "key": "WT-3380",
        "number": 3510,
        "state": "closed",
        "title": "WT-3380 Special case 8-byte timestamps",
        "body": "Special case 8-byte timestamps.",
        "base_ref": "develop",
        "created_at": "Saturday Jul 15, 2017 at 15:18 GMT",
        "updated_at": "Wednesday Jul 19, 2017 at 06:03 GMT",
        "closed_at": "Wednesday Jul 19, 2017 at 06:03 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3380",
        "number": 3509,
        "state": "closed",
        "title": "WT-3380 Make 8-byte timestamps a special case",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 13, 2017 at 06:47 GMT",
        "updated_at": "Sunday Jul 23, 2017 at 23:57 GMT",
        "closed_at": "Sunday Jul 23, 2017 at 23:56 GMT",
        "merged_at": "Sunday Jul 23, 2017 at 23:56 GMT"
    },
    {
        "key": "WT-3425",
        "number": 3508,
        "state": "closed",
        "title": "WT-3425 In workgen, added 'reopen' configuration option for Operations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 12, 2017 at 14:53 GMT",
        "updated_at": "Friday Jul 14, 2017 at 01:59 GMT",
        "closed_at": "Friday Jul 14, 2017 at 01:59 GMT",
        "merged_at": "Friday Jul 14, 2017 at 01:59 GMT"
    },
    {
        "key": "WT-3424",
        "number": 3507,
        "state": "closed",
        "title": "WT-3424 additional gcc 7.1 compile warnings.",
        "body": "Printing out an \"int\" takes 20 characters.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 12, 2017 at 12:22 GMT",
        "updated_at": "Wednesday Jul 12, 2017 at 12:45 GMT",
        "closed_at": "Wednesday Jul 12, 2017 at 12:45 GMT",
        "merged_at": "Wednesday Jul 12, 2017 at 12:45 GMT"
    },
    {
        "key": "WT-3388",
        "number": 3506,
        "state": "closed",
        "title": "WT-3388 Add new API that allows forgetting history newer than a timestamp",
        "body": "The history must be newer than the most recent oldest timestamp.\r\n\r\nPrototype, only works for row store and lightly tested.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 12, 2017 at 04:50 GMT",
        "updated_at": "Tuesday Aug 08, 2017 at 01:53 GMT",
        "closed_at": "Tuesday Aug 08, 2017 at 01:53 GMT",
        "merged_at": "Tuesday Aug 08, 2017 at 01:53 GMT"
    },
    {
        "key": "WT-3421",
        "number": 3505,
        "state": "closed",
        "title": "WT-3421 Fix unreachable code error exposed when diagnostic build is off.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 10, 2017 at 18:57 GMT",
        "updated_at": "Thursday Jul 20, 2017 at 04:42 GMT",
        "closed_at": "Monday Jul 10, 2017 at 19:31 GMT",
        "merged_at": "Monday Jul 10, 2017 at 19:31 GMT"
    },
    {
        "key": "WT-3417",
        "number": 3504,
        "state": "closed",
        "title": "WT-3417 Drain transactions during upgrade/downgrade.",
        "body": "@sueloverso, for your consideration.\r\n\r\nI'm not sure where we want to go with testing on this one, let's talk that over.",
        "base_ref": "develop",
        "created_at": "Friday Jul 07, 2017 at 12:47 GMT",
        "updated_at": "Monday Aug 14, 2017 at 02:16 GMT",
        "closed_at": "Monday Aug 14, 2017 at 02:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3387",
        "number": 3503,
        "state": "closed",
        "title": "WT-3387 Add use_timestamp option for checkpoint",
        "body": "@agorrod This is not ready for merge but I wanted to open a PR in case anyone needs to see this code while I'm away.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 06, 2017 at 21:36 GMT",
        "updated_at": "Wednesday Jul 26, 2017 at 15:25 GMT",
        "closed_at": "Wednesday Jul 26, 2017 at 07:26 GMT",
        "merged_at": "Wednesday Jul 26, 2017 at 07:26 GMT"
    },
    {
        "key": "WT-3413",
        "number": 3502,
        "state": "closed",
        "title": "WT-3413 Add more aggressive compile warning flags to Jenkins Windows job",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 06, 2017 at 20:55 GMT",
        "updated_at": "Friday Jul 07, 2017 at 22:03 GMT",
        "closed_at": "Friday Jul 07, 2017 at 22:03 GMT",
        "merged_at": "Friday Jul 07, 2017 at 22:03 GMT"
    },
    {
        "key": "WT-3310",
        "number": 3501,
        "state": "closed",
        "title": "WT-3310 Fix test/format to tolerate EBUSY with LSM.",
        "body": "@keithbostic Please take a look at this.  This fixes the several test/format failures when alter, LSM and compact are configured.  In that case, it is normal that EBUSY could be returned and test/format should not die in that case.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 06, 2017 at 19:02 GMT",
        "updated_at": "Thursday Jul 06, 2017 at 20:24 GMT",
        "closed_at": "Thursday Jul 06, 2017 at 20:24 GMT",
        "merged_at": "Thursday Jul 06, 2017 at 20:24 GMT"
    },
    {
        "key": "WT-3415",
        "number": 3500,
        "state": "closed",
        "title": "WT-3415 Add locking around setting txn_state timestamp",
        "body": "@keithbostic Please review this change.  I looked at all calls to `wt_timestamp_set*` and the two we both already found were the only ones missing the locking.  One thing to note, in `wt_txn_release` I left in the `WT_PUBLISH` and the barrier even though we're holding the lock.\r\n\r\n@milkie You could try this branch with your test and see if it solves your problem.  Also let me know if you think including some new assertions would be helpful going forward.  Adding them into this change would be easy and convenient.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 06, 2017 at 16:37 GMT",
        "updated_at": "Thursday Jul 06, 2017 at 20:10 GMT",
        "closed_at": "Thursday Jul 06, 2017 at 20:10 GMT",
        "merged_at": "Thursday Jul 06, 2017 at 20:10 GMT"
    },
    {
        "key": "WT-3394",
        "number": 3499,
        "state": "closed",
        "title": "WT-3394 Fix compilation warnings for GCC-7",
        "body": "This was merged once before, but reverted due to segfaults in wtperf:\r\nhttp://build.wiredtiger.com:8080/job/wiredtiger-perf-lsm/2792\r\n\r\nAnd a build failure on Windows:\r\nhttps://evergreen.mongodb.com/task/wiredtiger_windows_64_compile_windows_alt_d5f82a43f1e0c8aafd38f0098bc9349a6de335e6_17_07_06_04_52_16\r\n\r\n@sulabhM Is looking at the wtperf failure, and I pushed a fix for the Windows issue.",
        "base_ref": "develop",
        "created_at": "Thursday Jul 06, 2017 at 06:04 GMT",
        "updated_at": "Thursday Jul 06, 2017 at 14:01 GMT",
        "closed_at": "Thursday Jul 06, 2017 at 14:01 GMT",
        "merged_at": "Thursday Jul 06, 2017 at 14:01 GMT"
    },
    {
        "key": "WT-3394",
        "number": 3498,
        "state": "closed",
        "title": "Revert \"WT-3394 Build WiredTiger with gcc7\"",
        "body": "Reverts wiredtiger/wiredtiger#3492",
        "base_ref": "develop",
        "created_at": "Thursday Jul 06, 2017 at 05:57 GMT",
        "updated_at": "Thursday Jul 06, 2017 at 05:57 GMT",
        "closed_at": "Thursday Jul 06, 2017 at 05:57 GMT",
        "merged_at": "Thursday Jul 06, 2017 at 05:57 GMT"
    },
    {
        "key": "WT-3403",
        "number": 3497,
        "state": "closed",
        "title": "WT-3403 Restore panic if writing a log record fails.",
        "body": "self-review - the panic message code was incorrectly removed sometime during WT-3039.  Restore it.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 05, 2017 at 18:01 GMT",
        "updated_at": "Thursday Jul 20, 2017 at 04:42 GMT",
        "closed_at": "Wednesday Jul 05, 2017 at 18:22 GMT",
        "merged_at": "Wednesday Jul 05, 2017 at 18:22 GMT"
    },
    {
        "key": "WT-3308",
        "number": 3496,
        "state": "closed",
        "title": "WT-3308 Add statistics tracking around yield loops",
        "body": "Request for review @agorrod, @sulabhM \r\nIf the changes are fine for this statistics item, will proceed with others as well after this review is completed.\r\nCode merge can happen once all other statistics items are also added.",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 05, 2017 at 01:33 GMT",
        "updated_at": "Friday Jul 21, 2017 at 03:12 GMT",
        "closed_at": "Friday Jul 21, 2017 at 03:12 GMT",
        "merged_at": "Friday Jul 21, 2017 at 03:12 GMT"
    },
    {
        "key": "WT-3406",
        "number": 3495,
        "state": "closed",
        "title": "WT-3406 Reconciliation is choosing reserved records for writing.",
        "body": "@agorrod, when I wrote this code I assumed that the reserved records were updated to an aborted state before the committed transaction state can roll forward, but that's apparently not the case.\r\n\r\nThe update happens in `__wt_txn_commit()`:\r\n```\r\n    686         /* Process and free updates. */\r\n    687         for (i = 0, op = txn->mod; i < txn->mod_count; i++, op++) {\r\n    688                 switch (op->type) {\r\n    689                 case WT_TXN_OP_BASIC:\r\n    690                 case WT_TXN_OP_BASIC_TS:\r\n    691                 case WT_TXN_OP_INMEM:\r\n    692                         /*\r\n    693                          * Switch reserved operations to abort to\r\n    694                          * simplify obsolete update list truncation.\r\n    695                          */\r\n    696                         if (op->u.upd->type == WT_UPDATE_RESERVED) {\r\n    697                                 op->u.upd->txnid = WT_TXN_ABORTED;\r\n    698                                 break;\r\n    699                         }\r\n```\r\nI'm not seeing where the committed transaction state is allowed to roll forward, do you know where that happens?\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 03, 2017 at 22:21 GMT",
        "updated_at": "Tuesday Jul 18, 2017 at 07:16 GMT",
        "closed_at": "Tuesday Jul 18, 2017 at 07:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3409",
        "number": 3494,
        "state": "closed",
        "title": "WT-3409 WiredTiger generations can silently self-deadlock.",
        "body": "Panic if we self-deadlock in the generation code.",
        "base_ref": "develop",
        "created_at": "Monday Jul 03, 2017 at 17:06 GMT",
        "updated_at": "Tuesday Jul 04, 2017 at 02:49 GMT",
        "closed_at": "Tuesday Jul 04, 2017 at 02:49 GMT",
        "merged_at": "Tuesday Jul 04, 2017 at 02:49 GMT"
    },
    {
        "key": "WT-3402",
        "number": 3493,
        "state": "closed",
        "title": "WT-3402 Move cached overflow records to the update list.",
        "body": "One of the problems I'm running into in [WT-3338](https://jira.mongodb.org/browse/WT-3338) (storing delta changes in WT_UPDATE lists as part of the partial-update optimizations), is dealing with delta records that modify overflow values that were removed, but had to cached for older readers. This change simplifies that partial update problem by moving cached overflow values into the WT_UPDATE list instead of maintaining them in a separate list.\r\n\r\nI'm pushing it separately because it's a relatively isolated change with its own tradeoffs.\r\n\r\nThis should be an overall improvement:\r\n* we're no longer acquiring any transactional state in order to track a cached overflow value,\r\n* we're allocating less memory to store cached overflow values,\r\n* we don't have to search a separate cache list to find the values. (In fact, I've never actually seen a lookaside into the cached list fire in testing. Because of the operational ordering, it's really unlikely a reading thread will race with the thread removing an overflow value.)\r\n\r\nOne downside is I added an array of paired pointers in the `WT_PAGE_MODIFY` structure that's never truncated, and it can theoretically grow to the number of overflow values on the page that have been deleted. I don't think that's likely to be a problem -- if reviewers disagree, we could add that size calculation into the page's memory footprint so the page would be evicted if the list grew too large.",
        "base_ref": "develop",
        "created_at": "Sunday Jul 02, 2017 at 17:41 GMT",
        "updated_at": "Tuesday Jul 04, 2017 at 04:21 GMT",
        "closed_at": "Tuesday Jul 04, 2017 at 04:21 GMT",
        "merged_at": "Tuesday Jul 04, 2017 at 04:21 GMT"
    },
    {
        "key": "WT-3394",
        "number": 3492,
        "state": "closed",
        "title": "WT-3394 Build WiredTiger with gcc7",
        "body": "Hi, everybody. Here's what I think it takes to build WiredTiger with gcc7. This pull request also adds several new gcc warnings flags to our builds with gcc6.\r\n\r\nOnce we merge this pull request, we should update the Jenkins compiler test to include gcc7.\r\n\r\nReviewers, the commits (hopefully!) include an explanation for why I made the change I did, so reviewing in commit order might make sense instead of reviewing the full set of changes.\r\n\r\nThis doesn't yet build cleanly with gcc7, there's a complaint I haven't figured out. I don't see the problem, so I'm hesitant to push a workaround. Anybody that figures it out before I do gets bragging rights for a month. :)\r\n```\r\nIn file included from ../../src/include/wt_internal.h:374:0,\r\nfrom ../../test/utility/test_util.h:28,\r\nfrom intpack-test.c:29:\r\nintpack-test.c: In function \u2018main\u2019:\r\n../../src/include/intpack.i:153:18: error: \u2018*((void *)&buf+8)\u2019 may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\nx = (x << 8) | *p++;\r\n^~~~\r\nintpack-test.c:35:10: note: \u2018*((void *)&buf+8)\u2019 was declared here\r\nuint8_t buf[WT_INTPACK64_MAXSIZE], *p;\r\n^~~\r\nIn file included from ../../src/include/wt_internal.h:374:0,\r\nfrom ../../test/utility/test_util.h:28,\r\nfrom intpack-test.c:29:\r\n../../src/include/intpack.i:153:18: error: \u2018*((void *)&buf+7)\u2019 may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\nx = (x << 8) | *p++;\r\n^~~~\r\nintpack-test.c:35:10: note: \u2018*((void *)&buf+7)\u2019 was declared here\r\nuint8_t buf[WT_INTPACK64_MAXSIZE], *p;\r\n^~~\r\nIn file included from ../../src/include/wt_internal.h:374:0,\r\nfrom ../../test/utility/test_util.h:28,\r\nfrom intpack-test.c:29:\r\n../../src/include/intpack.i:274:10: error: \u2018*((void *)&buf+1)\u2019 may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n*xp |= *p++;\r\n^~~~\r\nintpack-test.c:35:10: note: \u2018*((void *)&buf+1)\u2019 was declared here\r\nuint8_t buf[WT_INTPACK64_MAXSIZE], *p;\r\n^~~\r\ncc1: all warnings being treated as errors\r\nMakefile:666: recipe for target 'intpack-test.o' failed\r\nIn file included from ../../src/include/wt_internal.h:374:0,\r\nfrom ../../test/utility/test_util.h:28,\r\nfrom intpack-test3.c:29:\r\nintpack-test3.c: In function \u2018test_value\u2019:\r\n../../src/include/intpack.i:153:18: error: \u2018*((void *)&buf+9)\u2019 may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\nx = (x << 8) | *p++;\r\n^~~~\r\ncc1: all warnings being treated as errors\r\n```",
        "base_ref": "develop",
        "created_at": "Saturday Jul 01, 2017 at 22:23 GMT",
        "updated_at": "Thursday Jul 06, 2017 at 05:57 GMT",
        "closed_at": "Thursday Jul 06, 2017 at 04:50 GMT",
        "merged_at": "Thursday Jul 06, 2017 at 04:50 GMT"
    },
    {
        "key": "WT-3401",
        "number": 3491,
        "state": "closed",
        "title": "WT-3401 Lint and minor cleanup",
        "body": "@sueloverso, I've tried to make everything individual commits so it's clear what's changes, please let me know if you have any questions!",
        "base_ref": "develop",
        "created_at": "Saturday Jul 01, 2017 at 13:52 GMT",
        "updated_at": "Monday Jul 03, 2017 at 02:17 GMT",
        "closed_at": "Monday Jul 03, 2017 at 02:17 GMT",
        "merged_at": "Monday Jul 03, 2017 at 02:17 GMT"
    },
    {
        "key": "WT-3398",
        "number": 3490,
        "state": "closed",
        "title": "WT-3398 in-memory configurations don't support schema_worker operations",
        "body": "@sueloverso, I changed in-memory configurations to ignore `WT_SESSION.rebalance`.\r\n\r\nI suspect you'll need to do the same thing for `WT_SESSION.alter` in WT-3310 branch. I don't see a simple alternative, and absent a reason to make a `__wt_schema_worker` based operation work in-memory, I'm inclined to leave it alone.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 29, 2017 at 12:50 GMT",
        "updated_at": "Thursday Jun 29, 2017 at 16:07 GMT",
        "closed_at": "Thursday Jun 29, 2017 at 16:07 GMT",
        "merged_at": "Thursday Jun 29, 2017 at 16:07 GMT"
    },
    {
        "key": "WT-3039",
        "number": 3489,
        "state": "closed",
        "title": "WT-3039 Add uniqueness to python list of log files.",
        "body": "This accounts for case insensitivity.\r\n@keithbostic Please review.  The new `test_compat01.py` is the first test to need to know how many log files there were and *Log* is case insensitive on Windows and was also grabbing the pre-allocated log files causing the test to fail on Windows.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 28, 2017 at 17:42 GMT",
        "updated_at": "Wednesday Jun 28, 2017 at 20:17 GMT",
        "closed_at": "Wednesday Jun 28, 2017 at 19:59 GMT",
        "merged_at": "Wednesday Jun 28, 2017 at 19:59 GMT"
    },
    {
        "key": "WT-3039",
        "number": 3488,
        "state": "closed",
        "title": "WT-3039 Swap checksum if needed before comparing.",
        "body": "@keithbostic Please review this change.  It should fix the zseries failures from my merge.",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 28, 2017 at 13:37 GMT",
        "updated_at": "Wednesday Jun 28, 2017 at 14:20 GMT",
        "closed_at": "Wednesday Jun 28, 2017 at 14:20 GMT",
        "merged_at": "Wednesday Jun 28, 2017 at 14:20 GMT"
    },
    {
        "key": "WT-3397",
        "number": 3487,
        "state": "closed",
        "title": "WT-3397 Coverity lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 28, 2017 at 11:37 GMT",
        "updated_at": "Wednesday Jun 28, 2017 at 12:25 GMT",
        "closed_at": "Wednesday Jun 28, 2017 at 12:25 GMT",
        "merged_at": "Wednesday Jun 28, 2017 at 12:25 GMT"
    },
    {
        "key": "WT-3396",
        "number": 3486,
        "state": "closed",
        "title": "WT-3396 test/csuite/wt3363_checkpoint_op_races, test_utility cleanups",
        "body": "@daveh86, some cleanups for your consideration.\r\n\r\nI tried to make everything a separate commit so it's easy to see what changed and to discard anything you don't want.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 27, 2017 at 13:59 GMT",
        "updated_at": "Friday Jun 30, 2017 at 11:40 GMT",
        "closed_at": "Friday Jun 30, 2017 at 11:39 GMT",
        "merged_at": "Friday Jun 30, 2017 at 11:39 GMT"
    },
    {
        "key": "WT-3363",
        "number": 3485,
        "state": "closed",
        "title": "WT-3363 Change how we check for the long tests flag. Disable the chec\u2026",
        "body": "\u2026kpoint races test unless explicitly requested",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 27, 2017 at 04:58 GMT",
        "updated_at": "Thursday Jul 20, 2017 at 04:42 GMT",
        "closed_at": "Tuesday Jun 27, 2017 at 05:32 GMT",
        "merged_at": "Tuesday Jun 27, 2017 at 05:32 GMT"
    },
    {
        "key": "WT-1939",
        "number": 3484,
        "state": "closed",
        "title": "WT-1939 Improve error handling in example code",
        "body": "Fix a typo in some not-normally-compiled code.",
        "base_ref": "develop",
        "created_at": "Monday Jun 26, 2017 at 21:47 GMT",
        "updated_at": "Monday Jun 26, 2017 at 22:35 GMT",
        "closed_at": "Monday Jun 26, 2017 at 22:34 GMT",
        "merged_at": "Monday Jun 26, 2017 at 22:34 GMT"
    },
    {
        "key": "WT-3393",
        "number": 3483,
        "state": "closed",
        "title": "WT-3393 Missing barrier when a WT_UPDATE structure is appended to list.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 26, 2017 at 16:55 GMT",
        "updated_at": "Tuesday Jun 27, 2017 at 06:02 GMT",
        "closed_at": "Tuesday Jun 27, 2017 at 06:02 GMT",
        "merged_at": "Tuesday Jun 27, 2017 at 06:02 GMT"
    },
    {
        "key": "WT-3392",
        "number": 3482,
        "state": "closed",
        "title": "WT-3392 Coverity analysis complaints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 26, 2017 at 12:49 GMT",
        "updated_at": "Monday Jun 26, 2017 at 14:04 GMT",
        "closed_at": "Monday Jun 26, 2017 at 14:04 GMT",
        "merged_at": "Monday Jun 26, 2017 at 14:04 GMT"
    },
    {
        "key": "WT-3391",
        "number": 3481,
        "state": "closed",
        "title": "WT-3391 Add release notes for the WiredTiger 2.9.3 release",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Monday Jun 26, 2017 at 08:49 GMT",
        "updated_at": "Tuesday Jun 27, 2017 at 02:00 GMT",
        "closed_at": "Tuesday Jun 27, 2017 at 02:00 GMT",
        "merged_at": "Tuesday Jun 27, 2017 at 02:00 GMT"
    },
    {
        "key": "WT-3391",
        "number": 3480,
        "state": "closed",
        "title": "WT-3391 Cut a WiredTiger 2.9.3 release",
        "body": "Based on the current content in the mongodb-3.6 branch.",
        "base_ref": "master",
        "created_at": "Monday Jun 26, 2017 at 08:27 GMT",
        "updated_at": "Monday Jun 26, 2017 at 08:47 GMT",
        "closed_at": "Monday Jun 26, 2017 at 08:47 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3389",
        "number": 3479,
        "state": "closed",
        "title": "WT-3389 Restructure split code to hold a split generation for the entire operation.",
        "body": "@agorrod, @michaelcahill, this branch is a different approach to WT-3373 (PR #3478).\r\n\r\nBasically, I changed things so that we hold a split generation across the complete insert operation, I think it's going to be safer/cleaner to do that, than wrap the single function the way I did in #3478.\r\n\r\nAs the underlying code acquires a split generation anyway, there shouldn't be any performance cost (other than potentially failing to evict internal pages as soon as would otherwise be possible). We can also simplify some of the underlying code this way.\r\n\r\nThere's another change in here: I don't think we need to hold a hazard pointer on the parent page anymore, I believe our reconciliation lock should be sufficient. (If I'm wrong about that, and it's not sufficient, I think we can get the same effect by hitting the parent page's split generation, which is going to be a lot cheaper/cleaner than dealing with hazard pointers here).\r\n\r\nAnyway, for your consideration. Of course, this isn't a fix for WT-3373, we'd need a long bake-in period for this change.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Sunday Jun 25, 2017 at 16:30 GMT",
        "updated_at": "Friday Jul 28, 2017 at 06:42 GMT",
        "closed_at": "Friday Jul 28, 2017 at 06:42 GMT",
        "merged_at": "Friday Jul 28, 2017 at 06:42 GMT"
    },
    {
        "key": "WT-3373",
        "number": 3478,
        "state": "closed",
        "title": "WT-3373 Access violation due to a bug in internal page splitting",
        "body": "@agorrod, @michaelcahill: I believe this is a minimal fix for WT-3373.",
        "base_ref": "develop",
        "created_at": "Sunday Jun 25, 2017 at 13:01 GMT",
        "updated_at": "Monday Jun 26, 2017 at 07:04 GMT",
        "closed_at": "Monday Jun 26, 2017 at 07:04 GMT",
        "merged_at": "Monday Jun 26, 2017 at 07:04 GMT"
    },
    {
        "key": "WT-3181",
        "number": 3477,
        "state": "closed",
        "title": "WT-3181 More test changes to continue support for Python2.6.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 23, 2017 at 19:29 GMT",
        "updated_at": "Friday Jun 23, 2017 at 19:50 GMT",
        "closed_at": "Friday Jun 23, 2017 at 19:50 GMT",
        "merged_at": "Friday Jun 23, 2017 at 19:50 GMT"
    },
    {
        "key": "WT-3181",
        "number": 3476,
        "state": "closed",
        "title": "WT-3181 Keep tests compatible with Python 2.6.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 23, 2017 at 17:27 GMT",
        "updated_at": "Friday Jun 23, 2017 at 17:38 GMT",
        "closed_at": "Friday Jun 23, 2017 at 17:38 GMT",
        "merged_at": "Friday Jun 23, 2017 at 17:38 GMT"
    },
    {
        "key": "WT-3385",
        "number": 3475,
        "state": "closed",
        "title": "WT-3385 Coverity 1376471: __wt_txn_parse_timestamp() memory overrun",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 23, 2017 at 11:52 GMT",
        "updated_at": "Friday Jun 23, 2017 at 12:35 GMT",
        "closed_at": "Friday Jun 23, 2017 at 12:35 GMT",
        "merged_at": "Friday Jun 23, 2017 at 12:35 GMT"
    },
    {
        "key": "WT-3140",
        "number": 3474,
        "state": "closed",
        "title": "WT-3140 Add output of handle name to per-handle stats",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 23, 2017 at 04:08 GMT",
        "updated_at": "Friday Jul 14, 2017 at 00:45 GMT",
        "closed_at": "Friday Jul 14, 2017 at 00:45 GMT",
        "merged_at": "Friday Jul 14, 2017 at 00:45 GMT"
    },
    {
        "key": "WT-3181",
        "number": 3473,
        "state": "closed",
        "title": "WT-3181 Fix config string for timestamps in test/checkpoint.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 23, 2017 at 02:23 GMT",
        "updated_at": "Friday Jun 23, 2017 at 13:25 GMT",
        "closed_at": "Friday Jun 23, 2017 at 13:25 GMT",
        "merged_at": "Friday Jun 23, 2017 at 13:25 GMT"
    },
    {
        "key": "WT-3379",
        "number": 3472,
        "state": "closed",
        "title": "WT-3379 Avoid a performance regression on secondaries.",
        "body": "@michaelcahill, I wrote up what I think is going on, and ordered the tests to try and group tests with the same purpose together.\r\n\r\nFeel free to discard this -- it's really, really wordy. (But, on the other hand, I think I really understand it now.)",
        "base_ref": "wt-3379-update-restore-giveup-fix",
        "created_at": "Thursday Jun 22, 2017 at 20:34 GMT",
        "updated_at": "Thursday Jun 22, 2017 at 22:06 GMT",
        "closed_at": "Thursday Jun 22, 2017 at 22:06 GMT",
        "merged_at": "Thursday Jun 22, 2017 at 22:06 GMT"
    },
    {
        "key": "WT-3379",
        "number": 3471,
        "state": "closed",
        "title": "WT-3379 Avoid a performance regression on secondaries.",
        "body": "Continue with update/restore eviction unless we are going to fall back\r\nto using the lookaside table.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 22, 2017 at 01:08 GMT",
        "updated_at": "Thursday Jun 22, 2017 at 22:07 GMT",
        "closed_at": "Thursday Jun 22, 2017 at 22:07 GMT",
        "merged_at": "Thursday Jun 22, 2017 at 22:07 GMT"
    },
    {
        "key": "WT-3336",
        "number": 3470,
        "state": "closed",
        "title": "WT-3336 Enable statistics by default in wtperf",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 21, 2017 at 01:08 GMT",
        "updated_at": "Wednesday Jun 28, 2017 at 05:14 GMT",
        "closed_at": "Wednesday Jun 28, 2017 at 05:14 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3251",
        "number": 3469,
        "state": "closed",
        "title": "WT-3251 Remove interim buffer used to split pages during reconciliation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 21, 2017 at 00:32 GMT",
        "updated_at": "Thursday Jun 22, 2017 at 22:47 GMT",
        "closed_at": "Thursday Jun 22, 2017 at 22:46 GMT",
        "merged_at": "Thursday Jun 22, 2017 at 22:46 GMT"
    },
    {
        "key": "WT-3251",
        "number": 3468,
        "state": "closed",
        "title": "Revert \"WT-3251 remove interim buffer when splitting during reconciliation \"",
        "body": "Reverts wiredtiger/wiredtiger#3453",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 21, 2017 at 00:24 GMT",
        "updated_at": "Friday Jun 23, 2017 at 19:51 GMT",
        "closed_at": "Wednesday Jun 21, 2017 at 00:25 GMT",
        "merged_at": "Wednesday Jun 21, 2017 at 00:25 GMT"
    },
    {
        "key": "WT-1939",
        "number": 3467,
        "state": "closed",
        "title": "WT-1939 Improve error handling in example code",
        "body": "@agorrod, @sueloverso: I took a run at cleaning up the example code error handling.\r\n\r\nI hope this resolves WT-3364 and WT-1939.\r\n\r\nI ended up using Alex's technique from the test/utility code, adding two macros: first, a macro `error_check` that checks for a non-zero return from a function call, and second, a macro `scan_end_check` which checks that `ret == WT_NOTFOUND` after a cursor scan completes.\r\n\r\nI decided against adding explicit error checking with messages because I doubt our ability to ever exercise those error message paths and the error handling messages clutters the documentation more than I wanted.\r\n\r\nI chose the names `error_check` and `scan_end_check` to hopefully make it clear in the documentation what's going on, happy to switch to something else if anybody has a better idea.\r\n\r\nI found and fixed a few places in the example code where we weren't checking error returns and the example code fails, but there were two I didn't fix:\r\n\r\n* @sueloverso, there's a `session->transaction_sync` call in `ex_sync.c` that returns failure, can you please take a look and fix it?\r\n* @ddanderson, there's a `join_cursor->next` call in `ex_stat.c` that returns failure, can you please take a look and fix it?\r\n\r\nBoth of those calls are currently commented out so the tests pass, just search for `KEITH` in the file to find the call.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Saturday Jun 17, 2017 at 15:36 GMT",
        "updated_at": "Monday Jun 26, 2017 at 20:54 GMT",
        "closed_at": "Monday Jun 26, 2017 at 20:54 GMT",
        "merged_at": "Monday Jun 26, 2017 at 20:54 GMT"
    },
    {
        "key": "WT-3371",
        "number": 3466,
        "state": "closed",
        "title": "WT-3371 Make Windows/MSVC build warnings fatal.",
        "body": "The exception is the SWIG-generated Python wrapper code.\r\n\r\nI removed the `/weXXX` lines as well, they're all covered by `/W3` and `/WX`.",
        "base_ref": "develop",
        "created_at": "Friday Jun 16, 2017 at 16:12 GMT",
        "updated_at": "Friday Jun 16, 2017 at 17:10 GMT",
        "closed_at": "Friday Jun 16, 2017 at 17:08 GMT",
        "merged_at": "Friday Jun 16, 2017 at 17:08 GMT"
    },
    {
        "key": "WT-3370",
        "number": 3465,
        "state": "closed",
        "title": "WT-3370 Reset metafile after it could be re-allocated.",
        "body": "@michaelcahill Please review this fix.  I considered getting rid of `metafile` and just using the array each time, but chose to just reset it as well as clear it out when we're done so future code that might use the variable later needs to pay attention.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 15, 2017 at 13:32 GMT",
        "updated_at": "Thursday Jun 15, 2017 at 14:51 GMT",
        "closed_at": "Thursday Jun 15, 2017 at 14:51 GMT",
        "merged_at": "Thursday Jun 15, 2017 at 14:51 GMT"
    },
    {
        "key": "WT-3369",
        "number": 3464,
        "state": "closed",
        "title": "WT-3369 WT_CURSOR->uri should always match the URI used to open the cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 14, 2017 at 13:35 GMT",
        "updated_at": "Wednesday Jun 14, 2017 at 15:29 GMT",
        "closed_at": "Wednesday Jun 14, 2017 at 15:29 GMT",
        "merged_at": "Wednesday Jun 14, 2017 at 15:29 GMT"
    },
    {
        "key": "WT-3367",
        "number": 3463,
        "state": "closed",
        "title": "WT-3367 Move to macOS 10.12",
        "body": "Evergreen is moving all OSX machines from 10.10 to 10.12 to support XCode 8.\r\n\r\nI updated wiredtiger to use 10.12 but ran into issues with DYLD_LIBRARY_PATH that I needed to use `install_name_tool` to workaround.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 13, 2017 at 20:52 GMT",
        "updated_at": "Wednesday Jun 14, 2017 at 20:51 GMT",
        "closed_at": "Wednesday Jun 14, 2017 at 20:51 GMT",
        "merged_at": "Wednesday Jun 14, 2017 at 20:51 GMT"
    },
    {
        "key": "WT-3363",
        "number": 3462,
        "state": "closed",
        "title": "WT-3363 Add a test to confirm if operations block waiting for checkpoints to complete",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 13, 2017 at 03:48 GMT",
        "updated_at": "Tuesday Jun 27, 2017 at 02:12 GMT",
        "closed_at": "Tuesday Jun 27, 2017 at 02:12 GMT",
        "merged_at": "Tuesday Jun 27, 2017 at 02:12 GMT"
    },
    {
        "key": "WT-3355",
        "number": 3461,
        "state": "closed",
        "title": "WT-3355 Fix log archiving corner cases around reconfigure",
        "body": "@agorrod Please review this change.  It fixes the original failure that test/format found.  It does change the way the log file upgrade/downgrade works a little bit though.  If archiving is turned off, it does not archive log files on a downgrade.  Recovery will still work on a downgrade because it forces the checkpoint into the old-version log file and recovery will not attempt to read an earlier, new-version log file.  However someone attempting to run `printlog` with an older release will get an error until archiving is done.\r\n\r\nWithout this fix, incremental backup does not work as expected in the case of downgrade.  One must restart the incremental backup process with a full backup again on an error.\r\n\r\nThis seems the better choice since I'm not aware of any customers running with archiving turned off anyway.",
        "base_ref": "wt-3039-prevlsn",
        "created_at": "Monday Jun 12, 2017 at 18:06 GMT",
        "updated_at": "Monday Jun 12, 2017 at 21:38 GMT",
        "closed_at": "Monday Jun 12, 2017 at 21:38 GMT",
        "merged_at": "Monday Jun 12, 2017 at 21:38 GMT"
    },
    {
        "key": "ER-29439",
        "number": 3460,
        "state": "closed",
        "title": "SERVER-29439 WiredTiger turtle file \"MoveFileExW: Access is denied.\" error.",
        "body": "I believe the problem was that MongoDB reads the metadata file, and that potentially races with checkpoints. I never caught it in the act, but it fits all the symptoms.",
        "base_ref": "develop",
        "created_at": "Friday Jun 09, 2017 at 20:31 GMT",
        "updated_at": "Wednesday Jun 14, 2017 at 19:57 GMT",
        "closed_at": "Wednesday Jun 14, 2017 at 19:57 GMT",
        "merged_at": "Wednesday Jun 14, 2017 at 19:57 GMT"
    },
    {
        "key": "WT-3362",
        "number": 3459,
        "state": "closed",
        "title": "WT-3362 Checkpoints shouldn't block drops.",
        "body": "Testing has uncovered another case where drops can spin trying to lock a checkpoint handle until a checkpoint completes.  This change fixes that in two ways: attempting to lock (but not open) a handle won't spin, and drop will always attempt to lock the live tree before locking any checkpoint handles.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 08, 2017 at 07:25 GMT",
        "updated_at": "Thursday Jun 08, 2017 at 16:10 GMT",
        "closed_at": "Thursday Jun 08, 2017 at 16:10 GMT",
        "merged_at": "Thursday Jun 08, 2017 at 16:10 GMT"
    },
    {
        "key": "WT-3350",
        "number": 3458,
        "state": "closed",
        "title": "WT-3350 do away with dynamic allocation of WT_CONDVAR",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 08, 2017 at 05:43 GMT",
        "updated_at": "Monday Jun 19, 2017 at 00:31 GMT",
        "closed_at": "Monday Jun 19, 2017 at 00:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3349",
        "number": 3457,
        "state": "closed",
        "title": "WT-3349 Add rwlock statistics",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 07, 2017 at 04:39 GMT",
        "updated_at": "Wednesday Jun 07, 2017 at 07:46 GMT",
        "closed_at": "Wednesday Jun 07, 2017 at 07:45 GMT",
        "merged_at": "Wednesday Jun 07, 2017 at 07:45 GMT"
    },
    {
        "key": "WT-3361",
        "number": 3456,
        "state": "closed",
        "title": "WT-3361 Resolve Windows build warnings, build more test programs on Windows",
        "body": "@markbenvenuto, there's only a minor change to the WiredTiger library itself, the rest is boilerplate to deal with test program portability.\r\n\r\n@michaelcahill, with these changes, Windows builds without warnings.",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 06, 2017 at 21:13 GMT",
        "updated_at": "Wednesday Jun 07, 2017 at 14:31 GMT",
        "closed_at": "Wednesday Jun 07, 2017 at 14:31 GMT",
        "merged_at": "Wednesday Jun 07, 2017 at 14:31 GMT"
    },
    {
        "key": "WT-2596",
        "number": 3455,
        "state": "closed",
        "title": "WT-2596 Document behavior after a crash with a backup cursor open",
        "body": "\u2026s and a backup cursor is open",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 06, 2017 at 02:37 GMT",
        "updated_at": "Friday Jun 23, 2017 at 19:51 GMT",
        "closed_at": "Thursday Jun 08, 2017 at 02:02 GMT",
        "merged_at": "Thursday Jun 08, 2017 at 02:02 GMT"
    },
    {
        "key": "WT-3356",
        "number": 3454,
        "state": "closed",
        "title": "WT-3356 Use atomic reads of rwlocks.",
        "body": "Previously we had some conditions that checked several fields within a\r\nrwlock by indirecting to the live structure.  Switch to always doing a\r\nread of the full 64-bit value, then using local reads from the copy.\r\n\r\nOtherwise, we're relying on the compiler and the memory model to order\r\nthe structure accesses in \"code execution order\".  That could explain\r\nassertion failures and/or incorrect behavior with the new rwlock\r\nimplementation.",
        "base_ref": "develop",
        "created_at": "Monday Jun 05, 2017 at 22:48 GMT",
        "updated_at": "Tuesday Jun 06, 2017 at 07:08 GMT",
        "closed_at": "Tuesday Jun 06, 2017 at 07:07 GMT",
        "merged_at": "Tuesday Jun 06, 2017 at 07:07 GMT"
    },
    {
        "key": "WT-3251",
        "number": 3453,
        "state": "closed",
        "title": "WT-3251 remove interim buffer when splitting during reconciliation ",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 05, 2017 at 08:01 GMT",
        "updated_at": "Wednesday Jun 21, 2017 at 00:27 GMT",
        "closed_at": "Tuesday Jun 20, 2017 at 23:27 GMT",
        "merged_at": "Tuesday Jun 20, 2017 at 23:27 GMT"
    },
    {
        "key": "WT-3351",
        "number": 3452,
        "state": "closed",
        "title": "WT-3351 Fix assertion condition.",
        "body": "self reviewing once PR tests are done.",
        "base_ref": "develop",
        "created_at": "Friday Jun 02, 2017 at 19:57 GMT",
        "updated_at": "Friday Jun 02, 2017 at 20:12 GMT",
        "closed_at": "Friday Jun 02, 2017 at 20:12 GMT",
        "merged_at": "Friday Jun 02, 2017 at 20:12 GMT"
    },
    {
        "key": "WT-3354",
        "number": 3451,
        "state": "closed",
        "title": "WT-3354 Fix bugs found by Coverity.",
        "body": "* two cases where error checking for rwlocks should goto the error label for cleanup.\r\n* LSM code not restoring isolation if a checkpoint fails part way through",
        "base_ref": "develop",
        "created_at": "Friday Jun 02, 2017 at 08:02 GMT",
        "updated_at": "Friday Jun 02, 2017 at 11:41 GMT",
        "closed_at": "Friday Jun 02, 2017 at 11:40 GMT",
        "merged_at": "Friday Jun 02, 2017 at 11:40 GMT"
    },
    {
        "key": "WT-3346",
        "number": 3450,
        "state": "closed",
        "title": "WT-3346 create JSON output for latency sampling.",
        "body": "Also added a script to merge workgen and WT outputs.",
        "base_ref": "develop",
        "created_at": "Thursday Jun 01, 2017 at 18:17 GMT",
        "updated_at": "Thursday Jun 08, 2017 at 15:29 GMT",
        "closed_at": "Thursday Jun 08, 2017 at 15:29 GMT",
        "merged_at": "Thursday Jun 08, 2017 at 15:29 GMT"
    },
    {
        "key": "WT-3348",
        "number": 3449,
        "state": "closed",
        "title": "WT-3348 Lint, Windows warnings.",
        "body": "@michaelcahill, the Windows complaints have been growing over the past year or so, and I haven't done a lint/housekeeping run in a few weeks, so I did a pass.\r\n\r\n@markbenvenuto, Would you please review this branch? I've built this on `windows-64-vs2015-small` and `windows-64-vs2013-compile`. ",
        "base_ref": "develop",
        "created_at": "Thursday Jun 01, 2017 at 16:21 GMT",
        "updated_at": "Friday Jun 02, 2017 at 01:59 GMT",
        "closed_at": "Friday Jun 02, 2017 at 01:59 GMT",
        "merged_at": "Friday Jun 02, 2017 at 01:59 GMT"
    },
    {
        "key": "WT-3332",
        "number": 3448,
        "state": "closed",
        "title": "WT-3332 Add per-connection stats for update transaction conflicts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 31, 2017 at 06:57 GMT",
        "updated_at": "Wednesday Jun 07, 2017 at 06:39 GMT",
        "closed_at": "Wednesday Jun 07, 2017 at 06:39 GMT",
        "merged_at": "Wednesday Jun 07, 2017 at 06:39 GMT"
    },
    {
        "key": "WT-3345",
        "number": 3446,
        "state": "closed",
        "title": "WT-3345 Tune WiredTiger's read/write locks.",
        "body": "Add a workload that stresses rwlock performance under various conditions\r\n(including threads >> cores), tune read and write lock operations to\r\nonly spin when it is likely to help, and to back off to a condition\r\nvariable when there is heavy contention.",
        "base_ref": "develop",
        "created_at": "Monday May 29, 2017 at 08:05 GMT",
        "updated_at": "Friday Jun 02, 2017 at 02:08 GMT",
        "closed_at": "Friday Jun 02, 2017 at 02:08 GMT",
        "merged_at": "Friday Jun 02, 2017 at 02:08 GMT"
    },
    {
        "key": "WT-3307",
        "number": 3445,
        "state": "closed",
        "title": "WT-3307 Close btree/dhandle properly when handling __wt_checkpoint_close failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 29, 2017 at 06:49 GMT",
        "updated_at": "Thursday Jun 01, 2017 at 20:31 GMT",
        "closed_at": "Thursday Jun 01, 2017 at 20:31 GMT",
        "merged_at": "Thursday Jun 01, 2017 at 20:31 GMT"
    },
    {
        "key": "WT-3223",
        "number": 3444,
        "state": "closed",
        "title": "WT-3223 Track and report progress for slow checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 26, 2017 at 20:43 GMT",
        "updated_at": "Friday May 26, 2017 at 20:52 GMT",
        "closed_at": "Friday May 26, 2017 at 20:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3343",
        "number": 3443,
        "state": "closed",
        "title": "WT-3343 WiredTiger database close can attempt unlock of a lock that's not held.",
        "body": "Closing the file handles that remain open at database close will attempt to unlock a lock that's not currently held.",
        "base_ref": "develop",
        "created_at": "Friday May 26, 2017 at 14:33 GMT",
        "updated_at": "Tuesday Jun 06, 2017 at 07:08 GMT",
        "closed_at": "Friday May 26, 2017 at 14:48 GMT",
        "merged_at": "Friday May 26, 2017 at 14:48 GMT"
    },
    {
        "key": "WT-3329",
        "number": 3442,
        "state": "closed",
        "title": "WT-3329 Visit trees using a tiny fraction of cache.",
        "body": "For workloads where no tree takes up a large enough fraction of cache,\r\nwe were using a randomized approach to deciding when eviction should\r\nvisit trees.  That led to slow performance for workloads with uniform\r\nupdates over thousands of trees.",
        "base_ref": "develop",
        "created_at": "Friday May 26, 2017 at 06:19 GMT",
        "updated_at": "Tuesday Jul 11, 2017 at 03:33 GMT",
        "closed_at": "Tuesday Jul 11, 2017 at 03:33 GMT",
        "merged_at": "Tuesday Jul 11, 2017 at 03:33 GMT"
    },
    {
        "key": "WT-3248",
        "number": 3441,
        "state": "closed",
        "title": "WT-3248 Mark reconciliation a success if no skipped updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 26, 2017 at 01:54 GMT",
        "updated_at": "Friday May 26, 2017 at 20:40 GMT",
        "closed_at": "Friday May 26, 2017 at 20:40 GMT",
        "merged_at": "Friday May 26, 2017 at 20:40 GMT"
    },
    {
        "key": "WT-3342",
        "number": 3440,
        "state": "closed",
        "title": "WT-3342 Cut a WiredTiger 2.9.2 release",
        "body": "",
        "base_ref": "master",
        "created_at": "Thursday May 25, 2017 at 19:55 GMT",
        "updated_at": "Friday May 26, 2017 at 15:41 GMT",
        "closed_at": "Friday May 26, 2017 at 15:41 GMT",
        "merged_at": "Friday May 26, 2017 at 15:41 GMT"
    },
    {
        "key": "WT-3310",
        "number": 3439,
        "state": "closed",
        "title": "WT-3310 Add log config option for alter.",
        "body": "Not yet ready for review.  Basic code and test working but want to add more to the test.",
        "base_ref": "develop",
        "created_at": "Thursday May 25, 2017 at 17:37 GMT",
        "updated_at": "Thursday Jul 06, 2017 at 02:31 GMT",
        "closed_at": "Thursday Jul 06, 2017 at 02:31 GMT",
        "merged_at": "Thursday Jul 06, 2017 at 02:31 GMT"
    },
    {
        "key": "WT-2972",
        "number": 3438,
        "state": "closed",
        "title": "WT-2972: In Python API for WT_CURSOR::modify, WT_NOTFOUND should not raise an exception.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 25, 2017 at 16:21 GMT",
        "updated_at": "Thursday May 25, 2017 at 16:31 GMT",
        "closed_at": "Thursday May 25, 2017 at 16:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3338",
        "number": 3437,
        "state": "closed",
        "title": "WT-3338 Implement optimized cursor modify.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 25, 2017 at 15:58 GMT",
        "updated_at": "Friday Jul 28, 2017 at 07:41 GMT",
        "closed_at": "Friday Jul 28, 2017 at 07:41 GMT",
        "merged_at": "Friday Jul 28, 2017 at 07:41 GMT"
    },
    {
        "key": "WT-3339",
        "number": 3436,
        "state": "closed",
        "title": "WT-3339 The CURSOR_UPDATE_API_CALL macro will dump core on a NULL btree handle",
        "body": "Split CURSOR_UPDATE_API_CALL into two versions, one of which expects a btree handle, one of which doesn't.",
        "base_ref": "develop",
        "created_at": "Wednesday May 24, 2017 at 20:51 GMT",
        "updated_at": "Wednesday May 24, 2017 at 21:26 GMT",
        "closed_at": "Wednesday May 24, 2017 at 21:26 GMT",
        "merged_at": "Wednesday May 24, 2017 at 21:26 GMT"
    },
    {
        "key": "WT-2972",
        "number": 3435,
        "state": "closed",
        "title": "WT-2972 Add interface allowing partial updates to existing values",
        "body": "Restoring this branch, since merging it caused some test failures.",
        "base_ref": "develop",
        "created_at": "Wednesday May 24, 2017 at 19:25 GMT",
        "updated_at": "Thursday May 25, 2017 at 15:39 GMT",
        "closed_at": "Thursday May 25, 2017 at 14:50 GMT",
        "merged_at": "Thursday May 25, 2017 at 14:50 GMT"
    },
    {
        "key": "WT-2972",
        "number": 3434,
        "state": "closed",
        "title": "Revert \"WT-2972 Add interface allowing partial updates to existing values\"",
        "body": "Reverts wiredtiger/wiredtiger#3406",
        "base_ref": "develop",
        "created_at": "Wednesday May 24, 2017 at 19:23 GMT",
        "updated_at": "Wednesday May 24, 2017 at 19:24 GMT",
        "closed_at": "Wednesday May 24, 2017 at 19:24 GMT",
        "merged_at": "Wednesday May 24, 2017 at 19:24 GMT"
    },
    {
        "key": "WT-3326",
        "number": 3433,
        "state": "closed",
        "title": "WT-3326 Added wtperf.py script to run wtperf files.",
        "body": "@agorrod, this could be merged or not, your choice.  There is plenty more potential work to be done on this ticket, but it may be quite useful as is.  wtperf.py currently generates valid Python code for 17 out of 59 of wtperf/runners/*.wtperf.  The others fail gracefully, complaining about wtperf directives that we don't yet support.  I've run a few of the good ones, they run successfully.  I think the next step should be to pick one or two Jenkins jobs that currently use wtperf that we could run in parallel and get that set up.",
        "base_ref": "develop",
        "created_at": "Wednesday May 24, 2017 at 15:51 GMT",
        "updated_at": "Thursday Jun 08, 2017 at 15:26 GMT",
        "closed_at": "Thursday Jun 08, 2017 at 15:26 GMT",
        "merged_at": "Thursday Jun 08, 2017 at 15:26 GMT"
    },
    {
        "key": "WT-3333",
        "number": 3432,
        "state": "closed",
        "title": "WT-3333 Fixes for zero length strings packed/unpacked in a 'u' format.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 24, 2017 at 11:16 GMT",
        "updated_at": "Thursday May 25, 2017 at 18:48 GMT",
        "closed_at": "Thursday May 25, 2017 at 18:48 GMT",
        "merged_at": "Thursday May 25, 2017 at 18:48 GMT"
    },
    {
        "key": "WT-3334",
        "number": 3431,
        "state": "closed",
        "title": "WT-3334 static test suite's BaseDataSet class has 'u' value format bugs",
        "body": "The static test suite's BaseDataSet class has 'u' value format bugs, should return a string, not an integer.",
        "base_ref": "develop",
        "created_at": "Tuesday May 23, 2017 at 23:33 GMT",
        "updated_at": "Wednesday May 24, 2017 at 14:07 GMT",
        "closed_at": "Wednesday May 24, 2017 at 14:07 GMT",
        "merged_at": "Wednesday May 24, 2017 at 14:07 GMT"
    },
    {
        "key": "WT-3331",
        "number": 3430,
        "state": "closed",
        "title": "WT-3331 Get time into a local variable so we can read and use a consistent time",
        "body": "@agorrod Here's a fix for the LSM failure seen over the weekend.  The new clock check was reading the location passed in by the caller and that was getting set/reset out from under it.  I now read the time into a local variable to do all of the new time checks.\r\n\r\nIt seems that it could be dangerous to have timestamps being freely overwritten and its possible we could get parts of two timestamps set into a field.  My new checks, reading the same location over and over, was seeing different values each time and was storing a value into the session that was not one it read.",
        "base_ref": "develop",
        "created_at": "Monday May 22, 2017 at 20:02 GMT",
        "updated_at": "Tuesday May 23, 2017 at 18:03 GMT",
        "closed_at": "Tuesday May 23, 2017 at 18:03 GMT",
        "merged_at": "Tuesday May 23, 2017 at 18:03 GMT"
    },
    {
        "key": "WT-2972",
        "number": 3429,
        "state": "closed",
        "title": "WT-2972 partial updates: fix Python to allow a no-op modify.",
        "body": "To transmit the length of the WT_MODIFY array from the typemap to the call site in SWIG, we put the length into an (otherwise unused) first element.  Changed from using a blank entry as a sentinel, as a blank can legally appear in an list of Modify elements.",
        "base_ref": "wt-2972-partial-update",
        "created_at": "Saturday May 20, 2017 at 10:56 GMT",
        "updated_at": "Saturday May 20, 2017 at 12:22 GMT",
        "closed_at": "Saturday May 20, 2017 at 12:21 GMT",
        "merged_at": "Saturday May 20, 2017 at 12:21 GMT"
    },
    {
        "key": "WT-3258",
        "number": 3428,
        "state": "closed",
        "title": "WT-3258 Add timers tracking time spent on failed evictions of large p\u2026",
        "body": "\u2026ages",
        "base_ref": "develop",
        "created_at": "Friday May 19, 2017 at 08:00 GMT",
        "updated_at": "Friday May 26, 2017 at 02:29 GMT",
        "closed_at": "Friday May 26, 2017 at 02:29 GMT",
        "merged_at": "Friday May 26, 2017 at 02:29 GMT"
    },
    {
        "key": "WT-3327",
        "number": 3427,
        "state": "closed",
        "title": "WT-3327 Check for backward time in wt_epoch",
        "body": "@agorrod and @michaelcahill here's a version of fixing the time problems in `wt_epoch` instead of in `WT_TIMEDIFF`.  @keithbostic you might want to look at it too.  I prefer this version over the one I created yesterday in `WT_TIMEDIFF` for a few reasons:\r\n* It allows us to add in a statistic easily to detect and record this situation.\r\n* It is equally as compact and localized for backporting.\r\n* It deals with it at the source rather than in the use of timestamps.\r\n\r\nBy keeping it in the session, users of `wt_epoch` with a NULL session do not get the benefit of this change but that is only `wtperf` and other local test programs so I'm okay with that.",
        "base_ref": "develop",
        "created_at": "Thursday May 18, 2017 at 18:25 GMT",
        "updated_at": "Friday May 19, 2017 at 05:47 GMT",
        "closed_at": "Friday May 19, 2017 at 05:47 GMT",
        "merged_at": "Friday May 19, 2017 at 05:47 GMT"
    },
    {
        "key": "WT-3303",
        "number": 3426,
        "state": "closed",
        "title": "WT-3303 Deadlock during first access to lookaside table",
        "body": "Don't acquire the eviction walk-lock when releasing exclusive eviction access to a file, it can deadlock. Instead, atomically decrement the counter.",
        "base_ref": "develop",
        "created_at": "Thursday May 18, 2017 at 15:34 GMT",
        "updated_at": "Friday May 19, 2017 at 05:07 GMT",
        "closed_at": "Friday May 19, 2017 at 05:07 GMT",
        "merged_at": "Friday May 19, 2017 at 05:07 GMT"
    },
    {
        "key": "WT-3169",
        "number": 3425,
        "state": "closed",
        "title": "WT-3169 Add verbose messages regarding lookaside file usage",
        "body": "This adds the new \"lookaside\" verbose option and WT_VERB_LOOKASIDE along with 2 new verbose messages.",
        "base_ref": "develop",
        "created_at": "Thursday May 18, 2017 at 02:19 GMT",
        "updated_at": "Wednesday Jun 07, 2017 at 07:05 GMT",
        "closed_at": "Wednesday Jun 07, 2017 at 07:05 GMT",
        "merged_at": "Wednesday Jun 07, 2017 at 07:05 GMT"
    },
    {
        "key": "WT-3327",
        "number": 3424,
        "state": "closed",
        "title": "WT-3327 If timediff detects backwards time, return 0.",
        "body": "@agorrod and @michaelcahill please review this change.  It is a small change that if timediff sees backward time, it returns 0.  I considered adding a statistic to note that but that got messy pretty quickly (because those macros do not have a session, and that added multiple statements to something used as an expression).  If you look at the ticket I could semi-reliably get checkpoint to hang, and with this fix, it never did (admittedly with a fairly small number of runs in both cases).\r\n\r\nThis can be merged except I have not do an in-depth code review for where we use timestamps in general.",
        "base_ref": "develop",
        "created_at": "Wednesday May 17, 2017 at 20:08 GMT",
        "updated_at": "Friday May 19, 2017 at 05:48 GMT",
        "closed_at": "Friday May 19, 2017 at 05:48 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3313",
        "number": 3423,
        "state": "closed",
        "title": "WT-3313 Replace the deprecated LZ4_compress call with one to LZ4_comp\u2026",
        "body": "\u2026ress_default",
        "base_ref": "develop",
        "created_at": "Wednesday May 17, 2017 at 02:37 GMT",
        "updated_at": "Wednesday May 17, 2017 at 03:55 GMT",
        "closed_at": "Wednesday May 17, 2017 at 03:55 GMT",
        "merged_at": "Wednesday May 17, 2017 at 03:55 GMT"
    },
    {
        "key": "WT-3158",
        "number": 3422,
        "state": "closed",
        "title": "WT-3158 Test PR against 3.0",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Tuesday May 16, 2017 at 07:24 GMT",
        "updated_at": "Tuesday May 16, 2017 at 07:35 GMT",
        "closed_at": "Tuesday May 16, 2017 at 07:35 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3142",
        "number": 3421,
        "state": "closed",
        "title": "WT-3142 Check if C++ works, not just if a variable is set.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 16, 2017 at 05:41 GMT",
        "updated_at": "Tuesday May 16, 2017 at 15:40 GMT",
        "closed_at": "Tuesday May 16, 2017 at 13:31 GMT",
        "merged_at": "Tuesday May 16, 2017 at 13:31 GMT"
    },
    {
        "key": "WT-3142",
        "number": 3420,
        "state": "closed",
        "title": "WT-3142 Add a workload generator application",
        "body": "Fix up some copyright notices.",
        "base_ref": "develop",
        "created_at": "Monday May 15, 2017 at 22:55 GMT",
        "updated_at": "Tuesday May 16, 2017 at 04:27 GMT",
        "closed_at": "Tuesday May 16, 2017 at 04:26 GMT",
        "merged_at": "Tuesday May 16, 2017 at 04:26 GMT"
    },
    {
        "key": "WT-3264",
        "number": 3419,
        "state": "closed",
        "title": "WT-3264 Fix log file cleanup when toggling logging.",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Friday May 12, 2017 at 18:47 GMT",
        "updated_at": "Monday May 22, 2017 at 16:47 GMT",
        "closed_at": "Monday May 22, 2017 at 16:47 GMT",
        "merged_at": "Monday May 22, 2017 at 16:47 GMT"
    },
    {
        "key": "WT-3314",
        "number": 3418,
        "state": "closed",
        "title": "WT-3314 clarify error handling",
        "body": "@agorrod, @ddanderson, for your consideration, the additional error handling documentation we talked about.",
        "base_ref": "develop",
        "created_at": "Friday May 12, 2017 at 12:32 GMT",
        "updated_at": "Tuesday May 16, 2017 at 16:02 GMT",
        "closed_at": "Tuesday May 16, 2017 at 16:02 GMT",
        "merged_at": "Tuesday May 16, 2017 at 16:02 GMT"
    },
    {
        "key": "WT-3158",
        "number": 3417,
        "state": "closed",
        "title": "WT-3158 Fix structure layout on Windows.",
        "body": "@michaelcahill, the last merge breaks on FreeBSD, the shell/wc combination leaves white space in the `cnt` variable and `expr` complains.",
        "base_ref": "develop",
        "created_at": "Friday May 12, 2017 at 11:01 GMT",
        "updated_at": "Friday May 12, 2017 at 12:25 GMT",
        "closed_at": "Friday May 12, 2017 at 12:25 GMT",
        "merged_at": "Friday May 12, 2017 at 12:25 GMT"
    },
    {
        "key": "WT-3158",
        "number": 3416,
        "state": "closed",
        "title": "WT-3158 Fix structure layout on Windows.",
        "body": "We use a pragma on Windows to force a struct to be packed, but were\r\nmissing the \"end\" pragma that restores normal layout.  The result was\r\nthat most structs were being packed, leading to poor performance for\r\nworkloads (particularly when accessing session structures).",
        "base_ref": "develop",
        "created_at": "Thursday May 11, 2017 at 23:27 GMT",
        "updated_at": "Friday May 12, 2017 at 01:19 GMT",
        "closed_at": "Friday May 12, 2017 at 01:19 GMT",
        "merged_at": "Friday May 12, 2017 at 01:19 GMT"
    },
    {
        "key": "WT-3158",
        "number": 3415,
        "state": "closed",
        "title": "WT-3158 Fix structure padding on Windows.",
        "body": "",
        "base_ref": "mongodb-3.6",
        "created_at": "Thursday May 11, 2017 at 17:11 GMT",
        "updated_at": "Thursday May 11, 2017 at 23:28 GMT",
        "closed_at": "Thursday May 11, 2017 at 23:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3158",
        "number": 3414,
        "state": "closed",
        "title": "WT-3158 Add a void* padding variable to WT_SESSION_IMPL",
        "body": "",
        "base_ref": "mongodb-3.4",
        "created_at": "Thursday May 11, 2017 at 01:01 GMT",
        "updated_at": "Thursday May 11, 2017 at 23:30 GMT",
        "closed_at": "Thursday May 11, 2017 at 23:30 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3312",
        "number": 3413,
        "state": "closed",
        "title": "WT-3312 encryption btree configuration test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 08, 2017 at 16:49 GMT",
        "updated_at": "Thursday May 11, 2017 at 11:52 GMT",
        "closed_at": "Thursday May 11, 2017 at 11:52 GMT",
        "merged_at": "Thursday May 11, 2017 at 11:52 GMT"
    },
    {
        "key": "WT-3311",
        "number": 3412,
        "state": "closed",
        "title": "WT-3311 Only build workgen when C++ is available.",
        "body": "",
        "base_ref": "wt-3142-workgen",
        "created_at": "Monday May 08, 2017 at 16:34 GMT",
        "updated_at": "Thursday May 11, 2017 at 02:52 GMT",
        "closed_at": "Thursday May 11, 2017 at 02:52 GMT",
        "merged_at": "Thursday May 11, 2017 at 02:52 GMT"
    },
    {
        "key": "WT-3158",
        "number": 3411,
        "state": "closed",
        "title": "WT-3158 backport test",
        "body": "",
        "base_ref": "mongodb-3.4",
        "created_at": "Friday May 05, 2017 at 07:12 GMT",
        "updated_at": "Thursday May 11, 2017 at 01:02 GMT",
        "closed_at": "Thursday May 11, 2017 at 01:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2972",
        "number": 3410,
        "state": "closed",
        "title": "WT-2972 Make partial updates more efficient - Java support",
        "body": "@keithbostic, here's the Java API.",
        "base_ref": "wt-2972-partial-update",
        "created_at": "Wednesday May 03, 2017 at 17:34 GMT",
        "updated_at": "Wednesday May 03, 2017 at 18:19 GMT",
        "closed_at": "Wednesday May 03, 2017 at 18:19 GMT",
        "merged_at": "Wednesday May 03, 2017 at 18:19 GMT"
    },
    {
        "key": "WT-2972",
        "number": 3409,
        "state": "closed",
        "title": "WT-2972 Make partial updates more efficient - Python support",
        "body": "@keithbostic, this should support Python (there's a little bit more I might do there), and I ignored the new interfaces in Java in this commit.  Will work on Java next.",
        "base_ref": "wt-2972-partial-update",
        "created_at": "Tuesday May 02, 2017 at 14:53 GMT",
        "updated_at": "Tuesday May 02, 2017 at 19:14 GMT",
        "closed_at": "Tuesday May 02, 2017 at 19:14 GMT",
        "merged_at": "Tuesday May 02, 2017 at 19:14 GMT"
    },
    {
        "key": "WT-3142",
        "number": 3408,
        "state": "closed",
        "title": "WT-3142 Add a workload generator application",
        "body": "The workload generator runs core workloads in C++, which directly calls the C API and thus minimizes the overhead of the test program. The workload setup is done in Python to allow for an expressive workload definition language.\r\n\r\nInitial commit has a number of example workloads that match equivalent wtperf workloads.",
        "base_ref": "develop",
        "created_at": "Friday Apr 28, 2017 at 17:49 GMT",
        "updated_at": "Monday May 15, 2017 at 20:24 GMT",
        "closed_at": "Monday May 15, 2017 at 20:24 GMT",
        "merged_at": "Monday May 15, 2017 at 20:24 GMT"
    },
    {
        "key": "WT-3142",
        "number": 3407,
        "state": "closed",
        "title": "Revert \"WT-3142 Workload generator in Python.\"",
        "body": "Reverts wiredtiger/wiredtiger#3255",
        "base_ref": "develop",
        "created_at": "Friday Apr 28, 2017 at 17:35 GMT",
        "updated_at": "Wednesday May 17, 2017 at 03:56 GMT",
        "closed_at": "Friday Apr 28, 2017 at 17:36 GMT",
        "merged_at": "Friday Apr 28, 2017 at 17:36 GMT"
    },
    {
        "key": "WT-2972",
        "number": 3406,
        "state": "closed",
        "title": "WT-2972 Add interface allowing partial updates to existing values",
        "body": "@michaelcahill, @agorrod, this is what I'm planning for the `WT_CURSOR.modify` API, it follows the email we exchanged reasonably closely.\r\n\r\nJust let me know if anything is different from what you envisioned.",
        "base_ref": "develop",
        "created_at": "Friday Apr 28, 2017 at 16:22 GMT",
        "updated_at": "Wednesday May 24, 2017 at 19:24 GMT",
        "closed_at": "Wednesday May 24, 2017 at 18:55 GMT",
        "merged_at": "Wednesday May 24, 2017 at 18:55 GMT"
    },
    {
        "key": "WT-3302",
        "number": 3405,
        "state": "closed",
        "title": "WT-3302 Introduce a thread struct with a member telling if thread created successfully",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 27, 2017 at 08:21 GMT",
        "updated_at": "Thursday Apr 27, 2017 at 23:02 GMT",
        "closed_at": "Thursday Apr 27, 2017 at 23:01 GMT",
        "merged_at": "Thursday Apr 27, 2017 at 23:01 GMT"
    },
    {
        "key": "WT-3297",
        "number": 3404,
        "state": "closed",
        "title": "WT-3297 support the gcc/clang -fvisibility=hidden flag",
        "body": "@agorrod, it wasn't too bad.\r\n\r\nIf you decide to approve this change, I'll add the compilation test to Jenkins.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 26, 2017 at 19:47 GMT",
        "updated_at": "Friday Apr 28, 2017 at 04:24 GMT",
        "closed_at": "Friday Apr 28, 2017 at 04:15 GMT",
        "merged_at": "Friday Apr 28, 2017 at 04:15 GMT"
    },
    {
        "key": "WT-3289",
        "number": 3403,
        "state": "closed",
        "title": "WT-3289 update thread group alloc size only at successful thread creation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 26, 2017 at 04:50 GMT",
        "updated_at": "Thursday Apr 27, 2017 at 23:00 GMT",
        "closed_at": "Thursday Apr 27, 2017 at 22:59 GMT",
        "merged_at": null
    },
    {
        "key": "ER-28820",
        "number": 3402,
        "state": "closed",
        "title": "SERVER-28820 Add a few error path messages.",
        "body": "@agorrod Please review this change.  It adds a few error messages for some paths in `log_scan` to know why we got `WT_NOTFOUND` including the path in the ticket.",
        "base_ref": "develop",
        "created_at": "Monday Apr 24, 2017 at 21:21 GMT",
        "updated_at": "Tuesday Apr 25, 2017 at 16:02 GMT",
        "closed_at": "Tuesday Apr 25, 2017 at 16:02 GMT",
        "merged_at": "Tuesday Apr 25, 2017 at 16:02 GMT"
    },
    {
        "key": "WT-3300",
        "number": 3401,
        "state": "closed",
        "title": "WT-3300 Coverity 1374542: Dereference after null check",
        "body": "False positive, but explicitly checking the stop variable should make the complaint go away.",
        "base_ref": "develop",
        "created_at": "Monday Apr 24, 2017 at 15:30 GMT",
        "updated_at": "Monday Apr 24, 2017 at 20:40 GMT",
        "closed_at": "Monday Apr 24, 2017 at 20:40 GMT",
        "merged_at": "Monday Apr 24, 2017 at 20:40 GMT"
    },
    {
        "key": "WT-3219",
        "number": 3400,
        "state": "closed",
        "title": "WT-3219 Make the clang-analyzer job fail when lint is introduced",
        "body": "Quiet the four remaining clang-analyzer complaints.",
        "base_ref": "develop",
        "created_at": "Friday Apr 21, 2017 at 13:44 GMT",
        "updated_at": "Friday Apr 21, 2017 at 15:29 GMT",
        "closed_at": "Friday Apr 21, 2017 at 15:29 GMT",
        "merged_at": "Friday Apr 21, 2017 at 15:29 GMT"
    },
    {
        "key": "WT-3295",
        "number": 3399,
        "state": "closed",
        "title": "WT-3295 Add support for LSM merges into custom data sources.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 20, 2017 at 02:49 GMT",
        "updated_at": "Thursday Dec 07, 2017 at 03:04 GMT",
        "closed_at": "Thursday Dec 07, 2017 at 03:04 GMT",
        "merged_at": "Thursday Dec 07, 2017 at 03:04 GMT"
    },
    {
        "key": "WT-3293",
        "number": 3398,
        "state": "closed",
        "title": "WT-3293 Don't explicitly mark internal symbols hidden.",
        "body": "It messes with external stack decoders.\r\n\r\nThe details of this change are open for discussion. I've left the explicit `visibility(\"default\")` tags in the code, since that is most of the hard work - though if we don't test with `visibility(\"hidden\")` as the default via `-fvisibility=hidden` it's likely our set of marked functions will get out of date over time.\r\n\r\nI'm going to switch the performance runs over to this branch, to see if there is a noticeable difference.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 19, 2017 at 21:19 GMT",
        "updated_at": "Friday Apr 21, 2017 at 04:22 GMT",
        "closed_at": "Friday Apr 21, 2017 at 04:22 GMT",
        "merged_at": "Friday Apr 21, 2017 at 04:22 GMT"
    },
    {
        "key": "WT-3296",
        "number": 3397,
        "state": "closed",
        "title": "WT-3296 LAS table fixes/improvements",
        "body": "@michaelcahill, @agorrod, some changes to fix problems in the LAS table code.\r\n\r\nMichael, there's a change in `__rec_txn_read()` that I'd appreciate a close review on.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 19, 2017 at 20:24 GMT",
        "updated_at": "Friday Apr 28, 2017 at 04:23 GMT",
        "closed_at": "Friday Apr 28, 2017 at 04:23 GMT",
        "merged_at": "Friday Apr 28, 2017 at 04:23 GMT"
    },
    {
        "key": "WT-3282",
        "number": 3396,
        "state": "closed",
        "title": "WT-3282 Split cache flags and cache_pool flags.",
        "body": "@agorrod Here's the branch for your review.  All the tests are still running.  This is ready to merge after they have run for another day or two.  But you can see the changes now.\r\n\r\nI decided to split the flags into a separate field rather than use the {{flags_atomic}} macros for this fix.  The cache pool flags are rarely used/modified and I didn't want to impose atomic operations on every eviction use of the flags.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 19, 2017 at 14:50 GMT",
        "updated_at": "Thursday Apr 20, 2017 at 21:40 GMT",
        "closed_at": "Thursday Apr 20, 2017 at 21:39 GMT",
        "merged_at": "Thursday Apr 20, 2017 at 21:39 GMT"
    },
    {
        "key": "WT-3292",
        "number": 3395,
        "state": "closed",
        "title": "WT-3292 review/cleanup full-barrier calls in WiredTiger",
        "body": "@michaelcahill, I reviewed the places where we use full-barriers after our discussions last week, intending to remove the places I'd been (unnecessarily) using them for visibility.\r\n\r\nThere's only one \"real\" fix in this branch, commit 13b9f16. It ensures calls to `__wt_sleep` are barriers (similarly to the barrier we added in `__wt_yield`).\r\n\r\nFeel free to discard this branch without further discussion if you don't want it. I incrementally made these changes while convincing myself things were correct, and most of the changes involve fixing comments or other similar cleanups.\r\n\r\n@sueloverso, I've included the logging change we discussed.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 18, 2017 at 20:09 GMT",
        "updated_at": "Wednesday Apr 19, 2017 at 04:34 GMT",
        "closed_at": "Wednesday Apr 19, 2017 at 04:34 GMT",
        "merged_at": "Wednesday Apr 19, 2017 at 04:34 GMT"
    },
    {
        "key": "ER-28835",
        "number": 3394,
        "state": "closed",
        "title": "SERVER-28835 Coverity analysis defect 101330: Resource leak",
        "body": "Discard any allocated thread structure on error.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 18, 2017 at 14:24 GMT",
        "updated_at": "Tuesday Apr 18, 2017 at 14:57 GMT",
        "closed_at": "Tuesday Apr 18, 2017 at 14:57 GMT",
        "merged_at": "Tuesday Apr 18, 2017 at 14:57 GMT"
    },
    {
        "key": "WT-3288",
        "number": 3393,
        "state": "closed",
        "title": "WT-3288 fix error codes for event_handler to be consistent in file operations",
        "body": "Replacement for pull-request #3392.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 18, 2017 at 13:32 GMT",
        "updated_at": "Tuesday May 09, 2017 at 11:31 GMT",
        "closed_at": "Wednesday Apr 19, 2017 at 06:49 GMT",
        "merged_at": "Wednesday Apr 19, 2017 at 06:49 GMT"
    },
    {
        "key": "WT-3288",
        "number": 3392,
        "state": "closed",
        "title": "WT-3288 fix error codes for event_handler to be consistent in file operations",
        "body": "I used WiredTiger library as dependency.\r\nI have updated wiredtiger v2.7.0 => v2.9.1 and found an issue when I call `__wt_open_session` with directory which doesn't exists: \r\n\r\n- `__wt_open_session` return code is correct = 2 (ENOENT)\r\n- `event_handler` receive errorCode = 0, and `wiredtiger_strerror` return `Successful` string for this code\r\n\r\nThis PR is intended to return consistency to error codes, now `event_handler`'s error code and return code will be consistent for file operations.",
        "base_ref": "master",
        "created_at": "Monday Apr 17, 2017 at 11:07 GMT",
        "updated_at": "Tuesday Apr 18, 2017 at 13:34 GMT",
        "closed_at": "Tuesday Apr 18, 2017 at 13:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3287",
        "number": 3391,
        "state": "closed",
        "title": "WT-3287 review WiredTiger internal panic checks",
        "body": "Here's a set of changes based on error-handling discussions @sueloverso, @ddanderson, @agorrod  and I had in NYC last week.\r\n\r\nIn summary, we added several panic checks inside logging loops to avoid hangs in `wt2909_checkpoint_integrity` child processes, after fault injection. The change is to remove those panic checks, and to instead immediately exit the child process when a panic happens.\r\n\r\nThere are 3 commits:\r\n\r\n* da99e9d changes the standard error WT_EVENT_HANDLER to exit with a non-zero value on a WT_PANIC error: if the best thing an application can do on a panic is exit and restart, then it's reasonable for the standard error handler to exit. (To be fair, I think this change pushes the envelope some. On the balance, I like the change, but I won't argue if the consensus is the change is a bad idea.) If we don't take the change, we need to make a change in `test/csuite/wt2909_checkpoint_integrity/main.c`, giving the test program an error handler that exits on panic.\r\n\r\n* aa67cf1 is a minor cleanup in `include/api.h`, it's largely unrelated to the point of this pull request.\r\n\r\n* 71016d0 removes the `WT_SESSION_CHECK_PANIC()` calls we added to keep the `wt2909_checkpoint_integrity` test from hanging (as well as a couple of additional ones).\r\n\r\n@ddanderson, my understanding from you is that `wt2909_checkpoint_integrity` is fine with child programs that simply exit, and that's the path I've taken.",
        "base_ref": "develop",
        "created_at": "Saturday Apr 15, 2017 at 19:36 GMT",
        "updated_at": "Tuesday Apr 18, 2017 at 18:49 GMT",
        "closed_at": "Tuesday Apr 18, 2017 at 18:02 GMT",
        "merged_at": "Tuesday Apr 18, 2017 at 18:02 GMT"
    },
    {
        "key": "WT-3286",
        "number": 3390,
        "state": "closed",
        "title": "WT-3286 Improve search if an index hint is wrong",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Saturday Apr 15, 2017 at 16:02 GMT",
        "updated_at": "Friday Apr 21, 2017 at 17:02 GMT",
        "closed_at": "Friday Apr 21, 2017 at 17:02 GMT",
        "merged_at": "Friday Apr 21, 2017 at 17:02 GMT"
    },
    {
        "key": "WT-3284",
        "number": 3389,
        "state": "closed",
        "title": "WT-3284 tree-walk restart bug",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Apr 15, 2017 at 00:23 GMT",
        "updated_at": "Tuesday Apr 18, 2017 at 06:40 GMT",
        "closed_at": "Tuesday Apr 18, 2017 at 06:40 GMT",
        "merged_at": "Tuesday Apr 18, 2017 at 06:40 GMT"
    },
    {
        "key": "WT-3275",
        "number": 3388,
        "state": "closed",
        "title": "WT-3275 Fix a bug in LSM cursor semantics.",
        "body": "If an update, remove or reserve operation required a search it was possible for a race with eviction to cause a segfault between the lookup and requested operation.",
        "base_ref": "develop",
        "created_at": "Friday Apr 14, 2017 at 21:20 GMT",
        "updated_at": "Tuesday Apr 18, 2017 at 13:49 GMT",
        "closed_at": "Tuesday Apr 18, 2017 at 07:21 GMT",
        "merged_at": "Tuesday Apr 18, 2017 at 07:21 GMT"
    },
    {
        "key": "WT-3281",
        "number": 3387,
        "state": "closed",
        "title": "WT-3281 stress test sanitizer failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 14, 2017 at 00:59 GMT",
        "updated_at": "Wednesday Apr 19, 2017 at 04:38 GMT",
        "closed_at": "Wednesday Apr 19, 2017 at 04:38 GMT",
        "merged_at": "Wednesday Apr 19, 2017 at 04:38 GMT"
    },
    {
        "key": "WT-2767",
        "number": 3386,
        "state": "closed",
        "title": "WT-2767 in test/suite/run.py, add -s N option to run an individual sc\u2026",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Thursday Apr 13, 2017 at 05:13 GMT",
        "updated_at": "Friday Apr 28, 2017 at 04:24 GMT",
        "closed_at": "Thursday Apr 13, 2017 at 05:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3041",
        "number": 3385,
        "state": "closed",
        "title": "WT-3041 Remove test_perf001",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 13, 2017 at 04:18 GMT",
        "updated_at": "Thursday Apr 13, 2017 at 05:24 GMT",
        "closed_at": "Thursday Apr 13, 2017 at 05:24 GMT",
        "merged_at": "Thursday Apr 13, 2017 at 05:24 GMT"
    },
    {
        "key": "WT-3263",
        "number": 3384,
        "state": "closed",
        "title": "WT-3263 Allow recovery log file archiving on clean shutdown.",
        "body": "Revert test changes that needed a checkpoint for archiving.\r\n\r\n@agorrod This is ready for review.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 12, 2017 at 14:06 GMT",
        "updated_at": "Wednesday Apr 19, 2017 at 20:37 GMT",
        "closed_at": "Wednesday Apr 19, 2017 at 20:37 GMT",
        "merged_at": "Wednesday Apr 19, 2017 at 20:37 GMT"
    },
    {
        "key": "WT-3278",
        "number": 3383,
        "state": "closed",
        "title": "WT-3278 log the row-store cursor key instead of page key",
        "body": "It's simpler/faster to take the row-store log key from the cursor instead of getting it from the page.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 12, 2017 at 12:29 GMT",
        "updated_at": "Thursday Apr 13, 2017 at 04:23 GMT",
        "closed_at": "Thursday Apr 13, 2017 at 04:23 GMT",
        "merged_at": "Thursday Apr 13, 2017 at 04:23 GMT"
    },
    {
        "key": "WT-3277",
        "number": 3382,
        "state": "closed",
        "title": "WT-3277 Change assert in discard of updates",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Wednesday Apr 12, 2017 at 06:11 GMT",
        "updated_at": "Friday Apr 21, 2017 at 17:04 GMT",
        "closed_at": "Friday Apr 21, 2017 at 17:04 GMT",
        "merged_at": "Friday Apr 21, 2017 at 17:04 GMT"
    },
    {
        "key": "WT-3197",
        "number": 3381,
        "state": "closed",
        "title": "WT-3197 aarch64 CRC32C support fails to compile on non-linux ARM platforms",
        "body": "First change was insufficient, need to test __linux__ when including header files.",
        "base_ref": "develop",
        "created_at": "Monday Apr 10, 2017 at 18:19 GMT",
        "updated_at": "Monday Apr 10, 2017 at 18:43 GMT",
        "closed_at": "Monday Apr 10, 2017 at 18:43 GMT",
        "merged_at": "Monday Apr 10, 2017 at 18:43 GMT"
    },
    {
        "key": "WT-3197",
        "number": 3380,
        "state": "closed",
        "title": "WT-3197 aarch64 CRC32C support fails to compile on non-linux ARM platforms",
        "body": "getauxval is a Linux system call, don't attempt to call it unless we're running on a Linux system.",
        "base_ref": "develop",
        "created_at": "Monday Apr 10, 2017 at 15:45 GMT",
        "updated_at": "Monday Apr 10, 2017 at 16:07 GMT",
        "closed_at": "Monday Apr 10, 2017 at 16:07 GMT",
        "merged_at": "Monday Apr 10, 2017 at 16:07 GMT"
    },
    {
        "key": "WT-3271",
        "number": 3379,
        "state": "closed",
        "title": "WT-3271 Prevent integer overflow in eviction tuning.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 10, 2017 at 02:53 GMT",
        "updated_at": "Monday Apr 10, 2017 at 13:54 GMT",
        "closed_at": "Monday Apr 10, 2017 at 13:54 GMT",
        "merged_at": "Monday Apr 10, 2017 at 13:54 GMT"
    },
    {
        "key": "WT-3268",
        "number": 3378,
        "state": "closed",
        "title": "WT-3268 Failure to close cursor can get wiredtiger stuck in a cursor-close loop",
        "body": "@sulabhM, this was a great catch!\r\n\r\nHere's a possible solution for your review -- I found two related infinite loops and fixed them as well.\r\n\r\nWhat makes this change a little messy is there wasn't a single change that matched the problems: I added a generic pair of macros that wrap the TAILQ walk, so if we hit the same element twice in the walk, we remove it from the queue, and used that in two cases. I think that approach is appropriate for walks where there are a variety of underlying functions that are expected to remove the element from the queue, where we won't know if the element was removed after they fail.\r\n\r\nIn a third case, I added a force flag to an underlying function so it always removes the queue element.\r\n\r\nAnd, there was one restructuring that just cleaned up some messy code in a close function.\r\n\r\nThese are all separate commits, hopefully that makes the review easier.",
        "base_ref": "develop",
        "created_at": "Friday Apr 07, 2017 at 14:25 GMT",
        "updated_at": "Tuesday Apr 18, 2017 at 06:24 GMT",
        "closed_at": "Tuesday Apr 18, 2017 at 06:23 GMT",
        "merged_at": "Tuesday Apr 18, 2017 at 06:23 GMT"
    },
    {
        "key": "WT-3269",
        "number": 3377,
        "state": "closed",
        "title": "WT-3269 Lint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 07, 2017 at 11:45 GMT",
        "updated_at": "Friday Apr 07, 2017 at 20:55 GMT",
        "closed_at": "Friday Apr 07, 2017 at 20:55 GMT",
        "merged_at": "Friday Apr 07, 2017 at 20:55 GMT"
    },
    {
        "key": "WT-3262",
        "number": 3376,
        "state": "closed",
        "title": "WT-3262 Don't check if the cache is full when accessing metadata.",
        "body": "Also don't check for a full cache while holding the table lock (we're\r\nlikely reading the metadata in that case, just being extra careful).",
        "base_ref": "develop",
        "created_at": "Friday Apr 07, 2017 at 05:42 GMT",
        "updated_at": "Friday Apr 07, 2017 at 14:56 GMT",
        "closed_at": "Friday Apr 07, 2017 at 14:56 GMT",
        "merged_at": "Friday Apr 07, 2017 at 14:56 GMT"
    },
    {
        "key": "WT-3266",
        "number": 3375,
        "state": "closed",
        "title": "WT-3266 Drop lock while joining threads.",
        "body": "@keithbostic or @agorrod Do you want to review this?",
        "base_ref": "develop",
        "created_at": "Thursday Apr 06, 2017 at 17:11 GMT",
        "updated_at": "Friday Apr 07, 2017 at 04:47 GMT",
        "closed_at": "Friday Apr 07, 2017 at 04:17 GMT",
        "merged_at": "Friday Apr 07, 2017 at 04:17 GMT"
    },
    {
        "key": "WT-3267",
        "number": 3374,
        "state": "closed",
        "title": "WT-3267 Upgrade copyright notices from 2016 to 2017.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 06, 2017 at 16:57 GMT",
        "updated_at": "Friday Apr 07, 2017 at 04:43 GMT",
        "closed_at": "Friday Apr 07, 2017 at 04:43 GMT",
        "merged_at": "Friday Apr 07, 2017 at 04:43 GMT"
    },
    {
        "key": "WT-3181",
        "number": 3373,
        "state": "closed",
        "title": "WT-3181 Add timestamp support.",
        "body": "MongoDB needs to control the logical order of operations and read as of\r\ntimestamps that are meaningful to the (distributed) system.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 06, 2017 at 07:11 GMT",
        "updated_at": "Thursday Jun 22, 2017 at 23:33 GMT",
        "closed_at": "Thursday Jun 22, 2017 at 23:33 GMT",
        "merged_at": "Thursday Jun 22, 2017 at 23:33 GMT"
    },
    {
        "key": "WT-3265",
        "number": 3372,
        "state": "closed",
        "title": "WT-3265 Allow eviction of recently split pages when tree is locked.",
        "body": "When pages split in WiredTiger, internal pages cannot be evicted\r\nimmediately because there is a chance that a reader is still looking at\r\nan index pointing to the page.  We check for this when considering pages\r\nfor eviction, and assert that we never evict an internal page in an\r\nactive generation.\r\n\r\nHowever, if a page splits and then we try to get exclusive access to\r\nthe tree (e.g., to verify it), we could fail to evict the tree from\r\ncache even though we have guaranteed exclusive access to it.\r\n\r\nRelax the check on internal pages to allow eviction from trees that are\r\nlocked exclusive.",
        "base_ref": "develop",
        "created_at": "Thursday Apr 06, 2017 at 02:00 GMT",
        "updated_at": "Friday Apr 07, 2017 at 14:58 GMT",
        "closed_at": "Friday Apr 07, 2017 at 14:58 GMT",
        "merged_at": "Friday Apr 07, 2017 at 14:58 GMT"
    },
    {
        "key": "WT-3133",
        "number": 3371,
        "state": "closed",
        "title": "WT-3133 Track operation duration",
        "body": "To allow us to investigate the cause of slow operations",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 05, 2017 at 23:50 GMT",
        "updated_at": "Wednesday Dec 06, 2017 at 05:04 GMT",
        "closed_at": "Wednesday Dec 06, 2017 at 05:04 GMT",
        "merged_at": "Wednesday Dec 06, 2017 at 05:04 GMT"
    },
    {
        "key": "WT-3261",
        "number": 3370,
        "state": "closed",
        "title": "WT-3261 add a checkpoint epoch to avoid draining the eviction queue",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 05, 2017 at 16:52 GMT",
        "updated_at": "Thursday Apr 13, 2017 at 04:59 GMT",
        "closed_at": "Thursday Apr 13, 2017 at 04:59 GMT",
        "merged_at": "Thursday Apr 13, 2017 at 04:59 GMT"
    },
    {
        "key": "WT-3222",
        "number": 3369,
        "state": "closed",
        "title": "WT-3222 Add additional log statistics",
        "body": "Not yet ready for review.  First pass at adding a few interesting stats.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 05, 2017 at 16:21 GMT",
        "updated_at": "Thursday Apr 13, 2017 at 19:33 GMT",
        "closed_at": "Thursday Apr 13, 2017 at 19:33 GMT",
        "merged_at": "Thursday Apr 13, 2017 at 19:33 GMT"
    },
    {
        "key": "WT-3253",
        "number": 3368,
        "state": "closed",
        "title": "WT-3253 Update Python transaction tests to have correct flush configuration",
        "body": "@ddanderson Please review this changes to a few txn tests.  If we are only writing log records in memory we need to flush the log before making a backup to make sure all records are there before copying.  This bug has been in there a long time but recent changes widened a window.",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 05, 2017 at 14:51 GMT",
        "updated_at": "Friday Apr 07, 2017 at 04:47 GMT",
        "closed_at": "Wednesday Apr 05, 2017 at 17:29 GMT",
        "merged_at": "Wednesday Apr 05, 2017 at 17:29 GMT"
    },
    {
        "key": "WT-3247",
        "number": 3367,
        "state": "closed",
        "title": "WT-3247 Test should exit instead of abort to avoid a core dump.",
        "body": "@michaelcahill Please review these changes.  I don't recall what Jenkins job prompted this.  However when I run `develop` I get a core file generated and with this change I do not, as expected and the test passes.  This test is not a randomly aborting test.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 04, 2017 at 21:21 GMT",
        "updated_at": "Wednesday Apr 05, 2017 at 03:43 GMT",
        "closed_at": "Wednesday Apr 05, 2017 at 03:43 GMT",
        "merged_at": "Wednesday Apr 05, 2017 at 03:43 GMT"
    },
    {
        "key": "WT-3254",
        "number": 3366,
        "state": "closed",
        "title": "WT-3254 Fix typo in reconfig string",
        "body": "self-reviewing",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 04, 2017 at 18:56 GMT",
        "updated_at": "Tuesday Apr 04, 2017 at 19:10 GMT",
        "closed_at": "Tuesday Apr 04, 2017 at 19:10 GMT",
        "merged_at": "Tuesday Apr 04, 2017 at 19:10 GMT"
    },
    {
        "key": "WT-3249",
        "number": 3365,
        "state": "closed",
        "title": "WT-3249 Look at slot_state during force while holding lock.",
        "body": "We could race an in-progress switch that set a new, empty active slot\r\nbut has not yet released the previously active slot and get an\r\nincorrect LSN.",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 04, 2017 at 18:00 GMT",
        "updated_at": "Tuesday Apr 04, 2017 at 19:48 GMT",
        "closed_at": "Tuesday Apr 04, 2017 at 19:48 GMT",
        "merged_at": "Tuesday Apr 04, 2017 at 19:48 GMT"
    },
    {
        "key": "WT-3250",
        "number": 3364,
        "state": "closed",
        "title": "WT-3250 Have one function initializing the WT portion of the spinlock.",
        "body": "@agorrod and @michaelcahill Here are my suggested changes for the spin lock fix.",
        "base_ref": "develop",
        "created_at": "Monday Apr 03, 2017 at 14:52 GMT",
        "updated_at": "Tuesday Apr 04, 2017 at 21:49 GMT",
        "closed_at": "Monday Apr 03, 2017 at 16:51 GMT",
        "merged_at": "Monday Apr 03, 2017 at 16:51 GMT"
    },
    {
        "key": "WT-3250",
        "number": 3363,
        "state": "closed",
        "title": "WT-3250 Fix spinlock statistics tracking on Windows.",
        "body": "A MongoDB user on Windows noticed the \"LSM: application work units currently queued\" statistic was changing in a configuration that involved no LSM code. This was caused by a bug in code that tracks time spent in spinlocks incrementing the wrong statistic.\r\n\r\nIn particular, spinlocks contain fields describing which statistics should be used to track time spent in that spinlock.  A value of -1 indicates that the spinlock should not be tracked, but a value of zero is the first statistic in the array for a connection, which happens to be the \"LSM: application work units currently queued\" statistic.  The Windows implementation of spinlocks was not setting these fields to -1, leading to the bug.\r\n\r\nThis bug was introduced by WT-2955 and also meant that every WiredTiger spinlock on Windows was being timed, which may have negatively impacted Windows performance.",
        "base_ref": "develop",
        "created_at": "Monday Apr 03, 2017 at 05:07 GMT",
        "updated_at": "Monday Apr 03, 2017 at 14:36 GMT",
        "closed_at": "Monday Apr 03, 2017 at 14:31 GMT",
        "merged_at": "Monday Apr 03, 2017 at 14:31 GMT"
    },
    {
        "key": "WT-3076",
        "number": 3362,
        "state": "closed",
        "title": "WT-3076 Add a general-purpose epoch manager",
        "body": "@michaelcahill, for your consideration.\r\n\r\n* I created the structure and supporting functions, including the drain functions.\r\n* I switched over table schema, split-generations, hazard pointers and checkpoint generation numbers, all of which were pretty easy. I did not switch over LSM trees or eviction generations (happy to take a run at them, but there are some subtleties I want to discuss with you or @agorrod first).\r\n* I did not inline these functions, which might make a difference in some cases. (The problem is that `btree.h` calls the generation functions, and there's some header file trickiness in inlining functions called by include files.)\r\n* I  used the name \"generation\" instead of \"epoch\", mostly because we already have `__wt_epoch` (which returns the seconds since the POSIX epoch), and that looked confusing. Happy to switch to \"epoch\" if you & Alex prefer, but I think that means renaming `__wt_epoch`. I don't care much, either way is fbm.\r\n* The hazard pointer change: I set it up so `__wt_txn_release` and `__session_reset` free any session memory that can be freed, which means they'll identify hazard pointer arrays that can be free'd, rather than having any special support.",
        "base_ref": "develop",
        "created_at": "Sunday Apr 02, 2017 at 14:43 GMT",
        "updated_at": "Wednesday Apr 05, 2017 at 03:54 GMT",
        "closed_at": "Wednesday Apr 05, 2017 at 03:54 GMT",
        "merged_at": "Wednesday Apr 05, 2017 at 03:54 GMT"
    },
    {
        "key": "WT-3245",
        "number": 3361,
        "state": "closed",
        "title": "WT-3245 Avoid hangs on shutdown when a utility thread encounters an error",
        "body": "@sueloverso, the log threads didn't panic on unexpected exit, the async worker threads checked for panic (unlike the other server threads).\r\n\r\nCan you please review?",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 29, 2017 at 23:28 GMT",
        "updated_at": "Friday Apr 07, 2017 at 04:47 GMT",
        "closed_at": "Friday Apr 07, 2017 at 04:45 GMT",
        "merged_at": "Friday Apr 07, 2017 at 04:45 GMT"
    },
    {
        "key": "WT-3243",
        "number": 3360,
        "state": "closed",
        "title": "WT-3243 Reorder log slot release so joins don't wait on IO",
        "body": "@agorrod or @michaelcahill please review this change.  With this I see a bit better performance with the repro case and I've tweaked the slot join statistics to give a better idea of what is going on during a switch.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 29, 2017 at 19:15 GMT",
        "updated_at": "Friday Mar 31, 2017 at 01:01 GMT",
        "closed_at": "Friday Mar 31, 2017 at 01:01 GMT",
        "merged_at": "Friday Mar 31, 2017 at 01:01 GMT"
    },
    {
        "key": "WT-3244",
        "number": 3359,
        "state": "closed",
        "title": "WT-3244 metadata operations failing in in-memory configurations",
        "body": "@michaelcahill, turning off in-memory cache-full checks on the metadata file is obviously a relatively big hammer.\r\n\r\nIf that's too dangerous, we could turn off the cache checks on just the unroll operations? Let me know what you prefer.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 29, 2017 at 19:13 GMT",
        "updated_at": "Wednesday Mar 29, 2017 at 20:27 GMT",
        "closed_at": "Wednesday Mar 29, 2017 at 20:26 GMT",
        "merged_at": "Wednesday Mar 29, 2017 at 20:26 GMT"
    },
    {
        "key": "WT-2439",
        "number": 3358,
        "state": "closed",
        "title": "WT-2439 Enhance reconciliation page layout",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 29, 2017 at 14:54 GMT",
        "updated_at": "Thursday Mar 30, 2017 at 05:39 GMT",
        "closed_at": "Thursday Mar 30, 2017 at 05:39 GMT",
        "merged_at": "Thursday Mar 30, 2017 at 05:39 GMT"
    },
    {
        "key": "WT-3160",
        "number": 3357,
        "state": "closed",
        "title": "WT-3160 Queue empty internal pages for eviction.",
        "body": "Now that queuing is smarter, remove the skew against internal pages.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 29, 2017 at 03:00 GMT",
        "updated_at": "Friday Apr 14, 2017 at 20:01 GMT",
        "closed_at": "Friday Apr 14, 2017 at 20:01 GMT",
        "merged_at": "Friday Apr 14, 2017 at 20:01 GMT"
    },
    {
        "key": "WT-3208",
        "number": 3356,
        "state": "closed",
        "title": "WT-3208 Don't count page rewrites as eviction making progress.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 29, 2017 at 01:46 GMT",
        "updated_at": "Wednesday Mar 29, 2017 at 20:38 GMT",
        "closed_at": "Wednesday Mar 29, 2017 at 20:38 GMT",
        "merged_at": "Wednesday Mar 29, 2017 at 20:38 GMT"
    },
    {
        "key": "WT-3238",
        "number": 3355,
        "state": "closed",
        "title": "WT-3238 Java: Fix Cursor.compare and Cursor.equals to return int values.",
        "body": "Non-zero int values for these functions should not raise exceptions.\r\nThis commit includes various tests for compare/equals.",
        "base_ref": "develop",
        "created_at": "Monday Mar 27, 2017 at 20:46 GMT",
        "updated_at": "Monday Apr 03, 2017 at 04:12 GMT",
        "closed_at": "Wednesday Mar 29, 2017 at 00:08 GMT",
        "merged_at": "Wednesday Mar 29, 2017 at 00:08 GMT"
    },
    {
        "key": "WT-3240",
        "number": 3354,
        "state": "closed",
        "title": "WT-3240 Coverity reports",
        "body": "Coverity reports based on the new `__wt_snprintf` errors.",
        "base_ref": "develop",
        "created_at": "Monday Mar 27, 2017 at 11:42 GMT",
        "updated_at": "Monday Mar 27, 2017 at 13:18 GMT",
        "closed_at": "Monday Mar 27, 2017 at 13:18 GMT",
        "merged_at": "Monday Mar 27, 2017 at 13:18 GMT"
    },
    {
        "key": "ER-28168",
        "number": 3353,
        "state": "closed",
        "title": "SERVER-28168 Cannot start or repair mongodb after unexpected shutdown.",
        "body": "Panic if there's an error in reading/writing from/to the turtle file, there's no point in continuing. This change avoids user confusion when the turtle file is corrupted or zero'd out by the filesystem.",
        "base_ref": "develop",
        "created_at": "Sunday Mar 26, 2017 at 16:36 GMT",
        "updated_at": "Monday Mar 27, 2017 at 13:44 GMT",
        "closed_at": "Monday Mar 27, 2017 at 13:44 GMT",
        "merged_at": "Monday Mar 27, 2017 at 13:44 GMT"
    },
    {
        "key": "WT-3063",
        "number": 3352,
        "state": "closed",
        "title": "WT-3063 Reserve records for read-modify-write",
        "body": "`WT_CURSOR.reserve` implementation.",
        "base_ref": "develop",
        "created_at": "Saturday Mar 25, 2017 at 16:40 GMT",
        "updated_at": "Tuesday Apr 11, 2017 at 05:29 GMT",
        "closed_at": "Tuesday Apr 11, 2017 at 05:29 GMT",
        "merged_at": "Tuesday Apr 11, 2017 at 05:29 GMT"
    },
    {
        "key": "WT-3238",
        "number": 3351,
        "state": "closed",
        "title": "[WT-3238] Cursor Compare and Equals in Java JNI incorrectly throw Exceptions",
        "body": "Refer to the Jira: https://jira.mongodb.org/browse/WT-3238",
        "base_ref": "master",
        "created_at": "Saturday Mar 25, 2017 at 02:32 GMT",
        "updated_at": "Wednesday Mar 29, 2017 at 00:09 GMT",
        "closed_at": "Wednesday Mar 29, 2017 at 00:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3207",
        "number": 3350,
        "state": "closed",
        "title": "WT-3207 Use config to determine checkpoint force value.",
        "body": "@michaelcahill Here's the change we discussed.  Please review.",
        "base_ref": "develop",
        "created_at": "Friday Mar 24, 2017 at 19:59 GMT",
        "updated_at": "Monday Apr 03, 2017 at 04:12 GMT",
        "closed_at": "Monday Mar 27, 2017 at 01:48 GMT",
        "merged_at": "Monday Mar 27, 2017 at 01:48 GMT"
    },
    {
        "key": "WT-98",
        "number": 3349,
        "state": "closed",
        "title": "WT-98 Update the current cursor value without a search",
        "body": "This fixes an AddressSanitizer failure introduced by WT-98 -- by not saving the cursor key/value when entering LSM, we end up searching pages that have been evicted.\r\n```\r\n==16469==ERROR: AddressSanitizer: heap-use-after-free on address 0x62a0020f1d1f at pc 0xda5bd2 bp 0x7fe824451f30 sp 0x7fe824451f28\r\nREAD of size 16 at 0x62a0020f1d1f thread T13\r\n    #0 0xda5bd1 in __wt_lex_compare /home/bostic/wiredtiger/./src/include/btree_cmp.i:65:9\r\n    #1 0xd9bec4 in __wt_compare /home/bostic/wiredtiger/./src/include/btree_cmp.i:96:11\r\n    #2 0xd922c3 in __wt_row_search /home/bostic/wiredtiger/src/btree/row_srch.c:318\r\n    #3 0x10f9b1f in __cursor_row_search /home/bostic/wiredtiger/src/btree/bt_cursor.c:358\r\n    #4 0x10fd220 in __wt_btcur_search_near /home/bostic/wiredtiger/src/btree/bt_cursor.c:557\r\n    #5 0xe4988b in __curfile_search_near /home/bostic/wiredtiger/src/cursor/cur_file.c:216\r\n    #6 0xf6395c in __clsm_next /home/bostic/wiredtiger/src/lsm/lsm_cursor.c:886\r\n    #7 0x4afa35 in nextprev /home/bostic/wiredtiger/test/format/ops.c:1005\r\n    #8 0x4a0b2c in ops /home/bostic/wiredtiger/test/format/ops.c:777\r\n    #9 0x7fe832968dc4 in start_thread (/lib64/libpthread.so.0+0x7dc4)\r\n    #10 0x7fe831b4f73c in __clone (/lib64/libc.so.6+0xf773c)\r\n\r\n0x62a0020f1d1f is located 15135 bytes inside of 22920-byte region [0x62a0020ee200,0x62a0020f3b88)\r\nfreed by thread T14 here:\r\n    #0 0x468159 in free (/home/bostic/wiredtiger/test/format/t+0x468159)\r\n    #1 0x75b590 in __wt_free_int /home/bostic/wiredtiger/src/os_common/os_alloc.c:309\r\n    #2 0xb3fe91 in __wt_page_out /home/bostic/wiredtiger/src/btree/bt_discard.c:145\r\n    #3 0xb3e6a2 in __wt_ref_out /home/bostic/wiredtiger/src/btree/bt_discard.c:59\r\n    #4 0x64e3f4 in __evict_page_clean_update /home/bostic/wiredtiger/src/evict/evict_page.c:255\r\n    #5 0x64906f in __wt_evict /home/bostic/wiredtiger/src/evict/evict_page.c:164\r\n    #6 0x6163d0 in __evict_page /home/bostic/wiredtiger/src/evict/evict_lru.c:2092\r\n    #7 0x60a601 in __evict_lru_pages /home/bostic/wiredtiger/src/evict/evict_lru.c:1097\r\n    #8 0x62cfac in __evict_pass /home/bostic/wiredtiger/src/evict/evict_lru.c:679\r\n    #9 0x608824 in __evict_server /home/bostic/wiredtiger/src/evict/evict_lru.c:387\r\n    #10 0x606c6b in __wt_evict_thread_run /home/bostic/wiredtiger/src/evict/evict_lru.c:308\r\n    #11 0xa1b881 in __wt_thread_run /home/bostic/wiredtiger/src/support/thread_group.c:25\r\n    #12 0x7fe832968dc4 in start_thread (/lib64/libpthread.so.0+0x7dc4)\r\n```\r\nHere's the CONFIG:\r\n```\r\n############################################\r\n#  RUN PARAMETERS\r\n############################################\r\nabort=0\r\nalter=0\r\nauto_throttle=1\r\nbackups=0\r\nbitcnt=4\r\nbloom=1\r\nbloom_bit_count=23\r\nbloom_hash_count=26\r\nbloom_oldest=0\r\ncache=30\r\ncheckpoints=1\r\nchecksum=uncompressed\r\nchunk_size=1\r\ncompaction=0\r\ncompression=zlib\r\ndata_extend=0\r\ndata_source=lsm\r\ndelete_pct=17\r\ndictionary=0\r\ndirect_io=0\r\nencryption=none\r\nevict_max=3\r\nfile_type=row-store\r\nfirstfit=0\r\nhuffman_key=0\r\nhuffman_value=0\r\nin_memory=0\r\ninsert_pct=2\r\ninternal_key_truncation=1\r\ninternal_page_max=11\r\nisolation=random\r\nkey_gap=12\r\nkey_max=83\r\nkey_min=29\r\nleaf_page_max=12\r\nleak_memory=0\r\nlogging=0\r\nlogging_archive=0\r\nlogging_compression=none\r\nlogging_prealloc=1\r\nlong_running_txn=0\r\nlsm_worker_threads=4\r\nmerge_max=17\r\nmmap=1\r\nops=100000\r\nprefix_compression=0\r\nprefix_compression_min=5\r\nquiet=1\r\nread_pct=3\r\nrebalance=1\r\nrepeat_data_pct=85\r\nreverse=0\r\nrows=100000\r\nruns=10\r\nsalvage=1\r\nsplit_pct=75\r\nstatistics=0\r\nstatistics_server=0\r\nthreads=7\r\ntimer=20\r\ntransaction-frequency=47\r\nvalue_max=2728\r\nvalue_min=13\r\nverify=1\r\nwiredtiger_config=\r\nwrite_pct=78\r\n############################################\r\n```\r\nThis reverts commit af2c787.",
        "base_ref": "develop",
        "created_at": "Friday Mar 24, 2017 at 15:06 GMT",
        "updated_at": "Friday Mar 24, 2017 at 15:24 GMT",
        "closed_at": "Friday Mar 24, 2017 at 15:24 GMT",
        "merged_at": "Friday Mar 24, 2017 at 15:24 GMT"
    },
    {
        "key": "WT-3136",
        "number": 3348,
        "state": "closed",
        "title": "WT-3136 bug fix: WiredTiger doesn't check sprintf calls for error return",
        "body": "Fix a typo.",
        "base_ref": "develop",
        "created_at": "Friday Mar 24, 2017 at 13:05 GMT",
        "updated_at": "Friday Mar 24, 2017 at 13:37 GMT",
        "closed_at": "Friday Mar 24, 2017 at 13:37 GMT",
        "merged_at": "Friday Mar 24, 2017 at 13:37 GMT"
    },
    {
        "key": "WT-3136",
        "number": 3347,
        "state": "closed",
        "title": "WT-3136 bug fix: WiredTiger doesn't check sprintf calls for error return",
        "body": "Add a style check for local snprintf/vnsprintf calls, fix a wtperf snprintf call I missed.\r\n\r\nThis only changes test and style code, I'm going to merge as soon as it passes the tests.",
        "base_ref": "develop",
        "created_at": "Friday Mar 24, 2017 at 12:43 GMT",
        "updated_at": "Friday Mar 24, 2017 at 13:00 GMT",
        "closed_at": "Friday Mar 24, 2017 at 13:00 GMT",
        "merged_at": "Friday Mar 24, 2017 at 13:00 GMT"
    },
    {
        "key": "WT-98",
        "number": 3346,
        "state": "closed",
        "title": "WT-98 Update the current cursor value without a search",
        "body": "The real change is 1cf0ba0, cf573d6 is just code shuffling.\r\n\r\nThe fix is in format, so I'm going to go ahead and merge this change once it passes testing.",
        "base_ref": "develop",
        "created_at": "Friday Mar 24, 2017 at 11:31 GMT",
        "updated_at": "Friday Mar 24, 2017 at 11:53 GMT",
        "closed_at": "Friday Mar 24, 2017 at 11:53 GMT",
        "merged_at": "Friday Mar 24, 2017 at 11:53 GMT"
    },
    {
        "key": "WT-3234",
        "number": 3345,
        "state": "closed",
        "title": "WT-3234 Update WiredTiger build for clang 4.0.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 23, 2017 at 13:44 GMT",
        "updated_at": "Friday Mar 24, 2017 at 01:17 GMT",
        "closed_at": "Friday Mar 24, 2017 at 01:16 GMT",
        "merged_at": "Friday Mar 24, 2017 at 01:16 GMT"
    },
    {
        "key": "WT-3155",
        "number": 3344,
        "state": "closed",
        "title": "WT-3155 Remove WT_CONN_SERVER_RUN flag",
        "body": "@michaelcahill, I added barriers to the standard thread create/join APIs (similar to how we have a barrier in the yield API), and I thought that might interest you.\r\n\r\n@agorrod, @sueloverso, most of the changes are in and around LSM manager startup and shutdown, so I hoped you could do the review.\r\n\r\n@sueloverso, in 85336ab I renamed `WT_CONN_LOG_SERVER_RUN` to `WT_CONN_SERVER_LOG` to match the other server flags, please let me know if that's not right.\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 22, 2017 at 14:01 GMT",
        "updated_at": "Wednesday Mar 29, 2017 at 21:15 GMT",
        "closed_at": "Wednesday Mar 29, 2017 at 21:15 GMT",
        "merged_at": "Wednesday Mar 29, 2017 at 21:15 GMT"
    },
    {
        "key": "WT-3230",
        "number": 3343,
        "state": "closed",
        "title": "WT-3230 add automated support for clang static analysis tools",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 21, 2017 at 17:21 GMT",
        "updated_at": "Friday Apr 21, 2017 at 10:54 GMT",
        "closed_at": "Friday Apr 21, 2017 at 10:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2990",
        "number": 3342,
        "state": "closed",
        "title": "WT-2990 Restore use of dhandle lock in LSM.",
        "body": "@keithbostic Please review this change.  The merge of the changes for WT-3196 removed using the dhandle lock (I don't know why).  Restoring the use of this lock fixes my repro case.",
        "base_ref": "develop",
        "created_at": "Monday Mar 20, 2017 at 18:37 GMT",
        "updated_at": "Monday Mar 20, 2017 at 19:04 GMT",
        "closed_at": "Monday Mar 20, 2017 at 19:04 GMT",
        "merged_at": "Monday Mar 20, 2017 at 19:04 GMT"
    },
    {
        "key": "WT-3202",
        "number": 3341,
        "state": "closed",
        "title": "WT-3202 Add in_memory configuration option to wtperf",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 19, 2017 at 23:30 GMT",
        "updated_at": "Thursday Mar 23, 2017 at 00:57 GMT",
        "closed_at": "Thursday Mar 23, 2017 at 00:57 GMT",
        "merged_at": "Thursday Mar 23, 2017 at 00:57 GMT"
    },
    {
        "key": "WT-3136",
        "number": 3340,
        "state": "closed",
        "title": "WT-3136 bug fix: WiredTiger doesn't check sprintf calls for error return",
        "body": "This change checks the sprintf, snprintf, vsprintf and vsnprintf calls in the tree for error returns.\r\n\r\nThe big picture is to create 3 pairs of functions that cover WiredTiger's usage of the sprintf family of functions:\r\n1. `__wt_snprintf/__wt_vsnprintf`: fail if the buffer is too small for the formatted contents. Used in most cases where we have a buffer and we want to format into it.\r\n2. `__wt_snprintf_len_set/__wt_vsnprintf_len_set`: set the returned length of the formatted contents, don't fail if the buffer is too small for the formatted contents. Used when we want to format into a buffer, with a return of the length of the results.\r\n3. `__wt_snprintf_len_incr/__wt_snprintf_len_incr`: increment the returned length of the formatted contents, don't fail if the buffer is too small for the formatted contents. Used when we want to format into a buffer repeatedly, incrementing the total length as we go.\r\n\r\nThe reason for number 2 is because my first effort ended up with a lot of calls that looked like this:\r\n```\r\nsize_t len;\r\n...\r\nlen = 0;\r\n__wt_snprintf_len_incr(..., &len, ...);\r\n```\r\nand I thought it was too easy to forget to set `len = 0;`, and if `len` is on the stack, that might bite us in the field.\r\n\r\n@agorrod, @michaelcahill, this might be misguided, but it's the simplest solution I saw. Can you please take a look and consider this approach?\r\n\r\nIf Alex/Michael sign off on this change:\r\n\r\n@sueloverso, would you please review `log/log.c`? And could we get a comment on the `len = 1;` line, why are we adding 1 to the length?\r\n\r\n@ddanderson, would you please review `cursor/cur_json.c`?\r\n\r\n@sulabhM, would you please own the full review? I'll add some review notes to flag changes that might be worth a closer look.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Saturday Mar 18, 2017 at 22:15 GMT",
        "updated_at": "Friday Mar 24, 2017 at 12:16 GMT",
        "closed_at": "Friday Mar 24, 2017 at 12:16 GMT",
        "merged_at": "Friday Mar 24, 2017 at 12:16 GMT"
    },
    {
        "key": "WT-3228",
        "number": 3339,
        "state": "closed",
        "title": "WT-3228 table cursor update/remove overwrite configuration errors",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 17, 2017 at 20:53 GMT",
        "updated_at": "Friday Mar 24, 2017 at 01:39 GMT",
        "closed_at": "Friday Mar 24, 2017 at 01:39 GMT",
        "merged_at": "Friday Mar 24, 2017 at 01:39 GMT"
    },
    {
        "key": "WT-3227",
        "number": 3338,
        "state": "closed",
        "title": "WT-3227 Python test suite inserts unnecessary whitespace in error output",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 17, 2017 at 19:32 GMT",
        "updated_at": "Friday Mar 17, 2017 at 20:08 GMT",
        "closed_at": "Friday Mar 17, 2017 at 19:50 GMT",
        "merged_at": "Friday Mar 17, 2017 at 19:50 GMT"
    },
    {
        "key": "ER-28194",
        "number": 3337,
        "state": "closed",
        "title": "SERVER-28194 Missing WiredTiger.turtle file loses data",
        "body": "@markbenvenuto, can you please take a look at this change? -- thanks!",
        "base_ref": "develop",
        "created_at": "Friday Mar 17, 2017 at 15:05 GMT",
        "updated_at": "Thursday Mar 23, 2017 at 06:27 GMT",
        "closed_at": "Thursday Mar 23, 2017 at 06:27 GMT",
        "merged_at": "Thursday Mar 23, 2017 at 06:27 GMT"
    },
    {
        "key": "WT-3196",
        "number": 3336,
        "state": "closed",
        "title": "WT-3196 Prevent eviction in LSM primaries after they are flushed.",
        "body": "Once an LSM primary is known to be on disk, we expect readers to use the\r\ncheckpoint.  The original page image for the primary will then be\r\ndiscarded by an LSM worker thread.\r\n\r\nWe previously allowed the LSM primary to be evicted in between so that\r\neviction workers can deal with cache pressure ahead of the LSM worker\r\nthreads discarding the chunk.  However, that leads to cases where\r\napplication threads end up evicting a 100MB page, and also means that\r\ndiscarding the chunk needs to worry about split generations (the cause\r\nof the assertion failure here).\r\n\r\nThe solution suggested here is simple: never enable eviction in LSM\r\nprimaries, which also means we never need to fix up cache accounting.",
        "base_ref": "develop",
        "created_at": "Friday Mar 17, 2017 at 07:47 GMT",
        "updated_at": "Monday Mar 20, 2017 at 14:25 GMT",
        "closed_at": "Monday Mar 20, 2017 at 05:58 GMT",
        "merged_at": "Monday Mar 20, 2017 at 05:58 GMT"
    },
    {
        "key": "WT-3224",
        "number": 3335,
        "state": "closed",
        "title": "WT-3224 LSM assertion failure pindex->entries == 1",
        "body": "Don't do in-memory splits on the LSM primary.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 16, 2017 at 18:57 GMT",
        "updated_at": "Friday Mar 17, 2017 at 05:15 GMT",
        "closed_at": "Friday Mar 17, 2017 at 05:15 GMT",
        "merged_at": "Friday Mar 17, 2017 at 05:15 GMT"
    },
    {
        "key": "WT-3218",
        "number": 3334,
        "state": "closed",
        "title": "WT-3218 Reduce to 2k tables so Jenkins doesn't hit open file ulimit.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 16, 2017 at 17:58 GMT",
        "updated_at": "Thursday Mar 16, 2017 at 18:38 GMT",
        "closed_at": "Thursday Mar 16, 2017 at 18:38 GMT",
        "merged_at": "Thursday Mar 16, 2017 at 18:38 GMT"
    },
    {
        "key": "WT-3225",
        "number": 3333,
        "state": "closed",
        "title": "WT-3225 WiredTiger won't build with clang on CentOS 7.3.1611",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 16, 2017 at 15:29 GMT",
        "updated_at": "Thursday Mar 16, 2017 at 15:42 GMT",
        "closed_at": "Thursday Mar 16, 2017 at 15:42 GMT",
        "merged_at": "Thursday Mar 16, 2017 at 15:42 GMT"
    },
    {
        "key": "WT-3206",
        "number": 3332,
        "state": "closed",
        "title": "WT-3206 Fix a race allocating split generations.",
        "body": "We use split generations to detect when readers may be looking at\r\nstructures that are replaced by a split.  For correctness, we should\r\nonly increment the global split generation *after* a split becomes\r\npublic.  Only then can we safely check that no thread is still reading\r\nwith the old generation.\r\n\r\nPreviously, a split could increment the global split generation, then a\r\nthread could start reading with the new split generation but see the old\r\nindex structure.\r\n\r\nThis issue was introduced by WT-3088, where we wanted a way to ensure\r\nthat newly-allocated pages don't split until it is safe.  That is solved\r\nhere by having the split code pin a split generation in the ordinary way\r\n(without allocating a new one) for the duration that splits of new\r\npages need to be prevented.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 16, 2017 at 05:08 GMT",
        "updated_at": "Thursday Mar 16, 2017 at 05:26 GMT",
        "closed_at": "Thursday Mar 16, 2017 at 05:26 GMT",
        "merged_at": "Thursday Mar 16, 2017 at 05:26 GMT"
    },
    {
        "key": "WT-3218",
        "number": 3331,
        "state": "closed",
        "title": "WT-3218 Avoid adding duplicate handles to connection dhandle list",
        "body": "Recheck for existence after acquiring write lock when creating a new dhandle.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 16, 2017 at 03:47 GMT",
        "updated_at": "Thursday Mar 16, 2017 at 04:03 GMT",
        "closed_at": "Thursday Mar 16, 2017 at 04:03 GMT",
        "merged_at": "Thursday Mar 16, 2017 at 04:03 GMT"
    },
    {
        "key": "WT-98",
        "number": 3330,
        "state": "closed",
        "title": "WT-98 Update the current cursor value without a search",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 14, 2017 at 17:09 GMT",
        "updated_at": "Friday Mar 24, 2017 at 05:02 GMT",
        "closed_at": "Friday Mar 24, 2017 at 05:02 GMT",
        "merged_at": "Friday Mar 24, 2017 at 05:02 GMT"
    },
    {
        "key": "WT-3207",
        "number": 3329,
        "state": "closed",
        "title": "WT-3207 Fix a leak if a checkpoint fails.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 13, 2017 at 05:42 GMT",
        "updated_at": "Monday Mar 13, 2017 at 06:13 GMT",
        "closed_at": "Monday Mar 13, 2017 at 06:13 GMT",
        "merged_at": "Monday Mar 13, 2017 at 06:13 GMT"
    },
    {
        "key": "WT-3216",
        "number": 3328,
        "state": "closed",
        "title": "WT-3216 add support for clang-tidy",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 12, 2017 at 18:27 GMT",
        "updated_at": "Friday Mar 17, 2017 at 03:50 GMT",
        "closed_at": "Friday Mar 17, 2017 at 03:50 GMT",
        "merged_at": "Friday Mar 17, 2017 at 03:50 GMT"
    },
    {
        "key": "WT-3212",
        "number": 3327,
        "state": "closed",
        "title": "WT-3212 Table cursors should not free memory owned by the table.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 10, 2017 at 17:13 GMT",
        "updated_at": "Friday Mar 17, 2017 at 03:45 GMT",
        "closed_at": "Friday Mar 17, 2017 at 03:45 GMT",
        "merged_at": "Friday Mar 17, 2017 at 03:45 GMT"
    },
    {
        "key": "WT-3207",
        "number": 3326,
        "state": "closed",
        "title": "WT-3207 Report a message for conflicting forced checkpoints, rather than an error",
        "body": "Continue to return EBUSY. Have test/fops handle EBUSY returns from forced checkpoints.",
        "base_ref": "develop",
        "created_at": "Friday Mar 10, 2017 at 04:38 GMT",
        "updated_at": "Friday Mar 10, 2017 at 10:01 GMT",
        "closed_at": "Friday Mar 10, 2017 at 10:01 GMT",
        "merged_at": "Friday Mar 10, 2017 at 10:01 GMT"
    },
    {
        "key": "WT-3204",
        "number": 3325,
        "state": "closed",
        "title": "WT-3204 eviction changes cost LSM performance",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 09, 2017 at 22:10 GMT",
        "updated_at": "Thursday Mar 16, 2017 at 11:49 GMT",
        "closed_at": "Thursday Mar 16, 2017 at 11:49 GMT",
        "merged_at": "Thursday Mar 16, 2017 at 11:49 GMT"
    },
    {
        "key": "WT-3190",
        "number": 3324,
        "state": "closed",
        "title": "WT-3190 perform a complete re-tune of eviction workers every 30 seconds.",
        "body": "This branch addresses performance issues in MongoDB workloads with phase changes, where the eviction server was not proactive enough in creating workers. ",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 08, 2017 at 22:17 GMT",
        "updated_at": "Thursday Mar 30, 2017 at 21:38 GMT",
        "closed_at": "Thursday Mar 30, 2017 at 21:38 GMT",
        "merged_at": "Thursday Mar 30, 2017 at 21:38 GMT"
    },
    {
        "key": "WT-3213",
        "number": 3323,
        "state": "closed",
        "title": "WT-3213 Only error if fixed-length and long_running_txn is set.",
        "body": "@keithbostic Please review this small fix to allow the generated CONFIG to be used on the next run.",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 08, 2017 at 18:55 GMT",
        "updated_at": "Wednesday Mar 08, 2017 at 19:39 GMT",
        "closed_at": "Wednesday Mar 08, 2017 at 19:39 GMT",
        "merged_at": "Wednesday Mar 08, 2017 at 19:39 GMT"
    },
    {
        "key": "WT-3202",
        "number": 3322,
        "state": "closed",
        "title": "WT-3202 wtperf should not reopen in-memory connections",
        "body": "fix the potential problem on wtperf test wiredtiger in_memory mode. check wt_conn in_memory flag directly and without the \"reopen_connection=false\" option which is likely to lead to ambiguity ",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 08, 2017 at 06:27 GMT",
        "updated_at": "Thursday Mar 23, 2017 at 05:58 GMT",
        "closed_at": "Thursday Mar 23, 2017 at 05:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3211",
        "number": 3321,
        "state": "closed",
        "title": "WT-3211 WT_CURSOR.remove cannot always retain its position.",
        "body": "@michaelcahill, I think this is ready for review.\r\n\r\nI wouldn't be at all surprised if some of the changes in `cursor/cur_table.c` and `lsm/lsm_cursor.c` are wrong -- the current layer doesn't lend itself to understanding if a cursor is currently positioned or if a cursor's resources should be discarded. There may better ways to approach those layering questions.",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 07, 2017 at 21:58 GMT",
        "updated_at": "Wednesday May 10, 2017 at 04:26 GMT",
        "closed_at": "Tuesday Mar 14, 2017 at 00:53 GMT",
        "merged_at": "Tuesday Mar 14, 2017 at 00:53 GMT"
    },
    {
        "key": "WT-2978",
        "number": 3320,
        "state": "closed",
        "title": "WT-2978 Python: make a pip-compatible installer.",
        "body": "This pull request is currently for discussion, as it has a caveat in how it works.  That is, this version will not create a wheel (the preferred method for the pip installer), but it will fall back to an older way of building/installing the distribution. [JIRA description of the issue.](https://jira.mongodb.org/browse/WT-2978?focusedCommentId=1517052&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-1517052) I'm going to continue to work on a better way to solve this.\r\n\r\nThen, to create a distribution do: `cd lang/python; python setup_pip.py sdist`, that creates a `.tar.gz` file in `lang/python/dist`.\r\n\r\nTo test it out on a target machine, you need pip, and it's helpful to have virtualenv (so you don't need to install anything as root).  [If you don't have virtualenv installed, here's one way to get it, and pip, without privileges.](http://stackoverflow.com/questions/4324558/whats-the-proper-way-to-install-pip-virtualenv-and-distribute-for-python/5177027#5177027)  You also need a compiler, SWIG, some autoconf tools and snappy, zlib.  That is, the usual stuff needed for building WT.\r\n\r\nOn the target machine:\r\n```\r\n  $ virtualenv v1\r\n  $ . v1/bin/activate\r\n  $ pip install --no-binary :all: wiredtiger-2.9.2.tar.gz\r\n  $ python examples/python/ex_access.py    # try it out\r\n```\r\nIf you try just `pip install wiredtiger-2.9.2.tar.gz` it will work, but with an error message (that's the caveat above).",
        "base_ref": "develop",
        "created_at": "Monday Mar 06, 2017 at 19:49 GMT",
        "updated_at": "Friday Mar 17, 2017 at 03:47 GMT",
        "closed_at": "Friday Mar 17, 2017 at 03:47 GMT",
        "merged_at": "Friday Mar 17, 2017 at 03:47 GMT"
    },
    {
        "key": "WT-3207",
        "number": 3319,
        "state": "closed",
        "title": "WT-3207 Don't hold clean handles during checkpoints.",
        "body": "Previously, we gathered handles, then started a transaction, then\r\nfigured out which handles were clean and released them.  However,\r\n* checkpoints were keeping every handle in both its handle list and in\r\nthe meta_tracking list because the *_apply_all functions were saving all\r\nhandles when meta_tracking was active; and\r\n* we had acquired exclusive locks on checkpoints to be dropped before\r\ndetermining that we could skip a checkpoint in a clean tree.  These\r\nlocks blocked drops (among other things) until the checkpoint completed.\r\n\r\nThe solution here is to first start the transaction, then check for\r\nclean handles as checkpoint visits them.  However, this has to cope with\r\nraces where a handle changes state in between the transaction starting\r\nand getting the handle (e.g., table creates, bulk loads completing).",
        "base_ref": "develop",
        "created_at": "Monday Mar 06, 2017 at 05:14 GMT",
        "updated_at": "Friday Mar 10, 2017 at 03:00 GMT",
        "closed_at": "Friday Mar 10, 2017 at 03:00 GMT",
        "merged_at": "Friday Mar 10, 2017 at 03:00 GMT"
    },
    {
        "key": "WT-3203",
        "number": 3318,
        "state": "closed",
        "title": "WT-3203 bulk-load state changes can race",
        "body": "@michaelcahill, for your consideration.",
        "base_ref": "develop",
        "created_at": "Thursday Mar 02, 2017 at 15:17 GMT",
        "updated_at": "Friday Mar 03, 2017 at 02:17 GMT",
        "closed_at": "Friday Mar 03, 2017 at 02:17 GMT",
        "merged_at": "Friday Mar 03, 2017 at 02:17 GMT"
    },
    {
        "key": "WT-3199",
        "number": 3317,
        "state": "closed",
        "title": "WT-3199 bug: eviction assertion failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 01, 2017 at 22:09 GMT",
        "updated_at": "Thursday Mar 02, 2017 at 05:36 GMT",
        "closed_at": "Thursday Mar 02, 2017 at 05:36 GMT",
        "merged_at": "Thursday Mar 02, 2017 at 05:36 GMT"
    },
    {
        "key": "WT-3193",
        "number": 3316,
        "state": "closed",
        "title": "WT-3193 Close a race between verify opening a handle and eviction visiting it",
        "body": "@michaelcahill, this change seems to work for me, with light testing.\r\n\r\nTwo notes:\r\n\r\n* we could wait to free memory until the handle is \"discarded\", that is, `__wt_free(session, btree->key_format);` can live in `__wt_btree_close` or `__wt_b tree_discard`. If it's in \"close\", then there's some risk another thread of control will try and look at it; if it's in \"discard\", we have to somehow figure out if it's a re-open or a new open, because in the case of a re-open, we need to discard that memory, and in the case of a new open, we can't touch it. I left that work in close, but I don't feel strongly.\r\n\r\n* note I'm clearing the `WT_BTREE_SPECIAL_FLAGS` in `__wt_conn_btree_sync_and_close`, because that layer currently \"owns\" those flags.\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 01, 2017 at 01:32 GMT",
        "updated_at": "Wednesday Mar 01, 2017 at 06:16 GMT",
        "closed_at": "Wednesday Mar 01, 2017 at 03:55 GMT",
        "merged_at": "Wednesday Mar 01, 2017 at 03:55 GMT"
    },
    {
        "key": "WT-3193",
        "number": 3315,
        "state": "closed",
        "title": "WT-3193 Close a race between verify opening a handle and eviction visiting it",
        "body": "@agorrod, I think this change fixes a core dump on the zSeries today:\r\n```\r\nBacktrace:\r\nbuild_posix/../src/evict/evict_lru.c:103 (discriminator 1)(__evict_entry_priority)[0x800386e2]\r\nbuild_posix/../src/evict/evict_lru.c:1521(__evict_push_candidate)[0x8003c212]\r\nbuild_posix/../src/evict/evict_lru.c:2272 (discriminator 1)(__wt_page_evict_urgent)[0x8003e7d4]\r\nbuild_posix/../src/evict/evict_lru.c:1778(__evict_walk_file)[0x8003cb3e]\r\nbuild_posix/../src/evict/evict_lru.c:1444(__evict_walk)[0x8003bef4]\r\nbuild_posix/../src/evict/evict_lru.c:1167(__evict_lru_walk)[0x8003b558]\r\nbuild_posix/../src/evict/evict_lru.c:664(__evict_pass)[0x80039e82]\r\nbuild_posix/../src/evict/evict_lru.c:387(__evict_server)[0x8003933e]\r\nbuild_posix/../src/evict/evict_lru.c:308(__wt_evict_thread_run)[0x80038f56]\r\nbuild_posix/../src/support/thread_group.c:25(__wt_thread_run)[0x800bba84]\r\n```\r\nBasically, the changes in f3747a2 didn't preserve `WT_BTREE.dhandle` across the handle close, and eviction uses it in some cases.\r\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 28, 2017 at 16:05 GMT",
        "updated_at": "Tuesday Feb 28, 2017 at 22:27 GMT",
        "closed_at": "Tuesday Feb 28, 2017 at 22:26 GMT",
        "merged_at": "Tuesday Feb 28, 2017 at 22:26 GMT"
    },
    {
        "key": "WT-3182",
        "number": 3314,
        "state": "closed",
        "title": "WT-3182 Update Evergreen configuration to include long make check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 28, 2017 at 03:35 GMT",
        "updated_at": "Tuesday Feb 28, 2017 at 04:27 GMT",
        "closed_at": "Tuesday Feb 28, 2017 at 04:27 GMT",
        "merged_at": "Tuesday Feb 28, 2017 at 04:27 GMT"
    },
    {
        "key": "WT-3182",
        "number": 3313,
        "state": "closed",
        "title": "WT-3182 Switch make-check to run the short test suite by default",
        "body": "@agorrod, here's a first cut at this one.\r\n\r\nI think this is all that's necessary in the source code, but maybe I'm missing the big picture!\r\n\r\nLet me know if you agree -- we can merge, which will just turn off long tests everywhere.\r\n\r\nWe can talk over what test harnesses should enable long tests and I'll make/test those changes.",
        "base_ref": "develop",
        "created_at": "Monday Feb 27, 2017 at 22:29 GMT",
        "updated_at": "Tuesday Feb 28, 2017 at 00:16 GMT",
        "closed_at": "Tuesday Feb 28, 2017 at 00:16 GMT",
        "merged_at": "Tuesday Feb 28, 2017 at 00:16 GMT"
    },
    {
        "key": "WT-3192",
        "number": 3312,
        "state": "closed",
        "title": "WT-3192 Truncate obsolete updates when all updates are obsolete",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 21, 2017 at 19:18 GMT",
        "updated_at": "Tuesday Feb 21, 2017 at 22:27 GMT",
        "closed_at": "Tuesday Feb 21, 2017 at 22:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3193",
        "number": 3311,
        "state": "closed",
        "title": "WT-3193 Close a race between verify and the eviction server",
        "body": "@agorrod, can we return not-found on this failure instead of success?",
        "base_ref": "develop",
        "created_at": "Monday Feb 20, 2017 at 18:17 GMT",
        "updated_at": "Tuesday Feb 28, 2017 at 14:09 GMT",
        "closed_at": "Tuesday Feb 28, 2017 at 14:09 GMT",
        "merged_at": "Tuesday Feb 28, 2017 at 14:09 GMT"
    },
    {
        "key": "WT-3191",
        "number": 3310,
        "state": "closed",
        "title": "WT-3191 lint",
        "body": "Alex, this one needs your review because of dfee9c8. I think your original code is legal, but requires multiple casts to/from \"ints\" because of the default types for arithmetic operations. It was making my head hurt trying to figure it out, so I turned it into a switch statement.",
        "base_ref": "develop",
        "created_at": "Monday Feb 20, 2017 at 14:29 GMT",
        "updated_at": "Tuesday Feb 21, 2017 at 12:08 GMT",
        "closed_at": "Tuesday Feb 21, 2017 at 12:08 GMT",
        "merged_at": "Tuesday Feb 21, 2017 at 12:08 GMT"
    },
    {
        "key": "WT-3149",
        "number": 3309,
        "state": "closed",
        "title": "WT-3149 Fix a compiler warning on OS X.",
        "body": "src/evict/evict_lru.c:1683:2: error: default label in switch which covers all enumeration values [-Werror,-Wcovered-switch-default]",
        "base_ref": "develop",
        "created_at": "Monday Feb 20, 2017 at 04:06 GMT",
        "updated_at": "Monday Feb 20, 2017 at 04:17 GMT",
        "closed_at": "Monday Feb 20, 2017 at 04:17 GMT",
        "merged_at": "Monday Feb 20, 2017 at 04:17 GMT"
    },
    {
        "key": "WT-3189",
        "number": 3308,
        "state": "closed",
        "title": "WT-3189 Fix a segfault in eviction random page search.",
        "body": "A NULL page could be encountered when traversing a tree that is being used by exclusive access.",
        "base_ref": "develop",
        "created_at": "Sunday Feb 19, 2017 at 23:27 GMT",
        "updated_at": "Monday Feb 20, 2017 at 17:56 GMT",
        "closed_at": "Monday Feb 20, 2017 at 00:02 GMT",
        "merged_at": "Monday Feb 20, 2017 at 00:02 GMT"
    },
    {
        "key": "WT-3188",
        "number": 3307,
        "state": "closed",
        "title": "WT-3188 More log loops needing to check panic.",
        "body": "@agorrod Here are a few more panic checking changes.  I had another similar hang today.  I went through all of the logging source files looking at loops where we're waiting for something and added a check rather than fault them in.",
        "base_ref": "develop",
        "created_at": "Friday Feb 17, 2017 at 00:19 GMT",
        "updated_at": "Friday Feb 17, 2017 at 02:38 GMT",
        "closed_at": "Friday Feb 17, 2017 at 02:38 GMT",
        "merged_at": "Friday Feb 17, 2017 at 02:38 GMT"
    },
    {
        "key": "WT-3187",
        "number": 3306,
        "state": "closed",
        "title": "WT-3187 Ramp up aggressiveness in reducing cache pool usage",
        "body": "We could get into situations where no participants looked like good candidates.\r\nAlso put a failsafe into the balance loop, to ensure future failures to reduce usage won't lead to hang on shutdown.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 16, 2017 at 23:27 GMT",
        "updated_at": "Friday Feb 17, 2017 at 21:53 GMT",
        "closed_at": "Friday Feb 17, 2017 at 21:53 GMT",
        "merged_at": "Friday Feb 17, 2017 at 21:53 GMT"
    },
    {
        "key": "WT-3149",
        "number": 3305,
        "state": "closed",
        "title": "WT-3149 Use a range of eviction walk start points.",
        "body": "Choosing a random point isn't very efficient in append only workloads.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 16, 2017 at 04:54 GMT",
        "updated_at": "Monday Feb 20, 2017 at 00:04 GMT",
        "closed_at": "Monday Feb 20, 2017 at 00:04 GMT",
        "merged_at": "Monday Feb 20, 2017 at 00:04 GMT"
    },
    {
        "key": "WT-3186",
        "number": 3304,
        "state": "closed",
        "title": "WT-3186 Fix error path and panic detection in logging loops.",
        "body": "@agorrod Here is a fix for one path I found looking at the stack from the failure.  I have not been able to reproduce the hang even with some simple error injection directly but based on the stack and errors, this is definitely a problem path.  This fixes two loops that didn't break and weren't checking for panic.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 15, 2017 at 20:00 GMT",
        "updated_at": "Wednesday Feb 15, 2017 at 21:38 GMT",
        "closed_at": "Wednesday Feb 15, 2017 at 21:38 GMT",
        "merged_at": "Wednesday Feb 15, 2017 at 21:38 GMT"
    },
    {
        "key": "WT-3184",
        "number": 3303,
        "state": "closed",
        "title": "WT-3184 bug fix: duplication needs special case searching an index that has a custom collator.",
        "body": "In this case, we must use the entire (raw) key to duplicate the position,\r\ninstead of truncating to the visible part.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 15, 2017 at 19:13 GMT",
        "updated_at": "Thursday Feb 16, 2017 at 05:21 GMT",
        "closed_at": "Thursday Feb 16, 2017 at 05:21 GMT",
        "merged_at": "Thursday Feb 16, 2017 at 05:21 GMT"
    },
    {
        "key": "WT-3149",
        "number": 3302,
        "state": "closed",
        "title": "WT-3149 Make random lookups for eviction more lightweight.",
        "body": "Eviction walks don't need to start on leaf pages: just try to descend\r\nthrough the tree and as soon as we can't swap to a child page, start\r\nthe walk from the parent.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 15, 2017 at 05:22 GMT",
        "updated_at": "Wednesday Feb 15, 2017 at 07:08 GMT",
        "closed_at": "Wednesday Feb 15, 2017 at 07:08 GMT",
        "merged_at": "Wednesday Feb 15, 2017 at 07:08 GMT"
    },
    {
        "key": "WT-3179",
        "number": 3301,
        "state": "closed",
        "title": "WT-3179 test bug: clang sanitizer failure in fail_fs",
        "body": "@keithbostic noticed these issues:\r\n* there\u2019s a fprintf to stderr in fail_fs.c.\r\n* The fail_file_truncate() function calls `ftruncate`, and I don't think `ftruncate` is always thread-safe, does that matter here?\r\n* There's an access(2) call that uses and argument of 0, instead of F_OK.\r\n\r\nThis commit has fixes for first and last.  I don't know the answer for ftruncate, but I see that the truncate function in the default posix file system (see `os_posix/os_fs.c`) also calls ftruncate here. If it matters here, it will matter there as well.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 14, 2017 at 22:08 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 22:21 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 22:21 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 22:21 GMT"
    },
    {
        "key": "WT-3179",
        "number": 3300,
        "state": "closed",
        "title": "WT-3179 test bug: clang sanitizer failure in fail_fs",
        "body": "This should fix the clang address sanitizer build failure.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 14, 2017 at 20:07 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 21:30 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 21:30 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 21:30 GMT"
    },
    {
        "key": "WT-3176",
        "number": 3299,
        "state": "closed",
        "title": "WT-3176 Add compatibility API.",
        "body": "Not yet ready for merge.",
        "base_ref": "wt-3039-prevlsn",
        "created_at": "Tuesday Feb 14, 2017 at 19:56 GMT",
        "updated_at": "Tuesday Mar 14, 2017 at 01:28 GMT",
        "closed_at": "Tuesday Mar 14, 2017 at 01:28 GMT",
        "merged_at": "Tuesday Mar 14, 2017 at 01:28 GMT"
    },
    {
        "key": "WT-3180",
        "number": 3298,
        "state": "closed",
        "title": "WT-3180 bug fix: disable long tests in the top-level main program, disable core files for subtests",
        "body": "Also fixed some uint64 values/parameters that were declared as uint32.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 14, 2017 at 19:08 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 19:32 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 19:30 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 19:30 GMT"
    },
    {
        "key": null,
        "number": 3297,
        "state": "closed",
        "title": "Wt compat",
        "body": "not for merging.  prelim only",
        "base_ref": "wt-3039-prevlsn",
        "created_at": "Tuesday Feb 14, 2017 at 17:11 GMT",
        "updated_at": "Wednesday Mar 01, 2017 at 06:16 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 19:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2909",
        "number": 3296,
        "state": "closed",
        "title": "WT-2909 Create automatable test verifying checkpoint integrity after errors",
        "body": "FreeBSD's backtrace is the outlier, everybody else (OS X, Solaris, Linux is using int types, not size_t).",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 14, 2017 at 14:54 GMT",
        "updated_at": "Wednesday Feb 15, 2017 at 00:11 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 15:57 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 15:57 GMT"
    },
    {
        "key": "WT-2909",
        "number": 3295,
        "state": "closed",
        "title": "WT-2909 Create automatable test verifying checkpoint integrity after errors",
        "body": "Make gcc 4.7 work again, general lint.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 14, 2017 at 12:16 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 13:36 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 13:36 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 13:36 GMT"
    },
    {
        "key": "WT-3175",
        "number": 3294,
        "state": "closed",
        "title": "WT-3175 Don't verify children during splits up the tree.",
        "body": "Reverts part of 7f5d0f9981214c723f2ed90cf4533887ed406176.\r\n\r\nFixes a deadlock in diagnostic mode.  Also revert a change that could\r\ncause diagnostic code to read pages into cache: we don't want diagnostic\r\nadding cache pressure and we already verify pages as they are evicted.",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 14, 2017 at 02:24 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 03:22 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 03:22 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 03:22 GMT"
    },
    {
        "key": "WT-3174",
        "number": 3293,
        "state": "closed",
        "title": "WT-3174 Coverity/lint cleanup",
        "body": "Coverity/lint cleanup",
        "base_ref": "develop",
        "created_at": "Monday Feb 13, 2017 at 14:58 GMT",
        "updated_at": "Monday Feb 13, 2017 at 15:02 GMT",
        "closed_at": "Monday Feb 13, 2017 at 15:02 GMT",
        "merged_at": "Monday Feb 13, 2017 at 15:02 GMT"
    },
    {
        "key": "WT-3135",
        "number": 3292,
        "state": "closed",
        "title": "WT-3135 lint.",
        "body": "test/csuite/wt3135_search_near_collator/main.c:75:22: error: implicit conversion loses integer precision: 'int64_t' (aka 'long long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n                *cmp = compare_int(pkey1, pkey2);",
        "base_ref": "develop",
        "created_at": "Monday Feb 13, 2017 at 05:34 GMT",
        "updated_at": "Monday Feb 13, 2017 at 15:11 GMT",
        "closed_at": "Monday Feb 13, 2017 at 15:10 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3152",
        "number": 3291,
        "state": "closed",
        "title": "WT-3152 Switch the table lock to a rwlock.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 13, 2017 at 02:03 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 04:32 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 04:32 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 04:32 GMT"
    },
    {
        "key": "WT-3173",
        "number": 3290,
        "state": "closed",
        "title": "WT-3173 Add runtime detection for s390x CRC32 hardware support",
        "body": "The CRC32 hardware support for s390x is only available on z13 processors and later and require a Linux kernel version which support the vector extensions. Runtime detection can be accomplished by querying `auxv` for the `HW_CAP` of `HWCAP_S390_VX`.\r\n\r\nChange:\r\n`zseries/crc32-s390x.c` :\r\n- Move `wt_internal.h` header to top for consistency and to get the `HAVE_CRC32_HARDWARE` define.\r\n- Include `sys/auxv.h` to call `getauxval` and access `HW_CAP` which reads `/proc/PID/auxv`.\r\n- Define `HWCAP_S390_VX` if not defined, this is needed on RHEL 7.1 which has the kernel support for the VX extensions but not the glibc support. This constant is define in the Linux kernel header `asm/elf.h` for s390.\r\n\r\n`power8/crc32_wrapper.c`:\r\n- Move `wt_internal.h` header to top for consistency\r\n\r\n**Tests:**\r\nPasses MongoDB compile and unittests on s390x on RHEL 7.2, SUSE 11, SUSE 12, and Ubuntu 16.04.",
        "base_ref": "develop",
        "created_at": "Friday Feb 10, 2017 at 18:54 GMT",
        "updated_at": "Saturday Feb 11, 2017 at 13:15 GMT",
        "closed_at": "Saturday Feb 11, 2017 at 13:14 GMT",
        "merged_at": "Saturday Feb 11, 2017 at 13:14 GMT"
    },
    {
        "key": "WT-3144",
        "number": 3289,
        "state": "closed",
        "title": "WT-3144 bug fix: random cursor returns not-found when descending to an empty page",
        "body": "If random descent through the tree fails, fallback to skipping through the tree's pages; if skipping through the tree's pages fails, fallback to a random entry from the first page in the tree that contains anything at all.",
        "base_ref": "develop",
        "created_at": "Friday Feb 10, 2017 at 14:52 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 04:44 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 04:44 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 04:44 GMT"
    },
    {
        "key": "WT-3170",
        "number": 3288,
        "state": "closed",
        "title": "WT-3170 Change how eviction walk point is saved during walk.",
        "body": "Review split barriers.\r\n\r\n@michaelcahill, here is my suggested change for the barriers in the split code.",
        "base_ref": "wt-3170-evict_ref",
        "created_at": "Friday Feb 10, 2017 at 12:19 GMT",
        "updated_at": "Sunday Feb 12, 2017 at 23:44 GMT",
        "closed_at": "Sunday Feb 12, 2017 at 23:44 GMT",
        "merged_at": "Sunday Feb 12, 2017 at 23:44 GMT"
    },
    {
        "key": "WT-3123",
        "number": 3287,
        "state": "closed",
        "title": "WT-3123 Add active/pause functionality instead of create/destroy threads.",
        "body": "This branch is built on the previous branch to separate out the thread group restructuring from the changes to activate/pause thread instead of creating and destroying them.",
        "base_ref": "wt-3123-thread-funcs",
        "created_at": "Thursday Feb 09, 2017 at 20:13 GMT",
        "updated_at": "Tuesday Apr 04, 2017 at 18:57 GMT",
        "closed_at": "Tuesday Apr 04, 2017 at 18:56 GMT",
        "merged_at": "Tuesday Apr 04, 2017 at 18:56 GMT"
    },
    {
        "key": "WT-3123",
        "number": 3286,
        "state": "closed",
        "title": "WT-3123 Add check and stop functions.  Move loop into thread_group code.",
        "body": "Not yet ready to merge.  I split out the restructuring changes from the active/pause changes for thread groups.  This branch is only the restructuring, adding chk and stop functions, etc.  I want to run the Jenkins perf tests on this branch to see how it performs.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 09, 2017 at 19:18 GMT",
        "updated_at": "Wednesday Apr 05, 2017 at 14:52 GMT",
        "closed_at": "Wednesday Apr 05, 2017 at 14:52 GMT",
        "merged_at": "Wednesday Apr 05, 2017 at 14:52 GMT"
    },
    {
        "key": "WT-3149",
        "number": 3285,
        "state": "closed",
        "title": "WT-3149 Have eviction choose a random point when walking a tree.",
        "body": "Only choose a random point when there is no saved walk point.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 09, 2017 at 05:21 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 05:39 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 05:39 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 05:39 GMT"
    },
    {
        "key": "WT-3170",
        "number": 3284,
        "state": "closed",
        "title": "WT-3170 Change how eviction walk point is saved during walk.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 09, 2017 at 04:48 GMT",
        "updated_at": "Sunday Feb 12, 2017 at 23:52 GMT",
        "closed_at": "Sunday Feb 12, 2017 at 23:49 GMT",
        "merged_at": "Sunday Feb 12, 2017 at 23:49 GMT"
    },
    {
        "key": "WT-3164",
        "number": 3283,
        "state": "closed",
        "title": "WT-3164 Reset ckpt field on error.  Add error reset function.",
        "body": "@agorrod and @ddanderson Here is a fix for WT-3164 that is based off develop, but tested with Don's branch.  With this fix (and my hand placed error per the ticket) the command now proceeds further and fails with the same error as WT-3165.  Without any hand-injected error at that specific location the test command succeeds.  But the fix needs to be in develop and can then be merged into Don's branch.  Please review.",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 08, 2017 at 18:22 GMT",
        "updated_at": "Thursday Feb 09, 2017 at 04:25 GMT",
        "closed_at": "Thursday Feb 09, 2017 at 04:25 GMT",
        "merged_at": "Thursday Feb 09, 2017 at 04:25 GMT"
    },
    {
        "key": "WT-3123",
        "number": 3282,
        "state": "closed",
        "title": "WT-3123 Have thread active/pause wrapper in thread group code.",
        "body": "@agorrod Here are the changes to make the thread group code the wrapper for the activate and pause of threads.  It required a bunch of changes.  I think conceptually it is cleaner, but in some ways the eviction code is a bit less intuitive since it is no longer a server loop.  I had to add both a check function and a stop function for threads to call.  Let me know what you think.",
        "base_ref": "wt-3123-thread-groups",
        "created_at": "Monday Feb 06, 2017 at 18:54 GMT",
        "updated_at": "Wednesday Feb 08, 2017 at 06:56 GMT",
        "closed_at": "Wednesday Feb 08, 2017 at 06:56 GMT",
        "merged_at": "Wednesday Feb 08, 2017 at 06:56 GMT"
    },
    {
        "key": "WT-3157",
        "number": 3281,
        "state": "closed",
        "title": "WT-3157 Alternative checkpoint cleanup.",
        "body": "",
        "base_ref": "wt-3157-ckpt-2",
        "created_at": "Monday Feb 06, 2017 at 04:22 GMT",
        "updated_at": "Monday Feb 06, 2017 at 16:00 GMT",
        "closed_at": "Monday Feb 06, 2017 at 16:00 GMT",
        "merged_at": "Monday Feb 06, 2017 at 16:00 GMT"
    },
    {
        "key": "WT-3088",
        "number": 3280,
        "state": "closed",
        "title": "WT-3088 bug: WiredTiger can evict the tree's current eviction walk point",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 05, 2017 at 19:43 GMT",
        "updated_at": "Thursday Feb 09, 2017 at 14:15 GMT",
        "closed_at": "Thursday Feb 09, 2017 at 14:15 GMT",
        "merged_at": "Thursday Feb 09, 2017 at 14:15 GMT"
    },
    {
        "key": "WT-3111",
        "number": 3279,
        "state": "closed",
        "title": "WT-3111 util_create() doesnt free memory assigned to \"uri\"",
        "body": "@sulabhM, I took a run at fixing this one.\r\n\r\nThere are some stylistic things I'm still not that happy with, but I think this is better than it was and fixes the specific bugs.\r\n\r\nI also tucked in a couple of random wtperf lint fixes and an eviction whitespace fixes.\r\n\r\nLet me know what you think, please!",
        "base_ref": "develop",
        "created_at": "Sunday Feb 05, 2017 at 19:36 GMT",
        "updated_at": "Monday Feb 06, 2017 at 00:55 GMT",
        "closed_at": "Monday Feb 06, 2017 at 00:55 GMT",
        "merged_at": "Monday Feb 06, 2017 at 00:55 GMT"
    },
    {
        "key": "WT-3161",
        "number": 3278,
        "state": "closed",
        "title": "WT-3161 Panic on a write error in logging.",
        "body": "@agorrod and @ddanderson Here's a fix for the logging hang.  Please review.  I changed it so that if writing to the log file gets an error we panic.",
        "base_ref": "develop",
        "created_at": "Friday Feb 03, 2017 at 21:45 GMT",
        "updated_at": "Wednesday Feb 08, 2017 at 06:53 GMT",
        "closed_at": "Wednesday Feb 08, 2017 at 06:53 GMT",
        "merged_at": "Wednesday Feb 08, 2017 at 06:53 GMT"
    },
    {
        "key": "WT-2439",
        "number": 3277,
        "state": "closed",
        "title": "WT-2439 Improve page layout: keep pages more than half full",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 03, 2017 at 01:52 GMT",
        "updated_at": "Wednesday Mar 29, 2017 at 05:01 GMT",
        "closed_at": "Wednesday Mar 29, 2017 at 04:38 GMT",
        "merged_at": "Wednesday Mar 29, 2017 at 04:38 GMT"
    },
    {
        "key": "WT-3150",
        "number": 3276,
        "state": "closed",
        "title": "WT-3150 Fix: don't spin forever during eviction interrupts.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 03, 2017 at 01:22 GMT",
        "updated_at": "Friday Feb 03, 2017 at 01:57 GMT",
        "closed_at": "Friday Feb 03, 2017 at 01:57 GMT",
        "merged_at": "Friday Feb 03, 2017 at 01:57 GMT"
    },
    {
        "key": "WT-3157",
        "number": 3275,
        "state": "closed",
        "title": "WT-3157 More aggressive error handling.",
        "body": "@agorrod Please review this more aggressive branch (since the other was merged).",
        "base_ref": "develop",
        "created_at": "Thursday Feb 02, 2017 at 21:11 GMT",
        "updated_at": "Monday Feb 06, 2017 at 16:29 GMT",
        "closed_at": "Monday Feb 06, 2017 at 16:29 GMT",
        "merged_at": "Monday Feb 06, 2017 at 16:29 GMT"
    },
    {
        "key": "WT-3157",
        "number": 3274,
        "state": "closed",
        "title": "WT-3157 Fix checkpoint error path",
        "body": "@keithbostic Please review this new pull request for the checkpoint error path.  I believe it needs to go into develop instead of @ddanderson 's branch.  Otherwise it is the same as the other branch.",
        "base_ref": "develop",
        "created_at": "Thursday Feb 02, 2017 at 18:40 GMT",
        "updated_at": "Thursday Feb 02, 2017 at 21:03 GMT",
        "closed_at": "Thursday Feb 02, 2017 at 19:01 GMT",
        "merged_at": "Thursday Feb 02, 2017 at 19:01 GMT"
    },
    {
        "key": "WT-3157",
        "number": 3273,
        "state": "closed",
        "title": "WT-3157 Fixes for checkpoint error injection test.",
        "body": "@ddanderson Here are fixes I made to get the test program to run.  I itemized the changes in the ticket itself.  Please review.  This branch is off of  your branch.  With these changes the test case passes.  I do have one unanswered question in the ticket that is the original \"culprit\" of the error.",
        "base_ref": "wt-2909-verify-checkpoint-integrity",
        "created_at": "Monday Jan 30, 2017 at 19:34 GMT",
        "updated_at": "Friday Feb 03, 2017 at 11:54 GMT",
        "closed_at": "Friday Feb 03, 2017 at 11:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2909",
        "number": 3272,
        "state": "closed",
        "title": "WT-2909 Add fault injection test to verify checkpoint integrity",
        "body": "See comments in test/csuite/wt2909_checkpoint_integrity/main.c describing the new test.\r\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 29, 2017 at 21:42 GMT",
        "updated_at": "Tuesday Feb 14, 2017 at 05:56 GMT",
        "closed_at": "Tuesday Feb 14, 2017 at 05:56 GMT",
        "merged_at": "Tuesday Feb 14, 2017 at 05:56 GMT"
    },
    {
        "key": "WT-3156",
        "number": 3271,
        "state": "closed",
        "title": "WT-3156 Add check in assertions for errors.",
        "body": "@ddanderson Please review this fix for the error-path problem you reported.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 26, 2017 at 17:10 GMT",
        "updated_at": "Monday Jan 30, 2017 at 01:27 GMT",
        "closed_at": "Thursday Jan 26, 2017 at 21:54 GMT",
        "merged_at": "Thursday Jan 26, 2017 at 21:54 GMT"
    },
    {
        "key": "WT-3139",
        "number": 3270,
        "state": "closed",
        "title": "WT-3139 Implement scans as read_range.",
        "body": "@agorrod I took a pass at implementing my suggestions and I think it is a bit cleaner and requires less new code than your original implementation.  I didn't take it any further than testing the one `stress` workload I found using `read_range`.  Review and merge if you like this better (it is based off your branch).",
        "base_ref": "wt-3139-wtperf-scans",
        "created_at": "Wednesday Jan 25, 2017 at 21:33 GMT",
        "updated_at": "Wednesday Feb 01, 2017 at 14:37 GMT",
        "closed_at": "Wednesday Feb 01, 2017 at 14:37 GMT",
        "merged_at": "Wednesday Feb 01, 2017 at 14:37 GMT"
    },
    {
        "key": "WT-3138",
        "number": 3269,
        "state": "closed",
        "title": "WT-3138 Enhance eviction server statistics range.",
        "body": "This change is excessive - the set of stats added here should be reviewed\r\nand pruned down, but putting it up so I can see better how it looks in\r\ncode-review.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 25, 2017 at 03:41 GMT",
        "updated_at": "Friday Jul 14, 2017 at 06:37 GMT",
        "closed_at": "Friday Jul 14, 2017 at 06:37 GMT",
        "merged_at": "Friday Jul 14, 2017 at 06:37 GMT"
    },
    {
        "key": "WT-3139",
        "number": 3268,
        "state": "closed",
        "title": "WT-3139 Enhance wtperf to support periodic table scans",
        "body": "This is not ready for review, the functionality works but isn't connected into any other reporting.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 25, 2017 at 03:27 GMT",
        "updated_at": "Thursday Feb 02, 2017 at 16:28 GMT",
        "closed_at": "Thursday Feb 02, 2017 at 16:28 GMT",
        "merged_at": "Thursday Feb 02, 2017 at 16:28 GMT"
    },
    {
        "key": "WT-3123",
        "number": 3267,
        "state": "closed",
        "title": "WT-3123 Modify thread groups to create and pause threads",
        "body": "This is not yet ready for review.  Still testing.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 24, 2017 at 21:41 GMT",
        "updated_at": "Tuesday Apr 04, 2017 at 18:57 GMT",
        "closed_at": "Tuesday Apr 04, 2017 at 18:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3137",
        "number": 3266,
        "state": "closed",
        "title": "WT-3137 Fix a hang in logging due to a race condition",
        "body": "Lint:\r\nDon't print int32_t's with %d.\r\nWT_LOGSLOT.slot_error is an int, not an int32_t.\r\nDon't print off_t's as 32-bits, use the maximum size unsigned object.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 24, 2017 at 12:33 GMT",
        "updated_at": "Tuesday Jan 24, 2017 at 14:09 GMT",
        "closed_at": "Tuesday Jan 24, 2017 at 14:09 GMT",
        "merged_at": "Tuesday Jan 24, 2017 at 14:09 GMT"
    },
    {
        "key": "WT-3150",
        "number": 3265,
        "state": "closed",
        "title": "WT-3150 Reduce impact of checkpoints on eviction.",
        "body": "In particular, don't have the eviction server give up all walks each\r\ntime it is interrupted, and only wait for requesting threads to make\r\nprogress: don't go to sleep.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 24, 2017 at 06:07 GMT",
        "updated_at": "Thursday Feb 02, 2017 at 05:40 GMT",
        "closed_at": "Thursday Feb 02, 2017 at 05:40 GMT",
        "merged_at": "Thursday Feb 02, 2017 at 05:40 GMT"
    },
    {
        "key": "WT-3148",
        "number": 3264,
        "state": "closed",
        "title": "WT-3148 Improve efficiency of eviction with many small trees.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 24, 2017 at 05:53 GMT",
        "updated_at": "Friday Feb 03, 2017 at 04:45 GMT",
        "closed_at": "Friday Feb 03, 2017 at 04:45 GMT",
        "merged_at": "Friday Feb 03, 2017 at 04:45 GMT"
    },
    {
        "key": "WT-2790",
        "number": 3263,
        "state": "closed",
        "title": "WT-2790 Look at removed statistics instead of files closed.",
        "body": "Ready for review once testing on evergreen completes.  After looking at some debugging statistics during a failure, I realized there is a lag between when sweep closes files and when it can remove data handles from the connection list.  On slow machines, we can hit the test failure if we catch it between those two.  So I modified the test where it looks at statistics to look for any change in the removed statistic instead of closed files.",
        "base_ref": "develop",
        "created_at": "Monday Jan 23, 2017 at 18:09 GMT",
        "updated_at": "Monday Jan 23, 2017 at 22:49 GMT",
        "closed_at": "Monday Jan 23, 2017 at 22:49 GMT",
        "merged_at": "Monday Jan 23, 2017 at 22:49 GMT"
    },
    {
        "key": "WT-3120",
        "number": 3262,
        "state": "closed",
        "title": "WT-3120 Fix ordering problem in connection_close for filesystem loaded in an extension",
        "body": "WT_CURSOR.{get_key,get_value} can fail.",
        "base_ref": "develop",
        "created_at": "Monday Jan 23, 2017 at 17:27 GMT",
        "updated_at": "Monday Jan 23, 2017 at 23:05 GMT",
        "closed_at": "Monday Jan 23, 2017 at 23:05 GMT",
        "merged_at": "Monday Jan 23, 2017 at 23:05 GMT"
    },
    {
        "key": "WT-3120",
        "number": 3261,
        "state": "closed",
        "title": "WT-3120 Fix ordering problem in connection_close for filesystem loaded in an extension",
        "body": "Lint/Coverity. Some of the code was copied from example code, which is why there are changes there as well.",
        "base_ref": "develop",
        "created_at": "Monday Jan 23, 2017 at 13:46 GMT",
        "updated_at": "Monday Jan 23, 2017 at 16:39 GMT",
        "closed_at": "Monday Jan 23, 2017 at 16:34 GMT",
        "merged_at": "Monday Jan 23, 2017 at 16:34 GMT"
    },
    {
        "key": "WT-3144",
        "number": 3260,
        "state": "closed",
        "title": "WT-3144 bug fix: random cursor returns not-found when descending to an empty page",
        "body": "clang 3.8 complains descent might be left uninitialized in some case. I don't think that's possible, but it's a simple change.",
        "base_ref": "develop",
        "created_at": "Monday Jan 23, 2017 at 12:27 GMT",
        "updated_at": "Monday Jan 23, 2017 at 12:49 GMT",
        "closed_at": "Monday Jan 23, 2017 at 12:49 GMT",
        "merged_at": "Monday Jan 23, 2017 at 12:49 GMT"
    },
    {
        "key": "WT-3144",
        "number": 3259,
        "state": "closed",
        "title": "WT-3144 bug fix: random cursor returns not-found when descending to an empty page",
        "body": "@michaelcahill, these changes make things better (and pass the existing test), but they don't entirely solve the problem as we won't necessarily recover from descending into an internal page that contains nothing other than deleted leaf pages. That condition should have triggered a reverse split to clean up the parent, but it's obviously not guaranteed we'll be able to reverse split the parent.\r\n\r\nI'm not sure how far we want to push this: for example, if the entire tree is filled with empty pages and there's a single valid key/value pair, are we committed to returning that item from a sample call?\r\n\r\nI looked at the page-in `WT_READ_NO_EMPTY` flag, but didn't see any obvious way to have it help solve the problem.",
        "base_ref": "develop",
        "created_at": "Sunday Jan 22, 2017 at 17:08 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:53 GMT",
        "closed_at": "Monday Jan 23, 2017 at 05:53 GMT",
        "merged_at": "Monday Jan 23, 2017 at 05:53 GMT"
    },
    {
        "key": "WT-3144",
        "number": 3258,
        "state": "closed",
        "title": "WT-3144 bug fix: random cursor returns not-found when descending to an empty page",
        "body": "Now the WT_REF is the primary \"page\" reference, we should print it instead of WT_REF.page in verbose/debugging output.",
        "base_ref": "develop",
        "created_at": "Sunday Jan 22, 2017 at 16:51 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:51 GMT",
        "closed_at": "Monday Jan 23, 2017 at 05:51 GMT",
        "merged_at": "Monday Jan 23, 2017 at 05:51 GMT"
    },
    {
        "key": "WT-3143",
        "number": 3257,
        "state": "closed",
        "title": "WT-3143 Coverity scan report 1369053",
        "body": "Coverity 1369053: assigning values that are never subsequently used.",
        "base_ref": "develop",
        "created_at": "Friday Jan 20, 2017 at 16:02 GMT",
        "updated_at": "Sunday Jan 22, 2017 at 22:57 GMT",
        "closed_at": "Sunday Jan 22, 2017 at 22:56 GMT",
        "merged_at": "Sunday Jan 22, 2017 at 22:56 GMT"
    },
    {
        "key": "WT-3130",
        "number": 3256,
        "state": "closed",
        "title": "WT-3130 Proposal to change initialization of custom filesystem",
        "body": "@agorrod, for your consideration.\r\n\r\nI changed it so `WT_CONNECTION.get_home()` will work before we load the extensions. I also configure error handling a little earlier, I thought that made sense to do before loading extensions.",
        "base_ref": "develop",
        "created_at": "Friday Jan 20, 2017 at 15:40 GMT",
        "updated_at": "Sunday Jan 22, 2017 at 22:38 GMT",
        "closed_at": "Sunday Jan 22, 2017 at 22:38 GMT",
        "merged_at": "Sunday Jan 22, 2017 at 22:38 GMT"
    },
    {
        "key": "WT-3142",
        "number": 3255,
        "state": "closed",
        "title": "WT-3142 Workload generator in Python.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 20, 2017 at 06:29 GMT",
        "updated_at": "Friday Apr 28, 2017 at 17:48 GMT",
        "closed_at": "Friday Apr 28, 2017 at 15:24 GMT",
        "merged_at": "Friday Apr 28, 2017 at 15:24 GMT"
    },
    {
        "key": "WT-3135",
        "number": 3254,
        "state": "closed",
        "title": "WT-3135 WT-3159 Fix search_near() with custom collators for index keys of variable length.",
        "body": "As part of the fix for search_near, this includes a fix for how format 'U' is interpreted.  'U' should always include the size, before this change, it did not if the 'U' appeared at the end of the format. As a side effect of this change, WT-3159 is also fixed.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 19, 2017 at 21:36 GMT",
        "updated_at": "Monday Feb 13, 2017 at 01:13 GMT",
        "closed_at": "Monday Feb 13, 2017 at 01:13 GMT",
        "merged_at": "Monday Feb 13, 2017 at 01:13 GMT"
    },
    {
        "key": "WT-3097",
        "number": 3253,
        "state": "closed",
        "title": "WT-3097 Race on reconfigure or shutdown can lead to waiting for statistics log server",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 18, 2017 at 23:39 GMT",
        "updated_at": "Wednesday Jan 25, 2017 at 03:07 GMT",
        "closed_at": "Wednesday Jan 25, 2017 at 03:07 GMT",
        "merged_at": "Wednesday Jan 25, 2017 at 03:07 GMT"
    },
    {
        "key": "WT-3105",
        "number": 3252,
        "state": "closed",
        "title": "WT-3105 Fix the thread group usage on eviction reconfigure and add test.",
        "body": "@agorrod Please review this omission from the original change.  I discovered that reconfigure was not fixed and that we had no test to eviction thread changes.  I did run the new test the first time with `verbose=(thread_group)` to confirm the right stuff is happening.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 18, 2017 at 21:59 GMT",
        "updated_at": "Thursday Jan 19, 2017 at 23:59 GMT",
        "closed_at": "Thursday Jan 19, 2017 at 23:59 GMT",
        "merged_at": "Thursday Jan 19, 2017 at 23:59 GMT"
    },
    {
        "key": "WT-3134",
        "number": 3251,
        "state": "closed",
        "title": "WT-3134 Coverity scan reports 1368529 and 1368528",
        "body": "@sulabhM, for your consideration.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 18, 2017 at 14:11 GMT",
        "updated_at": "Thursday Jan 19, 2017 at 02:06 GMT",
        "closed_at": "Thursday Jan 19, 2017 at 02:05 GMT",
        "merged_at": "Thursday Jan 19, 2017 at 02:05 GMT"
    },
    {
        "key": "WT-3083",
        "number": 3250,
        "state": "closed",
        "title": "WT-3083 tmp change to check pull req tester",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 18, 2017 at 02:46 GMT",
        "updated_at": "Thursday Jan 19, 2017 at 23:52 GMT",
        "closed_at": "Thursday Jan 19, 2017 at 23:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3131",
        "number": 3249,
        "state": "closed",
        "title": "WT-3131 Enable ROTN on Windows",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 18, 2017 at 00:19 GMT",
        "updated_at": "Friday Jan 20, 2017 at 03:37 GMT",
        "closed_at": "Friday Jan 20, 2017 at 03:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3118",
        "number": 3248,
        "state": "closed",
        "title": "WT-3118 Protect test against unexpectedly slow child start.",
        "body": "@agorrod Please review this change to the random-abort test program to wait for the table to exist before starting the timeout waiting.  It runs fine on my systems.  I manually added in a sleep at the beginning of the child process to simulate the delay and reproduce the original problem and test this change.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 17, 2017 at 19:53 GMT",
        "updated_at": "Tuesday Jan 17, 2017 at 20:41 GMT",
        "closed_at": "Tuesday Jan 17, 2017 at 20:41 GMT",
        "merged_at": "Tuesday Jan 17, 2017 at 20:41 GMT"
    },
    {
        "key": "WT-3121",
        "number": 3247,
        "state": "closed",
        "title": "WT-3121 Make all ROTN encryption tests skipable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 17, 2017 at 00:27 GMT",
        "updated_at": "Tuesday Jan 17, 2017 at 15:02 GMT",
        "closed_at": "Tuesday Jan 17, 2017 at 14:05 GMT",
        "merged_at": "Tuesday Jan 17, 2017 at 14:05 GMT"
    },
    {
        "key": "WT-3116",
        "number": 3246,
        "state": "closed",
        "title": "WT-3116 Change s_all to avoid missing error returns on older platforms",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 13, 2017 at 00:56 GMT",
        "updated_at": "Friday Jan 13, 2017 at 12:24 GMT",
        "closed_at": "Friday Jan 13, 2017 at 12:24 GMT",
        "merged_at": "Friday Jan 13, 2017 at 12:24 GMT"
    },
    {
        "key": "WT-3128",
        "number": 3245,
        "state": "closed",
        "title": "WT-3128 wt printlog returns operation-not-supported if it doesn't find any log files",
        "body": "Add a verbose message if we don't find any log files, it's likely the user pointed us at the wrong directory.\r\n\r\n@sueloverso, would you please review this change?",
        "base_ref": "develop",
        "created_at": "Thursday Jan 12, 2017 at 22:51 GMT",
        "updated_at": "Friday Jan 20, 2017 at 20:48 GMT",
        "closed_at": "Friday Jan 20, 2017 at 20:48 GMT",
        "merged_at": "Friday Jan 20, 2017 at 20:48 GMT"
    },
    {
        "key": "WT-3127",
        "number": 3244,
        "state": "closed",
        "title": "WT-3127 bug: CPU yield calls don't necessarily imply memory barriers",
        "body": "bug: CPU yield calls don't necessarily imply memory barriers\r\nAdd a full-barrier as part of the yield call.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 12, 2017 at 22:34 GMT",
        "updated_at": "Tuesday Jan 17, 2017 at 01:27 GMT",
        "closed_at": "Tuesday Jan 17, 2017 at 01:27 GMT",
        "merged_at": "Tuesday Jan 17, 2017 at 01:27 GMT"
    },
    {
        "key": "WT-3126",
        "number": 3243,
        "state": "closed",
        "title": "WT-3126 bug: dist/s_all script has misplaced quote causing bad error reporting",
        "body": "bug: dist/s_all script has misplaced quote causing bad error reporting",
        "base_ref": "develop",
        "created_at": "Thursday Jan 12, 2017 at 22:18 GMT",
        "updated_at": "Friday Jan 13, 2017 at 01:22 GMT",
        "closed_at": "Friday Jan 13, 2017 at 01:22 GMT",
        "merged_at": "Friday Jan 13, 2017 at 01:22 GMT"
    },
    {
        "key": "WT-3105",
        "number": 3242,
        "state": "closed",
        "title": "WT-3105 Avoid thread group deadlock on close.",
        "body": "@agorrod Please review this.  Unfortunately I've been running both the format CONFIG and the evict btree wtperf workload on develop without reproducing the deadlock.  So while I think this fixes the deadlock, I have not been able to confirm either way.  The branch runs fine too for my testing.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 12, 2017 at 17:05 GMT",
        "updated_at": "Tuesday Jan 17, 2017 at 01:20 GMT",
        "closed_at": "Tuesday Jan 17, 2017 at 01:20 GMT",
        "merged_at": "Tuesday Jan 17, 2017 at 01:20 GMT"
    },
    {
        "key": "WT-3121",
        "number": 3241,
        "state": "closed",
        "title": "WT-3121 In the test suite, create a standard way to load extensions",
        "body": "Many examples of overriding setUpConnectionOpen() can now be handled by a combination of conn_config (as variable or method) and conn_extensions (as variable or method).",
        "base_ref": "develop",
        "created_at": "Thursday Jan 12, 2017 at 15:55 GMT",
        "updated_at": "Monday Jan 16, 2017 at 03:21 GMT",
        "closed_at": "Monday Jan 16, 2017 at 03:21 GMT",
        "merged_at": "Monday Jan 16, 2017 at 03:21 GMT"
    },
    {
        "key": "WT-3039",
        "number": 3240,
        "state": "closed",
        "title": "WT-3039 Make new log record more general for potential future expansion.",
        "body": "@michaelcahill and @agorrod Here's a slightly different take on the new prevlsn log record.  I've renamed it to `system` and included a currently unused WT_ITEM in the record.  The thought is that we may want to include other information in this record someday and then all the plumbing is there (if the \"other information\" maps only to a WT_ITEM).  This is a branch off the other branch, wt-3039-prevlsn, so can be merged if you like it.",
        "base_ref": "wt-3039-prevlsn",
        "created_at": "Tuesday Jan 10, 2017 at 21:51 GMT",
        "updated_at": "Wednesday Jan 11, 2017 at 16:01 GMT",
        "closed_at": "Wednesday Jan 11, 2017 at 16:01 GMT",
        "merged_at": "Wednesday Jan 11, 2017 at 16:01 GMT"
    },
    {
        "key": "WT-3120",
        "number": 3239,
        "state": "closed",
        "title": "WT-3120 Fix ordering problem in connection_close for custom filesystem loaded via shared lib",
        "body": "@michaelcahill, this is ready for review.  I have a test case (extension file system + caller), but it's somewhat integrated in work I'm doing for WT-2909.  If you'd like it as part of this one, I can include it.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 10, 2017 at 15:35 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:19 GMT",
        "closed_at": "Monday Jan 23, 2017 at 05:19 GMT",
        "merged_at": "Monday Jan 23, 2017 at 05:19 GMT"
    },
    {
        "key": "WT-3114",
        "number": 3238,
        "state": "closed",
        "title": "WT-3114 Avoid archive immediately after recovery.",
        "body": "@agorrod Please review this change.  It was smaller than I originally thought it would be even.  Essentially one line and a few archiving related tests.  This will avoid archiving log files after recovery until after the first \"ongoing\" checkpoint is written.",
        "base_ref": "develop",
        "created_at": "Monday Jan 09, 2017 at 22:03 GMT",
        "updated_at": "Monday Jan 16, 2017 at 01:31 GMT",
        "closed_at": "Monday Jan 16, 2017 at 01:31 GMT",
        "merged_at": "Monday Jan 16, 2017 at 01:31 GMT"
    },
    {
        "key": "WT-3105",
        "number": 3237,
        "state": "closed",
        "title": "WT-3105 Create all eviction sessions initially to avoid deadlock.",
        "body": "@agorrod Here's the change to allocate and create all the eviction thread sessions at the start to avoid the deadlock,",
        "base_ref": "develop",
        "created_at": "Monday Jan 09, 2017 at 12:57 GMT",
        "updated_at": "Tuesday Jan 10, 2017 at 00:25 GMT",
        "closed_at": "Tuesday Jan 10, 2017 at 00:25 GMT",
        "merged_at": "Tuesday Jan 10, 2017 at 00:25 GMT"
    },
    {
        "key": "WT-3115",
        "number": 3236,
        "state": "closed",
        "title": "WT-3115 Convert the dhandle list lock into a read/write lock.",
        "body": "It was a spinlock, but most acquirers only need shared access and it can be a contetion point in many-table workloads.\r\n\r\nThis change isn't ready for review yet - I've pushed it up to get some more testing before I iron out some stats and lock-upgrade questions.",
        "base_ref": "develop",
        "created_at": "Monday Jan 09, 2017 at 03:20 GMT",
        "updated_at": "Wednesday Feb 01, 2017 at 01:11 GMT",
        "closed_at": "Wednesday Feb 01, 2017 at 01:11 GMT",
        "merged_at": "Wednesday Feb 01, 2017 at 01:11 GMT"
    },
    {
        "key": "WT-3112",
        "number": 3235,
        "state": "closed",
        "title": "WT-3112 Time the eviction try-lock for the dhandle overall, not per-attempt",
        "body": "@agorrod  Please review this change to make try-lock stats not perform timing per-attempt, but overall in the eviction code per our discussion.",
        "base_ref": "develop",
        "created_at": "Monday Jan 09, 2017 at 02:30 GMT",
        "updated_at": "Monday Jan 09, 2017 at 21:05 GMT",
        "closed_at": "Monday Jan 09, 2017 at 12:22 GMT",
        "merged_at": "Monday Jan 09, 2017 at 12:22 GMT"
    },
    {
        "key": "WT-3113",
        "number": 3234,
        "state": "closed",
        "title": "WT-3113 Feature: add a way to dump the cache at runtime.",
        "body": "@agorrod, @michaelcahill, here's a first cut at a framework that would allow us to dump the cache in running systems.\r\n\r\nIt looks like statistics logging: there's a directory, and diagnostic commands write into a file in that directory. The file is named `WiredTigerDiag.XX.day.hour`, where XX is the diagnostic command, so you'll see something like: `WiredTigerDiag.cache_dump.05.18`.\r\n\r\nMichael, I drilled a hole through`WT_CONNECTION.reconfigure` as you suggested. I added two new configuration strings: `diagnostic` which is a list of commands (the only currently supported one is `cache_dump`), and `diagnostic_path` which allows you to declare a place to store the diagnostic output.\r\n\r\nLet me know what you think.\r\n\r\n\r\n\r\n\r\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 05, 2017 at 23:55 GMT",
        "updated_at": "Wednesday Jan 25, 2017 at 01:28 GMT",
        "closed_at": "Wednesday Jan 25, 2017 at 01:28 GMT",
        "merged_at": "Wednesday Jan 25, 2017 at 01:28 GMT"
    },
    {
        "key": "WT-3112",
        "number": 3233,
        "state": "closed",
        "title": "WT-3112 Add lock statistics to try_lock path.",
        "body": "@keithbostic Please review this change to add the locking stats to the try-lock path.  I ran the evict-btree.wtperf workload on develop and this branch.  Develop acquires the dhandle list lock 47 times.  This branch is 116721 acquisitions.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 05, 2017 at 19:58 GMT",
        "updated_at": "Friday Jan 06, 2017 at 20:40 GMT",
        "closed_at": "Friday Jan 06, 2017 at 20:40 GMT",
        "merged_at": "Friday Jan 06, 2017 at 20:40 GMT"
    },
    {
        "key": "WT-3110",
        "number": 3232,
        "state": "closed",
        "title": "WT-3110 New WT Utility tests",
        "body": "Not 100% ready yet.\r\n\r\nI need to think about what else can be done with stats.",
        "base_ref": "develop",
        "created_at": "Thursday Jan 05, 2017 at 06:42 GMT",
        "updated_at": "Thursday Jan 12, 2017 at 05:10 GMT",
        "closed_at": "Thursday Jan 12, 2017 at 05:10 GMT",
        "merged_at": "Thursday Jan 12, 2017 at 05:10 GMT"
    },
    {
        "key": "WT-3109",
        "number": 3231,
        "state": "closed",
        "title": "WT-3109 correct named snapshots documentation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 04, 2017 at 20:08 GMT",
        "updated_at": "Wednesday Jan 04, 2017 at 20:24 GMT",
        "closed_at": "Wednesday Jan 04, 2017 at 20:24 GMT",
        "merged_at": "Wednesday Jan 04, 2017 at 20:24 GMT"
    },
    {
        "key": null,
        "number": 3230,
        "state": "closed",
        "title": "Correct snapshot documentation on transactions page.",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday Jan 04, 2017 at 19:53 GMT",
        "updated_at": "Wednesday Jan 04, 2017 at 20:05 GMT",
        "closed_at": "Wednesday Jan 04, 2017 at 20:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2898",
        "number": 3229,
        "state": "closed",
        "title": "WT-2898 Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads",
        "body": "Lint.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 04, 2017 at 15:25 GMT",
        "updated_at": "Wednesday Jan 04, 2017 at 16:03 GMT",
        "closed_at": "Wednesday Jan 04, 2017 at 16:03 GMT",
        "merged_at": "Wednesday Jan 04, 2017 at 16:03 GMT"
    },
    {
        "key": "WT-3100",
        "number": 3228,
        "state": "closed",
        "title": "WT-3100 test bug: format is weighted to delete, insert, then write operations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 04, 2017 at 14:42 GMT",
        "updated_at": "Wednesday Jan 04, 2017 at 14:54 GMT",
        "closed_at": "Wednesday Jan 04, 2017 at 14:53 GMT",
        "merged_at": "Wednesday Jan 04, 2017 at 14:53 GMT"
    },
    {
        "key": "WT-3106",
        "number": 3227,
        "state": "closed",
        "title": "WT-3106 Add wt utility truncate operation",
        "body": "Not ready for review yet. Need to fix some comments and update documentation.",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 04, 2017 at 06:21 GMT",
        "updated_at": "Tuesday Jan 10, 2017 at 00:13 GMT",
        "closed_at": "Tuesday Jan 10, 2017 at 00:13 GMT",
        "merged_at": "Tuesday Jan 10, 2017 at 00:13 GMT"
    },
    {
        "key": "WT-3108",
        "number": 3226,
        "state": "closed",
        "title": "WT-3108 Add disk memory size to verify debug output",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 04, 2017 at 03:33 GMT",
        "updated_at": "Friday Jan 06, 2017 at 16:54 GMT",
        "closed_at": "Friday Jan 06, 2017 at 16:54 GMT",
        "merged_at": "Friday Jan 06, 2017 at 16:54 GMT"
    },
    {
        "key": "ER-16796",
        "number": 3225,
        "state": "closed",
        "title": "SERVER-16796 Recovery progress via verbose messages.",
        "body": "@michaelcahill Here's the change using verbose.  This is much better than the other two (I'm going to close those PRs).  This should be reviewed and merged before WT-3039 so that it can get into the mongo 3.4 branch before that version change.  There will need to be a mongo change to turn on the verbose setting too, separate from this.",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 03, 2017 at 18:35 GMT",
        "updated_at": "Wednesday Jan 04, 2017 at 05:55 GMT",
        "closed_at": "Wednesday Jan 04, 2017 at 05:55 GMT",
        "merged_at": "Wednesday Jan 04, 2017 at 05:55 GMT"
    },
    {
        "key": "WT-3083",
        "number": 3224,
        "state": "closed",
        "title": "WT-3083 For wtperf config dump, concat config options in multiple lines",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 03, 2017 at 04:29 GMT",
        "updated_at": "Wednesday Jan 18, 2017 at 02:18 GMT",
        "closed_at": "Wednesday Jan 18, 2017 at 02:18 GMT",
        "merged_at": "Wednesday Jan 18, 2017 at 02:18 GMT"
    },
    {
        "key": "WT-3137",
        "number": 3223,
        "state": "closed",
        "title": "WT-3137 Fix a hang in logging due to a race condition",
        "body": "Not for merge, just for debugging for now.",
        "base_ref": "develop",
        "created_at": "Monday Jan 02, 2017 at 16:03 GMT",
        "updated_at": "Tuesday Jan 24, 2017 at 06:30 GMT",
        "closed_at": "Tuesday Jan 24, 2017 at 06:30 GMT",
        "merged_at": "Tuesday Jan 24, 2017 at 06:30 GMT"
    },
    {
        "key": "ER-16796",
        "number": 3222,
        "state": "closed",
        "title": "SERVER-16796 Add recovery messages for progress.",
        "body": "@michaelcahill and @agorrod I have two branches for this work.  One uses the `wt_progress` call and the other `wt_msg`.  I'm on the fence which I prefer, but I'm leaning toward this one.  Having the ability to give an actual message is both simpler and can be more informative.  I went with something pretty basic.  If you're aware of more information wanted let me know.",
        "base_ref": "develop",
        "created_at": "Friday Dec 30, 2016 at 21:04 GMT",
        "updated_at": "Tuesday Jan 03, 2017 at 18:37 GMT",
        "closed_at": "Tuesday Jan 03, 2017 at 18:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3104",
        "number": 3221,
        "state": "closed",
        "title": "WT-3104 Fix single threaded eviction configurations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 29, 2016 at 19:44 GMT",
        "updated_at": "Thursday Dec 29, 2016 at 19:56 GMT",
        "closed_at": "Thursday Dec 29, 2016 at 19:56 GMT",
        "merged_at": "Thursday Dec 29, 2016 at 19:56 GMT"
    },
    {
        "key": "ER-16796",
        "number": 3220,
        "state": "closed",
        "title": "SERVER-16796 Add recovery progress calls.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 29, 2016 at 19:18 GMT",
        "updated_at": "Tuesday Jan 03, 2017 at 18:36 GMT",
        "closed_at": "Tuesday Jan 03, 2017 at 18:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3100",
        "number": 3219,
        "state": "closed",
        "title": "WT-3100 test bug: format is weighted to delete, insert, then write operations.",
        "body": "test bug: format is weighted to delete, insert, then write operations.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 27, 2016 at 16:02 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:54 GMT",
        "closed_at": "Wednesday Jan 04, 2017 at 05:57 GMT",
        "merged_at": "Wednesday Jan 04, 2017 at 05:57 GMT"
    },
    {
        "key": "WT-3099",
        "number": 3218,
        "state": "closed",
        "title": "WT-3099 lint: static function declarations, non-text characters in documentation",
        "body": "lint: static function declarations, non-text characters in documentation",
        "base_ref": "develop",
        "created_at": "Friday Dec 23, 2016 at 15:32 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:54 GMT",
        "closed_at": "Wednesday Jan 04, 2017 at 06:13 GMT",
        "merged_at": "Wednesday Jan 04, 2017 at 06:13 GMT"
    },
    {
        "key": "WT-3086",
        "number": 3217,
        "state": "closed",
        "title": "WT-3086 lint.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 23, 2016 at 06:07 GMT",
        "updated_at": "Friday Dec 23, 2016 at 07:00 GMT",
        "closed_at": "Friday Dec 23, 2016 at 06:59 GMT",
        "merged_at": "Friday Dec 23, 2016 at 06:59 GMT"
    },
    {
        "key": "WT-3093",
        "number": 3216,
        "state": "closed",
        "title": "WT-3093 Coverity lint.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 23, 2016 at 06:01 GMT",
        "updated_at": "Friday Dec 23, 2016 at 14:47 GMT",
        "closed_at": "Friday Dec 23, 2016 at 14:47 GMT",
        "merged_at": "Friday Dec 23, 2016 at 14:47 GMT"
    },
    {
        "key": "WT-0000",
        "number": 3215,
        "state": "closed",
        "title": "WT-0000 Cut WiredTiger WT-2.9.1 release",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 22, 2016 at 05:11 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:54 GMT",
        "closed_at": "Thursday Dec 22, 2016 at 23:27 GMT",
        "merged_at": "Thursday Dec 22, 2016 at 23:27 GMT"
    },
    {
        "key": "WT-3086",
        "number": 3214,
        "state": "closed",
        "title": "WT-3086 Add information about transaction state to cache stuck diagnostics",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 21, 2016 at 06:29 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:54 GMT",
        "closed_at": "Friday Dec 23, 2016 at 04:03 GMT",
        "merged_at": "Friday Dec 23, 2016 at 04:03 GMT"
    },
    {
        "key": "WT-3039",
        "number": 3213,
        "state": "closed",
        "title": "WT-3039 Add previous LSN record to log files",
        "body": "Not ready for review.  Add a new log record to record the end of the previous log to detect a hole in records at the end of a log file.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 20, 2016 at 19:41 GMT",
        "updated_at": "Wednesday Jun 28, 2017 at 11:21 GMT",
        "closed_at": "Wednesday Jun 28, 2017 at 11:21 GMT",
        "merged_at": "Wednesday Jun 28, 2017 at 11:21 GMT"
    },
    {
        "key": "WT-3093",
        "number": 3212,
        "state": "closed",
        "title": "WT-3093 Padding the WT_RWLOCK structure grew the WT_PAGE structure.",
        "body": "Padding the WT_RWLOCK structure grew the WT_PAGE structure.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 20, 2016 at 19:22 GMT",
        "updated_at": "Friday Dec 23, 2016 at 04:12 GMT",
        "closed_at": "Friday Dec 23, 2016 at 04:12 GMT",
        "merged_at": "Friday Dec 23, 2016 at 04:12 GMT"
    },
    {
        "key": "WT-3092",
        "number": 3211,
        "state": "closed",
        "title": "WT-3092 Quiet autogen.sh, change local Python build permissions",
        "body": "WT-3092 Quiet autogen.sh, change local Python build permissions",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 20, 2016 at 14:47 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:54 GMT",
        "closed_at": "Friday Dec 23, 2016 at 03:58 GMT",
        "merged_at": "Friday Dec 23, 2016 at 03:58 GMT"
    },
    {
        "key": "WT-3091",
        "number": 3210,
        "state": "closed",
        "title": "WT-3091 Add stats to test_perf001 test, so we can investigate what happened when it failed.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 20, 2016 at 05:11 GMT",
        "updated_at": "Tuesday Dec 20, 2016 at 05:52 GMT",
        "closed_at": "Tuesday Dec 20, 2016 at 05:52 GMT",
        "merged_at": "Tuesday Dec 20, 2016 at 05:52 GMT"
    },
    {
        "key": "WT-2402",
        "number": 3209,
        "state": "closed",
        "title": "WT-2402 Fix setting the Autoconf options too late for strict checking",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 19, 2016 at 23:59 GMT",
        "updated_at": "Tuesday Dec 20, 2016 at 00:29 GMT",
        "closed_at": "Tuesday Dec 20, 2016 at 00:29 GMT",
        "merged_at": "Tuesday Dec 20, 2016 at 00:29 GMT"
    },
    {
        "key": "WT-2833",
        "number": 3208,
        "state": "closed",
        "title": "WT-2833 Fix a compiler warning",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 19, 2016 at 23:42 GMT",
        "updated_at": "Tuesday Dec 20, 2016 at 00:07 GMT",
        "closed_at": "Tuesday Dec 20, 2016 at 00:07 GMT",
        "merged_at": "Tuesday Dec 20, 2016 at 00:07 GMT"
    },
    {
        "key": "WT-2771",
        "number": 3207,
        "state": "closed",
        "title": "WT-2771 Add a statistic to track per-btree dirty cache usage.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 19, 2016 at 05:54 GMT",
        "updated_at": "Monday Dec 19, 2016 at 23:42 GMT",
        "closed_at": "Monday Dec 19, 2016 at 23:42 GMT",
        "merged_at": "Monday Dec 19, 2016 at 23:42 GMT"
    },
    {
        "key": "WT-3082",
        "number": 3206,
        "state": "closed",
        "title": "WT-3082 Python test suite: shorten default run to avoid timeouts.",
        "body": "Tests that have lots of scenarios will have the number of scenarios pruned in the default case.  Running with --long restores the previous larger number of scenarios.\r\n\r\nThis runs about 25% faster in my standalone testing.",
        "base_ref": "develop",
        "created_at": "Friday Dec 16, 2016 at 17:23 GMT",
        "updated_at": "Monday Dec 19, 2016 at 15:57 GMT",
        "closed_at": "Monday Dec 19, 2016 at 05:44 GMT",
        "merged_at": "Monday Dec 19, 2016 at 05:44 GMT"
    },
    {
        "key": "WT-3084",
        "number": 3205,
        "state": "closed",
        "title": "WT-3084 Fix Coverity resource leak complaint.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 16, 2016 at 13:45 GMT",
        "updated_at": "Friday Dec 16, 2016 at 15:39 GMT",
        "closed_at": "Friday Dec 16, 2016 at 15:38 GMT",
        "merged_at": "Friday Dec 16, 2016 at 15:38 GMT"
    },
    {
        "key": "WT-2994",
        "number": 3204,
        "state": "closed",
        "title": "WT-2994 Create documentation describing page sizes and relationships",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 16, 2016 at 04:18 GMT",
        "updated_at": "Friday Dec 23, 2016 at 03:44 GMT",
        "closed_at": "Friday Dec 23, 2016 at 03:44 GMT",
        "merged_at": "Friday Dec 23, 2016 at 03:44 GMT"
    },
    {
        "key": "WT-2402",
        "number": 3203,
        "state": "closed",
        "title": "WT-2402 Misaligned structure accesses lead to undefined behavior",
        "body": "@michaelcahill, @agorrod, @daveh86: I ended up turning off `std=c11` on Solaris, everything else was just too painful, and involved setting compiler flags that weren't strictly documented.\r\n\r\nI also made a pass through `configure.ac.in` to try and clean up how we were setting flags as well as the order in which we set them.\r\n\r\nI haven't yet tested this as much as I'd like, but I wanted to push it so you folks have a chance to see where I'm heading and say \"no\".",
        "base_ref": "develop",
        "created_at": "Thursday Dec 15, 2016 at 23:25 GMT",
        "updated_at": "Friday Dec 16, 2016 at 13:13 GMT",
        "closed_at": "Friday Dec 16, 2016 at 13:12 GMT",
        "merged_at": "Friday Dec 16, 2016 at 13:12 GMT"
    },
    {
        "key": "WT-3068",
        "number": 3202,
        "state": "closed",
        "title": "WT-3068 Have Jenkins include specific files for copy rather than exclude",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 15, 2016 at 21:23 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 22:10 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 22:10 GMT",
        "merged_at": "Thursday Dec 15, 2016 at 22:10 GMT"
    },
    {
        "key": "WT-3080",
        "number": 3201,
        "state": "closed",
        "title": "WT-3080 Python test suite: add elapsed time for tests",
        "body": "This does increase the amount of console output, but having an effective way to reduce the test suite time seems worth it.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 15, 2016 at 19:23 GMT",
        "updated_at": "Monday Dec 19, 2016 at 05:43 GMT",
        "closed_at": "Monday Dec 19, 2016 at 05:43 GMT",
        "merged_at": "Monday Dec 19, 2016 at 05:43 GMT"
    },
    {
        "key": "WT-283",
        "number": 3200,
        "state": "closed",
        "title": "WT-283 Fix data source examples to include alter.",
        "body": "Fix some places using data sources to include alter.  Found after merge.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 15, 2016 at 18:31 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 19:40 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 19:40 GMT",
        "merged_at": "Thursday Dec 15, 2016 at 19:40 GMT"
    },
    {
        "key": "WT-3079",
        "number": 3199,
        "state": "closed",
        "title": "WT-3079 Always remember the last file eviction visited.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 15, 2016 at 05:59 GMT",
        "updated_at": "Monday Jan 23, 2017 at 05:54 GMT",
        "closed_at": "Monday Jan 23, 2017 at 04:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3078",
        "number": 3198,
        "state": "closed",
        "title": "WT-3078 test reconfiguration hang in the statlog server.",
        "body": "Flush the caller's flags before reading the condition information, we may not write anything before joining the exiting thread, and a write-barrier() would not necessarily have any effect.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 14, 2016 at 23:18 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 04:42 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 04:42 GMT",
        "merged_at": "Thursday Dec 15, 2016 at 04:42 GMT"
    },
    {
        "key": "WT-3077",
        "number": 3197,
        "state": "closed",
        "title": "WT-3077 Fix some issues with LevelDB testing and extension pathing",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 14, 2016 at 05:28 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 22:04 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 22:04 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3075",
        "number": 3196,
        "state": "closed",
        "title": "WT-3075 WiredTiger now depends on Python 2.7",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 14, 2016 at 03:56 GMT",
        "updated_at": "Monday Dec 19, 2016 at 00:24 GMT",
        "closed_at": "Monday Dec 19, 2016 at 00:24 GMT",
        "merged_at": "Monday Dec 19, 2016 at 00:24 GMT"
    },
    {
        "key": "WT-3070",
        "number": 3195,
        "state": "closed",
        "title": "WT-3070 Fix search_near on indexes.",
        "body": "Since WT-2773, the sign of the `exact` result was flipped and\r\nWT_NOTFOUND was returned for search_near calls with a key past the end\r\nof the index.",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 14, 2016 at 01:05 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 00:43 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 00:43 GMT",
        "merged_at": "Thursday Dec 15, 2016 at 00:43 GMT"
    },
    {
        "key": "WT-3071",
        "number": 3194,
        "state": "closed",
        "title": "WT-3071 Fixed sign-conversion errors in Java SWIG code",
        "body": "These changes allow a tree to be built with -Werror=sign-conversion along with Java and Python enabled.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 13, 2016 at 18:02 GMT",
        "updated_at": "Tuesday Dec 13, 2016 at 22:22 GMT",
        "closed_at": "Tuesday Dec 13, 2016 at 22:22 GMT",
        "merged_at": "Tuesday Dec 13, 2016 at 22:22 GMT"
    },
    {
        "key": "WT-3069",
        "number": 3193,
        "state": "closed",
        "title": "WT-3069 Fix build failures in LevelDB APIs",
        "body": "WT-3069 LevelDB APIs no longer build.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 13, 2016 at 13:17 GMT",
        "updated_at": "Wednesday Dec 14, 2016 at 00:33 GMT",
        "closed_at": "Wednesday Dec 14, 2016 at 00:32 GMT",
        "merged_at": "Wednesday Dec 14, 2016 at 00:32 GMT"
    },
    {
        "key": "WT-2833",
        "number": 3192,
        "state": "closed",
        "title": "WT-2833 Add projections to wt dump utility",
        "body": "When dumping with a projection, the dumped metadata associated with the table is modified so that the list of columns matches the list from the projection, and the value format corresponds to projected format.  We use an open cursor using the projection to obtain the value format to show, that requires a slight reordering of when cursors are opened in the dump utility.\r\n\r\nAlso fix a problem in the JSON dump cursor which did not handle projections.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 13, 2016 at 03:04 GMT",
        "updated_at": "Monday Dec 19, 2016 at 23:10 GMT",
        "closed_at": "Monday Dec 19, 2016 at 23:10 GMT",
        "merged_at": "Monday Dec 19, 2016 at 23:10 GMT"
    },
    {
        "key": "WT-2402",
        "number": 3191,
        "state": "closed",
        "title": "WT-2402 Pad structures to avoid cache line sharing.",
        "body": "We previously used compiler alignment to avoid cache line sharing, which\r\nis problematic because we don't allocate memory with the necessary\r\nalignment, so some behavior is undefined.  Instead, this change merely\r\npads structs to ensure they won't share a cache line when allocated in\r\nan array.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 13, 2016 at 01:12 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 12:15 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 12:15 GMT",
        "merged_at": "Thursday Dec 15, 2016 at 12:15 GMT"
    },
    {
        "key": "WT-3068",
        "number": 3190,
        "state": "closed",
        "title": "WT-3068 Copy artefacts of test runs in wtperf_run script.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 12, 2016 at 04:50 GMT",
        "updated_at": "Wednesday Dec 14, 2016 at 00:28 GMT",
        "closed_at": "Wednesday Dec 14, 2016 at 00:28 GMT",
        "merged_at": "Wednesday Dec 14, 2016 at 00:28 GMT"
    },
    {
        "key": "WT-3066",
        "number": 3189,
        "state": "closed",
        "title": "WT-3066 lint",
        "body": "@agorrod, lint.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 11, 2016 at 21:32 GMT",
        "updated_at": "Monday Dec 12, 2016 at 03:01 GMT",
        "closed_at": "Monday Dec 12, 2016 at 03:01 GMT",
        "merged_at": "Monday Dec 12, 2016 at 03:01 GMT"
    },
    {
        "key": "WT-3063",
        "number": 3188,
        "state": "closed",
        "title": "WT-3063 Reserve records for read-modify-write.",
        "body": "@michaelcahill, @agorrod, a possible approach to WT-3063.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 11, 2016 at 15:44 GMT",
        "updated_at": "Tuesday Mar 07, 2017 at 17:29 GMT",
        "closed_at": "Tuesday Mar 07, 2017 at 17:29 GMT",
        "merged_at": null
    },
    {
        "key": "ER-26545",
        "number": 3187,
        "state": "closed",
        "title": "SERVER-26545 Remove fixed-size limitation on WiredTiger hazard pointers",
        "body": "SERVER-26545 Remove fixed-size limitation on WiredTiger hazard pointers",
        "base_ref": "develop",
        "created_at": "Thursday Dec 08, 2016 at 21:21 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 05:01 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 05:01 GMT",
        "merged_at": "Thursday Dec 15, 2016 at 05:01 GMT"
    },
    {
        "key": "WT-3056",
        "number": 3186,
        "state": "closed",
        "title": "WT-3056 Allow projected table and join cursors to use primary keys",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 08, 2016 at 15:57 GMT",
        "updated_at": "Monday Dec 12, 2016 at 03:24 GMT",
        "closed_at": "Monday Dec 12, 2016 at 03:24 GMT",
        "merged_at": "Monday Dec 12, 2016 at 03:24 GMT"
    },
    {
        "key": "WT-3064",
        "number": 3185,
        "state": "closed",
        "title": "WT-3064 minor tree cleanups: .gitignore, NEWS misspelling",
        "body": "WT-3064 minor tree cleanups: .gitignore, NEWS misspelling",
        "base_ref": "develop",
        "created_at": "Thursday Dec 08, 2016 at 14:25 GMT",
        "updated_at": "Thursday Dec 08, 2016 at 14:42 GMT",
        "closed_at": "Thursday Dec 08, 2016 at 14:42 GMT",
        "merged_at": "Thursday Dec 08, 2016 at 14:42 GMT"
    },
    {
        "key": "WT-3061",
        "number": 3184,
        "state": "closed",
        "title": "WT-3061 Ensure checkpoint syncs are run as part of syscall testing",
        "body": "Not 100% if this is the best way to proceed here, re pwrite vs pwrite64.\r\n\r\nIf it is, then we would have to exclude some of the Jenkins machines from testing. The alternative is to find a way to check if the system has pwrite or pwrite64 registered in strace.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 08, 2016 at 03:41 GMT",
        "updated_at": "Monday Dec 12, 2016 at 23:01 GMT",
        "closed_at": "Monday Dec 12, 2016 at 23:01 GMT",
        "merged_at": "Monday Dec 12, 2016 at 23:01 GMT"
    },
    {
        "key": "WT-2336",
        "number": 3183,
        "state": "closed",
        "title": "WT-2336 Fix a \"noreturn\" warning in a new test.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 07, 2016 at 04:41 GMT",
        "updated_at": "Wednesday Dec 07, 2016 at 05:31 GMT",
        "closed_at": "Wednesday Dec 07, 2016 at 05:31 GMT",
        "merged_at": "Wednesday Dec 07, 2016 at 05:31 GMT"
    },
    {
        "key": "WT-3055",
        "number": 3182,
        "state": "closed",
        "title": "WT-3055 Fix timing related failures in Java AsyncOp tests",
        "body": "When an AsyncOp (java object) is created, cache whether the cursor is \"Raw\".\r\nLater, when an application is fetching keys/values from the AsyncOp,\r\nthe JAVA_CALLBACK object may be detached from the (java) AsyncOp, which makes\r\nfinding out information about the cursor impossible.  See the JIRA for more detailed info.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 06, 2016 at 22:10 GMT",
        "updated_at": "Wednesday Dec 07, 2016 at 00:26 GMT",
        "closed_at": "Wednesday Dec 07, 2016 at 00:26 GMT",
        "merged_at": "Wednesday Dec 07, 2016 at 00:26 GMT"
    },
    {
        "key": "WT-3057",
        "number": 3181,
        "state": "closed",
        "title": "WT-3057 WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.",
        "body": "@michaelcahill, this is the change we talked about, I think it turned out to be as simple as we thought.\r\n\r\nI didn't drive the change down as deeply into the split code as I probably should have, but trying to was relatively messy: code that needs to lock both WT_REF structures and WT_PAGE structures is inherently messy in our code.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 06, 2016 at 21:48 GMT",
        "updated_at": "Thursday Dec 08, 2016 at 03:05 GMT",
        "closed_at": "Thursday Dec 08, 2016 at 03:05 GMT",
        "merged_at": "Thursday Dec 08, 2016 at 03:05 GMT"
    },
    {
        "key": "WT-3053",
        "number": 3179,
        "state": "closed",
        "title": "WT-3053 Make Python use internal memory allocation again.",
        "body": "Since we aren't going to make allocation functions hidden, revert\r\nchanges to the Python API in WT-3014 so it uses internal memory\r\nallocation functions, matching the Java API.",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 06, 2016 at 02:53 GMT",
        "updated_at": "Tuesday Dec 06, 2016 at 03:12 GMT",
        "closed_at": "Tuesday Dec 06, 2016 at 03:12 GMT",
        "merged_at": "Tuesday Dec 06, 2016 at 03:12 GMT"
    },
    {
        "key": "WT-3053",
        "number": 3178,
        "state": "closed",
        "title": "WT-3053 Revert: Python and Java support use internal WiredTiger functions",
        "body": "Reverts wiredtiger/wiredtiger#3174",
        "base_ref": "develop",
        "created_at": "Monday Dec 05, 2016 at 22:58 GMT",
        "updated_at": "Monday Dec 05, 2016 at 23:03 GMT",
        "closed_at": "Monday Dec 05, 2016 at 23:03 GMT",
        "merged_at": "Monday Dec 05, 2016 at 23:03 GMT"
    },
    {
        "key": "WT-283",
        "number": 3177,
        "state": "closed",
        "title": "WT-283 Add WT_SESSION::alter method",
        "body": "@agorrod Here's a branch for the alter command.  I added a test to alter and modify all combinations of both `access_pattern_hint` and `cache_resident`.  Can you think of other testing we should add?  You should take a first pass at reviewing this.",
        "base_ref": "develop",
        "created_at": "Monday Dec 05, 2016 at 21:50 GMT",
        "updated_at": "Thursday Dec 15, 2016 at 18:06 GMT",
        "closed_at": "Thursday Dec 15, 2016 at 18:06 GMT",
        "merged_at": "Thursday Dec 15, 2016 at 18:06 GMT"
    },
    {
        "key": "WT-3053",
        "number": 3176,
        "state": "closed",
        "title": "WT-3053 Python and Java support use internal WiredTiger functions",
        "body": "Make __wt_err() visible again.",
        "base_ref": "develop",
        "created_at": "Monday Dec 05, 2016 at 20:06 GMT",
        "updated_at": "Tuesday Dec 06, 2016 at 00:29 GMT",
        "closed_at": "Tuesday Dec 06, 2016 at 00:29 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3054",
        "number": 3175,
        "state": "closed",
        "title": "WT-3054 Fix Java test compilation errors",
        "body": "Broken by changes in WT-3021.",
        "base_ref": "develop",
        "created_at": "Monday Dec 05, 2016 at 19:18 GMT",
        "updated_at": "Tuesday Dec 06, 2016 at 01:48 GMT",
        "closed_at": "Tuesday Dec 06, 2016 at 01:48 GMT",
        "merged_at": "Tuesday Dec 06, 2016 at 01:48 GMT"
    },
    {
        "key": "WT-3053",
        "number": 3174,
        "state": "closed",
        "title": "WT-3053 Python and Java support use internal WiredTiger functions",
        "body": "Remove calls to internal WiredTiger functions from the Java and Python APIs, meaning we no longer need to expose a few more internal WiredTiger functions.",
        "base_ref": "develop",
        "created_at": "Monday Dec 05, 2016 at 15:41 GMT",
        "updated_at": "Monday Dec 05, 2016 at 23:13 GMT",
        "closed_at": "Monday Dec 05, 2016 at 19:55 GMT",
        "merged_at": "Monday Dec 05, 2016 at 19:55 GMT"
    },
    {
        "key": "WT-3030",
        "number": 3173,
        "state": "closed",
        "title": "WT-3030 Fix a race between scans and splits reading the index hint.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 05, 2016 at 00:41 GMT",
        "updated_at": "Monday Dec 05, 2016 at 00:52 GMT",
        "closed_at": "Monday Dec 05, 2016 at 00:52 GMT",
        "merged_at": "Monday Dec 05, 2016 at 00:52 GMT"
    },
    {
        "key": "WT-3051",
        "number": 3172,
        "state": "closed",
        "title": "WT-3051 Remove external __wt_hex symbol.",
        "body": "WT-3051 Remove external __wt_hex symbol.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 04, 2016 at 17:39 GMT",
        "updated_at": "Monday Dec 05, 2016 at 00:51 GMT",
        "closed_at": "Monday Dec 05, 2016 at 00:51 GMT",
        "merged_at": "Monday Dec 05, 2016 at 00:51 GMT"
    },
    {
        "key": "WT-2960",
        "number": 3171,
        "state": "closed",
        "title": "WT-2960 Inserting multi-megabyte values can cause pathological lookaside usage",
        "body": "@michaelcahill, @agorrod, here are the reconciliation changes I described to you.\r\n\r\nWith this change, it's pretty hard to get the lookaside table to fire at all (fixing the workload described in WT-2960, that workload no longer uses the lookaside table).\r\n\r\nI don't see a significant slow-down in any of the workloads I've tested so far. (Alex, that includes random, out-of-cache eviction-stressing workloads.)\r\n\r\nI'm going to do some more performance testing on various workloads, but if there are any specific workloads you'd like tested, let me know.",
        "base_ref": "develop",
        "created_at": "Sunday Dec 04, 2016 at 17:26 GMT",
        "updated_at": "Wednesday Dec 07, 2016 at 02:52 GMT",
        "closed_at": "Wednesday Dec 07, 2016 at 02:52 GMT",
        "merged_at": "Wednesday Dec 07, 2016 at 02:52 GMT"
    },
    {
        "key": "WT-3030",
        "number": 3170,
        "state": "closed",
        "title": "WT-3030  Fix a race between scans and splits reading the index hint.",
        "body": "WT-3030  Fix a race between scans and splits reading the index hint.",
        "base_ref": "mongodb-3.4",
        "created_at": "Friday Dec 02, 2016 at 14:43 GMT",
        "updated_at": "Monday Dec 05, 2016 at 00:42 GMT",
        "closed_at": "Monday Dec 05, 2016 at 00:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3030",
        "number": 3169,
        "state": "closed",
        "title": "WT-3030  Fix a race between scans and splits reading the index hint.",
        "body": "WT-3030  Fix a race between scans and splits reading the index hint.",
        "base_ref": "mongodb-3.2",
        "created_at": "Friday Dec 02, 2016 at 14:42 GMT",
        "updated_at": "Monday Dec 05, 2016 at 00:42 GMT",
        "closed_at": "Monday Dec 05, 2016 at 00:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3030",
        "number": 3168,
        "state": "closed",
        "title": "WT-3030  Fix a race between scans and splits reading the index hint.",
        "body": "WT-3030  Fix a race between scans and splits reading the index hint.",
        "base_ref": "mongodb-3.0",
        "created_at": "Friday Dec 02, 2016 at 14:42 GMT",
        "updated_at": "Monday Dec 05, 2016 at 00:42 GMT",
        "closed_at": "Monday Dec 05, 2016 at 00:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3030",
        "number": 3167,
        "state": "closed",
        "title": "WT-3030 alternative loop for finding the matching slot.",
        "body": "WT-3030 alternative loop for finding the matching slot.",
        "base_ref": "wt-3030-index-hint-race",
        "created_at": "Friday Dec 02, 2016 at 13:25 GMT",
        "updated_at": "Monday Dec 05, 2016 at 00:47 GMT",
        "closed_at": "Monday Dec 05, 2016 at 00:47 GMT",
        "merged_at": "Monday Dec 05, 2016 at 00:47 GMT"
    },
    {
        "key": "WT-3052",
        "number": 3166,
        "state": "closed",
        "title": "WT-3052 Improve search if index hint is wrong",
        "body": "After a split, child references in an internal page can end up in a different location in the index array.  WiredTiger maintains a hint of the expected offset, and searches if the expected reference is not found at the location of the hint.\r\n\r\nThis change fixes a race where multiple threads could set the hint to different values (if they are searching different versions of an index).  This could lead to a search returning the wrong slot, because we were writing the correct index into the hint, *then* reading from the hint into the returned value.",
        "base_ref": "develop",
        "created_at": "Friday Dec 02, 2016 at 04:14 GMT",
        "updated_at": "Wednesday Dec 07, 2016 at 03:07 GMT",
        "closed_at": "Wednesday Dec 07, 2016 at 03:07 GMT",
        "merged_at": "Wednesday Dec 07, 2016 at 03:07 GMT"
    },
    {
        "key": "WT-3038",
        "number": 3165,
        "state": "closed",
        "title": "WT-3038 Selected backports to improve page splitting and avoid stuck \u2026",
        "body": "\u2026test/format workloads",
        "base_ref": "mongodb-3.0",
        "created_at": "Friday Dec 02, 2016 at 00:45 GMT",
        "updated_at": "Monday Dec 05, 2016 at 01:00 GMT",
        "closed_at": "Monday Dec 05, 2016 at 01:00 GMT",
        "merged_at": "Monday Dec 05, 2016 at 01:00 GMT"
    },
    {
        "key": "WT-3048",
        "number": 3164,
        "state": "closed",
        "title": "WT-3048 WiredTiger maximum size warning uses the wrong format.",
        "body": "WT-3048 WiredTiger maximum size warning uses the wrong format.",
        "base_ref": "develop",
        "created_at": "Thursday Dec 01, 2016 at 16:45 GMT",
        "updated_at": "Thursday Dec 01, 2016 at 22:25 GMT",
        "closed_at": "Thursday Dec 01, 2016 at 22:25 GMT",
        "merged_at": "Thursday Dec 01, 2016 at 22:25 GMT"
    },
    {
        "key": "WT-3037",
        "number": 3163,
        "state": "closed",
        "title": "WT-3037 Clean up some log slot comments.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 30, 2016 at 18:44 GMT",
        "updated_at": "Wednesday Nov 30, 2016 at 19:06 GMT",
        "closed_at": "Wednesday Nov 30, 2016 at 19:06 GMT",
        "merged_at": "Wednesday Nov 30, 2016 at 19:06 GMT"
    },
    {
        "key": "WT-3049",
        "number": 3162,
        "state": "closed",
        "title": "WT-3049 Backport test format",
        "body": "Not ready for review.",
        "base_ref": "mongodb-3.0",
        "created_at": "Tuesday Nov 29, 2016 at 04:18 GMT",
        "updated_at": "Monday Dec 05, 2016 at 01:03 GMT",
        "closed_at": "Monday Dec 05, 2016 at 01:03 GMT",
        "merged_at": "Monday Dec 05, 2016 at 01:03 GMT"
    },
    {
        "key": "WT-3034",
        "number": 3161,
        "state": "closed",
        "title": "WT-3034 Add support for named snapshots including updates.",
        "body": "This supports a model where one session performs updates in a\r\ntransaction after creating a named snapshot and other sessions can use\r\nthat snapshot and read the updates.  In other words, they see exactly\r\nwhat the updating session sees.",
        "base_ref": "develop",
        "created_at": "Monday Nov 28, 2016 at 06:01 GMT",
        "updated_at": "Monday Dec 05, 2016 at 00:49 GMT",
        "closed_at": "Monday Dec 05, 2016 at 00:49 GMT",
        "merged_at": "Monday Dec 05, 2016 at 00:49 GMT"
    },
    {
        "key": "WT-2969",
        "number": 3160,
        "state": "closed",
        "title": "WT-2969 Possible snapshot corruption during compaction",
        "body": "@michaelcahill, @agorrod, I believe this is ready for review.",
        "base_ref": "develop",
        "created_at": "Monday Nov 28, 2016 at 00:22 GMT",
        "updated_at": "Tuesday Dec 06, 2016 at 03:06 GMT",
        "closed_at": "Tuesday Dec 06, 2016 at 03:06 GMT",
        "merged_at": "Tuesday Dec 06, 2016 at 03:06 GMT"
    },
    {
        "key": "WT-3028",
        "number": 3159,
        "state": "closed",
        "title": "WT-3028 Directly track if reconciliation makes progress.",
        "body": "Give up on page rewrites that don't use any updates.",
        "base_ref": "develop",
        "created_at": "Monday Nov 28, 2016 at 00:06 GMT",
        "updated_at": "Tuesday Nov 29, 2016 at 17:30 GMT",
        "closed_at": "Tuesday Nov 29, 2016 at 05:58 GMT",
        "merged_at": "Tuesday Nov 29, 2016 at 05:58 GMT"
    },
    {
        "key": "WT-3028",
        "number": 3158,
        "state": "closed",
        "title": "WT-3028 Count eviction of dirty pages as progress.",
        "body": "Fixes part of WT-3023, which was only supposed to avoid counting page\r\nrewrites as progress...",
        "base_ref": "develop",
        "created_at": "Friday Nov 25, 2016 at 01:08 GMT",
        "updated_at": "Friday Nov 25, 2016 at 05:41 GMT",
        "closed_at": "Friday Nov 25, 2016 at 05:41 GMT",
        "merged_at": "Friday Nov 25, 2016 at 05:41 GMT"
    },
    {
        "key": "WT-3030",
        "number": 3157,
        "state": "closed",
        "title": "WT-3030 Test failure indicating invalid key order during traversal",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 24, 2016 at 14:53 GMT",
        "updated_at": "Friday Dec 02, 2016 at 12:03 GMT",
        "closed_at": "Friday Dec 02, 2016 at 12:02 GMT",
        "merged_at": "Friday Dec 02, 2016 at 12:02 GMT"
    },
    {
        "key": "WT-3026",
        "number": 3156,
        "state": "closed",
        "title": "WT-3026 log trickle",
        "body": "Not yet ready for review.",
        "base_ref": "develop",
        "created_at": "Friday Nov 18, 2016 at 22:27 GMT",
        "updated_at": "Friday Apr 07, 2017 at 04:48 GMT",
        "closed_at": "Wednesday Apr 05, 2017 at 15:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2670",
        "number": 3155,
        "state": "closed",
        "title": "WT-2670 Add access_pattern_hint configuration option",
        "body": "Not ready for review.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 16, 2016 at 18:48 GMT",
        "updated_at": "Monday Dec 05, 2016 at 04:23 GMT",
        "closed_at": "Monday Dec 05, 2016 at 04:22 GMT",
        "merged_at": "Monday Dec 05, 2016 at 04:22 GMT"
    },
    {
        "key": "WT-3025",
        "number": 3154,
        "state": "closed",
        "title": "WT-3025 Fix error path in log_force_sync.",
        "body": "@michaelcahill Please review this minor fix.  While doing WT-3000 I noticed this bug in the error path.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 16, 2016 at 17:07 GMT",
        "updated_at": "Thursday Nov 17, 2016 at 01:04 GMT",
        "closed_at": "Thursday Nov 17, 2016 at 01:04 GMT",
        "merged_at": "Thursday Nov 17, 2016 at 01:04 GMT"
    },
    {
        "key": "WT-3000",
        "number": 3153,
        "state": "closed",
        "title": "WT-3000 Backport fixes and test to 3.0.",
        "body": "@michaelcahill Please review this backport of the fixes and test for WT-3000 for 3.0.  It was a bit more complicated than originally thought.\r\nThere are a few things to note:\r\n* I backported the whole `test/recovery` directory.  That includes the `truncated-log` test as well.  That was easier than teasing it apart, but I can do that if you don't want that second test.\r\n* I needed to backport other fixes in order to get the test to pass.  In particular, the fixes for WT-2184 and WT-2559 were required to get the test to pass.\r\n* The fix for WT-2559 says it is fixed in 3.0.13 but that is not the case.  There is no 3.0 backport in that ticket and I'm not sure why/how that got set there.\r\n* The fix for WT-2184 was needed for recovery.\r\n* I needed to fix the if/else in `log_write_internal` otherwise some calls weren't correctly waiting in write-no-sync mode.  That mode will have a perf impact, but MongoDB doesn't use that mode.",
        "base_ref": "mongodb-3.0",
        "created_at": "Wednesday Nov 16, 2016 at 14:14 GMT",
        "updated_at": "Thursday Nov 17, 2016 at 00:50 GMT",
        "closed_at": "Thursday Nov 17, 2016 at 00:50 GMT",
        "merged_at": "Thursday Nov 17, 2016 at 00:50 GMT"
    },
    {
        "key": "WT-3024",
        "number": 3152,
        "state": "closed",
        "title": "WT-3024 Fix a hang on close caused by leaving a transaction ID pinned.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 16, 2016 at 05:35 GMT",
        "updated_at": "Wednesday Nov 16, 2016 at 05:50 GMT",
        "closed_at": "Wednesday Nov 16, 2016 at 05:50 GMT",
        "merged_at": "Wednesday Nov 16, 2016 at 05:50 GMT"
    },
    {
        "key": "WT-3023",
        "number": 3151,
        "state": "closed",
        "title": "WT-3023 Don't treat splits as eviction making progress.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 16, 2016 at 01:53 GMT",
        "updated_at": "Wednesday Nov 16, 2016 at 05:49 GMT",
        "closed_at": "Wednesday Nov 16, 2016 at 05:49 GMT",
        "merged_at": "Wednesday Nov 16, 2016 at 05:49 GMT"
    },
    {
        "key": "WT-3021",
        "number": 3150,
        "state": "closed",
        "title": "WT-3021 fixes for java log example, raw mode in java, and raw mode in log cursors",
        "body": "Here are a set of fixes needed to get java log example to fully work.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 15, 2016 at 18:23 GMT",
        "updated_at": "Friday Dec 02, 2016 at 06:46 GMT",
        "closed_at": "Friday Dec 02, 2016 at 06:46 GMT",
        "merged_at": "Friday Dec 02, 2016 at 06:46 GMT"
    },
    {
        "key": "WT-0000",
        "number": 3149,
        "state": "closed",
        "title": "WT-0000 Test of changes to avoid repeated eviction.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 15, 2016 at 04:53 GMT",
        "updated_at": "Friday Dec 02, 2016 at 06:49 GMT",
        "closed_at": "Friday Dec 02, 2016 at 06:49 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3022",
        "number": 3148,
        "state": "closed",
        "title": "WT-3022 Change lsm_tree flags to fields to prevent race conditions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 15, 2016 at 02:20 GMT",
        "updated_at": "Tuesday Nov 15, 2016 at 06:03 GMT",
        "closed_at": "Tuesday Nov 15, 2016 at 06:03 GMT",
        "merged_at": "Tuesday Nov 15, 2016 at 06:03 GMT"
    },
    {
        "key": "WT-3020",
        "number": 3147,
        "state": "closed",
        "title": "WT-3020 Always make LSM chunks evictable when they are switched out.",
        "body": "Reverts a bug introduced in WT-3012.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 15, 2016 at 00:07 GMT",
        "updated_at": "Tuesday Nov 15, 2016 at 01:12 GMT",
        "closed_at": "Tuesday Nov 15, 2016 at 01:12 GMT",
        "merged_at": "Tuesday Nov 15, 2016 at 01:12 GMT"
    },
    {
        "key": "WT-3015",
        "number": 3146,
        "state": "closed",
        "title": "WT-3015 Change when we will evict internal pages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 14, 2016 at 05:55 GMT",
        "updated_at": "Tuesday Nov 15, 2016 at 01:17 GMT",
        "closed_at": "Tuesday Nov 15, 2016 at 01:17 GMT",
        "merged_at": "Tuesday Nov 15, 2016 at 01:17 GMT"
    },
    {
        "key": "WT-2962",
        "number": 3145,
        "state": "closed",
        "title": "WT-2962 Fix a memory leak introduced by this change.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 14, 2016 at 04:21 GMT",
        "updated_at": "Monday Nov 14, 2016 at 04:51 GMT",
        "closed_at": "Monday Nov 14, 2016 at 04:51 GMT",
        "merged_at": "Monday Nov 14, 2016 at 04:51 GMT"
    },
    {
        "key": "WT-2984",
        "number": 3144,
        "state": "closed",
        "title": "WT-2984 Keep sufficient history in the metadata for queries.",
        "body": "Since we treat the checkpoint transaction specially, we also have to\r\ntrack the amount of history required for the metadata specially.\r\nPreviously, there was a window where a query started while a checkpoint\r\nwas running could fail to see the results of the checkpoint when it\r\nqueried the metadata.",
        "base_ref": "develop",
        "created_at": "Monday Nov 14, 2016 at 04:09 GMT",
        "updated_at": "Monday Nov 14, 2016 at 16:22 GMT",
        "closed_at": "Monday Nov 14, 2016 at 16:22 GMT",
        "merged_at": "Monday Nov 14, 2016 at 16:22 GMT"
    },
    {
        "key": "WT-3012",
        "number": 3143,
        "state": "closed",
        "title": "WT-3012 Check a btree is LSM primary before switching.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Nov 12, 2016 at 03:56 GMT",
        "updated_at": "Sunday Nov 13, 2016 at 22:36 GMT",
        "closed_at": "Sunday Nov 13, 2016 at 22:36 GMT",
        "merged_at": "Sunday Nov 13, 2016 at 22:36 GMT"
    },
    {
        "key": "WT-3018",
        "number": 3142,
        "state": "closed",
        "title": "WT-3018 lint",
        "body": "Ready for review/merge.",
        "base_ref": "develop",
        "created_at": "Friday Nov 11, 2016 at 12:33 GMT",
        "updated_at": "Friday Nov 11, 2016 at 14:18 GMT",
        "closed_at": "Friday Nov 11, 2016 at 14:18 GMT",
        "merged_at": "Friday Nov 11, 2016 at 14:18 GMT"
    },
    {
        "key": "WT-3017",
        "number": 3141,
        "state": "closed",
        "title": "WT-3017 Don't set NULL hazard pointers.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 11, 2016 at 06:55 GMT",
        "updated_at": "Monday Nov 14, 2016 at 22:07 GMT",
        "closed_at": "Sunday Nov 13, 2016 at 22:39 GMT",
        "merged_at": "Sunday Nov 13, 2016 at 22:39 GMT"
    },
    {
        "key": "WT-3016",
        "number": 3140,
        "state": "closed",
        "title": "WT-3016 Change test to allow it to work without ftruncate support",
        "body": "Not quite ready for merge. Will test using new wiredtiger-linux-no-ftruncate jenkins job.",
        "base_ref": "develop",
        "created_at": "Thursday Nov 10, 2016 at 14:49 GMT",
        "updated_at": "Friday Nov 11, 2016 at 14:33 GMT",
        "closed_at": "Friday Nov 11, 2016 at 14:33 GMT",
        "merged_at": "Friday Nov 11, 2016 at 14:33 GMT"
    },
    {
        "key": "WT-3000",
        "number": 3139,
        "state": "closed",
        "title": "WT-3000 Fix missing records at end of previous log file",
        "body": "Not yet ready to merge.  Just pushed the test changes to reproduce the problem.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 08, 2016 at 16:40 GMT",
        "updated_at": "Friday Nov 11, 2016 at 06:08 GMT",
        "closed_at": "Friday Nov 11, 2016 at 06:08 GMT",
        "merged_at": "Friday Nov 11, 2016 at 06:08 GMT"
    },
    {
        "key": "WT-3014",
        "number": 3138,
        "state": "closed",
        "title": "WT-3014 Add GCC/clang support for ELF symbol visibility.",
        "body": "@michaelcahill, reading up on your LTO comment in #3119, I realized the compilers we use support attributes to declare symbols hidden/visible, which should result in smaller symbol tables, less need for GOT/relocation instructions and less chance of unexpected API use.\r\n\r\nThis doesn't help MongoDB because it loads against our object files, not our libraries, although it would potentially help if the build is configured with `--link-model=dynamic`.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 08, 2016 at 16:11 GMT",
        "updated_at": "Monday Dec 05, 2016 at 03:21 GMT",
        "closed_at": "Monday Dec 05, 2016 at 03:21 GMT",
        "merged_at": "Monday Dec 05, 2016 at 03:21 GMT"
    },
    {
        "key": "WT-2962",
        "number": 3137,
        "state": "closed",
        "title": "WT-2962 Allow configuration of builtin extensions.",
        "body": "While in the area, fix sending \"config={values}\" to extensions: just\r\nthe values should be passed in.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 08, 2016 at 05:21 GMT",
        "updated_at": "Monday Nov 14, 2016 at 03:09 GMT",
        "closed_at": "Monday Nov 14, 2016 at 03:09 GMT",
        "merged_at": "Monday Nov 14, 2016 at 03:09 GMT"
    },
    {
        "key": "WT-3012",
        "number": 3136,
        "state": "closed",
        "title": "WT-3012 Don't track the LSM Primary as part of dirty bytes in cache",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 08, 2016 at 05:10 GMT",
        "updated_at": "Saturday Nov 12, 2016 at 03:56 GMT",
        "closed_at": "Friday Nov 11, 2016 at 12:04 GMT",
        "merged_at": "Friday Nov 11, 2016 at 12:04 GMT"
    },
    {
        "key": "WT-3011",
        "number": 3135,
        "state": "closed",
        "title": "WT-3011 __wt_curjoin_open() saves the wrong URI in the cursor.",
        "body": "@ddanderson, this one is for you, please.\r\n\r\nTwo changes.\r\n\r\nFirst, Coverity had a false positive about some code in `__wt_curjoin_open()`, and while looking at it, I noticed we were storing `table:xxx` in the cursor's `internal_uri` field rather than `join:table:xxx`, which looks wrong to me. By happy coincidence, this change should also keep Coverity quiet.\r\n\r\nSecond, there was one thing I noticed awhile ago was that the __wt_json_token() error handling was a little strange. All but one error wrote out a message and then  fell out of the switch statement to fail (setting the returned token type to -1), and the one other error simply returned (not setting the returned token type). I switched all of the errors to immediately return instead of falling out of the switch statement.\r\n\r\nIf I'm misunderstanding what's going on here, just kill either or both changes!",
        "base_ref": "develop",
        "created_at": "Monday Nov 07, 2016 at 12:31 GMT",
        "updated_at": "Saturday Nov 12, 2016 at 03:56 GMT",
        "closed_at": "Monday Nov 07, 2016 at 18:13 GMT",
        "merged_at": "Monday Nov 07, 2016 at 18:13 GMT"
    },
    {
        "key": "WT-3010",
        "number": 3134,
        "state": "closed",
        "title": "WT-3010 Add a check to avoid cache evictions during connection close",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Nov 07, 2016 at 06:27 GMT",
        "updated_at": "Tuesday Nov 08, 2016 at 03:55 GMT",
        "closed_at": "Tuesday Nov 08, 2016 at 03:55 GMT",
        "merged_at": "Tuesday Nov 08, 2016 at 03:55 GMT"
    },
    {
        "key": "WT-3008",
        "number": 3133,
        "state": "closed",
        "title": "WT-3008 Move wtperf stress jobs to new stress runner folder",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Nov 07, 2016 at 04:07 GMT",
        "updated_at": "Monday Nov 07, 2016 at 04:22 GMT",
        "closed_at": "Monday Nov 07, 2016 at 04:22 GMT",
        "merged_at": "Monday Nov 07, 2016 at 04:22 GMT"
    },
    {
        "key": "WT-3009",
        "number": 3132,
        "state": "closed",
        "title": "WT-3009 Remove the eviction_dirty_target from test/format runs with l\u2026",
        "body": "\u2026ess than 20MB cache",
        "base_ref": "develop",
        "created_at": "Monday Nov 07, 2016 at 01:16 GMT",
        "updated_at": "Monday Nov 07, 2016 at 02:53 GMT",
        "closed_at": "Monday Nov 07, 2016 at 02:53 GMT",
        "merged_at": "Monday Nov 07, 2016 at 02:53 GMT"
    },
    {
        "key": "WT-3008",
        "number": 3131,
        "state": "closed",
        "title": "WT-3008 Move wtperf stress jobs to new stress runner folder",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Nov 06, 2016 at 23:12 GMT",
        "updated_at": "Monday Nov 07, 2016 at 02:59 GMT",
        "closed_at": "Monday Nov 07, 2016 at 02:59 GMT",
        "merged_at": "Monday Nov 07, 2016 at 02:59 GMT"
    },
    {
        "key": "WT-3008",
        "number": 3130,
        "state": "closed",
        "title": "WT-3008 Move wtperf stress jobs to new stress runner folder",
        "body": "",
        "base_ref": "mongodb-3.4",
        "created_at": "Sunday Nov 06, 2016 at 23:11 GMT",
        "updated_at": "Monday Nov 07, 2016 at 01:02 GMT",
        "closed_at": "Monday Nov 07, 2016 at 01:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3008",
        "number": 3129,
        "state": "closed",
        "title": "WT-3008 Move wtperf stress jobs to new stress runner folder",
        "body": "",
        "base_ref": "mongodb-3.2",
        "created_at": "Sunday Nov 06, 2016 at 23:11 GMT",
        "updated_at": "Monday Nov 07, 2016 at 01:02 GMT",
        "closed_at": "Monday Nov 07, 2016 at 01:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-3008",
        "number": 3128,
        "state": "closed",
        "title": "WT-3008 Move wtperf stress jobs to new stress runner folder",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Sunday Nov 06, 2016 at 23:10 GMT",
        "updated_at": "Monday Nov 07, 2016 at 01:02 GMT",
        "closed_at": "Monday Nov 07, 2016 at 01:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2968",
        "number": 3127,
        "state": "closed",
        "title": "WT-2968 Fix a segfault when a drop races with closing a backup cursor.",
        "body": "We were clearing the shared pointer to the list of filenames in the\r\nbackup, then releasing the hotbackup lock before clearing the hotbackup\r\nflag.  That means drops need to check both the flag and that the pointer\r\nis non-NULL.",
        "base_ref": "develop",
        "created_at": "Sunday Nov 06, 2016 at 23:00 GMT",
        "updated_at": "Monday Nov 07, 2016 at 00:25 GMT",
        "closed_at": "Monday Nov 07, 2016 at 00:25 GMT",
        "merged_at": "Monday Nov 07, 2016 at 00:25 GMT"
    },
    {
        "key": "ER-26753",
        "number": 3126,
        "state": "closed",
        "title": "SERVER-26753 Don't spin indefinitely trying to get a read lock.",
        "body": "Even if it appears to be available, we're burning CPU.",
        "base_ref": "develop",
        "created_at": "Friday Nov 04, 2016 at 03:43 GMT",
        "updated_at": "Friday Nov 04, 2016 at 06:09 GMT",
        "closed_at": "Friday Nov 04, 2016 at 06:09 GMT",
        "merged_at": "Friday Nov 04, 2016 at 06:09 GMT"
    },
    {
        "key": "ER-26889",
        "number": 3125,
        "state": "closed",
        "title": "SERVER-26889 Got signal: 11 (Segmentation fault) in 3.0.13",
        "body": "Fix 552a33b (cherry-picked from 521270d). When the commit was merged, a line was dropped.\r\n\r\n@michaelcahill, for your review: you can see the difference if you compare 521270d and 552a33b, the line `ref->addr = addr;` should have been removed and wasn't. I think the result is `ref->addr` can potentially point to freed memory.",
        "base_ref": "mongodb-3.0",
        "created_at": "Thursday Nov 03, 2016 at 13:24 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 20:28 GMT",
        "closed_at": "Thursday Nov 03, 2016 at 20:28 GMT",
        "merged_at": "Thursday Nov 03, 2016 at 20:28 GMT"
    },
    {
        "key": "WT-3003",
        "number": 3124,
        "state": "closed",
        "title": "WT-3003 Fix doxygen comment blocks.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 03, 2016 at 03:20 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 03:20 GMT",
        "closed_at": "Thursday Nov 03, 2016 at 03:20 GMT",
        "merged_at": "Thursday Nov 03, 2016 at 03:20 GMT"
    },
    {
        "key": "WT-2964",
        "number": 3123,
        "state": "closed",
        "title": "WT-2964 Walk for longer when only looking for dirty pages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 03, 2016 at 03:01 GMT",
        "updated_at": "Saturday Nov 12, 2016 at 03:57 GMT",
        "closed_at": "Friday Nov 04, 2016 at 04:12 GMT",
        "merged_at": "Friday Nov 04, 2016 at 04:12 GMT"
    },
    {
        "key": "WT-2999",
        "number": 3122,
        "state": "closed",
        "title": "WT-2999 Added test case that demonstrates a leak in cursor joins with custom extractors",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 03, 2016 at 01:32 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 02:37 GMT",
        "closed_at": "Thursday Nov 03, 2016 at 02:37 GMT",
        "merged_at": "Thursday Nov 03, 2016 at 02:37 GMT"
    },
    {
        "key": "WT-3003",
        "number": 3121,
        "state": "closed",
        "title": "WT-3003 Don't generate log record and op types.  They must be static.",
        "body": "@keithbostic and @michaelcahill  Please review.  I added comments in log_data.py to remind people to add them to the include file.  Is it clear and visible enough?  Is there an easy way to verify they did add the `#define` in one of the`s_` scripts?",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 02, 2016 at 15:10 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 02:41 GMT",
        "closed_at": "Thursday Nov 03, 2016 at 02:41 GMT",
        "merged_at": "Thursday Nov 03, 2016 at 02:41 GMT"
    },
    {
        "key": "WT-3005",
        "number": 3120,
        "state": "closed",
        "title": "WT-3005 Add top-level .gitignore file.",
        "body": "I don't (yet) use a `.gitignore` file in my workflow and someone asked on wiredtiger-users, so I played with it a bit out of curiosity.\r\n\r\nFeel free to discard without a second thought if nobody wants it.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 02, 2016 at 14:54 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 02:42 GMT",
        "closed_at": "Thursday Nov 03, 2016 at 02:42 GMT",
        "merged_at": "Thursday Nov 03, 2016 at 02:42 GMT"
    },
    {
        "key": "WT-3004",
        "number": 3119,
        "state": "closed",
        "title": "WT-3004 lint: declare functions that don't return a value as void",
        "body": "Ready for review/merge.",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 02, 2016 at 13:50 GMT",
        "updated_at": "Tuesday Nov 08, 2016 at 14:24 GMT",
        "closed_at": "Tuesday Nov 08, 2016 at 14:24 GMT",
        "merged_at": "Tuesday Nov 08, 2016 at 14:24 GMT"
    },
    {
        "key": "WT-3007",
        "number": 3118,
        "state": "closed",
        "title": "WT-3007 Remove duplicated word in comment",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday Nov 02, 2016 at 12:44 GMT",
        "updated_at": "Wednesday Nov 02, 2016 at 23:10 GMT",
        "closed_at": "Wednesday Nov 02, 2016 at 23:10 GMT",
        "merged_at": "Wednesday Nov 02, 2016 at 23:10 GMT"
    },
    {
        "key": "WT-2999",
        "number": 3117,
        "state": "closed",
        "title": "WT-2999 free memory related to cursor used with custom extractors during joins.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 01, 2016 at 16:53 GMT",
        "updated_at": "Wednesday Nov 02, 2016 at 02:55 GMT",
        "closed_at": "Wednesday Nov 02, 2016 at 02:55 GMT",
        "merged_at": "Wednesday Nov 02, 2016 at 02:55 GMT"
    },
    {
        "key": "WT-3002",
        "number": 3116,
        "state": "closed",
        "title": "WT-3002 Allow applications to exempt threads from eviction.",
        "body": "@michaelcahill, Bruce Lucas & I were discussing how we lost ftdc data if the ftdc data thread was picked to help with eviction.\r\n\r\nWould it be reasonable to offer applications a configuration to designate high-latency threads exempt from WiredTiger tasks?",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 01, 2016 at 14:03 GMT",
        "updated_at": "Tuesday Nov 08, 2016 at 12:23 GMT",
        "closed_at": "Tuesday Nov 08, 2016 at 12:23 GMT",
        "merged_at": "Tuesday Nov 08, 2016 at 12:23 GMT"
    },
    {
        "key": "WT-3001",
        "number": 3115,
        "state": "closed",
        "title": "WT-3001 WT_EXTENSION_API references are named inconsistently.",
        "body": "@michaelcahill, I noticed we were naming `WT_EXTENSION_API` objects inconsistently when I was working on the zstd changes (probably because you and I each wrote a chunk). The core code consistently uses `wt_api`, so I switched the extension code to match.\r\n\r\nThere's no other change in this branch.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 01, 2016 at 11:58 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 02:59 GMT",
        "closed_at": "Thursday Nov 03, 2016 at 02:56 GMT",
        "merged_at": "Thursday Nov 03, 2016 at 02:56 GMT"
    },
    {
        "key": "WT-2975",
        "number": 3114,
        "state": "closed",
        "title": "WT-2975 Fix a leak of statistics data when reopening handles.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 01, 2016 at 05:41 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 02:58 GMT",
        "closed_at": "Tuesday Nov 01, 2016 at 11:20 GMT",
        "merged_at": "Tuesday Nov 01, 2016 at 11:20 GMT"
    },
    {
        "key": "ER-26753",
        "number": 3113,
        "state": "closed",
        "title": "SERVER-26753 Don't spin on a read-lock in a tight loop.",
        "body": "We could be starving a thread that we are waiting on of CPU.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 01, 2016 at 02:17 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 02:58 GMT",
        "closed_at": "Wednesday Nov 02, 2016 at 02:58 GMT",
        "merged_at": "Wednesday Nov 02, 2016 at 02:58 GMT"
    },
    {
        "key": "WT-2964",
        "number": 3112,
        "state": "closed",
        "title": "WT-2964 Alter evict walk to not fill all its slots with internal page\u2026",
        "body": "\u2026s when running in aggressive mode",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 01, 2016 at 01:05 GMT",
        "updated_at": "Thursday Nov 03, 2016 at 03:02 GMT",
        "closed_at": "Thursday Nov 03, 2016 at 03:02 GMT",
        "merged_at": "Thursday Nov 03, 2016 at 03:02 GMT"
    },
    {
        "key": "WT-2953",
        "number": 3111,
        "state": "closed",
        "title": "WT-2953 During reconciliation only check for checkpoint+LAS collision\u2026",
        "body": "\u2026 if we have used the LAS table.",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 01, 2016 at 00:57 GMT",
        "updated_at": "Tuesday Nov 01, 2016 at 03:48 GMT",
        "closed_at": "Tuesday Nov 01, 2016 at 03:48 GMT",
        "merged_at": "Tuesday Nov 01, 2016 at 03:48 GMT"
    },
    {
        "key": "WT-2998",
        "number": 3110,
        "state": "closed",
        "title": "WT-2998 add error messages to error returns that might be confusing.",
        "body": " Add error messages to error returns that might be confusing.\n",
        "base_ref": "develop",
        "created_at": "Saturday Oct 29, 2016 at 19:44 GMT",
        "updated_at": "Tuesday Nov 01, 2016 at 04:32 GMT",
        "closed_at": "Tuesday Nov 01, 2016 at 04:32 GMT",
        "merged_at": "Tuesday Nov 01, 2016 at 04:32 GMT"
    },
    {
        "key": "WT-2989",
        "number": 3109,
        "state": "closed",
        "title": "WT-2989 Instrumented build with asserts added",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 28, 2016 at 05:17 GMT",
        "updated_at": "Monday Dec 05, 2016 at 04:42 GMT",
        "closed_at": "Monday Dec 05, 2016 at 04:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2968",
        "number": 3108,
        "state": "closed",
        "title": "WT-2968 Fix Jenkins failures from merge.",
        "body": "Reduce number of tables created by half because zseries jenkins job hit the open file limit.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 26, 2016 at 15:09 GMT",
        "updated_at": "Wednesday Oct 26, 2016 at 16:46 GMT",
        "closed_at": "Wednesday Oct 26, 2016 at 16:46 GMT",
        "merged_at": "Wednesday Oct 26, 2016 at 16:46 GMT"
    },
    {
        "key": "WT-2975",
        "number": 3107,
        "state": "closed",
        "title": "WT-2975 Reduce size of statistics in dhandle structure",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 24, 2016 at 12:14 GMT",
        "updated_at": "Tuesday Nov 01, 2016 at 03:57 GMT",
        "closed_at": "Tuesday Nov 01, 2016 at 03:57 GMT",
        "merged_at": "Tuesday Nov 01, 2016 at 03:57 GMT"
    },
    {
        "key": "WT-2991",
        "number": 3106,
        "state": "closed",
        "title": "WT-2991 Fix coverity REVERSE_INULL",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 24, 2016 at 06:28 GMT",
        "updated_at": "Monday Oct 24, 2016 at 14:16 GMT",
        "closed_at": "Monday Oct 24, 2016 at 14:16 GMT",
        "merged_at": "Monday Oct 24, 2016 at 14:16 GMT"
    },
    {
        "key": "WT-2904",
        "number": 3105,
        "state": "closed",
        "title": "WT-2904 Revert overly strong assertion.",
        "body": "It broke backward compatability.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 24, 2016 at 00:15 GMT",
        "updated_at": "Monday Oct 24, 2016 at 00:33 GMT",
        "closed_at": "Monday Oct 24, 2016 at 00:33 GMT",
        "merged_at": "Monday Oct 24, 2016 at 00:33 GMT"
    },
    {
        "key": "WT-2988",
        "number": 3104,
        "state": "closed",
        "title": "WT-2988 __wt_epoch potentially returns garbage values.",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Oct 22, 2016 at 13:14 GMT",
        "updated_at": "Saturday Oct 22, 2016 at 14:18 GMT",
        "closed_at": "Saturday Oct 22, 2016 at 14:18 GMT",
        "merged_at": "Saturday Oct 22, 2016 at 14:18 GMT"
    },
    {
        "key": "WT-2987",
        "number": 3103,
        "state": "closed",
        "title": "WT-2987 opening a cursor on an incomplete table drops core",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 21, 2016 at 20:32 GMT",
        "updated_at": "Sunday Oct 23, 2016 at 22:49 GMT",
        "closed_at": "Sunday Oct 23, 2016 at 22:49 GMT",
        "merged_at": "Sunday Oct 23, 2016 at 22:49 GMT"
    },
    {
        "key": "WT-2904",
        "number": 3102,
        "state": "closed",
        "title": "WT-2904 reported checkpoint size many times data size",
        "body": "We weren't adjusting the rolling checkpoint size for the size of the root page.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 21, 2016 at 19:35 GMT",
        "updated_at": "Sunday Oct 23, 2016 at 22:07 GMT",
        "closed_at": "Sunday Oct 23, 2016 at 22:07 GMT",
        "merged_at": "Sunday Oct 23, 2016 at 22:07 GMT"
    },
    {
        "key": "WT-2968",
        "number": 3101,
        "state": "closed",
        "title": "WT-2968 Don't open file handles on backup.",
        "body": "@agorrod Take a look at this branch.  It evolved as I went along and after chatting with @keithbostic we realized we should be able to protect schema operations adequately and we don't need the open handles in backup.  \n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 20, 2016 at 23:22 GMT",
        "updated_at": "Wednesday Oct 26, 2016 at 14:14 GMT",
        "closed_at": "Wednesday Oct 26, 2016 at 14:14 GMT",
        "merged_at": "Wednesday Oct 26, 2016 at 14:14 GMT"
    },
    {
        "key": "WT-2985",
        "number": 3100,
        "state": "closed",
        "title": "WT-2985 checkpoint core dump",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 19, 2016 at 23:27 GMT",
        "updated_at": "Thursday Oct 20, 2016 at 21:13 GMT",
        "closed_at": "Thursday Oct 20, 2016 at 21:13 GMT",
        "merged_at": "Thursday Oct 20, 2016 at 21:13 GMT"
    },
    {
        "key": "WT-2415",
        "number": 3099,
        "state": "closed",
        "title": "WT-2415 Add option for joins to return false positives from the Bloom filter.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 18, 2016 at 17:24 GMT",
        "updated_at": "Tuesday Oct 25, 2016 at 03:15 GMT",
        "closed_at": "Tuesday Oct 25, 2016 at 03:15 GMT",
        "merged_at": "Tuesday Oct 25, 2016 at 03:15 GMT"
    },
    {
        "key": "WT-2945",
        "number": 3098,
        "state": "closed",
        "title": "WT-2945 Occasional hang running reconfigure fuzz test",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 17, 2016 at 12:37 GMT",
        "updated_at": "Wednesday Oct 26, 2016 at 03:36 GMT",
        "closed_at": "Wednesday Oct 26, 2016 at 03:36 GMT",
        "merged_at": "Wednesday Oct 26, 2016 at 03:36 GMT"
    },
    {
        "key": "WT-2977",
        "number": 3097,
        "state": "closed",
        "title": "WT-2977 Remove stash and check code from LSM test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 17, 2016 at 01:17 GMT",
        "updated_at": "Monday Oct 17, 2016 at 03:59 GMT",
        "closed_at": "Monday Oct 17, 2016 at 03:59 GMT",
        "merged_at": "Monday Oct 17, 2016 at 03:59 GMT"
    },
    {
        "key": "WT-2976",
        "number": 3096,
        "state": "closed",
        "title": "WT-2976 Add a statistic tracking how long app threads spend reading",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Oct 16, 2016 at 23:42 GMT",
        "updated_at": "Tuesday Oct 18, 2016 at 04:14 GMT",
        "closed_at": "Tuesday Oct 18, 2016 at 04:14 GMT",
        "merged_at": "Tuesday Oct 18, 2016 at 04:14 GMT"
    },
    {
        "key": "WT-2974",
        "number": 3095,
        "state": "closed",
        "title": "WT-2974 lint",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 14, 2016 at 13:17 GMT",
        "updated_at": "Sunday Oct 16, 2016 at 22:03 GMT",
        "closed_at": "Sunday Oct 16, 2016 at 22:01 GMT",
        "merged_at": "Sunday Oct 16, 2016 at 22:01 GMT"
    },
    {
        "key": "WT-2954",
        "number": 3094,
        "state": "closed",
        "title": "WT-2954 Enable fast appends with small in-memory pages.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 14, 2016 at 06:18 GMT",
        "updated_at": "Sunday Oct 23, 2016 at 23:07 GMT",
        "closed_at": "Sunday Oct 23, 2016 at 23:07 GMT",
        "merged_at": "Sunday Oct 23, 2016 at 23:07 GMT"
    },
    {
        "key": "WT-2971",
        "number": 3093,
        "state": "closed",
        "title": "WT-2971 Add details on raw-compression into WT documentation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 14, 2016 at 03:31 GMT",
        "updated_at": "Wednesday Oct 26, 2016 at 06:18 GMT",
        "closed_at": "Wednesday Oct 26, 2016 at 06:18 GMT",
        "merged_at": "Wednesday Oct 26, 2016 at 06:18 GMT"
    },
    {
        "key": "WT-2970",
        "number": 3092,
        "state": "closed",
        "title": "WT-2970 evict lockstats",
        "body": "@agorrod and @keithbostic this is ready for review.  The one test I ran with, `evict-btree.wtperf` indicated that the `evict_walk_lock` may not be worthwhile as it was taken < 5 times during an eviction test.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 13, 2016 at 21:17 GMT",
        "updated_at": "Thursday Nov 10, 2016 at 18:02 GMT",
        "closed_at": "Thursday Nov 10, 2016 at 18:02 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2965",
        "number": 3091,
        "state": "closed",
        "title": "WT-2965 Remove sleep and retry loop from __evict_exclusive",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 12, 2016 at 06:00 GMT",
        "updated_at": "Wednesday Oct 12, 2016 at 06:35 GMT",
        "closed_at": "Wednesday Oct 12, 2016 at 06:35 GMT",
        "merged_at": "Wednesday Oct 12, 2016 at 06:35 GMT"
    },
    {
        "key": "WT-2963",
        "number": 3090,
        "state": "closed",
        "title": "WT-2963 Fix a race bounding eviction in tiny caches.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 10, 2016 at 22:52 GMT",
        "updated_at": "Tuesday Oct 11, 2016 at 11:05 GMT",
        "closed_at": "Tuesday Oct 11, 2016 at 11:05 GMT",
        "merged_at": "Tuesday Oct 11, 2016 at 11:05 GMT"
    },
    {
        "key": "WT-2961",
        "number": 3089,
        "state": "closed",
        "title": "WT-2961 Add support for custom version strings when generating docs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 10, 2016 at 22:50 GMT",
        "updated_at": "Tuesday Nov 01, 2016 at 03:59 GMT",
        "closed_at": "Tuesday Nov 01, 2016 at 03:59 GMT",
        "merged_at": "Tuesday Nov 01, 2016 at 03:59 GMT"
    },
    {
        "key": "WT-2954",
        "number": 3088,
        "state": "closed",
        "title": "WT-2954 Try to evict pages that exceed memory_page_max even if the tr\u2026",
        "body": "\u2026ansaction ID isn't increasing\n\nWorkloads that insert large values checking only for the transaction ID\nmoving forward can lead to very large in-memory pages. Allow the page to exceed\nthe split size, but not the configured maximum.\n\nSkipping such pages is a performance optimization - allow the optimization to\nwork as long as pages are between split size and maximum size.\n\nAlso don't require so many entries on a leaf page to trigger a split when\nthere are large values.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 10, 2016 at 01:34 GMT",
        "updated_at": "Monday Oct 10, 2016 at 03:17 GMT",
        "closed_at": "Monday Oct 10, 2016 at 03:17 GMT",
        "merged_at": "Monday Oct 10, 2016 at 03:17 GMT"
    },
    {
        "key": "WT-2959",
        "number": 3087,
        "state": "closed",
        "title": "WT-2959 don't use WT_SESSION_IMPL before it's initialized",
        "body": "@agorrod, I managed to get a core dump with an experimental change I was playing with, and the reason is we're using the WT_SESSION_IMPL we're initializing before we've finished initializing it.\n\nFeel free to throw this away if you don't like it, it wouldn't have fired if I hadn't been modifying session initialization.\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 09, 2016 at 19:08 GMT",
        "updated_at": "Monday Oct 10, 2016 at 22:10 GMT",
        "closed_at": "Monday Oct 10, 2016 at 22:10 GMT",
        "merged_at": "Monday Oct 10, 2016 at 22:10 GMT"
    },
    {
        "key": "WT-2955",
        "number": 3086,
        "state": "closed",
        "title": "WT-2955 Add statistics tracking the amount of time threads spend waiting for high level locks",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 09, 2016 at 18:56 GMT",
        "updated_at": "Thursday Oct 13, 2016 at 18:02 GMT",
        "closed_at": "Thursday Oct 13, 2016 at 18:02 GMT",
        "merged_at": "Thursday Oct 13, 2016 at 18:02 GMT"
    },
    {
        "key": "WT-2956",
        "number": 3085,
        "state": "closed",
        "title": "WT-2956 utility tests -h option is always overridden by the default setup",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 07, 2016 at 14:50 GMT",
        "updated_at": "Monday Oct 10, 2016 at 14:06 GMT",
        "closed_at": "Monday Oct 10, 2016 at 06:28 GMT",
        "merged_at": "Monday Oct 10, 2016 at 06:28 GMT"
    },
    {
        "key": "WT-2937",
        "number": 3084,
        "state": "closed",
        "title": "WT-2937 Fix a warning.",
        "body": "../src/evict/evict_lru.c:1081:29: error: implicit conversion loses integer precision: 'unsigned long long' to 'u_int' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]\n                    WT_MIN(max_entries, 1 + __wt_cache_pages_inuse(cache) / 2);\n                                        ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../src/include/misc.h:62:42: note: expanded from macro 'WT_MIN'\n                                            ^\n../src/evict/evict_lru.c:1084:29: error: implicit conversion loses integer precision: 'unsigned long long' to 'u_int' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]\n                    WT_MIN(max_entries, 1 + cache->pages_dirty_leaf / 2);\n                                        ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../src/include/misc.h:62:42: note: expanded from macro 'WT_MIN'\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 07, 2016 at 04:11 GMT",
        "updated_at": "Friday Oct 07, 2016 at 04:27 GMT",
        "closed_at": "Friday Oct 07, 2016 at 04:27 GMT",
        "merged_at": "Friday Oct 07, 2016 at 04:27 GMT"
    },
    {
        "key": "WT-2947",
        "number": 3083,
        "state": "closed",
        "title": "WT-2947 replace test suite populate functions with *DataSet classes",
        "body": "The initial commit is part 1: introduce _DataSet and create temporary compatability layer.  I wanted to get some confirmation on this approach before part 2: making the tedious changes, as there's about 50 some files that currently use the the populate functions.  When that is completed, the temporary functions in helper.py as well as all the *_populate_ functions can be removed.\n\nThe motivation for this change is as part of WT-2833, I'm going to add some tests to do projections of data sets for dump/load, and it seemed like the function based approach had started to become unmanageable.  As an aside, it's possible that having an easy way to mix in projections may be helpful in other tests.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 06, 2016 at 15:41 GMT",
        "updated_at": "Wednesday Oct 26, 2016 at 04:35 GMT",
        "closed_at": "Wednesday Oct 26, 2016 at 04:35 GMT",
        "merged_at": "Wednesday Oct 26, 2016 at 04:35 GMT"
    },
    {
        "key": "WT-2949",
        "number": 3082,
        "state": "closed",
        "title": "WT-2949 Add option to skip closing the connection after test runs.",
        "body": "@agorrod Please review this change to add a `close_conn` option to `wtperf`.  I default it to false so that most tests just exit.  I added the option to the config files where the workload is a populate phase and a later test is expecting to set `create=false`.\n\nIt saves 9 minutes off the `wiredtiger-perf-stress` test, from 59 down to 50 minutes.  I expect the savings to be less for the smaller and shorter test groups.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 05, 2016 at 17:16 GMT",
        "updated_at": "Tuesday Nov 01, 2016 at 05:44 GMT",
        "closed_at": "Tuesday Oct 11, 2016 at 16:13 GMT",
        "merged_at": "Tuesday Oct 11, 2016 at 16:13 GMT"
    },
    {
        "key": "WT-2950",
        "number": 3081,
        "state": "closed",
        "title": "WT-2950 Free all reconciliation memory between calls to eviction.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 05, 2016 at 06:08 GMT",
        "updated_at": "Friday Oct 07, 2016 at 02:13 GMT",
        "closed_at": "Friday Oct 07, 2016 at 02:13 GMT",
        "merged_at": "Friday Oct 07, 2016 at 02:13 GMT"
    },
    {
        "key": "WT-2948",
        "number": 3080,
        "state": "closed",
        "title": "WT-2948 simplify error handling by making epoch time return never fail",
        "body": "@agorrod, I've been meaning to do this for awhile, and the changes we're considering for WT-2920 are going to be easier with this change.\n\nIf you want the change, I'll flag a few places that might deserve real review, in the comments.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 04, 2016 at 14:08 GMT",
        "updated_at": "Friday Oct 07, 2016 at 00:23 GMT",
        "closed_at": "Friday Oct 07, 2016 at 00:23 GMT",
        "merged_at": "Friday Oct 07, 2016 at 00:23 GMT"
    },
    {
        "key": "WT-2946",
        "number": 3079,
        "state": "closed",
        "title": "WT-2946 dist/s_docs incompatible with OS X Xcode installation",
        "body": "@ddanderson, a fix to use `-` instead of a temporary file.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 04, 2016 at 13:07 GMT",
        "updated_at": "Tuesday Oct 04, 2016 at 13:41 GMT",
        "closed_at": "Tuesday Oct 04, 2016 at 13:40 GMT",
        "merged_at": "Tuesday Oct 04, 2016 at 13:40 GMT"
    },
    {
        "key": "WT-2946",
        "number": 3078,
        "state": "closed",
        "title": "WT-2946 dist/s_docs incompatible with OS X Xcode installation",
        "body": "@ddanderson, my apologies for the failure, I don't usually build documentation on my OS X box.\n\nThis change fixes the problem for me, for your review/consideration.\n\ncc: @sueloverso \n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 04, 2016 at 12:20 GMT",
        "updated_at": "Tuesday Oct 04, 2016 at 13:12 GMT",
        "closed_at": "Tuesday Oct 04, 2016 at 12:46 GMT",
        "merged_at": "Tuesday Oct 04, 2016 at 12:46 GMT"
    },
    {
        "key": "WT-2933",
        "number": 3077,
        "state": "closed",
        "title": "WT-2933 Fix an uninitialized variable warning.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 04, 2016 at 00:29 GMT",
        "updated_at": "Tuesday Oct 04, 2016 at 01:50 GMT",
        "closed_at": "Tuesday Oct 04, 2016 at 01:50 GMT",
        "merged_at": "Tuesday Oct 04, 2016 at 01:50 GMT"
    },
    {
        "key": "WT-2920",
        "number": 3076,
        "state": "closed",
        "title": "WT-2920 New eviction statistics",
        "body": "@agorrod, for your review/consideration.\n\nIt occurs to me usecs is an awfully small unit for an aggregated statistic, but it is what we use elsewhere, so I guess it makes sense for consistency.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 03, 2016 at 20:19 GMT",
        "updated_at": "Tuesday Oct 04, 2016 at 13:19 GMT",
        "closed_at": "Tuesday Oct 04, 2016 at 13:18 GMT",
        "merged_at": "Tuesday Oct 04, 2016 at 13:18 GMT"
    },
    {
        "key": "WT-2880",
        "number": 3075,
        "state": "closed",
        "title": "WT-2880 Add Zstandard compression support",
        "body": "Add Zstd compression to WiredTiger.\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 02, 2016 at 19:09 GMT",
        "updated_at": "Saturday Oct 22, 2016 at 14:48 GMT",
        "closed_at": "Saturday Oct 22, 2016 at 03:10 GMT",
        "merged_at": "Saturday Oct 22, 2016 at 03:10 GMT"
    },
    {
        "key": "WT-2942",
        "number": 3074,
        "state": "closed",
        "title": "WT-2942 Verbose messages should not have newlines.",
        "body": "@keithbostic Please review this minor change to remove extraneous newlines from the new thread group verbose messages.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 30, 2016 at 19:41 GMT",
        "updated_at": "Friday Sep 30, 2016 at 22:27 GMT",
        "closed_at": "Friday Sep 30, 2016 at 22:27 GMT",
        "merged_at": "Friday Sep 30, 2016 at 22:27 GMT"
    },
    {
        "key": "WT-2941",
        "number": 3073,
        "state": "closed",
        "title": "WT-2941 format should use faster key-generation functions",
        "body": "@agorrod, since it made a difference for wtperf, might as well speed up format, too.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 30, 2016 at 12:31 GMT",
        "updated_at": "Tuesday Oct 04, 2016 at 02:36 GMT",
        "closed_at": "Tuesday Oct 04, 2016 at 02:36 GMT",
        "merged_at": "Tuesday Oct 04, 2016 at 02:36 GMT"
    },
    {
        "key": "WT-2938",
        "number": 3072,
        "state": "closed",
        "title": "WT-2938 Change assembly file extensions to .sx",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 30, 2016 at 00:03 GMT",
        "updated_at": "Tuesday Oct 04, 2016 at 04:15 GMT",
        "closed_at": "Tuesday Oct 04, 2016 at 04:15 GMT",
        "merged_at": "Tuesday Oct 04, 2016 at 04:15 GMT"
    },
    {
        "key": "WT-2937",
        "number": 3071,
        "state": "closed",
        "title": "WT-2937 Only do an eviction walk after a page has been taken from the current queue.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 29, 2016 at 07:46 GMT",
        "updated_at": "Friday Oct 07, 2016 at 02:09 GMT",
        "closed_at": "Friday Oct 07, 2016 at 02:09 GMT",
        "merged_at": "Friday Oct 07, 2016 at 02:09 GMT"
    },
    {
        "key": "WT-2936",
        "number": 3070,
        "state": "closed",
        "title": "WT-2936 Enable strict by default. Setup for --disable-strict",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 29, 2016 at 06:38 GMT",
        "updated_at": "Tuesday Oct 04, 2016 at 08:47 GMT",
        "closed_at": "Tuesday Oct 04, 2016 at 08:47 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2932",
        "number": 3069,
        "state": "closed",
        "title": "WT-2932 Add a configuration option allowing tables to ignore cache limits",
        "body": "Only available for in-memory configurations, designed to be used for\napplications that maintain a small amount of content that is required\nfor correctness.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 29, 2016 at 02:07 GMT",
        "updated_at": "Friday Oct 07, 2016 at 00:24 GMT",
        "closed_at": "Friday Oct 07, 2016 at 00:24 GMT",
        "merged_at": "Friday Oct 07, 2016 at 00:24 GMT"
    },
    {
        "key": "WT-2933",
        "number": 3068,
        "state": "closed",
        "title": "WT-2933 Fix a race between named snapshots and checkpoints.",
        "body": "The changes in WT-2798 introduced a bug into the allocation of named\nsnapshots when a checkpoint is running.  This bug should not have led to\ninvalid reads or data corruption but violated some sanity checking in\ndiagnostic builds.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 28, 2016 at 08:04 GMT",
        "updated_at": "Monday Oct 03, 2016 at 23:11 GMT",
        "closed_at": "Monday Oct 03, 2016 at 23:11 GMT",
        "merged_at": "Monday Oct 03, 2016 at 23:11 GMT"
    },
    {
        "key": "WT-2831",
        "number": 3067,
        "state": "closed",
        "title": "WT-2831 Don't checkpoint if there have been no changes",
        "body": "Add a modified flag to the connection structure. Do a checkpoint if the flag is set, not otherwise.\nSet this flag whenever we set btree->modified to true. Clear the connection->modified flag after taking a transaction id for checkpoint.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 28, 2016 at 07:22 GMT",
        "updated_at": "Thursday Oct 06, 2016 at 06:42 GMT",
        "closed_at": "Thursday Oct 06, 2016 at 06:42 GMT",
        "merged_at": "Thursday Oct 06, 2016 at 06:42 GMT"
    },
    {
        "key": "WT-2907",
        "number": 3066,
        "state": "closed",
        "title": "WT-2907 Fixed java concurrent close test to have both insert threads and scan threads.",
        "body": "Additionally some minor code cleanup.\nConfirmed that the test still passes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 28, 2016 at 01:18 GMT",
        "updated_at": "Wednesday Sep 28, 2016 at 01:41 GMT",
        "closed_at": "Wednesday Sep 28, 2016 at 01:40 GMT",
        "merged_at": "Wednesday Sep 28, 2016 at 01:40 GMT"
    },
    {
        "key": "WT-2858",
        "number": 3065,
        "state": "closed",
        "title": "WT-2858 rename wtperf's CONFIG structure",
        "body": "@agorrod, the next chunk of work, there should be no real changes in this one.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 27, 2016 at 12:43 GMT",
        "updated_at": "Wednesday Sep 28, 2016 at 00:46 GMT",
        "closed_at": "Wednesday Sep 28, 2016 at 00:46 GMT",
        "merged_at": "Wednesday Sep 28, 2016 at 00:46 GMT"
    },
    {
        "key": "WT-2931",
        "number": 3064,
        "state": "closed",
        "title": "WT-2931 Enforce limits on dirty data for in-memory.",
        "body": "Reverts WT-2886 commit ac1f7401dcb8be345973f7787d9121c5c321bf7b.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 27, 2016 at 02:35 GMT",
        "updated_at": "Tuesday Sep 27, 2016 at 06:43 GMT",
        "closed_at": "Tuesday Sep 27, 2016 at 06:42 GMT",
        "merged_at": "Tuesday Sep 27, 2016 at 06:42 GMT"
    },
    {
        "key": "WT-2928",
        "number": 3063,
        "state": "closed",
        "title": "WT-2928 Don't give up when the urgent queue is half empty.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 26, 2016 at 05:16 GMT",
        "updated_at": "Monday Sep 26, 2016 at 05:43 GMT",
        "closed_at": "Monday Sep 26, 2016 at 05:36 GMT",
        "merged_at": "Monday Sep 26, 2016 at 05:36 GMT"
    },
    {
        "key": "WT-1592",
        "number": 3062,
        "state": "closed",
        "title": "WT-1592 Add per-dhandle current cache usage statistics",
        "body": "Exposed via a new 'cache_walk' statistics configuration option.\n\nCan be gathered by using:\n`statistics=(fast,cache_walk),statistics_log=(wait=10,sources=[file:])`\nCan be viewed using wtstats.py visualizer.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 26, 2016 at 01:59 GMT",
        "updated_at": "Friday Oct 14, 2016 at 11:46 GMT",
        "closed_at": "Friday Oct 14, 2016 at 07:08 GMT",
        "merged_at": "Friday Oct 14, 2016 at 07:08 GMT"
    },
    {
        "key": "WT-2924",
        "number": 3061,
        "state": "closed",
        "title": "WT-2924 Ensure we are doing eviction when threads are waiting for it",
        "body": "@michaelcahill, for your review/consideration.\n\nThere are a couple of different things in here that I noticed reading the code, you may want to cherry-pick them into whatever you end up merging.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 24, 2016 at 17:58 GMT",
        "updated_at": "Saturday Sep 24, 2016 at 23:13 GMT",
        "closed_at": "Saturday Sep 24, 2016 at 23:13 GMT",
        "merged_at": "Saturday Sep 24, 2016 at 23:13 GMT"
    },
    {
        "key": "WT-2928",
        "number": 3060,
        "state": "closed",
        "title": "WT-2928 eviction failing to switch queues leads to starvation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Sep 24, 2016 at 14:25 GMT",
        "updated_at": "Monday Sep 26, 2016 at 03:43 GMT",
        "closed_at": "Monday Sep 26, 2016 at 03:43 GMT",
        "merged_at": "Monday Sep 26, 2016 at 03:43 GMT"
    },
    {
        "key": "WT-2336",
        "number": 3059,
        "state": "closed",
        "title": "WT-2336 syscall tester to test file system operations",
        "body": "This is a rough version of a system call tester.  The idea proposed by @agorrod is to have a simple program that does a few small WT operations, run strace on it, capture the output and compare it to a 'known good' output.  In this case, the source of the program to be tested is in `test/syscall/wt2336_base/main.c` and the script that runs and compares is `test/syscall/syscall.py`.  The script with no arguments will look for `.run` files under `test/syscall/*`; each `.run` file lives in the directory with the C source for the program to be run.  (There can be multiple `.run` files, for cases when the C program is to be run with different arguments).  The `.run` file contains some header information (what syscalls to collect, what system this test runs under) terminated by a `RUN` statement, following that is a list of strace output to be compared.  The .run file is intended to be read like a C program but is really a rather constrained syntax.  It does allow variables to be assigned to results of system calls (for file descriptors) to be used later in the script.  It also allows some degree of fuzziness in matching.\n\nAt the moment, the script runs on Linux (using strace) and OSX (using a modified dtruss that allows one to specify a subset of system calls to be traced).  There are some small hacks to make it work on OSX -- I can go into this if there is interest, and probably make some of it better.  We would need an approximate equivalent to strace on Windows to get it ported there.\n\nThis is _rough_ because there are some TODOs listed in the python code. The script could use a little more cleanup, refactoring, documenting.  I'd like to get some feedback about the overall approach, the syntax and capabilities.\n\nThe `.run` files I've given do work (they match correctly), I'm not sure if they are matching too much detail (for example, are the movements of the turtle file important for \"proving\" what we want to know about the file system operations?)\n\n@agorrod, can you take a look?\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 23, 2016 at 21:44 GMT",
        "updated_at": "Wednesday Dec 07, 2016 at 03:29 GMT",
        "closed_at": "Wednesday Dec 07, 2016 at 03:29 GMT",
        "merged_at": "Wednesday Dec 07, 2016 at 03:29 GMT"
    },
    {
        "key": "WT-2921",
        "number": 3058,
        "state": "closed",
        "title": "WT-2921 Reset the count when the last hazard pointer is cleared.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 23, 2016 at 05:31 GMT",
        "updated_at": "Monday Sep 26, 2016 at 02:57 GMT",
        "closed_at": "Monday Sep 26, 2016 at 02:57 GMT",
        "merged_at": "Monday Sep 26, 2016 at 02:57 GMT"
    },
    {
        "key": "WT-2926",
        "number": 3057,
        "state": "closed",
        "title": "WT-2926 WT_CONNECTION.reconfigure can attempt unlock of not-locked lock",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 22, 2016 at 15:54 GMT",
        "updated_at": "Thursday Sep 22, 2016 at 23:48 GMT",
        "closed_at": "Thursday Sep 22, 2016 at 23:48 GMT",
        "merged_at": "Thursday Sep 22, 2016 at 23:48 GMT"
    },
    {
        "key": "WT-2924",
        "number": 3056,
        "state": "closed",
        "title": "WT-2924 Check we're doing eviction when threads are waiting for it.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 22, 2016 at 01:31 GMT",
        "updated_at": "Friday Sep 23, 2016 at 04:46 GMT",
        "closed_at": "Friday Sep 23, 2016 at 04:46 GMT",
        "merged_at": "Friday Sep 23, 2016 at 04:46 GMT"
    },
    {
        "key": "WT-2925",
        "number": 3055,
        "state": "closed",
        "title": "WT-2925 WT_THREAD_PANIC_FAIL is a WT_THREAD structure flag",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 21, 2016 at 15:57 GMT",
        "updated_at": "Thursday Sep 22, 2016 at 23:47 GMT",
        "closed_at": "Thursday Sep 22, 2016 at 23:47 GMT",
        "merged_at": "Thursday Sep 22, 2016 at 23:47 GMT"
    },
    {
        "key": "WT-2924",
        "number": 3054,
        "state": "closed",
        "title": "WT-2924 hang when thread holding table lock tapped for eviction",
        "body": "@agorrod, @michaelcahill, there's some discussion in WT-2924, but the change here is to wrap all high-level locks in a set/clear of the `WT_SESSION_NO_EVICTION` flag so we never tap a thread holding a high-level lock for eviction.\n\nThis may cast too wide a net -- I suppose the alternative/obvious change is to enumerate more locks in `__wt_cache_eviction_check()`, but I prefer this change because I think it makes it unlikely we'll introduce this bug again.\n\nEDIT: we can't declare local variables in the WT_WITH_XXX lock macros (because we nest them), so I fell back to enumerating the locks when we check.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 21, 2016 at 15:45 GMT",
        "updated_at": "Friday Sep 23, 2016 at 12:34 GMT",
        "closed_at": "Friday Sep 23, 2016 at 12:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2923",
        "number": 3053,
        "state": "closed",
        "title": "WT-2923 heap-use-after-free on address in compaction",
        "body": "@michaelcahill, @agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 20, 2016 at 15:13 GMT",
        "updated_at": "Wednesday Sep 21, 2016 at 06:12 GMT",
        "closed_at": "Wednesday Sep 21, 2016 at 06:12 GMT",
        "merged_at": "Wednesday Sep 21, 2016 at 06:12 GMT"
    },
    {
        "key": "WT-2895",
        "number": 3052,
        "state": "closed",
        "title": "WT-2895 Disable csuite test wt2323_join_visibility in long tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 20, 2016 at 01:36 GMT",
        "updated_at": "Wednesday Sep 28, 2016 at 01:34 GMT",
        "closed_at": "Wednesday Sep 28, 2016 at 01:34 GMT",
        "merged_at": "Wednesday Sep 28, 2016 at 01:34 GMT"
    },
    {
        "key": "WT-2864",
        "number": 3051,
        "state": "closed",
        "title": "WT-2864 Reconfiguring the checkpoint server can lead to hangs",
        "body": "@agorrod, for your review/consideration, I thought this might be a reasonable way to attack the problem in WT-2864.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 19, 2016 at 11:47 GMT",
        "updated_at": "Thursday Sep 22, 2016 at 23:46 GMT",
        "closed_at": "Thursday Sep 22, 2016 at 23:46 GMT",
        "merged_at": "Thursday Sep 22, 2016 at 23:46 GMT"
    },
    {
        "key": "WT-2874",
        "number": 3050,
        "state": "closed",
        "title": "WT-2874 test_compact01 can throw WT_ROLLBACK",
        "body": "@agorrod, @daveh86, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 17, 2016 at 20:14 GMT",
        "updated_at": "Monday Sep 19, 2016 at 07:21 GMT",
        "closed_at": "Monday Sep 19, 2016 at 07:21 GMT",
        "merged_at": "Monday Sep 19, 2016 at 07:21 GMT"
    },
    {
        "key": "WT-2919",
        "number": 3049,
        "state": "closed",
        "title": "WT-2919 dist scripts force exit 0 on error",
        "body": "@agorrod, when fixing `s_tags` today, I noticed we were forcing script exits of 0 almost everywhere (we probably just cut-and-pasted from one place it made sense). This doesn't clean up error handling completely, but I think it makes it incrementally better.\n\nI'm pointing you at this one because I thought there might be something in the `s_all` changes you made awhile back that require scripts to always exit 0?\n\nAnyway, feel free to simply discard this one without further discussion if you don't like it, entirely up to you.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 16, 2016 at 15:28 GMT",
        "updated_at": "Friday Sep 23, 2016 at 00:27 GMT",
        "closed_at": "Friday Sep 23, 2016 at 00:27 GMT",
        "merged_at": "Friday Sep 23, 2016 at 00:27 GMT"
    },
    {
        "key": "WT-2918",
        "number": 3048,
        "state": "closed",
        "title": "WT-2918 the dist scripts create C files s_whitespace complains about",
        "body": "I'm seeing complaints when I run the dist scripts about `.c` files in dist. The `s_export` script creates the file `__a.c` and shouldn't, the `s_tags` script can avoid creating a `.c` file.\n\nRandom minor cleanups along the way.\n\nReady for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 16, 2016 at 13:35 GMT",
        "updated_at": "Friday Sep 16, 2016 at 15:02 GMT",
        "closed_at": "Friday Sep 16, 2016 at 15:02 GMT",
        "merged_at": "Friday Sep 16, 2016 at 15:02 GMT"
    },
    {
        "key": "WT-2916",
        "number": 3047,
        "state": "closed",
        "title": "WT-2916 Fix and simplify s_whitespace.",
        "body": "Use the same rules for all source files: strip trailing whitespace,\ncollapse multiple blank lines and strip trailing empty lines.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 16, 2016 at 05:50 GMT",
        "updated_at": "Friday Sep 16, 2016 at 06:16 GMT",
        "closed_at": "Friday Sep 16, 2016 at 06:16 GMT",
        "merged_at": "Friday Sep 16, 2016 at 06:16 GMT"
    },
    {
        "key": "WT-2121",
        "number": 3046,
        "state": "closed",
        "title": "WT-2121 Use instruction-parallel crc32c implementation",
        "body": "@agorrod, @michaelcahill, finally figured out how to get libtool to build from `.asm` files, so I'm pushing a branch that integrates Intel's CRC32 implementation, using pclmulqdq instructions.\n\nI'll add some discussion to the WT-2121 ticket, but in summary, I'm seeing between .9% and 1.3% improvement over our existing code, so I'm not feeling much excitement.\n\nIt's not going to build on Windows (at least), and we're not ready to merge, so as far as I'm concerned, we should just close this one, keeping the branch around for if and when.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 15, 2016 at 20:02 GMT",
        "updated_at": "Saturday Oct 22, 2016 at 15:09 GMT",
        "closed_at": "Saturday Oct 22, 2016 at 15:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2905",
        "number": 3045,
        "state": "closed",
        "title": "WT-2905 dead code: MongoDB Coverity #99881.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 15, 2016 at 07:33 GMT",
        "updated_at": "Friday Sep 16, 2016 at 02:41 GMT",
        "closed_at": "Friday Sep 16, 2016 at 02:41 GMT",
        "merged_at": "Friday Sep 16, 2016 at 02:41 GMT"
    },
    {
        "key": "WT-2910",
        "number": 3044,
        "state": "closed",
        "title": "WT-2910 When running in-memory, only evict dirty pages.",
        "body": "Also, don't relax the clean / dirty requirements when we get aggressive:\nif application threads are blocked by the dirty limit, evicting a clean\npage doesn't unblock them so there's no point trying.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 15, 2016 at 07:17 GMT",
        "updated_at": "Friday Sep 16, 2016 at 04:20 GMT",
        "closed_at": "Friday Sep 16, 2016 at 04:20 GMT",
        "merged_at": "Friday Sep 16, 2016 at 04:20 GMT"
    },
    {
        "key": "WT-2913",
        "number": 3043,
        "state": "closed",
        "title": "WT-2913 Re-sort eviction queues if we find no new candidates.",
        "body": "We could be in a situation with a tiny number of pages in cache, all of\nwhich are already queued.  The queue needs to be re-sorted so that some\nof those entries can become candidates.  This caused hangs in some\ntest/format configs.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 15, 2016 at 07:13 GMT",
        "updated_at": "Thursday Sep 15, 2016 at 07:33 GMT",
        "closed_at": "Thursday Sep 15, 2016 at 07:33 GMT",
        "merged_at": "Thursday Sep 15, 2016 at 07:33 GMT"
    },
    {
        "key": "WT-2898",
        "number": 3042,
        "state": "closed",
        "title": "WT-2898 Sasha's evict-dynamic-worker changes in WT coding style",
        "body": "",
        "base_ref": "wt-2898-evict-dynamic-workers",
        "created_at": "Thursday Sep 15, 2016 at 06:28 GMT",
        "updated_at": "Monday Sep 26, 2016 at 02:58 GMT",
        "closed_at": "Thursday Sep 15, 2016 at 20:19 GMT",
        "merged_at": "Thursday Sep 15, 2016 at 20:19 GMT"
    },
    {
        "key": "WT-2898",
        "number": 3041,
        "state": "closed",
        "title": "WT-2898 Sasha's evict-dynamic-worker changes in WT coding style",
        "body": "",
        "base_ref": "wt-2898-evict-dynamic-workers",
        "created_at": "Thursday Sep 15, 2016 at 05:48 GMT",
        "updated_at": "Thursday Sep 15, 2016 at 06:25 GMT",
        "closed_at": "Thursday Sep 15, 2016 at 06:25 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2914",
        "number": 3040,
        "state": "closed",
        "title": "WT-2914 Added explicit call to initialize WT library to satisfy some linkers",
        "body": "See discussion in the JIRA.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 14, 2016 at 20:45 GMT",
        "updated_at": "Wednesday Sep 14, 2016 at 23:08 GMT",
        "closed_at": "Wednesday Sep 14, 2016 at 23:05 GMT",
        "merged_at": "Wednesday Sep 14, 2016 at 23:05 GMT"
    },
    {
        "key": "WT-2898",
        "number": 3039,
        "state": "closed",
        "title": "WT-2898 evict dynamic workers",
        "body": "This branch dynamically tunes the number of eviction workers in the range specified by threads_max and threads_min eviction variables. It is recommended to set threads_min to 1 and threads_max to a larger number (e.g., 8). The eviction server should pick the best number of eviction workers automatically. \n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 14, 2016 at 01:25 GMT",
        "updated_at": "Wednesday Dec 28, 2016 at 16:07 GMT",
        "closed_at": "Wednesday Dec 28, 2016 at 16:07 GMT",
        "merged_at": "Wednesday Dec 28, 2016 at 16:07 GMT"
    },
    {
        "key": "WT-2912",
        "number": 3038,
        "state": "closed",
        "title": "WT-2912 make --enable-strict run on the zseries test box",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 13, 2016 at 13:23 GMT",
        "updated_at": "Wednesday Sep 14, 2016 at 01:28 GMT",
        "closed_at": "Wednesday Sep 14, 2016 at 01:27 GMT",
        "merged_at": "Wednesday Sep 14, 2016 at 01:27 GMT"
    },
    {
        "key": "WT-2911",
        "number": 3037,
        "state": "closed",
        "title": "WT-2911 add support for gcc6",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 13, 2016 at 13:05 GMT",
        "updated_at": "Wednesday Sep 14, 2016 at 10:35 GMT",
        "closed_at": "Wednesday Sep 14, 2016 at 01:42 GMT",
        "merged_at": "Wednesday Sep 14, 2016 at 01:42 GMT"
    },
    {
        "key": "WT-2902",
        "number": 3036,
        "state": "closed",
        "title": "WT-2902 Track per-tree the efficiency of eviction walks.",
        "body": "Some workloads create \"deserts\" within a tree where no good eviction\ncandidates can be found (e.g., zipfian distributions, append-only\nworkloads, etc.).  Rather than walking all the way through such\nregions, give up and try in the opposite direction next time.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 13, 2016 at 07:15 GMT",
        "updated_at": "Wednesday Sep 14, 2016 at 02:18 GMT",
        "closed_at": "Wednesday Sep 14, 2016 at 02:18 GMT",
        "merged_at": "Wednesday Sep 14, 2016 at 02:18 GMT"
    },
    {
        "key": "WT-2908",
        "number": 3035,
        "state": "closed",
        "title": "WT-2908 Change output of shortDesc to use simpleName",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 13, 2016 at 04:00 GMT",
        "updated_at": "Tuesday Sep 13, 2016 at 05:27 GMT",
        "closed_at": "Tuesday Sep 13, 2016 at 05:27 GMT",
        "merged_at": "Tuesday Sep 13, 2016 at 05:27 GMT"
    },
    {
        "key": "WT-2894",
        "number": 3034,
        "state": "closed",
        "title": "WT-2894 Add wtperf stress workload that tries to induce negative scaling",
        "body": "Via use a high thread count and throttled operations.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 13, 2016 at 03:33 GMT",
        "updated_at": "Tuesday Sep 13, 2016 at 03:52 GMT",
        "closed_at": "Tuesday Sep 13, 2016 at 03:52 GMT",
        "merged_at": "Tuesday Sep 13, 2016 at 03:52 GMT"
    },
    {
        "key": "WT-2908",
        "number": 3033,
        "state": "closed",
        "title": "WT-2908 Add a dry-run option to python suite",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 13, 2016 at 01:28 GMT",
        "updated_at": "Tuesday Sep 13, 2016 at 02:51 GMT",
        "closed_at": "Tuesday Sep 13, 2016 at 02:50 GMT",
        "merged_at": "Tuesday Sep 13, 2016 at 02:50 GMT"
    },
    {
        "key": "WT-2903",
        "number": 3032,
        "state": "closed",
        "title": "WT-2903 Change the eviction_scrub_target default to 15%",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 12, 2016 at 07:32 GMT",
        "updated_at": "Monday Sep 12, 2016 at 07:55 GMT",
        "closed_at": "Monday Sep 12, 2016 at 07:55 GMT",
        "merged_at": "Monday Sep 12, 2016 at 07:55 GMT"
    },
    {
        "key": "WT-2902",
        "number": 3031,
        "state": "closed",
        "title": "WT-2902 Make checkpoint scrub fuzzy to reduce impact on operations.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 12, 2016 at 06:03 GMT",
        "updated_at": "Tuesday Sep 13, 2016 at 07:15 GMT",
        "closed_at": "Tuesday Sep 13, 2016 at 07:15 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2902",
        "number": 3030,
        "state": "closed",
        "title": "WT-2902 Keep populating the eviction queue if it is being emptied.",
        "body": "Not yet ready for merge - this is just a starting point.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 09, 2016 at 12:17 GMT",
        "updated_at": "Wednesday Sep 14, 2016 at 00:13 GMT",
        "closed_at": "Wednesday Sep 14, 2016 at 00:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2901",
        "number": 3029,
        "state": "closed",
        "title": "WT-2901 Make checkpoint scrubbing configurable.",
        "body": "Also avoid eviction of dirty pages entirely in the eviction server if\nworker threads are configured.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 09, 2016 at 03:24 GMT",
        "updated_at": "Friday Sep 09, 2016 at 03:36 GMT",
        "closed_at": "Friday Sep 09, 2016 at 03:36 GMT",
        "merged_at": "Friday Sep 09, 2016 at 03:36 GMT"
    },
    {
        "key": "WT-2900",
        "number": 3028,
        "state": "closed",
        "title": "WT-2900 scons gcc flags collide with ARM8 CRC32 implementation",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 08, 2016 at 16:05 GMT",
        "updated_at": "Friday Nov 11, 2016 at 09:35 GMT",
        "closed_at": "Tuesday Sep 13, 2016 at 03:50 GMT",
        "merged_at": "Tuesday Sep 13, 2016 at 03:50 GMT"
    },
    {
        "key": "WT-2897",
        "number": 3027,
        "state": "closed",
        "title": "WT-2897 Checkpoints can become corrupted on failure",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 07, 2016 at 19:01 GMT",
        "updated_at": "Thursday Sep 08, 2016 at 06:27 GMT",
        "closed_at": "Thursday Sep 08, 2016 at 06:27 GMT",
        "merged_at": "Thursday Sep 08, 2016 at 06:27 GMT"
    },
    {
        "key": "WT-2896",
        "number": 3026,
        "state": "closed",
        "title": "WT-2896 Coverity #1362535: resource leak",
        "body": "Ready for merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 07, 2016 at 12:49 GMT",
        "updated_at": "Wednesday Sep 07, 2016 at 15:32 GMT",
        "closed_at": "Wednesday Sep 07, 2016 at 15:32 GMT",
        "merged_at": "Wednesday Sep 07, 2016 at 15:32 GMT"
    },
    {
        "key": "WT-2323",
        "number": 3025,
        "state": "closed",
        "title": "WT-2323 join consistency code clean up",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 06, 2016 at 15:22 GMT",
        "updated_at": "Tuesday Sep 06, 2016 at 15:32 GMT",
        "closed_at": "Tuesday Sep 06, 2016 at 15:30 GMT",
        "merged_at": "Tuesday Sep 06, 2016 at 15:30 GMT"
    },
    {
        "key": "WT-0000",
        "number": 3024,
        "state": "closed",
        "title": "WT-0000 Start of release process for WT 2.9.0",
        "body": "Not to be merged yet. This will be pulled in when develop ready and reviews of the changes here are finalised.\n",
        "base_ref": "master",
        "created_at": "Tuesday Sep 06, 2016 at 06:32 GMT",
        "updated_at": "Wednesday Dec 07, 2016 at 23:01 GMT",
        "closed_at": "Wednesday Dec 07, 2016 at 23:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2892",
        "number": 3023,
        "state": "closed",
        "title": "WT-2892 hot backup can race with block truncate",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 05, 2016 at 19:37 GMT",
        "updated_at": "Tuesday Sep 06, 2016 at 17:45 GMT",
        "closed_at": "Tuesday Sep 06, 2016 at 17:43 GMT",
        "merged_at": "Tuesday Sep 06, 2016 at 17:43 GMT"
    },
    {
        "key": "WT-2233",
        "number": 3022,
        "state": "closed",
        "title": "WT-2233 Make aggressive / stuck a sliding scale rather than booleans.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 05, 2016 at 07:50 GMT",
        "updated_at": "Thursday Sep 08, 2016 at 03:48 GMT",
        "closed_at": "Thursday Sep 08, 2016 at 03:48 GMT",
        "merged_at": "Thursday Sep 08, 2016 at 03:48 GMT"
    },
    {
        "key": "WT-2876",
        "number": 3021,
        "state": "closed",
        "title": "WT-2876 Fix a memory leak of new wtperf URI",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 05, 2016 at 02:30 GMT",
        "updated_at": "Monday Sep 05, 2016 at 06:09 GMT",
        "closed_at": "Monday Sep 05, 2016 at 06:09 GMT",
        "merged_at": "Monday Sep 05, 2016 at 06:09 GMT"
    },
    {
        "key": "WT-2878",
        "number": 3020,
        "state": "closed",
        "title": "WT-2878 Verbose changes affected performance",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 02, 2016 at 19:57 GMT",
        "updated_at": "Saturday Sep 03, 2016 at 05:20 GMT",
        "closed_at": "Saturday Sep 03, 2016 at 05:20 GMT",
        "merged_at": "Saturday Sep 03, 2016 at 05:20 GMT"
    },
    {
        "key": "WT-2888",
        "number": 3019,
        "state": "closed",
        "title": "WT-2888 void functions incorrectly typed as returning int",
        "body": "It seems like we've been finding/fixing functions that return an int, but don't really have a return value, one-by-one, for the last couple of weeks, so I went looking this morning.\n\nReady for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 02, 2016 at 15:24 GMT",
        "updated_at": "Tuesday Sep 06, 2016 at 01:59 GMT",
        "closed_at": "Tuesday Sep 06, 2016 at 01:59 GMT",
        "merged_at": "Tuesday Sep 06, 2016 at 01:59 GMT"
    },
    {
        "key": "WT-2886",
        "number": 3018,
        "state": "closed",
        "title": "WT-2886 Ignore dirty eviction settings when in_memory is true.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 02, 2016 at 07:39 GMT",
        "updated_at": "Monday Sep 05, 2016 at 00:56 GMT",
        "closed_at": "Monday Sep 05, 2016 at 00:56 GMT",
        "merged_at": "Monday Sep 05, 2016 at 00:56 GMT"
    },
    {
        "key": "WT-2872",
        "number": 3017,
        "state": "closed",
        "title": "WT-2872 Ensure tests with tiny caches don't get stuck due to the dirty trigger.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 02, 2016 at 07:15 GMT",
        "updated_at": "Saturday Sep 03, 2016 at 05:50 GMT",
        "closed_at": "Friday Sep 02, 2016 at 14:34 GMT",
        "merged_at": "Friday Sep 02, 2016 at 14:34 GMT"
    },
    {
        "key": "WT-2859",
        "number": 3016,
        "state": "closed",
        "title": "WT-2859 Remove FAST stats macros",
        "body": "Having _FAST_ macros gives an impression that when we use them, we are collecting fast statistics only, which is not true.\nExcept when statistics=none is set, we collect all the stats.\nThis change removes _FAST_ macros and modifies the basic macros to only collect stats when statistics=none is not set.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 02, 2016 at 05:36 GMT",
        "updated_at": "Wednesday Sep 14, 2016 at 03:20 GMT",
        "closed_at": "Wednesday Sep 14, 2016 at 03:20 GMT",
        "merged_at": "Wednesday Sep 14, 2016 at 03:20 GMT"
    },
    {
        "key": "WT-2885",
        "number": 3015,
        "state": "closed",
        "title": "WT-2885 __wt_checkpoint_signal lint",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 01, 2016 at 23:00 GMT",
        "updated_at": "Thursday Sep 01, 2016 at 23:34 GMT",
        "closed_at": "Thursday Sep 01, 2016 at 23:34 GMT",
        "merged_at": "Thursday Sep 01, 2016 at 23:34 GMT"
    },
    {
        "key": "WT-2867",
        "number": 3014,
        "state": "closed",
        "title": "WT-2867 Review and fix barrier usage in __lsm_tree_close",
        "body": "@agorrod, I took a look at this, and the ticket is correct, the barrier should be a full-barrier, not a read-barrier.\n\nI also cleaned up a couple of routines that can return void, not int.\n\nEDIT: I backed out the tricky change -- on second thought, it was incorrect, and this change is now really vanilla.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 01, 2016 at 21:33 GMT",
        "updated_at": "Thursday Sep 01, 2016 at 23:37 GMT",
        "closed_at": "Thursday Sep 01, 2016 at 23:37 GMT",
        "merged_at": "Thursday Sep 01, 2016 at 23:37 GMT"
    },
    {
        "key": "WT-2866",
        "number": 3013,
        "state": "closed",
        "title": "WT-2866 Fix warning.",
        "body": "src/evict/evict_lru.c  977  Warning 438: Last value assigned to\nvariable 'other_queue' (defined at line 830) not used\n\n@keithbostic Please review this change to fix the warning.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 01, 2016 at 20:56 GMT",
        "updated_at": "Thursday Sep 01, 2016 at 20:59 GMT",
        "closed_at": "Thursday Sep 01, 2016 at 20:59 GMT",
        "merged_at": "Thursday Sep 01, 2016 at 20:59 GMT"
    },
    {
        "key": "WT-2883",
        "number": 3012,
        "state": "closed",
        "title": "WT-2883 Remove potentially recursive call for verbose handleops",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 01, 2016 at 18:42 GMT",
        "updated_at": "Friday Sep 02, 2016 at 02:42 GMT",
        "closed_at": "Friday Sep 02, 2016 at 02:42 GMT",
        "merged_at": "Friday Sep 02, 2016 at 02:42 GMT"
    },
    {
        "key": "WT-2555",
        "number": 3011,
        "state": "closed",
        "title": "WT-2555 Make Format run on Windows",
        "body": "This PR adds support for running `test/format` on Windows.\n1. Build format without Berkley DB,\n2. Fix up various commands to run on Windows. In some cases, I needed to `ifdef` the test code.\n3. Add one more pthread function to the test windows shim.\n4. Random minor compilation fixes (`wt_internal.h`, `format.h`)\n\nIn terms of MCI integration, I put in an example task but I have not enabled it until there is a solution for handling crashes & hangs in Evergreen in general.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 01, 2016 at 14:20 GMT",
        "updated_at": "Monday Sep 05, 2016 at 00:45 GMT",
        "closed_at": "Monday Sep 05, 2016 at 00:45 GMT",
        "merged_at": "Monday Sep 05, 2016 at 00:45 GMT"
    },
    {
        "key": "WT-2881",
        "number": 3010,
        "state": "closed",
        "title": "WT-2881 Add -Wpedantic to clang compiler warning flags",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 01, 2016 at 12:57 GMT",
        "updated_at": "Monday Sep 05, 2016 at 00:42 GMT",
        "closed_at": "Monday Sep 05, 2016 at 00:42 GMT",
        "merged_at": "Monday Sep 05, 2016 at 00:42 GMT"
    },
    {
        "key": "WT-2866",
        "number": 3009,
        "state": "closed",
        "title": "WT-2866 Don't set eviction stuck unless the cache is full.",
        "body": "Only count the queue being empty towards the calculation of whether the server should evict pages if eviction is needed.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 01, 2016 at 08:28 GMT",
        "updated_at": "Friday Sep 02, 2016 at 00:13 GMT",
        "closed_at": "Thursday Sep 01, 2016 at 15:40 GMT",
        "merged_at": "Thursday Sep 01, 2016 at 15:40 GMT"
    },
    {
        "key": "WT-2879",
        "number": 3008,
        "state": "closed",
        "title": "WT-2879 test_stat05.test_stat_cursor_config.test_stat_cursor_size failures",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 31, 2016 at 22:17 GMT",
        "updated_at": "Friday Sep 02, 2016 at 03:08 GMT",
        "closed_at": "Thursday Sep 01, 2016 at 05:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2866",
        "number": 3007,
        "state": "closed",
        "title": "WT-2866 Move stats setting and restore setting current queue.",
        "body": "@michaelcahill Please review this.  I've chased the failure today since seeing it on the Solaris evergreen run.  Merging your branch this morning makes `stat05` fail most of the time for me on AWS, usually within 5 runs.  Going through your changes, one by one, I found I needed two to make `stat05` pass all the time.  I had to move the setting of whether or not the queue was empty below the return near line 900.  I moved it back to its original location.  I also had to restore the setting of the queues.  Either change without the other still fails.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 31, 2016 at 18:06 GMT",
        "updated_at": "Thursday Sep 01, 2016 at 15:25 GMT",
        "closed_at": "Thursday Sep 01, 2016 at 15:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2917",
        "number": 3006,
        "state": "closed",
        "title": "WT-2917 split wtperf's configuration into per-database and per-run parts",
        "body": "Replacement pull request for #2971, which was merged and reverted.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 31, 2016 at 13:01 GMT",
        "updated_at": "Tuesday Sep 27, 2016 at 06:40 GMT",
        "closed_at": "Tuesday Sep 27, 2016 at 06:40 GMT",
        "merged_at": "Tuesday Sep 27, 2016 at 06:40 GMT"
    },
    {
        "key": "WT-2842",
        "number": 3005,
        "state": "closed",
        "title": "Revert \"WT-2842 split wtperf's configuration into per-database and per-run parts\"",
        "body": "Reverts wiredtiger/wiredtiger#2971\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 31, 2016 at 07:24 GMT",
        "updated_at": "Wednesday Aug 31, 2016 at 07:24 GMT",
        "closed_at": "Wednesday Aug 31, 2016 at 07:24 GMT",
        "merged_at": "Wednesday Aug 31, 2016 at 07:24 GMT"
    },
    {
        "key": "WT-2842",
        "number": 3004,
        "state": "closed",
        "title": "Revert \"WT-2842 Add explicit include in wtperf to resolve build warning.\"",
        "body": "Reverts wiredtiger/wiredtiger#3002\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 31, 2016 at 07:23 GMT",
        "updated_at": "Wednesday Aug 31, 2016 at 07:23 GMT",
        "closed_at": "Wednesday Aug 31, 2016 at 07:23 GMT",
        "merged_at": "Wednesday Aug 31, 2016 at 07:23 GMT"
    },
    {
        "key": "WT-2866",
        "number": 3003,
        "state": "closed",
        "title": "WT-2866 Implement Sue's review feedback on WT-2816.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 31, 2016 at 07:07 GMT",
        "updated_at": "Wednesday Aug 31, 2016 at 13:56 GMT",
        "closed_at": "Wednesday Aug 31, 2016 at 13:56 GMT",
        "merged_at": "Wednesday Aug 31, 2016 at 13:56 GMT"
    },
    {
        "key": "WT-2842",
        "number": 3002,
        "state": "closed",
        "title": "WT-2842 Add explicit include in wtperf to resolve build warning.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 31, 2016 at 06:39 GMT",
        "updated_at": "Wednesday Aug 31, 2016 at 06:56 GMT",
        "closed_at": "Wednesday Aug 31, 2016 at 06:56 GMT",
        "merged_at": "Wednesday Aug 31, 2016 at 06:56 GMT"
    },
    {
        "key": "WT-2875",
        "number": 3001,
        "state": "closed",
        "title": "WT-2875 Add environment variable to disable long tests",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 30, 2016 at 23:51 GMT",
        "updated_at": "Monday Sep 05, 2016 at 08:01 GMT",
        "closed_at": "Monday Sep 05, 2016 at 08:01 GMT",
        "merged_at": "Monday Sep 05, 2016 at 08:01 GMT"
    },
    {
        "key": "WT-2873",
        "number": 3000,
        "state": "closed",
        "title": "WT-2873 Refactor CRC32 code",
        "body": "Refactor CRC32 code, better support for zSeries boxes that don't support hardware CRC32.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 30, 2016 at 21:09 GMT",
        "updated_at": "Thursday Sep 08, 2016 at 06:46 GMT",
        "closed_at": "Thursday Sep 08, 2016 at 06:46 GMT",
        "merged_at": "Thursday Sep 08, 2016 at 06:46 GMT"
    },
    {
        "key": "WT-2876",
        "number": 2999,
        "state": "closed",
        "title": "WT-2876 Add an oplog like ability to wtperf utility.",
        "body": "In an attempt to be able to simulate secondary replica nodes.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 30, 2016 at 07:23 GMT",
        "updated_at": "Monday Sep 05, 2016 at 01:26 GMT",
        "closed_at": "Monday Sep 05, 2016 at 01:26 GMT",
        "merged_at": "Monday Sep 05, 2016 at 01:26 GMT"
    },
    {
        "key": "WT-2871",
        "number": 2998,
        "state": "closed",
        "title": "WT-2871 Make verbose formats and argument types match.",
        "body": "OS X clang in particular is fussy about size_t vs uint64_t vs uintmax_t.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 30, 2016 at 05:58 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 06:08 GMT",
        "closed_at": "Tuesday Aug 30, 2016 at 06:08 GMT",
        "merged_at": "Tuesday Aug 30, 2016 at 06:08 GMT"
    },
    {
        "key": "ER-25843",
        "number": 2997,
        "state": "closed",
        "title": "SERVER-25843 Coverity analysis defect 99856: Redundant test",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 20:32 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 01:46 GMT",
        "closed_at": "Tuesday Aug 30, 2016 at 01:46 GMT",
        "merged_at": "Tuesday Aug 30, 2016 at 01:46 GMT"
    },
    {
        "key": "ER-25845",
        "number": 2996,
        "state": "closed",
        "title": "SERVER-25845 Coverity analysis defect 99859: Explicit null dereferenced",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 20:20 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 01:52 GMT",
        "closed_at": "Tuesday Aug 30, 2016 at 01:52 GMT",
        "merged_at": "Tuesday Aug 30, 2016 at 01:52 GMT"
    },
    {
        "key": "WT-2871",
        "number": 2995,
        "state": "closed",
        "title": "WT-2871 __wt_verbose has the wrong GCC format attributes",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 19:53 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 05:58 GMT",
        "closed_at": "Tuesday Aug 30, 2016 at 01:55 GMT",
        "merged_at": "Tuesday Aug 30, 2016 at 01:55 GMT"
    },
    {
        "key": "WT-2870",
        "number": 2994,
        "state": "closed",
        "title": "WT-2870 Rename wtperf jobs for consistency.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 18:44 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 05:58 GMT",
        "closed_at": "Monday Aug 29, 2016 at 18:58 GMT",
        "merged_at": "Monday Aug 29, 2016 at 18:58 GMT"
    },
    {
        "key": "ER-25846",
        "number": 2993,
        "state": "closed",
        "title": "SERVER-25846 Coverity analysis defect 99861: Dereference after null check",
        "body": "@sueloverso, would you please review & merge?\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 15:59 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 05:58 GMT",
        "closed_at": "Monday Aug 29, 2016 at 17:13 GMT",
        "merged_at": "Monday Aug 29, 2016 at 17:13 GMT"
    },
    {
        "key": "WT-2788",
        "number": 2992,
        "state": "closed",
        "title": "WT-2788 Do not touch memory already freed during a close API call.",
        "body": "Also added a test case for the problem.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 15:55 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 02:03 GMT",
        "closed_at": "Tuesday Aug 30, 2016 at 02:03 GMT",
        "merged_at": "Tuesday Aug 30, 2016 at 02:03 GMT"
    },
    {
        "key": "WT-2869",
        "number": 2991,
        "state": "closed",
        "title": "WT-2869 Fix a performance regression on secondaries.",
        "body": "Don't try to repeatedly evict pages if the eviction state hasn't moved\nforwards.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 12:13 GMT",
        "updated_at": "Monday Aug 29, 2016 at 12:21 GMT",
        "closed_at": "Monday Aug 29, 2016 at 12:21 GMT",
        "merged_at": "Monday Aug 29, 2016 at 12:21 GMT"
    },
    {
        "key": "WT-2824",
        "number": 2990,
        "state": "closed",
        "title": "WT-2824 Fix double concating the config strings",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 07:57 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 11:46 GMT",
        "closed_at": "Tuesday Aug 30, 2016 at 11:45 GMT",
        "merged_at": "Tuesday Aug 30, 2016 at 11:45 GMT"
    },
    {
        "key": "WT-2868",
        "number": 2989,
        "state": "closed",
        "title": "WT-2868 Add sample_interval to checkpoint-stress.wtperf",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 06:51 GMT",
        "updated_at": "Monday Aug 29, 2016 at 07:09 GMT",
        "closed_at": "Monday Aug 29, 2016 at 07:09 GMT",
        "merged_at": "Monday Aug 29, 2016 at 07:09 GMT"
    },
    {
        "key": "WT-2865",
        "number": 2988,
        "state": "closed",
        "title": "WT-2865 Fix a bug where the eviction server could panic after a WT_NOTFOUND",
        "body": "Recent changes to the eviction server led to a WT_NOTFOUND being propagated unexpectedly.\n\nThis isn't ready for merge yet - I'm still working on reproducing the original failure to confirm the fix.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 29, 2016 at 03:28 GMT",
        "updated_at": "Monday Aug 29, 2016 at 14:26 GMT",
        "closed_at": "Monday Aug 29, 2016 at 04:44 GMT",
        "merged_at": "Monday Aug 29, 2016 at 04:44 GMT"
    },
    {
        "key": "WT-2846",
        "number": 2987,
        "state": "closed",
        "title": "WT-2846 Fix a bug in thread group shrink where it could leak memory.",
        "body": "If the thread group was not fully utilized before the shrink happened.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 26, 2016 at 06:47 GMT",
        "updated_at": "Friday Aug 26, 2016 at 07:23 GMT",
        "closed_at": "Friday Aug 26, 2016 at 07:23 GMT",
        "merged_at": "Friday Aug 26, 2016 at 07:23 GMT"
    },
    {
        "key": "WT-2221",
        "number": 2986,
        "state": "closed",
        "title": "WT-2221 Add all_only flag to all-only stats. Generate corresponding docs",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 26, 2016 at 06:20 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 06:35 GMT",
        "closed_at": "Tuesday Aug 30, 2016 at 06:35 GMT",
        "merged_at": "Tuesday Aug 30, 2016 at 06:35 GMT"
    },
    {
        "key": "WT-2846",
        "number": 2985,
        "state": "closed",
        "title": "WT-2846 Fixes for new thread group code",
        "body": "If it were safe there would be no point locking. The test could fail if a reconfigure races with the eviction server starting a new thread.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 26, 2016 at 02:32 GMT",
        "updated_at": "Friday Aug 26, 2016 at 03:21 GMT",
        "closed_at": "Friday Aug 26, 2016 at 03:21 GMT",
        "merged_at": "Friday Aug 26, 2016 at 03:21 GMT"
    },
    {
        "key": "WT-2863",
        "number": 2984,
        "state": "closed",
        "title": "WT-2863 WT on Windows does not work with UTF-8 paths",
        "body": "WT on Windows assumes ASCII file names. I am changing it to support UTF-8 by translating all strings that refer to file names to UTF-16, and calling the Unicode Windows API.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 25, 2016 at 21:42 GMT",
        "updated_at": "Friday Aug 26, 2016 at 03:09 GMT",
        "closed_at": "Friday Aug 26, 2016 at 03:09 GMT",
        "merged_at": "Friday Aug 26, 2016 at 03:09 GMT"
    },
    {
        "key": "WT-2846",
        "number": 2983,
        "state": "closed",
        "title": "WT-2846 Add flags and fix for destroying thread group.",
        "body": "@agorrod This fixes the leak and allows the failing `test/format` config finish successfully.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 25, 2016 at 21:01 GMT",
        "updated_at": "Friday Aug 26, 2016 at 01:56 GMT",
        "closed_at": "Friday Aug 26, 2016 at 01:56 GMT",
        "merged_at": "Friday Aug 26, 2016 at 01:56 GMT"
    },
    {
        "key": "WT-2862",
        "number": 2982,
        "state": "closed",
        "title": "WT-2862 de-linted a test program",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 25, 2016 at 20:47 GMT",
        "updated_at": "Friday Aug 26, 2016 at 02:09 GMT",
        "closed_at": "Friday Aug 26, 2016 at 02:08 GMT",
        "merged_at": "Friday Aug 26, 2016 at 02:08 GMT"
    },
    {
        "key": "WT-2843",
        "number": 2981,
        "state": "closed",
        "title": "WT-2843 If there is no truncate available, manually zero the log file.",
        "body": "@michaelcahill or @agorrod please review this change to handle log files when truncate is not available.  The change is actually pretty small since `log_zero` already exists.  I'm not thrilled with the goto in there but didn't want to make the code ugly to handle the first-time case.\n\nThis passes the new `truncated-log` test both with and without truncate configured.  We need to discuss where/how to get that setting into one of the Jenkins jobs to test this regularly.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 25, 2016 at 18:44 GMT",
        "updated_at": "Friday Aug 26, 2016 at 02:08 GMT",
        "closed_at": "Friday Aug 26, 2016 at 02:08 GMT",
        "merged_at": "Friday Aug 26, 2016 at 02:08 GMT"
    },
    {
        "key": "WT-2859",
        "number": 2980,
        "state": "closed",
        "title": "WT-2859 Fix inconsistencies between fast/all stats usage",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 25, 2016 at 05:34 GMT",
        "updated_at": "Friday Aug 26, 2016 at 02:21 GMT",
        "closed_at": "Friday Aug 26, 2016 at 02:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2695",
        "number": 2979,
        "state": "closed",
        "title": "WT-2695 Fix build issues caused by zSeries checksum code",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 25, 2016 at 01:38 GMT",
        "updated_at": "Thursday Aug 25, 2016 at 05:24 GMT",
        "closed_at": "Thursday Aug 25, 2016 at 05:24 GMT",
        "merged_at": "Thursday Aug 25, 2016 at 05:24 GMT"
    },
    {
        "key": "WT-2843",
        "number": 2978,
        "state": "closed",
        "title": "WT-2843 Modify test for logging if truncate doesn't exist.",
        "body": "@michaelcahill or @agorrod Please review this change to the `test/recovery/truncate-log` test.  It adds a step of adding a log record and then reading it back.  This passes in the current (with truncate) tree and fails when using `configure ac_cv_func_ftruncate=no`.\n\nThis only is the test portion.  Logging still has assumptions built in that it can truncate.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 24, 2016 at 19:40 GMT",
        "updated_at": "Thursday Aug 25, 2016 at 06:34 GMT",
        "closed_at": "Thursday Aug 25, 2016 at 06:34 GMT",
        "merged_at": "Thursday Aug 25, 2016 at 06:34 GMT"
    },
    {
        "key": "WT-2857",
        "number": 2977,
        "state": "closed",
        "title": "WT-2857 Check for ftruncate function.",
        "body": "@keithbostic Please review this fix that is fallout from the ftruncate changes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 24, 2016 at 18:31 GMT",
        "updated_at": "Wednesday Aug 24, 2016 at 18:45 GMT",
        "closed_at": "Wednesday Aug 24, 2016 at 18:45 GMT",
        "merged_at": "Wednesday Aug 24, 2016 at 18:45 GMT"
    },
    {
        "key": "WT-2853",
        "number": 2976,
        "state": "closed",
        "title": "WT-2853 test improvements",
        "body": "Added testutil_assert for failure condition and reduced test run length. Also cosmetic changes: remove unneeded vars, var declaration reordering, var renaming.\n",
        "base_ref": "wt-2853-forced-eviction-multiple-cursors",
        "created_at": "Wednesday Aug 24, 2016 at 13:58 GMT",
        "updated_at": "Wednesday Aug 24, 2016 at 23:46 GMT",
        "closed_at": "Wednesday Aug 24, 2016 at 23:46 GMT",
        "merged_at": "Wednesday Aug 24, 2016 at 23:46 GMT"
    },
    {
        "key": "WT-2857",
        "number": 2975,
        "state": "closed",
        "title": "WT-2857 POSIX ftruncate calls should be #ifdef'd HAVE_FTRUNCATE",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 24, 2016 at 11:52 GMT",
        "updated_at": "Wednesday Aug 24, 2016 at 17:53 GMT",
        "closed_at": "Wednesday Aug 24, 2016 at 17:53 GMT",
        "merged_at": "Wednesday Aug 24, 2016 at 17:53 GMT"
    },
    {
        "key": "WT-2853",
        "number": 2974,
        "state": "closed",
        "title": "WT-2853 Don't force eviction if multiple cursors are pinning the page.",
        "body": "In some patterns of index lookups, we don't want the second cursor in a session to attempt forced eviction: it will just stall itself to no purpose.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 24, 2016 at 07:59 GMT",
        "updated_at": "Thursday Aug 25, 2016 at 13:09 GMT",
        "closed_at": "Thursday Aug 25, 2016 at 06:38 GMT",
        "merged_at": "Thursday Aug 25, 2016 at 06:38 GMT"
    },
    {
        "key": "WT-2846",
        "number": 2973,
        "state": "closed",
        "title": "WT-2846 Fix bugs related to reconfiguring eviction settings.",
        "body": "The code to support reconfiguring eviction worker threads had\nseveral bugs. Implemented an abstracted utility thread group API\nand switch eviction workers over to using the new abstraction.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 24, 2016 at 05:04 GMT",
        "updated_at": "Thursday Aug 25, 2016 at 17:40 GMT",
        "closed_at": "Thursday Aug 25, 2016 at 17:40 GMT",
        "merged_at": "Thursday Aug 25, 2016 at 17:40 GMT"
    },
    {
        "key": "WT-2850",
        "number": 2972,
        "state": "closed",
        "title": "WT-2850 clang 4.1 attribute warnings when building",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 23, 2016 at 15:20 GMT",
        "updated_at": "Tuesday Aug 23, 2016 at 15:40 GMT",
        "closed_at": "Tuesday Aug 23, 2016 at 15:40 GMT",
        "merged_at": "Tuesday Aug 23, 2016 at 15:40 GMT"
    },
    {
        "key": "WT-2842",
        "number": 2971,
        "state": "closed",
        "title": "WT-2842 split wtperf's configuration into per-database and per-run parts",
        "body": "@agorrod, for your review/consideration.\n\nThe work of making the wtperf configuration code independent of wtperf is here, with one notable exception: in the thread configuration, `cfg->workload` setting is still mixed up with configuration parsing. There are a couple of other odds-and-ends, but that's the only real issue. We could move the `WORKLOAD` structure from `CONFIG` into `CONFIG_OPTS`, but I'm not sure that's the right change -- it's fine if we intend to have standard \"workload\" parsing in whatever generic configuration code we end up creating (and that looks like where you were going in `testutil_parse_opts()`, so it makes sense). Anyway, if you want that change made, let me know.\n\nOne other change we should make before merge is to rename the `CONFIG` structure. It's no longer base configuration at all, it's the runtime database environment information. We can't use `DB`, but we could use `RTE` or `DBH`?\n",
        "base_ref": "develop",
        "created_at": "Sunday Aug 21, 2016 at 16:54 GMT",
        "updated_at": "Wednesday Aug 31, 2016 at 12:01 GMT",
        "closed_at": "Wednesday Aug 31, 2016 at 05:57 GMT",
        "merged_at": "Wednesday Aug 31, 2016 at 05:57 GMT"
    },
    {
        "key": "WT-2795",
        "number": 2970,
        "state": "closed",
        "title": "WT-2795 Update read-only documentation",
        "body": "Explicitly state that parallel read-only handles depend on WT home directory write permission.\n\n@agorrod please review this change to the read-only documentation.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 19, 2016 at 16:01 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 05:59 GMT",
        "closed_at": "Monday Aug 22, 2016 at 02:28 GMT",
        "merged_at": "Monday Aug 22, 2016 at 02:28 GMT"
    },
    {
        "key": "WT-2678",
        "number": 2969,
        "state": "closed",
        "title": "WT-2678 The metadata should not imply that an empty value is true",
        "body": "@michaelcahill, would you be willing to take a fast look at the changes here? I think it's correct, but you wrote all of this code and I'd take comfort from your agreement.\n\ncc: @agorrod \n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 17, 2016 at 20:57 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 05:59 GMT",
        "closed_at": "Monday Aug 22, 2016 at 06:13 GMT",
        "merged_at": "Monday Aug 22, 2016 at 06:13 GMT"
    },
    {
        "key": "WT-2829",
        "number": 2968,
        "state": "closed",
        "title": "WT-2829 Fix missing define for BerkeleyDB",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 17, 2016 at 06:18 GMT",
        "updated_at": "Wednesday Aug 17, 2016 at 13:31 GMT",
        "closed_at": "Wednesday Aug 17, 2016 at 13:31 GMT",
        "merged_at": "Wednesday Aug 17, 2016 at 13:31 GMT"
    },
    {
        "key": "WT-2695",
        "number": 2967,
        "state": "closed",
        "title": "WT-2695 Integrate s390x accelerated crc32c support",
        "body": "I think this is ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 16, 2016 at 20:47 GMT",
        "updated_at": "Thursday Aug 25, 2016 at 22:35 GMT",
        "closed_at": "Thursday Aug 25, 2016 at 00:58 GMT",
        "merged_at": "Thursday Aug 25, 2016 at 00:58 GMT"
    },
    {
        "key": "WT-2847",
        "number": 2966,
        "state": "closed",
        "title": "WT-2847 Merge fair locks into read/write locks.",
        "body": "@agorrod, I think the fair locks are the same as the rwlock write locks -- for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 16, 2016 at 19:56 GMT",
        "updated_at": "Wednesday Aug 17, 2016 at 14:04 GMT",
        "closed_at": "Wednesday Aug 17, 2016 at 14:04 GMT",
        "merged_at": "Wednesday Aug 17, 2016 at 14:04 GMT"
    },
    {
        "key": "WT-2822",
        "number": 2965,
        "state": "closed",
        "title": "WT-2822 Fix possible infinite loop warning",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 16, 2016 at 04:08 GMT",
        "updated_at": "Tuesday Aug 16, 2016 at 05:01 GMT",
        "closed_at": "Tuesday Aug 16, 2016 at 05:01 GMT",
        "merged_at": "Tuesday Aug 16, 2016 at 05:01 GMT"
    },
    {
        "key": "WT-2841",
        "number": 2964,
        "state": "closed",
        "title": "WT-2841 Initialize verbose checkpoint timer at start of checkpoint",
        "body": "This initialization was inadvertently removed in WT-2764\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 15, 2016 at 23:31 GMT",
        "updated_at": "Tuesday Aug 16, 2016 at 01:44 GMT",
        "closed_at": "Tuesday Aug 16, 2016 at 01:43 GMT",
        "merged_at": "Tuesday Aug 16, 2016 at 01:43 GMT"
    },
    {
        "key": "WT-2840",
        "number": 2963,
        "state": "closed",
        "title": "WT-2840 clang analysis: garbage values",
        "body": "@ddanderson, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 15, 2016 at 19:57 GMT",
        "updated_at": "Monday Aug 15, 2016 at 22:43 GMT",
        "closed_at": "Monday Aug 15, 2016 at 22:43 GMT",
        "merged_at": "Monday Aug 15, 2016 at 22:43 GMT"
    },
    {
        "key": "WT-2839",
        "number": 2962,
        "state": "closed",
        "title": "WT-2839 lint: Ignoring return value of function",
        "body": "@ddanderson, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 15, 2016 at 14:34 GMT",
        "updated_at": "Monday Aug 15, 2016 at 14:44 GMT",
        "closed_at": "Monday Aug 15, 2016 at 14:44 GMT",
        "merged_at": "Monday Aug 15, 2016 at 14:44 GMT"
    },
    {
        "key": "WT-2834",
        "number": 2961,
        "state": "closed",
        "title": "WT-2834 Fix sign-change warning with auto conversion from uint to int",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 15, 2016 at 05:07 GMT",
        "updated_at": "Monday Aug 15, 2016 at 05:31 GMT",
        "closed_at": "Monday Aug 15, 2016 at 05:31 GMT",
        "merged_at": "Monday Aug 15, 2016 at 05:31 GMT"
    },
    {
        "key": "WT-2719",
        "number": 2960,
        "state": "closed",
        "title": "WT-2719 Fix memory leak in reconfig test",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 15, 2016 at 04:04 GMT",
        "updated_at": "Monday Aug 15, 2016 at 06:14 GMT",
        "closed_at": "Monday Aug 15, 2016 at 06:14 GMT",
        "merged_at": "Monday Aug 15, 2016 at 06:14 GMT"
    },
    {
        "key": "WT-2719",
        "number": 2959,
        "state": "closed",
        "title": "WT-2719 Allow make check without verbose configured.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 15, 2016 at 00:01 GMT",
        "updated_at": "Monday Aug 15, 2016 at 00:36 GMT",
        "closed_at": "Monday Aug 15, 2016 at 00:36 GMT",
        "merged_at": "Monday Aug 15, 2016 at 00:36 GMT"
    },
    {
        "key": "WT-2834",
        "number": 2958,
        "state": "closed",
        "title": "WT-2834 Shared bloom filters allow only a partial shortcut.",
        "body": "This fixes an error in cursor join evaluations that may occur with bloom filters that are shared when false positives are found.  Things to note:\n\nThe problem only happens when Bloom filters are specified for parts of the join.  It is less likely when Bloom filters are oversized, and more likely when Bloom filters are undersized. That is the problem occurs with the handling of false positives, which become less likely as the Bloom filter is sized larger. The problem only happens when Bloom filters are shared; that occurs when Bloom filters are specified for multiple parts of a conjunction, and the filters have been given the same size parameter.\n\nThe problem will never result in an item not being returned that should be returned.  It will result in item(s) being returned that do not satisfy the conditions of the join.  The fix should ensure that all items returned satisfy the join.\n",
        "base_ref": "develop",
        "created_at": "Sunday Aug 14, 2016 at 17:09 GMT",
        "updated_at": "Monday Aug 15, 2016 at 13:30 GMT",
        "closed_at": "Monday Aug 15, 2016 at 02:15 GMT",
        "merged_at": "Monday Aug 15, 2016 at 02:15 GMT"
    },
    {
        "key": "WT-2783",
        "number": 2957,
        "state": "closed",
        "title": "WT-2783 wtperf multi-btree.wtperf dumps core on Mac",
        "body": "@sulabhM, I didn't realize you owned the JIRA ticket until I was already done, I thought it was a backlog ticket. I apologize for that, my mistake.\n\n@agorrod, we could also just agree we're never going to use wtperf to test for memory leaks, and remove every memory free call from the program -- we're playing relatively fast-and-loose with memory in wtperf at the moment and that would make the whole thing a non-issue.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 13, 2016 at 22:49 GMT",
        "updated_at": "Tuesday Aug 16, 2016 at 03:36 GMT",
        "closed_at": "Tuesday Aug 16, 2016 at 03:36 GMT",
        "merged_at": "Tuesday Aug 16, 2016 at 03:36 GMT"
    },
    {
        "key": "WT-2787",
        "number": 2956,
        "state": "closed",
        "title": "WT-2787 Include src/include/wiredtiger_ext.h is problematic",
        "body": "@agorrod, @daveh86, as @michaelcahill said, people shouldn't try to build against our source tree -- assuming they're not building the WiredTiger library over and over, requiring a separate install step shouldn't be a big deal.\n\nThat said, this particular user is looking at implementing a custom filesystem, so unlike everybody else, he might be repeatedly building the WiredTiger library.\n\nI can't imagine we're going to rename error.h, it's just one of 40 include files, many of which have generic names: api.h, block.h, config.h, extern.h, flags.h, misc.h, posix.h, queue.h and others are all common names, and we're not going to rename all of them.\n\nHere's a possibility: have the configuration step copy wiredtiger_ext.h into the top-level directory along with wiredtiger.h, so you can use `-I /path/to/wiredtiger` instead of reaching down into `src/include/`.\n\nIf nobody likes that change, I think we should close WT-2787 without any change.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 13, 2016 at 20:45 GMT",
        "updated_at": "Monday Aug 15, 2016 at 03:02 GMT",
        "closed_at": "Monday Aug 15, 2016 at 03:02 GMT",
        "merged_at": "Monday Aug 15, 2016 at 03:02 GMT"
    },
    {
        "key": "WT-2631",
        "number": 2955,
        "state": "closed",
        "title": "WT-2631 nullptr is passed for parameters marked with attribute non-null",
        "body": "@agorrod, I believe that I have clean Evergreen runs, so this should be ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 13, 2016 at 18:56 GMT",
        "updated_at": "Monday Aug 15, 2016 at 00:38 GMT",
        "closed_at": "Monday Aug 15, 2016 at 00:38 GMT",
        "merged_at": "Monday Aug 15, 2016 at 00:38 GMT"
    },
    {
        "key": "WT-2835",
        "number": 2954,
        "state": "closed",
        "title": "WT-2835 WT_CONNECTION.leak-memory can skip memory map and cache cleanup",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 13, 2016 at 18:01 GMT",
        "updated_at": "Monday Aug 15, 2016 at 02:00 GMT",
        "closed_at": "Monday Aug 15, 2016 at 00:48 GMT",
        "merged_at": "Monday Aug 15, 2016 at 00:48 GMT"
    },
    {
        "key": "WT-2838",
        "number": 2953,
        "state": "closed",
        "title": "WT-2838 Don't free session handles on close if leak memory is configured",
        "body": "@agorrod, I'm giving up on SERVER-25247, I just don't see it.\n\nHere's a workaround that I think will at least avoid the symptom, and given the number of sessions MongoDB allocates, it's a useful change to make.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 13, 2016 at 17:27 GMT",
        "updated_at": "Monday Aug 15, 2016 at 01:24 GMT",
        "closed_at": "Monday Aug 15, 2016 at 01:24 GMT",
        "merged_at": "Monday Aug 15, 2016 at 01:24 GMT"
    },
    {
        "key": "WT-2822",
        "number": 2952,
        "state": "closed",
        "title": "WT-2822 panic mutex and other functions that cannot fail",
        "body": "@agorrod, @michaelcahill, here's a branch with some changes that might be reasonable.\n\nThe first set in 9038576 is changing the ticket-lock read/write lock/unlock functions to not return errors, which shouldn't be controversial. (The only errors that could actually happen in those functions were calls to `__wt_verbose`; verbose messages on every lock/unlock seems useless, so I just pulled them.)\n\nThe second set in b186c79 is changing the adaptive pthread mutex functions to panic if there is a locking error. This one is more interesting: imagine running with the adaptive pthread mutex functions, and the lock call fails, and we panic, but before returning out of the library, we potentially have multiple threads working on the same chunks of memory because they both hold the lock. I think it's legitimate to question if we can depend on recovery to deal with all possible variants of that? My inclination would be to change the underlying functions to not only panic, but also exit. I'm uncomfortable continuing to run, the failure should never happen, and I'm **really** not interested in adding error handling for every call we make to `__wt_spin_lock/unlock`.\n\nThe third set in e309496 is changing the condition mutex functions to not return errors. I don't think these functions have the same problem as the adaptive pthread mutex functions (that is, they only perform signalling functions, not serialization functions), so I don't think these changes should be controversial, and a panic on failure is sufficient.\n\nThe fourth set in 61d7dce is changing `__wt_verbose()` to not return errors. I don't think it's worth the error-handling complexity (note we already ignore potential errors from `__wt_err()` and `__wt_errx()`).\n\nOne last note: `__wt_try_readlock()` and `__wt_try_writelock()` could be changed to return a boolean instead of an int (busy or not-busy), which would give us a bit more clarity in handling returns from those functions (right now we use `WT_RET` for example). I didn't make that change.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 12, 2016 at 19:38 GMT",
        "updated_at": "Tuesday Aug 16, 2016 at 02:30 GMT",
        "closed_at": "Tuesday Aug 16, 2016 at 02:30 GMT",
        "merged_at": "Tuesday Aug 16, 2016 at 02:30 GMT"
    },
    {
        "key": "WT-2832",
        "number": 2951,
        "state": "closed",
        "title": "WT-2832 Python test uses hard-coded temporary directory",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 12, 2016 at 17:14 GMT",
        "updated_at": "Tuesday Aug 30, 2016 at 05:59 GMT",
        "closed_at": "Monday Aug 15, 2016 at 02:00 GMT",
        "merged_at": "Monday Aug 15, 2016 at 02:00 GMT"
    },
    {
        "key": "WT-2711",
        "number": 2950,
        "state": "closed",
        "title": "WT-2711 Change statistics log configuration options",
        "body": "Ignore statistics_log.path configuration as a reconfiguration option.\n\n@agorrod, for your review/consideration.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Friday Aug 12, 2016 at 14:47 GMT",
        "updated_at": "Monday Aug 15, 2016 at 01:07 GMT",
        "closed_at": "Monday Aug 15, 2016 at 01:07 GMT",
        "merged_at": "Monday Aug 15, 2016 at 01:07 GMT"
    },
    {
        "key": "WT-2816",
        "number": 2949,
        "state": "closed",
        "title": "WT-2816 General improvements to WiredTiger eviction performance.",
        "body": "_NOT FOR COMMIT_ in their current form.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 12, 2016 at 07:35 GMT",
        "updated_at": "Wednesday Aug 31, 2016 at 05:36 GMT",
        "closed_at": "Friday Aug 26, 2016 at 02:50 GMT",
        "merged_at": "Friday Aug 26, 2016 at 02:50 GMT"
    },
    {
        "key": "WT-2828",
        "number": 2948,
        "state": "closed",
        "title": "WT-2828 wtperf long test changes",
        "body": "Make long test reflect MongoDB rather than riak\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 12, 2016 at 00:47 GMT",
        "updated_at": "Monday Aug 15, 2016 at 03:29 GMT",
        "closed_at": "Monday Aug 15, 2016 at 03:29 GMT",
        "merged_at": "Monday Aug 15, 2016 at 03:29 GMT"
    },
    {
        "key": "WT-2638",
        "number": 2947,
        "state": "closed",
        "title": "WT-2638 Add extension to the Windows file system implementation.",
        "body": "Logging relies on being able to extend files, and the code shuffling for splitting fallocate and truncate meant that it was no longer working on Windows.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 11, 2016 at 06:45 GMT",
        "updated_at": "Thursday Aug 11, 2016 at 11:21 GMT",
        "closed_at": "Thursday Aug 11, 2016 at 11:21 GMT",
        "merged_at": "Thursday Aug 11, 2016 at 11:21 GMT"
    },
    {
        "key": "WT-2827",
        "number": 2946,
        "state": "closed",
        "title": "WT-2827 Set a reasonable minimum for log_size.",
        "body": "@agorrod Please review this change.  If a user sets a small `log_size` it will use the log file size.  We may or may not want this semi-silent change to the user's config. \n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 10, 2016 at 20:41 GMT",
        "updated_at": "Monday Aug 15, 2016 at 00:38 GMT",
        "closed_at": "Monday Aug 15, 2016 at 00:38 GMT",
        "merged_at": "Monday Aug 15, 2016 at 00:38 GMT"
    },
    {
        "key": "WT-2719",
        "number": 2945,
        "state": "closed",
        "title": "WT-2719 add fuzz testing for WiredTiger options and reconfiguration",
        "body": "@agorrod, for your review/consideration.\n\nI ended up doing this as a csuite program, I thought it would be easier.\n\nIf you disagree and want it in Python, let me know and I'll do the translation.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 10, 2016 at 20:01 GMT",
        "updated_at": "Friday Aug 12, 2016 at 12:37 GMT",
        "closed_at": "Friday Aug 12, 2016 at 12:37 GMT",
        "merged_at": "Friday Aug 12, 2016 at 12:37 GMT"
    },
    {
        "key": "WT-2826",
        "number": 2944,
        "state": "closed",
        "title": "WT-2826 clang38 false positive on uninitialized variable.",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 10, 2016 at 16:11 GMT",
        "updated_at": "Wednesday Aug 10, 2016 at 16:35 GMT",
        "closed_at": "Wednesday Aug 10, 2016 at 16:35 GMT",
        "merged_at": "Wednesday Aug 10, 2016 at 16:35 GMT"
    },
    {
        "key": "WT-2323",
        "number": 2943,
        "state": "closed",
        "title": "WT-2323 Allocate a transaction id at the beginning of join iteration",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 10, 2016 at 14:25 GMT",
        "updated_at": "Tuesday Sep 06, 2016 at 15:14 GMT",
        "closed_at": "Monday Sep 05, 2016 at 01:08 GMT",
        "merged_at": "Monday Sep 05, 2016 at 01:08 GMT"
    },
    {
        "key": "WT-2818",
        "number": 2942,
        "state": "closed",
        "title": "WT-2818 Change the page visibility check when queuing pages for eviction",
        "body": "The existing check discards pages that could potentially have\nsome reconciliation done on them. This change allows workloads\nto make more progress when running with constrained cache sizes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 10, 2016 at 07:41 GMT",
        "updated_at": "Thursday Aug 11, 2016 at 01:43 GMT",
        "closed_at": "Thursday Aug 11, 2016 at 01:43 GMT",
        "merged_at": "Thursday Aug 11, 2016 at 01:43 GMT"
    },
    {
        "key": "WT-2817",
        "number": 2941,
        "state": "closed",
        "title": "WT-2817 Add wtperf conf to stress test checkpoints with updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 10, 2016 at 05:51 GMT",
        "updated_at": "Friday Aug 12, 2016 at 00:19 GMT",
        "closed_at": "Friday Aug 12, 2016 at 00:19 GMT",
        "merged_at": "Friday Aug 12, 2016 at 00:19 GMT"
    },
    {
        "key": "WT-2823",
        "number": 2940,
        "state": "closed",
        "title": "WT-2823 support file handles without a truncate method",
        "body": "Changes to support file systems without file truncate support.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 09, 2016 at 15:11 GMT",
        "updated_at": "Friday Aug 12, 2016 at 15:05 GMT",
        "closed_at": "Friday Aug 12, 2016 at 07:02 GMT",
        "merged_at": "Friday Aug 12, 2016 at 07:02 GMT"
    },
    {
        "key": "WT-2820",
        "number": 2939,
        "state": "closed",
        "title": "WT-2820 add gcc warn_unused_result attribute",
        "body": "@michaelcahill, @agorrod, these changes fail our code if it ignores an error return from a WiredTiger method.\n\nI fixed the bugs it found and pushed those fixes into #2938, because I'm pretty sure we'll merge that branch, and, well, these changes are pretty ugly. At the least, we probably shouldn't implement these checks based on --enable-diagnostic.\n\nAnyway, let's talk it over when you have a few minutes.\n",
        "base_ref": "wt-2820-warn-unused-result",
        "created_at": "Monday Aug 08, 2016 at 21:42 GMT",
        "updated_at": "Tuesday Aug 09, 2016 at 10:59 GMT",
        "closed_at": "Tuesday Aug 09, 2016 at 10:59 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2820",
        "number": 2938,
        "state": "closed",
        "title": "WT-2820 add gcc warn_unused_result attribute",
        "body": "@michaelcahill, here are the changes we discussed to turn on gcc error warnings when a function call return is ignored.\n\nI additionally added the gcc `cold` attribute to the standard error, verbose and message functions, see 08cfc8f. It's advertised to improve branch prediction, shrug.\n\nThe only big change was to the Btree page debug code (it had to be extensively reworked), but that shouldn't matter to anyone outside the WiredTiger team.\n\nI don't think there are any bug fixes in these changes (other than a few places where we're testing function return values and weren't previously).\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 08, 2016 at 16:43 GMT",
        "updated_at": "Friday Aug 12, 2016 at 06:49 GMT",
        "closed_at": "Friday Aug 12, 2016 at 06:49 GMT",
        "merged_at": "Friday Aug 12, 2016 at 06:49 GMT"
    },
    {
        "key": "WT-2734",
        "number": 2937,
        "state": "closed",
        "title": "WT-2734 Improve documentation of eviction configuration settings.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 08, 2016 at 07:08 GMT",
        "updated_at": "Tuesday Aug 09, 2016 at 01:35 GMT",
        "closed_at": "Tuesday Aug 09, 2016 at 01:35 GMT",
        "merged_at": "Tuesday Aug 09, 2016 at 01:35 GMT"
    },
    {
        "key": "WT-2816",
        "number": 2936,
        "state": "closed",
        "title": "WT-2816 Improve calculation of pages to walk in different cache modes.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 08, 2016 at 02:03 GMT",
        "updated_at": "Wednesday Aug 10, 2016 at 03:28 GMT",
        "closed_at": "Wednesday Aug 10, 2016 at 03:28 GMT",
        "merged_at": "Wednesday Aug 10, 2016 at 03:28 GMT"
    },
    {
        "key": "WT-2813",
        "number": 2935,
        "state": "closed",
        "title": "WT-2813 Configure eviction dirty settings explicitly for LSM.",
        "body": "@agorrod please review.  Your comment in the ticket was a bit confusing, but I changed the settings if the chosen cache size is less than 20Mb as well as if it is using LSM.  This allows the two CONFIGs in the ticket to repeatedly complete now.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 05, 2016 at 17:11 GMT",
        "updated_at": "Monday Aug 08, 2016 at 00:38 GMT",
        "closed_at": "Monday Aug 08, 2016 at 00:38 GMT",
        "merged_at": "Monday Aug 08, 2016 at 00:38 GMT"
    },
    {
        "key": "WT-2811",
        "number": 2934,
        "state": "closed",
        "title": "WT-2811 The checkpoint session should not ignore it's own transaction ID",
        "body": "There is a sanity check in reconciliation that transaction IDs always\nmove forward. The tracked ID is updated by both the checkpoint session\nand reconciliation in service of eviction. Recent changes in when\na btree is open for eviction mean that interleaving reconciliation\nbetween eviction and checkpoint made it look like time went backwards.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 05, 2016 at 06:28 GMT",
        "updated_at": "Friday Aug 05, 2016 at 07:08 GMT",
        "closed_at": "Friday Aug 05, 2016 at 07:08 GMT",
        "merged_at": "Friday Aug 05, 2016 at 07:08 GMT"
    },
    {
        "key": "WT-2814",
        "number": 2933,
        "state": "closed",
        "title": "WT-2814 Add new single op truncate mode to wtperf",
        "body": "Enabled via new truncate_single_ops option.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 05, 2016 at 06:14 GMT",
        "updated_at": "Monday Aug 08, 2016 at 04:39 GMT",
        "closed_at": "Monday Aug 08, 2016 at 04:39 GMT",
        "merged_at": "Monday Aug 08, 2016 at 04:39 GMT"
    },
    {
        "key": "WT-2650",
        "number": 2932,
        "state": "closed",
        "title": "WT-2650 Allow for backslash escapes in the configuration value for \"error_prefix\"",
        "body": "This is potentially part of WT-2650, I separated it out.  It shows how we can allow for escapes in configuration values (whether we really need it this particular case, I'm not sure).\n\nTo illustrate, consider `blorg.wtperf`:\n\n```\n$ cat blorg.wtperf\nconn_config=\"cache_size=500MB,error_prefix=\\\"hello,\\\\\\\"world\\\\\\\": \\\"\"\nsess_config=\"BLORG\"\n$ ./wtperf -O blorg.wtperf\n[1470334114:635446][3704:0x7fff70dde000], hello,\"world\": , WT_CONNECTION.open_session: unknown configuration key: 'BLORG': Invalid argument\nError opening a session on WT_TEST Error: Invalid argument\n```\n",
        "base_ref": "wt-2650-escaped-quotes-api",
        "created_at": "Thursday Aug 04, 2016 at 18:17 GMT",
        "updated_at": "Friday Aug 12, 2016 at 07:00 GMT",
        "closed_at": "Friday Aug 12, 2016 at 07:00 GMT",
        "merged_at": "Friday Aug 12, 2016 at 07:00 GMT"
    },
    {
        "key": "WT-2812",
        "number": 2931,
        "state": "closed",
        "title": "WT-2812 Verify cache_size before dividing.",
        "body": "It can be zero during reconfigure.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 04, 2016 at 16:28 GMT",
        "updated_at": "Thursday Aug 04, 2016 at 18:38 GMT",
        "closed_at": "Thursday Aug 04, 2016 at 18:38 GMT",
        "merged_at": "Thursday Aug 04, 2016 at 18:38 GMT"
    },
    {
        "key": "WT-2811",
        "number": 2930,
        "state": "closed",
        "title": "WT-2811 Include the checkpoint transaction if there is no btree.",
        "body": "Also make sure there is always a read barrier between reading the\noldest ID and the pinned checkpoint ID.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 04, 2016 at 13:04 GMT",
        "updated_at": "Thursday Aug 04, 2016 at 18:42 GMT",
        "closed_at": "Thursday Aug 04, 2016 at 18:42 GMT",
        "merged_at": "Thursday Aug 04, 2016 at 18:42 GMT"
    },
    {
        "key": "WT-2801",
        "number": 2929,
        "state": "closed",
        "title": "WT-2801 Exclude eviction from the metadata until checkpoint is stable",
        "body": "We were releasing the checkpoint transaction too early, and ignoring\nit in the metadata file.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 04, 2016 at 01:03 GMT",
        "updated_at": "Thursday Aug 04, 2016 at 01:47 GMT",
        "closed_at": "Thursday Aug 04, 2016 at 01:47 GMT",
        "merged_at": "Thursday Aug 04, 2016 at 01:47 GMT"
    },
    {
        "key": "WT-2688",
        "number": 2928,
        "state": "closed",
        "title": "WT-2688 improve build error messages when SWIG is unavailable.",
        "body": "Instead of getting errors like this:\n\n```\n(cd /Users/dda/wt/git/wt-2808-configure-swig/lang/java && \\\n         -Wall -v -java -nodefaultctor -nodefaultdtor -package com.wiredtiger.db -I/Users/dda/wt/git/wt-2808-configure-swig/build_posix -outdir src/com/wiredtiger/db -o wiredtiger_wrap.c wiredtiger.i)\n/bin/sh: -Wall: command not found\n```\n\nyou get errors like this:\n\n```\n(cd /Users/dda/wt/git/wt-2808-configure-swig/lang/java && \\\n        SWIG_NOT_FOUND_DURING_CONFIGURE -Wall -v -java -nodefaultctor -nodefaultdtor -package com.wiredtiger.db -I/Users/dda/wt/git/wt-2808-configure-swig/build_posix -outdir src/com/wiredtiger/db -o wiredtiger_wrap.c wiredtiger.i)\n/bin/sh: SWIG_NOT_FOUND_DURING_CONFIGURE: command not found\n```\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 03, 2016 at 13:46 GMT",
        "updated_at": "Tuesday Aug 23, 2016 at 13:46 GMT",
        "closed_at": "Thursday Aug 04, 2016 at 16:38 GMT",
        "merged_at": "Thursday Aug 04, 2016 at 16:38 GMT"
    },
    {
        "key": "WT-2764",
        "number": 2927,
        "state": "closed",
        "title": "WT-2764 Compilation fixes size_t -> uint64_t on OSX.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 03, 2016 at 13:10 GMT",
        "updated_at": "Wednesday Aug 03, 2016 at 16:02 GMT",
        "closed_at": "Wednesday Aug 03, 2016 at 16:02 GMT",
        "merged_at": "Wednesday Aug 03, 2016 at 16:02 GMT"
    },
    {
        "key": "WT-2764",
        "number": 2926,
        "state": "closed",
        "title": "WT-2764 Fix a bug calculating the dirty percentage of cache.",
        "body": "Also fix the statistic measuring the total time for checkpoint\nscrubbing.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 03, 2016 at 07:51 GMT",
        "updated_at": "Wednesday Aug 03, 2016 at 12:52 GMT",
        "closed_at": "Wednesday Aug 03, 2016 at 12:52 GMT",
        "merged_at": "Wednesday Aug 03, 2016 at 12:52 GMT"
    },
    {
        "key": "WT-2770",
        "number": 2925,
        "state": "closed",
        "title": "WT-2770 Add statistics tracking schema operations",
        "body": "Tracking successful and failed attempts separately for each of the following:\ncreate\ncompact\ndrop\nrebalance\nrename\nsalvage\ntruncate\nverify\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 02, 2016 at 06:19 GMT",
        "updated_at": "Wednesday Aug 03, 2016 at 06:45 GMT",
        "closed_at": "Wednesday Aug 03, 2016 at 06:45 GMT",
        "merged_at": "Wednesday Aug 03, 2016 at 06:45 GMT"
    },
    {
        "key": "WT-2804",
        "number": 2924,
        "state": "closed",
        "title": "WT-2804 Don't read values in a tree without a snapshot.",
        "body": "Improve two recent assertions, one from WT-2798 relating to writing\nmetadata updates to disk that are part of a running transaction, and\nanother from WT-2802 that checks that we don't try to copy values from a\ncursor without a transaction pinned.  The latter doesn't apply to\ncursors on checkpoints (including chunk cursors in an LSM tree).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 02, 2016 at 04:30 GMT",
        "updated_at": "Tuesday Aug 02, 2016 at 06:42 GMT",
        "closed_at": "Tuesday Aug 02, 2016 at 06:42 GMT",
        "merged_at": "Tuesday Aug 02, 2016 at 06:42 GMT"
    },
    {
        "key": "WT-2806",
        "number": 2923,
        "state": "closed",
        "title": "WT-2806 Off-by-one allocation in wtperf.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 01, 2016 at 23:41 GMT",
        "updated_at": "Tuesday Aug 02, 2016 at 00:47 GMT",
        "closed_at": "Tuesday Aug 02, 2016 at 00:47 GMT",
        "merged_at": "Tuesday Aug 02, 2016 at 00:47 GMT"
    },
    {
        "key": "WT-2801",
        "number": 2922,
        "state": "closed",
        "title": "WT-2801 Prevent eviction of metadata updates by a running checkpoint.",
        "body": "Only update btree->checkpoint_gen during a full checkpoint operation\nthat is holding the checkpoint lock.  Otherwise, updates in the\nmetadata by a running checkpoint can pass the \"visible_all\" test and be\nevicted.\n\nFollowup to WT-2798.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 01, 2016 at 23:39 GMT",
        "updated_at": "Tuesday Aug 02, 2016 at 01:36 GMT",
        "closed_at": "Tuesday Aug 02, 2016 at 01:36 GMT",
        "merged_at": "Tuesday Aug 02, 2016 at 01:36 GMT"
    },
    {
        "key": "WT-2805",
        "number": 2921,
        "state": "closed",
        "title": "WT-2805 Avoid infinite recursion on error stream failure.",
        "body": "Previously, if both a custom and the default error streams failed to\nwrite it caused infinite recursion.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 01, 2016 at 23:35 GMT",
        "updated_at": "Tuesday Aug 02, 2016 at 00:48 GMT",
        "closed_at": "Tuesday Aug 02, 2016 at 00:48 GMT",
        "merged_at": "Tuesday Aug 02, 2016 at 00:48 GMT"
    },
    {
        "key": "WT-2803",
        "number": 2920,
        "state": "closed",
        "title": "WT-2803 Add VERBOSE=1 to all make check jobs",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 01, 2016 at 01:48 GMT",
        "updated_at": "Monday Aug 01, 2016 at 05:16 GMT",
        "closed_at": "Monday Aug 01, 2016 at 05:16 GMT",
        "merged_at": "Monday Aug 01, 2016 at 05:16 GMT"
    },
    {
        "key": "WT-2725",
        "number": 2919,
        "state": "closed",
        "title": "WT-2725 Prevent eviction of read-only pages with recent updates.",
        "body": "Reverts some of 0136888b3b677d67ff929c6f5b1f8d6aa6793b13.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Aug 01, 2016 at 00:51 GMT",
        "updated_at": "Monday Aug 01, 2016 at 05:21 GMT",
        "closed_at": "Monday Aug 01, 2016 at 05:21 GMT",
        "merged_at": "Monday Aug 01, 2016 at 05:21 GMT"
    },
    {
        "key": "WT-2766",
        "number": 2918,
        "state": "closed",
        "title": "WT-2766 Don't sweep LAS cache when aren't making progess in eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 29, 2016 at 04:46 GMT",
        "updated_at": "Friday Aug 12, 2016 at 07:15 GMT",
        "closed_at": "Friday Aug 12, 2016 at 07:15 GMT",
        "merged_at": "Friday Aug 12, 2016 at 07:15 GMT"
    },
    {
        "key": "WT-2802",
        "number": 2917,
        "state": "closed",
        "title": "WT-2802 Copy values during commit before releasing snapshot.",
        "body": "When committing a transaction with cursors positioned, copy values\nbefore releasing the transaction snapshot.  Otherwise, there is a window\nwhere the oldest transaction ID could move past the committing\ntransaction, and the values it needs to copy get freed by another\nthread.\n\nThis only applies when logging is enabled, and only in applications that\ncommit transactions with positioned cursors.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 29, 2016 at 04:14 GMT",
        "updated_at": "Friday Jul 29, 2016 at 06:33 GMT",
        "closed_at": "Friday Jul 29, 2016 at 06:33 GMT",
        "merged_at": "Friday Jul 29, 2016 at 06:33 GMT"
    },
    {
        "key": "WT-2779",
        "number": 2916,
        "state": "closed",
        "title": "WT-2779 Fix large pages getting generated with raw compression",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 29, 2016 at 02:02 GMT",
        "updated_at": "Friday Jul 29, 2016 at 06:30 GMT",
        "closed_at": "Friday Jul 29, 2016 at 06:29 GMT",
        "merged_at": "Friday Jul 29, 2016 at 06:29 GMT"
    },
    {
        "key": "WT-2800",
        "number": 2915,
        "state": "closed",
        "title": "WT-2800 Fix incorrect error message.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 28, 2016 at 15:49 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 16:13 GMT",
        "closed_at": "Thursday Jul 28, 2016 at 16:13 GMT",
        "merged_at": "Thursday Jul 28, 2016 at 16:13 GMT"
    },
    {
        "key": "WT-2796",
        "number": 2914,
        "state": "closed",
        "title": "WT-2796 Fix a memory leak when using the lookaside table.",
        "body": "(This was introduced in WT-2737).\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 28, 2016 at 05:08 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 07:03 GMT",
        "closed_at": "Thursday Jul 28, 2016 at 07:03 GMT",
        "merged_at": "Thursday Jul 28, 2016 at 07:03 GMT"
    },
    {
        "key": "WT-2703",
        "number": 2913,
        "state": "closed",
        "title": "WT-2703 Write page deltas instead of full pages",
        "body": "Opened a pull request to track the POC branch.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 28, 2016 at 00:49 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 05:09 GMT",
        "closed_at": "Thursday Jul 28, 2016 at 05:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2793",
        "number": 2912,
        "state": "closed",
        "title": "WT-2793 Enhance statistics related to overflow values",
        "body": "@agorrod Here are some changes for the wtperf and overflow tests.  I changed the 130k one to be btree so that we run both with LSM and btree.  That negates the existing plot.  I removed the unused stat and put the overflow related ones from dsrc into the conn as well.\n\nI know we're not supposed to remove existing stats, but this one was always 0 and meaningless.  Again, please let me know and I'll do the merge since it needs Jenkins changes to go along with it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 27, 2016 at 23:17 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 15:57 GMT",
        "closed_at": "Thursday Jul 28, 2016 at 15:57 GMT",
        "merged_at": "Thursday Jul 28, 2016 at 15:57 GMT"
    },
    {
        "key": "WT-2764",
        "number": 2911,
        "state": "closed",
        "title": "WT-2764 Release checkpoint transaction before syncing",
        "body": "@michaelcahill, Sue & I were talking about the leaked memory and using the WT-2764 branch, so I built it. Here's some random stuff, hope it saves you 5 minutes. :)\n",
        "base_ref": "wt-2764",
        "created_at": "Wednesday Jul 27, 2016 at 15:45 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 00:41 GMT",
        "closed_at": "Thursday Jul 28, 2016 at 00:40 GMT",
        "merged_at": "Thursday Jul 28, 2016 at 00:40 GMT"
    },
    {
        "key": "WT-2798",
        "number": 2910,
        "state": "closed",
        "title": "WT-2798 Fix data consistency bug with table creates during a checkpoint.",
        "body": "When logging is disabled, a create operation (and potentially other\nmetadata updates) could write partially completed checkpoint metadata,\nleaving on-disk files inconsistent until the checkpoint completes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 27, 2016 at 04:35 GMT",
        "updated_at": "Wednesday Jul 27, 2016 at 06:18 GMT",
        "closed_at": "Wednesday Jul 27, 2016 at 06:18 GMT",
        "merged_at": "Wednesday Jul 27, 2016 at 06:18 GMT"
    },
    {
        "key": "WT-2638",
        "number": 2908,
        "state": "closed",
        "title": "WT-2638 ftruncate may not be supported",
        "body": "@michaelcahill, @agorrod, for your review/consideration.\n\nThere's additional discussion in WT-2638.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 26, 2016 at 17:20 GMT",
        "updated_at": "Tuesday Aug 09, 2016 at 01:36 GMT",
        "closed_at": "Tuesday Aug 09, 2016 at 01:36 GMT",
        "merged_at": "Tuesday Aug 09, 2016 at 01:36 GMT"
    },
    {
        "key": "WT-2772",
        "number": 2907,
        "state": "closed",
        "title": "WT-2772 Remove bigval run.",
        "body": "Self-review.  Remove comment from config file.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 26, 2016 at 16:11 GMT",
        "updated_at": "Tuesday Jul 26, 2016 at 16:34 GMT",
        "closed_at": "Tuesday Jul 26, 2016 at 16:34 GMT",
        "merged_at": "Tuesday Jul 26, 2016 at 16:34 GMT"
    },
    {
        "key": "WT-2791",
        "number": 2906,
        "state": "closed",
        "title": "WT-2791 Upload artifacts for each build. Rename current artifacts to \"Binaries\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 26, 2016 at 05:02 GMT",
        "updated_at": "Tuesday Jul 26, 2016 at 07:16 GMT",
        "closed_at": "Tuesday Jul 26, 2016 at 07:16 GMT",
        "merged_at": "Tuesday Jul 26, 2016 at 07:16 GMT"
    },
    {
        "key": "WT-2785",
        "number": 2905,
        "state": "closed",
        "title": "WT-2785 Scrub dirty pages rather than evicting them: single-page reconciliation",
        "body": "@michaelcahill, for your review/consideration.\n\nI don't like the way this turned out (the split between WT_MULTI structures and a single replacement block is beyond baroque), but I can't see anything better -- your good idea goes here.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 25, 2016 at 20:41 GMT",
        "updated_at": "Tuesday Jul 26, 2016 at 03:01 GMT",
        "closed_at": "Tuesday Jul 26, 2016 at 03:01 GMT",
        "merged_at": "Tuesday Jul 26, 2016 at 03:01 GMT"
    },
    {
        "key": "ad-",
        "number": 2904,
        "state": "closed",
        "title": "Fix a JNI thread-safe bug which may cause core dump",
        "body": "The updated ex_thread test may crash without this fix, because JNI wrapper tried to free session->lang_private after it returned session with connection.close().\nAfter java thread A open the session, it will allocate memory and assign it to session->lang_private, when java thread A close the session, it will call connection.close(session) first, and then try to free session->lang_private. The problem is: after thread A call connection.close() and before it free lang_private, another thread may reuse this session and close it, then thread A found lang_private is set to NULL by another thread and it crashes.\nSo we need to free lang_private before we call connection.close in the JNI wrapper.\n",
        "base_ref": "master",
        "created_at": "Monday Jul 25, 2016 at 06:21 GMT",
        "updated_at": "Monday Jul 25, 2016 at 14:58 GMT",
        "closed_at": "Monday Jul 25, 2016 at 14:58 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2737",
        "number": 2903,
        "state": "closed",
        "title": "WT-2737 Page scrubbing: more fixes.",
        "body": "Move all flag setting outside of reconciliation, don't save a disk image in the update/restore path unless there are updates to be restored to that segment of the name space.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 23, 2016 at 16:52 GMT",
        "updated_at": "Saturday Jul 23, 2016 at 17:24 GMT",
        "closed_at": "Saturday Jul 23, 2016 at 17:23 GMT",
        "merged_at": "Saturday Jul 23, 2016 at 17:23 GMT"
    },
    {
        "key": "WT-2772",
        "number": 2902,
        "state": "closed",
        "title": "WT-2772 Adjust log.wtperf config.  Remove unneeded configs.",
        "body": "@michaelcahill or @agorrod please review this initial set of changes for the log wtperf.  I have a set of changes to the Jenkins job lined up and ready to go too once this is merged.  I still need to make plot changes though.\n\nSo please just let me know when it is LGTM and I will do the merge myself so I can make the Jenkins changes at that time.  Thanks!\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 22, 2016 at 21:17 GMT",
        "updated_at": "Monday Jul 25, 2016 at 18:21 GMT",
        "closed_at": "Monday Jul 25, 2016 at 18:21 GMT",
        "merged_at": "Monday Jul 25, 2016 at 18:21 GMT"
    },
    {
        "key": "WT-2737",
        "number": 2901,
        "state": "closed",
        "title": "WT-2737 page scrubbing: more fixes",
        "body": "@michaelcahill, my change in 8bfe54b broke the PPC, here's a re-work.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 22, 2016 at 19:42 GMT",
        "updated_at": "Friday Jul 22, 2016 at 20:16 GMT",
        "closed_at": "Friday Jul 22, 2016 at 20:16 GMT",
        "merged_at": "Friday Jul 22, 2016 at 20:16 GMT"
    },
    {
        "key": "WT-2737",
        "number": 2900,
        "state": "closed",
        "title": "WT-2737 page scrubbing: more fixes",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 22, 2016 at 17:42 GMT",
        "updated_at": "Friday Jul 22, 2016 at 18:08 GMT",
        "closed_at": "Friday Jul 22, 2016 at 18:07 GMT",
        "merged_at": "Friday Jul 22, 2016 at 18:07 GMT"
    },
    {
        "key": "WT-2737",
        "number": 2899,
        "state": "closed",
        "title": "WT-2737 Page scrubbing: more fixes.",
        "body": "- Swap endianness of the page header back after writing (for zSeries).\n- Deal with restoring updates when the WT_EVICT_SCRUB flag is not set:\n  we want to save disk images for only those pages that have updates to\n  restore.  Unfortunately, that isn't easy to figure out down in the\n  guts of raw compression.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 22, 2016 at 04:25 GMT",
        "updated_at": "Friday Jul 22, 2016 at 23:52 GMT",
        "closed_at": "Friday Jul 22, 2016 at 14:55 GMT",
        "merged_at": "Friday Jul 22, 2016 at 14:55 GMT"
    },
    {
        "key": "WT-2645",
        "number": 2898,
        "state": "closed",
        "title": "WT-2645 Moved the complexity of dump from the dump utility to the metadata cursor",
        "body": "Opening a metadata cursor with `\"create\"` folds column group metadata into the table for simple tables (those with no named column groups), and for more non-simple tables, each column group has its source entry folded in.\n\nThis has been tested by comparing the output files from `test_dump*` and `test_jsondump*` (e.g. `dump.out` and `jsondump.out`) from those of previous runs.  The only difference (other than spacing in JSON) was a bug fix: previously calling `wt dump index:table_name:index_name` would result in two output entries for the named index.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 22, 2016 at 01:11 GMT",
        "updated_at": "Monday Aug 15, 2016 at 05:54 GMT",
        "closed_at": "Monday Aug 15, 2016 at 05:54 GMT",
        "merged_at": "Monday Aug 15, 2016 at 05:54 GMT"
    },
    {
        "key": "WT-2781",
        "number": 2897,
        "state": "closed",
        "title": "WT-2781 Add checkpoint_wait configuration for bulk cursor open API.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 22, 2016 at 01:00 GMT",
        "updated_at": "Tuesday Jul 26, 2016 at 20:27 GMT",
        "closed_at": "Tuesday Jul 26, 2016 at 20:27 GMT",
        "merged_at": "Tuesday Jul 26, 2016 at 20:27 GMT"
    },
    {
        "key": "WT-2737",
        "number": 2896,
        "state": "closed",
        "title": "WT-2737 Scrub dirty pages rather than evicting them",
        "body": "@agorrod, @michaelcahill, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 21, 2016 at 20:45 GMT",
        "updated_at": "Thursday Jul 21, 2016 at 23:23 GMT",
        "closed_at": "Thursday Jul 21, 2016 at 23:23 GMT",
        "merged_at": "Thursday Jul 21, 2016 at 23:23 GMT"
    },
    {
        "key": "WT-2239",
        "number": 2895,
        "state": "closed",
        "title": "WT-2239 Make sure LSM cursors read up to date dsk_gen, it was racing with compact.",
        "body": "@michaelcahill and @agorrod Please review this change to fix the assertion failure as we discussed last night.  I have see it detect the assertion-triggering situation a few times and continue on with the fix on bengal.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 21, 2016 at 15:24 GMT",
        "updated_at": "Friday Jul 22, 2016 at 02:52 GMT",
        "closed_at": "Friday Jul 22, 2016 at 02:52 GMT",
        "merged_at": "Friday Jul 22, 2016 at 02:52 GMT"
    },
    {
        "key": "WT-2670",
        "number": 2894,
        "state": "closed",
        "title": "WT-2670 Inefficient I/O when read full DB (poor readahead)",
        "body": "@agorrod, @michaelcahill, possible solution to WT-2670 for your consideration/review.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 21, 2016 at 13:03 GMT",
        "updated_at": "Saturday Jul 23, 2016 at 00:57 GMT",
        "closed_at": "Saturday Jul 23, 2016 at 00:57 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2737",
        "number": 2893,
        "state": "closed",
        "title": "WT-2737 Fix a set of places where we ignored the return value of a function.",
        "body": "@agorrod, @sueloverso, for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 21, 2016 at 12:29 GMT",
        "updated_at": "Thursday Jul 21, 2016 at 15:25 GMT",
        "closed_at": "Thursday Jul 21, 2016 at 15:25 GMT",
        "merged_at": "Thursday Jul 21, 2016 at 15:25 GMT"
    },
    {
        "key": "WT-2773",
        "number": 2892,
        "state": "closed",
        "title": "WT-2773 Fix for reusing page images that are not in cache.",
        "body": "We can have a saved record of a disk image in page->modify, but with\nmulti->disk_image == NULL.  In that case, we don't want to copy the\nnew data over the top: for one thing, it may be compressed.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 21, 2016 at 07:08 GMT",
        "updated_at": "Thursday Jul 21, 2016 at 12:26 GMT",
        "closed_at": "Thursday Jul 21, 2016 at 07:30 GMT",
        "merged_at": "Thursday Jul 21, 2016 at 07:30 GMT"
    },
    {
        "key": "WT-11111",
        "number": 2891,
        "state": "closed",
        "title": "WT-11111 David Breakin windows!",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 21, 2016 at 03:12 GMT",
        "updated_at": "Thursday Jul 21, 2016 at 05:24 GMT",
        "closed_at": "Thursday Jul 21, 2016 at 05:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2782",
        "number": 2890,
        "state": "closed",
        "title": "WT-2782 Minor text changes for file system functions",
        "body": "@keithbostic Please review these minor comment and doc changes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 20, 2016 at 14:45 GMT",
        "updated_at": "Wednesday Jul 20, 2016 at 15:32 GMT",
        "closed_at": "Wednesday Jul 20, 2016 at 15:32 GMT",
        "merged_at": "Wednesday Jul 20, 2016 at 15:32 GMT"
    },
    {
        "key": "WT-2737",
        "number": 2889,
        "state": "closed",
        "title": "WT-2737 Scrub dirty pages rather than evicting them",
        "body": "@agorrod, @michaelcahill, here is an initial set of changes, that re-instantiates pages resulting from multi-block reconciliations.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 19, 2016 at 21:22 GMT",
        "updated_at": "Thursday Jul 21, 2016 at 05:40 GMT",
        "closed_at": "Thursday Jul 21, 2016 at 05:40 GMT",
        "merged_at": "Thursday Jul 21, 2016 at 05:40 GMT"
    },
    {
        "key": "WT-2778",
        "number": 2888,
        "state": "closed",
        "title": "WT-2778 Python test suite: make scenario initialization consistent",
        "body": "Added make_scenarios function as a standard way to create scenarios that plays well with the new run.py -s option. Modified all tests that use scenarios to use make_scenarios. A couple other minor changes in scenario naming to ensure that no final scenario ends up with a number as a name.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 19, 2016 at 17:25 GMT",
        "updated_at": "Thursday Jul 21, 2016 at 23:04 GMT",
        "closed_at": "Thursday Jul 21, 2016 at 23:04 GMT",
        "merged_at": "Thursday Jul 21, 2016 at 23:04 GMT"
    },
    {
        "key": "WT-2403",
        "number": 2887,
        "state": "closed",
        "title": "WT-2403 Add next_random LSM cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 19, 2016 at 05:30 GMT",
        "updated_at": "Friday Oct 14, 2016 at 06:25 GMT",
        "closed_at": "Friday Oct 14, 2016 at 06:25 GMT",
        "merged_at": "Friday Oct 14, 2016 at 06:25 GMT"
    },
    {
        "key": "WT-2779",
        "number": 2886,
        "state": "closed",
        "title": "WT-2779 Add an assertion that in-memory pages don't grow too large.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 19, 2016 at 03:31 GMT",
        "updated_at": "Monday Aug 08, 2016 at 04:41 GMT",
        "closed_at": "Monday Aug 08, 2016 at 04:41 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2731",
        "number": 2885,
        "state": "closed",
        "title": "WT-2731 Finer adjustment for page size with raw compression",
        "body": "clang 3.4.1 doesn't like this:\n\n```\nrec_write.c:1975:46: error: implicit conversion loses integer precision: 'unsigned long' to\n'uint32_t' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]\n```\n\nAlso, minor cleanup in `__wt_evict()`.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 18, 2016 at 14:12 GMT",
        "updated_at": "Monday Jul 18, 2016 at 14:38 GMT",
        "closed_at": "Monday Jul 18, 2016 at 14:38 GMT",
        "merged_at": "Monday Jul 18, 2016 at 14:38 GMT"
    },
    {
        "key": "WT-2769",
        "number": 2884,
        "state": "closed",
        "title": "WT-2769 Update documentation to reflect correct limits of memory_page_max",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 18, 2016 at 03:54 GMT",
        "updated_at": "Tuesday Jul 19, 2016 at 07:43 GMT",
        "closed_at": "Tuesday Jul 19, 2016 at 07:43 GMT",
        "merged_at": "Tuesday Jul 19, 2016 at 07:43 GMT"
    },
    {
        "key": null,
        "number": 2883,
        "state": "closed",
        "title": "Wt 2769 Update documentation to reflect correct limits of memory_page_max",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 18, 2016 at 02:09 GMT",
        "updated_at": "Monday Jul 18, 2016 at 02:15 GMT",
        "closed_at": "Monday Jul 18, 2016 at 02:10 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2773",
        "number": 2882,
        "state": "closed",
        "title": "WT-2773 search_near in an index should find exact matches.",
        "body": "More specifically, if search_near is called with a key that appears in\nan index, the cursor should be positioned on the first matching key and\n`cmp` should be set to zero.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 18, 2016 at 01:27 GMT",
        "updated_at": "Monday Jul 18, 2016 at 15:59 GMT",
        "closed_at": "Monday Jul 18, 2016 at 02:14 GMT",
        "merged_at": "Monday Jul 18, 2016 at 02:14 GMT"
    },
    {
        "key": "WT-2774",
        "number": 2881,
        "state": "closed",
        "title": "WT-2774 minor cleanups/improvements",
        "body": "@michaelcahill, I realized I had a bunch of random stuff tucked away in #2874 (and that branch is probably never going to be merged), so I pulled those changes out into this branch.\n\nIt's mostly noise, but I do want the enhanced `__wt_cache_dump` output (33e1aca) and the rework of your e41c3e5 commit, in c608c00.\n\n(It occurred to me it would be better to clean up the reconciliation structures when reconciliation finishes, rather than in `__wt_evict`, and then it occurred to me we were already doing that, so I went looking. Long-story short, I merged your change -- which would repeat some of the cleanup we were already doing in reconciliation -- into the existing cleanup code in `__wt_reconcile`. Sorry for not noticing that when you first asked me for review.)\n",
        "base_ref": "develop",
        "created_at": "Sunday Jul 17, 2016 at 16:09 GMT",
        "updated_at": "Monday Jul 18, 2016 at 01:29 GMT",
        "closed_at": "Monday Jul 18, 2016 at 01:29 GMT",
        "merged_at": "Monday Jul 18, 2016 at 01:29 GMT"
    },
    {
        "key": "WT-2731",
        "number": 2880,
        "state": "closed",
        "title": "WT-2731 Finer adjustment for page size with raw compression",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 15, 2016 at 07:39 GMT",
        "updated_at": "Monday Jul 18, 2016 at 04:05 GMT",
        "closed_at": "Monday Jul 18, 2016 at 04:05 GMT",
        "merged_at": "Monday Jul 18, 2016 at 04:05 GMT"
    },
    {
        "key": "WT-2738",
        "number": 2879,
        "state": "closed",
        "title": "WT-2738 Remove test/format debugging code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 15, 2016 at 03:05 GMT",
        "updated_at": "Friday Jul 15, 2016 at 03:07 GMT",
        "closed_at": "Friday Jul 15, 2016 at 03:07 GMT",
        "merged_at": "Friday Jul 15, 2016 at 03:07 GMT"
    },
    {
        "key": "WT-2767",
        "number": 2878,
        "state": "closed",
        "title": "WT-2767 in test/suite/run.py, add -s N option to run an individual scenario",
        "body": "Several complimentary changes to make life easier for testing:\n- Added -s N option to restrict the run to a scenario with a given number or name.\n- When showing the name of the test (for example, with -v 2, or when a test fails), if there is a scenario, print as 'fulltestname -s scenario_number' so it can be easily copied for another command run.\n- Created a 'testname.txt' file in the test directory with the name of the test (and '-s NNN', if appropriate).\n- Fixed the ordering of the symbolic name of a scenario (e.g. 'file.recno.hex'), it was reversed before.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 14, 2016 at 19:49 GMT",
        "updated_at": "Monday Jul 18, 2016 at 21:11 GMT",
        "closed_at": "Monday Jul 18, 2016 at 21:00 GMT",
        "merged_at": "Monday Jul 18, 2016 at 21:00 GMT"
    },
    {
        "key": "WT-2738",
        "number": 2877,
        "state": "closed",
        "title": "WT-2738 checkpoint=(name=FOO) configuration",
        "body": "Remove the checkpoint=(name=FOO) configuration.\n\n@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 14, 2016 at 15:50 GMT",
        "updated_at": "Friday Jul 15, 2016 at 01:11 GMT",
        "closed_at": "Friday Jul 15, 2016 at 01:11 GMT",
        "merged_at": "Friday Jul 15, 2016 at 01:11 GMT"
    },
    {
        "key": "WT-2764",
        "number": 2876,
        "state": "closed",
        "title": "WT-2764 Replace write leaves phase of checkpoints.",
        "body": "Instead, get multi-threaded writes by dialling down the eviction dirty\ntrigger.\n\nAlso included is a fix to operations that could checkpoint the metadata\nbefore a checkpoint is committed (e.g., creating a new table when\nlogging is disabled).  Such operations should include the checkpoint\ntransaction ID in their snapshot so that the in-progress metadata\nupdates aren't flushed before the checkpoint is durable.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 14, 2016 at 07:59 GMT",
        "updated_at": "Wednesday Aug 03, 2016 at 07:08 GMT",
        "closed_at": "Wednesday Aug 03, 2016 at 07:08 GMT",
        "merged_at": "Wednesday Aug 03, 2016 at 07:08 GMT"
    },
    {
        "key": "WT-2725",
        "number": 2875,
        "state": "closed",
        "title": "WT-2725 Enforce visibility constraints before evicting a page for mongodb-3.0.",
        "body": "Otherwise there is a race between when we add a page to the queue\nand when the page is pulled off the queue - where the updates on\nthe page may have changed, thus violating transactional constraints.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Thursday Jul 14, 2016 at 02:12 GMT",
        "updated_at": "Thursday Jul 14, 2016 at 03:00 GMT",
        "closed_at": "Thursday Jul 14, 2016 at 03:00 GMT",
        "merged_at": "Thursday Jul 14, 2016 at 03:00 GMT"
    },
    {
        "key": "WT-2737",
        "number": 2874,
        "state": "closed",
        "title": "WT-2737 Scrub dirty pages rather than evicting them",
        "body": "@agorrod, this isn't for merge, I'm just creating a branch for us to talk about.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 13, 2016 at 22:21 GMT",
        "updated_at": "Monday Jul 18, 2016 at 06:31 GMT",
        "closed_at": "Monday Jul 18, 2016 at 06:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2765",
        "number": 2873,
        "state": "closed",
        "title": "WT-2765 wt dump: indices need to be shown in the dump output",
        "body": "This fixes a problem where a table with 1 or more indices, and no column groups would not have any dump output lines for the indices.  Added associated tests for dump and JSON dump.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 13, 2016 at 19:06 GMT",
        "updated_at": "Thursday Jul 14, 2016 at 03:09 GMT",
        "closed_at": "Thursday Jul 14, 2016 at 03:09 GMT",
        "merged_at": "Thursday Jul 14, 2016 at 03:09 GMT"
    },
    {
        "key": "WT-2763",
        "number": 2872,
        "state": "closed",
        "title": "WT-2763 Change test ID's in test_intpack to fix OSX test errors",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 13, 2016 at 03:42 GMT",
        "updated_at": "Thursday Jul 14, 2016 at 02:59 GMT",
        "closed_at": "Thursday Jul 14, 2016 at 02:59 GMT",
        "merged_at": "Thursday Jul 14, 2016 at 02:59 GMT"
    },
    {
        "key": "WT-2762",
        "number": 2871,
        "state": "closed",
        "title": "WT-2762 Handle 'Y' from wtperf monitor file.",
        "body": "@keithbostic Please review this small change to handle a Y in the wtperf monitor file.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 12, 2016 at 18:48 GMT",
        "updated_at": "Tuesday Jul 12, 2016 at 19:18 GMT",
        "closed_at": "Tuesday Jul 12, 2016 at 19:14 GMT",
        "merged_at": "Tuesday Jul 12, 2016 at 19:14 GMT"
    },
    {
        "key": "WT-2353",
        "number": 2870,
        "state": "closed",
        "title": "WT-2353 Don't flush async ops if threads aren't started.",
        "body": "@keithbostic Thanks for the prompt to make this change.  Please review.  I was able to reproduce the hang, forcing an error, and confirm this fixes it.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 12, 2016 at 18:11 GMT",
        "updated_at": "Tuesday Jul 12, 2016 at 19:17 GMT",
        "closed_at": "Tuesday Jul 12, 2016 at 19:16 GMT",
        "merged_at": "Tuesday Jul 12, 2016 at 19:16 GMT"
    },
    {
        "key": "ER-24971",
        "number": 2869,
        "state": "closed",
        "title": "SERVER-24971 Don't cache buffers after application eviction.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 12, 2016 at 07:31 GMT",
        "updated_at": "Friday Jul 15, 2016 at 00:41 GMT",
        "closed_at": "Friday Jul 15, 2016 at 00:41 GMT",
        "merged_at": "Friday Jul 15, 2016 at 00:41 GMT"
    },
    {
        "key": "WT-2760",
        "number": 2868,
        "state": "closed",
        "title": "WT-2760 Backup file removal requires ordering, so needs to sync the directory",
        "body": "@agorrod, @michaelcahill, something occurred to me today, I thought I'd run it by you.\n\nAs you know, we have a file-system directory-sync method, provided for Linux filesystems that require the enclosing directory to be synced for durability during file create, remove and rename. Currently, only Linux needs the directory-sync method.\n\n First, by having a separate method, we're making it significantly harder to write pluggable filesystems. Imagine a pluggable filesystem that has to do something for durability, but it's nothing like directory-sync. That filesystem can either not specify a directory-sync method and make all operations durable (which might be expensive), or it can specify a directory-sync method and somehow match WiredTiger's call of the directory-sync method to a previous filesystem method call. (It would have to somehow match the path names, there's nothing else to use.)\n\nSecond, currently we call `__wt_filename()` (or a variant), to create the pathnames we're going to open, remove or rename. We then re-create that pathname in order to call the directory-sync method. Staring at the two chunks of code, I think they're correct (but they're not identical). It would be much cleaner to only create a single path and use it both for the operation and for any subsequent directory flush.\n\nI suggest we get rid of the directory-sync method, and replace it with boolean \"durable\" flags to the open, remove and rename methods; here's the branch.\n",
        "base_ref": "wt-2760-backup-sync",
        "created_at": "Monday Jul 11, 2016 at 20:13 GMT",
        "updated_at": "Tuesday Jul 12, 2016 at 12:46 GMT",
        "closed_at": "Tuesday Jul 12, 2016 at 12:46 GMT",
        "merged_at": "Tuesday Jul 12, 2016 at 12:46 GMT"
    },
    {
        "key": "WT-2760",
        "number": 2867,
        "state": "closed",
        "title": "WT-2760 Backup file removal requires ordering, so needs to sync the directory",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 11, 2016 at 16:50 GMT",
        "updated_at": "Friday Jul 15, 2016 at 00:36 GMT",
        "closed_at": "Friday Jul 15, 2016 at 00:36 GMT",
        "merged_at": "Friday Jul 15, 2016 at 00:36 GMT"
    },
    {
        "key": "WT-2759",
        "number": 2866,
        "state": "closed",
        "title": "WT-2759 Releasing the hot-backup lock doesn't require the schema lock.",
        "body": "@agorrod, for your consideration/review.\n\nFTR, here's the original commit: 69bc7d1\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 11, 2016 at 15:35 GMT",
        "updated_at": "Tuesday Jul 12, 2016 at 00:20 GMT",
        "closed_at": "Tuesday Jul 12, 2016 at 00:20 GMT",
        "merged_at": "Tuesday Jul 12, 2016 at 00:20 GMT"
    },
    {
        "key": "WT-2711",
        "number": 2865,
        "state": "closed",
        "title": "WT-2711 Remove posix expanded strftime values and use older C89 values",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 11, 2016 at 06:57 GMT",
        "updated_at": "Monday Jul 11, 2016 at 13:52 GMT",
        "closed_at": "Monday Jul 11, 2016 at 13:52 GMT",
        "merged_at": "Monday Jul 11, 2016 at 13:52 GMT"
    },
    {
        "key": "WT-2757",
        "number": 2864,
        "state": "closed",
        "title": "WT-2757 Column tables behave differently when column names are provided",
        "body": "@agorrod, for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 09, 2016 at 22:04 GMT",
        "updated_at": "Tuesday Jul 12, 2016 at 07:39 GMT",
        "closed_at": "Tuesday Jul 12, 2016 at 07:39 GMT",
        "merged_at": "Tuesday Jul 12, 2016 at 07:39 GMT"
    },
    {
        "key": "WT-2578",
        "number": 2863,
        "state": "closed",
        "title": "WT-2578 remove write barriers from the TAILQ_INSERT_XXX macros",
        "body": "@agorrod, @michaelcahill confirmed we shouldn't need write barriers in the TAILQ macros any more, so I've upgraded to the current FreeBSD sys/queue.h file and removed the write-barriers we had in those macros.\n\nI reviewed our TAILQ macro usage and don't see any problems, but Michael suggested the PPC test instance on Jenkins would do a good job of figuring out if we're relying on these barriers anywhere. Maybe we could run this branch overnight on that platform?\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 09, 2016 at 19:05 GMT",
        "updated_at": "Tuesday Jul 12, 2016 at 03:55 GMT",
        "closed_at": "Tuesday Jul 12, 2016 at 03:55 GMT",
        "merged_at": "Tuesday Jul 12, 2016 at 03:55 GMT"
    },
    {
        "key": "WT-2648",
        "number": 2862,
        "state": "closed",
        "title": "WT-2648 cache-line alignment for new ports",
        "body": "@agorrod, I think this is all we need to do for this ticket.\n\nWe might want to consider if we're wasting too much space at some point (the zSeries alignment is 256B, and we align transaction states, for example), but for now I think we should make this change.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 09, 2016 at 17:58 GMT",
        "updated_at": "Tuesday Jul 12, 2016 at 07:20 GMT",
        "closed_at": "Tuesday Jul 12, 2016 at 07:20 GMT",
        "merged_at": "Tuesday Jul 12, 2016 at 07:20 GMT"
    },
    {
        "key": "WT-2756",
        "number": 2861,
        "state": "closed",
        "title": "WT-2756 the autoconf archive package doesn't check for swig 3.0.",
        "body": "@sulabhM, @agorrod, swig 3.0 is out.\n\nI upgraded the swig autoconf archive package and added a check for swig 3.0.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 09, 2016 at 14:27 GMT",
        "updated_at": "Sunday Jul 10, 2016 at 23:56 GMT",
        "closed_at": "Sunday Jul 10, 2016 at 23:55 GMT",
        "merged_at": "Sunday Jul 10, 2016 at 23:55 GMT"
    },
    {
        "key": "WT-2688",
        "number": 2860,
        "state": "closed",
        "title": "WT-2688 configure --enable-python doesn't check for availability of swig",
        "body": "@sulabhM, @agorrod, swig 3.0 is out.\n\nI upgraded the swig autoconf archive package and added a check for swig 3.0.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 09, 2016 at 14:07 GMT",
        "updated_at": "Saturday Jul 09, 2016 at 14:28 GMT",
        "closed_at": "Saturday Jul 09, 2016 at 14:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2693",
        "number": 2859,
        "state": "closed",
        "title": "WT-2693 Check open_cursor error paths for consistent handling",
        "body": "@sueloverso, I think this one is probably yours -- there's some tricky stuff in here, happy to talk through anything that's confusing.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 09, 2016 at 13:00 GMT",
        "updated_at": "Monday Jul 11, 2016 at 15:23 GMT",
        "closed_at": "Monday Jul 11, 2016 at 15:23 GMT",
        "merged_at": "Monday Jul 11, 2016 at 15:23 GMT"
    },
    {
        "key": "WT-2755",
        "number": 2858,
        "state": "closed",
        "title": "WT-2755 flexelint configuration treats size_t as 4B type",
        "body": "My flexelint configuration thought size_t was 4B, fix it and clean up the result.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 08, 2016 at 17:35 GMT",
        "updated_at": "Monday Jul 11, 2016 at 02:32 GMT",
        "closed_at": "Monday Jul 11, 2016 at 02:32 GMT",
        "merged_at": "Monday Jul 11, 2016 at 02:32 GMT"
    },
    {
        "key": "WT-2711",
        "number": 2857,
        "state": "closed",
        "title": "WT-2711 Change statistics log configuration options",
        "body": "If there's no server running, discard any configuration information so\nwe don't leak memory during reconfiguration.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 08, 2016 at 13:13 GMT",
        "updated_at": "Friday Jul 08, 2016 at 13:41 GMT",
        "closed_at": "Friday Jul 08, 2016 at 13:41 GMT",
        "merged_at": "Friday Jul 08, 2016 at 13:41 GMT"
    },
    {
        "key": "WT-1162",
        "number": 2856,
        "state": "closed",
        "title": "WT-1162 Add a latency specific test",
        "body": "@agorrod This branch only contains a new wtperf config.  I have added some commands to the Jenkins perf-stress job that are commented out.  Once this config exists, I want to turn that on and create a latency plot.  This is the config from WT-2705 primarily.  I used a warning threshold of a quarter second, which is commonly hit on my AWS box (same instance type as the perf jobs).  Please review.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 07, 2016 at 21:34 GMT",
        "updated_at": "Friday Jul 08, 2016 at 01:25 GMT",
        "closed_at": "Friday Jul 08, 2016 at 01:25 GMT",
        "merged_at": "Friday Jul 08, 2016 at 01:25 GMT"
    },
    {
        "key": "WT-2752",
        "number": 2855,
        "state": "closed",
        "title": "WT-2752 Fix errors in wtperf config",
        "body": "@agorrod Please review these changes to the new zipfian workload.  Looking at that config, I believe there are errors and these changes reflect the actual intent.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 06, 2016 at 17:09 GMT",
        "updated_at": "Friday Jul 22, 2016 at 19:08 GMT",
        "closed_at": "Wednesday Jul 06, 2016 at 23:12 GMT",
        "merged_at": "Wednesday Jul 06, 2016 at 23:12 GMT"
    },
    {
        "key": "WT-2751",
        "number": 2854,
        "state": "closed",
        "title": "WT-2751 column-store statistics incorrectly calculates the number of entries",
        "body": "> Also Alex made some changes to delete some keys and then use wt utility to get stats on the database, and the wt utility shows wrong number of key/val pairs.\n\n@sulabhM, @agorrod, this is the fix for the wt utility mistake.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 06, 2016 at 15:51 GMT",
        "updated_at": "Thursday Jul 07, 2016 at 02:03 GMT",
        "closed_at": "Thursday Jul 07, 2016 at 02:02 GMT",
        "merged_at": "Thursday Jul 07, 2016 at 02:02 GMT"
    },
    {
        "key": "WT-2746",
        "number": 2853,
        "state": "closed",
        "title": "WT-2746 track checkpoint I/O separately from eviction I/O",
        "body": "Separate cache write statistics into checkpoint and non-checkpoint I/O.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 05, 2016 at 20:04 GMT",
        "updated_at": "Friday Jul 08, 2016 at 02:10 GMT",
        "closed_at": "Friday Jul 08, 2016 at 02:10 GMT",
        "merged_at": "Friday Jul 08, 2016 at 02:10 GMT"
    },
    {
        "key": "WT-2728",
        "number": 2852,
        "state": "closed",
        "title": "WT-2728 Only verify the log file header during recovery.",
        "body": "@agorrod Please review this change.  It is a small piece to reduce an unnecessary read/verify of the log file header on every `log_flush` call.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 05, 2016 at 19:21 GMT",
        "updated_at": "Wednesday Jul 06, 2016 at 03:53 GMT",
        "closed_at": "Wednesday Jul 06, 2016 at 03:53 GMT",
        "merged_at": "Wednesday Jul 06, 2016 at 03:53 GMT"
    },
    {
        "key": "WT-2744",
        "number": 2851,
        "state": "closed",
        "title": "WT-2744 Detect and ignore partial line.",
        "body": "@keithbostic Please review this change to the random-abort test to check for a partial line.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 05, 2016 at 16:10 GMT",
        "updated_at": "Tuesday Jul 05, 2016 at 17:20 GMT",
        "closed_at": "Tuesday Jul 05, 2016 at 17:19 GMT",
        "merged_at": "Tuesday Jul 05, 2016 at 17:19 GMT"
    },
    {
        "key": "WT-2743",
        "number": 2850,
        "state": "closed",
        "title": "WT-2743 Fixup new I/O thread count statistics.",
        "body": "The increment and decrement were backward, so they never reported positive values.\nWhile I was there make the statistics macros consistent.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 05, 2016 at 05:56 GMT",
        "updated_at": "Wednesday Jul 06, 2016 at 05:00 GMT",
        "closed_at": "Wednesday Jul 06, 2016 at 05:00 GMT",
        "merged_at": "Wednesday Jul 06, 2016 at 05:00 GMT"
    },
    {
        "key": "WT-2807",
        "number": 2849,
        "state": "closed",
        "title": "WT-2807 Change the memory allocator for wtperf performance tests.",
        "body": "Not for merging.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 05, 2016 at 01:25 GMT",
        "updated_at": "Tuesday Aug 09, 2016 at 00:22 GMT",
        "closed_at": "Tuesday Aug 09, 2016 at 00:22 GMT",
        "merged_at": "Tuesday Aug 09, 2016 at 00:22 GMT"
    },
    {
        "key": "WT-2730",
        "number": 2848,
        "state": "closed",
        "title": "WT-2730 column-store incorrectly matches key slots on new pages",
        "body": "@agorrod, I think `WT_CURSOR_BTREE.rip_saved` potentially has the same problem.\n\nI've never seen it happen, this is just by inspection.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 04, 2016 at 13:33 GMT",
        "updated_at": "Wednesday Jul 06, 2016 at 04:17 GMT",
        "closed_at": "Wednesday Jul 06, 2016 at 04:17 GMT",
        "merged_at": "Wednesday Jul 06, 2016 at 04:17 GMT"
    },
    {
        "key": "WT-2730",
        "number": 2847,
        "state": "closed",
        "title": "WT-2730 column-store incorrectly matches key slots on new pages",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jul 03, 2016 at 22:41 GMT",
        "updated_at": "Monday Jul 04, 2016 at 04:55 GMT",
        "closed_at": "Monday Jul 04, 2016 at 04:55 GMT",
        "merged_at": "Monday Jul 04, 2016 at 04:55 GMT"
    },
    {
        "key": "WT-2739",
        "number": 2846,
        "state": "closed",
        "title": "WT-2739 pluggable file systems documentation cleanups",
        "body": "Document that readonly pluggable file systems may fail attempts to open\nfiles read/write with EACCES.\n\nDocument that pluggable file systems should fail attempts to open\nnon-existent files with ENOENT.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 02, 2016 at 15:21 GMT",
        "updated_at": "Monday Jul 04, 2016 at 04:52 GMT",
        "closed_at": "Monday Jul 04, 2016 at 04:52 GMT",
        "merged_at": "Monday Jul 04, 2016 at 04:52 GMT"
    },
    {
        "key": "WT-2026",
        "number": 2845,
        "state": "closed",
        "title": "WT-2026 Allow forced eviction to split pages when BTREE_NO_EVICTION set",
        "body": "@sulabhM, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 01, 2016 at 20:27 GMT",
        "updated_at": "Monday Jul 04, 2016 at 04:51 GMT",
        "closed_at": "Monday Jul 04, 2016 at 04:51 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2665",
        "number": 2844,
        "state": "closed",
        "title": "WT-2665 Limit allocator fragmentation from the WiredTiger cache",
        "body": "evict_lru.c  Warning 574: Signed-unsigned mix with relational\nevict_lru.c  Info 737: Loss of sign in promotion from int to unsigned int\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 01, 2016 at 19:33 GMT",
        "updated_at": "Friday Jul 01, 2016 at 19:46 GMT",
        "closed_at": "Friday Jul 01, 2016 at 19:46 GMT",
        "merged_at": "Friday Jul 01, 2016 at 19:46 GMT"
    },
    {
        "key": "WT-2380",
        "number": 2843,
        "state": "closed",
        "title": "WT-2380 Add option to s_all to return an error code when tests fail",
        "body": "@daveh86, @agorrod, I replaced part of the 083b69b commit with a more portable construct.\n\nIt's fine with me if we want to commit to only running scripts under bash, but I think we should make that decision explicitly, and in that case, we should change the shell script interpreter from `/bin/sh` to `/bin/bash` to enforce it.\n\nFTR, this broke under FreeBSD 10.2.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 01, 2016 at 18:10 GMT",
        "updated_at": "Friday Jul 01, 2016 at 21:14 GMT",
        "closed_at": "Friday Jul 01, 2016 at 18:20 GMT",
        "merged_at": "Friday Jul 01, 2016 at 18:20 GMT"
    },
    {
        "key": "WT-2665",
        "number": 2842,
        "state": "closed",
        "title": "WT-2665 Limit allocator fragmentation in WiredTiger",
        "body": "@agorrod, ready to merge, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 30, 2016 at 20:14 GMT",
        "updated_at": "Friday Jul 01, 2016 at 19:05 GMT",
        "closed_at": "Friday Jul 01, 2016 at 19:05 GMT",
        "merged_at": "Friday Jul 01, 2016 at 19:05 GMT"
    },
    {
        "key": "WT-2733",
        "number": 2841,
        "state": "closed",
        "title": "WT-2733 Backport fixes for races between eviction and dead handle cleanup",
        "body": "Cherry picks of WT-2313 and WT-2434\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Tuesday Jun 28, 2016 at 06:35 GMT",
        "updated_at": "Friday Jul 01, 2016 at 05:11 GMT",
        "closed_at": "Friday Jul 01, 2016 at 05:11 GMT",
        "merged_at": "Friday Jul 01, 2016 at 05:11 GMT"
    },
    {
        "key": "WT-2026",
        "number": 2840,
        "state": "closed",
        "title": "WT-2026 Allow forced eviction to split pages when BTREE_NO_EVICTION set",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 28, 2016 at 06:14 GMT",
        "updated_at": "Wednesday Jul 06, 2016 at 04:23 GMT",
        "closed_at": "Wednesday Jul 06, 2016 at 04:23 GMT",
        "merged_at": "Wednesday Jul 06, 2016 at 04:23 GMT"
    },
    {
        "key": "WT-2380",
        "number": 2839,
        "state": "closed",
        "title": "WT-2380 Add option to return an error code when tests fail",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 28, 2016 at 01:38 GMT",
        "updated_at": "Friday Jul 01, 2016 at 05:11 GMT",
        "closed_at": "Friday Jul 01, 2016 at 05:10 GMT",
        "merged_at": "Friday Jul 01, 2016 at 05:10 GMT"
    },
    {
        "key": "WT-2732",
        "number": 2838,
        "state": "closed",
        "title": "WT-2732 Coverity analysis defect 99665: Redundant test",
        "body": "ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 27, 2016 at 13:54 GMT",
        "updated_at": "Tuesday Jun 28, 2016 at 00:19 GMT",
        "closed_at": "Tuesday Jun 28, 2016 at 00:19 GMT",
        "merged_at": "Tuesday Jun 28, 2016 at 00:19 GMT"
    },
    {
        "key": "WT-2486",
        "number": 2837,
        "state": "closed",
        "title": "WT-2486 remove manydbs/smoke.sh; run only manydbs/t for make check",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 27, 2016 at 07:04 GMT",
        "updated_at": "Friday Jul 01, 2016 at 04:27 GMT",
        "closed_at": "Friday Jul 01, 2016 at 04:27 GMT",
        "merged_at": "Friday Jul 01, 2016 at 04:27 GMT"
    },
    {
        "key": "WT-2026",
        "number": 2836,
        "state": "closed",
        "title": "WT-2026 Allow forced eviction to split pages in-mem when BTREE_NO_EVICTION set",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 27, 2016 at 05:45 GMT",
        "updated_at": "Tuesday Jun 28, 2016 at 06:17 GMT",
        "closed_at": "Tuesday Jun 28, 2016 at 06:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2708",
        "number": 2835,
        "state": "closed",
        "title": "WT-2708 split child-update race with reconciliation/eviction",
        "body": "@michaelcahill, this one is probably yours for review.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jun 26, 2016 at 21:52 GMT",
        "updated_at": "Monday Jun 27, 2016 at 02:45 GMT",
        "closed_at": "Monday Jun 27, 2016 at 02:45 GMT",
        "merged_at": "Monday Jun 27, 2016 at 02:45 GMT"
    },
    {
        "key": "WT-2711",
        "number": 2834,
        "state": "closed",
        "title": "WT-2711 statistics log paths",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 24, 2016 at 13:30 GMT",
        "updated_at": "Friday Jul 08, 2016 at 04:42 GMT",
        "closed_at": "Friday Jul 08, 2016 at 04:42 GMT",
        "merged_at": "Friday Jul 08, 2016 at 04:42 GMT"
    },
    {
        "key": "WT-2729",
        "number": 2833,
        "state": "closed",
        "title": "WT-2729 Focus eviction on the largest trees in cache (mongodb-3.2).",
        "body": "Randomize visits to trees that use a tiny fraction of the cache.\n\n(cherry picked from commit 1d58fe48c7eeefcbe5ee0412daea3c8c16177432)\n",
        "base_ref": "mongodb-3.2",
        "created_at": "Friday Jun 24, 2016 at 07:12 GMT",
        "updated_at": "Tuesday Jun 28, 2016 at 04:59 GMT",
        "closed_at": "Tuesday Jun 28, 2016 at 04:58 GMT",
        "merged_at": "Tuesday Jun 28, 2016 at 04:58 GMT"
    },
    {
        "key": "WT-2729",
        "number": 2832,
        "state": "closed",
        "title": "WT-2729 Focus eviction on the largest trees in cache.",
        "body": "Randomize visits to trees that use a tiny fraction of the cache.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 24, 2016 at 05:46 GMT",
        "updated_at": "Tuesday Jun 28, 2016 at 04:54 GMT",
        "closed_at": "Tuesday Jun 28, 2016 at 04:54 GMT",
        "merged_at": "Tuesday Jun 28, 2016 at 04:54 GMT"
    },
    {
        "key": "WT-2725",
        "number": 2831,
        "state": "closed",
        "title": "WT-2725 Change how we detect whether a page can be evicted when cache\u2026",
        "body": "\u2026 is full\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Thursday Jun 23, 2016 at 06:38 GMT",
        "updated_at": "Thursday Jul 14, 2016 at 02:10 GMT",
        "closed_at": "Thursday Jul 14, 2016 at 02:10 GMT",
        "merged_at": null
    },
    {
        "key": "ER-24580",
        "number": 2830,
        "state": "closed",
        "title": "SERVER-24580 Add more eviction stats to track efficiency.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 23, 2016 at 06:27 GMT",
        "updated_at": "Thursday Jun 23, 2016 at 07:29 GMT",
        "closed_at": "Thursday Jun 23, 2016 at 07:29 GMT",
        "merged_at": "Thursday Jun 23, 2016 at 07:29 GMT"
    },
    {
        "key": "ER-24580",
        "number": 2829,
        "state": "closed",
        "title": "SERVER-24580 Update oldest txn ID with \"strict, nowait\" flags.",
        "body": "The earlier change in SERVER-24580 made the eviction server not force update to the oldest transaction ID.  That was done to avoid a performance collapse with many threads in the library (every run of the eviction server had to wait for all threads to exit the snapshot table and blocked all threads from entering it).\n\nPreviously \"force\" meant both (a) \"update no matter how far behind the oldest has fallen\" and (b) \"wait for locks\".  This change splits those apart, calling (a) \"strict\" and (b) \"wait\".  It sets strict, no-wait for the eviction server updates to the oldest ID.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 23, 2016 at 01:12 GMT",
        "updated_at": "Thursday Jun 23, 2016 at 02:31 GMT",
        "closed_at": "Thursday Jun 23, 2016 at 02:30 GMT",
        "merged_at": "Thursday Jun 23, 2016 at 02:30 GMT"
    },
    {
        "key": "WT-2667",
        "number": 2828,
        "state": "closed",
        "title": "WT-2667 Add fops to Evergreen testing for Windows and Linux",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 23, 2016 at 01:08 GMT",
        "updated_at": "Thursday Jun 23, 2016 at 05:56 GMT",
        "closed_at": "Thursday Jun 23, 2016 at 05:56 GMT",
        "merged_at": "Thursday Jun 23, 2016 at 05:56 GMT"
    },
    {
        "key": "WT-2724",
        "number": 2827,
        "state": "closed",
        "title": "WT-2724 Pass in session address, not pointer to it.",
        "body": "@agorrod This fixes the issue with eviction workers exiting immediately from the `btree-split-stress.wtperf` workload.  The issue does not affect tests like  `evict-btree.wtperf`.  The `btree-split-stress.wtperf` hit the problem because it sets an eviction thread worker minimum so those threads get started in `evict_workers_resize`.  Other tests like `evict-btree.wtperf` do not set an explicit minimum and therefore, threads are created in `evict_pass` as needed.  That path was correct.  Only the resize path was wrong.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 22, 2016 at 18:15 GMT",
        "updated_at": "Thursday Jun 23, 2016 at 04:52 GMT",
        "closed_at": "Thursday Jun 23, 2016 at 04:52 GMT",
        "merged_at": "Thursday Jun 23, 2016 at 04:52 GMT"
    },
    {
        "key": "WT-2726",
        "number": 2826,
        "state": "closed",
        "title": "WT-2726 Revert arg change to wt_txn_update_oldest.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 22, 2016 at 16:10 GMT",
        "updated_at": "Thursday Jun 23, 2016 at 02:07 GMT",
        "closed_at": "Thursday Jun 23, 2016 at 02:07 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2704",
        "number": 2825,
        "state": "closed",
        "title": "WT-2704 Remove cache stuck checks for now.",
        "body": "Changes for this ticket introduced a bug.  Turn off while I'm debugging to let testing proceed.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 22, 2016 at 13:48 GMT",
        "updated_at": "Wednesday Jun 22, 2016 at 14:53 GMT",
        "closed_at": "Wednesday Jun 22, 2016 at 14:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2691",
        "number": 2824,
        "state": "closed",
        "title": "WT-2691 Use wrappers for ctype functions to avoid sign extension errors",
        "body": "gcc 4.7, clang 3.4 and clang 3.8 all complain about different things; cast the arguments to our new wrapper functions, hopefully that makes all of the complaints go away.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 22, 2016 at 13:10 GMT",
        "updated_at": "Wednesday Jun 22, 2016 at 13:41 GMT",
        "closed_at": "Wednesday Jun 22, 2016 at 13:41 GMT",
        "merged_at": "Wednesday Jun 22, 2016 at 13:41 GMT"
    },
    {
        "key": "WT-2605",
        "number": 2823,
        "state": "closed",
        "title": "WT-2605 fix key format for join suite test, which fixes valgrind error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 22, 2016 at 03:46 GMT",
        "updated_at": "Wednesday Jun 22, 2016 at 06:38 GMT",
        "closed_at": "Wednesday Jun 22, 2016 at 06:38 GMT",
        "merged_at": "Wednesday Jun 22, 2016 at 06:38 GMT"
    },
    {
        "key": "WT-2704",
        "number": 2822,
        "state": "closed",
        "title": "WT-2704 Don't re-initialize pages evicted on eviction thread start.",
        "body": "We aren't guaranteed that the cache structure is populated yet, and the value is initialized on cache create regardless.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 22, 2016 at 00:44 GMT",
        "updated_at": "Wednesday Jun 22, 2016 at 02:42 GMT",
        "closed_at": "Wednesday Jun 22, 2016 at 01:20 GMT",
        "merged_at": "Wednesday Jun 22, 2016 at 01:20 GMT"
    },
    {
        "key": "WT-2722",
        "number": 2821,
        "state": "closed",
        "title": "WT-2722 s_label fix for false positve",
        "body": "Regular expression meta-character needed to be escaped so that egrep works consistently on all systems.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 21, 2016 at 23:54 GMT",
        "updated_at": "Wednesday Jun 22, 2016 at 12:46 GMT",
        "closed_at": "Wednesday Jun 22, 2016 at 12:46 GMT",
        "merged_at": "Wednesday Jun 22, 2016 at 12:46 GMT"
    },
    {
        "key": "WT-2704",
        "number": 2820,
        "state": "closed",
        "title": "WT-2704 Fix bug in diag code detecting duration of stuck cache.",
        "body": "@agorrod or @michaelcahill please review this change to detect the stuck cache, dump it and abort.  I tested it with the failing CONFIG in the ticket and it correctly dumped the cache.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 21, 2016 at 19:46 GMT",
        "updated_at": "Tuesday Jun 21, 2016 at 23:25 GMT",
        "closed_at": "Tuesday Jun 21, 2016 at 23:25 GMT",
        "merged_at": "Tuesday Jun 21, 2016 at 23:25 GMT"
    },
    {
        "key": "WT-2408",
        "number": 2819,
        "state": "closed",
        "title": "WT-2408 Windows error translation layer",
        "body": "@michaelcahill, here's the alternate approach for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 21, 2016 at 17:53 GMT",
        "updated_at": "Thursday Jun 23, 2016 at 05:21 GMT",
        "closed_at": "Thursday Jun 23, 2016 at 05:21 GMT",
        "merged_at": "Thursday Jun 23, 2016 at 05:21 GMT"
    },
    {
        "key": "WT-2691",
        "number": 2818,
        "state": "closed",
        "title": "WT-2691 Use wrappers for ctype functions to avoid sign extension errors",
        "body": "Create __wt_\\* versions of all ctype functions, and use them whenever wt_internal.h is available.  Add check to prevent direct use of type functions from core source.\n\nThis is an alternative to simply banning the use of plain 'char', as in #2783.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 21, 2016 at 01:35 GMT",
        "updated_at": "Wednesday Jun 29, 2016 at 04:15 GMT",
        "closed_at": "Wednesday Jun 22, 2016 at 01:05 GMT",
        "merged_at": "Wednesday Jun 22, 2016 at 01:05 GMT"
    },
    {
        "key": "WT-2720",
        "number": 2817,
        "state": "closed",
        "title": "WT-2720 Change the return codes in run.py to flag on fails",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 21, 2016 at 00:26 GMT",
        "updated_at": "Tuesday Jun 21, 2016 at 06:48 GMT",
        "closed_at": "Tuesday Jun 21, 2016 at 06:48 GMT",
        "merged_at": "Tuesday Jun 21, 2016 at 06:48 GMT"
    },
    {
        "key": "WT-2408",
        "number": 2816,
        "state": "closed",
        "title": "WT-2408 Windows error translation layer",
        "body": "@agorrod, @michaelcahill, @markbenvenuto: here's an approach to the Windows-to-POSIX/ANSI translation layer.\n\nMy goal was to leave as much code alone as possible and I wanted us to be able to continue to mix-and-match code in the Windows port that returns errno, MSVC system errors and WiredTiger errors without any new macros (for example, I didn't want to create `WT_RET_MSG_WIN32`). To make that work, I ended up inlining the \"standard\" code in a wrapping function that maps any returned Windows errors to a POSIX/ANSI error, and leaves all other returns alone.\n\nI moved the Windows encoding to be past the WiredTiger error range encoding so there's no way they can overlap.\n\nI replaced @sueloverso's readonly mapping with POSIX error checks.\n\nThis branch doesn't yet have the changes to export error mapping functionality through the `WT_EXTENSION_API` handle, I wanted to make sure I wasn't making this more complicated than it should be and there's not a simpler/better solution.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 20, 2016 at 22:52 GMT",
        "updated_at": "Tuesday Jun 21, 2016 at 22:22 GMT",
        "closed_at": "Tuesday Jun 21, 2016 at 22:22 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2692",
        "number": 2815,
        "state": "closed",
        "title": "WT-2692 Fix race in file system example",
        "body": "Commit 62575b5 broke in-memory support, it didn't include either\nWT_FILE_HANDLE.lock or WT_FILE_HANDLE.sync. Add stub functions;\nI don't think we call either of them enough that it's going to be\na performance problem.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 20, 2016 at 14:14 GMT",
        "updated_at": "Monday Jun 20, 2016 at 14:28 GMT",
        "closed_at": "Monday Jun 20, 2016 at 14:28 GMT",
        "merged_at": "Monday Jun 20, 2016 at 14:28 GMT"
    },
    {
        "key": "WT-2667",
        "number": 2814,
        "state": "closed",
        "title": "WT-2667 Combine compile and unit-test tasks in EVG on all platforms",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 20, 2016 at 06:12 GMT",
        "updated_at": "Tuesday Jun 21, 2016 at 03:01 GMT",
        "closed_at": "Tuesday Jun 21, 2016 at 03:01 GMT",
        "merged_at": "Tuesday Jun 21, 2016 at 03:01 GMT"
    },
    {
        "key": "WT-2605",
        "number": 2813,
        "state": "closed",
        "title": "WT-2605 Fix valgrind",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 20, 2016 at 02:25 GMT",
        "updated_at": "Monday Jun 20, 2016 at 14:02 GMT",
        "closed_at": "Monday Jun 20, 2016 at 14:01 GMT",
        "merged_at": "Monday Jun 20, 2016 at 14:01 GMT"
    },
    {
        "key": "WT-2692",
        "number": 2812,
        "state": "closed",
        "title": "WT-2692 Fix race in file system example",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jun 19, 2016 at 17:15 GMT",
        "updated_at": "Monday Jun 20, 2016 at 13:33 GMT",
        "closed_at": "Monday Jun 20, 2016 at 13:33 GMT",
        "merged_at": "Monday Jun 20, 2016 at 13:33 GMT"
    },
    {
        "key": "WT-2709",
        "number": 2811,
        "state": "closed",
        "title": "WT-2709 connection reconfigure segfault in __wt_conn_cache_pool_destroy",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jun 18, 2016 at 20:27 GMT",
        "updated_at": "Monday Jun 20, 2016 at 13:26 GMT",
        "closed_at": "Monday Jun 20, 2016 at 12:47 GMT",
        "merged_at": "Monday Jun 20, 2016 at 12:47 GMT"
    },
    {
        "key": "WT-2715",
        "number": 2810,
        "state": "closed",
        "title": "WT-2715 random abort failed with partial write",
        "body": "@michaelcahill Please review this change to fix the random-abort recovery test program.  I actually made three substantive changes:\n- Fix a bug in counting the total records.\n- Added a `-v` option to only run the data verification phase of the test (needed for me to test this fix on the database that failed).\n- Fixed the verification code to detect the partially written record.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 17, 2016 at 19:49 GMT",
        "updated_at": "Tuesday Jun 21, 2016 at 23:06 GMT",
        "closed_at": "Tuesday Jun 21, 2016 at 23:06 GMT",
        "merged_at": "Tuesday Jun 21, 2016 at 23:06 GMT"
    },
    {
        "key": "WT-2713",
        "number": 2809,
        "state": "closed",
        "title": "WT-2713 document WT_PANIC so pluggable filesystems can panic.",
        "body": "Ready for merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 17, 2016 at 19:22 GMT",
        "updated_at": "Friday Jun 17, 2016 at 19:35 GMT",
        "closed_at": "Friday Jun 17, 2016 at 19:35 GMT",
        "merged_at": "Friday Jun 17, 2016 at 19:35 GMT"
    },
    {
        "key": "WT-2714",
        "number": 2808,
        "state": "closed",
        "title": "WT-2714 lint",
        "body": "@sueloverso, @ddanderson, some lint in the csuite test programs.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 17, 2016 at 17:24 GMT",
        "updated_at": "Friday Jun 17, 2016 at 17:44 GMT",
        "closed_at": "Friday Jun 17, 2016 at 17:44 GMT",
        "merged_at": "Friday Jun 17, 2016 at 17:44 GMT"
    },
    {
        "key": "WT-2712",
        "number": 2807,
        "state": "closed",
        "title": "WT-2712 Coverity 1356928 and 1356929: ASSERT_SIDE_EFFECT",
        "body": "@ddanderson, a couple of Coverity complaints in the csuite join tests.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 17, 2016 at 12:39 GMT",
        "updated_at": "Friday Jun 17, 2016 at 20:01 GMT",
        "closed_at": "Friday Jun 17, 2016 at 16:00 GMT",
        "merged_at": "Friday Jun 17, 2016 at 16:00 GMT"
    },
    {
        "key": "ER-24580",
        "number": 2806,
        "state": "closed",
        "title": "SERVER-24580 Don't have application threads spin to access the evicti\u2026",
        "body": "\u2026on queue.\n\nWhen the cache hits eviction triggers, all application threads can\nhammer the eviction queue lock, starving each other and server threads.\n\nAlso, noticed with the same workload, the eviction server doesn't need\nto force updates to the oldest ID (which can starve the eviction server\nthread if there are hundreds of application threads getting snapshots).\nIt is sufficient to update it lazily.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 17, 2016 at 07:43 GMT",
        "updated_at": "Wednesday Jun 22, 2016 at 04:18 GMT",
        "closed_at": "Wednesday Jun 22, 2016 at 04:18 GMT",
        "merged_at": "Wednesday Jun 22, 2016 at 04:18 GMT"
    },
    {
        "key": "WT-2710",
        "number": 2805,
        "state": "closed",
        "title": "WT-2710 WT_FILE_HANDLE_INMEM no longer needs an off field",
        "body": "Probably a left-over from when stdio was still part of the pluggable API.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 16, 2016 at 22:29 GMT",
        "updated_at": "Friday Jun 17, 2016 at 00:47 GMT",
        "closed_at": "Friday Jun 17, 2016 at 00:47 GMT",
        "merged_at": "Friday Jun 17, 2016 at 00:47 GMT"
    },
    {
        "key": "WT-2650",
        "number": 2804,
        "state": "closed",
        "title": "WT-2650 Process string escape characters in WT_CONFIG_PARSER API.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 16, 2016 at 18:26 GMT",
        "updated_at": "Monday Oct 23, 2017 at 13:33 GMT",
        "closed_at": "Monday Oct 23, 2017 at 13:33 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2706",
        "number": 2803,
        "state": "closed",
        "title": "WT-2706 Fix lost log writes when switching files",
        "body": "without writing a log record.\n@michaelcahill and @agorrod Please review.  This has been running for a few hundred iterations with both the mongoDB reproducer and random-abort and is ready to merge I believe.\n- There was an incorrect assertion where we'd read a slot and fail the assertion because the fields of the slot were changing.\n- I added some randomization to the random-abort program.  The minimums are the old values but I let it also run longer and with more threads too.\n- There is the fix for the log_fh which is the real fix for the data loss.\n- I changed the conditional in `wt_log_write` and added a flag instead of looking at the `log_fh`.  I could have gone either way, adding a `flags` field to the log structure or adding in a log state flag into the connection flags instead. \n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 16, 2016 at 17:01 GMT",
        "updated_at": "Friday Jun 17, 2016 at 02:37 GMT",
        "closed_at": "Friday Jun 17, 2016 at 02:37 GMT",
        "merged_at": "Friday Jun 17, 2016 at 02:37 GMT"
    },
    {
        "key": "WT-2622",
        "number": 2802,
        "state": "closed",
        "title": "WT-2622 Clear old position for all random lookups.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 16, 2016 at 04:44 GMT",
        "updated_at": "Friday Jun 17, 2016 at 00:46 GMT",
        "closed_at": "Friday Jun 17, 2016 at 00:46 GMT",
        "merged_at": "Friday Jun 17, 2016 at 00:46 GMT"
    },
    {
        "key": "WT-2650",
        "number": 2801,
        "state": "closed",
        "title": "WT-2650 Allow quotes to be escaped within a configuration string",
        "body": "__wt_config_next() potentially allocates storage, requiring a call to to clean up WT_CONFIG structs using __wt_config_free().\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 15, 2016 at 17:29 GMT",
        "updated_at": "Thursday Jun 16, 2016 at 18:26 GMT",
        "closed_at": "Thursday Jun 16, 2016 at 18:25 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2707",
        "number": 2800,
        "state": "closed",
        "title": "WT-2707 stricter checks in dist/s_label, and add some WT_ERR calls",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 15, 2016 at 16:18 GMT",
        "updated_at": "Friday Jun 17, 2016 at 20:01 GMT",
        "closed_at": "Friday Jun 17, 2016 at 20:01 GMT",
        "merged_at": "Friday Jun 17, 2016 at 20:01 GMT"
    },
    {
        "key": "WT-2665",
        "number": 2799,
        "state": "closed",
        "title": "WT-2665 Limit allocator fragmentation from the WiredTiger cache",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 15, 2016 at 12:27 GMT",
        "updated_at": "Thursday Jun 30, 2016 at 06:36 GMT",
        "closed_at": "Thursday Jun 30, 2016 at 06:36 GMT",
        "merged_at": "Thursday Jun 30, 2016 at 06:36 GMT"
    },
    {
        "key": "WT-2702",
        "number": 2798,
        "state": "closed",
        "title": "WT-2702 Block operations when the cache is 100% full.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 14, 2016 at 06:24 GMT",
        "updated_at": "Wednesday Jun 15, 2016 at 05:39 GMT",
        "closed_at": "Wednesday Jun 15, 2016 at 05:39 GMT",
        "merged_at": "Wednesday Jun 15, 2016 at 05:39 GMT"
    },
    {
        "key": "WT-2667",
        "number": 2797,
        "state": "closed",
        "title": "WT-2667 Split evergreen compile-posix into separate compile and test \u2026",
        "body": "\u2026stages\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 14, 2016 at 02:28 GMT",
        "updated_at": "Wednesday Jun 15, 2016 at 07:10 GMT",
        "closed_at": "Wednesday Jun 15, 2016 at 07:10 GMT",
        "merged_at": "Wednesday Jun 15, 2016 at 07:10 GMT"
    },
    {
        "key": "WT-2698",
        "number": 2796,
        "state": "closed",
        "title": "WT-2698 Change flag into atomically manipulated field to avoid deadlock.",
        "body": "@michaelcahill or @agorrod This is ready for review.  I converted the flag into an atomically set counter.  I have not been able to reproduce the original hang running the recover.sh script before the fix however, so I haven't been able to verify the fix of the deadlock.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 10, 2016 at 20:16 GMT",
        "updated_at": "Tuesday Jun 14, 2016 at 06:16 GMT",
        "closed_at": "Tuesday Jun 14, 2016 at 04:35 GMT",
        "merged_at": "Tuesday Jun 14, 2016 at 04:35 GMT"
    },
    {
        "key": "WT-2319",
        "number": 2795,
        "state": "closed",
        "title": "WT-2319 Add units to stats descriptions, change variable names",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 10, 2016 at 04:35 GMT",
        "updated_at": "Friday Jun 10, 2016 at 11:23 GMT",
        "closed_at": "Friday Jun 10, 2016 at 11:23 GMT",
        "merged_at": "Friday Jun 10, 2016 at 11:23 GMT"
    },
    {
        "key": "WT-2696",
        "number": 2794,
        "state": "closed",
        "title": "WT-2696 Wait if we find an unbuffered flag without the size set yet.",
        "body": "@michaelcahill Not ready to merge as I don't have the test committed yet, but this is the code fix.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 10, 2016 at 01:07 GMT",
        "updated_at": "Tuesday Jun 14, 2016 at 04:39 GMT",
        "closed_at": "Tuesday Jun 14, 2016 at 04:39 GMT",
        "merged_at": "Tuesday Jun 14, 2016 at 04:39 GMT"
    },
    {
        "key": "WT-2541",
        "number": 2793,
        "state": "closed",
        "title": "WT-2541 Add stats showing active readers and writers",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 09, 2016 at 06:38 GMT",
        "updated_at": "Monday Jun 20, 2016 at 19:43 GMT",
        "closed_at": "Monday Jun 20, 2016 at 19:43 GMT",
        "merged_at": "Monday Jun 20, 2016 at 19:43 GMT"
    },
    {
        "key": "WT-2682",
        "number": 2792,
        "state": "closed",
        "title": "WT-2682 add option to configure WiredTiger with strict compiler flags",
        "body": "Fix for AWS, compiler reports: \"cc (GCC) 4.8.3 20140911 (Red Hat 4.8.3-9)\"\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 08, 2016 at 21:01 GMT",
        "updated_at": "Wednesday Jun 08, 2016 at 21:41 GMT",
        "closed_at": "Wednesday Jun 08, 2016 at 21:41 GMT",
        "merged_at": "Wednesday Jun 08, 2016 at 21:41 GMT"
    },
    {
        "key": "WT-2697",
        "number": 2791,
        "state": "closed",
        "title": "WT-2697 dump statistics for simple tables",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 08, 2016 at 20:08 GMT",
        "updated_at": "Thursday Jun 09, 2016 at 14:25 GMT",
        "closed_at": "Thursday Jun 09, 2016 at 14:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2682",
        "number": 2790,
        "state": "closed",
        "title": "WT-2682 add option to configure WiredTiger with strict compiler flags",
        "body": "minor cleanup.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 08, 2016 at 15:16 GMT",
        "updated_at": "Wednesday Jun 08, 2016 at 15:37 GMT",
        "closed_at": "Wednesday Jun 08, 2016 at 15:37 GMT",
        "merged_at": "Wednesday Jun 08, 2016 at 15:37 GMT"
    },
    {
        "key": "WT-2514",
        "number": 2789,
        "state": "closed",
        "title": "WT-2514 Fix logging to not use an empty path name.",
        "body": "@keithbostic Please review this change to set the default log path to '.' rather than an empty string.  I also added a section to the config test for it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 08, 2016 at 15:09 GMT",
        "updated_at": "Wednesday Jun 08, 2016 at 15:37 GMT",
        "closed_at": "Wednesday Jun 08, 2016 at 15:34 GMT",
        "merged_at": "Wednesday Jun 08, 2016 at 15:34 GMT"
    },
    {
        "key": "WT-2683",
        "number": 2788,
        "state": "closed",
        "title": "WT-2683 Remove __im_handle_size function",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 08, 2016 at 05:06 GMT",
        "updated_at": "Wednesday Jun 08, 2016 at 07:16 GMT",
        "closed_at": "Wednesday Jun 08, 2016 at 07:16 GMT",
        "merged_at": "Wednesday Jun 08, 2016 at 07:16 GMT"
    },
    {
        "key": "WT-2605",
        "number": 2787,
        "state": "closed",
        "title": "WT-2605 Add C tests used in testing joins",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 07, 2016 at 19:56 GMT",
        "updated_at": "Friday Jun 17, 2016 at 00:20 GMT",
        "closed_at": "Friday Jun 17, 2016 at 00:20 GMT",
        "merged_at": "Friday Jun 17, 2016 at 00:20 GMT"
    },
    {
        "key": "WT-2652",
        "number": 2786,
        "state": "closed",
        "title": "WT-2652 Remove unnecessary wt_ftruncate call.",
        "body": " Also make file length the actual maximum set, not the maximum plus the header record.  Fix s_string.ok.\n\n@michaelcahill or @agorrod Please review these changes for minor fixes to the logging code.  The fallocate and ftruncate calls were not obeying the log file maximum.  The manual zero-fill does.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 07, 2016 at 19:39 GMT",
        "updated_at": "Wednesday Jun 08, 2016 at 02:26 GMT",
        "closed_at": "Wednesday Jun 08, 2016 at 02:26 GMT",
        "merged_at": "Wednesday Jun 08, 2016 at 02:26 GMT"
    },
    {
        "key": "WT-2682",
        "number": 2785,
        "state": "closed",
        "title": "WT-2682 Re-order AC_PROG_CC in the configure.ac.in script.",
        "body": "",
        "base_ref": "wt-2682-enable-strict",
        "created_at": "Tuesday Jun 07, 2016 at 16:47 GMT",
        "updated_at": "Tuesday Jun 07, 2016 at 18:37 GMT",
        "closed_at": "Tuesday Jun 07, 2016 at 18:37 GMT",
        "merged_at": "Tuesday Jun 07, 2016 at 18:37 GMT"
    },
    {
        "key": "WT-2319",
        "number": 2784,
        "state": "closed",
        "title": "WT-2319 Add stats to measure count and duration of the sync calls made for log and checkpoint modules",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 07, 2016 at 03:29 GMT",
        "updated_at": "Wednesday Jun 08, 2016 at 07:20 GMT",
        "closed_at": "Wednesday Jun 08, 2016 at 07:20 GMT",
        "merged_at": "Wednesday Jun 08, 2016 at 07:20 GMT"
    },
    {
        "key": "WT-2691",
        "number": 2783,
        "state": "closed",
        "title": "WT-2691 remove/disallow 'char' declarations without 'unsigned'.",
        "body": "Also added casts so that -Wsign-conversion can be used on clang/OSX.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 07, 2016 at 02:34 GMT",
        "updated_at": "Tuesday Jun 21, 2016 at 01:37 GMT",
        "closed_at": "Tuesday Jun 21, 2016 at 01:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2689",
        "number": 2782,
        "state": "closed",
        "title": "WT-2689 Fix heap-use-after-free on cursor error path.",
        "body": "@agorrod Please review this.  This fixes the bug reported.  However, I went through the error path code of all `cur_*.c` for `open_cursor` and there is a lot of variation.  Some just free, some just call `wt_cursor_close`, some set `*cursorp = NULL` and some do not.  I'm not convinced in `cur_table.c` that the conditional for `*cursorp` is needed at all.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 06, 2016 at 20:23 GMT",
        "updated_at": "Tuesday Jun 07, 2016 at 00:32 GMT",
        "closed_at": "Tuesday Jun 07, 2016 at 00:32 GMT",
        "merged_at": "Tuesday Jun 07, 2016 at 00:32 GMT"
    },
    {
        "key": "WT-2685",
        "number": 2781,
        "state": "closed",
        "title": "WT-2685 Fix clear walk hazard pointer failure.",
        "body": "Add missing WT_WITH_PASS_LOCK with call to clear walks on shutdown.\nAdd an assertion in evict_clear_walk to confirm the lock is held.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 06, 2016 at 18:42 GMT",
        "updated_at": "Tuesday Jun 14, 2016 at 06:15 GMT",
        "closed_at": "Monday Jun 06, 2016 at 22:29 GMT",
        "merged_at": "Monday Jun 06, 2016 at 22:29 GMT"
    },
    {
        "key": "WT-2682",
        "number": 2780,
        "state": "closed",
        "title": "WT-2682 fix --enable-strict warnings when building on PPC.",
        "body": "@agorrod, @sueloverso, this should make --enable-strict compile cleanly on the PPC.\n",
        "base_ref": "wt-2682-enable-strict",
        "created_at": "Monday Jun 06, 2016 at 16:58 GMT",
        "updated_at": "Tuesday Jun 07, 2016 at 01:59 GMT",
        "closed_at": "Tuesday Jun 07, 2016 at 01:59 GMT",
        "merged_at": "Tuesday Jun 07, 2016 at 01:59 GMT"
    },
    {
        "key": "WT-2686",
        "number": 2779,
        "state": "closed",
        "title": "WT-2686 Report an error any time we fail to scan the log.",
        "body": "Don't use a flag on the log structure: we may not have one if logging\nis disabled, but we still scan log files if they exist.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 06, 2016 at 02:02 GMT",
        "updated_at": "Monday Jun 06, 2016 at 15:39 GMT",
        "closed_at": "Monday Jun 06, 2016 at 05:33 GMT",
        "merged_at": "Monday Jun 06, 2016 at 05:33 GMT"
    },
    {
        "key": "WT-2687",
        "number": 2778,
        "state": "closed",
        "title": "WT-2687 test suite should verify the exit status of the wt utility",
        "body": "@ddanderson, would you please do the review on this one?\n\nAlso, this change doesn't pass the test suite:\n\n```\n% pyt test_jsondump02.test_jsondump02.test_json_cursor\nFERROR in test_jsondump02.test_jsondump02.test_json_cursor\n\n======================================================================\nFAIL: test_jsondump02.test_jsondump02.test_json_cursor\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/b/bostic/wt.small/test/suite/test_jsondump02.py\", line 288, in test_json_cursor\n    self.runWt(['load', '-jf', 'jsondump-all.out'])\n  File \"/b/bostic/wt.small/test/suite/suite_subprocess.py\", line 162, in runWt\n    str(procargs) + '\": exited ' + str(returncode))\nAssertionError: expected success: \"['/b/bostic/wt.small/wt', 'load', '-jf', 'jsondump-all.out']\": exited 1\n\n----------------------------------------------------------------------\nRan 1 test in 0.416s\n\nFAILED (failures=1)\n```\n\nI think this might be a real failure, the `wt load` command thinks there is something wrong with the JSON, and the test suite doesn't appear to anticipate that failure.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jun 04, 2016 at 15:02 GMT",
        "updated_at": "Tuesday Jun 14, 2016 at 06:15 GMT",
        "closed_at": "Monday Jun 06, 2016 at 03:49 GMT",
        "merged_at": "Monday Jun 06, 2016 at 03:49 GMT"
    },
    {
        "key": "WT-2763",
        "number": 2776,
        "state": "closed",
        "title": "WT-2763 Fixup comment per review feedback.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 03, 2016 at 07:36 GMT",
        "updated_at": "Friday Jun 03, 2016 at 07:52 GMT",
        "closed_at": "Friday Jun 03, 2016 at 07:52 GMT",
        "merged_at": "Friday Jun 03, 2016 at 07:52 GMT"
    },
    {
        "key": "WT-2676",
        "number": 2775,
        "state": "closed",
        "title": "WT-2676 Don't use key size in column store in-memory splits.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 03, 2016 at 06:26 GMT",
        "updated_at": "Friday Jun 03, 2016 at 19:47 GMT",
        "closed_at": "Friday Jun 03, 2016 at 19:46 GMT",
        "merged_at": "Friday Jun 03, 2016 at 19:46 GMT"
    },
    {
        "key": "WT-2629",
        "number": 2774,
        "state": "closed",
        "title": "WT-2629 Force non-executable stacks based on __ELF__.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 03, 2016 at 03:11 GMT",
        "updated_at": "Friday Jun 03, 2016 at 03:53 GMT",
        "closed_at": "Friday Jun 03, 2016 at 03:53 GMT",
        "merged_at": "Friday Jun 03, 2016 at 03:53 GMT"
    },
    {
        "key": "WT-2682",
        "number": 2773,
        "state": "closed",
        "title": "WT-2682 add option to configure WiredTiger with strict compiler flags",
        "body": "@agorrod, let me know what you think -- currently, it just supports gcc 4.7, but the framework is there.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 03, 2016 at 00:33 GMT",
        "updated_at": "Wednesday Jun 08, 2016 at 04:58 GMT",
        "closed_at": "Wednesday Jun 08, 2016 at 04:58 GMT",
        "merged_at": "Wednesday Jun 08, 2016 at 04:58 GMT"
    },
    {
        "key": "WT-2589",
        "number": 2772,
        "state": "closed",
        "title": "WT-2589 Clear the cursor statistics for LAS when 'clear' is set.",
        "body": "@keithbostic Please review this change.  I tried a handful of wtperf configs with statistics turned on but didn't find any that set the LAS stats.  If you have a workload, let me know.  \n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 02, 2016 at 18:19 GMT",
        "updated_at": "Thursday Jun 02, 2016 at 20:30 GMT",
        "closed_at": "Thursday Jun 02, 2016 at 20:30 GMT",
        "merged_at": "Thursday Jun 02, 2016 at 20:30 GMT"
    },
    {
        "key": "WT-2677",
        "number": 2771,
        "state": "closed",
        "title": "WT-2677 Fix JSON output so only printable ASCII is produced.",
        "body": "(Reopening this pull request - @keithbostic saw a compilation error using gcc 4.7, I didn't see that error)\n\nThe root cause is a sign extension error that shows up on systems\nthat have a signed 'char'.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 02, 2016 at 17:33 GMT",
        "updated_at": "Friday Jun 03, 2016 at 19:52 GMT",
        "closed_at": "Friday Jun 03, 2016 at 19:52 GMT",
        "merged_at": "Friday Jun 03, 2016 at 19:52 GMT"
    },
    {
        "key": "WT-2664",
        "number": 2770,
        "state": "closed",
        "title": "WT-2664 Have callers of evict_exclusive_on clear the dhandle directly.",
        "body": "@michaelcahill I did the work for clear walks on a sub-branch for you to review.  We can either keep or toss these changesw.  The good news is that this branch is on-par with develop for all the eviction performance combinations we've been testing - generally within 1%.  I never see clear-walk related functions in profiler output.  But this cleans up code and gets rid of a few functions.\n",
        "base_ref": "wt-2544",
        "created_at": "Thursday Jun 02, 2016 at 15:24 GMT",
        "updated_at": "Friday Jun 03, 2016 at 19:02 GMT",
        "closed_at": "Friday Jun 03, 2016 at 19:02 GMT",
        "merged_at": "Friday Jun 03, 2016 at 19:02 GMT"
    },
    {
        "key": "WT-2672",
        "number": 2769,
        "state": "closed",
        "title": "WT-2672 handle system calls that don't set errno",
        "body": "@michaelcahill, in #2765  you said:\n\n> I agree that it makes sense to split WT_SYSCALL_RETRY into two parts: one that gets the best error code for a given call and another than retries in the cases where that makes sense.\n\nThis is that change; I left retry in for calls that allocate file descriptors (opendir, open), and that write the file system and were already retrying (fallocate, fcntl(F_FULLFSYNC), fsync, ftruncate, sync_file_range), but didn't add retry semantics to calls that write the file system but weren't already retrying (pread, pwrite).\n\nThe only borderline case where I potentially changed things was that I don't retry file-descriptor close calls: technically, they can write the filesystem, but the fsync should have already been done (if we care about the durability of the file).\n\nYou also said:\n\n> I'd forgotten we retry for cases like ENOSPC, so it may not be as simple as saying pwrite should never retry.\n\nIt doesn't seem unreasonable to me for pread/pwrite to retry, particularly on EIO, and in the case of pwrite, on ENOSPC. Should I make that change?\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 02, 2016 at 13:26 GMT",
        "updated_at": "Friday Jun 03, 2016 at 12:41 GMT",
        "closed_at": "Friday Jun 03, 2016 at 12:41 GMT",
        "merged_at": "Friday Jun 03, 2016 at 12:41 GMT"
    },
    {
        "key": "WT-2646",
        "number": 2768,
        "state": "closed",
        "title": "WT-2646 Add checkpoint_wait configuration option to drop (#2736)",
        "body": "- Default checkpoint_wait is true. This change is useful because it means concurrent create/drop calls don't generate EBUSY returns.\n- Mark lock_wait and checkpoint_wait as undoc\n\n(cherry picked from commit 4b48ad6fb787a8b8662b5eacad6840d0b3ae9fb5)\n",
        "base_ref": "mongodb-3.2",
        "created_at": "Thursday Jun 02, 2016 at 00:57 GMT",
        "updated_at": "Thursday Jun 02, 2016 at 06:12 GMT",
        "closed_at": "Thursday Jun 02, 2016 at 06:12 GMT",
        "merged_at": "Thursday Jun 02, 2016 at 06:12 GMT"
    },
    {
        "key": "WT-2668",
        "number": 2767,
        "state": "closed",
        "title": "WT-2668 Create join statistics that are useful and are easy to understand",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 01, 2016 at 19:08 GMT",
        "updated_at": "Tuesday Jun 07, 2016 at 01:57 GMT",
        "closed_at": "Tuesday Jun 07, 2016 at 01:57 GMT",
        "merged_at": "Tuesday Jun 07, 2016 at 01:57 GMT"
    },
    {
        "key": "ER-23659",
        "number": 2766,
        "state": "closed",
        "title": "SERVER-23659 Improve log error message at startup.",
        "body": "@michaelcahill Please review this change to improve the error message if there's an error reading a log record at startup.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 01, 2016 at 18:58 GMT",
        "updated_at": "Monday Jun 06, 2016 at 01:10 GMT",
        "closed_at": "Friday Jun 03, 2016 at 03:34 GMT",
        "merged_at": "Friday Jun 03, 2016 at 03:34 GMT"
    },
    {
        "key": "WT-2672",
        "number": 2765,
        "state": "closed",
        "title": "WT-2672 handle system calls that don't set errno",
        "body": "@michaelcahill, I tried coding up your suggestion, and I agree it's better than #2757.\n\nI think we should review how we're using SYSCALL_RETRY, though. We're calling it for things that aren't worth retrying (gettimeofday), and we're not calling it for things that might reasonably need to be retried (pread, pwrite). I could see using retry for open(2) calls, but I don't think it has much value outside of that, since pread/pwrite clearly don't need it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 01, 2016 at 16:55 GMT",
        "updated_at": "Friday Jun 03, 2016 at 12:09 GMT",
        "closed_at": "Thursday Jun 02, 2016 at 00:02 GMT",
        "merged_at": "Thursday Jun 02, 2016 at 00:02 GMT"
    },
    {
        "key": "WT-2677",
        "number": 2764,
        "state": "closed",
        "title": "WT-2677 Fix JSON output so only printable ASCII is produced.",
        "body": "The root cause is a sign extension error that shows up on systems\nthat have a signed 'char'.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 01, 2016 at 15:32 GMT",
        "updated_at": "Thursday Jun 02, 2016 at 17:24 GMT",
        "closed_at": "Wednesday Jun 01, 2016 at 20:37 GMT",
        "merged_at": "Wednesday Jun 01, 2016 at 20:37 GMT"
    },
    {
        "key": "WT-2674",
        "number": 2763,
        "state": "closed",
        "title": "WT-2674 simplify metadata file check",
        "body": "@michaelcahill, @sueloverso, here are the metadata changes extracted out of #2711.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 31, 2016 at 11:55 GMT",
        "updated_at": "Wednesday Jun 01, 2016 at 00:30 GMT",
        "closed_at": "Wednesday Jun 01, 2016 at 00:30 GMT",
        "merged_at": "Wednesday Jun 01, 2016 at 00:30 GMT"
    },
    {
        "key": "WT-2673",
        "number": 2762,
        "state": "closed",
        "title": "WT-2673 Stop automatically increasing memory page max",
        "body": "@agorrod, some trivial lint from a recent change.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 31, 2016 at 11:01 GMT",
        "updated_at": "Tuesday May 31, 2016 at 12:02 GMT",
        "closed_at": "Tuesday May 31, 2016 at 12:02 GMT",
        "merged_at": "Tuesday May 31, 2016 at 12:02 GMT"
    },
    {
        "key": "ER-24306",
        "number": 2761,
        "state": "closed",
        "title": "SERVER-24306 Fix stall in log_flush switching to new files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 31, 2016 at 05:16 GMT",
        "updated_at": "Tuesday May 31, 2016 at 13:31 GMT",
        "closed_at": "Tuesday May 31, 2016 at 13:31 GMT",
        "merged_at": "Tuesday May 31, 2016 at 13:31 GMT"
    },
    {
        "key": "WT-2673",
        "number": 2760,
        "state": "closed",
        "title": "WT-2673 Stop automatically increasing memory page max",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 31, 2016 at 03:30 GMT",
        "updated_at": "Friday Jun 03, 2016 at 07:55 GMT",
        "closed_at": "Tuesday May 31, 2016 at 07:19 GMT",
        "merged_at": "Tuesday May 31, 2016 at 07:19 GMT"
    },
    {
        "key": "WT-2491",
        "number": 2759,
        "state": "closed",
        "title": "WT-2491 Revert - Remove the handle close_lock (#2745)",
        "body": "This reverts commit fa4b0916bcbeca210f98d4dd0ee86fd199050c2b.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 31, 2016 at 00:33 GMT",
        "updated_at": "Tuesday May 31, 2016 at 01:36 GMT",
        "closed_at": "Tuesday May 31, 2016 at 01:36 GMT",
        "merged_at": "Tuesday May 31, 2016 at 01:36 GMT"
    },
    {
        "key": "WT-2658",
        "number": 2758,
        "state": "closed",
        "title": "WT-2658 Only include PPC-specific files in PPC builds",
        "body": "@michaelcahill, this isn't tested on a PPC yet, but I think it's mostly there, you might want to do a quick skim to make sure it's what you had in mind.\n",
        "base_ref": "develop",
        "created_at": "Monday May 30, 2016 at 20:07 GMT",
        "updated_at": "Friday Jun 03, 2016 at 02:54 GMT",
        "closed_at": "Friday Jun 03, 2016 at 02:54 GMT",
        "merged_at": "Friday Jun 03, 2016 at 02:54 GMT"
    },
    {
        "key": "WT-2672",
        "number": 2757,
        "state": "closed",
        "title": "WT-2672 handle system calls that don't set errno",
        "body": "@michaelcahill, for your consideration.\n\nI ended up with 3 macros instead of 2, because I couldn't think of a way to handle `rename` in the same macro as the rest of the errno-style calls.\n\nI don't see anything much simpler than this that captures all of the possibilities, maybe you or @agorrod can.\n",
        "base_ref": "develop",
        "created_at": "Monday May 30, 2016 at 17:02 GMT",
        "updated_at": "Thursday Jun 02, 2016 at 00:07 GMT",
        "closed_at": "Thursday Jun 02, 2016 at 00:07 GMT",
        "merged_at": null
    },
    {
        "key": "ER-24306",
        "number": 2756,
        "state": "closed",
        "title": "SERVER-24306 Do log file prealloc every second.",
        "body": "With the switch to auto-tuning condition variables, logging threads\nneed to track elapsed time to determine when to do heavyweight\noperations such as log file pre-allocation and archiving.\n",
        "base_ref": "develop",
        "created_at": "Monday May 30, 2016 at 05:07 GMT",
        "updated_at": "Tuesday May 31, 2016 at 05:16 GMT",
        "closed_at": "Tuesday May 31, 2016 at 05:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2671",
        "number": 2755,
        "state": "closed",
        "title": "WT-2671 dump more information about the file layout in verify debug mode",
        "body": "WT-2671: dump more information about the file layout in verify debug mode\n\nDump the checkpoint final and correct sizes when loading checkpoints in verify dump_XXX mode.\n\nDump the checkpoint alloc, discard and avail lists when loading checkpoints in verify dump_XXX mode.\n\nFix a bug, convert the count of tree pages from uint32_t to uint64_t, there's no reason page counts can't overflow 4B.\n\nFix a bug, reset the internal/leaf page counts at the end of every checkpoint, we were doing cumulative counts.\n\nFix a bug, where we were using \"%03zu\" for a size_t type, fix the dist/s_style script to catch that case.\n\nAdd a divider line between checkpoints to make it easier to read the output.\n\nAdd a new __wt_buf_set_size() function that displays byte values in human-readable format.\n\nMove __wt_buf_set_printable() from btree/bt_misc.c to support/scratch.c, it's a general-purpose function.\n\nRename verify debug option from \"dump_shape\" to \"dump_layout\", we're dumping more than the tree shape now.\n",
        "base_ref": "develop",
        "created_at": "Sunday May 29, 2016 at 12:53 GMT",
        "updated_at": "Thursday Jun 09, 2016 at 14:44 GMT",
        "closed_at": "Thursday Jun 09, 2016 at 14:44 GMT",
        "merged_at": "Thursday Jun 09, 2016 at 14:44 GMT"
    },
    {
        "key": "WT-2642",
        "number": 2754,
        "state": "closed",
        "title": "WT-2642 Add debugging verbose messages for cache stuck problem.",
        "body": "Not for merge.  @keithbostic Please review these changes for adding verbose to debug this issue.  Let me know of any suggestions for additional ones.\n",
        "base_ref": "develop",
        "created_at": "Friday May 27, 2016 at 20:53 GMT",
        "updated_at": "Thursday Jun 02, 2016 at 18:25 GMT",
        "closed_at": "Thursday Jun 02, 2016 at 18:25 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2551",
        "number": 2753,
        "state": "closed",
        "title": "WT-2551 Use tcmalloc overhead to adjust available cache.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 27, 2016 at 06:14 GMT",
        "updated_at": "Wednesday Sep 14, 2016 at 02:32 GMT",
        "closed_at": "Wednesday Sep 14, 2016 at 02:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2660",
        "number": 2752,
        "state": "closed",
        "title": "WT-2660 close hang",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 26, 2016 at 19:24 GMT",
        "updated_at": "Thursday May 26, 2016 at 19:44 GMT",
        "closed_at": "Thursday May 26, 2016 at 19:44 GMT",
        "merged_at": "Thursday May 26, 2016 at 19:44 GMT"
    },
    {
        "key": "WT-2660",
        "number": 2751,
        "state": "closed",
        "title": "WT-2660 Fill in pct_full before returning.",
        "body": "Fix Jenkins failure.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 26, 2016 at 18:06 GMT",
        "updated_at": "Thursday May 26, 2016 at 18:26 GMT",
        "closed_at": "Thursday May 26, 2016 at 18:26 GMT",
        "merged_at": "Thursday May 26, 2016 at 18:26 GMT"
    },
    {
        "key": "WT-2559",
        "number": 2750,
        "state": "closed",
        "title": "WT-2559 Open a local log file handle for sync backport to MongoDB 3.0",
        "body": "(cherry picked from commit 6b3553003)\nBackport - Open a local log file handle for sync.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Thursday May 26, 2016 at 16:42 GMT",
        "updated_at": "Thursday May 26, 2016 at 22:39 GMT",
        "closed_at": "Thursday May 26, 2016 at 22:39 GMT",
        "merged_at": "Thursday May 26, 2016 at 22:39 GMT"
    },
    {
        "key": "WT-2268",
        "number": 2749,
        "state": "closed",
        "title": "WT-2268 WT-2597 JSON load/dump Unicode fixes",
        "body": "This version of JSON load/dump is incompatible with older versions.  The issue is that older JSON dump tried to dump 's' and 'S' strings as Unicode.  If the byte sequence ... 0x03 0xC0 ... appeared, then this is a valid Unicode escape sequence and we showed '...\\u03c0...'.  All fine if the string is Unicode, but if not (e.g. ... 0xFF 0xFE ...), there is no Unicode sequence that we can emit that will map back to these bytes when we reload. It seemed to me the simplest way to solve this was to treat every character in a string as a raw byte (that is, not interpreted as Unicode), but emit a unicode value between '\\u0000' and '\\u00ff'.  If the byte is printable, we show the printable character in the string.  Byte arrays (schema type 'u') are dumped using the same rules, except that we don't never should the printable character, always \\u0000 to \\u00ff.\n\nSince this breaks compatibility (old JSON dumps may translate to different bytes in a new JSON loader, and vice versa), I added a version string and a check. A new JSON dump loaded by old code will also give an error (it won't expect to see the version string). I didn't make any attempt to try to load old dumps via some byte translation; it may be possible, but there may be ambiguities. I figured anyone really interested in moving data via dump/load would not use JSON to do it. The important thing is to catch mistakes in misusage.\n\nNote: This also fixes WT-2597, I've added lots of new tests, including LSM.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 25, 2016 at 23:24 GMT",
        "updated_at": "Monday Jun 06, 2016 at 01:10 GMT",
        "closed_at": "Tuesday May 31, 2016 at 01:39 GMT",
        "merged_at": "Tuesday May 31, 2016 at 01:39 GMT"
    },
    {
        "key": "WT-2662",
        "number": 2748,
        "state": "closed",
        "title": "WT-2662 For spell check, strip out double quote literals, they confuse aspell",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 25, 2016 at 16:47 GMT",
        "updated_at": "Wednesday May 25, 2016 at 19:10 GMT",
        "closed_at": "Wednesday May 25, 2016 at 19:09 GMT",
        "merged_at": "Wednesday May 25, 2016 at 19:09 GMT"
    },
    {
        "key": "WT-2660",
        "number": 2747,
        "state": "closed",
        "title": "WT-2660 Fix a hang between eviction and connection close",
        "body": "@michaelcahill Please review this change.  I added a condition to have the app thread helping with eviction return if it notices we're closing.  You'll see by my first commit (reverted in the second) that I tried to encourage the situation, but have so far been unable to reproduce the original hang.\n\nOne consideration for this change is whether we could hit one of the conditionals in `conn_cache_destroy` but I think it is okay.  I just want someone else to think about it for a minute too.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 25, 2016 at 16:24 GMT",
        "updated_at": "Thursday May 26, 2016 at 15:19 GMT",
        "closed_at": "Thursday May 26, 2016 at 15:19 GMT",
        "merged_at": "Thursday May 26, 2016 at 15:19 GMT"
    },
    {
        "key": null,
        "number": 2746,
        "state": "closed",
        "title": "Wt 2661 coverity",
        "body": "@sueloverso, @agorrod, Coverity complaints about test/csuite.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 25, 2016 at 15:22 GMT",
        "updated_at": "Wednesday May 25, 2016 at 16:25 GMT",
        "closed_at": "Wednesday May 25, 2016 at 16:25 GMT",
        "merged_at": "Wednesday May 25, 2016 at 16:25 GMT"
    },
    {
        "key": "WT-2491",
        "number": 2745,
        "state": "closed",
        "title": "WT-2491 Remove close_lock and add a test to exercise it",
        "body": "Just testing for now\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 25, 2016 at 07:16 GMT",
        "updated_at": "Monday May 30, 2016 at 07:42 GMT",
        "closed_at": "Monday May 30, 2016 at 07:42 GMT",
        "merged_at": "Monday May 30, 2016 at 07:42 GMT"
    },
    {
        "key": "WT-2659",
        "number": 2744,
        "state": "closed",
        "title": "WT-2659: csuite tests, assorted lint and cleanup.",
        "body": "@sueloverso, @agorrod, I pointed lint at the new csuite tests, just some minor cleanup.\n\nI added a new macro, `testutil_assert`, to make it easy to assert stuff and die if it's not true.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 24, 2016 at 11:36 GMT",
        "updated_at": "Tuesday May 24, 2016 at 14:39 GMT",
        "closed_at": "Tuesday May 24, 2016 at 14:39 GMT",
        "merged_at": "Tuesday May 24, 2016 at 14:39 GMT"
    },
    {
        "key": "WT-2656",
        "number": 2743,
        "state": "closed",
        "title": "WT-2656 - Fix GCC47 compiler complaints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 24, 2016 at 03:57 GMT",
        "updated_at": "Tuesday May 24, 2016 at 07:19 GMT",
        "closed_at": "Tuesday May 24, 2016 at 07:19 GMT",
        "merged_at": "Tuesday May 24, 2016 at 07:19 GMT"
    },
    {
        "key": "WT-2629",
        "number": 2742,
        "state": "closed",
        "title": "WT-2629 Make the stack non-executable with GCC only.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 24, 2016 at 03:07 GMT",
        "updated_at": "Tuesday May 24, 2016 at 06:24 GMT",
        "closed_at": "Tuesday May 24, 2016 at 06:24 GMT",
        "merged_at": "Tuesday May 24, 2016 at 06:24 GMT"
    },
    {
        "key": "WT-2653",
        "number": 2741,
        "state": "closed",
        "title": "WT-2653: the custom file-system example should show device configuration",
        "body": "@agorrod, one of the groups looking at the pluggable file system wanted to know how to pass local configuration information into their initialization function, so I added that to the example. I don't think we show it anywhere else, and it's pretty hard to figure out from the documentation.\n\nWhile looking at that, I dropped core, and that's commit d687210. We could avoid this change by changing `__wt_ext_strerror()` to use the underlying session method instead of the connection's default, but that's even messier than what I'm doing here. I don't like that change much, hoping you or @michaelcahill have a better one.\n",
        "base_ref": "develop",
        "created_at": "Monday May 23, 2016 at 23:42 GMT",
        "updated_at": "Tuesday May 24, 2016 at 23:40 GMT",
        "closed_at": "Tuesday May 24, 2016 at 23:40 GMT",
        "merged_at": "Tuesday May 24, 2016 at 23:40 GMT"
    },
    {
        "key": "WT-2554",
        "number": 2740,
        "state": "closed",
        "title": "WT-2554 Fix build warnings",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 23, 2016 at 20:02 GMT",
        "updated_at": "Monday May 23, 2016 at 20:27 GMT",
        "closed_at": "Monday May 23, 2016 at 20:27 GMT",
        "merged_at": "Monday May 23, 2016 at 20:27 GMT"
    },
    {
        "key": "WT-2629",
        "number": 2739,
        "state": "closed",
        "title": "WT-2629 Don't make stacks executable in assembly source.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 23, 2016 at 06:17 GMT",
        "updated_at": "Tuesday May 24, 2016 at 03:13 GMT",
        "closed_at": "Monday May 23, 2016 at 10:42 GMT",
        "merged_at": "Monday May 23, 2016 at 10:42 GMT"
    },
    {
        "key": "WT-2651",
        "number": 2738,
        "state": "closed",
        "title": "WT-2651: Coverity 1355591 resource leak",
        "body": "Fix comment spelling.\n",
        "base_ref": "develop",
        "created_at": "Sunday May 22, 2016 at 13:17 GMT",
        "updated_at": "Sunday May 22, 2016 at 13:48 GMT",
        "closed_at": "Sunday May 22, 2016 at 13:48 GMT",
        "merged_at": "Sunday May 22, 2016 at 13:48 GMT"
    },
    {
        "key": "WT-2651",
        "number": 2737,
        "state": "closed",
        "title": "WT-2651: Coverity 1355591 resource leak",
        "body": "@ddanderson, 20e0a57 is a new resource leak.\n\n@agorrod, the rest is cleanup.\n",
        "base_ref": "develop",
        "created_at": "Friday May 20, 2016 at 11:42 GMT",
        "updated_at": "Sunday May 22, 2016 at 12:14 GMT",
        "closed_at": "Sunday May 22, 2016 at 12:13 GMT",
        "merged_at": "Sunday May 22, 2016 at 12:13 GMT"
    },
    {
        "key": "WT-2646",
        "number": 2736,
        "state": "closed",
        "title": "WT-2646 - Allow drop without waiting for checkpoints",
        "body": "\u2026ithout the checkpoint lock\n",
        "base_ref": "develop",
        "created_at": "Thursday May 19, 2016 at 19:47 GMT",
        "updated_at": "Tuesday May 24, 2016 at 04:45 GMT",
        "closed_at": "Tuesday May 24, 2016 at 04:45 GMT",
        "merged_at": "Tuesday May 24, 2016 at 04:45 GMT"
    },
    {
        "key": "WT-2644",
        "number": 2735,
        "state": "closed",
        "title": "WT-2644 Fix 'wt load -r' (rename) with LSM",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 19, 2016 at 17:33 GMT",
        "updated_at": "Thursday May 19, 2016 at 18:48 GMT",
        "closed_at": "Thursday May 19, 2016 at 18:48 GMT",
        "merged_at": "Thursday May 19, 2016 at 18:48 GMT"
    },
    {
        "key": "WT-2632",
        "number": 2734,
        "state": "closed",
        "title": "WT-2632 Tolerate EBUSY when a checkpoint cursor is open.",
        "body": "@keithbostic Please review this change.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 19, 2016 at 16:53 GMT",
        "updated_at": "Thursday May 19, 2016 at 18:44 GMT",
        "closed_at": "Thursday May 19, 2016 at 18:44 GMT",
        "merged_at": "Thursday May 19, 2016 at 18:44 GMT"
    },
    {
        "key": "WT-2637",
        "number": 2733,
        "state": "closed",
        "title": "WT-2637: The file-extension documentation doesn't cover not-supported cases",
        "body": "The file-extension documentation doesn't cover not-supported cases.\n\nPublic domain the POSIX file system implementation, it's a natural starting point for anyone writing their own implementation.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 17, 2016 at 23:33 GMT",
        "updated_at": "Thursday May 19, 2016 at 16:13 GMT",
        "closed_at": "Thursday May 19, 2016 at 16:13 GMT",
        "merged_at": "Thursday May 19, 2016 at 16:13 GMT"
    },
    {
        "key": "WT-2635",
        "number": 2732,
        "state": "closed",
        "title": "WT-2635: Test/format on 3.0 attempts to use bzip compression",
        "body": "Change test/format to not choose bzip compression.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Tuesday May 17, 2016 at 19:09 GMT",
        "updated_at": "Tuesday May 17, 2016 at 21:07 GMT",
        "closed_at": "Tuesday May 17, 2016 at 21:07 GMT",
        "merged_at": "Tuesday May 17, 2016 at 21:07 GMT"
    },
    {
        "key": "WT-2610",
        "number": 2731,
        "state": "closed",
        "title": "WT-2610 Reduce hazard pointer array size.",
        "body": "@michaelcahill Here are the changes.  I committed the changes to wtperf to add `session_count_idle` as a separate commit in case we don't want to keep that.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Monday May 16, 2016 at 20:12 GMT",
        "updated_at": "Tuesday May 17, 2016 at 21:09 GMT",
        "closed_at": "Tuesday May 17, 2016 at 21:08 GMT",
        "merged_at": "Tuesday May 17, 2016 at 21:08 GMT"
    },
    {
        "key": "WT-2630",
        "number": 2730,
        "state": "closed",
        "title": "WT-2630 Rename pluggable filesystem methods to avoid reserved names.",
        "body": "Use \"fstr\" consistently as the variable name and prefix for WT_FSTREAM.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 12, 2016 at 02:23 GMT",
        "updated_at": "Tuesday May 24, 2016 at 03:13 GMT",
        "closed_at": "Tuesday May 24, 2016 at 02:20 GMT",
        "merged_at": "Tuesday May 24, 2016 at 02:20 GMT"
    },
    {
        "key": "WT-2630",
        "number": 2729,
        "state": "closed",
        "title": "WT-2630: Rename WT_FSTREAM methods to avoid using C99 reserved names",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 11, 2016 at 21:52 GMT",
        "updated_at": "Thursday May 12, 2016 at 13:09 GMT",
        "closed_at": "Thursday May 12, 2016 at 13:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2628",
        "number": 2728,
        "state": "closed",
        "title": "WT-2628: reconciliation can return without unlocking the page lock",
        "body": "Read for review.\n",
        "base_ref": "develop",
        "created_at": "Saturday May 07, 2016 at 15:36 GMT",
        "updated_at": "Monday May 16, 2016 at 15:13 GMT",
        "closed_at": "Monday May 16, 2016 at 15:13 GMT",
        "merged_at": "Monday May 16, 2016 at 15:13 GMT"
    },
    {
        "key": "WT-2627",
        "number": 2727,
        "state": "closed",
        "title": "WT-2627: Coverity complaints",
        "body": "Ready for review/merge.\n\nDear reviewer: there's a complaint Coverity has where I can't spot the error, and I don't see why Coverity would get it wrong. If you have the time to take a look at it, it's [Coverity complaint 1355027](https://scan6.coverity.com/reports.htm#v27510/p10746). I've simplified the code in 224a88d to try and clarify the issue.\n",
        "base_ref": "develop",
        "created_at": "Friday May 06, 2016 at 12:17 GMT",
        "updated_at": "Monday May 09, 2016 at 15:33 GMT",
        "closed_at": "Monday May 09, 2016 at 15:33 GMT",
        "merged_at": "Monday May 09, 2016 at 15:33 GMT"
    },
    {
        "key": "WT-2626",
        "number": 2726,
        "state": "closed",
        "title": "WT-2626 - Fix MSVC 2015 snprintf redefinition",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 06, 2016 at 06:44 GMT",
        "updated_at": "Friday May 06, 2016 at 07:01 GMT",
        "closed_at": "Friday May 06, 2016 at 07:01 GMT",
        "merged_at": "Friday May 06, 2016 at 07:01 GMT"
    },
    {
        "key": "WT-2624",
        "number": 2725,
        "state": "closed",
        "title": "WT-2624 Fix example program build with MSVC 2013",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 06, 2016 at 00:50 GMT",
        "updated_at": "Friday May 06, 2016 at 05:31 GMT",
        "closed_at": "Friday May 06, 2016 at 05:31 GMT",
        "merged_at": "Friday May 06, 2016 at 05:31 GMT"
    },
    {
        "key": null,
        "number": 2724,
        "state": "closed",
        "title": "Wt 2624",
        "body": "",
        "base_ref": "master",
        "created_at": "Friday May 06, 2016 at 00:50 GMT",
        "updated_at": "Friday May 06, 2016 at 00:50 GMT",
        "closed_at": "Friday May 06, 2016 at 00:50 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2633",
        "number": 2723,
        "state": "closed",
        "title": "WT-2633 Don't allow eviction of the metadata during checkpoints in MongoDB 3.0",
        "body": "Avoid a path to the checkpoint thread performing eviction.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Thursday May 05, 2016 at 13:12 GMT",
        "updated_at": "Monday May 16, 2016 at 14:47 GMT",
        "closed_at": "Monday May 16, 2016 at 14:47 GMT",
        "merged_at": "Monday May 16, 2016 at 14:47 GMT"
    },
    {
        "key": "WT-2617",
        "number": 2722,
        "state": "closed",
        "title": "WT-2617 Don't use u_int in the example code. It's not Windows native.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 05, 2016 at 06:51 GMT",
        "updated_at": "Thursday May 05, 2016 at 07:22 GMT",
        "closed_at": "Thursday May 05, 2016 at 07:22 GMT",
        "merged_at": "Thursday May 05, 2016 at 07:22 GMT"
    },
    {
        "key": "WT-2621",
        "number": 2721,
        "state": "closed",
        "title": "WT-2621 Fix missing parentheses on call to __wt_errno",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday May 05, 2016 at 01:37 GMT",
        "updated_at": "Thursday May 05, 2016 at 05:17 GMT",
        "closed_at": "Thursday May 05, 2016 at 05:17 GMT",
        "merged_at": "Thursday May 05, 2016 at 05:17 GMT"
    },
    {
        "key": "WT-2615",
        "number": 2720,
        "state": "closed",
        "title": "WT-2615: Enabling checkpoints in test/format leads to reduced concurrency",
        "body": "Ready for review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 04, 2016 at 15:58 GMT",
        "updated_at": "Wednesday May 04, 2016 at 23:25 GMT",
        "closed_at": "Wednesday May 04, 2016 at 23:25 GMT",
        "merged_at": "Wednesday May 04, 2016 at 23:25 GMT"
    },
    {
        "key": "WT-2616",
        "number": 2719,
        "state": "closed",
        "title": "WT-2616: Fix a deadlock with in-memory size lookups.",
        "body": "Eliminate a race where the handle could be removed between the search\nand the size check.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 04, 2016 at 15:00 GMT",
        "updated_at": "Wednesday May 04, 2016 at 23:44 GMT",
        "closed_at": "Wednesday May 04, 2016 at 23:32 GMT",
        "merged_at": "Wednesday May 04, 2016 at 23:32 GMT"
    },
    {
        "key": "WT-2617",
        "number": 2718,
        "state": "closed",
        "title": "WT-2617: Bug in pluggable file system example",
        "body": "@agorrod, the only thing I can find here is the file system example didn't separate the concepts of \"buffer data size \" and \"buffer memory size\", so the read of the file was somehow getting confused. I don't see the exact path that would cause it, but I think there's a potential problem there.\n\nIf you merge 461c63d, I think we can close the JIRA ticket until it appears again.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 04, 2016 at 14:44 GMT",
        "updated_at": "Thursday May 05, 2016 at 10:49 GMT",
        "closed_at": "Thursday May 05, 2016 at 06:14 GMT",
        "merged_at": "Thursday May 05, 2016 at 06:14 GMT"
    },
    {
        "key": "WT-2613",
        "number": 2717,
        "state": "closed",
        "title": "WT-2613 - Add WT_UNUSED to a variable to fix Windows compilation.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 04, 2016 at 04:52 GMT",
        "updated_at": "Wednesday May 04, 2016 at 05:05 GMT",
        "closed_at": "Wednesday May 04, 2016 at 05:05 GMT",
        "merged_at": "Wednesday May 04, 2016 at 05:05 GMT"
    },
    {
        "key": "WT-2616",
        "number": 2716,
        "state": "closed",
        "title": "WT-2616 Fix a deadlock with in-memory size lookups.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 04, 2016 at 04:10 GMT",
        "updated_at": "Wednesday May 04, 2016 at 04:43 GMT",
        "closed_at": "Wednesday May 04, 2016 at 04:43 GMT",
        "merged_at": "Wednesday May 04, 2016 at 04:43 GMT"
    },
    {
        "key": "WT-2612",
        "number": 2715,
        "state": "closed",
        "title": "WT-2612: The dist/s_prototypes script is creating a debugging file xxx.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 03, 2016 at 20:38 GMT",
        "updated_at": "Tuesday May 03, 2016 at 20:48 GMT",
        "closed_at": "Tuesday May 03, 2016 at 20:48 GMT",
        "merged_at": "Tuesday May 03, 2016 at 20:48 GMT"
    },
    {
        "key": "WT-2611",
        "number": 2714,
        "state": "closed",
        "title": "WT-2611 Modify wtperf to handle escaped quotes.",
        "body": "This simple solution allows backquotes to get into the WT config parsing, where they are accepted but not transformed (see the JIRA comments), and then unescape them when we get them back from the parser.  \n\nQuestion for reviewer: it may be preferred to put the unescape code in the config parsing within WiredTiger.  If we go that route, we probably need to allocate a buffer when needed (probably hanging off of WT_CONFIG) to hold the unescaped text.\n\nAlso wanted to make sure I wasn't missing some other way of escaping quotes before I went for a more involved solution.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 03, 2016 at 20:00 GMT",
        "updated_at": "Thursday May 19, 2016 at 20:54 GMT",
        "closed_at": "Thursday May 19, 2016 at 20:53 GMT",
        "merged_at": "Thursday May 19, 2016 at 20:53 GMT"
    },
    {
        "key": "WT-2609",
        "number": 2713,
        "state": "closed",
        "title": "WT-2609: Incorrect \"skips API_END call\" error.",
        "body": "A comment in cursor/cur_join.c contains \"return WT_NOTFOUND\", which is triggering a complaint from the scripts that check for returns that skip error labels.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 03, 2016 at 15:49 GMT",
        "updated_at": "Tuesday May 03, 2016 at 16:00 GMT",
        "closed_at": "Tuesday May 03, 2016 at 16:00 GMT",
        "merged_at": "Tuesday May 03, 2016 at 16:00 GMT"
    },
    {
        "key": "WT-2554",
        "number": 2712,
        "state": "closed",
        "title": "WT-2554 Add initial C test framework.",
        "body": "@agorrod, @sueloverso: here's something to show you the direction I'd take on this one.\n\nChanges:\n- every test program has its own directory (multiple standalone programs in a directory means naming collisions/confusion for no gain that I can think of),\n- there's a script dist/s_csuite that creates Makefiles for the test programs, and complains if they're not listed in the build_posix/Make.subdirs file, so people don't forget to add them there,\n- split the `test_util.i` file into `test_util.h`, `misc.c` and `parse_opts.c`, now that we have a utility library, there's no point to having 20 copies of the `testutil_die` function per program.\n",
        "base_ref": "wt-2554-ctest",
        "created_at": "Tuesday May 03, 2016 at 15:38 GMT",
        "updated_at": "Monday May 23, 2016 at 15:32 GMT",
        "closed_at": "Tuesday May 03, 2016 at 23:48 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2603",
        "number": 2711,
        "state": "closed",
        "title": "WT-2603 Track the hash bucket ID for hash queues, not the name hash value",
        "body": "@agorrod, for your consideration.\n\nAs I said before, I don't care too much if we take this or discard it.\n\nThe most valuable piece is probably skipping the metadata name comparison?\n\nFTR, as far as dynamically resizing the hash table, I don't think having the original hash changes the problem much, it only means we don't have to recalculate the hash during the resize.\n",
        "base_ref": "develop",
        "created_at": "Monday May 02, 2016 at 13:29 GMT",
        "updated_at": "Tuesday May 31, 2016 at 11:23 GMT",
        "closed_at": "Tuesday May 31, 2016 at 11:23 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2602",
        "number": 2710,
        "state": "closed",
        "title": "WT-2602 In LSM, use the chunk size to set maximum page size in memory.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 02, 2016 at 05:42 GMT",
        "updated_at": "Monday May 02, 2016 at 06:37 GMT",
        "closed_at": "Monday May 02, 2016 at 06:37 GMT",
        "merged_at": "Monday May 02, 2016 at 06:37 GMT"
    },
    {
        "key": "WT-2598",
        "number": 2709,
        "state": "closed",
        "title": "WT-2598: in-memory FS needs fast lookup on file names",
        "body": "@agorrod, we talked about the changes to support hash buckets on in-memory filesystem names, that's in 347fc73.\n\nAdditionally, 1a932f2 changes our hash bucket implementations to track the bucket ID instead of the name hash. We don't resize the hash queues so there's never a need to recompute the bucket ID. I doubt it will speed anything up, but it's wasted effort.\n",
        "base_ref": "develop",
        "created_at": "Sunday May 01, 2016 at 17:10 GMT",
        "updated_at": "Monday May 02, 2016 at 12:27 GMT",
        "closed_at": "Monday May 02, 2016 at 12:27 GMT",
        "merged_at": "Monday May 02, 2016 at 12:27 GMT"
    },
    {
        "key": "WT-2600",
        "number": 2708,
        "state": "closed",
        "title": "WT-2600: clean up test program #includes",
        "body": "@agorrod, this is just some minor changes to make lint happier with the test programs.\n\nI'm sure it's going to break on some machine/compiler configuration, but I'll test it where I can explicitly and shepherd it through if it breaks.\n",
        "base_ref": "develop",
        "created_at": "Sunday May 01, 2016 at 14:27 GMT",
        "updated_at": "Monday May 02, 2016 at 06:05 GMT",
        "closed_at": "Monday May 02, 2016 at 06:05 GMT",
        "merged_at": "Monday May 02, 2016 at 06:05 GMT"
    },
    {
        "key": "WT-2599",
        "number": 2707,
        "state": "closed",
        "title": "WT-2599: split out the checksum code from the support directory",
        "body": "@michaelcahill, @agorrod, for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Apr 30, 2016 at 12:13 GMT",
        "updated_at": "Monday May 02, 2016 at 03:39 GMT",
        "closed_at": "Monday May 02, 2016 at 03:39 GMT",
        "merged_at": "Monday May 02, 2016 at 03:39 GMT"
    },
    {
        "key": "ER-23661",
        "number": 2706,
        "state": "closed",
        "title": "SERVER-23661: $sample takes disproportionately long time on newly created collection",
        "body": "@michaelcahill, calling `__wt_page_evict_soon` works well, in my tests it brings $sample of newly created collections down to about the same time as a re-opened collection.\n\nI ended up with a pretty stupid \"should we evict this page\" test of \"greater than 5MB\". That performed as well as anything else I tried, and it didn't seem unreasonable to use the page's memory footprint for this purpose, once we know the page's footprint reflects just the one big skiplist.\n\nReady for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 29, 2016 at 17:05 GMT",
        "updated_at": "Wednesday May 04, 2016 at 04:39 GMT",
        "closed_at": "Wednesday May 04, 2016 at 04:39 GMT",
        "merged_at": "Wednesday May 04, 2016 at 04:39 GMT"
    },
    {
        "key": "WT-2592",
        "number": 2705,
        "state": "closed",
        "title": "WT-2592 Fix joins for the non-recno, non-raw case",
        "body": "This fixes a rather fundamental problem.  Any joins written in C that do not use recno were not seeing results.  Internally we are using raw keys, but our final 'main' cursor may not be in raw mode, so we may not be able to retrieve the values using the key we have.\n\nUnfortunately, the bulk of the test cases for join are in Python, which use RAW mode, so unaffected.  Our C example uses recno, which took a different path.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 29, 2016 at 14:26 GMT",
        "updated_at": "Monday May 23, 2016 at 06:18 GMT",
        "closed_at": "Monday May 02, 2016 at 15:36 GMT",
        "merged_at": "Monday May 02, 2016 at 15:36 GMT"
    },
    {
        "key": "WT-2595",
        "number": 2704,
        "state": "closed",
        "title": "WT-2595 Fix compiler warning in packing test.",
        "body": "While here switch from using asserts to test util functions.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 29, 2016 at 06:46 GMT",
        "updated_at": "Friday Apr 29, 2016 at 10:39 GMT",
        "closed_at": "Friday Apr 29, 2016 at 10:34 GMT",
        "merged_at": "Friday Apr 29, 2016 at 10:34 GMT"
    },
    {
        "key": "WT-2586",
        "number": 2703,
        "state": "closed",
        "title": "WT-2586 Fix Windows build after removal of ex_config",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 29, 2016 at 04:52 GMT",
        "updated_at": "Friday Apr 29, 2016 at 05:38 GMT",
        "closed_at": "Friday Apr 29, 2016 at 05:38 GMT",
        "merged_at": "Friday Apr 29, 2016 at 05:38 GMT"
    },
    {
        "key": "WT-2593",
        "number": 2702,
        "state": "closed",
        "title": "WT-2593 Free the dirlist at the end of the function.",
        "body": "@keithbostic This should fix the runaway creation of pre-allocated log files.  Please review\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 28, 2016 at 20:44 GMT",
        "updated_at": "Thursday Apr 28, 2016 at 23:39 GMT",
        "closed_at": "Thursday Apr 28, 2016 at 23:39 GMT",
        "merged_at": "Thursday Apr 28, 2016 at 23:39 GMT"
    },
    {
        "key": "WT-2343",
        "number": 2701,
        "state": "closed",
        "title": "WT-2343 Add test to make sure we cannot rename/drop when a backup cursor is open.",
        "body": "@keithbostic Please review this change to a backup test that verifies we cannot change the file names via rename or drop while a backup cursor is open.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 28, 2016 at 20:02 GMT",
        "updated_at": "Friday Apr 29, 2016 at 00:02 GMT",
        "closed_at": "Friday Apr 29, 2016 at 00:02 GMT",
        "merged_at": "Friday Apr 29, 2016 at 00:02 GMT"
    },
    {
        "key": "WT-2586",
        "number": 2700,
        "state": "closed",
        "title": "WT-2586: Remove ex_config.c until config cursors are supported",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 28, 2016 at 16:52 GMT",
        "updated_at": "Friday Apr 29, 2016 at 01:02 GMT",
        "closed_at": "Friday Apr 29, 2016 at 01:02 GMT",
        "merged_at": "Friday Apr 29, 2016 at 01:02 GMT"
    },
    {
        "key": "WT-2479",
        "number": 2699,
        "state": "closed",
        "title": "WT-2479 Refactored json dump to eliminate duplicate code.",
        "body": "This also fixes a malloc leak in dump_table_config_complex().\n\nCompared JSON output from all jsondump runs in test/suite, all identical modulo a difference arising from using a `metadata:create` cursor previously, now we use a (regular) `metadata:`.   The differences will be tracked in WT-2591.  For JSON dump the difference appears to be benign: 1) the test cases run normally 2) the previous values dumped for key_format/value_format of column groups appeared to be wrong, with this commit they are right 3) the key_format/value_format for a column group is likely to be ignored on input (it's normally not specified), since it can be derived from the formats given for the `table:`.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 28, 2016 at 14:40 GMT",
        "updated_at": "Friday Apr 29, 2016 at 12:46 GMT",
        "closed_at": "Friday Apr 29, 2016 at 12:46 GMT",
        "merged_at": "Friday Apr 29, 2016 at 12:46 GMT"
    },
    {
        "key": "WT-2552",
        "number": 2698,
        "state": "closed",
        "title": "WT-2552 Add public API for pluggable filesystems",
        "body": "@agorrod, I'm putting some minor cleanups into this branch for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 28, 2016 at 12:02 GMT",
        "updated_at": "Thursday Apr 28, 2016 at 22:49 GMT",
        "closed_at": "Thursday Apr 28, 2016 at 22:49 GMT",
        "merged_at": "Thursday Apr 28, 2016 at 22:49 GMT"
    },
    {
        "key": "WT-2446",
        "number": 2697,
        "state": "closed",
        "title": "WT-2446 Add stat for number of calls to get a page.",
        "body": "@keithbostic Please review this change to add a stat to count the number of calls to get a page.  With this, and \"pages read into cache\" the user can compute the cache miss ratio, and therefore, the cache hit ratio.  I also added one at the dsrc level too.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 27, 2016 at 20:42 GMT",
        "updated_at": "Thursday Apr 28, 2016 at 15:40 GMT",
        "closed_at": "Thursday Apr 28, 2016 at 15:40 GMT",
        "merged_at": "Thursday Apr 28, 2016 at 15:40 GMT"
    },
    {
        "key": "WT-2583",
        "number": 2696,
        "state": "closed",
        "title": "WT-2583 Incremental backup fix",
        "body": "@keithbostic Here's a fix for the incremental backup failure problem that leaves the source directory in a bad state if we fail while the incremental backup cursor is open.  I have tested this with the repro case you posted and the verify command succeeds.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 25, 2016 at 18:49 GMT",
        "updated_at": "Friday Apr 29, 2016 at 07:31 GMT",
        "closed_at": "Friday Apr 29, 2016 at 07:31 GMT",
        "merged_at": "Friday Apr 29, 2016 at 07:31 GMT"
    },
    {
        "key": "WT-2582",
        "number": 2695,
        "state": "closed",
        "title": "WT-2582: cache eviction server error: WT_RESTART",
        "body": "@michaelcahill, @agorrod, another column-store record-number fix.\n\nI think this change is pretty safe, so I'm going to merge it after it passes the tests so we can get the stress tests going again.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 24, 2016 at 15:22 GMT",
        "updated_at": "Sunday Apr 24, 2016 at 15:59 GMT",
        "closed_at": "Sunday Apr 24, 2016 at 15:59 GMT",
        "merged_at": "Sunday Apr 24, 2016 at 15:59 GMT"
    },
    {
        "key": "WT-2584",
        "number": 2694,
        "state": "closed",
        "title": "WT-2584: don't use periods in error messages",
        "body": "Periods followed by colons looks bad, remove periods from error messages.\n",
        "base_ref": "develop",
        "created_at": "Saturday Apr 23, 2016 at 18:27 GMT",
        "updated_at": "Monday Apr 25, 2016 at 23:22 GMT",
        "closed_at": "Monday Apr 25, 2016 at 23:22 GMT",
        "merged_at": "Monday Apr 25, 2016 at 23:22 GMT"
    },
    {
        "key": "WT-2580",
        "number": 2693,
        "state": "closed",
        "title": "WT-2580 Fix potential SWIG naming conflict in Java",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Apr 23, 2016 at 15:03 GMT",
        "updated_at": "Monday Apr 25, 2016 at 23:26 GMT",
        "closed_at": "Monday Apr 25, 2016 at 23:26 GMT",
        "merged_at": "Monday Apr 25, 2016 at 23:26 GMT"
    },
    {
        "key": "WT-2581",
        "number": 2692,
        "state": "closed",
        "title": "WT-2581: assert multi->disk_image == NULL",
        "body": "@michaelcahill, I think this change is pretty safe, so I'm going to merge it after it passes the tests so we can get the stress tests going again.\n\nMichael, would you please do a quick review next chance you get?\n",
        "base_ref": "develop",
        "created_at": "Saturday Apr 23, 2016 at 14:14 GMT",
        "updated_at": "Saturday Apr 23, 2016 at 14:32 GMT",
        "closed_at": "Saturday Apr 23, 2016 at 14:32 GMT",
        "merged_at": "Saturday Apr 23, 2016 at 14:32 GMT"
    },
    {
        "key": "WT-2576",
        "number": 2691,
        "state": "closed",
        "title": "WT-2576 Skip tiny pages if we can.",
        "body": "@keithbostic Please review this eviction change to skip tiny pages.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 20:26 GMT",
        "updated_at": "Friday Apr 29, 2016 at 00:01 GMT",
        "closed_at": "Friday Apr 29, 2016 at 00:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2574",
        "number": 2690,
        "state": "closed",
        "title": "WT-2574: format doesn't free all allocated configure memory",
        "body": "Rework format configuration to use config_single() more, that way we\ndiscard allocated memory when in-memory configurations turn off previous\nconfigurations.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 20:11 GMT",
        "updated_at": "Friday Apr 22, 2016 at 20:55 GMT",
        "closed_at": "Friday Apr 22, 2016 at 20:55 GMT",
        "merged_at": "Friday Apr 22, 2016 at 20:55 GMT"
    },
    {
        "key": "WT-2571",
        "number": 2689,
        "state": "closed",
        "title": "WT-2571 Join code clean up",
        "body": "This is a followup for WT-2360. Renaming and reordering functions (big diffs!), and some reorganization of test cases to use scenarios.  (Use this pull request instead of #2681)\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 18:23 GMT",
        "updated_at": "Wednesday Apr 27, 2016 at 07:07 GMT",
        "closed_at": "Wednesday Apr 27, 2016 at 07:07 GMT",
        "merged_at": "Wednesday Apr 27, 2016 at 07:07 GMT"
    },
    {
        "key": "WT-2579",
        "number": 2688,
        "state": "closed",
        "title": "WT-2579: in-memory configurations break debugging support",
        "body": "@michaelcahill, @agorrod: I want to give up trying to run the debugging functions through the pluggable I/O functions, it's too hard.\n\nThis also removes the need for the `WT_STREAM_LINE_BUFFER` flag.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 17:15 GMT",
        "updated_at": "Tuesday Apr 26, 2016 at 23:40 GMT",
        "closed_at": "Tuesday Apr 26, 2016 at 23:40 GMT",
        "merged_at": "Tuesday Apr 26, 2016 at 23:40 GMT"
    },
    {
        "key": "WT-2576",
        "number": 2687,
        "state": "closed",
        "title": "WT-2576: variable-length column-store out-of-order return",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 16:39 GMT",
        "updated_at": "Friday Apr 22, 2016 at 18:55 GMT",
        "closed_at": "Friday Apr 22, 2016 at 18:55 GMT",
        "merged_at": "Friday Apr 22, 2016 at 18:55 GMT"
    },
    {
        "key": "WT-2553",
        "number": 2686,
        "state": "closed",
        "title": "WT-2553 Fix implicit size_t conversion in test/format.",
        "body": "test/format/config.c:415:16: error: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 02:54 GMT",
        "updated_at": "Friday Apr 22, 2016 at 03:32 GMT",
        "closed_at": "Friday Apr 22, 2016 at 03:31 GMT",
        "merged_at": "Friday Apr 22, 2016 at 03:31 GMT"
    },
    {
        "key": "WT-2360",
        "number": 2685,
        "state": "closed",
        "title": "WT-2360 Fix a build warning.",
        "body": "cursor/cur_join.c:664:41: error: implicit conversion loses integer precision: 'unsigned long' to 'uint32_t' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 02:16 GMT",
        "updated_at": "Friday Apr 22, 2016 at 02:30 GMT",
        "closed_at": "Friday Apr 22, 2016 at 02:30 GMT",
        "merged_at": "Friday Apr 22, 2016 at 02:30 GMT"
    },
    {
        "key": "WT-2574",
        "number": 2684,
        "state": "closed",
        "title": " WT-2574 Ensure test/format doesn't leak memory",
        "body": "It can if an option is specified in the configuration file and\nthe command line.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 22, 2016 at 01:25 GMT",
        "updated_at": "Friday Apr 22, 2016 at 04:02 GMT",
        "closed_at": "Friday Apr 22, 2016 at 04:02 GMT",
        "merged_at": "Friday Apr 22, 2016 at 04:02 GMT"
    },
    {
        "key": "WT-2577",
        "number": 2683,
        "state": "closed",
        "title": "WT-2577: core dump discarding non-existent addresses",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 23:30 GMT",
        "updated_at": "Friday Apr 22, 2016 at 01:50 GMT",
        "closed_at": "Friday Apr 22, 2016 at 01:50 GMT",
        "merged_at": "Friday Apr 22, 2016 at 01:50 GMT"
    },
    {
        "key": "WT-2573",
        "number": 2682,
        "state": "closed",
        "title": "WT-2573: free of stack-allocated WT_REF",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 16:07 GMT",
        "updated_at": "Thursday Apr 21, 2016 at 16:32 GMT",
        "closed_at": "Thursday Apr 21, 2016 at 16:32 GMT",
        "merged_at": "Thursday Apr 21, 2016 at 16:32 GMT"
    },
    {
        "key": "WT-2571",
        "number": 2681,
        "state": "closed",
        "title": "WT-2571 Join cleanup",
        "body": "This is a followup for WT-2360.  Renaming and reordering functions, some reorganization of test cases to use scenarios.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 16:00 GMT",
        "updated_at": "Friday Apr 22, 2016 at 18:25 GMT",
        "closed_at": "Friday Apr 22, 2016 at 18:25 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2574",
        "number": 2680,
        "state": "closed",
        "title": "WT-2574: format doesn't free all allocated configure memory",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 15:25 GMT",
        "updated_at": "Thursday Apr 21, 2016 at 17:35 GMT",
        "closed_at": "Thursday Apr 21, 2016 at 17:35 GMT",
        "merged_at": "Thursday Apr 21, 2016 at 17:35 GMT"
    },
    {
        "key": "WT-2572",
        "number": 2679,
        "state": "closed",
        "title": "WT-2572: don't select an in-memory format run if incompatible options configured",
        "body": "@sueloverso, for your review.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 14:47 GMT",
        "updated_at": "Thursday Apr 21, 2016 at 16:09 GMT",
        "closed_at": "Thursday Apr 21, 2016 at 16:09 GMT",
        "merged_at": "Thursday Apr 21, 2016 at 16:09 GMT"
    },
    {
        "key": "WT-2570",
        "number": 2678,
        "state": "closed",
        "title": "WT-2570: Minor lint cleanups",
        "body": "@ddanderson, some minor touch ups for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 11:25 GMT",
        "updated_at": "Thursday Apr 21, 2016 at 13:02 GMT",
        "closed_at": "Thursday Apr 21, 2016 at 13:02 GMT",
        "merged_at": "Thursday Apr 21, 2016 at 13:02 GMT"
    },
    {
        "key": "WT-2560",
        "number": 2677,
        "state": "closed",
        "title": "WT-2560 Spin on transaction locks.",
        "body": "The default backoff sleeps cause severe performance regressions due to\ncontention between readers trying to scan.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 07:24 GMT",
        "updated_at": "Friday Apr 22, 2016 at 03:43 GMT",
        "closed_at": "Friday Apr 22, 2016 at 03:43 GMT",
        "merged_at": "Friday Apr 22, 2016 at 03:43 GMT"
    },
    {
        "key": "WT-2544",
        "number": 2676,
        "state": "closed",
        "title": "WT-2544 Fix eviction stats when clear is used",
        "body": "\u2026ed properly within the library, so reported statistics were garbage. I think these statistics update macros were accidentally removed when we change the code to keep track of server, worker and app evicts internally in the cache, not to rely on statistics that may or may not be turned on by the user. Users may still want to see these statistics, so they need to be updated appropriately. \n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 21, 2016 at 03:02 GMT",
        "updated_at": "Wednesday Apr 27, 2016 at 01:44 GMT",
        "closed_at": "Wednesday Apr 27, 2016 at 01:44 GMT",
        "merged_at": "Wednesday Apr 27, 2016 at 01:44 GMT"
    },
    {
        "key": "WT-2569",
        "number": 2675,
        "state": "closed",
        "title": "WT-2569 __win_handle_read needs to call GetLastError()",
        "body": "When `ReadFile` returns an error on Windows, `nr` is always set to 0. Therefore we always return `WT_ERROR` instead of calling `GetLastError` and lose valuable error information.\n\n_Tests_:\nBy injecting a fault via `SetLastError(ERROR_QUORUM_DISK_NOT_FOUND)` and some code modifications, we now get more useful information in the logs when `ReadFile` fails:\n\n_Sample log_:\n\n```\n2016-04-20T16:57:22.786-0400 E STORAGE  [initandlisten] WiredTiger (-23914) [1461185842:786997][19764:140725103342688], txn-recover: journal/WiredTigerLog.0000000001 read error: failed to read 511102156800 bytes at offset 2105728: The quorum disk could not be located by the cluster service.\n2016-04-20T16:57:22.797-0400 E STORAGE  [initandlisten] WiredTiger (-23914) [1461185842:797033][19764:140725103342688], txn-recover: Recovery failed: The quorum disk could not be located by the cluster service.\n2016-04-20T16:57:22.802-0400 E STORAGE  [initandlisten] WiredTiger (-23914) [1461185842:802036][19764:140725103342688], file:WiredTiger.wt, connection: WiredTiger.wt read error: failed to read 511101112320 bytes at offset 16384: The quorum disk could not be located by the cluster service.\n2016-04-20T16:57:22.807-0400 E STORAGE  [initandlisten] WiredTiger (-23914) [1461185842:807537][19764:140725103342688], file:WiredTiger.wt, connection: Final close of file:WiredTiger.wt failed: The quorum disk could not be located by the cluster service.\n```\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 20, 2016 at 21:25 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 23:15 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 23:15 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 23:15 GMT"
    },
    {
        "key": "WT-2568",
        "number": 2674,
        "state": "closed",
        "title": "WT-2568 Add a backward compatible constructor for PackInputStream.",
        "body": "This fixes java's PackTest (and potentially other code) that may have been affected by changing a constructor in WT-2550.\n\nAside: Apparently our pull request tester doesn't build java, and I didn't see it because I didn't rebuild from scratch when testing.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 20, 2016 at 19:04 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 23:18 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 23:18 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 23:18 GMT"
    },
    {
        "key": "WT-2567",
        "number": 2673,
        "state": "closed",
        "title": "WT-2567 Check if logging is enabled for truncate.",
        "body": "@keithbostic Please review this change.  I was able to repro the original segfault on my AWS box.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 20, 2016 at 17:12 GMT",
        "updated_at": "Thursday Apr 21, 2016 at 00:35 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 23:53 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 23:53 GMT"
    },
    {
        "key": "WT-2565",
        "number": 2672,
        "state": "closed",
        "title": "WT-2565: limit the amount of data passed to raw compression",
        "body": "See #2669 for discussion, this is an alternate approach to that branch.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 20, 2016 at 13:27 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 23:15 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 23:15 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 23:15 GMT"
    },
    {
        "key": "WT-2552",
        "number": 2671,
        "state": "closed",
        "title": "WT-2552 Add public API for pluggable filesystems",
        "body": "The main parts of this change should be here, but it involved extensive parameter re-organization. There are also a number of layering violations between our existing file system implementations and the WT_FH, that aren't possible with the new structure.\n\nThere are a number of specific todo comments in the code. One of the main issues is that the in-memory file system had a special close semantic that relied on WiredTiger handle tracking. The in-memory file-system should do it's own tracking of file handles, I've gone part way down that road by adding a queue for closed handles. Need to also add in live handles, and manage the queue as appropriate.\n\nI haven't created an example application that uses the new API yet.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 20, 2016 at 09:21 GMT",
        "updated_at": "Thursday Apr 28, 2016 at 11:16 GMT",
        "closed_at": "Thursday Apr 28, 2016 at 11:16 GMT",
        "merged_at": "Thursday Apr 28, 2016 at 11:16 GMT"
    },
    {
        "key": "WT-2566",
        "number": 2670,
        "state": "closed",
        "title": "WT-2566 Lock/unlock operations should imply memory barriers.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 20, 2016 at 06:49 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 07:02 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 07:02 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 07:02 GMT"
    },
    {
        "key": "WT-2565",
        "number": 2669,
        "state": "closed",
        "title": "WT-2565: item 3573 on page at [write-check] is a corrupted cell",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 19, 2016 at 20:50 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 23:16 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 23:16 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2557",
        "number": 2668,
        "state": "closed",
        "title": "WT-2557 Need to truncate logs before closing backup cursor.",
        "body": "@keithbostic Please review this change for the incremental log truncating log files.  The truncate/archive needs to be done before closing the backup cursor.  I should have caught this when I reviewed it yesterday.  It is the cause of the heap-use-after-free sanitizer failure.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 19, 2016 at 15:16 GMT",
        "updated_at": "Tuesday Apr 19, 2016 at 15:44 GMT",
        "closed_at": "Tuesday Apr 19, 2016 at 15:44 GMT",
        "merged_at": "Tuesday Apr 19, 2016 at 15:44 GMT"
    },
    {
        "key": "WT-2550",
        "number": 2667,
        "state": "closed",
        "title": "WT-2550 Support raw mode cursors in java",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 19, 2016 at 14:57 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 07:25 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 07:25 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 07:25 GMT"
    },
    {
        "key": "WT-2562",
        "number": 2666,
        "state": "closed",
        "title": "WT-2562 Add sleep loop to adapt for slow machines like PPC.",
        "body": "@agorrod Please review this change for the reconfig02 failures. \n",
        "base_ref": "develop",
        "created_at": "Monday Apr 18, 2016 at 19:23 GMT",
        "updated_at": "Tuesday Apr 19, 2016 at 05:22 GMT",
        "closed_at": "Tuesday Apr 19, 2016 at 05:22 GMT",
        "merged_at": "Tuesday Apr 19, 2016 at 05:22 GMT"
    },
    {
        "key": "WT-2504",
        "number": 2665,
        "state": "closed",
        "title": "WT-2504 Remove READONLY conditional for base config.",
        "body": "It was a remnant from early development.\n\n@keithbostic Can you review this small change?\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 18, 2016 at 18:28 GMT",
        "updated_at": "Monday Apr 18, 2016 at 18:55 GMT",
        "closed_at": "Monday Apr 18, 2016 at 18:55 GMT",
        "merged_at": "Monday Apr 18, 2016 at 18:55 GMT"
    },
    {
        "key": "WT-2559",
        "number": 2664,
        "state": "closed",
        "title": "WT-2559 Open a local log file handle for sync.",
        "body": "The one in the log structure may change and point to a different log\nfile than the one we expect.  Open our own to the correct file.\n\n@keithbostic Please review this change.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 18, 2016 at 17:35 GMT",
        "updated_at": "Monday Apr 18, 2016 at 18:53 GMT",
        "closed_at": "Monday Apr 18, 2016 at 18:53 GMT",
        "merged_at": "Monday Apr 18, 2016 at 18:53 GMT"
    },
    {
        "key": "WT-2549",
        "number": 2662,
        "state": "closed",
        "title": "WT-2549 Fix for recno keys in cursor joins",
        "body": "In a join cursor, a key that passes the conditions is in 'raw' format, and when the join cursor is not raw, it must be converted to 64bit in the recno case.\n\nThis occurs only for non-raw join cursors, which is why it wasn't detected by the test suite (Python is always in raw mode).  The case that fails is ex_schema, which does not produce any keys from the join when it fails.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 18, 2016 at 14:44 GMT",
        "updated_at": "Tuesday Apr 19, 2016 at 04:57 GMT",
        "closed_at": "Tuesday Apr 19, 2016 at 04:57 GMT",
        "merged_at": "Tuesday Apr 19, 2016 at 04:57 GMT"
    },
    {
        "key": "WT-2548",
        "number": 2661,
        "state": "closed",
        "title": "WT-2548 Cap the amount of data handed to raw compression.",
        "body": "Previously, we had special case code for zlib to bound the compression\nratio to an arbitrary factor.  This is driven by synthetic workloads\nwhere data can be compressed on disk to 1% or less of the in-memory\nsize.  If WiredTiger allows such on-disk pages to grow, they can end up\nlarger than the maximum page size permitted in memory and either\nimmediately force eviction or in extreme cases grow larger than the\ntotal cache size.\n\nThis change bounds the amount of data handed to raw compression based on\nthe maximum page size in memory before attempting in-memory splits.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 18, 2016 at 06:21 GMT",
        "updated_at": "Tuesday Apr 19, 2016 at 05:05 GMT",
        "closed_at": "Tuesday Apr 19, 2016 at 05:04 GMT",
        "merged_at": "Tuesday Apr 19, 2016 at 05:04 GMT"
    },
    {
        "key": "WT-2560",
        "number": 2660,
        "state": "closed",
        "title": "WT-2560 Use a rwlock to protect transaction state, don't spin.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 18, 2016 at 03:29 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 23:25 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 23:25 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 23:25 GMT"
    },
    {
        "key": "WT-2558",
        "number": 2659,
        "state": "closed",
        "title": "WT-2558 WT_PAGE structure reorganization",
        "body": "@agorrod, @michaelcahill, for your consideration, I thought it likely reducing the size of the `WT_PAGE` structure to 64B could help our malloc fragmentation. (The `WT_PAGE_MODIFY` structure remains at 104B.)\n\nThis one needs relatively careful review -- I'm happy to do that myself, this week, if you want the change.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 17, 2016 at 20:24 GMT",
        "updated_at": "Thursday Apr 21, 2016 at 01:22 GMT",
        "closed_at": "Thursday Apr 21, 2016 at 01:22 GMT",
        "merged_at": "Thursday Apr 21, 2016 at 01:22 GMT"
    },
    {
        "key": "WT-2557",
        "number": 2658,
        "state": "closed",
        "title": "WT-2557:  format test program should discard log files after incremental backup",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Apr 16, 2016 at 12:34 GMT",
        "updated_at": "Monday Apr 18, 2016 at 16:36 GMT",
        "closed_at": "Monday Apr 18, 2016 at 16:36 GMT",
        "merged_at": "Monday Apr 18, 2016 at 16:36 GMT"
    },
    {
        "key": "WT-2556",
        "number": 2657,
        "state": "closed",
        "title": "WT-2556: typo in the Java example code",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Apr 16, 2016 at 12:21 GMT",
        "updated_at": "Saturday Apr 16, 2016 at 15:19 GMT",
        "closed_at": "Saturday Apr 16, 2016 at 15:19 GMT",
        "merged_at": "Saturday Apr 16, 2016 at 15:19 GMT"
    },
    {
        "key": "WT-2223",
        "number": 2656,
        "state": "closed",
        "title": "WT-2223 WT-2553 in_memory documentation and stress testing",
        "body": "WT-2223: in-memory stress testing, WT-2553: document in-memory configuration\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 15, 2016 at 18:52 GMT",
        "updated_at": "Wednesday Apr 20, 2016 at 23:48 GMT",
        "closed_at": "Wednesday Apr 20, 2016 at 23:48 GMT",
        "merged_at": "Wednesday Apr 20, 2016 at 23:48 GMT"
    },
    {
        "key": "WT-2554",
        "number": 2655,
        "state": "closed",
        "title": "WT-2554 Add initial C test framework.",
        "body": "With a few sample applications. Need to do further work to cleanup\nthe same applications and share as much code/style as possible.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 15, 2016 at 06:30 GMT",
        "updated_at": "Monday May 23, 2016 at 17:14 GMT",
        "closed_at": "Monday May 23, 2016 at 17:13 GMT",
        "merged_at": "Monday May 23, 2016 at 17:13 GMT"
    },
    {
        "key": "WT-2360",
        "number": 2654,
        "state": "closed",
        "title": "WT-2360 Add nesting and disjunctions to cursor joins",
        "body": "Added support for nesting and disjunctions, with associated doc and tests.  Added a modest amount of internal documentation in cursor.h .  When reviewing, start there to get the big picture.\n\nAfter merging, I'd propose modifying function names with __entry_iter__  ==> __iter__, and reordering functions in cur_join.c .  The changes were extensive enough without doing that kind of housekeeping.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 14, 2016 at 20:40 GMT",
        "updated_at": "Thursday Apr 21, 2016 at 01:32 GMT",
        "closed_at": "Thursday Apr 21, 2016 at 01:32 GMT",
        "merged_at": "Thursday Apr 21, 2016 at 01:32 GMT"
    },
    {
        "key": "WT-2103",
        "number": 2653,
        "state": "closed",
        "title": "WT-2103: add incremental backup testing to format",
        "body": "General work on backup testing in format, and specifically to add support for incremental backups.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 14, 2016 at 16:33 GMT",
        "updated_at": "Friday Apr 15, 2016 at 20:25 GMT",
        "closed_at": "Friday Apr 15, 2016 at 20:25 GMT",
        "merged_at": "Friday Apr 15, 2016 at 20:25 GMT"
    },
    {
        "key": "WT-2547",
        "number": 2652,
        "state": "closed",
        "title": "WT-2547 Add eviction configs for 1 thread.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 13, 2016 at 19:32 GMT",
        "updated_at": "Wednesday Apr 13, 2016 at 19:43 GMT",
        "closed_at": "Wednesday Apr 13, 2016 at 19:43 GMT",
        "merged_at": "Wednesday Apr 13, 2016 at 19:43 GMT"
    },
    {
        "key": "WT-2664",
        "number": 2651,
        "state": "closed",
        "title": "WT-2664 Add ability for eviction workers to populate eviction queues.",
        "body": "See initial discussion in #2635.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 13, 2016 at 04:54 GMT",
        "updated_at": "Friday Jun 03, 2016 at 19:38 GMT",
        "closed_at": "Friday Jun 03, 2016 at 19:38 GMT",
        "merged_at": "Friday Jun 03, 2016 at 19:38 GMT"
    },
    {
        "key": "WT-2546",
        "number": 2650,
        "state": "closed",
        "title": "WT-2546 Evict server decides whether or not to evict",
        "body": "See initial discussion in #2648.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 13, 2016 at 04:51 GMT",
        "updated_at": "Friday Apr 15, 2016 at 05:31 GMT",
        "closed_at": "Friday Apr 15, 2016 at 05:31 GMT",
        "merged_at": "Friday Apr 15, 2016 at 05:31 GMT"
    },
    {
        "key": "ER-23622",
        "number": 2649,
        "state": "closed",
        "title": "SERVER-23622 Allow eviction to consider pages from files being checkpointed",
        "body": "Otherwise eviction will never queue clean pages from files while they\nare being checkpointed. This causes problems in some MongoDB workloads.\nIn particular workloads where the oplog is generating most of the\nwork in a checkpoint, and is the major source of read pressure\n(i.e: clean pages) in the cache.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 13, 2016 at 01:58 GMT",
        "updated_at": "Tuesday Apr 19, 2016 at 05:05 GMT",
        "closed_at": "Tuesday Apr 19, 2016 at 05:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2453",
        "number": 2648,
        "state": "closed",
        "title": "WT-2453 Evict server decides whether or not to evict.",
        "body": "@sueloverso: take a look at this change. The evict server probabilistically decides whether or not to evict based on the evict queue empty / not empty statistics. This gives me up to 40% performance improvements relative to wt-2453 in my tests. I have not yet had a chance to investigate whether we can do any better: wanted to run this by you first. Do you see any performance regressions from this change in your tests? \n",
        "base_ref": "wt-2453",
        "created_at": "Tuesday Apr 12, 2016 at 21:53 GMT",
        "updated_at": "Wednesday Apr 13, 2016 at 04:54 GMT",
        "closed_at": "Wednesday Apr 13, 2016 at 04:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2542",
        "number": 2647,
        "state": "closed",
        "title": "WT-2542: fixed-length column store reconciliation overwrites original values",
        "body": "@agorrod, @michaelcahill, this is the one I've been chasing in WT-2535.\n\nThe problem is fixed-length column-store  reconciliation was updating the original page any time a transaction was globally visible, and that gets snapshot isolation wrong because earlier readers in the system subsequently see the wrong value.\n\nThe only interesting commit is 93059b7, ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 12, 2016 at 13:50 GMT",
        "updated_at": "Wednesday Apr 13, 2016 at 10:47 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 23:39 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 23:39 GMT"
    },
    {
        "key": "WT-2539",
        "number": 2646,
        "state": "closed",
        "title": "WT-2539 Make streams a separate handle type from files.",
        "body": "Initial commit, doesn't yet handle buffering.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 12, 2016 at 12:10 GMT",
        "updated_at": "Tuesday Apr 19, 2016 at 19:21 GMT",
        "closed_at": "Tuesday Apr 19, 2016 at 19:21 GMT",
        "merged_at": "Tuesday Apr 19, 2016 at 19:21 GMT"
    },
    {
        "key": "WT-2537",
        "number": 2645,
        "state": "closed",
        "title": "WT-2537 Check for an old and new uninitialized LSN for recovery.",
        "body": "@michaelcahill Please review this change for the reported bug when running recovery with a database that contained an old INIT_LSN in the metadata.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 11, 2016 at 20:09 GMT",
        "updated_at": "Tuesday Apr 12, 2016 at 05:56 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 02:35 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 02:35 GMT"
    },
    {
        "key": "ro-",
        "number": 2644,
        "state": "closed",
        "title": "A fix to a zero-division crash",
        "body": "",
        "base_ref": "wt-2453",
        "created_at": "Monday Apr 11, 2016 at 19:20 GMT",
        "updated_at": "Monday Apr 11, 2016 at 19:44 GMT",
        "closed_at": "Monday Apr 11, 2016 at 19:44 GMT",
        "merged_at": "Monday Apr 11, 2016 at 19:44 GMT"
    },
    {
        "key": "WT-2157",
        "number": 2643,
        "state": "closed",
        "title": "Merge pull request #2243 from wiredtiger/WT-2157",
        "body": "WT-2157 If we give up trying to split a page, make sure it is written by the next checkpoint\n(cherry picked from commit bf1d359892b6ea0717e6b0465bfb59e0ecb5c4aa)\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Apr 11, 2016 at 06:34 GMT",
        "updated_at": "Tuesday Apr 12, 2016 at 03:22 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 03:22 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 03:22 GMT"
    },
    {
        "key": "wt-2361",
        "number": 2642,
        "state": "closed",
        "title": "Merge pull request #2478 from wiredtiger/wt-2361",
        "body": "WT-2361: column-store starting record number error\n(cherry picked from commit 27763ba51a9f4dc8cc35e22e3a481219fa2d2d0b)\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Apr 11, 2016 at 06:02 GMT",
        "updated_at": "Tuesday Apr 12, 2016 at 03:21 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 03:21 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 03:21 GMT"
    },
    {
        "key": "er-22831",
        "number": 2641,
        "state": "closed",
        "title": "Merge pull request #2532 from wiredtiger/server-22831",
        "body": "SERVER-22831 Queue more leaf pages than internal pages for eviction.\n(cherry picked from commit 799ca57b6c597c864f12609fdedc4b3de7ebdec9)\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Apr 11, 2016 at 05:20 GMT",
        "updated_at": "Monday Apr 11, 2016 at 06:07 GMT",
        "closed_at": "Monday Apr 11, 2016 at 06:07 GMT",
        "merged_at": "Monday Apr 11, 2016 at 06:07 GMT"
    },
    {
        "key": "WT-2535",
        "number": 2640,
        "state": "closed",
        "title": "WT-2535: Extend test/format to test for transactions reading their writes",
        "body": "Change test format to verify snapshot isolation operations when terminating the transaction.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 10, 2016 at 19:35 GMT",
        "updated_at": "Tuesday Apr 12, 2016 at 23:43 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 23:43 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 23:43 GMT"
    },
    {
        "key": "WT-2540",
        "number": 2639,
        "state": "closed",
        "title": "WT-2540: Separate stream and file handle methods",
        "body": "@agorrod, @michaelcahill, for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 08, 2016 at 17:09 GMT",
        "updated_at": "Tuesday Apr 12, 2016 at 06:45 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 06:43 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 06:43 GMT"
    },
    {
        "key": "ER-23588",
        "number": 2638,
        "state": "closed",
        "title": "SERVER-23588 Stop using _open_osfhandle on Windows.",
        "body": "It introduced some odd failures on debug MongoDB builds. Switch to using fopen instead.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 08, 2016 at 02:53 GMT",
        "updated_at": "Friday Apr 08, 2016 at 05:02 GMT",
        "closed_at": "Friday Apr 08, 2016 at 05:02 GMT",
        "merged_at": "Friday Apr 08, 2016 at 05:02 GMT"
    },
    {
        "key": "WT-2534",
        "number": 2637,
        "state": "closed",
        "title": "WT-2534 Use atomic add when allocating transaction IDs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 07, 2016 at 04:08 GMT",
        "updated_at": "Thursday Apr 07, 2016 at 05:26 GMT",
        "closed_at": "Thursday Apr 07, 2016 at 05:26 GMT",
        "merged_at": "Thursday Apr 07, 2016 at 05:26 GMT"
    },
    {
        "key": "WT-2505",
        "number": 2636,
        "state": "closed",
        "title": "WT-2505: Review clang analyzer warnings",
        "body": "@agorrod, for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 07, 2016 at 00:10 GMT",
        "updated_at": "Monday Apr 11, 2016 at 04:59 GMT",
        "closed_at": "Monday Apr 11, 2016 at 04:59 GMT",
        "merged_at": "Monday Apr 11, 2016 at 04:59 GMT"
    },
    {
        "key": "WT-2453",
        "number": 2635,
        "state": "closed",
        "title": "WT-2453 Add ability for eviction workers to populate eviction queues.",
        "body": "Not for review/merge.  Just making a PR for easy viewing of the changes.  When I ran this with the workload it was half the performance of the wt-2453 branch.  I'm planning to profile to see where the time is spent.\n",
        "base_ref": "wt-2453",
        "created_at": "Tuesday Apr 05, 2016 at 23:17 GMT",
        "updated_at": "Wednesday Apr 13, 2016 at 04:55 GMT",
        "closed_at": "Wednesday Apr 13, 2016 at 04:24 GMT",
        "merged_at": null
    },
    {
        "key": "wt-2451",
        "number": 2634,
        "state": "closed",
        "title": "Merge pull request #2556 from wiredtiger/wt-2451",
        "body": "(cherry picked from commit c4f9f62)\n\nWT-2451 Allow eviction of WiredTiger metadata.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Tuesday Apr 05, 2016 at 07:03 GMT",
        "updated_at": "Thursday Apr 07, 2016 at 05:29 GMT",
        "closed_at": "Thursday Apr 07, 2016 at 05:29 GMT",
        "merged_at": "Thursday Apr 07, 2016 at 05:29 GMT"
    },
    {
        "key": "WT-2533",
        "number": 2633,
        "state": "closed",
        "title": "WT-2533 Don't let in-memory tables return a zero size.",
        "body": "Returning a zero size breaks MongoDB replication. Return a non-zero\nsize for now until SERVER-23526 is resolved.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 05, 2016 at 01:12 GMT",
        "updated_at": "Tuesday Apr 05, 2016 at 03:28 GMT",
        "closed_at": "Tuesday Apr 05, 2016 at 02:54 GMT",
        "merged_at": "Tuesday Apr 05, 2016 at 02:54 GMT"
    },
    {
        "key": "WT-2526",
        "number": 2632,
        "state": "closed",
        "title": "WT-2526: mixing and matching readonly and read/write handles",
        "body": "@agorrod, here are the changes to default to opening file handles read/write (unless the database is configured readonly).\n\nFor your review.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 04, 2016 at 20:53 GMT",
        "updated_at": "Tuesday Apr 12, 2016 at 01:33 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 01:33 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 01:33 GMT"
    },
    {
        "key": "ER-23504",
        "number": 2631,
        "state": "closed",
        "title": "SERVER-23504: Coverity analysis defect 98177: Resource leak",
        "body": "Don't leak the variable value if the call to __wt_fprintf fails.\n\n@agorrod, for your review.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 04, 2016 at 20:31 GMT",
        "updated_at": "Monday Apr 04, 2016 at 23:20 GMT",
        "closed_at": "Monday Apr 04, 2016 at 23:20 GMT",
        "merged_at": "Monday Apr 04, 2016 at 23:20 GMT"
    },
    {
        "key": "WT-2532",
        "number": 2630,
        "state": "closed",
        "title": "WT-2532: WT_STREAM_APPEND and WT_STREAM_LINE_BUFFER flag overlap.",
        "body": "@agorrod, for your review.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 04, 2016 at 15:04 GMT",
        "updated_at": "Monday Apr 04, 2016 at 22:58 GMT",
        "closed_at": "Monday Apr 04, 2016 at 22:58 GMT",
        "merged_at": "Monday Apr 04, 2016 at 22:58 GMT"
    },
    {
        "key": "WT-2531",
        "number": 2629,
        "state": "closed",
        "title": "WT-2531: in-memory tables are wasting space in truncation",
        "body": "@agorrod, for your review.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 04, 2016 at 14:18 GMT",
        "updated_at": "Tuesday Apr 05, 2016 at 01:01 GMT",
        "closed_at": "Tuesday Apr 05, 2016 at 01:01 GMT",
        "merged_at": "Tuesday Apr 05, 2016 at 01:01 GMT"
    },
    {
        "key": "WT-2529",
        "number": 2628,
        "state": "closed",
        "title": "WT-2529 Be less aggressive asserting in readonly connections",
        "body": "Since assertions call fsync on the standard I/O channel regardless of whether the connection is open read only.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 04, 2016 at 01:59 GMT",
        "updated_at": "Monday Apr 04, 2016 at 03:29 GMT",
        "closed_at": "Monday Apr 04, 2016 at 03:29 GMT",
        "merged_at": "Monday Apr 04, 2016 at 03:29 GMT"
    },
    {
        "key": "WT-2450",
        "number": 2627,
        "state": "closed",
        "title": "WT-2450: salvage releases pages, then explicitly evicts them.",
        "body": "@agorrod, ready for review.\n",
        "base_ref": "develop",
        "created_at": "Saturday Apr 02, 2016 at 17:18 GMT",
        "updated_at": "Monday Apr 11, 2016 at 04:12 GMT",
        "closed_at": "Monday Apr 11, 2016 at 04:12 GMT",
        "merged_at": "Monday Apr 11, 2016 at 04:12 GMT"
    },
    {
        "key": "WT-2528",
        "number": 2626,
        "state": "closed",
        "title": "WT-2528: style error in WiredTiger build",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 01, 2016 at 21:10 GMT",
        "updated_at": "Friday Apr 01, 2016 at 21:36 GMT",
        "closed_at": "Friday Apr 01, 2016 at 21:36 GMT",
        "merged_at": "Friday Apr 01, 2016 at 21:36 GMT"
    },
    {
        "key": "WT-2527",
        "number": 2625,
        "state": "closed",
        "title": "WT-2527: OS X compile error, missing POSIX_FADV_WILLNEED #define",
        "body": "Not having this check was causing a compilation on OS X to fail. \n",
        "base_ref": "develop",
        "created_at": "Friday Apr 01, 2016 at 19:58 GMT",
        "updated_at": "Friday Apr 01, 2016 at 20:51 GMT",
        "closed_at": "Friday Apr 01, 2016 at 20:51 GMT",
        "merged_at": "Friday Apr 01, 2016 at 20:51 GMT"
    },
    {
        "key": "WT-2526",
        "number": 2624,
        "state": "closed",
        "title": "WT-2526: mixing and matching readonly and read/write handles",
        "body": "Diagnostic code to detect mixing and matching readonly and read/write handles, currently fails the test suite.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 01, 2016 at 19:39 GMT",
        "updated_at": "Monday Apr 04, 2016 at 14:53 GMT",
        "closed_at": "Monday Apr 04, 2016 at 14:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2518",
        "number": 2623,
        "state": "closed",
        "title": "WT-2518: LSM checkpoint handle acquisition optimization",
        "body": "@michaelcahill, for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 01, 2016 at 17:51 GMT",
        "updated_at": "Monday Apr 11, 2016 at 04:15 GMT",
        "closed_at": "Monday Apr 11, 2016 at 04:14 GMT",
        "merged_at": "Monday Apr 11, 2016 at 04:14 GMT"
    },
    {
        "key": "WT-2520",
        "number": 2622,
        "state": "closed",
        "title": "WT-2520: WT_SESSION::verify should not alter tables",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 01, 2016 at 15:41 GMT",
        "updated_at": "Tuesday Apr 12, 2016 at 05:58 GMT",
        "closed_at": "Tuesday Apr 12, 2016 at 05:58 GMT",
        "merged_at": "Tuesday Apr 12, 2016 at 05:58 GMT"
    },
    {
        "key": "WT-2525",
        "number": 2621,
        "state": "closed",
        "title": "WT-2525: in-memory configurations: miscellaneous cleanups",
        "body": "@sueloverso, @agorrod: for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 01, 2016 at 12:51 GMT",
        "updated_at": "Friday Apr 01, 2016 at 20:22 GMT",
        "closed_at": "Friday Apr 01, 2016 at 20:22 GMT",
        "merged_at": "Friday Apr 01, 2016 at 20:22 GMT"
    },
    {
        "key": "WT-2330",
        "number": 2620,
        "state": "closed",
        "title": "WT-2330 Fix GCC 4.7 compiler warnings.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 01, 2016 at 05:54 GMT",
        "updated_at": "Friday Apr 01, 2016 at 07:24 GMT",
        "closed_at": "Friday Apr 01, 2016 at 07:23 GMT",
        "merged_at": "Friday Apr 01, 2016 at 07:23 GMT"
    },
    {
        "key": null,
        "number": 2619,
        "state": "closed",
        "title": "Update Evergreen build file to support correct OS X target.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 31, 2016 at 23:12 GMT",
        "updated_at": "Thursday Mar 31, 2016 at 23:35 GMT",
        "closed_at": "Thursday Mar 31, 2016 at 23:35 GMT",
        "merged_at": "Thursday Mar 31, 2016 at 23:35 GMT"
    },
    {
        "key": null,
        "number": 2618,
        "state": "closed",
        "title": "Evergreen: Upgrade OS X builders to OS X 10.10",
        "body": "",
        "base_ref": "master",
        "created_at": "Thursday Mar 31, 2016 at 17:50 GMT",
        "updated_at": "Thursday Mar 31, 2016 at 22:56 GMT",
        "closed_at": "Thursday Mar 31, 2016 at 22:56 GMT",
        "merged_at": "Thursday Mar 31, 2016 at 22:56 GMT"
    },
    {
        "key": "WT-2513",
        "number": 2617,
        "state": "closed",
        "title": "WT-2513  Fix conversion warning.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 31, 2016 at 16:17 GMT",
        "updated_at": "Thursday Mar 31, 2016 at 16:35 GMT",
        "closed_at": "Thursday Mar 31, 2016 at 16:35 GMT",
        "merged_at": "Thursday Mar 31, 2016 at 16:35 GMT"
    },
    {
        "key": "WT-2522",
        "number": 2616,
        "state": "closed",
        "title": "WT-2522: Incorrect format code in message",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "wt-2330",
        "created_at": "Thursday Mar 31, 2016 at 15:16 GMT",
        "updated_at": "Thursday Mar 31, 2016 at 23:00 GMT",
        "closed_at": "Thursday Mar 31, 2016 at 23:00 GMT",
        "merged_at": "Thursday Mar 31, 2016 at 23:00 GMT"
    },
    {
        "key": "WT-2512",
        "number": 2615,
        "state": "closed",
        "title": "WT-2512 - Change how wtperf throttle values per thread are calculated",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 30, 2016 at 04:30 GMT",
        "updated_at": "Thursday Mar 31, 2016 at 05:35 GMT",
        "closed_at": "Thursday Mar 31, 2016 at 05:35 GMT",
        "merged_at": "Thursday Mar 31, 2016 at 05:35 GMT"
    },
    {
        "key": "WT-2517",
        "number": 2614,
        "state": "closed",
        "title": "WT-2517: wtperf uses setvbuf in a way that isn't supported on Windows",
        "body": "@agorrod, @sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 29, 2016 at 12:02 GMT",
        "updated_at": "Tuesday Mar 29, 2016 at 12:19 GMT",
        "closed_at": "Tuesday Mar 29, 2016 at 12:19 GMT",
        "merged_at": "Tuesday Mar 29, 2016 at 12:19 GMT"
    },
    {
        "key": "WT-2453",
        "number": 2613,
        "state": "closed",
        "title": "WT-2453 Add multiple eviction queues.",
        "body": "Not yet ready for merge.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 28, 2016 at 15:40 GMT",
        "updated_at": "Wednesday Apr 13, 2016 at 04:24 GMT",
        "closed_at": "Wednesday Apr 13, 2016 at 01:27 GMT",
        "merged_at": "Wednesday Apr 13, 2016 at 01:27 GMT"
    },
    {
        "key": "WT-2330",
        "number": 2612,
        "state": "closed",
        "title": "WT-2330: in-memory configurations should not create on-disk collection files",
        "body": "@sueloverso, for your review/consideration.\n\nI was reviewing OS-specific code in the library, and noticed the wt backup code had some Windows specific code to flush the copied file to disk. However, I don't think that's sufficient, on Linux, at least, we have to flush the enclosing directory to disk as well.\n\nI think the simplest solution is to create a WiredTiger function to do the copy safely, WiredTiger already knows how to do the magic.\n",
        "base_ref": "wt-2330",
        "created_at": "Sunday Mar 27, 2016 at 16:53 GMT",
        "updated_at": "Monday Mar 28, 2016 at 14:15 GMT",
        "closed_at": "Monday Mar 28, 2016 at 14:15 GMT",
        "merged_at": "Monday Mar 28, 2016 at 14:15 GMT"
    },
    {
        "key": null,
        "number": 2611,
        "state": "closed",
        "title": "2.8.0 release",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 23, 2016 at 05:13 GMT",
        "updated_at": "Thursday Mar 24, 2016 at 03:59 GMT",
        "closed_at": "Thursday Mar 24, 2016 at 03:59 GMT",
        "merged_at": "Thursday Mar 24, 2016 at 03:59 GMT"
    },
    {
        "key": "WT-2508",
        "number": 2610,
        "state": "closed",
        "title": "WT-2508: test programs should remove test directories on the \"clean\" target",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 22, 2016 at 20:15 GMT",
        "updated_at": "Monday Apr 11, 2016 at 04:11 GMT",
        "closed_at": "Monday Apr 11, 2016 at 04:11 GMT",
        "merged_at": "Monday Apr 11, 2016 at 04:11 GMT"
    },
    {
        "key": "WT-2503",
        "number": 2609,
        "state": "closed",
        "title": "WT-2503 Rename \"wait\" to avoid shadowing system call.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 22, 2016 at 02:57 GMT",
        "updated_at": "Tuesday Mar 22, 2016 at 03:15 GMT",
        "closed_at": "Tuesday Mar 22, 2016 at 03:15 GMT",
        "merged_at": "Tuesday Mar 22, 2016 at 03:15 GMT"
    },
    {
        "key": "WT-2506",
        "number": 2608,
        "state": "closed",
        "title": "WT-2506 Reorder to fix uninitialized variable warning.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 22, 2016 at 02:55 GMT",
        "updated_at": "Tuesday Mar 22, 2016 at 03:11 GMT",
        "closed_at": "Tuesday Mar 22, 2016 at 03:11 GMT",
        "merged_at": "Tuesday Mar 22, 2016 at 03:11 GMT"
    },
    {
        "key": "WT-2502",
        "number": 2607,
        "state": "closed",
        "title": "WT-2502 Free local allocation.",
        "body": "@michaelcahill Please review.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 21, 2016 at 19:42 GMT",
        "updated_at": "Monday Mar 21, 2016 at 22:29 GMT",
        "closed_at": "Monday Mar 21, 2016 at 22:29 GMT",
        "merged_at": "Monday Mar 21, 2016 at 22:29 GMT"
    },
    {
        "key": "WT-2501",
        "number": 2606,
        "state": "closed",
        "title": "WT-2501 LSM drop can violate access assumptions.",
        "body": "Add a test case demonstrating the problem.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 21, 2016 at 06:25 GMT",
        "updated_at": "Tuesday Mar 22, 2016 at 02:47 GMT",
        "closed_at": "Tuesday Mar 22, 2016 at 02:47 GMT",
        "merged_at": "Tuesday Mar 22, 2016 at 02:47 GMT"
    },
    {
        "key": "WT-2499",
        "number": 2605,
        "state": "closed",
        "title": "WT-2499 Fix a race in LSM between setting and checking WT_LSM_TREE_ACTIVE",
        "body": "Tree close relies on any state change being visible immediately. Found\nby inspection, but could cause the symptom seen in this ticket.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 21, 2016 at 01:40 GMT",
        "updated_at": "Tuesday Mar 22, 2016 at 02:14 GMT",
        "closed_at": "Tuesday Mar 22, 2016 at 02:14 GMT",
        "merged_at": "Tuesday Mar 22, 2016 at 02:14 GMT"
    },
    {
        "key": "WT-2330",
        "number": 2604,
        "state": "closed",
        "title": "WT-2330: in-memory configurations should not create on-disk collection files",
        "body": "@sueloverso, @michaelcahill, for your review/consideration.\n\nThe idea here is to check the initial inputs we have (the wiredtiger_open config string and the WIREDTIGER_CONFIG environment variable), for either read-only or in-memory configurations, before looking at any of the on-disk information.\n\nAlso, there's this code:\n\n```\n        /* Ignore the base_config file if config_base_set is false. */\n        if (config_base_set || F_ISSET(conn, WT_CONN_READONLY))\n                WT_ERR(\n                    __conn_config_file(session, WT_BASECONFIG, false, cfg, i1));\n```\n\nI didn't touch it, but it looks wrong to me -- why are we ignoring the base configuration file if we're configured read-only?\n",
        "base_ref": "wt-2330",
        "created_at": "Saturday Mar 19, 2016 at 16:29 GMT",
        "updated_at": "Monday Mar 21, 2016 at 12:54 GMT",
        "closed_at": "Monday Mar 21, 2016 at 12:54 GMT",
        "merged_at": "Monday Mar 21, 2016 at 12:54 GMT"
    },
    {
        "key": "WT-2330",
        "number": 2603,
        "state": "closed",
        "title": "WT-2330: in-memory configurations should not create on-disk collection files",
        "body": "@agorrod, @markbenvenuto, @sueloverso, @michaelcahill:\n\nHere's first cut at creating a pluggable OS layer, for your review/consideration.\n\nI'm happy to talk about this or respond to review comments, whichever works best. There are a lot of moving parts, and I tried a bunch of different approaches, and this is the one I thought worked best.\n\nSome notes:\n- `WT_VERB_FILEOPS` was left broken. I don't feel strongly about it: I can fix it, remove it entirely, or limit it to tracking open/close calls only, whatever people want.\n- The WiredTiger library no longer uses FILE \\* objects; file descriptor and stream functions now use the same open and close functions, and both are represented by a WT_FH handle. Where the code previously used stdout or stderr, I'm faking it with illegal pointer values. We could create real WT_FH handles for stdout/stderr, but I didn't see a compelling reason, happy to do that if people prefer it.\n- The sync/async versions of `__wt_fsync` have been merged, there's now a boolean flag that set wait/no-wait on a flush.\n- The transaction log's print-log function no longer supports specified output handles, output is always to stdout (which the wt utility redirects into another file on demand). @sueloverso, please flag if this is a problem.\n- @michaelcahill and I talked about giving each `WT_FH` a set of methods (so, for example, `__wt_fprintf(session, fh, ...)` becomes `WT_FH.printf(session, ...)`. I didn't do that in this commit, because it's going to touch everything, I'd rather do it in a separate commit. Let me know if you like/dislike that change.\n\nRemaining tasks:\n- Windows hasn't been touched yet, there's a reasonable chunk of work there.\n- We're still \"writing\" the 4KB description blocks from the block manager in the in-memory case, and I haven't written the code to detect/complain about writing more than trivial amounts when running in-memory.\n- `wiredtiger_open` still isn't checking `WIREDTIGER_CONFIG` for in-memory and readonly options.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 18, 2016 at 18:27 GMT",
        "updated_at": "Friday Apr 01, 2016 at 11:29 GMT",
        "closed_at": "Friday Apr 01, 2016 at 04:50 GMT",
        "merged_at": "Friday Apr 01, 2016 at 04:50 GMT"
    },
    {
        "key": "WT-2496",
        "number": 2602,
        "state": "closed",
        "title": "WT-2496 Fix a race between checkpoint and starting a hot backup.",
        "body": "In particular, a checkpoint could mark and lock an old checkpoint for\ndeletion before a hotbackup starts.  The hotbackup could then write\nmetadata referencing that old backup which the checkpoint goes on to\ndelete.\n\nThe fix is crude: don't allow a hotbackup to start while a checkpoint\nis in progress.\n",
        "base_ref": "wt-2426-checkpoint-locking",
        "created_at": "Friday Mar 18, 2016 at 03:31 GMT",
        "updated_at": "Friday Mar 18, 2016 at 03:54 GMT",
        "closed_at": "Friday Mar 18, 2016 at 03:54 GMT",
        "merged_at": "Friday Mar 18, 2016 at 03:54 GMT"
    },
    {
        "key": "WT-2498",
        "number": 2601,
        "state": "closed",
        "title": "WT-2498 Fix a bug in LSM where table drop could hang.",
        "body": "If there are open cursors.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 18, 2016 at 03:19 GMT",
        "updated_at": "Friday Mar 18, 2016 at 04:45 GMT",
        "closed_at": "Friday Mar 18, 2016 at 04:45 GMT",
        "merged_at": "Friday Mar 18, 2016 at 04:45 GMT"
    },
    {
        "key": "WT-2497",
        "number": 2600,
        "state": "closed",
        "title": "WT-2497 Create second backup copy.",
        "body": "@keithbostic This is for your consideration.  It is only a debugging aid so that if/when a failure happens on a backup directory we have an exact version of the backup directory before WT did anything like removed the `WiredTiger.backup` file, ran recovery, etc.  \n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 17, 2016 at 14:41 GMT",
        "updated_at": "Sunday Mar 20, 2016 at 15:19 GMT",
        "closed_at": "Sunday Mar 20, 2016 at 15:19 GMT",
        "merged_at": "Sunday Mar 20, 2016 at 15:19 GMT"
    },
    {
        "key": "WT-2495",
        "number": 2599,
        "state": "closed",
        "title": "WT-2495 Make malloc calls use tcmalloc when configured.",
        "body": "Otherwise we can free memoy with tcmalloc that was allocated\nwith the system allocator.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 17, 2016 at 04:46 GMT",
        "updated_at": "Thursday Mar 17, 2016 at 05:44 GMT",
        "closed_at": "Thursday Mar 17, 2016 at 05:44 GMT",
        "merged_at": "Thursday Mar 17, 2016 at 05:44 GMT"
    },
    {
        "key": "WT-2426",
        "number": 2598,
        "state": "closed",
        "title": "WT-2426 Lock all handles for checkpoints in one pass.",
        "body": "In particular, gather all locks (including exclusive locks on old\ncheckpoints) under the schema / handle list lock so we never reenter\nthose locks once we have a handle exclusive.\n\nThis extends the duration that we hold exclusive locks on checkpoints\nto include the write leaves phase.  If that turns out to be a problem,\nwe could further split out write leaves into a separate pass (that\nreleases all handles at the end).\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 23:59 GMT",
        "updated_at": "Monday Mar 21, 2016 at 17:41 GMT",
        "closed_at": "Monday Mar 21, 2016 at 17:41 GMT",
        "merged_at": "Monday Mar 21, 2016 at 17:41 GMT"
    },
    {
        "key": "WT-2461",
        "number": 2597,
        "state": "closed",
        "title": "WT-2461 Look explicitly for the final number of expected files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 19:44 GMT",
        "updated_at": "Wednesday Mar 16, 2016 at 20:01 GMT",
        "closed_at": "Wednesday Mar 16, 2016 at 20:01 GMT",
        "merged_at": "Wednesday Mar 16, 2016 at 20:01 GMT"
    },
    {
        "key": "WT-2414",
        "number": 2596,
        "state": "closed",
        "title": "WT-2414 Avoid main table reads and extractions for the first index",
        "body": "When iterating cursor joins, take advantage of the fact that we have the index key for the first index available.  We don't need to extract it again.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 19:12 GMT",
        "updated_at": "Thursday Mar 17, 2016 at 05:36 GMT",
        "closed_at": "Thursday Mar 17, 2016 at 05:36 GMT",
        "merged_at": "Thursday Mar 17, 2016 at 05:36 GMT"
    },
    {
        "key": "WT-2481",
        "number": 2595,
        "state": "closed",
        "title": "WT-2481 Set memory_page_max after we read chunk_max.",
        "body": "@agorrod Please review this fix for correctly setting memory_page_max in LSM.  Note that the performance issue won't be fixed until WT-2485 is fixed.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 17:56 GMT",
        "updated_at": "Wednesday Mar 16, 2016 at 23:20 GMT",
        "closed_at": "Wednesday Mar 16, 2016 at 23:20 GMT",
        "merged_at": "Wednesday Mar 16, 2016 at 23:20 GMT"
    },
    {
        "key": "WT-2494",
        "number": 2594,
        "state": "closed",
        "title": "WT-2494: review calls to __wt_free, plus minor bug in an error path.",
        "body": "@sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 17:13 GMT",
        "updated_at": "Wednesday Mar 16, 2016 at 17:35 GMT",
        "closed_at": "Wednesday Mar 16, 2016 at 17:35 GMT",
        "merged_at": "Wednesday Mar 16, 2016 at 17:35 GMT"
    },
    {
        "key": "WT-2493",
        "number": 2593,
        "state": "closed",
        "title": "WT-2493 Add lsm_manager to verbose settings.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 15:58 GMT",
        "updated_at": "Wednesday Mar 16, 2016 at 23:52 GMT",
        "closed_at": "Wednesday Mar 16, 2016 at 17:11 GMT",
        "merged_at": "Wednesday Mar 16, 2016 at 17:11 GMT"
    },
    {
        "key": "WT-2490",
        "number": 2592,
        "state": "closed",
        "title": "WT-2490: search_near() returns wrong key for column-store",
        "body": "@michaelcahill, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 15:13 GMT",
        "updated_at": "Thursday Mar 17, 2016 at 05:47 GMT",
        "closed_at": "Thursday Mar 17, 2016 at 05:47 GMT",
        "merged_at": "Thursday Mar 17, 2016 at 05:47 GMT"
    },
    {
        "key": "WT-2492",
        "number": 2591,
        "state": "closed",
        "title": "WT-2492 Change printf format specifier to be Windows compatible.",
        "body": "Windows doesn't like \"td\" for ptrdiff_t\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 16, 2016 at 07:28 GMT",
        "updated_at": "Thursday Mar 17, 2016 at 00:00 GMT",
        "closed_at": "Thursday Mar 17, 2016 at 00:00 GMT",
        "merged_at": "Thursday Mar 17, 2016 at 00:00 GMT"
    },
    {
        "key": "WT-2485",
        "number": 2590,
        "state": "closed",
        "title": "WT-2485 Adjust lsm_tree->merge_min when we read the metadata.",
        "body": "@agorrod or @michaelcahill here is one potential fix and an added assertion.  This fix has run over 300 iterations on both CONFIGs.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 15, 2016 at 21:11 GMT",
        "updated_at": "Wednesday Mar 16, 2016 at 23:19 GMT",
        "closed_at": "Wednesday Mar 16, 2016 at 23:18 GMT",
        "merged_at": "Wednesday Mar 16, 2016 at 23:18 GMT"
    },
    {
        "key": "WT-2461",
        "number": 2589,
        "state": "closed",
        "title": "WT-2461 Fix sweep loop to look for progress.  Reduce number of tables.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 15, 2016 at 19:20 GMT",
        "updated_at": "Tuesday Mar 15, 2016 at 19:38 GMT",
        "closed_at": "Tuesday Mar 15, 2016 at 19:38 GMT",
        "merged_at": "Tuesday Mar 15, 2016 at 19:38 GMT"
    },
    {
        "key": "WT-2489",
        "number": 2588,
        "state": "closed",
        "title": "WT-2489 Minor cleanup and string fixes.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 15, 2016 at 13:02 GMT",
        "updated_at": "Tuesday Mar 15, 2016 at 13:20 GMT",
        "closed_at": "Tuesday Mar 15, 2016 at 13:20 GMT",
        "merged_at": "Tuesday Mar 15, 2016 at 13:20 GMT"
    },
    {
        "key": "WT-2457",
        "number": 2587,
        "state": "closed",
        "title": "WT-2457 Wait for LSM work units to drain when getting exclusive access.",
        "body": "Otherwise we can return EBUSY unexpectedly. Fixed several outstanding\nbugs along the way.\n\nThis change isn't ready for review yet - it needs further testing and a round of cleanup.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 15, 2016 at 07:04 GMT",
        "updated_at": "Thursday Mar 17, 2016 at 05:32 GMT",
        "closed_at": "Thursday Mar 17, 2016 at 05:32 GMT",
        "merged_at": "Thursday Mar 17, 2016 at 05:32 GMT"
    },
    {
        "key": "WT-2476",
        "number": 2586,
        "state": "closed",
        "title": "WT-2476 - Revert changing the cache evict_walk_lock to the btree evict_lock",
        "body": "@keithbostic, this is a change i put together when looking into WT-2476.\n\nIf you think moving back towards a cache lock rather than a btree lock is the way to go, then this may be suitable.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 15, 2016 at 05:50 GMT",
        "updated_at": "Wednesday Mar 16, 2016 at 03:18 GMT",
        "closed_at": "Wednesday Mar 16, 2016 at 03:18 GMT",
        "merged_at": "Wednesday Mar 16, 2016 at 03:18 GMT"
    },
    {
        "key": "WT-2487",
        "number": 2585,
        "state": "closed",
        "title": "WT-2487 Release memory at the end of the test to make leak checkers h\u2026",
        "body": "\u2026appy.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 15, 2016 at 04:59 GMT",
        "updated_at": "Tuesday Mar 15, 2016 at 06:40 GMT",
        "closed_at": "Tuesday Mar 15, 2016 at 06:40 GMT",
        "merged_at": "Tuesday Mar 15, 2016 at 06:40 GMT"
    },
    {
        "key": "WT-2483",
        "number": 2584,
        "state": "closed",
        "title": "WT-2483 Skip temp log files when copying WT directory.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 16:59 GMT",
        "updated_at": "Monday Mar 14, 2016 at 17:31 GMT",
        "closed_at": "Monday Mar 14, 2016 at 17:31 GMT",
        "merged_at": "Monday Mar 14, 2016 at 17:31 GMT"
    },
    {
        "key": "WT-2484",
        "number": 2583,
        "state": "closed",
        "title": "WT-2484: Coverity 1345809: unchecked return value",
        "body": "Explicitly discard the sscanf return value, hopefully that will quiet\nCoverity.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 16:56 GMT",
        "updated_at": "Monday Mar 14, 2016 at 19:04 GMT",
        "closed_at": "Monday Mar 14, 2016 at 19:04 GMT",
        "merged_at": "Monday Mar 14, 2016 at 19:04 GMT"
    },
    {
        "key": "WT-2482",
        "number": 2582,
        "state": "closed",
        "title": "WT-2482: Coverity 1353015, 1353016, out-of-bounds access",
        "body": "Coverity thinks we can overflow a buffer -- we can't, but clarify the\ncode to avoid the false positive.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 16:49 GMT",
        "updated_at": "Monday Mar 14, 2016 at 17:04 GMT",
        "closed_at": "Monday Mar 14, 2016 at 17:04 GMT",
        "merged_at": "Monday Mar 14, 2016 at 17:04 GMT"
    },
    {
        "key": "WT-2447",
        "number": 2581,
        "state": "closed",
        "title": "WT-2447 For cursor joins, avoid main table reads during iteration and bloom initialization",
        "body": "This also reduces main table reads from about 24M of pread data size to about 45K using a slightly modified version of the submitted test case.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 15:25 GMT",
        "updated_at": "Tuesday Mar 15, 2016 at 18:32 GMT",
        "closed_at": "Tuesday Mar 15, 2016 at 18:32 GMT",
        "merged_at": "Tuesday Mar 15, 2016 at 18:32 GMT"
    },
    {
        "key": "WT-2463",
        "number": 2580,
        "state": "closed",
        "title": "WT-2463 Change manydbs test to use WT statistics",
        "body": "Fix manydbs.c to use WT statistics instead of system CPU usage for more consistent runs.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 15:13 GMT",
        "updated_at": "Tuesday Mar 15, 2016 at 01:10 GMT",
        "closed_at": "Tuesday Mar 15, 2016 at 01:10 GMT",
        "merged_at": "Tuesday Mar 15, 2016 at 01:10 GMT"
    },
    {
        "key": "WT-2478",
        "number": 2579,
        "state": "closed",
        "title": "WT-2478: Valgrind test failures",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 12:44 GMT",
        "updated_at": "Monday Mar 14, 2016 at 15:11 GMT",
        "closed_at": "Monday Mar 14, 2016 at 15:11 GMT",
        "merged_at": "Monday Mar 14, 2016 at 15:11 GMT"
    },
    {
        "key": "WT-2477",
        "number": 2578,
        "state": "closed",
        "title": "WT-2477 Checks for a 64-bit build without polluting config.h files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 05:47 GMT",
        "updated_at": "Monday Mar 14, 2016 at 06:05 GMT",
        "closed_at": "Monday Mar 14, 2016 at 06:05 GMT",
        "merged_at": "Monday Mar 14, 2016 at 06:05 GMT"
    },
    {
        "key": "WT-2460",
        "number": 2577,
        "state": "closed",
        "title": "WT-2460 Fix a flags test in LAS code to use mask not is-set.",
        "body": "It was attempting to save which flags were set by checking F_ISSET (which returns a boolean). Should have been using WT_MASK.\n\nThis was leading to the WT_SESSION_NO_EVICTION flag being cleared unexpectedly and WT_SESSION_CAN_WAIT being set as well.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 03:37 GMT",
        "updated_at": "Monday Mar 14, 2016 at 04:20 GMT",
        "closed_at": "Monday Mar 14, 2016 at 04:20 GMT",
        "merged_at": "Monday Mar 14, 2016 at 04:20 GMT"
    },
    {
        "key": "WT-2475",
        "number": 2576,
        "state": "closed",
        "title": "WT-2475 Have reconf script remove config.cache.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 14, 2016 at 03:33 GMT",
        "updated_at": "Monday Mar 14, 2016 at 03:49 GMT",
        "closed_at": "Monday Mar 14, 2016 at 03:49 GMT",
        "merged_at": "Monday Mar 14, 2016 at 03:49 GMT"
    },
    {
        "key": "WT-2473",
        "number": 2575,
        "state": "closed",
        "title": "WT-2473 - Add inttypes.h to ex_config_parse",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 13, 2016 at 23:50 GMT",
        "updated_at": "Monday Mar 14, 2016 at 00:34 GMT",
        "closed_at": "Monday Mar 14, 2016 at 00:34 GMT",
        "merged_at": "Monday Mar 14, 2016 at 00:34 GMT"
    },
    {
        "key": "WT-2464",
        "number": 2574,
        "state": "closed",
        "title": "WT-2464: Valgrind errors.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 13, 2016 at 12:41 GMT",
        "updated_at": "Sunday Mar 13, 2016 at 22:33 GMT",
        "closed_at": "Sunday Mar 13, 2016 at 22:33 GMT",
        "merged_at": "Sunday Mar 13, 2016 at 22:33 GMT"
    },
    {
        "key": "WT-2473",
        "number": 2573,
        "state": "closed",
        "title": "Revert \"WT-2473: MSVC doesn't support PRId64\"",
        "body": "This reverts commit 0b2766c1db03e96d5c7bfbb1eae66a9df790e301.\n",
        "base_ref": "develop",
        "created_at": "Saturday Mar 12, 2016 at 00:06 GMT",
        "updated_at": "Saturday Mar 12, 2016 at 00:39 GMT",
        "closed_at": "Saturday Mar 12, 2016 at 00:39 GMT",
        "merged_at": "Saturday Mar 12, 2016 at 00:39 GMT"
    },
    {
        "key": "WT-2473",
        "number": 2572,
        "state": "closed",
        "title": "WT-2473: MSVC doesn't support PRId64",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 23:11 GMT",
        "updated_at": "Friday Mar 11, 2016 at 23:56 GMT",
        "closed_at": "Friday Mar 11, 2016 at 23:56 GMT",
        "merged_at": "Friday Mar 11, 2016 at 23:56 GMT"
    },
    {
        "key": "WT-2471",
        "number": 2571,
        "state": "closed",
        "title": "WT-2471: review WiredTiger \"int\" printf formats",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 21:04 GMT",
        "updated_at": "Friday Mar 11, 2016 at 22:01 GMT",
        "closed_at": "Friday Mar 11, 2016 at 22:01 GMT",
        "merged_at": "Friday Mar 11, 2016 at 22:01 GMT"
    },
    {
        "key": "WT-2470",
        "number": 2570,
        "state": "closed",
        "title": "WT-2470: Coverity 1352898: Resource leak",
        "body": "@sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 17:18 GMT",
        "updated_at": "Monday Mar 14, 2016 at 00:30 GMT",
        "closed_at": "Friday Mar 11, 2016 at 18:49 GMT",
        "merged_at": "Friday Mar 11, 2016 at 18:49 GMT"
    },
    {
        "key": "WT-2469",
        "number": 2569,
        "state": "closed",
        "title": "WT-2469: Coverity 1352897: Integer overflowed argument",
        "body": "@sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 16:06 GMT",
        "updated_at": "Friday Mar 11, 2016 at 18:49 GMT",
        "closed_at": "Friday Mar 11, 2016 at 18:49 GMT",
        "merged_at": "Friday Mar 11, 2016 at 18:49 GMT"
    },
    {
        "key": "WT-2468",
        "number": 2568,
        "state": "closed",
        "title": "WT-2468: Coverity 1352896: Explicit null dereferenced",
        "body": "@sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 15:53 GMT",
        "updated_at": "Friday Mar 11, 2016 at 18:50 GMT",
        "closed_at": "Friday Mar 11, 2016 at 18:50 GMT",
        "merged_at": "Friday Mar 11, 2016 at 18:50 GMT"
    },
    {
        "key": "WT-2467",
        "number": 2567,
        "state": "closed",
        "title": "WT-2467: Coverity 1352894: Logically dead code",
        "body": "Update the mod value to reflect the addition of a new operation.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 15:36 GMT",
        "updated_at": "Friday Mar 11, 2016 at 18:51 GMT",
        "closed_at": "Friday Mar 11, 2016 at 18:51 GMT",
        "merged_at": "Friday Mar 11, 2016 at 18:51 GMT"
    },
    {
        "key": "WT-2466",
        "number": 2566,
        "state": "closed",
        "title": "WT-2466: Coverity 1352893 Buffer not null terminated",
        "body": "@sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 15:12 GMT",
        "updated_at": "Friday Mar 11, 2016 at 18:53 GMT",
        "closed_at": "Friday Mar 11, 2016 at 18:53 GMT",
        "merged_at": "Friday Mar 11, 2016 at 18:53 GMT"
    },
    {
        "key": "WT-2465",
        "number": 2565,
        "state": "closed",
        "title": "WT-2465: Coverity 1352899: Dereference before null check",
        "body": "@daveh86, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 14:47 GMT",
        "updated_at": "Sunday Mar 13, 2016 at 22:34 GMT",
        "closed_at": "Sunday Mar 13, 2016 at 22:34 GMT",
        "merged_at": "Sunday Mar 13, 2016 at 22:34 GMT"
    },
    {
        "key": "ER-23040",
        "number": 2564,
        "state": "closed",
        "title": "SERVER-23040: Coverity analysis defect 98151: Dereference after null check",
        "body": "@sueloverso, for your review/consideration.\n\nThanks!\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 13:55 GMT",
        "updated_at": "Friday Mar 11, 2016 at 19:03 GMT",
        "closed_at": "Friday Mar 11, 2016 at 19:03 GMT",
        "merged_at": "Friday Mar 11, 2016 at 19:03 GMT"
    },
    {
        "key": "WT-2463",
        "number": 2563,
        "state": "closed",
        "title": "WT-2463 Disable manydbs failure mode for now.",
        "body": "It's causing problems with valgrind testing.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 11, 2016 at 03:31 GMT",
        "updated_at": "Friday Mar 11, 2016 at 03:47 GMT",
        "closed_at": "Friday Mar 11, 2016 at 03:47 GMT",
        "merged_at": "Friday Mar 11, 2016 at 03:47 GMT"
    },
    {
        "key": "WT-2461",
        "number": 2562,
        "state": "closed",
        "title": "WT-2461 Adjust sweep timeout values.",
        "body": "@keithbostic Can you please review this minor change to the timeout value `sweep01`?  It was failing on the PPC machine and this fixes it there. \n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 10, 2016 at 18:36 GMT",
        "updated_at": "Thursday Mar 10, 2016 at 19:07 GMT",
        "closed_at": "Thursday Mar 10, 2016 at 19:06 GMT",
        "merged_at": "Thursday Mar 10, 2016 at 19:06 GMT"
    },
    {
        "key": "WT-2459",
        "number": 2561,
        "state": "closed",
        "title": "WT-2459 - Force the CC tag under powerPC",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Mar 10, 2016 at 07:17 GMT",
        "updated_at": "Friday Mar 11, 2016 at 05:41 GMT",
        "closed_at": "Friday Mar 11, 2016 at 05:41 GMT",
        "merged_at": "Friday Mar 11, 2016 at 05:41 GMT"
    },
    {
        "key": "WT-2454",
        "number": 2560,
        "state": "closed",
        "title": "WT-2454: checkpoint_sync=false does not prevent flushes/sync to disk",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 09, 2016 at 13:33 GMT",
        "updated_at": "Wednesday Mar 09, 2016 at 23:58 GMT",
        "closed_at": "Wednesday Mar 09, 2016 at 23:58 GMT",
        "merged_at": "Wednesday Mar 09, 2016 at 23:58 GMT"
    },
    {
        "key": "WT-2456",
        "number": 2559,
        "state": "closed",
        "title": "WT-2456 Update CRC32 Power8 Code",
        "body": "Update CRC32 Power8 after the PR for the non-volatile registers was accepted. The new code is more efficient at saving and restoring registers.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 09, 2016 at 12:14 GMT",
        "updated_at": "Wednesday Mar 09, 2016 at 13:40 GMT",
        "closed_at": "Wednesday Mar 09, 2016 at 13:40 GMT",
        "merged_at": "Wednesday Mar 09, 2016 at 13:40 GMT"
    },
    {
        "key": "WT-2418",
        "number": 2558,
        "state": "closed",
        "title": "WT-2418: test_rebalance failing with EBUSY",
        "body": "Fix a test cut-and-paste error, we're testing WT_SESSION.rebalance here,\nnot WT_SESSION.drop.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 07, 2016 at 17:10 GMT",
        "updated_at": "Wednesday Mar 09, 2016 at 22:42 GMT",
        "closed_at": "Wednesday Mar 09, 2016 at 22:42 GMT",
        "merged_at": "Wednesday Mar 09, 2016 at 22:42 GMT"
    },
    {
        "key": "WT-2451",
        "number": 2556,
        "state": "closed",
        "title": "WT-2451 Allow eviction of WiredTiger metadata.",
        "body": "Switch from making eviction impossible to merely unlikely.  This allows\nmetadata pages to split and for eviction to discard deleted data.\nWithout this change, the trivial test added in test_schema07.py hangs\nbecause the metadata fills the cache.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 07, 2016 at 05:01 GMT",
        "updated_at": "Wednesday Mar 09, 2016 at 23:54 GMT",
        "closed_at": "Wednesday Mar 09, 2016 at 23:54 GMT",
        "merged_at": "Wednesday Mar 09, 2016 at 23:54 GMT"
    },
    {
        "key": "WT-2449",
        "number": 2555,
        "state": "closed",
        "title": "WT-2449 Check for a 64-bit build during configure.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 06, 2016 at 23:58 GMT",
        "updated_at": "Thursday Mar 10, 2016 at 00:49 GMT",
        "closed_at": "Monday Mar 07, 2016 at 00:19 GMT",
        "merged_at": "Monday Mar 07, 2016 at 00:19 GMT"
    },
    {
        "key": "WT-2448",
        "number": 2554,
        "state": "closed",
        "title": "WT-2448 Add no_scale flag into a couple of statistics.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Mar 06, 2016 at 23:05 GMT",
        "updated_at": "Thursday Mar 10, 2016 at 12:58 GMT",
        "closed_at": "Sunday Mar 06, 2016 at 23:45 GMT",
        "merged_at": "Sunday Mar 06, 2016 at 23:45 GMT"
    },
    {
        "key": "WT-2391",
        "number": 2553,
        "state": "closed",
        "title": "WT-2391: De-prioritize eviction from indexes",
        "body": "@agorrod, @michaelcahill: I spent a bunch of time chasing what I thought was the problem in WT-2391, but it turned out to be a red herring. Anyway, along the way I accumulated some changes that I think are a minor improvement over the current page read-generation code.\n\nI cleaned them up and created this branch.\n\nIf you like this better than the current code, great, if you don't, then just discard the branch. As I said, it's a minor set of cleanups at most, and if you don't like them that's fine with me.\n",
        "base_ref": "develop",
        "created_at": "Sunday Mar 06, 2016 at 19:26 GMT",
        "updated_at": "Monday Mar 07, 2016 at 13:56 GMT",
        "closed_at": "Monday Mar 07, 2016 at 13:34 GMT",
        "merged_at": "Monday Mar 07, 2016 at 13:34 GMT"
    },
    {
        "key": "WT-2404",
        "number": 2552,
        "state": "closed",
        "title": "WT-2404 Add streaming pack and unpack APIs to the extension API.",
        "body": "Will allow us to deprecate the incomplete pack/unpack there now.\n\nNot yet ready for review. This is a work in progress. Need to add tests, and figure out what to do with the existing pack/unpack API.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 04, 2016 at 06:50 GMT",
        "updated_at": "Monday Mar 14, 2016 at 03:31 GMT",
        "closed_at": "Monday Mar 14, 2016 at 02:32 GMT",
        "merged_at": "Monday Mar 14, 2016 at 02:32 GMT"
    },
    {
        "key": "PC-",
        "number": 2551,
        "state": "closed",
        "title": "PPC-Testing. Have crc32.S built as a lib with --tag=asm for builders that don't support autodiscover",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Mar 04, 2016 at 06:05 GMT",
        "updated_at": "Friday Mar 11, 2016 at 01:36 GMT",
        "closed_at": "Friday Mar 11, 2016 at 01:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2318",
        "number": 2550,
        "state": "closed",
        "title": "WT-2318 Add implementation for auto adjusting condition variables.",
        "body": "Where the amount of time spent waiting varies depending on whether work is being done between timeouts.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 04, 2016 at 04:45 GMT",
        "updated_at": "Thursday Mar 10, 2016 at 13:52 GMT",
        "closed_at": "Thursday Mar 10, 2016 at 13:52 GMT",
        "merged_at": "Thursday Mar 10, 2016 at 13:52 GMT"
    },
    {
        "key": "WT-2443",
        "number": 2549,
        "state": "closed",
        "title": "WT-2443 Fix how a statistics 'set' is initialized.",
        "body": "This is relevant to getting a complete set of statistics (for every participating index) for a join cursor.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 03, 2016 at 16:29 GMT",
        "updated_at": "Thursday Mar 03, 2016 at 18:10 GMT",
        "closed_at": "Thursday Mar 03, 2016 at 18:10 GMT",
        "merged_at": "Thursday Mar 03, 2016 at 18:10 GMT"
    },
    {
        "key": "WT-2444",
        "number": 2548,
        "state": "closed",
        "title": "WT-2444: broken flag test in wtperf, whitespace",
        "body": "WT-2444: broken flag test in wtperf, whitespace\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 03, 2016 at 13:44 GMT",
        "updated_at": "Thursday Mar 03, 2016 at 13:54 GMT",
        "closed_at": "Thursday Mar 03, 2016 at 13:54 GMT",
        "merged_at": "Thursday Mar 03, 2016 at 13:54 GMT"
    },
    {
        "key": "WT-2381",
        "number": 2547,
        "state": "closed",
        "title": "WT-2381 Rewrite LSM metadata to fix dump / load.",
        "body": "Include all of the WT_SESSION::create config in the ordinary LSM metadata so it is merged correctly into the dump header.  Provide an upgrade path for LSM metadata in the old format.\n\n*\\* Backwards bracking change for LSM: *\\* once metadata is upgraded to the new format, LSM trees cannot be opened with older versions of WiredTiger.\n",
        "base_ref": "wt-2381",
        "created_at": "Thursday Mar 03, 2016 at 05:08 GMT",
        "updated_at": "Thursday Mar 10, 2016 at 03:38 GMT",
        "closed_at": "Thursday Mar 10, 2016 at 03:38 GMT",
        "merged_at": "Thursday Mar 10, 2016 at 03:38 GMT"
    },
    {
        "key": "WT-2322",
        "number": 2546,
        "state": "closed",
        "title": "WT-2322 Do not permit read-uncommitted with bloom filters",
        "body": "Since it might be hard to predict the results of having read-uncommitted with bloom filters, we shouldn't permit it.  This pull request includes a couple of small fixes and a test case for read uncommitted with/without bloom filters.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 02, 2016 at 20:30 GMT",
        "updated_at": "Thursday Mar 03, 2016 at 05:02 GMT",
        "closed_at": "Thursday Mar 03, 2016 at 05:02 GMT",
        "merged_at": "Thursday Mar 03, 2016 at 05:02 GMT"
    },
    {
        "key": "WT-2366",
        "number": 2545,
        "state": "closed",
        "title": "WT-2366 Check for NULL workload pointer.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 02, 2016 at 18:44 GMT",
        "updated_at": "Wednesday Mar 02, 2016 at 19:05 GMT",
        "closed_at": "Wednesday Mar 02, 2016 at 19:05 GMT",
        "merged_at": "Wednesday Mar 02, 2016 at 19:05 GMT"
    },
    {
        "key": "WT-2436",
        "number": 2544,
        "state": "closed",
        "title": "WT-2436 For cursor joins with lt/le, fix how Bloom filters are populated",
        "body": "Fixes the submitted test case.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 02, 2016 at 15:08 GMT",
        "updated_at": "Thursday Mar 03, 2016 at 01:14 GMT",
        "closed_at": "Thursday Mar 03, 2016 at 01:14 GMT",
        "merged_at": "Thursday Mar 03, 2016 at 01:14 GMT"
    },
    {
        "key": null,
        "number": 2543,
        "state": "closed",
        "title": "Wt 2440 Fix POWER8 CRC32",
        "body": "Per the PPC64 ABI, v20-v31 are non-volatile registers. See http://refspecs.linuxfoundation.org/ELF/ppc64/PPC-elf64abi.html#REG\nfor calling convention.\n\nIn experiments under GDB, we see that after crc32_vpmsum is called that\nregisters v20-v31 are modified. We discovered this issue after\nintegrating the crc32_vpmsum code into our C++ code base which targeted\nPOWER8 for code generation, see\nhttps://jira.mongodb.org/browse/SERVER-22773 for repro.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 02, 2016 at 04:28 GMT",
        "updated_at": "Wednesday Mar 02, 2016 at 04:39 GMT",
        "closed_at": "Wednesday Mar 02, 2016 at 04:39 GMT",
        "merged_at": "Wednesday Mar 02, 2016 at 04:39 GMT"
    },
    {
        "key": "WT-2384",
        "number": 2542,
        "state": "closed",
        "title": "WT-2384 Fix cursor joins with compare=le or lt in first index",
        "body": "For cursor joins, joining the first index with only compare=le/lt (without a gt/ge) requires us to create another cursor internally to get results in order.  Previously we weren't returning any results.\n\nThis fixes the given test case.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 01, 2016 at 19:52 GMT",
        "updated_at": "Thursday Mar 03, 2016 at 03:25 GMT",
        "closed_at": "Thursday Mar 03, 2016 at 01:02 GMT",
        "merged_at": "Thursday Mar 03, 2016 at 01:02 GMT"
    },
    {
        "key": "WT-2432",
        "number": 2541,
        "state": "closed",
        "title": "WT-2432 Add eviction worker threads to eviction configs.",
        "body": "Turn off mmap for readonly.\n\n@michaelcahill Here are the changes for the eviction configurations to wtperf, per our discussion.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 01, 2016 at 19:26 GMT",
        "updated_at": "Tuesday Mar 01, 2016 at 20:04 GMT",
        "closed_at": "Tuesday Mar 01, 2016 at 20:04 GMT",
        "merged_at": "Tuesday Mar 01, 2016 at 20:04 GMT"
    },
    {
        "key": "WT-2437",
        "number": 2540,
        "state": "closed",
        "title": "WT-2437 Adjust expected error messages to support Windows.",
        "body": "Look for WT-specific portion of the message or detect Posix/Windows.\n@michaelcahill Here is a change to fix the test failures on Windows.\n\nI modified the tests to look for non-Posix portions of error messages.  It does bring up again whether we need a translation layer.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 01, 2016 at 19:03 GMT",
        "updated_at": "Wednesday Mar 02, 2016 at 00:59 GMT",
        "closed_at": "Wednesday Mar 02, 2016 at 00:59 GMT",
        "merged_at": "Wednesday Mar 02, 2016 at 00:59 GMT"
    },
    {
        "key": "WT-2438",
        "number": 2539,
        "state": "closed",
        "title": "WT-2438 Extend statistics definitions to include tag indicating byte size",
        "body": "To help external tools parse WiredTiger statistics.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 01, 2016 at 06:43 GMT",
        "updated_at": "Wednesday Mar 02, 2016 at 04:21 GMT",
        "closed_at": "Wednesday Mar 02, 2016 at 04:21 GMT",
        "merged_at": "Wednesday Mar 02, 2016 at 04:21 GMT"
    },
    {
        "key": "WT-2366",
        "number": 2538,
        "state": "closed",
        "title": "WT-2366 Extend wtperf to support changing record sizes in update ops",
        "body": "Via a new update_delta setting in the thread group which takes either\na signed number of \"rand\" as an argument. Defaults to 0 (disabled).\n\nThere is also a new value_sz_max configuration option to limit how\nlarge values can grow.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 01, 2016 at 05:48 GMT",
        "updated_at": "Wednesday Mar 02, 2016 at 16:15 GMT",
        "closed_at": "Wednesday Mar 02, 2016 at 16:15 GMT",
        "merged_at": "Wednesday Mar 02, 2016 at 16:15 GMT"
    },
    {
        "key": "WT-2435",
        "number": 2537,
        "state": "closed",
        "title": "WT-2435: __wt_evict_file_exclusive_on/off cleanups",
        "body": "@agorrod, @michaelcahill, for your review/consideration.\n\nThis was the simplest approach I saw for reference counting requests for eviction disable/enable on a file. A few comments:\n- I moved the `WT_CACHE.evict_walk_lock` to `WT_BTREE.evict_lock` in the btree handle, so now there's a cache `evict_lock` and a per-handle `evict_lock`. The reason is because reference counting eviction disable/enable requests requires we hold the no-eviction lock a lot longer than before, and I didn't want file close to stall eviction. We could avoid this part of the change by doing a try-lock call on the global lock, but this seemed better to me.\n- I left the `WT_BTREE_NO_EVICTION` flag in place. If you like this change, we might want to take a run at removing that flag in favor of just a reference count (instead of initially setting the flag, we'd increment and never decrement the reference count). Where that gets tricky is we explicitly set `WT_BTREE_NO_EVICTION` in a few places and we'd need be sure there's no way the reference count could go wrong. See `__wt_btree_evictable` for one of the places I'm thinking of.\n- I left the `__evict_request_walk_clear` code alone. If there's a per-btree eviction lock, we could use that instead of the current signalling mechanism, that is, the eviction server could try to acquire the per-btree eviction lock instead of checking the `WT_SESSION_CLEAR_EVICT_WALK` flag, and the exclusive code could then clear the current eviction point if it's holding that lock. Not sure if that's a bad idea or not.\n- A few miscellaneous fixes: 8ed209b, 5a1f23d, 1257c17, I'd like to cherry-pick these out if you don't like the overall direction of this change.\n\nAnyway, if you don't like this approach feel free to discard it, I was looking at Michael's comment in BF-1841 and wanted to see how deep the rabbit hole went.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 29, 2016 at 16:05 GMT",
        "updated_at": "Monday Mar 14, 2016 at 03:31 GMT",
        "closed_at": "Monday Mar 14, 2016 at 02:37 GMT",
        "merged_at": "Monday Mar 14, 2016 at 02:37 GMT"
    },
    {
        "key": "WT-2434",
        "number": 2536,
        "state": "closed",
        "title": "WT-2434 Fix a race between forced drops and sweep.",
        "body": "During a forced drop, trees are marked dead but remain in cache\ntemporarily.  The sweep thread is aggressive about trying to discard\ndead trees from cache.\n\nIf sweep found a tree marked dead before the drop operation had\ncompleted, they could race setting / clearing the \"no eviction\" flag on\nthe tree, allowing eviction to run concurrent with sweep's discard.\nThis could cause a segfault where pages are discarded underneath\neviction.\n\nThe fix is to move setting / clearing the \"no eviction\" flag inside the\nspinlock that protects against concurrent close operations.  That way,\neven if sweep does find a tree before drop has finished closing it,\nsweep will block on the close lock before attempting to discard it.\nWhile in the area, tighten up other checks relating to the \"no\neviction\" flag.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 29, 2016 at 06:13 GMT",
        "updated_at": "Monday Feb 29, 2016 at 12:08 GMT",
        "closed_at": "Monday Feb 29, 2016 at 12:08 GMT",
        "merged_at": "Monday Feb 29, 2016 at 12:08 GMT"
    },
    {
        "key": "WT-2431",
        "number": 2535,
        "state": "closed",
        "title": "WT-2431 Add documentation and examples for join cursor statistics",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Feb 28, 2016 at 22:28 GMT",
        "updated_at": "Thursday Mar 03, 2016 at 01:30 GMT",
        "closed_at": "Thursday Mar 03, 2016 at 00:53 GMT",
        "merged_at": "Thursday Mar 03, 2016 at 00:53 GMT"
    },
    {
        "key": "WT-2433",
        "number": 2534,
        "state": "closed",
        "title": "WT-2433 Allow statistics logging in readonly mode.",
        "body": "@michaelcahill Here are changes for allowing statistics logging even in read-only mode.  This is helpful for debugging the performance differences.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 26, 2016 at 21:50 GMT",
        "updated_at": "Thursday Mar 03, 2016 at 00:19 GMT",
        "closed_at": "Monday Feb 29, 2016 at 06:26 GMT",
        "merged_at": "Monday Feb 29, 2016 at 06:26 GMT"
    },
    {
        "key": "WT-2430",
        "number": 2533,
        "state": "closed",
        "title": "WT-2430 Ensure that statistics cursor is always positioned at the first 'set' of statistics.",
        "body": "This fix is relevant for getting statistics on join cursors.  This fixes the user submitted test case, and also passes a new test case, which is derived from the user submitted one.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 26, 2016 at 16:45 GMT",
        "updated_at": "Sunday Feb 28, 2016 at 14:07 GMT",
        "closed_at": "Sunday Feb 28, 2016 at 14:07 GMT",
        "merged_at": "Sunday Feb 28, 2016 at 14:07 GMT"
    },
    {
        "key": "ER-22831",
        "number": 2532,
        "state": "closed",
        "title": "SERVER-22831 Queue more leaf pages than internal pages for eviction.",
        "body": "Unless we get aggressive, putting internal pages on the LRU queue is\ncounterproductive.  That is particularly true for workloads that\ntransition to read-only, where some tables are not being queried.  In\nthat case, all of the leaf pages are evicted, and eviction wastes a lot\nof effort walking and queuing internal pages that are not actually\nevicted.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 25, 2016 at 04:11 GMT",
        "updated_at": "Thursday Feb 25, 2016 at 21:52 GMT",
        "closed_at": "Thursday Feb 25, 2016 at 21:52 GMT",
        "merged_at": "Thursday Feb 25, 2016 at 21:52 GMT"
    },
    {
        "key": "WT-2429",
        "number": 2531,
        "state": "closed",
        "title": "WT-2429 Add a statistic to track eviction aggressive mode.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 25, 2016 at 03:55 GMT",
        "updated_at": "Friday Feb 26, 2016 at 00:10 GMT",
        "closed_at": "Friday Feb 26, 2016 at 00:10 GMT",
        "merged_at": "Friday Feb 26, 2016 at 00:10 GMT"
    },
    {
        "key": "WT-2428",
        "number": 2530,
        "state": "closed",
        "title": "WT-2428 Add a \"json\" mode to statistics logging.",
        "body": "This generates statistics in a format that is compatible with MongoDB\nso that we can share tools for analysis.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 25, 2016 at 00:52 GMT",
        "updated_at": "Thursday Feb 25, 2016 at 05:17 GMT",
        "closed_at": "Thursday Feb 25, 2016 at 05:17 GMT",
        "merged_at": "Thursday Feb 25, 2016 at 05:17 GMT"
    },
    {
        "key": "WT-2427",
        "number": 2529,
        "state": "closed",
        "title": "WT-2427 Have wtperf use builtin compression when configured.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 24, 2016 at 23:14 GMT",
        "updated_at": "Wednesday Feb 24, 2016 at 23:41 GMT",
        "closed_at": "Wednesday Feb 24, 2016 at 23:41 GMT",
        "merged_at": "Wednesday Feb 24, 2016 at 23:41 GMT"
    },
    {
        "key": "WT-2425",
        "number": 2528,
        "state": "closed",
        "title": "WT-2425: evict-btree read through performance drop",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 24, 2016 at 19:22 GMT",
        "updated_at": "Wednesday Feb 24, 2016 at 22:38 GMT",
        "closed_at": "Wednesday Feb 24, 2016 at 22:38 GMT",
        "merged_at": "Wednesday Feb 24, 2016 at 22:38 GMT"
    },
    {
        "key": "WT-2423",
        "number": 2527,
        "state": "closed",
        "title": "WT-2423 Cleanup on error when opening a session handle.",
        "body": "@agorrod, I tried a different approach, for your review/consideration.\n",
        "base_ref": "wt-2423",
        "created_at": "Tuesday Feb 23, 2016 at 18:53 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 23:40 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 23:40 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 23:40 GMT"
    },
    {
        "key": "WT-2107",
        "number": 2526,
        "state": "closed",
        "title": "WT-2107: Add example code including an event handler",
        "body": "Fix the Java call to strerror.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2016 at 17:00 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 17:10 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 17:10 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 17:10 GMT"
    },
    {
        "key": "WT-2394",
        "number": 2525,
        "state": "closed",
        "title": "WT-2394 Gather handles for compact at the beginning.",
        "body": "This allows us to set the \"first fit\" flag once and clear it consistently.  It also prevents drop or other exclusive operation during compact without reentering the schema lock each time.\n",
        "base_ref": "wt-2394",
        "created_at": "Tuesday Feb 23, 2016 at 05:23 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 16:51 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 16:51 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 16:51 GMT"
    },
    {
        "key": "WT-2420",
        "number": 2524,
        "state": "closed",
        "title": "WT-2420 Gather backup metadata in a single pass.",
        "body": "Previously, we did one pass to gather entries for the backup file, and a\nseparate pass to gather handles.  Since WT-2395, those two passes could\nbe out-of-sync, leading to files missing from a backup.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2016 at 03:38 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 18:48 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 18:48 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 18:48 GMT"
    },
    {
        "key": "WT-2409",
        "number": 2523,
        "state": "closed",
        "title": "WT-2409 - Have LSM checkpoints wait for locks.",
        "body": "Having the checkpoints wait for a lock instead of looping round and retrying later had a positive performance impact  - to the tune of 10%.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2016 at 03:35 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 05:32 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 05:32 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 05:32 GMT"
    },
    {
        "key": "WT-2421",
        "number": 2522,
        "state": "closed",
        "title": "WT-2421 Fixup error handling in test/bloom.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2016 at 03:33 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 17:16 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 17:14 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 17:14 GMT"
    },
    {
        "key": "WT-2423",
        "number": 2521,
        "state": "closed",
        "title": "WT-2423 Cleanup on error when opening a session handle.",
        "body": "It's a bug, but found by inspection. Vanishingly unlikely.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 23, 2016 at 03:07 GMT",
        "updated_at": "Wednesday Feb 24, 2016 at 00:11 GMT",
        "closed_at": "Wednesday Feb 24, 2016 at 00:11 GMT",
        "merged_at": "Wednesday Feb 24, 2016 at 00:11 GMT"
    },
    {
        "key": "WT-2419",
        "number": 2520,
        "state": "closed",
        "title": "WT-2419 - Fix missing __func__ defintion under MSVC",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 22, 2016 at 23:24 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 00:10 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 00:09 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 00:09 GMT"
    },
    {
        "key": "ER-22784",
        "number": 2519,
        "state": "closed",
        "title": "SERVER-22784: Coverity analysis defect 77722: Unused value",
        "body": "@agorrod, @michaelcahill, for your review/consideration.\n\nPlease look at this one fairly closely, it's a minor change, but to the walk code.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 22, 2016 at 21:23 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 00:05 GMT",
        "closed_at": "Monday Feb 22, 2016 at 23:58 GMT",
        "merged_at": "Monday Feb 22, 2016 at 23:58 GMT"
    },
    {
        "key": "WT-2394",
        "number": 2518,
        "state": "closed",
        "title": "WT-2394: Have pages split as part of compact checkpoints use first-fit",
        "body": "Move compact start/stop into the session layer so all operations on the\nfile during compaction (including checkpoints) use first-fit allocation.\n",
        "base_ref": "wt-2394",
        "created_at": "Monday Feb 22, 2016 at 18:12 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 04:51 GMT",
        "closed_at": "Monday Feb 22, 2016 at 23:52 GMT",
        "merged_at": "Monday Feb 22, 2016 at 23:52 GMT"
    },
    {
        "key": null,
        "number": 2517,
        "state": "closed",
        "title": "Wt 2394 keith",
        "body": "",
        "base_ref": "wt-2394",
        "created_at": "Monday Feb 22, 2016 at 18:08 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 04:51 GMT",
        "closed_at": "Monday Feb 22, 2016 at 18:08 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2422",
        "number": 2516,
        "state": "closed",
        "title": "WT-2422: multiple definitions of custom die function",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 22, 2016 at 16:05 GMT",
        "updated_at": "Monday Feb 22, 2016 at 22:29 GMT",
        "closed_at": "Monday Feb 22, 2016 at 22:29 GMT",
        "merged_at": "Monday Feb 22, 2016 at 22:29 GMT"
    },
    {
        "key": "WT-2394",
        "number": 2515,
        "state": "closed",
        "title": "WT-2394 - Have pages split as part of compact checkpoints use first-fit",
        "body": "Change to make compact significantly more robust. Resolves one very major cause of the short cutting of compact runs. I was able to run 150x of the compact test with 0 failures, with both the 128KB and 64KB block sizes.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 22, 2016 at 11:06 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 23:40 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 23:40 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 23:40 GMT"
    },
    {
        "key": "ER-22554",
        "number": 2514,
        "state": "closed",
        "title": "SERVER-22554 Fix a reference counting bug in dhandles.",
        "body": "The code has diverged a lot between 3.0 and the latest develop, and\na backport included half of a reference counting change. This\npatches up the reference counting in 3.0. The problem being solved\nis:\nThere are two phases to opening a handle in a session for the first\ntime. First retrieve or open the handle from the connection cache,\nthen add it to the session cache. The code was structured to split\nthose into two separate phases (one while holding a lock the other\nafter the lock had been released). The reference count needs to be\nbumped while the lock is being held, the session cache doesn't need\nto be updated while holding the lock.\n\nThis change does both while holding the lock to keep reference count\ntracking sane and correct.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Feb 22, 2016 at 05:23 GMT",
        "updated_at": "Monday Feb 22, 2016 at 23:25 GMT",
        "closed_at": "Monday Feb 22, 2016 at 23:25 GMT",
        "merged_at": "Monday Feb 22, 2016 at 23:25 GMT"
    },
    {
        "key": "WT-2417",
        "number": 2513,
        "state": "closed",
        "title": "WT-2417 - Fix windows compile error",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 22, 2016 at 02:05 GMT",
        "updated_at": "Monday Feb 22, 2016 at 04:37 GMT",
        "closed_at": "Monday Feb 22, 2016 at 04:37 GMT",
        "merged_at": "Monday Feb 22, 2016 at 04:37 GMT"
    },
    {
        "key": "WT-2107",
        "number": 2512,
        "state": "closed",
        "title": "WT-2107: Add example code including an event handler",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Sunday Feb 21, 2016 at 18:25 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 15:03 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 15:03 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 15:03 GMT"
    },
    {
        "key": "WT-2376",
        "number": 2511,
        "state": "closed",
        "title": "WT-2376: Modules should compile without including wt_internal.h header file",
        "body": "@agorrod, for your review consideration, the changes to not include `wt_internal.h` in the compression modules.\n",
        "base_ref": "develop",
        "created_at": "Sunday Feb 21, 2016 at 16:43 GMT",
        "updated_at": "Monday Feb 22, 2016 at 01:25 GMT",
        "closed_at": "Monday Feb 22, 2016 at 01:25 GMT",
        "merged_at": "Monday Feb 22, 2016 at 01:25 GMT"
    },
    {
        "key": "WT-2410",
        "number": 2510,
        "state": "closed",
        "title": "WT-2410: Casting function pointers to different types",
        "body": "@agorrod, @sueloverso, here's the other approach.\n",
        "base_ref": "wt-2410",
        "created_at": "Friday Feb 19, 2016 at 20:57 GMT",
        "updated_at": "Monday Feb 22, 2016 at 00:43 GMT",
        "closed_at": "Monday Feb 22, 2016 at 00:43 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2412",
        "number": 2509,
        "state": "closed",
        "title": "WT-2412 Truncate should not return EBUSY any longer.",
        "body": "@keithbostic Please review this 5 character change!\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 19, 2016 at 20:42 GMT",
        "updated_at": "Monday Feb 22, 2016 at 04:33 GMT",
        "closed_at": "Friday Feb 19, 2016 at 21:02 GMT",
        "merged_at": "Friday Feb 19, 2016 at 21:02 GMT"
    },
    {
        "key": "WT-2405",
        "number": 2508,
        "state": "closed",
        "title": "WT-2405: test utility error handling.",
        "body": "Add testutil_checkfmt, a macro that supports additional error output.\n",
        "base_ref": "wt-2405",
        "created_at": "Friday Feb 19, 2016 at 16:19 GMT",
        "updated_at": "Friday Feb 19, 2016 at 16:32 GMT",
        "closed_at": "Friday Feb 19, 2016 at 16:32 GMT",
        "merged_at": "Friday Feb 19, 2016 at 16:32 GMT"
    },
    {
        "key": "WT-2410",
        "number": 2507,
        "state": "closed",
        "title": "WT-2410: Casting function pointers to different types",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 19, 2016 at 15:19 GMT",
        "updated_at": "Monday Feb 22, 2016 at 01:23 GMT",
        "closed_at": "Monday Feb 22, 2016 at 01:23 GMT",
        "merged_at": "Monday Feb 22, 2016 at 01:23 GMT"
    },
    {
        "key": "WT-2349",
        "number": 2506,
        "state": "closed",
        "title": "WT-2349 Fix Jenkins memory failures",
        "body": "@keithbostic If you're around please review a small diff to fix a few of the Jenkins failures from the readonly merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 19, 2016 at 14:57 GMT",
        "updated_at": "Saturday Feb 20, 2016 at 16:26 GMT",
        "closed_at": "Saturday Feb 20, 2016 at 16:26 GMT",
        "merged_at": "Saturday Feb 20, 2016 at 16:26 GMT"
    },
    {
        "key": "WT-2411",
        "number": 2505,
        "state": "closed",
        "title": "WT-2411 Drop the checkpoint lock when LSM is draining its queue.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 19, 2016 at 04:16 GMT",
        "updated_at": "Friday Feb 19, 2016 at 04:33 GMT",
        "closed_at": "Friday Feb 19, 2016 at 04:33 GMT",
        "merged_at": "Friday Feb 19, 2016 at 04:33 GMT"
    },
    {
        "key": "WT-2395",
        "number": 2504,
        "state": "closed",
        "title": "WT-2395 Use allocation_size from metadata.",
        "body": "If we find a file that needs to be created, use its metadata config\nin case it sets its own allocation size.\n\n@michaelcahill or @agorrod please review this change.  I have confirmed it fixes the issue with the ticket and the test passes and continues.  Basically it allows it to create the LSM chunk with the correct allocation size.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 18, 2016 at 23:11 GMT",
        "updated_at": "Thursday Feb 18, 2016 at 23:27 GMT",
        "closed_at": "Thursday Feb 18, 2016 at 23:27 GMT",
        "merged_at": "Thursday Feb 18, 2016 at 23:27 GMT"
    },
    {
        "key": "WT-2407",
        "number": 2503,
        "state": "closed",
        "title": "WT-2407: recovery lint",
        "body": "@sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 18, 2016 at 14:43 GMT",
        "updated_at": "Thursday Feb 18, 2016 at 15:53 GMT",
        "closed_at": "Thursday Feb 18, 2016 at 15:53 GMT",
        "merged_at": "Thursday Feb 18, 2016 at 15:53 GMT"
    },
    {
        "key": "WT-2406",
        "number": 2502,
        "state": "closed",
        "title": "WT-2406: cursor_order lint, minor bug fixes",
        "body": "@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 18, 2016 at 14:22 GMT",
        "updated_at": "Friday Feb 19, 2016 at 02:56 GMT",
        "closed_at": "Friday Feb 19, 2016 at 02:56 GMT",
        "merged_at": "Friday Feb 19, 2016 at 02:56 GMT"
    },
    {
        "key": "WT-2405",
        "number": 2501,
        "state": "closed",
        "title": "WT-2405: test utility error handling.",
        "body": "Add a check routine to make simple error handling easier.\n\n@agorrod, @daveh86, here's the example branch.\n\nIf you like this, I thought we could add a corresponding macro to `test_util.i`.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 18, 2016 at 14:01 GMT",
        "updated_at": "Monday Feb 22, 2016 at 01:28 GMT",
        "closed_at": "Monday Feb 22, 2016 at 01:28 GMT",
        "merged_at": "Monday Feb 22, 2016 at 01:28 GMT"
    },
    {
        "key": "WT-2399",
        "number": 2500,
        "state": "closed",
        "title": "WT-2399 clean up GCC 4.1 build warning.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 18, 2016 at 03:35 GMT",
        "updated_at": "Thursday Feb 18, 2016 at 04:08 GMT",
        "closed_at": "Thursday Feb 18, 2016 at 04:08 GMT",
        "merged_at": "Thursday Feb 18, 2016 at 04:08 GMT"
    },
    {
        "key": "ER-22676",
        "number": 2498,
        "state": "closed",
        "title": "SERVER-22676 Don't check duplicated create calls for matching configurations",
        "body": "We added the check in WT-2295 as part of another fix. We have never\nchecked before and it makes maintaining backward compatability more\ncomplex in the future for limited gain.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 17, 2016 at 04:14 GMT",
        "updated_at": "Wednesday Feb 17, 2016 at 05:58 GMT",
        "closed_at": "Wednesday Feb 17, 2016 at 05:58 GMT",
        "merged_at": "Wednesday Feb 17, 2016 at 05:58 GMT"
    },
    {
        "key": "WT-2399",
        "number": 2497,
        "state": "closed",
        "title": "WT-2399 Add initial implementation for cursor traversal test application",
        "body": "Based loosely on the test/checkpoint implementation. Hopefully we can\nrefactor, so code is shared between the two via test_util.i.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 16, 2016 at 06:45 GMT",
        "updated_at": "Thursday Feb 18, 2016 at 03:11 GMT",
        "closed_at": "Thursday Feb 18, 2016 at 03:11 GMT",
        "merged_at": "Thursday Feb 18, 2016 at 03:11 GMT"
    },
    {
        "key": "WT-2396",
        "number": 2496,
        "state": "closed",
        "title": "WT-2396 Grab the checkpoint lock around drops and renames.",
        "body": "Since database-wide checkpoints have references to all handles in the\nsystem, drops are generally not possible during a checkpoint regardless\nof this change.  This prevents a deadlock where checkpoint waits on the\nhandle list lock after it has some handles locked exclusive.\n\nA better longer-term solution would be to have checkpoint gather all\nhandles (including locking old checkpoints) at the beginning so it\ndoesn't have to acquire the handle list lock after locking handles.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 16, 2016 at 03:46 GMT",
        "updated_at": "Tuesday Feb 16, 2016 at 04:23 GMT",
        "closed_at": "Tuesday Feb 16, 2016 at 04:23 GMT",
        "merged_at": "Tuesday Feb 16, 2016 at 04:23 GMT"
    },
    {
        "key": "WT-2397",
        "number": 2495,
        "state": "closed",
        "title": "WT-2397: Cursor traversal from end of the tree skips records.",
        "body": "Positioning a cursor at the end of the tree can race with page splits.\nDuring the initial descent of the tree in the cursor.prev case, do the\nsame tests for races we do for a search past the end of the tree.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 15, 2016 at 17:33 GMT",
        "updated_at": "Wednesday Feb 17, 2016 at 02:47 GMT",
        "closed_at": "Wednesday Feb 17, 2016 at 02:47 GMT",
        "merged_at": "Wednesday Feb 17, 2016 at 02:47 GMT"
    },
    {
        "key": "WT-2397",
        "number": 2494,
        "state": "closed",
        "title": "WT-2397: Cursor search/traversal returns out of order keys.",
        "body": "WT-2397: Invariant failure newCommittedSnapshot.opTime >= _currentCommittedSnapshot->opTime\n",
        "base_ref": "develop",
        "created_at": "Saturday Feb 13, 2016 at 20:00 GMT",
        "updated_at": "Monday Feb 15, 2016 at 17:36 GMT",
        "closed_at": "Monday Feb 15, 2016 at 17:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2381",
        "number": 2493,
        "state": "closed",
        "title": "WT-2381: dump utility discards table config",
        "body": "@sueloverso, I ended up waiting for a bunch more tests to run today, so I went a little further on this one.\n\nI think what's going on here is that simple tables are a special case: there's no `colgroup` entry in a simple table's metadata entry, and we're not finding the table's underlying file information.\n\nThis works for complex tables because their column-groups are listed in the table's metadata entry: even though we will write the same (incorrect) information for the complex table that we write for the simple table, it will be overridden by the correct information stored for the specific column-groups.\n\nI did a \"fix\" by special-casing simple tables in the dump code, but that could be completely wrong. I don't have a handle on how this \"ought\" to behave, it's just the only path to victory I saw.\n\nI thought a little bit about testing: the only thing that came to mind was changing test_dump to compare the metadata before and after the dump and re-load (dump the `WiredTiger.wt` file before and after the dump/re-load and assert it's the same). Obviously, you have to strip all of the checkpoint information and maybe some other stuff before that will work -- I didn't go far down that path. We'd need some way to parse the dump output in Python, too. There's a Python package to do that kind of parsing ([pyparsing](http://pythonhosted.org//pyparsing/), or [here](http://stackoverflow.com/questions/1651487/python-parsing-bracketed-blocks)), but we'd have to make sure it's installed to use it?\n\nAnyway, hope this is useful to you, just toss the branch if it's not.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 12, 2016 at 23:06 GMT",
        "updated_at": "Monday Mar 14, 2016 at 02:38 GMT",
        "closed_at": "Monday Mar 14, 2016 at 02:38 GMT",
        "merged_at": "Monday Mar 14, 2016 at 02:38 GMT"
    },
    {
        "key": "WT-2393",
        "number": 2492,
        "state": "closed",
        "title": "WT-2393: Unnecessary error handling labels.",
        "body": "Remove a few unnecessary error handling labels.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 11, 2016 at 16:38 GMT",
        "updated_at": "Monday Feb 15, 2016 at 02:17 GMT",
        "closed_at": "Monday Feb 15, 2016 at 02:17 GMT",
        "merged_at": "Monday Feb 15, 2016 at 02:17 GMT"
    },
    {
        "key": "WT-2382",
        "number": 2491,
        "state": "closed",
        "title": "WT-2382: Problem with custom collator for 'u' format with join cursor",
        "body": "Commit a6c183b removed the only caller of `__wt_struct_unpack_size`.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 11, 2016 at 16:12 GMT",
        "updated_at": "Monday Feb 22, 2016 at 01:38 GMT",
        "closed_at": "Monday Feb 22, 2016 at 01:38 GMT",
        "merged_at": "Monday Feb 22, 2016 at 01:38 GMT"
    },
    {
        "key": "WT-2173",
        "number": 2490,
        "state": "closed",
        "title": "WT-2173: test/format cache stuck full ",
        "body": "WT-2173: test/format cache stuck full\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 11, 2016 at 15:37 GMT",
        "updated_at": "Tuesday Feb 23, 2016 at 05:48 GMT",
        "closed_at": "Tuesday Feb 23, 2016 at 05:48 GMT",
        "merged_at": "Tuesday Feb 23, 2016 at 05:48 GMT"
    },
    {
        "key": "WT-2280",
        "number": 2489,
        "state": "closed",
        "title": "WT-2280 CRC32 for POWER 8 ",
        "body": "I have integrated this library https://github.com/antonblanchard/crc32-vpmsum that takes advantage of the new CRC32 SIMD instructions (called vpmsum*) available on POWER8. This library is dual licensed GPLv2+ and Apache License 2.\n\n**Changes**\nFirst commit is just the code from the original repo with an update to license.dox. Let me know if there is another file for me to update for licensing.\n\nSecond commit is the build integration, and fixups for `s_all`. The code builds on PPC64LE, and also x86 because of the defines.\n\nFinally, I do not do a runtime check for POWER8 at the moment, let me know if you would like one added. FYI, POWER8 is the minimum platform for PPC64LE on Linux.\n\n**Test Results**\nWhen I run the `medium-btree` test in wtperf, I get the following results:\n\n| Test | Software CRC32 | Hardware CRC32 |\n| --- | --- | --- |\n| Load | 35.09 sec | 24.29 sec |\n| Run | 254972 ops/sec | 440983 ops/sec |\n\nTest Machine: Bare Metal, POWER 8, 10 Core, 8 SMT, 256 GB RAM, Ramdisk used to back WT files\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 10, 2016 at 19:32 GMT",
        "updated_at": "Tuesday Feb 16, 2016 at 04:35 GMT",
        "closed_at": "Friday Feb 12, 2016 at 11:48 GMT",
        "merged_at": "Friday Feb 12, 2016 at 11:48 GMT"
    },
    {
        "key": "WT-2390",
        "number": 2488,
        "state": "closed",
        "title": "WT-2390 Fix OS X warning.",
        "body": "```\nsrc/conn/conn_log.c:636:16: error: implicit conversion loses integer precision: 'wt_off_t' (aka 'long long') to 'uint32_t' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]\n         slot->slot_last_offset;\n```\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 10, 2016 at 10:59 GMT",
        "updated_at": "Wednesday Feb 10, 2016 at 14:47 GMT",
        "closed_at": "Wednesday Feb 10, 2016 at 11:27 GMT",
        "merged_at": "Wednesday Feb 10, 2016 at 11:27 GMT"
    },
    {
        "key": "WT-2382",
        "number": 2487,
        "state": "closed",
        "title": "WT-2382 Resolve 'u' vs. 'U' format mismatches for cursor joins in collators/extractors.",
        "body": "This includes fixes:\n- resolved \"'u' at end of format\" by forcing 'u' to be used always.\n- fixed some logic around when repacking needs to be done.\n- fixed error path in __curjoin_extract_insert.\n- when the first index is just 'eq', finish iteration when it becomes\n  non-equal.\n\nIn additions, some cleanups related to these fixes, see commit log for more details.\n\nTo test collator/extractors, extended test_join03 to use collators.  It needs the sample collator in pull request #2473 (WT-2375) to run.  For now, the collator part of the test is disabled.\n\nThis runs successfully against the test program in WT-2382.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 09, 2016 at 21:34 GMT",
        "updated_at": "Thursday Feb 11, 2016 at 02:07 GMT",
        "closed_at": "Thursday Feb 11, 2016 at 02:06 GMT",
        "merged_at": "Thursday Feb 11, 2016 at 02:06 GMT"
    },
    {
        "key": "WT-2374",
        "number": 2486,
        "state": "closed",
        "title": "WT-2374 Fix inconsistent comment.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 09, 2016 at 16:32 GMT",
        "updated_at": "Wednesday Feb 10, 2016 at 05:16 GMT",
        "closed_at": "Wednesday Feb 10, 2016 at 05:11 GMT",
        "merged_at": "Wednesday Feb 10, 2016 at 05:11 GMT"
    },
    {
        "key": "WT-2374",
        "number": 2485,
        "state": "closed",
        "title": "WT-2374 Fix inconsistent comment.",
        "body": "@michaelcahill Please review.  This fixes the inconsistent comment/code I found in `txn_ckpt.c`.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 09, 2016 at 16:04 GMT",
        "updated_at": "Tuesday Feb 09, 2016 at 16:38 GMT",
        "closed_at": "Tuesday Feb 09, 2016 at 16:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2387",
        "number": 2484,
        "state": "closed",
        "title": "WT-2387 Fix the error string we test for next_random on column stores",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 09, 2016 at 01:47 GMT",
        "updated_at": "Tuesday Feb 09, 2016 at 02:03 GMT",
        "closed_at": "Tuesday Feb 09, 2016 at 02:03 GMT",
        "merged_at": "Tuesday Feb 09, 2016 at 02:03 GMT"
    },
    {
        "key": "WT-2367",
        "number": 2483,
        "state": "closed",
        "title": "WT-2367: WT_CURSOR.next out-of-order returns failure",
        "body": "@michaelcahill, @agorrod for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Sunday Feb 07, 2016 at 20:07 GMT",
        "updated_at": "Monday Feb 08, 2016 at 11:47 GMT",
        "closed_at": "Monday Feb 08, 2016 at 06:06 GMT",
        "merged_at": "Monday Feb 08, 2016 at 06:06 GMT"
    },
    {
        "key": "WT-2378",
        "number": 2482,
        "state": "closed",
        "title": "WT-2378 Whitespace",
        "body": "fix whitespace issue\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 04, 2016 at 18:59 GMT",
        "updated_at": "Thursday Feb 04, 2016 at 19:27 GMT",
        "closed_at": "Thursday Feb 04, 2016 at 19:27 GMT",
        "merged_at": "Thursday Feb 04, 2016 at 19:27 GMT"
    },
    {
        "key": "WT-2349",
        "number": 2481,
        "state": "closed",
        "title": "WT-2349  Initial addition of readonly configuration option.",
        "body": "This is not yet ready for review.  It needs testing but config parsing (fairly complex) and incompatibility testing is in.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 04, 2016 at 18:38 GMT",
        "updated_at": "Friday Feb 19, 2016 at 03:40 GMT",
        "closed_at": "Friday Feb 19, 2016 at 03:40 GMT",
        "merged_at": "Friday Feb 19, 2016 at 03:40 GMT"
    },
    {
        "key": "ER-22438",
        "number": 2480,
        "state": "closed",
        "title": "SERVER-22438 Resolve coverity warning and clarify encryption customization code",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2016 at 19:05 GMT",
        "updated_at": "Wednesday Feb 03, 2016 at 19:30 GMT",
        "closed_at": "Wednesday Feb 03, 2016 at 19:28 GMT",
        "merged_at": "Wednesday Feb 03, 2016 at 19:28 GMT"
    },
    {
        "key": "ER-22438",
        "number": 2479,
        "state": "closed",
        "title": "SERVER-22438 Resolve coverity warning and clarify encryption customization code",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday Feb 03, 2016 at 19:04 GMT",
        "updated_at": "Wednesday Feb 03, 2016 at 19:28 GMT",
        "closed_at": "Wednesday Feb 03, 2016 at 19:04 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2361",
        "number": 2478,
        "state": "closed",
        "title": "WT-2361: column-store starting record number error",
        "body": "WT-2361: column-store starting record number error\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2016 at 17:14 GMT",
        "updated_at": "Tuesday Mar 29, 2016 at 03:05 GMT",
        "closed_at": "Wednesday Feb 10, 2016 at 10:43 GMT",
        "merged_at": "Wednesday Feb 10, 2016 at 10:43 GMT"
    },
    {
        "key": "ER-22437",
        "number": 2477,
        "state": "closed",
        "title": "SERVER-22437 Remove dead code from WT-2295.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2016 at 06:59 GMT",
        "updated_at": "Wednesday Feb 03, 2016 at 14:30 GMT",
        "closed_at": "Wednesday Feb 03, 2016 at 14:29 GMT",
        "merged_at": "Wednesday Feb 03, 2016 at 14:29 GMT"
    },
    {
        "key": "WT-2378",
        "number": 2476,
        "state": "closed",
        "title": "WT-2378 Always wait for the handle list lock.",
        "body": "That is, the \"lock_wait=false\" configuration to WT_SESSION::drop does\nnot apply to the handle list lock.  The reason is code (specifically in\nLSM) that acquires the handle list lock to get an LSM tree, does some\nwork, then acquires the handle list lock again when discarding the tree.\nIf the first acquire happens to succeed and the second acquire fails,\nthe tree is left in the system with its reference count bumped.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2016 at 05:11 GMT",
        "updated_at": "Wednesday Feb 03, 2016 at 05:47 GMT",
        "closed_at": "Wednesday Feb 03, 2016 at 05:47 GMT",
        "merged_at": "Wednesday Feb 03, 2016 at 05:47 GMT"
    },
    {
        "key": "WT-2377",
        "number": 2475,
        "state": "closed",
        "title": "WT-2377 - change wtperfs dstrndup to not call strndup",
        "body": "as it is not supported on MSVC.\n\nLooks like my regex that was to replace spaces with tabs as part of a copy/paste found a formatting nit, I suspect that it can be left as is.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 03, 2016 at 03:14 GMT",
        "updated_at": "Wednesday Feb 03, 2016 at 05:16 GMT",
        "closed_at": "Wednesday Feb 03, 2016 at 05:16 GMT",
        "merged_at": "Wednesday Feb 03, 2016 at 05:16 GMT"
    },
    {
        "key": "WT-2374",
        "number": 2474,
        "state": "closed",
        "title": "WT-2374 If a backup file exists, remove/recreate metadata and turtle.",
        "body": "@michaelcahill Please review this change for managing the backup, metadata and turtle files if a copy has been done.\n\nThe one thing that isn't fixed that should be is the comment/code disparity in `wt_checkpoint_close`.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 02, 2016 at 21:59 GMT",
        "updated_at": "Saturday Feb 06, 2016 at 13:11 GMT",
        "closed_at": "Saturday Feb 06, 2016 at 13:11 GMT",
        "merged_at": "Saturday Feb 06, 2016 at 13:11 GMT"
    },
    {
        "key": "WT-2375",
        "number": 2473,
        "state": "closed",
        "title": "WT-2375 Add collator tests to test suite using a demonstration collator",
        "body": "@michaelcahill, this is ready for review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 02, 2016 at 16:01 GMT",
        "updated_at": "Monday Mar 14, 2016 at 04:51 GMT",
        "closed_at": "Monday Mar 14, 2016 at 04:51 GMT",
        "merged_at": "Monday Mar 14, 2016 at 04:51 GMT"
    },
    {
        "key": "WT-2372",
        "number": 2472,
        "state": "closed",
        "title": "WT-2372 - Fix windows inline define, changes for wt_internal inclusion",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Feb 01, 2016 at 23:20 GMT",
        "updated_at": "Tuesday Feb 02, 2016 at 05:00 GMT",
        "closed_at": "Tuesday Feb 02, 2016 at 05:00 GMT",
        "merged_at": "Tuesday Feb 02, 2016 at 05:00 GMT"
    },
    {
        "key": "WT-2371",
        "number": 2471,
        "state": "closed",
        "title": "WT-2371: parent split cannot access the page after page-index swap",
        "body": "@michaelcahill, @agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 31, 2016 at 15:20 GMT",
        "updated_at": "Sunday Jan 31, 2016 at 23:47 GMT",
        "closed_at": "Sunday Jan 31, 2016 at 23:11 GMT",
        "merged_at": "Sunday Jan 31, 2016 at 23:11 GMT"
    },
    {
        "key": "WT-2123",
        "number": 2470,
        "state": "closed",
        "title": "WT-2123: Don't clear allocated memory if not required",
        "body": "WT-2123: Don't clear allocated memory if not required\n\n@agorrod, @michaelcahill, for your review/consideration.\n\nI don't think we're going to get anywhere with this ticket as a complete set of changes, it's too hard to figure out which allocations need memory cleared, and which don't. To allow us to make progress, I added the `__wt_malloc` API (and made one obvious change to use it, where we duplicate strings). I figure we can merge this change, close the JIRA ticket, and then iteratively change code to use `__wt_malloc` where it makes sense.\n\nSecond, the one place I think we should change now is buffers we allocate for reading/writing the file. Those are big allocations and at the moment they're cleared, and they don't need to be. The problem is figuring out which allocations don't need to be cleared -- as far as I can tell, we never need to clear memory allocated for a WT_ITEM via the buffer functions, and so I drove that distinction down into the `os_alloc.c` code. It's worse layering than we had before, but I think it's worth doing to avoid the buffer clearing.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 29, 2016 at 22:36 GMT",
        "updated_at": "Thursday Mar 10, 2016 at 03:09 GMT",
        "closed_at": "Thursday Mar 10, 2016 at 03:09 GMT",
        "merged_at": "Thursday Mar 10, 2016 at 03:09 GMT"
    },
    {
        "key": null,
        "number": 2469,
        "state": "closed",
        "title": "Wt 2123",
        "body": "",
        "base_ref": "master",
        "created_at": "Friday Jan 29, 2016 at 22:26 GMT",
        "updated_at": "Friday Jan 29, 2016 at 22:27 GMT",
        "closed_at": "Friday Jan 29, 2016 at 22:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2369",
        "number": 2468,
        "state": "closed",
        "title": "WT-2369 Use C compiler to detect headers instead of C++ compiler",
        "body": "WiredTiger's options.m4 uses the C++ compiler instead of the C compiler to check for several C headers:\n- snappy.h\n- lz4.h\n- gperftools/tcmalloc.h\n\n`snappy.h` is a C++ header while `snappy-c.h` is the C equivalent, and the one included by `snappy_compress.c`.\n\nBy only using the C compiler for both header file checking and compilation, a user only needs to specify `CCFLAGS` instead of both `CCFLAGS` and `CXXFLAGS` during configure.\n\nIn order to support the `api/leveldb` directory, we need the C++ compiler. Previously the `AC_LANG_PUSH` macro was adding a dependency on it and now we need to be explicit the C++ compiler.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 29, 2016 at 22:18 GMT",
        "updated_at": "Friday Jan 29, 2016 at 23:50 GMT",
        "closed_at": "Friday Jan 29, 2016 at 23:50 GMT",
        "merged_at": "Friday Jan 29, 2016 at 23:50 GMT"
    },
    {
        "key": "WT-2368",
        "number": 2467,
        "state": "closed",
        "title": "WT-2368: row-store can pass garbage keys to collator functions",
        "body": "WT-2368: row-store can pass garbage keys to collator functions\n\n@ddanderson, this is the fix for WT-2368.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 29, 2016 at 19:45 GMT",
        "updated_at": "Monday Feb 01, 2016 at 05:03 GMT",
        "closed_at": "Monday Feb 01, 2016 at 05:03 GMT",
        "merged_at": "Monday Feb 01, 2016 at 05:03 GMT"
    },
    {
        "key": "WT-2366",
        "number": 2466,
        "state": "closed",
        "title": "WT-2366 Extend wtperf to support updates that grow records.",
        "body": "Add a new wtperf stress configuration file that appends new records and grows existing records.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 29, 2016 at 06:44 GMT",
        "updated_at": "Tuesday Mar 01, 2016 at 05:49 GMT",
        "closed_at": "Tuesday Mar 01, 2016 at 05:49 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2363",
        "number": 2465,
        "state": "closed",
        "title": "WT-2363 WT-2352 Remove support for bzip2 and allow build and test without requiring lz4 ",
        "body": "WT-2363 Remove support for bzip2 compression\nWT-2352 Allow build and test without requiring lz4.\n\n@agorrod, here's the changes that drop bzip2, and change test/format to only select from built-in compression engines.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 28, 2016 at 22:54 GMT",
        "updated_at": "Friday Jan 29, 2016 at 00:34 GMT",
        "closed_at": "Friday Jan 29, 2016 at 00:33 GMT",
        "merged_at": "Friday Jan 29, 2016 at 00:33 GMT"
    },
    {
        "key": "WT-2356",
        "number": 2464,
        "state": "closed",
        "title": "WT-2356 Fix recovery bug in log_scan advancing.",
        "body": "If we find a partial record, that is the end of log.\nAdd test program.\n\n@michaelcahill Please review this change.  The fix itself is small, in log.c.  Most of this is the test program and changing the directory structure under test/recovery.\n\nThe test program passes with the fix and fails without it.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 28, 2016 at 20:30 GMT",
        "updated_at": "Monday Feb 01, 2016 at 06:15 GMT",
        "closed_at": "Monday Feb 01, 2016 at 06:15 GMT",
        "merged_at": "Monday Feb 01, 2016 at 06:15 GMT"
    },
    {
        "key": "WT-2355",
        "number": 2463,
        "state": "closed",
        "title": "WT-2355 Use wt_buf_grow instead of free/alloc for scratch buffer.",
        "body": "@keithbostic Please review and merge this minor change to use `wt_buf_grow`\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 27, 2016 at 15:50 GMT",
        "updated_at": "Wednesday Jan 27, 2016 at 15:51 GMT",
        "closed_at": "Wednesday Jan 27, 2016 at 15:51 GMT",
        "merged_at": "Wednesday Jan 27, 2016 at 15:51 GMT"
    },
    {
        "key": "WT-2348",
        "number": 2462,
        "state": "closed",
        "title": "WT-2348: xargs -P isn't portable",
        "body": "WT-2348: xargs -P isn't portable\n\n@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 25, 2016 at 17:10 GMT",
        "updated_at": "Tuesday Jan 26, 2016 at 23:04 GMT",
        "closed_at": "Tuesday Jan 26, 2016 at 23:04 GMT",
        "merged_at": "Tuesday Jan 26, 2016 at 23:04 GMT"
    },
    {
        "key": "WT-2215",
        "number": 2461,
        "state": "closed",
        "title": "WT-2215 Use 32-bit LSN file and offsets. Set LSNs as a 64-bit value.",
        "body": "@michaelcahill Here is a new branch that implements the LSN changes as a union, getting rid of the macros from the earlier version.  This is off develop and replaces the other branch.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 25, 2016 at 17:09 GMT",
        "updated_at": "Thursday Jan 21, 2021 at 01:01 GMT",
        "closed_at": "Monday Feb 01, 2016 at 05:07 GMT",
        "merged_at": "Monday Feb 01, 2016 at 05:07 GMT"
    },
    {
        "key": "WT-2308",
        "number": 2460,
        "state": "closed",
        "title": "WT-2308 Fix for joins on indices that use extractors and 'u' at end of format",
        "body": "Passes the submitted test case.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 25, 2016 at 16:37 GMT",
        "updated_at": "Thursday Feb 18, 2016 at 04:19 GMT",
        "closed_at": "Wednesday Feb 10, 2016 at 04:10 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2347",
        "number": 2459,
        "state": "closed",
        "title": "WT-2347 Java fix for unsized 's' schema format",
        "body": "This is the Java fix corresponding to fixes in WT-1517.  Included is a Java test that matches test_config06.py from the test suite.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 24, 2016 at 12:48 GMT",
        "updated_at": "Monday Jan 25, 2016 at 04:09 GMT",
        "closed_at": "Monday Jan 25, 2016 at 04:09 GMT",
        "merged_at": "Monday Jan 25, 2016 at 04:09 GMT"
    },
    {
        "key": "WT-2229",
        "number": 2458,
        "state": "closed",
        "title": "WT-2229 Remove compression backoff stats",
        "body": "@daveh86 Here's a branch of the compression-backoff change that removes those stats per the suggestion from @keithbostic .  I created a pull request but I don't expect to merge this unless it is shown to be the cause of the performance regression.\n",
        "base_ref": "wt-2229-compression-backoff",
        "created_at": "Friday Jan 22, 2016 at 19:52 GMT",
        "updated_at": "Thursday Jan 28, 2016 at 04:54 GMT",
        "closed_at": "Thursday Jan 28, 2016 at 04:54 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2344",
        "number": 2457,
        "state": "closed",
        "title": "WT-2344: OS X compiler warning",
        "body": "WT-2344: OS X compiler warning\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 22, 2016 at 13:37 GMT",
        "updated_at": "Friday Jan 22, 2016 at 13:45 GMT",
        "closed_at": "Friday Jan 22, 2016 at 13:45 GMT",
        "merged_at": "Friday Jan 22, 2016 at 13:45 GMT"
    },
    {
        "key": "WT-2346",
        "number": 2456,
        "state": "closed",
        "title": "WT-2346 Don't hold the schema lock during checkpoint I/O.",
        "body": "This required removing the special case code for named checkpoints of\ntrees that are in the process of being bulk loaded.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 22, 2016 at 03:39 GMT",
        "updated_at": "Friday Feb 12, 2016 at 01:01 GMT",
        "closed_at": "Friday Feb 12, 2016 at 01:01 GMT",
        "merged_at": "Friday Feb 12, 2016 at 01:01 GMT"
    },
    {
        "key": "WT-2130",
        "number": 2455,
        "state": "closed",
        "title": "WT-2130 Don't round the split_pct to an allocation size.",
        "body": "The value is passed in via the API, and rounding makes it likely we\nwon't split as the user expects. Especially if the split percentage\nis high, when we'll likely round up to 100%.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 22, 2016 at 02:48 GMT",
        "updated_at": "Sunday Feb 07, 2016 at 20:55 GMT",
        "closed_at": "Thursday Feb 04, 2016 at 02:17 GMT",
        "merged_at": "Thursday Feb 04, 2016 at 02:17 GMT"
    },
    {
        "key": "WT-2275",
        "number": 2454,
        "state": "closed",
        "title": "WT-2275 Convert a file URI truncate into a range truncate.",
        "body": "@michaelcahill Here is a new branch that only converts only the file URI truncate into a range truncate and leaves LSM and tables alone.  If this is the way to go, the other two branches/pull requests can be closed and removed.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2016 at 18:53 GMT",
        "updated_at": "Friday Jan 22, 2016 at 03:41 GMT",
        "closed_at": "Friday Jan 22, 2016 at 03:41 GMT",
        "merged_at": "Friday Jan 22, 2016 at 03:41 GMT"
    },
    {
        "key": "ER-22069",
        "number": 2453,
        "state": "closed",
        "title": "SERVER-22069 Better seeding of WT's random number generator",
        "body": "SERVER-22069: Better seeding of WT's random number generator\n\n@agorrod, @michaelcahill, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2016 at 17:58 GMT",
        "updated_at": "Tuesday May 03, 2016 at 23:51 GMT",
        "closed_at": "Tuesday May 03, 2016 at 23:51 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2342",
        "number": 2452,
        "state": "closed",
        "title": "WT-2342 Add background create/drop to wtperf.",
        "body": "Works on idle tables. Gives us a way to ensure that schema operations don't get blocked during high throughput workloads.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2016 at 06:09 GMT",
        "updated_at": "Friday Jan 22, 2016 at 12:15 GMT",
        "closed_at": "Friday Jan 22, 2016 at 05:40 GMT",
        "merged_at": "Friday Jan 22, 2016 at 05:40 GMT"
    },
    {
        "key": "WT-2342",
        "number": 2451,
        "state": "closed",
        "title": "WT-2342 Add support for background schema operations in wtperf",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2016 at 05:32 GMT",
        "updated_at": "Thursday Jan 21, 2016 at 07:20 GMT",
        "closed_at": "Thursday Jan 21, 2016 at 07:20 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2333",
        "number": 2450,
        "state": "closed",
        "title": "WT-2333 Add a \"no_wait\" mode to WT_SESSION::drop.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2016 at 04:55 GMT",
        "updated_at": "Friday Jan 22, 2016 at 05:35 GMT",
        "closed_at": "Friday Jan 22, 2016 at 05:35 GMT",
        "merged_at": "Friday Jan 22, 2016 at 05:35 GMT"
    },
    {
        "key": "WT-2340",
        "number": 2449,
        "state": "closed",
        "title": "WT-2340: Add logging guarantee assertions, whitespace",
        "body": "WT-2340: Add logging guarantee assertions, whitespace\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2016 at 00:24 GMT",
        "updated_at": "Thursday Jan 21, 2016 at 00:24 GMT",
        "closed_at": "Thursday Jan 21, 2016 at 00:24 GMT",
        "merged_at": "Thursday Jan 21, 2016 at 00:24 GMT"
    },
    {
        "key": "WT-2339",
        "number": 2448,
        "state": "closed",
        "title": "WT-2339: format post-rebalance verify failure",
        "body": "WT-2339: format post-rebalance verify failure\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 21, 2016 at 00:01 GMT",
        "updated_at": "Thursday Jan 21, 2016 at 00:33 GMT",
        "closed_at": "Thursday Jan 21, 2016 at 00:13 GMT",
        "merged_at": "Thursday Jan 21, 2016 at 00:13 GMT"
    },
    {
        "key": "WT-2275",
        "number": 2447,
        "state": "closed",
        "title": "WT-2275 Restore call to LSM tree truncate.",
        "body": "@michaelcahill In thinking harder about the LSM truncate and looking at the code, I restored the call to `wt_lsm_tree_truncate`.  The LSM code doesn't do truncate and file manipulation like the others.  While there may be bugs, the LSM code is very different where the truncate sets up a new chunk and moves all the previous chunks to the `old_chunks` list and then does its processing on those chunks.  So if there are bugs in the metadata consistency, it is unlike the original truncate code for files and it exists for any LSM table when it removes chunks from the `old_chunks` array.\n\nThere is precedent for checking the `lsm:` URI in `session_api.c` and `session_compact.c` also.\n",
        "base_ref": "WT-2275",
        "created_at": "Wednesday Jan 20, 2016 at 17:26 GMT",
        "updated_at": "Friday Jan 22, 2016 at 03:42 GMT",
        "closed_at": "Friday Jan 22, 2016 at 03:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2287",
        "number": 2446,
        "state": "closed",
        "title": "WT-2287: WT_SESSION.rebalance",
        "body": "WT-2287: WT_SESSION.rebalance\n\n@agorrod, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 20, 2016 at 01:34 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 01:44 GMT",
        "closed_at": "Wednesday Jan 20, 2016 at 01:44 GMT",
        "merged_at": "Wednesday Jan 20, 2016 at 01:44 GMT"
    },
    {
        "key": "WT-2338",
        "number": 2445,
        "state": "closed",
        "title": "WT-2338 Skip pre-allocated log files if backup cursor is open.",
        "body": "@michaelcahill Please review this fix for WT-2338 which is from BF-1399 - skip using pre-allocated log files if a backup is in progress.  This does not include a test for forcing that specific scenario.  I can add one if you want.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2016 at 21:45 GMT",
        "updated_at": "Friday Jan 22, 2016 at 00:19 GMT",
        "closed_at": "Friday Jan 22, 2016 at 00:19 GMT",
        "merged_at": "Friday Jan 22, 2016 at 00:19 GMT"
    },
    {
        "key": "WT-2296",
        "number": 2444,
        "state": "closed",
        "title": "WT-2296 Yield instead of sleep if the wrlsn thread is finding work.",
        "body": "@michaelcahill Please review this change that eliminates the performance hit in the 2.7 release for write-no-sync mode.  In fact, this code, in write-no-sync, now runs at 3x the (fixed from WT-2332) 2.6 code (on Linux, it runs equal on my Mac).  This may have a good impact on in-memory log configuration too because the change is in the `wrlsn_server` thread.  This yield code existed in 2.6 and earlier logging code and changed during the rewrite.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2016 at 21:14 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 21:56 GMT",
        "closed_at": "Wednesday Jan 20, 2016 at 21:56 GMT",
        "merged_at": "Wednesday Jan 20, 2016 at 21:56 GMT"
    },
    {
        "key": "WT-2332",
        "number": 2443,
        "state": "closed",
        "title": "WT-2332 Add logging guarantee assertions.",
        "body": "@michaelcahill Please review this change.  Although 2.7 and develop don't have the original bug, I believe adding in the assertions from this ticket are worthwhile.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2016 at 20:41 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 21:27 GMT",
        "closed_at": "Wednesday Jan 20, 2016 at 21:27 GMT",
        "merged_at": "Wednesday Jan 20, 2016 at 21:27 GMT"
    },
    {
        "key": "WT-2295",
        "number": 2442,
        "state": "closed",
        "title": "WT-2295 On index create, do not populate existing indices.",
        "body": "These commits fix the test case for populating indices attached to WT-2295.\nAlso fixes exclusive create for \"index:\", and disallows calling create on an existing index with a different configuration string.\n\nAdded explicit tests for exclusive create and recreating index with a different configuration.  It's probably not possible in python to create a test that detects that existing indices are not repopulated, at least not without help in C.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2016 at 19:23 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 04:14 GMT",
        "closed_at": "Wednesday Jan 20, 2016 at 04:14 GMT",
        "merged_at": "Wednesday Jan 20, 2016 at 04:14 GMT"
    },
    {
        "key": "WT-1517",
        "number": 2441,
        "state": "closed",
        "title": "WT-1517: schema format edge cases",
        "body": "WT-1517: schema format edge cases\n\n@michaelcahill, a branch for the fixes for WT-1517.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2016 at 17:35 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 04:26 GMT",
        "closed_at": "Wednesday Jan 20, 2016 at 04:26 GMT",
        "merged_at": "Wednesday Jan 20, 2016 at 04:26 GMT"
    },
    {
        "key": "WT-2267",
        "number": 2440,
        "state": "closed",
        "title": "WT-2267 - WTPERF Throttle implementation",
        "body": "Follow on from https://github.com/wiredtiger/wiredtiger/pull/2395\n\nChange has been squashed down to one commit and rebased against master.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 19, 2016 at 06:50 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 16:06 GMT",
        "closed_at": "Wednesday Jan 20, 2016 at 16:06 GMT",
        "merged_at": "Wednesday Jan 20, 2016 at 16:06 GMT"
    },
    {
        "key": "WT-1801",
        "number": 2439,
        "state": "closed",
        "title": "WT-1801: Add a directory sync after rollback of a WT_SESSION::rename operation",
        "body": "WT-1801: Add a directory sync after rollback of a WT_SESSION::rename operation\n\n@michaelcahill, @sueloverso, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 18, 2016 at 15:13 GMT",
        "updated_at": "Tuesday Jan 19, 2016 at 05:38 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 05:38 GMT",
        "merged_at": "Tuesday Jan 19, 2016 at 05:38 GMT"
    },
    {
        "key": "WT-2335",
        "number": 2438,
        "state": "closed",
        "title": "WT-2335: crash in config_check_search with invalid configuration string",
        "body": "WT-2335: crash in config_check_search with invalid configuration string\n\n@michaelcahill, would you please do the review?\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 17, 2016 at 14:46 GMT",
        "updated_at": "Tuesday Jan 19, 2016 at 23:17 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 06:23 GMT",
        "merged_at": "Tuesday Jan 19, 2016 at 06:23 GMT"
    },
    {
        "key": "WT-2326",
        "number": 2437,
        "state": "closed",
        "title": "WT-2326 - Add back a nullbyte that was incorrectly removed from wtperf",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jan 15, 2016 at 00:43 GMT",
        "updated_at": "Monday Jan 18, 2016 at 04:21 GMT",
        "closed_at": "Monday Jan 18, 2016 at 04:21 GMT",
        "merged_at": "Monday Jan 18, 2016 at 04:21 GMT"
    },
    {
        "key": "WT-60",
        "number": 2436,
        "state": "closed",
        "title": "WT-60: big endian support",
        "body": "WT-60: big endian support\n\n@agorrod, here's something that should give you an idea of where I'm heading. I figure this one will be contentious enough it's better to get something out for comment quickly.\n\nI've smoke-tested this, and think it handles the block manager code; I haven't looked at the logging code at all.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2016 at 20:02 GMT",
        "updated_at": "Monday Feb 01, 2016 at 05:12 GMT",
        "closed_at": "Monday Feb 01, 2016 at 05:12 GMT",
        "merged_at": "Monday Feb 01, 2016 at 05:12 GMT"
    },
    {
        "key": "WT-2331",
        "number": 2435,
        "state": "closed",
        "title": "WT-2331 Require that reference cursors that are joined be positioned",
        "body": "Additionally add tests to verify that cursors that merely have a key set, or\nthat have failed a positioning API (search), not be usable in a join.  Give\na better error message in all these cases.\n\nAdd a check in __wt_struct_repack so that an empty or shorter than expected\ninput array give an error, and not be interpreted as unbounded size.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2016 at 19:14 GMT",
        "updated_at": "Thursday Jan 14, 2016 at 19:44 GMT",
        "closed_at": "Thursday Jan 14, 2016 at 19:43 GMT",
        "merged_at": "Thursday Jan 14, 2016 at 19:43 GMT"
    },
    {
        "key": "WT-2321",
        "number": 2434,
        "state": "closed",
        "title": "WT-2321: race between eviction and worker threads on the eviction queue",
        "body": "WT-2321: race between eviction and worker threads on the eviction queue\n\n@agorrod, @michaelcahill, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 14, 2016 at 00:48 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 03:08 GMT",
        "closed_at": "Wednesday Jan 20, 2016 at 03:08 GMT",
        "merged_at": "Wednesday Jan 20, 2016 at 03:08 GMT"
    },
    {
        "key": "WT-2313",
        "number": 2433,
        "state": "closed",
        "title": "WT-2313 Wrap clearing of WT_DHANDLE_OPEN with eviction exclusive calls.",
        "body": "@keithbostic Please review and run this on  your machine with `verbose=(temporary)` turned on.  If you see the `clear_open...` message and it successfully completes then it took the original code path.  This is not ready to merge until the debug verbose message is removed.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 13, 2016 at 15:36 GMT",
        "updated_at": "Thursday Jan 14, 2016 at 00:52 GMT",
        "closed_at": "Thursday Jan 14, 2016 at 00:52 GMT",
        "merged_at": "Thursday Jan 14, 2016 at 00:52 GMT"
    },
    {
        "key": "WT-2328",
        "number": 2432,
        "state": "closed",
        "title": "WT-2328: schema drop does direct unlink, change to a block manager interface",
        "body": "WT-2328: schema drop does direct unlink, change to a block manager interface\n\n@agorrod, @michaelcahill: a small restructuring to put the block manager into the drop-file path.\n\nIf/when we have multiple block managers, this will change, but for now I think it's correct.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 12, 2016 at 18:15 GMT",
        "updated_at": "Wednesday Jan 13, 2016 at 13:33 GMT",
        "closed_at": "Wednesday Jan 13, 2016 at 13:33 GMT",
        "merged_at": "Wednesday Jan 13, 2016 at 13:33 GMT"
    },
    {
        "key": "WT-2295",
        "number": 2431,
        "state": "closed",
        "title": "WT-2295 When populating an index, detect if already exists to avoid full scan",
        "body": "This passes the submitted test case.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 12, 2016 at 17:37 GMT",
        "updated_at": "Wednesday Jan 20, 2016 at 02:08 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 19:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2326",
        "number": 2430,
        "state": "closed",
        "title": "WT-2326 - Add dcalloc, dmalloc and dstrdup to wtperf ",
        "body": "and replace all existing malloc, calloc and strncpy calls\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 12, 2016 at 04:55 GMT",
        "updated_at": "Thursday Jan 14, 2016 at 14:58 GMT",
        "closed_at": "Thursday Jan 14, 2016 at 14:58 GMT",
        "merged_at": "Thursday Jan 14, 2016 at 14:58 GMT"
    },
    {
        "key": "WT-2193",
        "number": 2429,
        "state": "closed",
        "title": " WT-2193 Backport 3.0. Handle read-committed metadata checkpoints during snapshot transactions",
        "body": "(cherry picked from commit 2f0b3e2)\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Sunday Jan 10, 2016 at 22:30 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:26 GMT",
        "closed_at": "Monday Jan 11, 2016 at 19:26 GMT",
        "merged_at": "Monday Jan 11, 2016 at 19:26 GMT"
    },
    {
        "key": "WT-2320",
        "number": 2428,
        "state": "closed",
        "title": "WT-2320 Backport to 3.0. Only check copyright as part of cutting a release.",
        "body": "(cherry picked from commit 051ab40)\n\nBuilds on another change that was pushed directly to develop branch: 00c2116\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Sunday Jan 10, 2016 at 22:07 GMT",
        "updated_at": "Sunday Jan 10, 2016 at 22:21 GMT",
        "closed_at": "Sunday Jan 10, 2016 at 22:21 GMT",
        "merged_at": "Sunday Jan 10, 2016 at 22:21 GMT"
    },
    {
        "key": "WT-2320",
        "number": 2427,
        "state": "closed",
        "title": "WT-2320 Only check copyright as part of cutting a release.",
        "body": "Builds on another change that was pushed directly to develop branch: 00c2116d630416dbc871b539b5e234c14248f5b6\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 10, 2016 at 21:15 GMT",
        "updated_at": "Sunday Jan 10, 2016 at 21:49 GMT",
        "closed_at": "Sunday Jan 10, 2016 at 21:49 GMT",
        "merged_at": "Sunday Jan 10, 2016 at 21:49 GMT"
    },
    {
        "key": "WT-2253",
        "number": 2426,
        "state": "closed",
        "title": "WT-2253 Backport to 3.0. Evict pages left behind by in-memory splits.",
        "body": "(cherry picked from commit 4fc3e39)\n\nWT-2253 Backport to 3.0. Evict pages left behind by in-memory splits.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Sunday Jan 10, 2016 at 19:54 GMT",
        "updated_at": "Wednesday Jan 13, 2016 at 20:36 GMT",
        "closed_at": "Monday Jan 11, 2016 at 19:10 GMT",
        "merged_at": "Monday Jan 11, 2016 at 19:10 GMT"
    },
    {
        "key": "WT-2196",
        "number": 2425,
        "state": "closed",
        "title": "WT-2196 MongoDB 3.0 backport fixes for size only statistics",
        "body": "Make error handling more robust and fix size only statistics for LSM trees.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Sunday Jan 10, 2016 at 19:45 GMT",
        "updated_at": "Wednesday Jan 13, 2016 at 20:36 GMT",
        "closed_at": "Monday Jan 11, 2016 at 17:56 GMT",
        "merged_at": "Monday Jan 11, 2016 at 17:56 GMT"
    },
    {
        "key": "WT-2309",
        "number": 2424,
        "state": "closed",
        "title": "WT-2309: Add yields and/or sleeps in #DIAGNOSTIC mode.",
        "body": "WT-2309: Add yields and/or sleeps in #DIAGNOSTIC mode.\n\nAdd a new function __wt_diagnostic_yield() that yields (and optionally sleeps), add it to the split code to encourage races.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 10, 2016 at 16:45 GMT",
        "updated_at": "Wednesday Jan 13, 2016 at 20:37 GMT",
        "closed_at": "Tuesday Jan 12, 2016 at 00:45 GMT",
        "merged_at": null
    },
    {
        "key": "ER-22064",
        "number": 2423,
        "state": "closed",
        "title": "SERVER-22064: Coverity, function return value not checked for error",
        "body": "Coverity analysis defect 77699: Unchecked return value, problem\nintroduced in SERVER-21619 change, commit 354c031.\n\nInstead of calling __wt_evict_page_clean_update() when discarding pages,\ncall __wt_ref_out() directly, __wt_evict_page_clean_update() doesn't do\nany useful additional work.\n\nThis allows __wt_evict_page_clean_update() to be static in evict_page.c,\nrename to __evict_page_clean_update().\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 10, 2016 at 16:09 GMT",
        "updated_at": "Wednesday Jan 13, 2016 at 20:35 GMT",
        "closed_at": "Monday Jan 11, 2016 at 20:49 GMT",
        "merged_at": "Monday Jan 11, 2016 at 20:49 GMT"
    },
    {
        "key": "WT-2316",
        "number": 2422,
        "state": "closed",
        "title": "WT-2316: WT_CURSOR.prev out-of-order returns, fix a split race.",
        "body": "WT-2316: WT_CURSOR.prev out-of-order returns, fix a split race.\n\n@agorrod, @michaelcahill, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jan 09, 2016 at 23:32 GMT",
        "updated_at": "Tuesday Jan 12, 2016 at 23:32 GMT",
        "closed_at": "Tuesday Jan 12, 2016 at 23:32 GMT",
        "merged_at": "Tuesday Jan 12, 2016 at 23:32 GMT"
    },
    {
        "key": "WT-2275",
        "number": 2421,
        "state": "closed",
        "title": "WT-2275 Convert a table URI truncate into a range truncate.",
        "body": "@michaelcahill Please review this branch.  The ticket revealed a bug keeping files and metadata in sync during an abort in a truncate.  @keithbostic suggested we could consider removing support for URI truncate in favor of drop and create.  In thinking about that, I came up with this solution instead.\n\nIf we consider that a truncate is emptying the content of a table, it avoids the metadata/file interactions to translate a URI based truncate into a range truncate with a start cursor on the first item.  It also removes a lot of code.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 05, 2016 at 21:26 GMT",
        "updated_at": "Friday Jan 22, 2016 at 03:43 GMT",
        "closed_at": "Friday Jan 22, 2016 at 03:42 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2308",
        "number": 2420,
        "state": "closed",
        "title": "WT-2308 Fix for join using extractor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 05, 2016 at 18:47 GMT",
        "updated_at": "Thursday Jan 14, 2016 at 19:51 GMT",
        "closed_at": "Thursday Jan 14, 2016 at 19:51 GMT",
        "merged_at": "Thursday Jan 14, 2016 at 19:51 GMT"
    },
    {
        "key": "WT-2314",
        "number": 2419,
        "state": "closed",
        "title": "WT-2314: better error handling in the page-swap function and callers.",
        "body": "@agorrod, @sueloverso: ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jan 02, 2016 at 22:06 GMT",
        "updated_at": "Tuesday Jan 05, 2016 at 00:20 GMT",
        "closed_at": "Tuesday Jan 05, 2016 at 00:20 GMT",
        "merged_at": "Tuesday Jan 05, 2016 at 00:20 GMT"
    },
    {
        "key": "WT-2311",
        "number": 2418,
        "state": "closed",
        "title": "WT-2311 Support Sparc",
        "body": "On UltraSparc IIIi (2003) and later (also likely earlier), Sun/Oracle Sparc chips uses TSO. This means that we only need `membar` when we need to prevent `StoreLoad` reorderings as all others are NOPs on Sparc (See TABLE 8-1 in UltraSparc IIIi manual). \n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 29, 2015 at 21:28 GMT",
        "updated_at": "Tuesday Dec 29, 2015 at 22:36 GMT",
        "closed_at": "Tuesday Dec 29, 2015 at 22:36 GMT",
        "merged_at": "Tuesday Dec 29, 2015 at 22:36 GMT"
    },
    {
        "key": "WT-2307",
        "number": 2417,
        "state": "closed",
        "title": "WT-2307: diagnostic checks for cursors returning keys out-of-order",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 28, 2015 at 22:12 GMT",
        "updated_at": "Tuesday Dec 29, 2015 at 15:26 GMT",
        "closed_at": "Tuesday Dec 29, 2015 at 15:26 GMT",
        "merged_at": "Tuesday Dec 29, 2015 at 15:26 GMT"
    },
    {
        "key": "WT-2307",
        "number": 2416,
        "state": "closed",
        "title": "WT-2307 Use single enum for split error handling phases.",
        "body": "@agorrod and @keithbostic here's a pass at creating a single enum.  I did leave the long comment in both functions with the more thorough description.  Please review and merge if you like it.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 28, 2015 at 19:12 GMT",
        "updated_at": "Tuesday Dec 29, 2015 at 15:05 GMT",
        "closed_at": "Monday Dec 28, 2015 at 23:05 GMT",
        "merged_at": "Monday Dec 28, 2015 at 23:05 GMT"
    },
    {
        "key": "WT-2307",
        "number": 2415,
        "state": "closed",
        "title": "WT-2307: Fix for cursor iteration bug when pages are splitting",
        "body": "@agorrod, for your review/consideration, we can talk this through at your convenience.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 24, 2015 at 19:14 GMT",
        "updated_at": "Monday Dec 28, 2015 at 19:13 GMT",
        "closed_at": "Monday Dec 28, 2015 at 18:31 GMT",
        "merged_at": "Monday Dec 28, 2015 at 18:31 GMT"
    },
    {
        "key": "WT-2305",
        "number": 2414,
        "state": "closed",
        "title": "WT-2305 - Fix coverity issues",
        "body": "Fixes for some of the recently found coverity issues.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 24, 2015 at 02:30 GMT",
        "updated_at": "Tuesday Jan 12, 2016 at 22:56 GMT",
        "closed_at": "Tuesday Jan 12, 2016 at 22:56 GMT",
        "merged_at": "Tuesday Jan 12, 2016 at 22:56 GMT"
    },
    {
        "key": "WT-2307",
        "number": 2413,
        "state": "closed",
        "title": "WT-2307 workaround for cursor next bug.",
        "body": "Detect when a cursor next returned an invalid result and retry\nthe next operation. Horrible since it adds a comparison into each\ncursor next, but fixes the symptom until we can fix the underlying bug.\n",
        "base_ref": "mongodb-3.2",
        "created_at": "Thursday Dec 24, 2015 at 00:25 GMT",
        "updated_at": "Monday Dec 28, 2015 at 20:24 GMT",
        "closed_at": "Monday Dec 28, 2015 at 20:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2307",
        "number": 2412,
        "state": "closed",
        "title": "WT-2307 workaround. Reposition and retry next when we detect out of order.",
        "body": "This improves the situation with the wtperf reproducer, but I still\nsee wtperf reporting out of order keys during traversal occasionally.\n",
        "base_ref": "diagnose-split-next-bug",
        "created_at": "Wednesday Dec 23, 2015 at 23:51 GMT",
        "updated_at": "Monday Dec 28, 2015 at 20:25 GMT",
        "closed_at": "Monday Dec 28, 2015 at 20:25 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2303",
        "number": 2411,
        "state": "closed",
        "title": "WT-2303 Track wtperf range scans less aggressively.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 23, 2015 at 06:42 GMT",
        "updated_at": "Wednesday Dec 23, 2015 at 22:28 GMT",
        "closed_at": "Wednesday Dec 23, 2015 at 22:28 GMT",
        "merged_at": "Wednesday Dec 23, 2015 at 22:28 GMT"
    },
    {
        "key": "WT-2174",
        "number": 2410,
        "state": "closed",
        "title": "WT-2174 Backport - Enhance size statistics to not wait for the table lock",
        "body": "Merge pull request #2256 from wiredtiger/stat-fast-no-table-lock\n\n(cherry picked from commit 497b744d6)\n\nWT-2174 Backport - Enhance size statistics to not wait for the table lock\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Wednesday Dec 23, 2015 at 03:20 GMT",
        "updated_at": "Wednesday Dec 23, 2015 at 22:32 GMT",
        "closed_at": "Wednesday Dec 23, 2015 at 22:32 GMT",
        "merged_at": "Wednesday Dec 23, 2015 at 22:32 GMT"
    },
    {
        "key": "WT-2174",
        "number": 2409,
        "state": "closed",
        "title": "WT-2174 Backport - Avoid the table list lock when creating a size only statistics cursor",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Wednesday Dec 23, 2015 at 01:02 GMT",
        "updated_at": "Wednesday Dec 23, 2015 at 03:17 GMT",
        "closed_at": "Wednesday Dec 23, 2015 at 03:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2304",
        "number": 2408,
        "state": "closed",
        "title": "WT-2304 - Fix memory leaking issue in config dump when there are multiple databases",
        "body": "This inits a new config object, thus being always empty and not running afoul of the config_free function.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 22, 2015 at 23:50 GMT",
        "updated_at": "Wednesday Dec 23, 2015 at 22:30 GMT",
        "closed_at": "Wednesday Dec 23, 2015 at 22:30 GMT",
        "merged_at": "Wednesday Dec 23, 2015 at 22:30 GMT"
    },
    {
        "key": "WT-2307",
        "number": 2407,
        "state": "closed",
        "title": "WT-2307: diagnose split next bug",
        "body": "Add in diagnostic code to track cursor operations, and flag an error when an out of order cursor traversal happens.\n\nAlso add a wtperf configuration that triggers the bug reliably when run.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 22, 2015 at 08:03 GMT",
        "updated_at": "Monday Dec 28, 2015 at 20:26 GMT",
        "closed_at": "Monday Dec 28, 2015 at 20:26 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2302",
        "number": 2406,
        "state": "closed",
        "title": "WT-2302: change test/format to check cursor movement key order.",
        "body": "@agorrod, for your consideration/review.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 21, 2015 at 21:08 GMT",
        "updated_at": "Monday Dec 28, 2015 at 20:28 GMT",
        "closed_at": "Monday Dec 28, 2015 at 20:28 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2301",
        "number": 2405,
        "state": "closed",
        "title": "WT-2301 Add reading a range of keys to wtperf.",
        "body": "@agorrod Please review this change.  In particular, is there some obvious error in my change? I am not seeing it.\nThe config I tested was based off `mongodb-oplog.wtperf` and was:\n\n```\nconn_config=\"cache_size=2GB,checkpoint=(wait=60)\"\ntable_config=\"type=file\"\n# Start with a small set of inserts in the populate phase.\nicount=50000\nreport_interval=5\nrun_time=300\npopulate_threads=1\nread_range=true\nthreads=((count=3,inserts=1,throttle=4000),(count=1,reads=1))\n```\n\nIt fails very quickly with this error in `test.stat` anytime I run a workload that involves reads and either inserts or updates:\n\n```\nStarting 1 populate thread(s) for 50000 items\nFinished load of 50000 items\nLoad time: 0.07\nload ops/sec: 0\nStarting workload #1: 3 threads, inserts=1, reads=0, updates=0, truncate=0, throttle=4000\nStarting workload #2: 1 threads, inserts=0, reads=1, updates=0, truncate=0, throttle=0\n675630 reads, 60015 inserts, 0 updates, 0 truncates, 0 checkpoints in 5 secs (5 total secs)\ninsert failed for: 0000000000000146365, range: 146360 Error: WT_PANIC: WiredTiger library panic\n```\n\nand this is written to stdout where I started wtperf (the key numbers printed vary run to run, but are always very small):\n\n```\n[1450725323:260732][64645:0x104e6c000], file:test.wt, eviction-server: the 1 and 3 keys on page at [write-check] are incorrectly sorted\n[1450725323:260772][64645:0x104e6c000], eviction-server: cache eviction server error: WT_ERROR: non-specific WiredTiger error\ninsert failed for: 0000000000000146365, range: 146360[1450725323:260777][64645:0x104e6c000], eviction-server: the process must exit and restart: WT_PANIC: WiredTiger library panic\n Error: WT_PANIC: WiredTiger library panic\n[1450725323:260900][64645:0x104e6c000], eviction-server: aborting WiredTiger library\nAbort (core dumped)\n```\n\nIt makes me think there is something wrong with my change but it is pretty small and simple.  This fails every time.  \n",
        "base_ref": "develop",
        "created_at": "Monday Dec 21, 2015 at 19:25 GMT",
        "updated_at": "Tuesday Dec 22, 2015 at 07:55 GMT",
        "closed_at": "Tuesday Dec 22, 2015 at 07:55 GMT",
        "merged_at": "Tuesday Dec 22, 2015 at 07:55 GMT"
    },
    {
        "key": "WT-2307",
        "number": 2404,
        "state": "closed",
        "title": "WT-2307 debugging branch",
        "body": "Debugging branch, never intended to be merged.\n",
        "base_ref": "mongodb-3.2",
        "created_at": "Monday Dec 21, 2015 at 17:33 GMT",
        "updated_at": "Monday Dec 28, 2015 at 20:27 GMT",
        "closed_at": "Monday Dec 28, 2015 at 20:27 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2299",
        "number": 2403,
        "state": "closed",
        "title": "WT-2299: upper-level WiredTiger code is  reaching into the block manager",
        "body": "@agorrod, just a minor cleanup for your consideration/review.\n",
        "base_ref": "develop",
        "created_at": "Sunday Dec 20, 2015 at 18:29 GMT",
        "updated_at": "Sunday Dec 20, 2015 at 23:17 GMT",
        "closed_at": "Sunday Dec 20, 2015 at 23:17 GMT",
        "merged_at": "Sunday Dec 20, 2015 at 23:17 GMT"
    },
    {
        "key": "WT-2297",
        "number": 2402,
        "state": "closed",
        "title": "WT-2297: Fix off-by-one error in Huffman config file parsing",
        "body": "Line-numbers are one-based, so reading a Huffman configuration file with 256 lines would result in an complaint that the file had more than 255 lines.\n",
        "base_ref": "develop",
        "created_at": "Saturday Dec 19, 2015 at 16:48 GMT",
        "updated_at": "Saturday Dec 19, 2015 at 20:38 GMT",
        "closed_at": "Saturday Dec 19, 2015 at 20:27 GMT",
        "merged_at": "Saturday Dec 19, 2015 at 20:27 GMT"
    },
    {
        "key": "WT-2279",
        "number": 2401,
        "state": "closed",
        "title": "WT-2279 Add barrier and spinlock ops for s390x",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 18, 2015 at 23:42 GMT",
        "updated_at": "Saturday Dec 19, 2015 at 20:39 GMT",
        "closed_at": "Saturday Dec 19, 2015 at 20:39 GMT",
        "merged_at": "Saturday Dec 19, 2015 at 20:39 GMT"
    },
    {
        "key": "WT-2277",
        "number": 2400,
        "state": "closed",
        "title": "WT-2277 Remove check forbidding big-endian systems",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 18, 2015 at 23:42 GMT",
        "updated_at": "Saturday Dec 19, 2015 at 21:08 GMT",
        "closed_at": "Saturday Dec 19, 2015 at 21:08 GMT",
        "merged_at": "Saturday Dec 19, 2015 at 21:08 GMT"
    },
    {
        "key": "WT-2287",
        "number": 2399,
        "state": "closed",
        "title": "WT-2287: WT_SESSION.rebalance support.",
        "body": "@agorrod, @michaelcahill: initial WT_SESSION.rebalance support.\n\nOne big question (well, aside from whether we want this change at all), is the rebalance method lies between normal processing (which opens an underlying checkpoint/file) and salvage and verify (that don't open an underlying checkpoint/file at all), by opening the checkpoint/file but only loading the root page. It does this because it was easier to use the standard checkpoint/cache-flush mechanisms to create a checkpoint in the underlying file, but I think it's potentially fragile. A better idea or comments would be welcome.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 17, 2015 at 17:45 GMT",
        "updated_at": "Friday Jan 29, 2016 at 02:29 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 23:25 GMT",
        "merged_at": "Tuesday Jan 19, 2016 at 23:25 GMT"
    },
    {
        "key": "WT-2291",
        "number": 2398,
        "state": "closed",
        "title": "WT-2291 experimental random_next skip list change.",
        "body": "Not currently working well, but an attempt to alter the control flow so we don't need to handle the edge cases as often, which will hopefully avoid adding as much artificial skew.\n",
        "base_ref": "WT-2291-more-random-skip",
        "created_at": "Thursday Dec 17, 2015 at 06:34 GMT",
        "updated_at": "Sunday Dec 20, 2015 at 23:44 GMT",
        "closed_at": "Sunday Dec 20, 2015 at 23:44 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2291",
        "number": 2397,
        "state": "closed",
        "title": "WT-2291: Update random walk in a skip list to improve it's randomness.",
        "body": "It is currently failing. The test is currently targeted at small in-memory trees (i.e: the skiplist random code).\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 17, 2015 at 03:42 GMT",
        "updated_at": "Monday Dec 21, 2015 at 14:31 GMT",
        "closed_at": "Monday Dec 21, 2015 at 14:31 GMT",
        "merged_at": "Monday Dec 21, 2015 at 14:31 GMT"
    },
    {
        "key": "WT-2290",
        "number": 2396,
        "state": "closed",
        "title": "WT-2290: don't reuse previous multi-block write blocks when compacting",
        "body": "@agorrod, @sue, ready for review/merge.\n",
        "base_ref": "SERVER-21833-compact",
        "created_at": "Wednesday Dec 16, 2015 at 17:41 GMT",
        "updated_at": "Wednesday Dec 16, 2015 at 18:46 GMT",
        "closed_at": "Wednesday Dec 16, 2015 at 18:46 GMT",
        "merged_at": "Wednesday Dec 16, 2015 at 18:46 GMT"
    },
    {
        "key": "WT-2256",
        "number": 2395,
        "state": "closed",
        "title": "WT-2256 - Update WTPERF throttling implementation",
        "body": "Currently used for discussion. Not ready for merge\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 16, 2015 at 01:09 GMT",
        "updated_at": "Tuesday Jan 19, 2016 at 06:53 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 06:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2291",
        "number": 2394,
        "state": "closed",
        "title": "WT-2291: fix for sampling in newly created trees.",
        "body": "@agorrod, for your review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 15, 2015 at 19:43 GMT",
        "updated_at": "Wednesday Dec 16, 2015 at 04:57 GMT",
        "closed_at": "Wednesday Dec 16, 2015 at 04:57 GMT",
        "merged_at": "Wednesday Dec 16, 2015 at 04:57 GMT"
    },
    {
        "key": "WT-2289",
        "number": 2393,
        "state": "closed",
        "title": "WT-2289: second try at fixing the \"fast key check\" code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 15, 2015 at 14:14 GMT",
        "updated_at": "Tuesday Dec 15, 2015 at 15:10 GMT",
        "closed_at": "Tuesday Dec 15, 2015 at 15:10 GMT",
        "merged_at": "Tuesday Dec 15, 2015 at 15:10 GMT"
    },
    {
        "key": "WT-2289",
        "number": 2392,
        "state": "closed",
        "title": "Revert \"WT-2289: fix for the fast key check\"",
        "body": "Reverts wiredtiger/wiredtiger#2391\n\nWhich caused a Jenkins stress test failure.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 15, 2015 at 06:22 GMT",
        "updated_at": "Tuesday Dec 15, 2015 at 06:31 GMT",
        "closed_at": "Tuesday Dec 15, 2015 at 06:31 GMT",
        "merged_at": "Tuesday Dec 15, 2015 at 06:31 GMT"
    },
    {
        "key": "WT-2289",
        "number": 2391,
        "state": "closed",
        "title": "WT-2289: fix for the fast key check",
        "body": "This is a fix for the code added in WT-2231 (#2383).\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 14, 2015 at 23:10 GMT",
        "updated_at": "Tuesday Dec 15, 2015 at 05:33 GMT",
        "closed_at": "Tuesday Dec 15, 2015 at 05:33 GMT",
        "merged_at": "Tuesday Dec 15, 2015 at 05:33 GMT"
    },
    {
        "key": "WT-2281",
        "number": 2390,
        "state": "closed",
        "title": "WT-2281: Dynamically query OS for VM page size",
        "body": "Mmap requires page aligned addresses. The VM page on most architectures, and operating systems is 4kb. Some of the exceptions to this are Solaris on Sparc (8kb), and Linux on PowerPC LE (64kb).\n\nIt is simple and cheap to just query the OS for the page size as part of connection init instead of hard coding it.\n\nTested: Windows, Mac OS X, Linux x86, and Linux ppc64le.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 14, 2015 at 23:03 GMT",
        "updated_at": "Saturday Dec 19, 2015 at 21:01 GMT",
        "closed_at": "Saturday Dec 19, 2015 at 21:01 GMT",
        "merged_at": "Saturday Dec 19, 2015 at 21:01 GMT"
    },
    {
        "key": null,
        "number": 2389,
        "state": "closed",
        "title": "Test out reverting wtperf random seeding.",
        "body": "In order to help isolate performance regressions due to the change.\nThis is never intended to be merged into develop.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 14, 2015 at 22:10 GMT",
        "updated_at": "Wednesday Dec 16, 2015 at 21:50 GMT",
        "closed_at": "Wednesday Dec 16, 2015 at 21:50 GMT",
        "merged_at": null
    },
    {
        "key": "ER-21833",
        "number": 2388,
        "state": "closed",
        "title": "SERVER-21833: fix compaction",
        "body": "@agorrod, this fixes a problem that's effectively turning off compaction. @sueloverso has a test she's cleaning up for inclusion in the tree, obviously, this one needs to go in immediately.\n\nWe can cherry-pick ad33ace if we don't want to merge the whole thing into the MongoDB 3.2 branch.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 14, 2015 at 22:05 GMT",
        "updated_at": "Thursday Dec 17, 2015 at 15:19 GMT",
        "closed_at": "Thursday Dec 17, 2015 at 15:18 GMT",
        "merged_at": "Thursday Dec 17, 2015 at 15:18 GMT"
    },
    {
        "key": "WT-2276",
        "number": 2387,
        "state": "closed",
        "title": "WT-2276 decode checkpoints via 'wt list -c' and via standalone Python utility.",
        "body": "@ddanderson, some suggestions for how this change might be structured inside WiredTiger, feel free to discard it if you don't like it better.\n\nEntirely untested (but it builds & lints cleanly).\n",
        "base_ref": "wt-2276-checkpoint-decode",
        "created_at": "Friday Dec 11, 2015 at 22:53 GMT",
        "updated_at": "Saturday Dec 12, 2015 at 20:40 GMT",
        "closed_at": "Saturday Dec 12, 2015 at 20:39 GMT",
        "merged_at": "Saturday Dec 12, 2015 at 20:39 GMT"
    },
    {
        "key": "WT-2276",
        "number": 2386,
        "state": "closed",
        "title": "WT-2276 decode checkpoints via 'wt list -c' and via standalone Python utility.",
        "body": "`wt list -c` now decodes checkpoints.  Also created a python utility to do the same.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 11, 2015 at 21:11 GMT",
        "updated_at": "Wednesday Dec 30, 2015 at 19:24 GMT",
        "closed_at": "Wednesday Dec 30, 2015 at 19:23 GMT",
        "merged_at": "Wednesday Dec 30, 2015 at 19:23 GMT"
    },
    {
        "key": "WT-2285",
        "number": 2385,
        "state": "closed",
        "title": "WT-2285: configure should set BUFFER_ALIGNMENT_DEFAULT to 4kb on linux",
        "body": "A variable name changed as part of ecc674b8f5fc58c1df9a1c6b957491d73a27603d.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 11, 2015 at 17:53 GMT",
        "updated_at": "Friday Dec 11, 2015 at 19:00 GMT",
        "closed_at": "Friday Dec 11, 2015 at 19:00 GMT",
        "merged_at": "Friday Dec 11, 2015 at 19:00 GMT"
    },
    {
        "key": "WT-2265",
        "number": 2384,
        "state": "closed",
        "title": "WT-2265: Correct PPC64 barriers",
        "body": "Use the cheaper `lwsync` for read and write barriers on PPC64. `lwsync` only allows\nstore#load re-ordering.\n\nSee Book 2, section 4.4.3 in Power ISA 2.07B manual for more details. In figure 5, the manual says that `mbll` and `mbss` map to `lwsync`.\n\nTest: Builds on POWER8 ppc64le, and runs examples.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 11, 2015 at 15:52 GMT",
        "updated_at": "Friday Dec 11, 2015 at 18:55 GMT",
        "closed_at": "Friday Dec 11, 2015 at 18:55 GMT",
        "merged_at": "Friday Dec 11, 2015 at 18:55 GMT"
    },
    {
        "key": "WT-2231",
        "number": 2383,
        "state": "closed",
        "title": "WT-2231: check the leaf page's parent keys before doing the full binary search ",
        "body": "This is a replay of the changes for the previous WT-2231 branch (see pull request #2325) for the individual commit details. There's an additional bug fix over and above those commits, fixing a clang sanitizer error.\n\nIn summary: check the leaf page's parent keys before doing the full binary search of the leaf page, avoiding the binary search entirely when the cursor is being re-positioned, at the cost of two additional searches when the cursor is not being re-positioned. Additionally, do some work to improve WT_REF page hints.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 10, 2015 at 21:47 GMT",
        "updated_at": "Tuesday Dec 15, 2015 at 06:02 GMT",
        "closed_at": "Monday Dec 14, 2015 at 11:46 GMT",
        "merged_at": "Monday Dec 14, 2015 at 11:46 GMT"
    },
    {
        "key": "WT-2099",
        "number": 2382,
        "state": "closed",
        "title": "WT-2099 Account for overflow update structures",
        "body": "that get appended to the update list in page->memory_footprint.\n\n@michaelcahill Please review the fix we discussed last night.  I have run this fix with the failing configuration and made sure we took that path but did not get underflow.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 10, 2015 at 17:53 GMT",
        "updated_at": "Friday Dec 11, 2015 at 01:29 GMT",
        "closed_at": "Friday Dec 11, 2015 at 01:29 GMT",
        "merged_at": "Friday Dec 11, 2015 at 01:29 GMT"
    },
    {
        "key": "WT-2283",
        "number": 2381,
        "state": "closed",
        "title": "WT-2283 Add yield to avoid tight looping.",
        "body": "@michaelcahill This fixes the hang I was seeing in my test/format run.  It hung 100% of the time without this fix and has passed/completed several iterations with it.  However it may be a band-aid like fix as the {{scan_count}} usage is taking the place of read/write lock.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 10, 2015 at 16:19 GMT",
        "updated_at": "Friday Dec 11, 2015 at 12:59 GMT",
        "closed_at": "Friday Dec 11, 2015 at 12:59 GMT",
        "merged_at": "Friday Dec 11, 2015 at 12:59 GMT"
    },
    {
        "key": "WT-2282",
        "number": 2380,
        "state": "closed",
        "title": "WT-2282 Remove last_running_moved from verbose conditional.",
        "body": "@michaelcahill Here's a simple fix but you should review it.  I removed the `last_running_moved` part of the conditional.  Or is the \"pinned\" verbose message more subtle than that and it needs to be moved or copied up into the other part of the new \"want to update\" part?\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 10, 2015 at 16:11 GMT",
        "updated_at": "Monday Jan 04, 2016 at 11:22 GMT",
        "closed_at": "Friday Dec 11, 2015 at 15:58 GMT",
        "merged_at": "Friday Dec 11, 2015 at 15:58 GMT"
    },
    {
        "key": "WT-2269",
        "number": 2378,
        "state": "closed",
        "title": "WT-2269 - Add ability to write config dump",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 10, 2015 at 06:43 GMT",
        "updated_at": "Tuesday Dec 22, 2015 at 16:27 GMT",
        "closed_at": "Tuesday Dec 22, 2015 at 16:27 GMT",
        "merged_at": "Tuesday Dec 22, 2015 at 16:27 GMT"
    },
    {
        "key": "WT-2231",
        "number": 2377,
        "state": "closed",
        "title": "Revert \"WT-2231: check the leaf page's parent keys before doing the full binary search\"",
        "body": "Reverts wiredtiger/wiredtiger#2325, which introduced a segfault.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 10, 2015 at 06:03 GMT",
        "updated_at": "Thursday Dec 10, 2015 at 06:03 GMT",
        "closed_at": "Thursday Dec 10, 2015 at 06:03 GMT",
        "merged_at": "Thursday Dec 10, 2015 at 06:03 GMT"
    },
    {
        "key": "WT-2275",
        "number": 2376,
        "state": "closed",
        "title": "WT-2275: core dump when \"wt dump\" fails.",
        "body": "@michaelcahill, @agorrod: two problems. First, we weren't closing a cursor in a table-cursor open error path (commit 2cc1025), and second, we were looking at `WT_CURSOR.uri` in a cursor close path and it hadn't yet been initialized (commit 5196a17).\n\nPlease check the table-cursor open change carefully, I'm not that comfortable with the table cursor code, I might have gotten it wrong.\n\nAlex, commit 5196a17 is because `WT_CURSOR.uri` is the last thing we fill in when initializing a cursor, and we were using it inside WiredTiger cursor close code. What would you think of disallowing the use of `WT_CURSOR.uri` inside the WiredTiger library, and only allow using `WT_CURSOR.internal_uri`?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 09, 2015 at 16:37 GMT",
        "updated_at": "Thursday Dec 10, 2015 at 04:59 GMT",
        "closed_at": "Thursday Dec 10, 2015 at 04:59 GMT",
        "merged_at": "Thursday Dec 10, 2015 at 04:59 GMT"
    },
    {
        "key": "WT-2177",
        "number": 2375,
        "state": "closed",
        "title": "WT-2177 Add an optional random seed to WiredTiger rand implementation",
        "body": "From @fedorova.\n\nAdded a function to optionally initialize a seed, used by __wt_random(), from a random number. Added a call to this function to wtperf. Please take a look.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 09, 2015 at 03:31 GMT",
        "updated_at": "Thursday Dec 10, 2015 at 03:34 GMT",
        "closed_at": "Thursday Dec 10, 2015 at 03:34 GMT",
        "merged_at": "Thursday Dec 10, 2015 at 03:34 GMT"
    },
    {
        "key": "WT-2177",
        "number": 2374,
        "state": "closed",
        "title": "WT-2177 rand seed",
        "body": "Added a function to optionally initialize a seed, used by __wt_random(), from a random number. Added a call to this function to wtperf. Please take a look.\n",
        "base_ref": "master",
        "created_at": "Wednesday Dec 09, 2015 at 01:46 GMT",
        "updated_at": "Wednesday Dec 09, 2015 at 03:31 GMT",
        "closed_at": "Wednesday Dec 09, 2015 at 03:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2272",
        "number": 2373,
        "state": "closed",
        "title": "WT-2272 Flag an error if there is a failure clearing the eviction walk point.",
        "body": "Calling code generally expects the clear to work.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 08, 2015 at 22:25 GMT",
        "updated_at": "Wednesday Dec 09, 2015 at 03:10 GMT",
        "closed_at": "Wednesday Dec 09, 2015 at 03:10 GMT",
        "merged_at": "Wednesday Dec 09, 2015 at 03:10 GMT"
    },
    {
        "key": "WT-2229",
        "number": 2372,
        "state": "closed",
        "title": "WT-2229 Add compression skipping to log compression.",
        "body": "@keithbostic Here are changes to generalize the tracking functions and add it into logging for your consideration. \n",
        "base_ref": "wt-2229-compression-backoff",
        "created_at": "Tuesday Dec 08, 2015 at 18:23 GMT",
        "updated_at": "Friday Dec 11, 2015 at 20:16 GMT",
        "closed_at": "Friday Dec 11, 2015 at 20:16 GMT",
        "merged_at": "Friday Dec 11, 2015 at 20:16 GMT"
    },
    {
        "key": "WT-2235",
        "number": 2371,
        "state": "closed",
        "title": "WT-2235. Changes to wt printlog to add -x option and remove -p.",
        "body": "wt printlog -x produces extra \"-hex\" fields when appropriate. For example,\nwhen printing a \"row_put\" entry, in addition to \"key\" and \"value\" (printed\nas JSON strings with Unicode escapes), there will also be \"key-hex\" and\n\"key-value\" entries in the JSON dictionary, containing a hex dump for each\nof these fields.\n\nFor consistency with existing WT outputs, all hex output is in lower case.\nOne visible change is that our Unicode escapes in JSON, also used for\n'wt dump -j', now produce hex characters in lower case ('a'-'f'). Before,\n'wt dump -j' produced upper case hex (using 'A'-'F').\n\nAs part of testing, I took outputs from test_txn08 and validated them using jsonlint.com .\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 07, 2015 at 20:08 GMT",
        "updated_at": "Wednesday Dec 09, 2015 at 18:25 GMT",
        "closed_at": "Wednesday Dec 09, 2015 at 18:24 GMT",
        "merged_at": "Wednesday Dec 09, 2015 at 18:24 GMT"
    },
    {
        "key": null,
        "number": 2370,
        "state": "closed",
        "title": "Cut WiredTiger 2.7.0 release",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 07, 2015 at 04:23 GMT",
        "updated_at": "Tuesday Dec 08, 2015 at 03:29 GMT",
        "closed_at": "Tuesday Dec 08, 2015 at 03:29 GMT",
        "merged_at": "Tuesday Dec 08, 2015 at 03:29 GMT"
    },
    {
        "key": "WT-2262",
        "number": 2369,
        "state": "closed",
        "title": "WT-2262: Have random sampling walk the tree so it isn't biased in skewed trees.",
        "body": "@michaelcahill, some changes for your consideration.\n",
        "base_ref": "WT-2262",
        "created_at": "Saturday Dec 05, 2015 at 18:54 GMT",
        "updated_at": "Monday Jan 04, 2016 at 11:21 GMT",
        "closed_at": "Friday Dec 11, 2015 at 06:00 GMT",
        "merged_at": "Friday Dec 11, 2015 at 06:00 GMT"
    },
    {
        "key": "WT-2246",
        "number": 2368,
        "state": "closed",
        "title": "WT-2246: faster column appends",
        "body": "Ready for review/merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 21:50 GMT",
        "updated_at": "Friday Dec 11, 2015 at 06:01 GMT",
        "closed_at": "Friday Dec 11, 2015 at 06:01 GMT",
        "merged_at": "Friday Dec 11, 2015 at 06:01 GMT"
    },
    {
        "key": "WT-2266",
        "number": 2367,
        "state": "closed",
        "title": "WT-2266 Add max_latency_fatal and min_throughput_fatal settings.",
        "body": "@daveh86 Please review this change to add a warning/failure selection to the max_latency and min_throughput.  It may be useful to crash or warn in the test framework you're working on.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 20:54 GMT",
        "updated_at": "Wednesday Dec 09, 2015 at 04:04 GMT",
        "closed_at": "Wednesday Dec 09, 2015 at 04:04 GMT",
        "merged_at": "Wednesday Dec 09, 2015 at 04:04 GMT"
    },
    {
        "key": "WT-2060",
        "number": 2366,
        "state": "closed",
        "title": "WT-2060: minor statistics cleanup.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 16:34 GMT",
        "updated_at": "Friday Dec 11, 2015 at 05:01 GMT",
        "closed_at": "Friday Dec 11, 2015 at 05:01 GMT",
        "merged_at": "Friday Dec 11, 2015 at 05:01 GMT"
    },
    {
        "key": null,
        "number": 2365,
        "state": "closed",
        "title": "Enforce whitespace guidelines on bench/wtperf.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 13:49 GMT",
        "updated_at": "Friday Dec 04, 2015 at 18:51 GMT",
        "closed_at": "Friday Dec 04, 2015 at 18:51 GMT",
        "merged_at": "Friday Dec 04, 2015 at 18:51 GMT"
    },
    {
        "key": "WT-2264",
        "number": 2364,
        "state": "closed",
        "title": "WT-2264 Don't have write leaves chase inserts indefinitely,",
        "body": "Cut off inserts that are more recent than when write leaves starts.\n\nThis is just the first step.  The next part is to stop checkpoints stalling.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 07:07 GMT",
        "updated_at": "Wednesday Feb 24, 2016 at 23:19 GMT",
        "closed_at": "Wednesday Feb 24, 2016 at 23:19 GMT",
        "merged_at": "Wednesday Feb 24, 2016 at 23:19 GMT"
    },
    {
        "key": "WT-2262",
        "number": 2363,
        "state": "closed",
        "title": "WT-2262 Have random sampling walk the tree so it isn't biased in skewed trees.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 07:04 GMT",
        "updated_at": "Monday Dec 14, 2015 at 12:40 GMT",
        "closed_at": "Monday Dec 14, 2015 at 12:39 GMT",
        "merged_at": "Monday Dec 14, 2015 at 12:39 GMT"
    },
    {
        "key": null,
        "number": 2362,
        "state": "closed",
        "title": "Refactoring conditional directives for incomplete if conditions.",
        "body": "A suggestion to compile entire statements and expressions, as suggested by code style guidelines from the Linux Kernel and practitioners.\n- [Linux kernel coding style](https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/CodingStyle#n892)\n- [Living in the #ifdef Hell](https://www.cqse.eu/en/blog/living-in-the-ifdef-hell/)\n\nIt might improve code understanding, maintainability and error-proneness.\n",
        "base_ref": "master",
        "created_at": "Friday Dec 04, 2015 at 06:57 GMT",
        "updated_at": "Tuesday Dec 22, 2015 at 07:52 GMT",
        "closed_at": "Friday Dec 11, 2015 at 20:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2260",
        "number": 2361,
        "state": "closed",
        "title": "WT-2260 Avoid adding internal pages to the eviction queue.",
        "body": "We added code to make eviction fairer when there are lots of files\nopen, but it had the effect that when there are only a few files\nopen eviction could add lots of internal pages to the eviction\nqueue, since it focused on a small area of the tree.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 05:26 GMT",
        "updated_at": "Tuesday Dec 08, 2015 at 03:21 GMT",
        "closed_at": "Tuesday Dec 08, 2015 at 03:21 GMT",
        "merged_at": "Tuesday Dec 08, 2015 at 03:21 GMT"
    },
    {
        "key": "WT-2265",
        "number": 2360,
        "state": "closed",
        "title": "WT-2265 - increase mongodb-oplog wtperf workload throttle to compensate for fix",
        "body": "@agorrod, can you have a quick look at this change.\n\nIt fixes the regression we have seen in the WTPERF truncate workload in jenkins noticed by @sueloverso in https://jira.mongodb.org/browse/WT-2245\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 04, 2015 at 00:57 GMT",
        "updated_at": "Friday Dec 04, 2015 at 04:57 GMT",
        "closed_at": "Friday Dec 04, 2015 at 04:57 GMT",
        "merged_at": "Friday Dec 04, 2015 at 04:57 GMT"
    },
    {
        "key": "WT-2259",
        "number": 2359,
        "state": "closed",
        "title": "WT-2259: fix __wt_evict_file_exclusive_on function error handling",
        "body": "@agorrod, I agree with your comment, here's the change for your review.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 03, 2015 at 01:03 GMT",
        "updated_at": "Tuesday Dec 08, 2015 at 06:45 GMT",
        "closed_at": "Tuesday Dec 08, 2015 at 06:45 GMT",
        "merged_at": "Tuesday Dec 08, 2015 at 06:45 GMT"
    },
    {
        "key": "WT-2258",
        "number": 2358,
        "state": "closed",
        "title": "WT-2258: ignore pre-load on direct I/O files.",
        "body": "@michaelcahill, @agorrod, this is a bug fix to ignore pre-loading on any file configured for direct I/O.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 02, 2015 at 23:07 GMT",
        "updated_at": "Wednesday Dec 09, 2015 at 04:31 GMT",
        "closed_at": "Wednesday Dec 09, 2015 at 04:31 GMT",
        "merged_at": "Wednesday Dec 09, 2015 at 04:31 GMT"
    },
    {
        "key": "WT-2256",
        "number": 2357,
        "state": "closed",
        "title": "WT-2256 Fix interval timer for wtperf throttling.",
        "body": "@daveh86 or @agorrod Please review this change that fixes throttling.  We need to set the timer to the post-sleep time.  This is what was causing the nearly 2x number of ops.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 02, 2015 at 20:40 GMT",
        "updated_at": "Thursday Dec 03, 2015 at 00:24 GMT",
        "closed_at": "Thursday Dec 03, 2015 at 00:24 GMT",
        "merged_at": "Thursday Dec 03, 2015 at 00:24 GMT"
    },
    {
        "key": "WT-2257",
        "number": 2356,
        "state": "closed",
        "title": "WT-2257 Fixes when given multiple thread workload configs.",
        "body": "@daveh86 or @agorrod please review this fix for the issues regarding multiple \"thread\" workload configs.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 02, 2015 at 20:38 GMT",
        "updated_at": "Thursday Dec 03, 2015 at 14:46 GMT",
        "closed_at": "Thursday Dec 03, 2015 at 14:46 GMT",
        "merged_at": "Thursday Dec 03, 2015 at 14:46 GMT"
    },
    {
        "key": "WT-2113",
        "number": 2355,
        "state": "closed",
        "title": "WT-2113 Retry updating the oldest id if we race.",
        "body": "@michaelcahill Please review and we should chat about this fix for the EBUSY return during truncate01.  This fix passes all of my repro cases and I have confirmed that it hit the race during those runs.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 02, 2015 at 15:20 GMT",
        "updated_at": "Thursday Dec 10, 2015 at 06:23 GMT",
        "closed_at": "Thursday Dec 10, 2015 at 06:22 GMT",
        "merged_at": "Thursday Dec 10, 2015 at 06:22 GMT"
    },
    {
        "key": "ER-21553",
        "number": 2354,
        "state": "closed",
        "title": "SERVER-21553 3.0 backport",
        "body": "Also includes fixes for:\nSERVER-21568 - use after free\nWT-2251 - addr structure leak\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Wednesday Dec 02, 2015 at 05:53 GMT",
        "updated_at": "Wednesday Dec 02, 2015 at 11:00 GMT",
        "closed_at": "Wednesday Dec 02, 2015 at 11:00 GMT",
        "merged_at": "Wednesday Dec 02, 2015 at 11:00 GMT"
    },
    {
        "key": "WT-2253",
        "number": 2353,
        "state": "closed",
        "title": "WT-2253 Evict pages left behind by in-memory splits.",
        "body": " Include pages over the in-memory splits threshold when in the \"would block\" phase of eviction.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 02, 2015 at 00:25 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:15 GMT",
        "closed_at": "Wednesday Dec 02, 2015 at 01:35 GMT",
        "merged_at": "Wednesday Dec 02, 2015 at 01:35 GMT"
    },
    {
        "key": "ER-21553",
        "number": 2352,
        "state": "closed",
        "title": "SERVER-21553 Free blocks during reverse splits.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 02, 2015 at 00:20 GMT",
        "updated_at": "Tuesday Mar 29, 2016 at 03:05 GMT",
        "closed_at": "Wednesday Dec 02, 2015 at 03:23 GMT",
        "merged_at": "Wednesday Dec 02, 2015 at 03:23 GMT"
    },
    {
        "key": "WT-2253",
        "number": 2351,
        "state": "closed",
        "title": "WT-2253: prioritize WT_READGEN_OLDEST pages for eviction.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 01, 2015 at 23:31 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:15 GMT",
        "closed_at": "Wednesday Dec 02, 2015 at 02:22 GMT",
        "merged_at": "Wednesday Dec 02, 2015 at 02:22 GMT"
    },
    {
        "key": "WT-2251",
        "number": 2350,
        "state": "closed",
        "title": "WT-2251 Free addresses when we discard deleted page references.",
        "body": "There was a lot of repeated code to check for offpage and free ref->addr, create an inlined function.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 01, 2015 at 03:34 GMT",
        "updated_at": "Tuesday Mar 29, 2016 at 03:05 GMT",
        "closed_at": "Tuesday Dec 01, 2015 at 06:05 GMT",
        "merged_at": "Tuesday Dec 01, 2015 at 06:05 GMT"
    },
    {
        "key": "ER-21691",
        "number": 2349,
        "state": "closed",
        "title": "SERVER-21691 Avoid insert stalls",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 01, 2015 at 01:58 GMT",
        "updated_at": "Tuesday Dec 01, 2015 at 03:45 GMT",
        "closed_at": "Tuesday Dec 01, 2015 at 03:33 GMT",
        "merged_at": "Tuesday Dec 01, 2015 at 03:33 GMT"
    },
    {
        "key": "WT-2142",
        "number": 2348,
        "state": "closed",
        "title": "WT-2142 test cleanup",
        "body": "WT-2142.  At the end of a test run, all open connections should be closed to prevent cascading errors. Clean up and (mostly) standardize how connection configuration is added to and modified.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 30, 2015 at 21:58 GMT",
        "updated_at": "Wednesday Jan 13, 2016 at 20:35 GMT",
        "closed_at": "Monday Jan 04, 2016 at 22:57 GMT",
        "merged_at": "Monday Jan 04, 2016 at 22:57 GMT"
    },
    {
        "key": "WT-2250",
        "number": 2347,
        "state": "closed",
        "title": "WT-2250 Minor fix.  Use SET instead of INCRV for stat.",
        "body": "@keithbostic Here's the minor change for the logging stat.  Please review and merge when develop is open again.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 30, 2015 at 20:06 GMT",
        "updated_at": "Monday Nov 30, 2015 at 20:44 GMT",
        "closed_at": "Monday Nov 30, 2015 at 20:43 GMT",
        "merged_at": "Monday Nov 30, 2015 at 20:43 GMT"
    },
    {
        "key": "WT-2249",
        "number": 2346,
        "state": "closed",
        "title": "WT-2249 Keep eviction stuck until cache usage is under 100%.",
        "body": "Fix a real bug: STUCK is a cache flag, not a cache->state flag.\n\nDon't try to do eviction when dumping the cache, and only kill processes if no\npages have been evicted since the STUCK flag was first set.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 30, 2015 at 06:52 GMT",
        "updated_at": "Tuesday Dec 01, 2015 at 01:29 GMT",
        "closed_at": "Tuesday Dec 01, 2015 at 01:29 GMT",
        "merged_at": "Tuesday Dec 01, 2015 at 01:29 GMT"
    },
    {
        "key": "WT-2247",
        "number": 2345,
        "state": "closed",
        "title": "WT-2247, WT-2312: variable-length column-store in-memory page splits",
        "body": "Replaces #2343.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 30, 2015 at 03:38 GMT",
        "updated_at": "Tuesday Jan 19, 2016 at 14:07 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 14:07 GMT",
        "merged_at": "Tuesday Jan 19, 2016 at 14:07 GMT"
    },
    {
        "key": "WT-2248",
        "number": 2344,
        "state": "closed",
        "title": "WT-2248: WT_SESSION.close is updating WT_CONNECTION_IMPL.default_session",
        "body": "@michaelcahill, can you do a quick sanity check on this one?\n\nI think it's safe (I'm using the same trick as in `__conn_close`), but wanted to be sure.\n\nThe repro is watching `WT_SESSION.name` change as we work our way through `__wt_connection_close`.\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 28, 2015 at 21:01 GMT",
        "updated_at": "Sunday Nov 29, 2015 at 23:01 GMT",
        "closed_at": "Sunday Nov 29, 2015 at 23:00 GMT",
        "merged_at": "Sunday Nov 29, 2015 at 23:00 GMT"
    },
    {
        "key": "WT-2247",
        "number": 2343,
        "state": "closed",
        "title": "WT-2247: variable-length column-store in-memory page splits.",
        "body": "@michaelcahill, @agorrod, this change supports in-memory page splits for variable-length column-store trees.\n\nI branched off WT-2244 (#2340) because there was stuff there that would collide, but that was just for convenience, if WT-2244 goes in before we open up develop more generally, I'll rebase the pull request.\n",
        "base_ref": "WT-2244",
        "created_at": "Saturday Nov 28, 2015 at 19:49 GMT",
        "updated_at": "Monday Nov 30, 2015 at 03:39 GMT",
        "closed_at": "Monday Nov 30, 2015 at 03:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2245",
        "number": 2342,
        "state": "closed",
        "title": "WT-2245 - Add a multiplier to the truncate stones to deal with very high throughput cases",
        "body": "\u2026gh throughput cases\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 27, 2015 at 03:46 GMT",
        "updated_at": "Wednesday Dec 02, 2015 at 23:49 GMT",
        "closed_at": "Wednesday Dec 02, 2015 at 23:49 GMT",
        "merged_at": "Wednesday Dec 02, 2015 at 23:49 GMT"
    },
    {
        "key": "ER-21553",
        "number": 2341,
        "state": "closed",
        "title": "SERVER-21553 Enable fast-path truncate after splits.",
        "body": "A truncate operation attempts to mark leaf pages deleted without reading them\ninto cache.  One of the conditions that has to be met for that fast-path\ntruncate of pages is that the leaf page not contain overflow items (or we would\nneed to read it in order to delete the overflow items).\n\nThe \"no overflow\" flag was not being preseved across internal page splits, so\nrecent changes to splits were defeating fast-path truncation.\n\nAdd tracking of the \"no overflow\" flag for in-memory page addresses so\nfast-path truncates work after internal pages are split.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 27, 2015 at 01:30 GMT",
        "updated_at": "Saturday Nov 28, 2015 at 01:04 GMT",
        "closed_at": "Friday Nov 27, 2015 at 05:39 GMT",
        "merged_at": "Friday Nov 27, 2015 at 05:39 GMT"
    },
    {
        "key": "WT-2244",
        "number": 2340,
        "state": "closed",
        "title": "WT-2244 - Trigger in-memory splits sooner.",
        "body": "Specifically, do an in-memory split when we hit 80% of memory_page_max.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 26, 2015 at 04:29 GMT",
        "updated_at": "Monday Nov 30, 2015 at 03:44 GMT",
        "closed_at": "Monday Nov 30, 2015 at 03:36 GMT",
        "merged_at": "Monday Nov 30, 2015 at 03:36 GMT"
    },
    {
        "key": "WT-2243",
        "number": 2339,
        "state": "closed",
        "title": "WT-2243 Don't keep transaction IDs pinned for reading from checkpoints.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 26, 2015 at 04:29 GMT",
        "updated_at": "Tuesday Dec 08, 2015 at 03:09 GMT",
        "closed_at": "Friday Nov 27, 2015 at 02:49 GMT",
        "merged_at": "Friday Nov 27, 2015 at 02:49 GMT"
    },
    {
        "key": "WT-2242",
        "number": 2338,
        "state": "closed",
        "title": "WT-2242 dead tree eviction",
        "body": "@agorrod, @michaelcahill: some changes to prioritize the eviction of dead trees.\n\nThis tree is only very lightly tested (especially since we don't have tests that do lots of drops).\n\nI think it's pretty reasonable except for the loop in `__evict_walk`: I didn't want to hold the walk lock too long, so I cycled around the dead tree, without switching out the current data-handle, and that's messy, but I didn't see anything cleaner without restructuring.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2015 at 23:56 GMT",
        "updated_at": "Tuesday Jan 19, 2016 at 12:59 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 12:59 GMT",
        "merged_at": "Tuesday Jan 19, 2016 at 12:59 GMT"
    },
    {
        "key": "WT-2241",
        "number": 2337,
        "state": "closed",
        "title": "WT-2241 Use a lock to protect transaction ID allocation.",
        "body": "We still need to make sure that transaction IDs are published in the state\ntable before the current ID is incremented so that snapshot reads don't see\nuncommitted updates.  However, a lock simplifies the code and performs better\nin testing than the initial fix.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2015 at 11:12 GMT",
        "updated_at": "Wednesday Dec 02, 2015 at 04:48 GMT",
        "closed_at": "Thursday Nov 26, 2015 at 00:41 GMT",
        "merged_at": "Thursday Nov 26, 2015 at 00:41 GMT"
    },
    {
        "key": "ER-21619",
        "number": 2336,
        "state": "closed",
        "title": "SERVER-21619 Don't do internal page splits after a tree is marked DEAD.",
        "body": "It leads to problems where eviction attempts to write back to a file after the block manager is already closed.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 25, 2015 at 05:41 GMT",
        "updated_at": "Thursday Nov 26, 2015 at 01:18 GMT",
        "closed_at": "Thursday Nov 26, 2015 at 01:18 GMT",
        "merged_at": "Thursday Nov 26, 2015 at 01:18 GMT"
    },
    {
        "key": "WT-2234",
        "number": 2335,
        "state": "closed",
        "title": "WT-2234: Coverity analysis warnings ",
        "body": "In __wt_config_gets_def() there is a conditional reference of cfg[2]. Presumably this means that cfg strings are de facto required to have at least 3 entries. If so, would never manifest as a runtime bug, but it's easy enough to satisfy Coverity.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 24, 2015 at 16:41 GMT",
        "updated_at": "Wednesday Nov 25, 2015 at 14:24 GMT",
        "closed_at": "Wednesday Nov 25, 2015 at 14:24 GMT",
        "merged_at": "Wednesday Nov 25, 2015 at 14:24 GMT"
    },
    {
        "key": "ER-21641",
        "number": 2334,
        "state": "closed",
        "title": "SERVER-21641  Resolve Coverity analysis warnings in join code.",
        "body": "In __wt_config_gets_def() there is a conditional reference of cfg[2].  Presumably this means that cfg strings are de facto required to have at least 3 entries.  If so, would never manifest as a runtime bug, but it's easy enough to satisfy Coverity.\n",
        "base_ref": "master",
        "created_at": "Tuesday Nov 24, 2015 at 16:37 GMT",
        "updated_at": "Thursday Nov 26, 2015 at 06:04 GMT",
        "closed_at": "Tuesday Nov 24, 2015 at 16:37 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2237",
        "number": 2333,
        "state": "closed",
        "title": "WT-2237 Avoid yields if we race allocating transaction IDs.",
        "body": "It had a major perf impact on parallel populate workloads including YCSB.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 24, 2015 at 13:02 GMT",
        "updated_at": "Wednesday Dec 02, 2015 at 04:48 GMT",
        "closed_at": "Tuesday Nov 24, 2015 at 13:17 GMT",
        "merged_at": "Tuesday Nov 24, 2015 at 13:17 GMT"
    },
    {
        "key": "WT-2216",
        "number": 2332,
        "state": "closed",
        "title": "WT-2216: remove minor test in the row-store search loop.",
        "body": "@michaelcahill, this is the change for WT-2216, I'm just getting it into the list of branches for consideration when the tree opens up.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 24, 2015 at 12:44 GMT",
        "updated_at": "Thursday Dec 10, 2015 at 05:07 GMT",
        "closed_at": "Thursday Dec 10, 2015 at 05:07 GMT",
        "merged_at": "Thursday Dec 10, 2015 at 05:07 GMT"
    },
    {
        "key": "WT-2237",
        "number": 2331,
        "state": "closed",
        "title": "WT-2237 Have threads publish unique transaction IDs so that updates always become visible immediately on commit",
        "body": "Previously, WiredTiger avoided locking in the transaction subsystem by having\nthreads race to allocate transaction IDs. Only one thread wins the race, but\nlosing threads could temporarily leave a transaction ID published in the global\nstate table.  If the winning thread completed its transaction quickly enough,\nits changes may not become visible immediately to readers (until the losing\nthreads have woken up and allocated a new ID).\n\nThis change separates ID allocation from the notion of a shared \"current\"\nvalue.  Every thread gets a unique transaction ID, and spins to update the\ncurrent value.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 24, 2015 at 05:07 GMT",
        "updated_at": "Wednesday Dec 02, 2015 at 04:48 GMT",
        "closed_at": "Tuesday Nov 24, 2015 at 05:47 GMT",
        "merged_at": "Tuesday Nov 24, 2015 at 05:47 GMT"
    },
    {
        "key": "ER-21027",
        "number": 2330,
        "state": "closed",
        "title": "SERVER-21027 Reverse split if there are many deleted pages (3.0)",
        "body": "Many manual merge decisions - worth reviewing if looking for problems.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Tuesday Nov 24, 2015 at 03:14 GMT",
        "updated_at": "Wednesday Jan 13, 2016 at 20:36 GMT",
        "closed_at": "Friday Nov 27, 2015 at 03:27 GMT",
        "merged_at": "Friday Nov 27, 2015 at 03:27 GMT"
    },
    {
        "key": "WT-2233",
        "number": 2329,
        "state": "closed",
        "title": "WT-2233 Base aggressive eviction on the number of pages being evicted.",
        "body": "Not the number of loops since we hit the eviction target.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 23, 2015 at 07:36 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 00:44 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 04:14 GMT",
        "merged_at": null
    },
    {
        "key": "ER-21585",
        "number": 2328,
        "state": "closed",
        "title": "SERVER-21585 Don't use the lookaside file until the cache is stuck full.",
        "body": "Also only write into the lookaside file from internal (aka eviction) threads, so application threads don't pay the performance cost.\n\nIt is possible that the cache stuck check is too restrictive, but using only the eviction aggressive flag can result in writing a lot of content to the lookaside file when pages can still be evicted.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 23, 2015 at 06:53 GMT",
        "updated_at": "Monday Nov 23, 2015 at 13:52 GMT",
        "closed_at": "Monday Nov 23, 2015 at 13:52 GMT",
        "merged_at": "Monday Nov 23, 2015 at 13:52 GMT"
    },
    {
        "key": "ER-21585",
        "number": 2327,
        "state": "closed",
        "title": "SERVER-21585 Clean up LAS based on the current count of inserted records",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 23, 2015 at 06:51 GMT",
        "updated_at": "Monday Nov 23, 2015 at 13:28 GMT",
        "closed_at": "Monday Nov 23, 2015 at 13:28 GMT",
        "merged_at": "Monday Nov 23, 2015 at 13:28 GMT"
    },
    {
        "key": "WT-2198",
        "number": 2326,
        "state": "closed",
        "title": "WT-2198: rework column store bulk-load.",
        "body": "@agorrod, @michaelcahill, here are the changes for WT-2198, for your review/consideration.\n\n@michaelcahill, I didn't change the `wt load` command to use a bulk cursor. Since it can't work on anything other than simple tables, I doubt `wt load` will be a performance issue for anyone. Let me know if you want that work done, I could certainly add a `bulk` flag to the command.\n",
        "base_ref": "develop",
        "created_at": "Sunday Nov 22, 2015 at 19:36 GMT",
        "updated_at": "Wednesday Dec 09, 2015 at 03:33 GMT",
        "closed_at": "Wednesday Dec 09, 2015 at 03:33 GMT",
        "merged_at": "Wednesday Dec 09, 2015 at 03:33 GMT"
    },
    {
        "key": "WT-2231",
        "number": 2325,
        "state": "closed",
        "title": "WT-2231: check the leaf page's parent keys before doing the full binary search",
        "body": "@agorrod, @michaelcahill, for your review/consideration.\n\nI've only done the code for row-store, if you decide we want this change I'll do the column-store version.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 20, 2015 at 17:38 GMT",
        "updated_at": "Thursday Dec 10, 2015 at 21:16 GMT",
        "closed_at": "Thursday Dec 10, 2015 at 05:23 GMT",
        "merged_at": "Thursday Dec 10, 2015 at 05:23 GMT"
    },
    {
        "key": "WT-2230",
        "number": 2324,
        "state": "closed",
        "title": "WT-2230: multi-split error path",
        "body": "@agorrod, @michaelcahill, for your consideration/review.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 20, 2015 at 15:54 GMT",
        "updated_at": "Thursday Nov 26, 2015 at 04:47 GMT",
        "closed_at": "Thursday Nov 26, 2015 at 04:47 GMT",
        "merged_at": "Thursday Nov 26, 2015 at 04:47 GMT"
    },
    {
        "key": "ER-21568",
        "number": 2323,
        "state": "closed",
        "title": "SERVER-21568 Fix a use after-free",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Nov 20, 2015 at 02:22 GMT",
        "updated_at": "Sunday Jan 10, 2016 at 01:01 GMT",
        "closed_at": "Friday Nov 20, 2015 at 03:42 GMT",
        "merged_at": "Friday Nov 20, 2015 at 03:42 GMT"
    },
    {
        "key": "WT-2229",
        "number": 2322,
        "state": "closed",
        "title": "WT-2229: failed compression back-off",
        "body": "@agorrod, @sueloverso, @michaelcahill, for your review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2015 at 18:01 GMT",
        "updated_at": "Thursday Jan 28, 2016 at 04:55 GMT",
        "closed_at": "Thursday Jan 28, 2016 at 04:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2227",
        "number": 2321,
        "state": "closed",
        "title": "WT-2227 Resolve lint errors in join implementation",
        "body": "@keithbostic, can you review and check with lint?  Thanks!\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2015 at 15:56 GMT",
        "updated_at": "Thursday Nov 19, 2015 at 18:13 GMT",
        "closed_at": "Thursday Nov 19, 2015 at 18:13 GMT",
        "merged_at": "Thursday Nov 19, 2015 at 18:13 GMT"
    },
    {
        "key": "WT-2228",
        "number": 2320,
        "state": "closed",
        "title": "WT-2228: avoid unnecessary raw-compression calls.",
        "body": "@agorrod, @michaelcahill, @sueloverso: for review/consideration.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2015 at 15:23 GMT",
        "updated_at": "Thursday Nov 26, 2015 at 04:42 GMT",
        "closed_at": "Thursday Nov 26, 2015 at 04:42 GMT",
        "merged_at": "Thursday Nov 26, 2015 at 04:42 GMT"
    },
    {
        "key": null,
        "number": 2319,
        "state": "closed",
        "title": "Minor __wt_errx cleanup.",
        "body": "@sueloverso, would you please do a quick skim?\n\nThanks.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2015 at 14:19 GMT",
        "updated_at": "Thursday Nov 19, 2015 at 14:55 GMT",
        "closed_at": "Thursday Nov 19, 2015 at 14:55 GMT",
        "merged_at": "Thursday Nov 19, 2015 at 14:55 GMT"
    },
    {
        "key": null,
        "number": 2318,
        "state": "closed",
        "title": "Bump the WiredTiger version to 2.7.0 in preparation for a new release.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2015 at 06:00 GMT",
        "updated_at": "Thursday Nov 19, 2015 at 06:08 GMT",
        "closed_at": "Thursday Nov 19, 2015 at 06:08 GMT",
        "merged_at": "Thursday Nov 19, 2015 at 06:08 GMT"
    },
    {
        "key": "WT-1315",
        "number": 2317,
        "state": "closed",
        "title": "WT-1315 Fix some leaks with join cursors.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 19, 2015 at 03:59 GMT",
        "updated_at": "Thursday Nov 19, 2015 at 04:30 GMT",
        "closed_at": "Thursday Nov 19, 2015 at 04:29 GMT",
        "merged_at": "Thursday Nov 19, 2015 at 04:29 GMT"
    },
    {
        "key": "WT-2215",
        "number": 2316,
        "state": "closed",
        "title": "WT-2215 Use 32-bit LSN file and offsets.  Set LSNs as a 64-bit value.",
        "body": "@michaelcahill Please review this set of changes to make LSNs a single 64 bit value that we can atomically update.  I created macros to set and get the file and offset part of that value.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 18, 2015 at 20:09 GMT",
        "updated_at": "Wednesday Jan 27, 2016 at 03:29 GMT",
        "closed_at": "Wednesday Jan 27, 2016 at 03:29 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2224",
        "number": 2315,
        "state": "closed",
        "title": "WT-2224: use the split-safe-free function to free the WT_REF's page-delete information",
        "body": "",
        "base_ref": "WT-2224",
        "created_at": "Wednesday Nov 18, 2015 at 15:57 GMT",
        "updated_at": "Wednesday Nov 18, 2015 at 23:22 GMT",
        "closed_at": "Wednesday Nov 18, 2015 at 23:22 GMT",
        "merged_at": "Wednesday Nov 18, 2015 at 23:22 GMT"
    },
    {
        "key": "WT-2224",
        "number": 2314,
        "state": "closed",
        "title": "WT-2224 Track which deleted refs are discarded by a split.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 18, 2015 at 11:01 GMT",
        "updated_at": "Wednesday Nov 18, 2015 at 23:21 GMT",
        "closed_at": "Wednesday Nov 18, 2015 at 23:21 GMT",
        "merged_at": "Wednesday Nov 18, 2015 at 23:21 GMT"
    },
    {
        "key": "WT-2222",
        "number": 2313,
        "state": "closed",
        "title": "WT-2222 Add statistics for named snapshots.",
        "body": "New statistics are:\n- pinned by named snapshots\n- number of named snapshots created\n- number of named snapshots dropped\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 18, 2015 at 05:41 GMT",
        "updated_at": "Thursday Nov 19, 2015 at 02:01 GMT",
        "closed_at": "Thursday Nov 19, 2015 at 02:01 GMT",
        "merged_at": "Thursday Nov 19, 2015 at 02:01 GMT"
    },
    {
        "key": "WT-2220",
        "number": 2312,
        "state": "closed",
        "title": "WT-2220 Create WT_TIMEDIFF_US and fix use of constants.",
        "body": "@agorrod Here's a branch for your consideration.  I added `WT_TIMEDIFF_US` which included creating `WT_THOUSAND`.  Most of this diff is actually fixing the use of that and other constants.\n",
        "base_ref": "wt-2220-wt_timediff",
        "created_at": "Tuesday Nov 17, 2015 at 17:48 GMT",
        "updated_at": "Tuesday Nov 17, 2015 at 22:15 GMT",
        "closed_at": "Tuesday Nov 17, 2015 at 22:15 GMT",
        "merged_at": "Tuesday Nov 17, 2015 at 22:15 GMT"
    },
    {
        "key": "WT-2182",
        "number": 2310,
        "state": "closed",
        "title": "WT-2182: continue the reverse split even if the resulting internal page is empty ",
        "body": "@michaelcahill, for your review/consideration: I can't think of a reason we can't leave one of the internal page's WT_REF slots in the WT_REF_DELETED state, and continue with the reverse split. I arbitrarily picked the first slot.\n",
        "base_ref": "wt-2182-empty-parent",
        "created_at": "Tuesday Nov 17, 2015 at 13:35 GMT",
        "updated_at": "Tuesday Nov 17, 2015 at 22:39 GMT",
        "closed_at": "Tuesday Nov 17, 2015 at 22:39 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2182",
        "number": 2309,
        "state": "closed",
        "title": "WT-2182: update the empty WT_REF before trying the reverse split.",
        "body": "@michaelcahill, for your review/consideration: reverts 846125e by setting the WT_REF state to WT_REF_DELETED before trying the reverse split.\n",
        "base_ref": "wt-2182-split-up-the-tree-2",
        "created_at": "Tuesday Nov 17, 2015 at 13:33 GMT",
        "updated_at": "Tuesday Nov 17, 2015 at 22:39 GMT",
        "closed_at": "Tuesday Nov 17, 2015 at 22:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2220",
        "number": 2308,
        "state": "closed",
        "title": "WT-2220 Split WT_TIMEDIFF macro into unit specific macros.",
        "body": "We regularly divide the results, encapsulate that better.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 17, 2015 at 04:37 GMT",
        "updated_at": "Tuesday Nov 17, 2015 at 23:55 GMT",
        "closed_at": "Tuesday Nov 17, 2015 at 23:55 GMT",
        "merged_at": "Tuesday Nov 17, 2015 at 23:55 GMT"
    },
    {
        "key": "WT-2218",
        "number": 2307,
        "state": "closed",
        "title": "WT-2218 Add truncate stats",
        "body": "@agorrod I have added both a connection and data source statistic for truncate calls.  Can you please review?  You suggested a statistic for pages deleted.  We already have the data source stat `rec_page_delete` that gets incremented in a regular fashion with truncate calls when I run the `mongodb-oplog.wtperf` configuration.  Is there more information that you feel is necessary?\n\nAlso, in this change I put the `truncate` stat in with the cursor stats even though it comes through the session handle.  It  felt more logical there.  Let me know if you disagree.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 16, 2015 at 18:31 GMT",
        "updated_at": "Wednesday Nov 18, 2015 at 23:36 GMT",
        "closed_at": "Wednesday Nov 18, 2015 at 23:36 GMT",
        "merged_at": "Wednesday Nov 18, 2015 at 23:36 GMT"
    },
    {
        "key": "WT-2220",
        "number": 2306,
        "state": "closed",
        "title": "WT-2220: time_t cleanup.",
        "body": "@agorrod, I just noticed we were misusing time_t in a few places, for your review.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 16, 2015 at 14:20 GMT",
        "updated_at": "Monday Nov 16, 2015 at 23:24 GMT",
        "closed_at": "Monday Nov 16, 2015 at 23:24 GMT",
        "merged_at": "Monday Nov 16, 2015 at 23:24 GMT"
    },
    {
        "key": "WT-2210",
        "number": 2305,
        "state": "closed",
        "title": "WT-2210: raw compression fails if row-store recovery precedes column-store recovery",
        "body": "If we allocate raw structures for a row-store and then re-use them for a column-store, we might not have allocated the record-number array, r->raw_recnos. Allocate the record-number array regardless of the type of object we're reconciling.\n\n@agorrod, for your review.\n",
        "base_ref": "develop",
        "created_at": "Sunday Nov 15, 2015 at 20:46 GMT",
        "updated_at": "Monday Nov 16, 2015 at 00:54 GMT",
        "closed_at": "Monday Nov 16, 2015 at 00:54 GMT",
        "merged_at": "Monday Nov 16, 2015 at 00:54 GMT"
    },
    {
        "key": "WT-2182",
        "number": 2304,
        "state": "closed",
        "title": "WT-2182: fixes for splitting up the tree.",
        "body": "@michaelcahill, this branch is for your review.\n\nI stared at the code that fixes up the moved WT_REF structures today, and found what I think are 3 problems:\n- setting WT_PAGE_MODIFY.mod_split_txn as the page is created, see 7dded31,\n- only fixing up moved WT_REF's that are in the WT_REF_MEM state when we look at them, see 9464fe3,\n- allowing newly created internal pages to split before we fix up the WT_REFs we moved there, see 9464fe3.\n\nI might be wrong on any or all of these, of course, but I hoped coding up an approach to fixing them would help me fully understand the problems and give you something concrete to look at. I put big honkin' comments all over the place.\n",
        "base_ref": "wt-2182-split-up-the-tree-2",
        "created_at": "Saturday Nov 14, 2015 at 00:10 GMT",
        "updated_at": "Monday Nov 16, 2015 at 00:44 GMT",
        "closed_at": "Monday Nov 16, 2015 at 00:44 GMT",
        "merged_at": "Monday Nov 16, 2015 at 00:44 GMT"
    },
    {
        "key": "WT-2135",
        "number": 2303,
        "state": "closed",
        "title": "WT-2135 Fix log_only setting for backup cursor. Fix initialization.",
        "body": "@keithbostic  Please review this change to cur_backup.c for the two issues that were listed in the ticket.  In particular I moved the initialization of cb->list_next earlier next to where we initialize cb->list.  \n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 12, 2015 at 21:36 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Monday Nov 16, 2015 at 02:38 GMT",
        "merged_at": "Monday Nov 16, 2015 at 02:38 GMT"
    },
    {
        "key": "WT-2212",
        "number": 2302,
        "state": "closed",
        "title": "WT-2212 Add a \"use_environment\" config to \"wiredtiger_open\"",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Nov 12, 2015 at 03:41 GMT",
        "updated_at": "Thursday Nov 12, 2015 at 04:35 GMT",
        "closed_at": "Thursday Nov 12, 2015 at 04:35 GMT",
        "merged_at": "Thursday Nov 12, 2015 at 04:35 GMT"
    },
    {
        "key": "WT-2199",
        "number": 2301,
        "state": "closed",
        "title": "WT-2199 Fix transaction sync inconsistency.",
        "body": "@michaelcahill Please review this change.  It actually fixes two issues.  The first is to add a flag to separate the `none` method as `WT_LOG_FLUSH` from the enable/disable of syncing.  The second is a bug fix where if the user sent in `sync=off` in `begin_transaction` it didn't actually turn it off for `fsync`.  I added a test to verify all the different settings.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 11, 2015 at 21:24 GMT",
        "updated_at": "Thursday Nov 12, 2015 at 20:32 GMT",
        "closed_at": "Thursday Nov 12, 2015 at 20:32 GMT",
        "merged_at": "Thursday Nov 12, 2015 at 20:32 GMT"
    },
    {
        "key": "WT-2207",
        "number": 2300,
        "state": "closed",
        "title": "WT-2207 Track whenever a session has a handle exclusive.",
        "body": "Previously, this was only tracked for newly-opened handles, but the change for\nSERVER-19954 relies on always detecting when a session has a handle exclusive,\nregardless of whether it was the first to open the handle.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 10, 2015 at 23:05 GMT",
        "updated_at": "Wednesday Nov 11, 2015 at 02:51 GMT",
        "closed_at": "Wednesday Nov 11, 2015 at 02:51 GMT",
        "merged_at": "Wednesday Nov 11, 2015 at 02:51 GMT"
    },
    {
        "key": null,
        "number": 2299,
        "state": "closed",
        "title": "Change tree shape dump code to generate json format.",
        "body": "This change only converts some of the debug dump code.\nIt also adds calls into the code from a couple of places to aid in\ntracing.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 10, 2015 at 04:47 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 00:44 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 04:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2182",
        "number": 2298,
        "state": "closed",
        "title": "WT-2182 Simplify the split deepen logic.",
        "body": "Don't save children at the current depth when deepening from the root.\nIt hurts the shape of trees we generate.\n",
        "base_ref": "wt-2182-split-up-the-tree-2",
        "created_at": "Tuesday Nov 10, 2015 at 04:38 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:26 GMT",
        "closed_at": "Thursday Nov 12, 2015 at 13:05 GMT",
        "merged_at": "Thursday Nov 12, 2015 at 13:05 GMT"
    },
    {
        "key": "WT-2206",
        "number": 2297,
        "state": "closed",
        "title": "WT-2206: change cache operations from flags to an enum.",
        "body": "@agorrod, would you please review & merge if you agree?\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 09, 2015 at 22:42 GMT",
        "updated_at": "Tuesday Nov 10, 2015 at 00:07 GMT",
        "closed_at": "Tuesday Nov 10, 2015 at 00:07 GMT",
        "merged_at": "Tuesday Nov 10, 2015 at 00:07 GMT"
    },
    {
        "key": "WT-2204",
        "number": 2296,
        "state": "closed",
        "title": "WT-2204: Don't take a local copy of page->modify until we know the page is dirty.",
        "body": "@michaelcahill, for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 07, 2015 at 15:43 GMT",
        "updated_at": "Monday Nov 09, 2015 at 03:12 GMT",
        "closed_at": "Monday Nov 09, 2015 at 03:12 GMT",
        "merged_at": "Monday Nov 09, 2015 at 03:12 GMT"
    },
    {
        "key": "WT-2202",
        "number": 2295,
        "state": "closed",
        "title": "WT-2202: release of the \"current\" page is wrong.",
        "body": "We're releasing the \"current\" page if (leaf != NULL), and that's wrong, we should only release the current page if no leaf-page WT_REF was specified.  The test could be (leaf == NULL), but I think (leaf != current) is a little more obvious.\n\n@agorrod, @michaelcahill, would one of you please do a review? Thanks!\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 06, 2015 at 19:32 GMT",
        "updated_at": "Wednesday Dec 02, 2015 at 04:53 GMT",
        "closed_at": "Monday Nov 09, 2015 at 03:10 GMT",
        "merged_at": "Monday Nov 09, 2015 at 03:10 GMT"
    },
    {
        "key": "WT-2203",
        "number": 2294,
        "state": "closed",
        "title": "WT-2203: release an allocated page on error",
        "body": "Release the allocated page on error when creating a new in-memory page as part of instantiating a page based on a multiblock reconciliation.\n\n@agorrod, @michaelcahill, would one of you please do a review? Thanks!\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 06, 2015 at 19:05 GMT",
        "updated_at": "Sunday Nov 08, 2015 at 23:10 GMT",
        "closed_at": "Sunday Nov 08, 2015 at 23:10 GMT",
        "merged_at": "Sunday Nov 08, 2015 at 23:10 GMT"
    },
    {
        "key": "WT-2217",
        "number": 2293,
        "state": "closed",
        "title": "WT-2217: change WT_CURSOR.insert to clear \"set\" key/value on return",
        "body": "Wording changes to clarify when applications can discard memory passed to set-key/set-value.\n\n@michaelcahill, some minor cursor wording changes to clarify when application-memory is used.\n\nOne suggestion that came out of the discussion was we could change `WT_CURSOR.insert` to unset the key/value, so not only would the cursor not be positioned after insert returned, it would also not have a set key/value.\n\nI think it's unlikely for an insert cursor to be intentionally re-used without also doing a fresh set-key/set-value call, so I don't think the change would impact real applications and clearing the key/value would mean we'd get a clean error message instead of dropping core.\n\nIf you like that idea, let me know and I'll open a ticket and get it done.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 06, 2015 at 14:23 GMT",
        "updated_at": "Monday Nov 16, 2015 at 12:07 GMT",
        "closed_at": "Monday Nov 16, 2015 at 11:42 GMT",
        "merged_at": "Monday Nov 16, 2015 at 11:42 GMT"
    },
    {
        "key": "WT-2182",
        "number": 2292,
        "state": "closed",
        "title": "WT-2182: detect internal page split races.",
        "body": "@agorrod, this makes the race I was seeing (append-only workload, column-store), much less likely to hit, but it still occasionally hits.\n",
        "base_ref": "wt-2182-split-up-the-tree-2",
        "created_at": "Thursday Nov 05, 2015 at 22:06 GMT",
        "updated_at": "Monday Nov 09, 2015 at 12:00 GMT",
        "closed_at": "Monday Nov 09, 2015 at 11:56 GMT",
        "merged_at": "Monday Nov 09, 2015 at 11:56 GMT"
    },
    {
        "key": "WT-2200",
        "number": 2291,
        "state": "closed",
        "title": "WT-2200 Change WiredTiger caching strategy on Windows",
        "body": "This change splits out `direct_io` into two options on Windows. `direct_io` now controls OS buffering while `write_through` controls disk buffering. This allows consumers like MongoDB to have fine grain control over how they write to disk.\n\nI updated the documentation to reflect the new options.\n\nLastly, I now define `HAVE_POSIX_MEMALIGN` since TCMalloc provides it.\n\n**Note:** I have aligned the python and text to 80 columns. I was not sure if it was supposed to be 80 or some other limit.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 05, 2015 at 22:04 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Monday Nov 09, 2015 at 06:56 GMT",
        "merged_at": "Monday Nov 09, 2015 at 06:56 GMT"
    },
    {
        "key": "WT-2219",
        "number": 2290,
        "state": "closed",
        "title": "WT-2219: Enhancements to in-memory testing",
        "body": "@agorrod, here are some changes to make format run with an in-memory configuration, for your review/consideration.\n\nI didn't find any problems that are issues for MongoDB, so this is just a set of cleanups.\n\nThis change would turn on format runs with in-memory configurations (1 in 20 runs); that may be too frequent. There's also an issue of sizing the cache for in-memory configurations, I set it to 100MB per thread in add1199, but I have no sense of whether that's reasonable or not.\n\nI also turned off LSM for in-memory configurations in 9da5926, I don't think it makes sense to create in-memory LSM objects. I think I got all of the LSM trigger paths (including option re-configuration), but I might have missed some.\n\nOne issue is we don't support overflow items in in-memory configurations as they're written to the file separately from the pages. I think it's sufficient to increase the maximum size of a key/value in the object, so that's the change I made.\n\nThere are some additional reconciliation configuration options we could turn off: for example, the work we do calculating checksums so we can compare blocks with previously \"written\" blocks, calculating a split-percentage, building dictionaries, raw-compression (well, any kind of compression configuration other than Huffman encoding), those sorts of things.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2015 at 16:03 GMT",
        "updated_at": "Tuesday Nov 17, 2015 at 05:50 GMT",
        "closed_at": "Tuesday Nov 17, 2015 at 05:50 GMT",
        "merged_at": "Tuesday Nov 17, 2015 at 05:50 GMT"
    },
    {
        "key": "WT-1315",
        "number": 2289,
        "state": "closed",
        "title": "WT-1315 Cursor join implementation",
        "body": "Here is an initial implementation for cursor joins, implementing the features discussed in our design, including bloom filters, projections, joining on main table, etc.  It includes doc, examples, tests and Java/Python support.\n\nDiscussed in the design process, but not yet implemented are any stats for determining actual size of a participating index, nor a way to do disjunctions.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 04, 2015 at 11:55 GMT",
        "updated_at": "Thursday Nov 19, 2015 at 00:47 GMT",
        "closed_at": "Thursday Nov 19, 2015 at 00:47 GMT",
        "merged_at": "Thursday Nov 19, 2015 at 00:47 GMT"
    },
    {
        "key": "WT-2196",
        "number": 2288,
        "state": "closed",
        "title": "WT-2196 Fix error handling in size only statistics.",
        "body": "Error codes from failed calls to __wt_filesize_name should not be propagated.\n\nAlso add a new test case to test fast stats.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2015 at 23:37 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:14 GMT",
        "closed_at": "Wednesday Nov 04, 2015 at 00:41 GMT",
        "merged_at": "Wednesday Nov 04, 2015 at 00:41 GMT"
    },
    {
        "key": "WT-2196",
        "number": 2287,
        "state": "closed",
        "title": "WT-2196: Fix size-only statistics when there are LSM tables.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2015 at 15:17 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:14 GMT",
        "closed_at": "Tuesday Nov 03, 2015 at 15:28 GMT",
        "merged_at": "Tuesday Nov 03, 2015 at 15:28 GMT"
    },
    {
        "key": "WT-2196",
        "number": 2286,
        "state": "closed",
        "title": "WT-2196 Fix size-only statistics when there are LSM tables.",
        "body": "It used to generate an error message when attempting to open a\nstatistics=(size) cursor on an LSM tree.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2015 at 03:42 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:14 GMT",
        "closed_at": "Tuesday Nov 03, 2015 at 04:54 GMT",
        "merged_at": "Tuesday Nov 03, 2015 at 04:54 GMT"
    },
    {
        "key": "WT-2195",
        "number": 2285,
        "state": "closed",
        "title": "WT-2195 Fix a hang after giving up on a reverse split.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 03, 2015 at 02:40 GMT",
        "updated_at": "Sunday Jan 10, 2016 at 01:11 GMT",
        "closed_at": "Tuesday Nov 03, 2015 at 03:01 GMT",
        "merged_at": "Tuesday Nov 03, 2015 at 03:01 GMT"
    },
    {
        "key": "WT-2184",
        "number": 2284,
        "state": "closed",
        "title": "WT-2184 recovery test",
        "body": "@michaelcahill Please review this new test based off the repro case sent in for WT-2184.  I have confirmed it fails without the fix with the expected detection of missing records and succeeds in the current develop/branch.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 02, 2015 at 16:40 GMT",
        "updated_at": "Friday Nov 06, 2015 at 18:50 GMT",
        "closed_at": "Friday Nov 06, 2015 at 18:50 GMT",
        "merged_at": "Friday Nov 06, 2015 at 18:50 GMT"
    },
    {
        "key": "WT-2194",
        "number": 2283,
        "state": "closed",
        "title": "WT-2194: Java close callbacks should handle cursors that Java code did not open.",
        "body": "This can now happen, as WiredTigerLAS.wt is opened internally.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 02, 2015 at 14:30 GMT",
        "updated_at": "Tuesday Nov 03, 2015 at 21:21 GMT",
        "closed_at": "Tuesday Nov 03, 2015 at 21:21 GMT",
        "merged_at": "Tuesday Nov 03, 2015 at 21:21 GMT"
    },
    {
        "key": "WT-2193",
        "number": 2282,
        "state": "closed",
        "title": "WT-2193 Handle read-committed metadata checkpoints during snapshot transactions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 02, 2015 at 06:14 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:38 GMT",
        "closed_at": "Tuesday Nov 03, 2015 at 05:49 GMT",
        "merged_at": "Tuesday Nov 03, 2015 at 05:49 GMT"
    },
    {
        "key": "WT-2192",
        "number": 2281,
        "state": "closed",
        "title": "WT-2192 Fix the logic around checking whether internal page is evictable.",
        "body": "There is a race between checking whether all children are in state\nWT_REF_DISK and whether the internal page is modified.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 02, 2015 at 01:55 GMT",
        "updated_at": "Monday Nov 02, 2015 at 02:10 GMT",
        "closed_at": "Monday Nov 02, 2015 at 02:10 GMT",
        "merged_at": "Monday Nov 02, 2015 at 02:10 GMT"
    },
    {
        "key": "WT-2187",
        "number": 2280,
        "state": "closed",
        "title": "WT-2187 Add flag for flushing a slot",
        "body": "so that we locally handle write_lsn rather than waiting for a worker thread, similar to sync.\n\n@michaelcahill Please review this change for the performance issue reported with write-no-sync.  With this change, I see the current logging code perform the same (one populate thread) or 50% faster (8 threads).\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 30, 2015 at 21:33 GMT",
        "updated_at": "Saturday Oct 31, 2015 at 05:54 GMT",
        "closed_at": "Saturday Oct 31, 2015 at 05:54 GMT",
        "merged_at": "Saturday Oct 31, 2015 at 05:54 GMT"
    },
    {
        "key": "WT-2191",
        "number": 2279,
        "state": "closed",
        "title": "WT-2191: in memory disk image no longer the same as saved updates",
        "body": "@agorrod, @michaelcahill, I think this is ready for review and merge.\n\n956cc66 is the fix, 0818fc3 is a general naming change.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 30, 2015 at 20:52 GMT",
        "updated_at": "Saturday Oct 31, 2015 at 16:33 GMT",
        "closed_at": "Saturday Oct 31, 2015 at 05:53 GMT",
        "merged_at": "Saturday Oct 31, 2015 at 05:53 GMT"
    },
    {
        "key": "ER-21027",
        "number": 2278,
        "state": "closed",
        "title": "SERVER-21027 Don't leave empty internal pages in the tree",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 30, 2015 at 05:03 GMT",
        "updated_at": "Sunday Jan 10, 2016 at 01:12 GMT",
        "closed_at": "Friday Oct 30, 2015 at 11:18 GMT",
        "merged_at": "Friday Oct 30, 2015 at 11:18 GMT"
    },
    {
        "key": "WT-2170",
        "number": 2277,
        "state": "closed",
        "title": "WT-2170 Restore visible_all semantics if we try to check visibility without a snapshot",
        "body": "There are various internal checks (e.g., checking tombstone visibility during tree walks, and during eviction of dirty trees prior to an exclusive operation like drop) where we don't have a transactional snapshot, but the isolation level may be set read-committed or higher.  The isolation level is irrelevant to these checks: we used to have a special \"eviction\" isolation level to avoid these issues.\n\nThis change restores that semantic: if we attempt a visibilty check without a snapshot, fall back to only making stable updates visible.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 30, 2015 at 05:01 GMT",
        "updated_at": "Friday Oct 30, 2015 at 11:17 GMT",
        "closed_at": "Friday Oct 30, 2015 at 11:17 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2127",
        "number": 2276,
        "state": "closed",
        "title": "WT-2127 Back out some of a change to split internal pages sooner.",
        "body": "We aren't doing an awesome job of balancing trees built via append\nworkloads, especially when splitting the root. Avoid splitting the\nroot until it grows large.\n\nThe work in WT-2182 should help with our tree shape.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 30, 2015 at 03:34 GMT",
        "updated_at": "Friday Oct 30, 2015 at 04:11 GMT",
        "closed_at": "Friday Oct 30, 2015 at 04:11 GMT",
        "merged_at": "Friday Oct 30, 2015 at 04:11 GMT"
    },
    {
        "key": "WT-2170",
        "number": 2275,
        "state": "closed",
        "title": "WT-2170 Application metadata cursors expect read-uncommitted semantics.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 30, 2015 at 03:20 GMT",
        "updated_at": "Friday Oct 30, 2015 at 04:11 GMT",
        "closed_at": "Friday Oct 30, 2015 at 04:11 GMT",
        "merged_at": "Friday Oct 30, 2015 at 04:11 GMT"
    },
    {
        "key": "WT-2189",
        "number": 2274,
        "state": "closed",
        "title": "WT-2189 Make F_SET (and F_CLR) into a void expression.",
        "body": "That way it can't accidentally be used in place of F_ISSET.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 29, 2015 at 23:57 GMT",
        "updated_at": "Friday Oct 30, 2015 at 04:10 GMT",
        "closed_at": "Friday Oct 30, 2015 at 04:10 GMT",
        "merged_at": "Friday Oct 30, 2015 at 04:10 GMT"
    },
    {
        "key": "WT-2184",
        "number": 2273,
        "state": "closed",
        "title": "WT-2184 Fix log scan bug when final record has many trailing zeros",
        "body": "@michaelcahill Please review these changes that implement the fixes we discussed last night.  I am in the process of writing a test program similar to the failing case to put in the tree but that is not complete.  I have a similar diff that fixes it in the 2.6.1 tree they're using also.  We can chat about it tonight.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 29, 2015 at 19:46 GMT",
        "updated_at": "Tuesday Mar 29, 2016 at 03:05 GMT",
        "closed_at": "Friday Oct 30, 2015 at 04:10 GMT",
        "merged_at": "Friday Oct 30, 2015 at 04:10 GMT"
    },
    {
        "key": "WT-2182",
        "number": 2272,
        "state": "closed",
        "title": "WT-2182: when internal pages grow large enough, split them into their parents",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 29, 2015 at 16:28 GMT",
        "updated_at": "Tuesday Nov 17, 2015 at 23:09 GMT",
        "closed_at": "Tuesday Nov 17, 2015 at 23:09 GMT",
        "merged_at": "Tuesday Nov 17, 2015 at 23:09 GMT"
    },
    {
        "key": "ER-21027",
        "number": 2271,
        "state": "closed",
        "title": "SERVER-21027 Fix reverse splits to keep the original child ref locked",
        "body": "Fix reverse splits to keep the original child ref locked until we have a hazard pointer on the parent page, as we do for regular splits.\n\nOtherwise, a reverse split could race with eviction of the internal page.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 29, 2015 at 05:31 GMT",
        "updated_at": "Friday Nov 27, 2015 at 04:18 GMT",
        "closed_at": "Thursday Oct 29, 2015 at 05:47 GMT",
        "merged_at": "Thursday Oct 29, 2015 at 05:47 GMT"
    },
    {
        "key": "WT-2185",
        "number": 2270,
        "state": "closed",
        "title": "WT-2185: Don't do reverse splits when closing a file.",
        "body": "The ovfl_lock may already have been freed.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 29, 2015 at 02:47 GMT",
        "updated_at": "Thursday Oct 29, 2015 at 03:05 GMT",
        "closed_at": "Thursday Oct 29, 2015 at 03:04 GMT",
        "merged_at": "Thursday Oct 29, 2015 at 03:04 GMT"
    },
    {
        "key": "WT-2170",
        "number": 2269,
        "state": "closed",
        "title": "WT-2170 Add a macro perform an operation at an isolation level.",
        "body": "Lock down visibility checks so we never try to use a snapshot without one being allocated.\n",
        "base_ref": "wt-2170",
        "created_at": "Wednesday Oct 28, 2015 at 10:59 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Wednesday Oct 28, 2015 at 19:20 GMT",
        "merged_at": "Wednesday Oct 28, 2015 at 19:20 GMT"
    },
    {
        "key": "WT-2146",
        "number": 2268,
        "state": "closed",
        "title": "WT-2146 Do quick searches based on search key size",
        "body": "This makes the branch more generally applicable, rather than being a special case for one type of key.  It was just as fast in my testing.\n\nI tried several variations on the core of #2223 but didn't find any way to make it faster, and my attempts to simplify it made it slower.\n\n@keithbostic, if you're happy with this change, can you please merge it, then merge #2223?\n",
        "base_ref": "qsearch",
        "created_at": "Tuesday Oct 27, 2015 at 05:26 GMT",
        "updated_at": "Tuesday Oct 27, 2015 at 11:20 GMT",
        "closed_at": "Tuesday Oct 27, 2015 at 11:20 GMT",
        "merged_at": "Tuesday Oct 27, 2015 at 11:20 GMT"
    },
    {
        "key": "WT-2116",
        "number": 2267,
        "state": "closed",
        "title": "WT-2116 Add diagnostic checks for stuck cache and dump the state.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 27, 2015 at 03:39 GMT",
        "updated_at": "Tuesday Oct 27, 2015 at 06:18 GMT",
        "closed_at": "Tuesday Oct 27, 2015 at 06:18 GMT",
        "merged_at": "Tuesday Oct 27, 2015 at 06:18 GMT"
    },
    {
        "key": "WT-2170",
        "number": 2266,
        "state": "closed",
        "title": "WT-2170 Move metadata read uncommitted to search",
        "body": "@michaelcahill Here are the changes.  This is not yet ready to merge as `test_rename` is failing.  It gets back the correct `ENOENT` but it is taking a new code path that also write `No such file or directory` to `stderr.txt`, causing the test to fail.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 27, 2015 at 00:06 GMT",
        "updated_at": "Thursday Oct 29, 2015 at 02:45 GMT",
        "closed_at": "Thursday Oct 29, 2015 at 02:45 GMT",
        "merged_at": "Thursday Oct 29, 2015 at 02:45 GMT"
    },
    {
        "key": "WT-2164",
        "number": 2265,
        "state": "closed",
        "title": "WT-2164: minor cleanups to __wt_lsm_checkpoint_chunk",
        "body": "@sueloverso, yours for review, merge, or discard.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 23, 2015 at 19:45 GMT",
        "updated_at": "Friday Oct 23, 2015 at 20:01 GMT",
        "closed_at": "Friday Oct 23, 2015 at 20:01 GMT",
        "merged_at": "Friday Oct 23, 2015 at 20:01 GMT"
    },
    {
        "key": "WT-2164",
        "number": 2264,
        "state": "closed",
        "title": "WT-2164 Have LSM enable metadata tracking prior to checkpointing a chunk.",
        "body": "Otherwise insufficient locks are held to keep checkpoint handles alive.\n\nAlso add assertions into checkpoint to avoid running into this again\nin the future.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 23, 2015 at 03:58 GMT",
        "updated_at": "Friday Oct 23, 2015 at 17:58 GMT",
        "closed_at": "Friday Oct 23, 2015 at 17:58 GMT",
        "merged_at": "Friday Oct 23, 2015 at 17:58 GMT"
    },
    {
        "key": "WT-2180",
        "number": 2263,
        "state": "closed",
        "title": "WT-2180: remove cursor.{search,search-near,remove} key size validation",
        "body": "@agorrod, @michaelcahill, for review and merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 22, 2015 at 23:47 GMT",
        "updated_at": "Friday Oct 23, 2015 at 00:54 GMT",
        "closed_at": "Friday Oct 23, 2015 at 00:54 GMT",
        "merged_at": "Friday Oct 23, 2015 at 00:54 GMT"
    },
    {
        "key": "WT-2164",
        "number": 2262,
        "state": "closed",
        "title": "WT-2164 Prevent another chunk checkpoint while the first is still in progress.",
        "body": "@agorrod Please review this change.  It avoids the bus error by not allowing two LSM workers to checkpoint the same chunk.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 22, 2015 at 18:42 GMT",
        "updated_at": "Friday Oct 23, 2015 at 18:41 GMT",
        "closed_at": "Friday Oct 23, 2015 at 18:41 GMT",
        "merged_at": "Friday Oct 23, 2015 at 18:41 GMT"
    },
    {
        "key": "WT-2179",
        "number": 2261,
        "state": "closed",
        "title": "WT-2179 Added decorator to mark txn13 as part of the --long test suite.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 22, 2015 at 14:31 GMT",
        "updated_at": "Thursday Oct 22, 2015 at 20:49 GMT",
        "closed_at": "Thursday Oct 22, 2015 at 20:49 GMT",
        "merged_at": "Thursday Oct 22, 2015 at 20:49 GMT"
    },
    {
        "key": "ER-21027",
        "number": 2260,
        "state": "closed",
        "title": "SERVER-21027 Reverse split if there are many deleted pages",
        "body": "This is the version of the reverse split changes for develop.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 22, 2015 at 05:40 GMT",
        "updated_at": "Friday Nov 27, 2015 at 04:18 GMT",
        "closed_at": "Thursday Oct 29, 2015 at 01:06 GMT",
        "merged_at": "Thursday Oct 29, 2015 at 01:06 GMT"
    },
    {
        "key": "ER-21027",
        "number": 2259,
        "state": "closed",
        "title": "SERVER-21027 Reverse split if there are many deleted pages (3.0)",
        "body": "This code was developed on the `mongodb-3.0` branch, and will be cherry-picked to create a set of changes against `develop`.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Thursday Oct 22, 2015 at 05:31 GMT",
        "updated_at": "Thursday Nov 26, 2015 at 04:36 GMT",
        "closed_at": "Thursday Nov 26, 2015 at 04:36 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2073",
        "number": 2258,
        "state": "closed",
        "title": "WT-2073: metadata cleanup",
        "body": "@michaelcahill, @agorrod, for your review.\n\nThere's a nasty potential bug this change introduces, where code is doing a loop using the session's cached metadata cursor, and some underlying function uses the metadata cursor itself, causing the top-level's use of the cursor to be mis-positioned in the loop. I don't have a good solution for that, or even a way to detect it -- I'd like to do something better in that case than what I do now, which is fail at some indeterminate point in the future, and that's not good. Looking for a good idea on that one, maybe we can talk it over.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 20, 2015 at 22:22 GMT",
        "updated_at": "Monday Jan 04, 2016 at 11:21 GMT",
        "closed_at": "Wednesday Dec 30, 2015 at 22:15 GMT",
        "merged_at": "Wednesday Dec 30, 2015 at 22:15 GMT"
    },
    {
        "key": "WT-2178",
        "number": 2257,
        "state": "closed",
        "title": "WT-2178 In-memory storage engine support",
        "body": "Not ready for merge, this is the working branch for in-memory behavior.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 20, 2015 at 03:03 GMT",
        "updated_at": "Friday Oct 30, 2015 at 04:14 GMT",
        "closed_at": "Friday Oct 30, 2015 at 04:14 GMT",
        "merged_at": "Friday Oct 30, 2015 at 04:14 GMT"
    },
    {
        "key": "WT-2174",
        "number": 2256,
        "state": "closed",
        "title": "WT-2174 Avoid the table list lock when creating a size only statistics cursor.",
        "body": "When there are lots of tables being created and dropped it can take a long time to get the table lock.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 16, 2015 at 06:14 GMT",
        "updated_at": "Wednesday Dec 23, 2015 at 23:08 GMT",
        "closed_at": "Monday Oct 19, 2015 at 05:31 GMT",
        "merged_at": "Monday Oct 19, 2015 at 05:31 GMT"
    },
    {
        "key": "WT-2170",
        "number": 2255,
        "state": "closed",
        "title": "WT-2170 Add turtle file lock.",
        "body": "@michaelcahill Please review this change.  It contains only the turtle file lock portion discussed in the ticket.  I have not yet been able to reproduce the original problem without the fix (even adding in a 1 msec sleep call before the rename).\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 14, 2015 at 16:16 GMT",
        "updated_at": "Monday Oct 19, 2015 at 04:21 GMT",
        "closed_at": "Monday Oct 19, 2015 at 04:21 GMT",
        "merged_at": "Monday Oct 19, 2015 at 04:21 GMT"
    },
    {
        "key": "WT-2068",
        "number": 2254,
        "state": "closed",
        "title": "WT-2068 Protect discarding handles with the handle list lock.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 14, 2015 at 02:25 GMT",
        "updated_at": "Wednesday Oct 14, 2015 at 15:32 GMT",
        "closed_at": "Wednesday Oct 14, 2015 at 15:32 GMT",
        "merged_at": "Wednesday Oct 14, 2015 at 15:32 GMT"
    },
    {
        "key": "WT-2068",
        "number": 2253,
        "state": "closed",
        "title": "WT-2068 Put live_open usage under HAVE_DIAGNOSTIC and an assert.",
        "body": "@keithbostic and @michaelcahill - after thinking about this for a while, I still feel that this code really should be under HAVE_DIAGNOSTIC and an assertion.  I have not heard that we want to move away from that for things like this.  But this seems cleaner to me.  I made it a sub-branch off Keith's so it can be tossed if you want.\n\nI definitely think we want some form of this because it quickly uncovered WT-2068 and we may need it again as we come up with a fix.\n",
        "base_ref": "wt-2068-live-system-reopen",
        "created_at": "Tuesday Oct 13, 2015 at 19:52 GMT",
        "updated_at": "Wednesday Oct 14, 2015 at 02:25 GMT",
        "closed_at": "Wednesday Oct 14, 2015 at 02:25 GMT",
        "merged_at": "Wednesday Oct 14, 2015 at 02:25 GMT"
    },
    {
        "key": "WT-2165",
        "number": 2252,
        "state": "closed",
        "title": "WT-2165  Remove FALLOC_FL_KEEP_SIZE flag.",
        "body": "@keithbostic Please review this small change to remove the use of the `FALLOC_FL_KEEP_SIZE` flag.  I ran the log-append.wtperf test with 5 sets of populate threads (8, 16, 32, 64, 96) multiple times on both this branch and develop and this branch is within the variation of the develop branch.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 13, 2015 at 18:20 GMT",
        "updated_at": "Tuesday Oct 13, 2015 at 18:47 GMT",
        "closed_at": "Tuesday Oct 13, 2015 at 18:47 GMT",
        "merged_at": "Tuesday Oct 13, 2015 at 18:47 GMT"
    },
    {
        "key": "WT-2068",
        "number": 2251,
        "state": "closed",
        "title": "WT-2068 Use dhandle->close_lock to prevent checkpoint re-opening a file in the process of being closed",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 13, 2015 at 01:30 GMT",
        "updated_at": "Wednesday Oct 14, 2015 at 02:28 GMT",
        "closed_at": "Wednesday Oct 14, 2015 at 02:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2167",
        "number": 2250,
        "state": "closed",
        "title": "WT-2167 Switch recovery to using an internal session.",
        "body": "It used to open and close a session handle that wasn't marked\ninternal. No functional change since recovery closes the handle\nwhen it is done and the primary difference between internal and\nnon-internal sessions is during connection close.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2015 at 21:46 GMT",
        "updated_at": "Monday Oct 12, 2015 at 22:52 GMT",
        "closed_at": "Monday Oct 12, 2015 at 22:52 GMT",
        "merged_at": "Monday Oct 12, 2015 at 22:52 GMT"
    },
    {
        "key": "WT-2126",
        "number": 2249,
        "state": "closed",
        "title": "WT-2126: __split_deepen() doesn't really need to panic",
        "body": "@michaelcahill, I'm open to going the other way, doing a panic in both `__split_parent` and `__split_deepen`. It's unclear how long we're going to run after this failure anyway.\n\nMaybe we should just quit when malloc fails? That would simplify a lot of error handling, and once we're out of memory we're almost certainly taking rarely tested error paths, nothing good is going to happen.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2015 at 20:10 GMT",
        "updated_at": "Monday Oct 19, 2015 at 04:23 GMT",
        "closed_at": "Monday Oct 19, 2015 at 04:23 GMT",
        "merged_at": "Monday Oct 19, 2015 at 04:23 GMT"
    },
    {
        "key": "WT-2068",
        "number": 2248,
        "state": "closed",
        "title": "WT-2068: complain if the live system is re-opened.",
        "body": "@sueloverso, here's the change to detect if the live system is re-opened. I've smoke-tested it, but not much more.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2015 at 16:42 GMT",
        "updated_at": "Wednesday Oct 14, 2015 at 02:26 GMT",
        "closed_at": "Wednesday Oct 14, 2015 at 02:26 GMT",
        "merged_at": "Wednesday Oct 14, 2015 at 02:26 GMT"
    },
    {
        "key": "ER-19954",
        "number": 2247,
        "state": "closed",
        "title": "SERVER-19954 Don't scan tracked handles during checkpoints.",
        "body": "The change in WT-147 to allow a session to lock the same handle exclusive multiple times makes this unnecessary.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 12, 2015 at 03:08 GMT",
        "updated_at": "Monday Oct 12, 2015 at 04:56 GMT",
        "closed_at": "Monday Oct 12, 2015 at 04:56 GMT",
        "merged_at": "Monday Oct 12, 2015 at 04:56 GMT"
    },
    {
        "key": "WT-2139",
        "number": 2246,
        "state": "closed",
        "title": "WT-2139 At read-uncommitted isolation, keep the same ID pinned while cursors are positioned",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 09, 2015 at 06:27 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:36 GMT",
        "closed_at": "Friday Oct 09, 2015 at 18:00 GMT",
        "merged_at": "Friday Oct 09, 2015 at 18:00 GMT"
    },
    {
        "key": "WT-2162",
        "number": 2245,
        "state": "closed",
        "title": "WT-2162.  Add null pointer check, needed after an index is dropped.",
        "body": "The WT_TABLE.indices array is zeroed after an index is dropped, and is filled on demand. Null pointer checks are needed unless __wt_schema_open_indices() is called first, which repopulates the array.\n\nDid a review to verify that all uses of WT_TABLE.indices guard against null pointers or call __wt_schema_open_indices first.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 08, 2015 at 01:36 GMT",
        "updated_at": "Thursday Oct 08, 2015 at 02:00 GMT",
        "closed_at": "Thursday Oct 08, 2015 at 02:00 GMT",
        "merged_at": "Thursday Oct 08, 2015 at 02:00 GMT"
    },
    {
        "key": "WT-2149",
        "number": 2244,
        "state": "closed",
        "title": "WT-2149 Track if the lookaside table is open when starting eviction workers",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 07, 2015 at 05:22 GMT",
        "updated_at": "Wednesday Oct 07, 2015 at 05:36 GMT",
        "closed_at": "Wednesday Oct 07, 2015 at 05:36 GMT",
        "merged_at": "Wednesday Oct 07, 2015 at 05:36 GMT"
    },
    {
        "key": "WT-2157",
        "number": 2243,
        "state": "closed",
        "title": "WT-2157 If we give up trying to split a page, make sure it is written by the next checkpoint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 07, 2015 at 04:56 GMT",
        "updated_at": "Tuesday Mar 29, 2016 at 03:05 GMT",
        "closed_at": "Wednesday Oct 07, 2015 at 05:16 GMT",
        "merged_at": "Wednesday Oct 07, 2015 at 05:16 GMT"
    },
    {
        "key": "WT-2159",
        "number": 2242,
        "state": "closed",
        "title": "WT-2159: don't check the config twice in one path.",
        "body": "@agorrod or @sueloverso, ready for review & merge.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 05, 2015 at 13:55 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:31 GMT",
        "closed_at": "Monday Oct 05, 2015 at 14:57 GMT",
        "merged_at": "Monday Oct 05, 2015 at 14:57 GMT"
    },
    {
        "key": "WT-2126",
        "number": 2241,
        "state": "closed",
        "title": "WT-2126: clean up if there is an error during splits",
        "body": "@michaelcahill, here's the change to panic if we error after corrupting the original page during a split.\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 04, 2015 at 16:44 GMT",
        "updated_at": "Friday Oct 23, 2015 at 10:52 GMT",
        "closed_at": "Friday Oct 23, 2015 at 00:54 GMT",
        "merged_at": "Friday Oct 23, 2015 at 00:54 GMT"
    },
    {
        "key": "WT-2149",
        "number": 2240,
        "state": "closed",
        "title": "WT-2149 WT-2156 Allow eviction workers to restart.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Oct 02, 2015 at 06:51 GMT",
        "updated_at": "Tuesday Jan 19, 2016 at 06:52 GMT",
        "closed_at": "Friday Oct 02, 2015 at 07:11 GMT",
        "merged_at": "Friday Oct 02, 2015 at 07:11 GMT"
    },
    {
        "key": "WT-2155",
        "number": 2239,
        "state": "closed",
        "title": "WT-2155 Remove last use of F_CAS_ATOMIC and the associated macro.",
        "body": "It's not trivial to remove all atomic flags primitives, since the page flags rely on them. This part of the change is simple, so it might as well be done quickly.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 01, 2015 at 07:01 GMT",
        "updated_at": "Wednesday Oct 07, 2015 at 03:36 GMT",
        "closed_at": "Wednesday Oct 07, 2015 at 03:36 GMT",
        "merged_at": "Wednesday Oct 07, 2015 at 03:36 GMT"
    },
    {
        "key": "WT-2154",
        "number": 2238,
        "state": "closed",
        "title": "WT-2154 - Make btree dump safer",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 01, 2015 at 05:28 GMT",
        "updated_at": "Monday Oct 12, 2015 at 00:16 GMT",
        "closed_at": "Monday Oct 12, 2015 at 00:16 GMT",
        "merged_at": "Monday Oct 12, 2015 at 00:16 GMT"
    },
    {
        "key": "WT-2149",
        "number": 2237,
        "state": "closed",
        "title": "WT-2149 Fix the order of creation of the lookaside table",
        "body": "The lookaside table has to be created after recovery has completed because it needs a file ID and otherwise recovery could overwrite its entry in the metadata.  However, recovery needs eviction threads running because recovery could touch more data than fits in cache.\n\nResolve this ordering problem by having recovery start a special set of eviction threads without lookaside table cursors.  Once it is done, they are shut down, the lookaside table can be created, and a new set of eviction threads started.\n",
        "base_ref": "wt-2149",
        "created_at": "Thursday Oct 01, 2015 at 04:57 GMT",
        "updated_at": "Friday Oct 02, 2015 at 06:50 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 23:41 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 23:41 GMT"
    },
    {
        "key": "ER-20303",
        "number": 2236,
        "state": "closed",
        "title": "SERVER-20303 Require a minimum item count for in-memory splits.",
        "body": "I'm concerned that the first version of this change could split if a single large item is appended to a page.  This version reduces the required count, but only splits if we hit the count _and_ the size condition.  \n\nFurther, it makes it more explicit that we are sampling by looking at level 2 in the tree.\n",
        "base_ref": "SERVER-20303",
        "created_at": "Thursday Oct 01, 2015 at 03:00 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:37 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 10:45 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 10:45 GMT"
    },
    {
        "key": "WT-2153",
        "number": 2235,
        "state": "closed",
        "title": "WT-2153 Fix bug. Now we always need to start the log_server thread.",
        "body": "@michaelcahill Please review this bug fix.  I found it when adding tests for reconfiguration in PR #2229.  But it is a bug on its own and deserved its own ticket.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2015 at 20:12 GMT",
        "updated_at": "Thursday Oct 01, 2015 at 02:58 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 02:13 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 02:13 GMT"
    },
    {
        "key": "WT-2149",
        "number": 2234,
        "state": "closed",
        "title": "WT-2149: Deadlock opening lookaside table cursor",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2015 at 19:41 GMT",
        "updated_at": "Friday Oct 02, 2015 at 04:46 GMT",
        "closed_at": "Friday Oct 02, 2015 at 04:46 GMT",
        "merged_at": "Friday Oct 02, 2015 at 04:46 GMT"
    },
    {
        "key": "ER-20303",
        "number": 2233,
        "state": "closed",
        "title": "SERVER-20303: tuning in-memory splits for when inserting large objects",
        "body": "@michaelcahill, @agorrod: ready for review and merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2015 at 16:57 GMT",
        "updated_at": "Thursday Oct 01, 2015 at 11:08 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 11:08 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 11:08 GMT"
    },
    {
        "key": "WT-2129",
        "number": 2232,
        "state": "closed",
        "title": "WT-2129 Make cell dump a little safer",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2015 at 05:15 GMT",
        "updated_at": "Thursday Oct 01, 2015 at 03:45 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 03:45 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2152",
        "number": 2231,
        "state": "closed",
        "title": "WT-2152 Add support for WTPERF operations recieving a rollback",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2015 at 04:24 GMT",
        "updated_at": "Thursday Oct 01, 2015 at 05:25 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 05:25 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 05:25 GMT"
    },
    {
        "key": "WT-2145",
        "number": 2230,
        "state": "closed",
        "title": "WT-2145 Reconciliation code reorganization",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 30, 2015 at 01:29 GMT",
        "updated_at": "Monday Nov 16, 2015 at 03:18 GMT",
        "closed_at": "Monday Nov 16, 2015 at 03:18 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2151",
        "number": 2229,
        "state": "closed",
        "title": "WT-2151 Add zero fill config",
        "body": "@michaelcahill Please review the change for zero-filling logs via a configuration knob.  I'm seeing mixed results on performance.  I see no performance difference on the AWS SSD or my Mac laptop.  On my AWS HDD box I saw no difference running to the HDD file system with small (20Mb) log files.  When I ran to the HDD box with 100Mb files or when I ran to the local disk, I saw about an 80% performance hit.\n\nI also added a log-append-zero workload and I'll add it to the logging jobs once this is merged and plot it against the normal log-append workload.\n\nOf course the trick will be having someone know when they need to configure this.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 29, 2015 at 18:33 GMT",
        "updated_at": "Thursday Oct 01, 2015 at 18:07 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 18:07 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 18:07 GMT"
    },
    {
        "key": "ER-20543",
        "number": 2228,
        "state": "closed",
        "title": "SERVER-20543: Coverity/lint cleanups.",
        "body": "@sueloverso, I'm hoping we can shut Coverity/lint up about some log.c code.\n\nFeel free to reject any of these changes you don't want, there's nothing wrong here that I can see.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 29, 2015 at 14:59 GMT",
        "updated_at": "Tuesday Sep 29, 2015 at 15:46 GMT",
        "closed_at": "Tuesday Sep 29, 2015 at 15:45 GMT",
        "merged_at": "Tuesday Sep 29, 2015 at 15:45 GMT"
    },
    {
        "key": "WT-2148",
        "number": 2227,
        "state": "closed",
        "title": "WT-2148 Change encoding functions to avoid -Wshift-negative-value",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 29, 2015 at 04:18 GMT",
        "updated_at": "Tuesday Sep 29, 2015 at 05:17 GMT",
        "closed_at": "Tuesday Sep 29, 2015 at 05:17 GMT",
        "merged_at": "Tuesday Sep 29, 2015 at 05:17 GMT"
    },
    {
        "key": "WT-2137",
        "number": 2226,
        "state": "closed",
        "title": "WT-2137 Check the sync_lsn is in the correct file before moving it forward.",
        "body": "@michaelcahill Please review.  After being able to repro the failure, I have fixed it similarly to your analysis.  I also did reduce the wait time to 100msec.  I repro'ed in about 20 iterations of running the test and this has run successfully a few hundred.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 28, 2015 at 16:51 GMT",
        "updated_at": "Tuesday Sep 29, 2015 at 01:02 GMT",
        "closed_at": "Tuesday Sep 29, 2015 at 01:02 GMT",
        "merged_at": "Tuesday Sep 29, 2015 at 01:02 GMT"
    },
    {
        "key": "WT-2143",
        "number": 2225,
        "state": "closed",
        "title": "WT-2143 Revert part of the recent log cleanup changes.",
        "body": "They introduced a performance regression, due to log slot states\nbeing setup at the wrong time.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 28, 2015 at 06:11 GMT",
        "updated_at": "Monday Sep 28, 2015 at 11:41 GMT",
        "closed_at": "Monday Sep 28, 2015 at 11:41 GMT",
        "merged_at": "Monday Sep 28, 2015 at 11:41 GMT"
    },
    {
        "key": "WT-2131",
        "number": 2224,
        "state": "closed",
        "title": "WT-2131 Switch all WT_PAGE_RECONCILIATION locks to fair locks.",
        "body": "The main purpose is to keep a single lock for all page operations.\n",
        "base_ref": "split-fairer",
        "created_at": "Monday Sep 28, 2015 at 04:25 GMT",
        "updated_at": "Wednesday Sep 30, 2015 at 02:07 GMT",
        "closed_at": "Wednesday Sep 30, 2015 at 02:07 GMT",
        "merged_at": "Wednesday Sep 30, 2015 at 02:07 GMT"
    },
    {
        "key": "WT-2146",
        "number": 2223,
        "state": "closed",
        "title": "WT-2146: fast q search.",
        "body": "@michaelcahill, I was having difficulty explaining what I was talking about when we were talking about speeding up row-store searches with Q/q formats as keys, so I coded it up.\n\nI see a win, but not much of one, it's between 2-4% on searches, presumably from avoiding the for loop setup.\n\nI'm using clang version 3.3, -O3.\n\nInlining the return in the switch statement slows things down, as does combining the whole thing into a single switch statement (where the default switch case does the work for keys larger than 9 bytes), which makes me think the win here is a tiny/simple switch statement.\n\nAnyway, I'm pushing the branch, maybe you and @fedorova could take a look and see if you see any improvements?\n\nOtherwise, I'd guess there's not enough of a win to keep the change.\n\nHere's my test code:\n\n```\n#include <assert.h>\n#include <inttypes.h>\n#include <pthread.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <time.h>\n#include <unistd.h>\n\n#include <wiredtiger.h>\n\n#define check(x) do {                                                   \\\n        int __r;                                                        \\\n        if ((__r = (x)) != 0) {                                         \\\n                fprintf(stderr,                                         \\\n                    \"%s: %d (%s)\\n\",                                    \\\n                    #x, __r, wiredtiger_strerror(__r));                 \\\n                assert(__r == 0);                                       \\\n        }                                                               \\\n} while (0)\n\n#define MILLION 1000000\n\nint\nmain(int argc, char *argv[])\n{\n        WT_CONNECTION *conn;\n        WT_CURSOR *cursor;\n        WT_SESSION *session;\n        clock_t ce, cs;\n        uint64_t key;\n        int i, ops;\n        const char *obj = \"table:xx\";\n\n        /* Remove everything. */\n        (void)system(\"rm -rf WT_TEST && mkdir WT_TEST\");\n\n        /* Create a single table, populate it with a million key/value pairs. */\n        check(wiredtiger_open(\"WT_TEST\", NULL, \"create\", &conn));\n        check(conn->open_session(conn, NULL, NULL, &session));\n        check(session->create(session, obj,\n            \"allocation_size=512,leaf_page_max=512,\"\n            \"key_format=q,value_format=S\"));\n        check(session->open_cursor(session, obj, NULL, NULL, &cursor));\n        for (key = 0; key < MILLION; ++key) {\n                cursor->set_key(cursor, key);\n                cursor->set_value(cursor, \"========== VALUE =======\");\n                check(cursor->insert(cursor));\n        }\n\n        /* Close and re-open the database, so we get a tree. */\n        check(conn->close(conn, NULL));\n        check(wiredtiger_open(\"WT_TEST\", NULL, \"create\", &conn));\n\n        /* Repeated searches of a key in the middle. */\n        check(conn->open_session(conn, NULL, NULL, &session));\n        check(session->create(session, obj, NULL));\n        check(session->open_cursor(session, obj, NULL, NULL, &cursor));\n        key = MILLION / 2;\n        cursor->set_key(cursor, key);\n\n        ops = 10 * MILLION;\n        printf(\"start run... \"); fflush(stdout);\n        cs = clock();\n        for (i = 0; i < ops; ++i)\n                check(cursor->search(cursor));\n        ce = clock();\n        printf(\"%dM: %.2lf\\n\",\n            ops / MILLION, (ce - cs) / (double)CLOCKS_PER_SEC);\n\n        return (0);\n}\n```\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 28, 2015 at 00:22 GMT",
        "updated_at": "Tuesday Oct 27, 2015 at 12:02 GMT",
        "closed_at": "Tuesday Oct 27, 2015 at 12:02 GMT",
        "merged_at": "Tuesday Oct 27, 2015 at 12:02 GMT"
    },
    {
        "key": "WT-2141",
        "number": 2222,
        "state": "closed",
        "title": "WT-2141: __meta_track_apply, __meta_track_unroll have unnecessarily complex error handling.",
        "body": "@michaelcahill, just a minor cleanup, but ought to be reviewed.\n",
        "base_ref": "develop",
        "created_at": "Sunday Sep 27, 2015 at 17:20 GMT",
        "updated_at": "Sunday Sep 27, 2015 at 23:14 GMT",
        "closed_at": "Sunday Sep 27, 2015 at 23:14 GMT",
        "merged_at": "Sunday Sep 27, 2015 at 23:14 GMT"
    },
    {
        "key": "WT-2122",
        "number": 2221,
        "state": "closed",
        "title": "WT-2122: Boolean conversion pass over include.",
        "body": "@michaelcahill, this is the last of the boolean conversions, I think I've looked at everything now.\n\nI didn't touch `WT_BTREE.modified` or `WT_LSM_TREE.modified` out of sheer paranoia.\n",
        "base_ref": "develop",
        "created_at": "Sunday Sep 27, 2015 at 16:39 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Monday Sep 28, 2015 at 02:24 GMT",
        "merged_at": "Monday Sep 28, 2015 at 02:24 GMT"
    },
    {
        "key": "WT-2140",
        "number": 2220,
        "state": "closed",
        "title": "WT-2140: WT_SESSION.reset can release more memory",
        "body": "@daveh86, @michaelcahill: it occurred to me we should be discarding reconciliation memory as part of `WT_SESSION.reset`, it can be real memory if the session reconciles a big page. (Imagine an application that hasn't configured enough eviction threads and is round-robining through sessions, each of which gets involved in eviction.)\n",
        "base_ref": "develop",
        "created_at": "Sunday Sep 27, 2015 at 15:28 GMT",
        "updated_at": "Monday Oct 26, 2015 at 01:28 GMT",
        "closed_at": "Monday Oct 26, 2015 at 01:28 GMT",
        "merged_at": "Monday Oct 26, 2015 at 01:28 GMT"
    },
    {
        "key": "WT-2119",
        "number": 2219,
        "state": "closed",
        "title": "WT-2119: don't evict clean multiblock pages with overflow items during checkpoints.",
        "body": "Another approach: track if an internal page has any on-page overflow keys.\n\n@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 25, 2015 at 23:34 GMT",
        "updated_at": "Monday Sep 28, 2015 at 04:20 GMT",
        "closed_at": "Monday Sep 28, 2015 at 04:20 GMT",
        "merged_at": "Monday Sep 28, 2015 at 04:20 GMT"
    },
    {
        "key": "WT-2132",
        "number": 2218,
        "state": "closed",
        "title": "WT-2132 Make debug dump function more robust to errors.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 25, 2015 at 00:54 GMT",
        "updated_at": "Monday Sep 28, 2015 at 05:05 GMT",
        "closed_at": "Friday Sep 25, 2015 at 02:25 GMT",
        "merged_at": "Friday Sep 25, 2015 at 02:25 GMT"
    },
    {
        "key": "WT-2132",
        "number": 2217,
        "state": "closed",
        "title": "WT-2132 Be more defensive in code used to debug address structures.",
        "body": "The code is used via diagnostics and salvage.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2015 at 23:24 GMT",
        "updated_at": "Thursday Sep 24, 2015 at 23:51 GMT",
        "closed_at": "Thursday Sep 24, 2015 at 23:51 GMT",
        "merged_at": "Thursday Sep 24, 2015 at 23:51 GMT"
    },
    {
        "key": "WT-2122",
        "number": 2216,
        "state": "closed",
        "title": "WT-2122 Use bool in more places",
        "body": "@michaelcahill, here's a boolean conversion pass over the rest of the source tree, except for src/include.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2015 at 23:10 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Thursday Sep 24, 2015 at 23:47 GMT",
        "merged_at": "Thursday Sep 24, 2015 at 23:47 GMT"
    },
    {
        "key": "WT-2134",
        "number": 2215,
        "state": "closed",
        "title": "WT-2134 Flush all buffered log records in log_flush",
        "body": "Force out pending log slot buffer to advance log->alloc_lsn for log_flush.  Fix example to use the correct config signature.\n\n@michaelcahill Please review this change to fix the bug in log_flush.  I also plan to write a new python unit test to simulate an \"abort\" and restart, but this merge does not need to wait on that new test.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2015 at 19:36 GMT",
        "updated_at": "Friday Sep 25, 2015 at 02:25 GMT",
        "closed_at": "Friday Sep 25, 2015 at 02:25 GMT",
        "merged_at": "Friday Sep 25, 2015 at 02:25 GMT"
    },
    {
        "key": "WT-2119",
        "number": 2214,
        "state": "closed",
        "title": "WT-2119: don't evict clean multiblock pages with overflow items during checkpoints.",
        "body": "@michaelcahill, this change looks solid in my test runs, I think it's ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2015 at 12:55 GMT",
        "updated_at": "Monday Sep 28, 2015 at 04:24 GMT",
        "closed_at": "Friday Sep 25, 2015 at 03:32 GMT",
        "merged_at": "Friday Sep 25, 2015 at 03:32 GMT"
    },
    {
        "key": "WT-2131",
        "number": 2213,
        "state": "closed",
        "title": "WT-2131 Switch to using a lock to control page splits.",
        "body": "We used to spin on setting an atomic flag, but we saw cases where that wasn't fair (and burned CPU).\n\nThis implementation adds a lock into the page structure - we could probably find a better place for that if the change is a general improvement.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 24, 2015 at 07:27 GMT",
        "updated_at": "Friday Oct 02, 2015 at 06:51 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 06:34 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 06:34 GMT"
    },
    {
        "key": "WT-2088",
        "number": 2212,
        "state": "closed",
        "title": "WT-2088  Clean up log verbose messages and comments.  Some code cleanup.",
        "body": "@michaelcahill Please review this code cleanup.  I enhanced some verbose messages, cleaned up a lot of comments and some of the logging code.  \n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 23, 2015 at 16:37 GMT",
        "updated_at": "Thursday Sep 24, 2015 at 16:51 GMT",
        "closed_at": "Thursday Sep 24, 2015 at 16:51 GMT",
        "merged_at": "Thursday Sep 24, 2015 at 16:51 GMT"
    },
    {
        "key": "WT-2127",
        "number": 2211,
        "state": "closed",
        "title": "WT-2127 Deepen the tree more regularly to avoid wide internal pages.",
        "body": "I was seeing internal pages grow to contain over 70,000 entries. Which makes reconciliation of child pages very expensive. Be more aggressive about splitting internal pages.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 23, 2015 at 07:38 GMT",
        "updated_at": "Friday Sep 25, 2015 at 04:56 GMT",
        "closed_at": "Friday Sep 25, 2015 at 04:56 GMT",
        "merged_at": "Friday Sep 25, 2015 at 04:56 GMT"
    },
    {
        "key": "WT-2126",
        "number": 2210,
        "state": "closed",
        "title": "WT-2126: page split locking",
        "body": "@michaelcahill, thinking about this: it reduces the chance of our doing any work before colliding with a checkpoint, at the cost of holding the parent page's reconciliation lock for a longer time.\n\nThis doesn't fix WT-2126, we can still be forced to unroll the split preparation, it's just far less likely.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 23, 2015 at 00:04 GMT",
        "updated_at": "Monday Jan 11, 2016 at 19:23 GMT",
        "closed_at": "Friday Sep 25, 2015 at 03:09 GMT",
        "merged_at": "Friday Sep 25, 2015 at 03:09 GMT"
    },
    {
        "key": "WT-2122",
        "number": 2209,
        "state": "closed",
        "title": "WT-2122 more boolean conversion",
        "body": "@michaelcahill, there are two changes on this branch (on separate commits, it should be easy to take one and not the other).\n\nThe first change converts `WT_PAGE_MODIFY.flags` from a \"flags\" field to an \"enum\" so we don't need all the masking we were doing. That field being a \"flags\" field was just a holdover from long-ago when there were flags there, or we thought there might be flags there, I don't even remember which it was.\n\nThe second change drives bool further down into reconciliation and the block manager, discussion in #2208.\n",
        "base_ref": "more-bool",
        "created_at": "Tuesday Sep 22, 2015 at 17:15 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Thursday Sep 24, 2015 at 04:29 GMT",
        "merged_at": "Thursday Sep 24, 2015 at 04:29 GMT"
    },
    {
        "key": "WT-2122",
        "number": 2208,
        "state": "closed",
        "title": "WT-2122 Convert more expressions to use bool",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 21, 2015 at 23:41 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Thursday Sep 24, 2015 at 05:18 GMT",
        "merged_at": "Thursday Sep 24, 2015 at 05:18 GMT"
    },
    {
        "key": "WT-2039",
        "number": 2207,
        "state": "closed",
        "title": "WT-2039 Add error check and unit test for log records over 4Gb.",
        "body": "@michaelcahill Please review this change and unit test for handling attempts to log > 4Gb.  In particular I'm open to modifying which error is returned (per comment, which will need to be removed once decided).  If the error changes, the `msg` in the unit test needs to be updated too.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 21, 2015 at 16:51 GMT",
        "updated_at": "Tuesday Mar 29, 2016 at 03:05 GMT",
        "closed_at": "Tuesday Sep 22, 2015 at 18:18 GMT",
        "merged_at": "Tuesday Sep 22, 2015 at 18:18 GMT"
    },
    {
        "key": "WT-2115",
        "number": 2206,
        "state": "closed",
        "title": "WT-2115 Don't skip truncated pages that are part of a checkpoint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 21, 2015 at 00:07 GMT",
        "updated_at": "Sunday Jan 10, 2016 at 01:57 GMT",
        "closed_at": "Tuesday Sep 22, 2015 at 13:25 GMT",
        "merged_at": "Tuesday Sep 22, 2015 at 13:25 GMT"
    },
    {
        "key": "WT-2115",
        "number": 2205,
        "state": "closed",
        "title": "WT-2115: fast-delete pages can be incorrectly lost due to a crash.",
        "body": "@michaelcahill, this is what I'm thinking for WT-2115.\n\nIt's untested (I just wrote it up on the plane ride home), so probably not ready to merge.\n\nOne interesting change: I'm making it more likely we'll write proxy cells, which allows us to evict internal pages we'd not otherwise evict. Seems reasonable, if we're trying to evict internal pages, things are already bad.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 21, 2015 at 00:04 GMT",
        "updated_at": "Monday Sep 28, 2015 at 05:26 GMT",
        "closed_at": "Tuesday Sep 22, 2015 at 13:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2117",
        "number": 2204,
        "state": "closed",
        "title": "WT-2117 Set a minimum of 1MB cache per thread in test/format",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Sep 20, 2015 at 23:41 GMT",
        "updated_at": "Monday Sep 21, 2015 at 01:46 GMT",
        "closed_at": "Monday Sep 21, 2015 at 01:46 GMT",
        "merged_at": "Monday Sep 21, 2015 at 01:46 GMT"
    },
    {
        "key": "WT-2114",
        "number": 2203,
        "state": "closed",
        "title": "WT-2114 Make application eviction fairer",
        "body": "Have it use a global evict count rather than a count of evictions done by this thread.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 18, 2015 at 02:51 GMT",
        "updated_at": "Thursday Oct 01, 2015 at 03:22 GMT",
        "closed_at": "Thursday Oct 01, 2015 at 03:22 GMT",
        "merged_at": "Thursday Oct 01, 2015 at 03:22 GMT"
    },
    {
        "key": "WT-2112",
        "number": 2202,
        "state": "closed",
        "title": "WT-2112: Coverity 73704, 73705, memory leak in salvage",
        "body": "@sueloverso, another Coverity fix for review & merge, please!\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 17, 2015 at 14:19 GMT",
        "updated_at": "Thursday Sep 17, 2015 at 15:08 GMT",
        "closed_at": "Thursday Sep 17, 2015 at 14:38 GMT",
        "merged_at": "Thursday Sep 17, 2015 at 14:38 GMT"
    },
    {
        "key": "WT-2111",
        "number": 2201,
        "state": "closed",
        "title": "WT-2111: coverity complaint",
        "body": "@sueloverso, would you please do the review and merge on this one?\n\nOne note, it looked to me like it was OK to simply set `WT_CURSOR.saved_err` (potentially clearing it), in this case.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 17, 2015 at 13:59 GMT",
        "updated_at": "Thursday Sep 17, 2015 at 14:08 GMT",
        "closed_at": "Thursday Sep 17, 2015 at 14:08 GMT",
        "merged_at": "Thursday Sep 17, 2015 at 14:08 GMT"
    },
    {
        "key": "Re-",
        "number": 2200,
        "state": "closed",
        "title": "Re-organize and rename WT riak/basho tests.",
        "body": "As per the email discussion with Sue. Renamed the test1-4 suite and added a few extra comments\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 17, 2015 at 03:50 GMT",
        "updated_at": "Thursday Sep 17, 2015 at 11:50 GMT",
        "closed_at": "Thursday Sep 17, 2015 at 11:06 GMT",
        "merged_at": "Thursday Sep 17, 2015 at 11:06 GMT"
    },
    {
        "key": "WT-2104",
        "number": 2199,
        "state": "closed",
        "title": "WT-2104 Write up commit and log_flush options.",
        "body": "Also add large default value for transaction_sync.\n\n@keithbostic and @michaelcahill Please review these changes.  I added a large, real default value for the `transaction_sync` method.  I also wrote up the options for `commit_transaction` and `log_flush`.  They're a bit redundant.  Let me know if there is enough information about the `background` setting.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 16, 2015 at 18:05 GMT",
        "updated_at": "Friday Sep 18, 2015 at 00:21 GMT",
        "closed_at": "Friday Sep 18, 2015 at 00:21 GMT",
        "merged_at": "Friday Sep 18, 2015 at 00:21 GMT"
    },
    {
        "key": "WT-2104",
        "number": 2198,
        "state": "closed",
        "title": "WT-2104 Log flush 3.0",
        "body": "@michaelcahill  Please review this backport of the `log_flush` API to the 3.0 branch.  I separated the commits and you can pick/choose how much you want to take.  The first commit 452b2ee is the minimal core set of changes for `log_flush`.  The second change, 1ace43e is a possibly gratuitous addition of using the new API in the logging example code.  The third change, 2db4898 contains KNF fixes that appeared when I built my tree (in other files, not related to this change).\n\nTake as much or as little as you want.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Wednesday Sep 16, 2015 at 16:08 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 23:37 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 23:37 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 23:37 GMT"
    },
    {
        "key": "ER-20159",
        "number": 2197,
        "state": "closed",
        "title": "SERVER-20159 Make all readers wait while the cache is full.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 16, 2015 at 12:18 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 23:24 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 23:24 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 23:24 GMT"
    },
    {
        "key": "WT-2042",
        "number": 2196,
        "state": "closed",
        "title": "WT-2042 Only try to evict tombstones that are visible to all readers.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 16, 2015 at 11:58 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 12:17 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 12:17 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 12:17 GMT"
    },
    {
        "key": "WT-2109",
        "number": 2195,
        "state": "closed",
        "title": "WT-2109 Slow op tracker",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 16, 2015 at 05:01 GMT",
        "updated_at": "Thursday Jul 28, 2016 at 00:44 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 04:08 GMT",
        "merged_at": null
    },
    {
        "key": "ER-20385",
        "number": 2194,
        "state": "closed",
        "title": "SERVER-20385: WT_CURSOR.next(random) more random",
        "body": "@michaelcahill, for review & merge.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 15, 2015 at 21:31 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 01:31 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 01:31 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 01:31 GMT"
    },
    {
        "key": "WT-2104",
        "number": 2193,
        "state": "closed",
        "title": "WT-2104 New log_flush API to control the flushing or syncing of the log.",
        "body": "@keithbostic and @michaelcahill Please review.  You can see the implementation and we can debate naming.  I chose `log_flush` since I also support forcing a write-no-sync and use `sync` for the configuration name to match the `sync` config parameter on other APIs.  I offer `background, sync, write` as the choices for `sync` (which is different from `commit_transaction`).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 15, 2015 at 17:39 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 16:04 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 16:04 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 16:04 GMT"
    },
    {
        "key": "WT-2108",
        "number": 2192,
        "state": "closed",
        "title": "WT-2108 Rework in-memory page rewrite support (WT_PM_REC_REWRITE).",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 15, 2015 at 11:53 GMT",
        "updated_at": "Wednesday Oct 14, 2015 at 02:27 GMT",
        "closed_at": "Monday Oct 12, 2015 at 01:25 GMT",
        "merged_at": "Monday Oct 12, 2015 at 01:25 GMT"
    },
    {
        "key": "WT-2075",
        "number": 2191,
        "state": "closed",
        "title": "WT-2075 - Add test for log hang with large parallel workload",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 15, 2015 at 05:29 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 11:53 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 11:53 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 11:53 GMT"
    },
    {
        "key": "WT-2101",
        "number": 2190,
        "state": "closed",
        "title": "WT-2101 Don't update the logging ckpt_lsn on clean shutdown.",
        "body": "It can race with archive.  Metadata LSNs may not be updated on clean shutdown.\n\n@michaelcahill Please review.  This fixes the missing file errors with `test_txn11`.  Also a minor KNF I saw along the way.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 14, 2015 at 20:08 GMT",
        "updated_at": "Sunday Jan 10, 2016 at 01:58 GMT",
        "closed_at": "Tuesday Sep 15, 2015 at 01:04 GMT",
        "merged_at": "Tuesday Sep 15, 2015 at 01:04 GMT"
    },
    {
        "key": "WT-147",
        "number": 2189,
        "state": "closed",
        "title": "WT-147: Dynamic Index creation.  Use bulk=unordered",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 14, 2015 at 17:28 GMT",
        "updated_at": "Tuesday Sep 22, 2015 at 13:54 GMT",
        "closed_at": "Tuesday Sep 22, 2015 at 05:59 GMT",
        "merged_at": "Tuesday Sep 22, 2015 at 05:59 GMT"
    },
    {
        "key": "ER-20193",
        "number": 2188,
        "state": "closed",
        "title": "SERVER-20193 Fix obsolete transaction check",
        "body": "@michaelcahill, just a couple of things I noticed by inspection this morning -- please review, maybe I'm just misreading the code!\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 14, 2015 at 15:06 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 11:54 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 11:54 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 11:54 GMT"
    },
    {
        "key": "WT-2104",
        "number": 2187,
        "state": "closed",
        "title": "WT-2104 Change log_printf to be synchronous.",
        "body": "@keithbostic and @michaelcahill  Here is a simple set of changes to accomplish a synchronous flushing of the log via log_printf.  Feel free to toss if you don't like it.  I confirmed by turning on statistics and adding a couple more log_printf calls in ex_log.c and watch the log sync stat go up.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 12, 2015 at 00:17 GMT",
        "updated_at": "Tuesday Sep 15, 2015 at 17:52 GMT",
        "closed_at": "Tuesday Sep 15, 2015 at 17:52 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2102",
        "number": 2186,
        "state": "closed",
        "title": "WT-2102 Combine the switch and force_write functions.",
        "body": "All paths check whether they have closed the slot and need to retry\ncreating a new slot if they get EBUSY.\n\n@michaelcahill Please review this.  This solves the hang and it is better to have a single function doing this work.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 11, 2015 at 23:37 GMT",
        "updated_at": "Monday Sep 14, 2015 at 01:43 GMT",
        "closed_at": "Monday Sep 14, 2015 at 01:43 GMT",
        "merged_at": "Monday Sep 14, 2015 at 01:43 GMT"
    },
    {
        "key": "WT-2093",
        "number": 2185,
        "state": "closed",
        "title": "WT-2093 Fix bugs treating error returns as booleans",
        "body": "@michaelcahill, here are the fixes for the two bugs you identified in WT-2093.\n\nReady for review & merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 11, 2015 at 16:49 GMT",
        "updated_at": "Wednesday Sep 16, 2015 at 08:27 GMT",
        "closed_at": "Wednesday Sep 16, 2015 at 08:26 GMT",
        "merged_at": "Wednesday Sep 16, 2015 at 08:26 GMT"
    },
    {
        "key": "WT-2100",
        "number": 2184,
        "state": "closed",
        "title": "WT-2100 Rename evict to evict_queue so it's easier to search for.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Sep 11, 2015 at 04:40 GMT",
        "updated_at": "Monday Sep 14, 2015 at 01:34 GMT",
        "closed_at": "Monday Sep 14, 2015 at 01:34 GMT",
        "merged_at": "Monday Sep 14, 2015 at 01:34 GMT"
    },
    {
        "key": null,
        "number": 2183,
        "state": "closed",
        "title": "Fix incorrect assert in Windows error handling",
        "body": "This assert was wrong when I shifted the WIndows error range. It should just be < 0.\n\nAlso fixed an issue where a buffer was not correctly null-terminated by switching from `__wt_buf_set` to  `__wt_buf_fmt` during this testing.\n\nTests:\nWindows build\nAdhoc fault injection into __wt_read to ensure it is printed correctly.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 10, 2015 at 21:16 GMT",
        "updated_at": "Thursday Sep 10, 2015 at 23:03 GMT",
        "closed_at": "Thursday Sep 10, 2015 at 23:03 GMT",
        "merged_at": "Thursday Sep 10, 2015 at 23:03 GMT"
    },
    {
        "key": "WT-2075",
        "number": 2182,
        "state": "closed",
        "title": "WT-2075 When closing a slot, detect, return and handle different values.",
        "body": "This avoids hangs when rapidly filling log files so that in progress\nwrites can actually finish.\n\n@michaelcahill Please review this branch to solve the hang with many threads and very few records per log file.  There are a couple things of note:\n1.  Performance generally is a bit better than currently because by detecting these different conditions, there actually is less slot churn.\n2.  Please consider the places where I used `*_BUSY_OK` and if it would be otherwise appropriate to loop/wait for a forced write to complete.  In particular, log cursors could still see a written log record still buffered if it happens when another thread is in the middle of its write.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 10, 2015 at 18:20 GMT",
        "updated_at": "Friday Sep 11, 2015 at 02:07 GMT",
        "closed_at": "Friday Sep 11, 2015 at 02:06 GMT",
        "merged_at": "Friday Sep 11, 2015 at 02:06 GMT"
    },
    {
        "key": "WT-2097",
        "number": 2181,
        "state": "closed",
        "title": "WT-2097 Reintroduce immediate waits when forced eviction is necessary.",
        "body": "Reverts part of 0af2b62e6fa8abb968f0847691f18e5b9c79b11f\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 10, 2015 at 06:35 GMT",
        "updated_at": "Friday Sep 11, 2015 at 00:49 GMT",
        "closed_at": "Friday Sep 11, 2015 at 00:49 GMT",
        "merged_at": "Friday Sep 11, 2015 at 00:49 GMT"
    },
    {
        "key": "WT-2094",
        "number": 2180,
        "state": "closed",
        "title": "WT-2094 Eliminate direct write and record unbuffered log records that",
        "body": "are arbitrarily large.\n\n@michaelcahill Please review these changes.  I think this is a much better implementation of handling log records that are larger than the memory buffer.  This code does have a similar \"force\" setting enabled at this time, but it is much less intrusive than the old code.\n\nI'm going to start up test/format on AWS against this code, but it passes the normal tests.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 08, 2015 at 21:01 GMT",
        "updated_at": "Thursday Sep 10, 2015 at 00:54 GMT",
        "closed_at": "Thursday Sep 10, 2015 at 00:38 GMT",
        "merged_at": "Thursday Sep 10, 2015 at 00:38 GMT"
    },
    {
        "key": "WT-2089",
        "number": 2179,
        "state": "closed",
        "title": "WT-2089 relax restrictions on multiblock eviction, in-memory splits",
        "body": "@michaelcahill, I created this branch while responding to your comments on WT-2089, probably not interesting until those discussions wrap up.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 08, 2015 at 13:40 GMT",
        "updated_at": "Monday Sep 21, 2015 at 23:05 GMT",
        "closed_at": "Thursday Sep 10, 2015 at 00:53 GMT",
        "merged_at": "Thursday Sep 10, 2015 at 00:53 GMT"
    },
    {
        "key": "WT-2093",
        "number": 2178,
        "state": "closed",
        "title": "WT-2093 Use the C99 bool type to clarify when functions return true/false",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 08, 2015 at 05:41 GMT",
        "updated_at": "Monday Jan 11, 2016 at 21:23 GMT",
        "closed_at": "Friday Sep 11, 2015 at 02:08 GMT",
        "merged_at": "Friday Sep 11, 2015 at 02:08 GMT"
    },
    {
        "key": "ER-20193",
        "number": 2177,
        "state": "closed",
        "title": "SERVER-20193 - Performance regression fix",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 08, 2015 at 04:10 GMT",
        "updated_at": "Thursday Sep 10, 2015 at 00:54 GMT",
        "closed_at": "Thursday Sep 10, 2015 at 00:00 GMT",
        "merged_at": "Thursday Sep 10, 2015 at 00:00 GMT"
    },
    {
        "key": "WT-2092",
        "number": 2176,
        "state": "closed",
        "title": "WT-2092 Free log condition variables after all threads are joined.",
        "body": "Prevents any possible races when shutting down log utility threads.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 07, 2015 at 23:36 GMT",
        "updated_at": "Tuesday Sep 08, 2015 at 00:02 GMT",
        "closed_at": "Tuesday Sep 08, 2015 at 00:02 GMT",
        "merged_at": "Tuesday Sep 08, 2015 at 00:02 GMT"
    },
    {
        "key": "WT-2086",
        "number": 2175,
        "state": "closed",
        "title": "WT-2086 Add a statistic to track when can_evict sees splittable pages.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 07, 2015 at 01:15 GMT",
        "updated_at": "Tuesday Sep 08, 2015 at 00:15 GMT",
        "closed_at": "Tuesday Sep 08, 2015 at 00:15 GMT",
        "merged_at": "Tuesday Sep 08, 2015 at 00:15 GMT"
    },
    {
        "key": "WT-147",
        "number": 2174,
        "state": "closed",
        "title": "WT-147. Dynamic index creation, using LSM bulk=unordered",
        "body": "This branch uses LSM bulk=unordered. Because I'm opening an LSM file indirectly fix via an index cursor, we need to do a little footwork to keep the bulk flag on the index file, and not the column group files.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 05, 2015 at 12:10 GMT",
        "updated_at": "Thursday Sep 17, 2015 at 14:09 GMT",
        "closed_at": "Thursday Sep 17, 2015 at 14:09 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2090",
        "number": 2173,
        "state": "closed",
        "title": "WT-2090: Avoid losing errors from the underlying Windows functions.",
        "body": "@markbenvenuto, can you review & merge if this is correct?\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 04, 2015 at 21:35 GMT",
        "updated_at": "Saturday Sep 05, 2015 at 12:41 GMT",
        "closed_at": "Saturday Sep 05, 2015 at 12:38 GMT",
        "merged_at": "Saturday Sep 05, 2015 at 12:38 GMT"
    },
    {
        "key": "WT-2085",
        "number": 2172,
        "state": "closed",
        "title": "WT-2085 Run some of the log_server threads operations more frequently",
        "body": "than others.  In particular, flush the log slot 20x per second.\n\n@keithbostic Would you please review?  I added a new API for waiting on conditions.  This change allows the log slot to be forced out more frequently than other operations in the same worker thread rather than having to create a new thread.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 04, 2015 at 17:53 GMT",
        "updated_at": "Friday Sep 04, 2015 at 21:28 GMT",
        "closed_at": "Friday Sep 04, 2015 at 21:27 GMT",
        "merged_at": "Friday Sep 04, 2015 at 21:27 GMT"
    },
    {
        "key": "WT-2035",
        "number": 2171,
        "state": "closed",
        "title": "WT-2035. For index cursors, keep track of which column groups need to be positioned.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 03, 2015 at 17:49 GMT",
        "updated_at": "Friday Sep 04, 2015 at 01:01 GMT",
        "closed_at": "Friday Sep 04, 2015 at 01:01 GMT",
        "merged_at": "Friday Sep 04, 2015 at 01:01 GMT"
    },
    {
        "key": "WT-2081",
        "number": 2170,
        "state": "closed",
        "title": "WT-2081 Make verify progress reporting less verbose.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 03, 2015 at 05:29 GMT",
        "updated_at": "Thursday Sep 03, 2015 at 14:12 GMT",
        "closed_at": "Thursday Sep 03, 2015 at 14:12 GMT",
        "merged_at": "Thursday Sep 03, 2015 at 14:12 GMT"
    },
    {
        "key": "WT-2076",
        "number": 2169,
        "state": "closed",
        "title": "WT-2076 cleanup",
        "body": "@agorrod, here are most of the changes from the `wt-2076-append-slowdown` branch.\n\nI've tried to do the commits in a step-wise fashion for clarity, would you please do the review?\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 03, 2015 at 00:58 GMT",
        "updated_at": "Friday Sep 04, 2015 at 05:49 GMT",
        "closed_at": "Friday Sep 04, 2015 at 05:49 GMT",
        "merged_at": "Friday Sep 04, 2015 at 05:49 GMT"
    },
    {
        "key": "WT-2074",
        "number": 2168,
        "state": "closed",
        "title": "WT-2074: fix a race between lookaside table reconciliation and checkpoints.",
        "body": "@michaelcahill, I hate to maintain a count of LAS evictions in progress, and wait for that to drain.\n\nWhat do you think of checking the generation values before/after the reconciliation?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 02, 2015 at 16:29 GMT",
        "updated_at": "Monday Sep 07, 2015 at 00:22 GMT",
        "closed_at": "Monday Sep 07, 2015 at 00:22 GMT",
        "merged_at": "Monday Sep 07, 2015 at 00:22 GMT"
    },
    {
        "key": "WT-2076",
        "number": 2167,
        "state": "closed",
        "title": "WT-2076 Fix a bug that stops us writing out large pages with updates",
        "body": "Fix a bug that stops us writing out large pages with updates  that are new enough that they need to stay visible.\n\nThis is a workaround - the solution is hacky and incomplete. See comments in the patch for a description of the issue.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 02, 2015 at 08:41 GMT",
        "updated_at": "Wednesday Sep 02, 2015 at 21:07 GMT",
        "closed_at": "Wednesday Sep 02, 2015 at 15:11 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2078",
        "number": 2166,
        "state": "closed",
        "title": "WT-2078 prevent segfault with NULL statistics cursor during OOM conditions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2015 at 19:22 GMT",
        "updated_at": "Wednesday Sep 02, 2015 at 01:13 GMT",
        "closed_at": "Wednesday Sep 02, 2015 at 01:13 GMT",
        "merged_at": "Wednesday Sep 02, 2015 at 01:13 GMT"
    },
    {
        "key": "WT-2076",
        "number": 2165,
        "state": "closed",
        "title": "WT-2076 wtperf slowdown.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2015 at 15:19 GMT",
        "updated_at": "Thursday Sep 03, 2015 at 06:03 GMT",
        "closed_at": "Thursday Sep 03, 2015 at 06:03 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2034",
        "number": 2164,
        "state": "closed",
        "title": "WT-2034 Fine tune weighting of operations in shared cache balancing.",
        "body": "Update the code to be less aggressive towards application evictions\nand application stalls. Being so aggressive led to unfair treatment\nof read only workloads, and also more jitter in allocations over time.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 01, 2015 at 06:33 GMT",
        "updated_at": "Friday Sep 04, 2015 at 05:58 GMT",
        "closed_at": "Friday Sep 04, 2015 at 05:58 GMT",
        "merged_at": "Friday Sep 04, 2015 at 05:58 GMT"
    },
    {
        "key": "WT-2069",
        "number": 2163,
        "state": "closed",
        "title": "WT-2069 - Add truncate to wtperf_run.sh",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 31, 2015 at 02:06 GMT",
        "updated_at": "Friday Sep 04, 2015 at 05:57 GMT",
        "closed_at": "Friday Sep 04, 2015 at 05:57 GMT",
        "merged_at": "Friday Sep 04, 2015 at 05:57 GMT"
    },
    {
        "key": "WT-1967",
        "number": 2162,
        "state": "closed",
        "title": "WT-1967: don't dirty the tree/page when instantiating lookaside table records",
        "body": "@michaelcahill, this change fixes some sporadic errors we've been seeing, generally I see it as an eviction server panic or `write operation on read-only checkpoint handle` error.\n\nIn short, we can't allow instantiating lookaside table records on a page being read into the cache dirty the tree/page, because if it's a checkpoint handle, we're never going to be able to write it, and it eventually all goes south during close or eviction.\n\nI'm putting this on a branch, it needs review.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 29, 2015 at 17:43 GMT",
        "updated_at": "Sunday Aug 30, 2015 at 14:11 GMT",
        "closed_at": "Sunday Aug 30, 2015 at 14:11 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1967",
        "number": 2161,
        "state": "closed",
        "title": "WT-1967 fix an \"uninitialized variable\" warning.",
        "body": "../src/reconcile/rec_write.c: In function '__rec_split_write':\n../src/reconcile/rec_write.c:3252: warning: 'upd' may be used uninitialized in this function\n\nMake it really obvious to dumb compilers that we're not going to continue after an illegal value.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 28, 2015 at 07:31 GMT",
        "updated_at": "Friday Aug 28, 2015 at 12:32 GMT",
        "closed_at": "Friday Aug 28, 2015 at 07:47 GMT",
        "merged_at": "Friday Aug 28, 2015 at 07:47 GMT"
    },
    {
        "key": "WT-2056",
        "number": 2160,
        "state": "closed",
        "title": "WT-2056 Reorder btree cursor close so stats are maintained correctly.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 28, 2015 at 06:42 GMT",
        "updated_at": "Monday Aug 31, 2015 at 00:29 GMT",
        "closed_at": "Monday Aug 31, 2015 at 00:29 GMT",
        "merged_at": "Monday Aug 31, 2015 at 00:29 GMT"
    },
    {
        "key": "WT-2034",
        "number": 2159,
        "state": "closed",
        "title": "WT-2034 Fix lint re casting in shared cache code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 28, 2015 at 06:26 GMT",
        "updated_at": "Friday Aug 28, 2015 at 06:36 GMT",
        "closed_at": "Friday Aug 28, 2015 at 06:35 GMT",
        "merged_at": "Friday Aug 28, 2015 at 06:35 GMT"
    },
    {
        "key": "WT-147",
        "number": 2158,
        "state": "closed",
        "title": "WT-147 Dynamic index creation : LSM locking with bulk=unordered",
        "body": "Not ready for merge!  Demonstrate still having a locking issue using proposed LSM bulk=unordered flag.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2015 at 14:07 GMT",
        "updated_at": "Thursday Sep 03, 2015 at 06:05 GMT",
        "closed_at": "Thursday Sep 03, 2015 at 06:05 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2067",
        "number": 2157,
        "state": "closed",
        "title": "WT-2067: Fix unused variable warnings",
        "body": "The alternate compile builder for Windows was failing with these warnings.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2015 at 12:24 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 13:32 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 13:32 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 13:32 GMT"
    },
    {
        "key": "WT-2066",
        "number": 2156,
        "state": "closed",
        "title": "WT-2066 - Update the oldest transaction ID from eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2015 at 04:35 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 05:11 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 05:11 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 05:11 GMT"
    },
    {
        "key": "WT-2064",
        "number": 2155,
        "state": "closed",
        "title": "WT-2064 Don't spin indefinitely waiting for the handle list lock in eviction",
        "body": "A thread may be holding that lock (e.g., verify) and waiting for the eviction server to clear a walk, leading to deadlock.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 27, 2015 at 02:49 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 14:03 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 14:03 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 14:03 GMT"
    },
    {
        "key": "WT-2065",
        "number": 2154,
        "state": "closed",
        "title": "WT-2065 Add a quota to shared cache configuration.",
        "body": "That provides the ability to limit how much cache a single participant in a shared cache can be allocated.\n",
        "base_ref": "shared-cache-gradual",
        "created_at": "Thursday Aug 27, 2015 at 02:16 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 04:34 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 04:34 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 04:34 GMT"
    },
    {
        "key": "ey-",
        "number": 2153,
        "state": "closed",
        "title": "Specify a key-format to simplify creating lookaside table records.",
        "body": "@michaelcahill, I haven't tested this extensively yet, but this is the direction I'm heading (it seems to run, fwiw).\n\nThis removes the flag byte from the beginning of the lookaside table records, I don't see any way to support multiple formats in that table.\n",
        "base_ref": "wt-1967-evict-any",
        "created_at": "Wednesday Aug 26, 2015 at 22:25 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 00:43 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 00:43 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 00:43 GMT"
    },
    {
        "key": "WT-2062",
        "number": 2152,
        "state": "closed",
        "title": "WT-2062 Try harder to make progress on in-memory splits",
        "body": "Only give up if a checkpoint is in progress.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 26, 2015 at 07:23 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 02:59 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 02:59 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 02:59 GMT"
    },
    {
        "key": "WT-2051",
        "number": 2151,
        "state": "closed",
        "title": "WT-2051 - Add an error when WT is unable to open the metadata file",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 26, 2015 at 07:11 GMT",
        "updated_at": "Wednesday Aug 26, 2015 at 07:34 GMT",
        "closed_at": "Wednesday Aug 26, 2015 at 07:19 GMT",
        "merged_at": null
    },
    {
        "key": "WT-147",
        "number": 2150,
        "state": "closed",
        "title": "WT-147 Add undocumented bulk=unordered for LSM cursors.",
        "body": "The feature allows us to stop worrying about schema lock interactions when building LSM indexes on existing tables.\n",
        "base_ref": "index-create",
        "created_at": "Wednesday Aug 26, 2015 at 04:24 GMT",
        "updated_at": "Tuesday Sep 22, 2015 at 06:01 GMT",
        "closed_at": "Monday Sep 14, 2015 at 01:29 GMT",
        "merged_at": "Monday Sep 14, 2015 at 01:29 GMT"
    },
    {
        "key": "WT-2059",
        "number": 2149,
        "state": "closed",
        "title": "WT-2059 Include non-aggregated stats in cursor results.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 25, 2015 at 05:39 GMT",
        "updated_at": "Wednesday Aug 26, 2015 at 00:14 GMT",
        "closed_at": "Tuesday Aug 25, 2015 at 13:30 GMT",
        "merged_at": "Tuesday Aug 25, 2015 at 13:30 GMT"
    },
    {
        "key": "ER-20008",
        "number": 2148,
        "state": "closed",
        "title": "SERVER-20008 Don't reset eviction walks when hitting a busy page.",
        "body": "Also, when clearing eviction walk points before the eviction server goes to sleep, clear _all_ walks, not just ones that sessions are waiting to be have cleared.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 25, 2015 at 04:19 GMT",
        "updated_at": "Tuesday Aug 25, 2015 at 05:53 GMT",
        "closed_at": "Tuesday Aug 25, 2015 at 05:41 GMT",
        "merged_at": "Tuesday Aug 25, 2015 at 05:41 GMT"
    },
    {
        "key": "WT-2051",
        "number": 2147,
        "state": "closed",
        "title": "WT-2051, WT-1822.  Add test for decrypt returning an error",
        "body": "",
        "base_ref": "wt-1822-encryption",
        "created_at": "Tuesday Aug 25, 2015 at 01:29 GMT",
        "updated_at": "Tuesday Aug 25, 2015 at 23:13 GMT",
        "closed_at": "Tuesday Aug 25, 2015 at 23:13 GMT",
        "merged_at": "Tuesday Aug 25, 2015 at 23:13 GMT"
    },
    {
        "key": "WT-2051",
        "number": 2146,
        "state": "closed",
        "title": "WT-2051, WT-1822 encryption tests",
        "body": "Added encryption test covering the case in which decrypt returns an error.  The error code must be returned by wiredtiger_open.\n",
        "base_ref": "master",
        "created_at": "Tuesday Aug 25, 2015 at 01:25 GMT",
        "updated_at": "Tuesday Aug 25, 2015 at 01:30 GMT",
        "closed_at": "Tuesday Aug 25, 2015 at 01:26 GMT",
        "merged_at": null
    },
    {
        "key": "ER-19990",
        "number": 2145,
        "state": "closed",
        "title": "SERVER-19990 Don't assert on eviction of live updates from dead trees.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2015 at 23:56 GMT",
        "updated_at": "Tuesday Aug 25, 2015 at 01:35 GMT",
        "closed_at": "Tuesday Aug 25, 2015 at 01:35 GMT",
        "merged_at": "Tuesday Aug 25, 2015 at 01:35 GMT"
    },
    {
        "key": "WT-2051",
        "number": 2144,
        "state": "closed",
        "title": "WT-2051 Encryption/metadata error cleanup.",
        "body": "@ddanderson, @michaelcahill, @daveh86:\n\nHere is a branch to show what I'm thinking about with respect to WT-2051 (#2138).\n\nAdditionally, Andreas wrote to Don:\n\n> So I tried returning a unique error code from the decrypt callback but it doesn't help me. I still get the the following errors:\n> \n> WiredTiger (0) [1440422383:942164][87246:0x7fff7477a300], file:WiredTiger.wt,\n> connection: file:WiredTiger.wt: encountered an illegal file format or internal value\n> \n> WiredTiger (-31804) [1440422383:942200][87246:0x7fff7477a300],\n> file:WiredTiger.wt, connection: the process must exit and restart:\n> WT_PANIC: WiredTiger library panic\n\nIn summary, all I did here was special-case the read/verify of the btree root page when a file is first opened, so errors from that read/verify don't output scary messages into the MongoDB log, nor will they panic the system.\n\nI believe this branch fixes Andreas' concern as well (although I didn't test it); the btree read function no longer overwrites the result of the decryption function if \"corruption\" is anticipated.\n\nI'm not sure this is the correct solution and I'm happy to discard this branch in favor of something better, but I thought it might be easier to code it than to explain it in GitHub comments.\n\nDon, I think you said you would write up a test of the behavior that Andreas is looking for?\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 24, 2015 at 17:08 GMT",
        "updated_at": "Wednesday Aug 26, 2015 at 07:00 GMT",
        "closed_at": "Wednesday Aug 26, 2015 at 07:00 GMT",
        "merged_at": "Wednesday Aug 26, 2015 at 07:00 GMT"
    },
    {
        "key": null,
        "number": 2143,
        "state": "closed",
        "title": "Replace the WT_PAGE_SPLIT_LOCKED lock with WT_PAGE_RECONCILIATION.",
        "body": "@michaelcahill, staring at the page locks this morning, it occurred to me we don't need `WT_PAGE_SPLIT_LOCKED` -- reconciliation has to acquire it on every internal page, which means `WT_PAGE_RECONCILIATION` is just as good.\n\nAs of 3a41ccb, `WT_PAGE_RECONCILIATION` is used to block the trimming of obsolete updates and to protect compaction when it's reading page modify information. Updates don't happen on internal pages, and compaction of internal pages doesn't seem like much of a blocker.\n\nThe gain isn't that (one less atomic operation when reconciling every internal page), but I think it's a bit simpler/cleaner.\n\nFeel free to discard this branch if you disagree, of course.\n",
        "base_ref": "wt-1967-evict-any",
        "created_at": "Sunday Aug 23, 2015 at 14:58 GMT",
        "updated_at": "Wednesday Aug 26, 2015 at 06:18 GMT",
        "closed_at": "Wednesday Aug 26, 2015 at 06:18 GMT",
        "merged_at": "Wednesday Aug 26, 2015 at 06:18 GMT"
    },
    {
        "key": "WT-2058",
        "number": 2142,
        "state": "closed",
        "title": "WT-2058: Fix mutex and log-slot alignment.",
        "body": "@michaelcahill, I think this is ready for review and merge.\n\nOne thing: we currently align the WT_LSM_CHUNK structure, and the declaration syntax is correct so it's being correctly aligned. However, I couldn't figure out exactly where/how it's being allocated, so that made me wonder if it really needs to be aligned in any interesting way? If it does and there's an obvious place to do it, we might want to add a `WT_CACHE_LINE_ALIGNMENT_VERIFY` call to verify that we get the alignment we want.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 22, 2015 at 23:46 GMT",
        "updated_at": "Monday Aug 24, 2015 at 07:27 GMT",
        "closed_at": "Monday Aug 24, 2015 at 07:27 GMT",
        "merged_at": "Monday Aug 24, 2015 at 07:27 GMT"
    },
    {
        "key": "WT-2057",
        "number": 2141,
        "state": "closed",
        "title": "WT-2057: Strip the verbose configuration as part of writing the base configuration file.",
        "body": "WT-2057: The verbose configuration is being written to the base configuration file, which means all subsequent runs (including wt command runs), inherit the verbose flags from the initial run.\n\nStrip the verbose configuration as part of writing the base configuration file.\n\n@michaelcahill, ready for review & merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2015 at 16:01 GMT",
        "updated_at": "Monday Aug 24, 2015 at 11:01 GMT",
        "closed_at": "Monday Aug 24, 2015 at 07:18 GMT",
        "merged_at": "Monday Aug 24, 2015 at 07:18 GMT"
    },
    {
        "key": "WT-2052",
        "number": 2140,
        "state": "closed",
        "title": "WT-2052: OS X clang compiler warnings.",
        "body": "Add atomic functions for size_t type, rework btree.i to use size_t functions when updating WT_PAGE.memory_footprint and WT_PAGE_MODIFY.bytes_dirty.\n\n@michaelcahill, @ddanderson, ready for review and merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2015 at 13:37 GMT",
        "updated_at": "Monday Aug 24, 2015 at 07:29 GMT",
        "closed_at": "Monday Aug 24, 2015 at 07:29 GMT",
        "merged_at": "Monday Aug 24, 2015 at 07:29 GMT"
    },
    {
        "key": "WT-2050",
        "number": 2139,
        "state": "closed",
        "title": "WT-2050 - when memory allocation fails, say how much memory we were t\u2026",
        "body": "\u2026rying to allocate\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2015 at 02:36 GMT",
        "updated_at": "Friday Aug 21, 2015 at 07:07 GMT",
        "closed_at": "Friday Aug 21, 2015 at 07:07 GMT",
        "merged_at": "Friday Aug 21, 2015 at 07:07 GMT"
    },
    {
        "key": "WT-2051",
        "number": 2138,
        "state": "closed",
        "title": "WT-2051 - add a nice error message when failing to open metadata",
        "body": "Note: changes error handling to not panic immediately on seeing an invalid value.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 21, 2015 at 01:02 GMT",
        "updated_at": "Wednesday Aug 26, 2015 at 12:54 GMT",
        "closed_at": "Wednesday Aug 26, 2015 at 06:40 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2053",
        "number": 2137,
        "state": "closed",
        "title": "WT-2053: Fix a bug in disk verify messages.",
        "body": "@michaelcahill, ready for review & merge.\n\n@ddanderson, here's the fix for WT-2053.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 20, 2015 at 19:34 GMT",
        "updated_at": "Friday Aug 21, 2015 at 01:12 GMT",
        "closed_at": "Friday Aug 21, 2015 at 00:40 GMT",
        "merged_at": "Friday Aug 21, 2015 at 00:40 GMT"
    },
    {
        "key": null,
        "number": 2136,
        "state": "closed",
        "title": "Wt 2053",
        "body": "",
        "base_ref": "master",
        "created_at": "Thursday Aug 20, 2015 at 19:32 GMT",
        "updated_at": "Friday Aug 21, 2015 at 01:12 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 19:32 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2055",
        "number": 2135,
        "state": "closed",
        "title": "WT-2055 Python, whitespace cleanup.",
        "body": "@michaelcahill, reference #2131, might as well do a general whitespace cleanup on the test suite Python.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 20, 2015 at 13:15 GMT",
        "updated_at": "Friday Aug 21, 2015 at 00:43 GMT",
        "closed_at": "Friday Aug 21, 2015 at 00:43 GMT",
        "merged_at": "Friday Aug 21, 2015 at 00:43 GMT"
    },
    {
        "key": "WT-147",
        "number": 2134,
        "state": "closed",
        "title": "WT-147. For dynamic index creation, solve a locking issue with LSM",
        "body": "From @ddanderson (replacing #2127 with a pull request merging into the original branch):\n\nThis branch was built upon index-create, which does dynamic index creation.\n\nFor dynamic index creation, solve a locking issue with LSM. The issue is that the application thread is holding the schema lock while we are filling the index. If the index is LSM, then a different LSM thread wants to split the file eventually, but it needs the schema lock to do that.\n\nCoordinate the locking by tagging the LSM cursor with a special flag: \"I'm holding the schema lock while filling this lsm: cursor\". That in turn sets a flag on the LSM file, so when the LSM worker thread comes along, it pretends it's already holding the schema lock - it's being held on its behalf by the app thread.\n",
        "base_ref": "index-create",
        "created_at": "Thursday Aug 20, 2015 at 03:25 GMT",
        "updated_at": "Thursday Sep 03, 2015 at 06:06 GMT",
        "closed_at": "Thursday Sep 03, 2015 at 06:06 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2049",
        "number": 2133,
        "state": "closed",
        "title": "WT-2049 don't start format's RNG at the same place every time.",
        "body": "@michaelcahill, ready for review & merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 20, 2015 at 01:06 GMT",
        "updated_at": "Thursday Aug 20, 2015 at 03:40 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 01:58 GMT",
        "merged_at": "Thursday Aug 20, 2015 at 01:58 GMT"
    },
    {
        "key": "WT-2048",
        "number": 2132,
        "state": "closed",
        "title": "WT-2048 Quiet a Coverity complaint.",
        "body": "Reference WT-2048.\n\n@michaelcahill, ready for review & merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 19, 2015 at 20:13 GMT",
        "updated_at": "Thursday Aug 20, 2015 at 01:20 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 01:20 GMT",
        "merged_at": "Thursday Aug 20, 2015 at 01:20 GMT"
    },
    {
        "key": null,
        "number": 2131,
        "state": "closed",
        "title": "Pythonic way for samples",
        "body": "Light changes to fit PEP8 (py-RFC) and best practices of Python language\nMore about it here: http://legacy.python.org/dev/peps/pep-0008/\n",
        "base_ref": "master",
        "created_at": "Wednesday Aug 19, 2015 at 19:11 GMT",
        "updated_at": "Thursday Aug 20, 2015 at 00:52 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 00:52 GMT",
        "merged_at": "Thursday Aug 20, 2015 at 00:52 GMT"
    },
    {
        "key": null,
        "number": 2130,
        "state": "closed",
        "title": "The __wt_random code to handle an uninitialized random state is broken.",
        "body": "Reference WT-2047.\n\n@michaelcahill, ready for review and merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 19, 2015 at 16:48 GMT",
        "updated_at": "Thursday Aug 20, 2015 at 00:35 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 00:34 GMT",
        "merged_at": "Thursday Aug 20, 2015 at 00:34 GMT"
    },
    {
        "key": "ER-18356",
        "number": 2129,
        "state": "closed",
        "title": "SERVER-18356 - Avoid reading baseconfig file when config_base is false",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 19, 2015 at 02:54 GMT",
        "updated_at": "Thursday Aug 20, 2015 at 03:32 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 03:32 GMT",
        "merged_at": "Thursday Aug 20, 2015 at 03:32 GMT"
    },
    {
        "key": "WT-2046",
        "number": 2128,
        "state": "closed",
        "title": "WT-2046 - Add a counter for search restarts",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 19, 2015 at 02:52 GMT",
        "updated_at": "Thursday Aug 20, 2015 at 03:23 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 03:23 GMT",
        "merged_at": "Thursday Aug 20, 2015 at 03:23 GMT"
    },
    {
        "key": "WT-147",
        "number": 2127,
        "state": "closed",
        "title": "WT-147. For dynamic index creation, solve a locking issue with LSM.",
        "body": "This branch was built upon index-create, which does dynamic index creation.\n\nFor dynamic index creation, solve a locking issue with LSM.  The issue is that the application thread is holding the schema lock while we are filling the index.  If the index is LSM, then a different LSM thread wants to split the file eventually, but it needs the schema lock to do that.\n\nCoordinate the locking by tagging the LSM cursor with a special flag: \"I'm holding the schema lock while filling this lsm: cursor\". That in turn sets a flag on the LSM file, so when the LSM worker thread comes along, it pretends it's already holding the schema lock - it's being held on its behalf by the app thread.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 19, 2015 at 02:03 GMT",
        "updated_at": "Thursday Sep 03, 2015 at 06:06 GMT",
        "closed_at": "Thursday Aug 20, 2015 at 03:26 GMT",
        "merged_at": null
    },
    {
        "key": "ER-19989",
        "number": 2126,
        "state": "closed",
        "title": "SERVER-19989 Different approach to dhandle-barrier.",
        "body": "@michaelcahill, I think we could potentially have this problem in other places. For example, `__conn_add_collator` builds a `WT_COLLATOR` structure and then wraps the insert on the TAILQ list inside the connection's API spinlock. If that spinlock doesn't imply a write-barrier, I think we could theoretically lose.\n\nI don't believe we have any tailq inserts in performance paths, what would you think of including a write-barrier in the TAILQ insert macros? It's kind of brute force, but now that we've standardized on TAILQs in all cases, it might be a reasonable solution.\n\nThere are two commits in this branch, only the second one is interesting, the first one just removes everything but TAILQ from queue.h, which I think is reasonable if our queue.h is going to diverge.\n",
        "base_ref": "dhandle-barrier",
        "created_at": "Tuesday Aug 18, 2015 at 19:38 GMT",
        "updated_at": "Wednesday Aug 19, 2015 at 00:14 GMT",
        "closed_at": "Wednesday Aug 19, 2015 at 00:14 GMT",
        "merged_at": "Wednesday Aug 19, 2015 at 00:14 GMT"
    },
    {
        "key": "WT-2029",
        "number": 2125,
        "state": "closed",
        "title": "WT-2029, minor cleanups.",
        "body": "@michaelcahill, I forgot to move the data-handle statistics initialization out of the btree code into the data-handle initialization code.\n\nPlease merge if you agree.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 18, 2015 at 13:40 GMT",
        "updated_at": "Wednesday Aug 19, 2015 at 00:16 GMT",
        "closed_at": "Wednesday Aug 19, 2015 at 00:16 GMT",
        "merged_at": "Wednesday Aug 19, 2015 at 00:16 GMT"
    },
    {
        "key": "ER-19989",
        "number": 2124,
        "state": "closed",
        "title": "SERVER-19989 Add a write barrier before handles become public",
        "body": "There are readers of the handle list that don't acquire the mutex: add a write barrier before handles are inserted.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 18, 2015 at 06:06 GMT",
        "updated_at": "Wednesday Aug 19, 2015 at 00:15 GMT",
        "closed_at": "Wednesday Aug 19, 2015 at 00:15 GMT",
        "merged_at": "Wednesday Aug 19, 2015 at 00:15 GMT"
    },
    {
        "key": "WT-2045",
        "number": 2123,
        "state": "closed",
        "title": "WT-2045 fix a deadlock in the eviction server",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Sunday Aug 16, 2015 at 21:09 GMT",
        "updated_at": "Friday Sep 18, 2015 at 02:31 GMT",
        "closed_at": "Wednesday Aug 19, 2015 at 05:24 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2029",
        "number": 2122,
        "state": "closed",
        "title": "WT-2029, improve scalability of statistics",
        "body": "Instead of using per-thread arrays of counters (see #2102), use arrays\nof statistics structures. I started with the scalable_stats branch, so\nthis incorporates most of the commits on that branch, but the diff is\nagainst the develop branch to make it easier to review.\n\nSpecifically, this includes a9675d0:\n    There are only 3 statistics we maintain atomically: the count\n    of open cursors and the split-stash bytes and object counts.\n    Move them to WT_CONNECTION_IMPL fields, and copy them into the\n    statistics on demand, this allows us to remove support for\n    atomically maintaining statistics values.\n\nAnd 6bda287:\n    Get rid of the WT_CONN_{STAT,STAT_GET,STAT_SET} macros, instead\n    maintain a few additional fields in the WT_CONNECTION_IMPL\n    structure (checkpoint min/max, recent and total time).\n\nAnd 7590930:\n    Use a prime number of buckets rather than assuming a good hash\n    (Reference Sedgewick, Algorithms in C, \"Hash Functions\").\n\nAnd 63a2082:\n    I'm seeing a roughly 20% advantage of using a loop to clear the\n    stats values, vs. a memset to clear the whole padded chunk, and\n    I'd rather err on the side of writing fewer cache lines, anyway.\n\nAdditionally:\n\nNow we have arrays of statistics structures, separate out each statistic\nvalue's description into a separate array, a struct of strings. We could\naccess it directly, and maybe should, but I'm using a function call at\nthe moment.\n\nNow the statistic's descriptions are separate from the statistics values,\nwe no longer need macros to access the fields, in general we can simply\nuse the stat structure reference and the field name and set the int64_t\ndirectly. This includes removal of the WT_STATS typedef.\n\nChange the LSM code to not maintain a local data-source statistics\nstructure in each LSM-tree structure -- that allows us to remove all of\nthe macros to update a single stats structure, and I don't think it\ncomplicates things that much. The changes to the LSM statistics code\nshould be closely reviewed.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 15, 2015 at 15:53 GMT",
        "updated_at": "Tuesday Aug 18, 2015 at 12:54 GMT",
        "closed_at": "Tuesday Aug 18, 2015 at 12:54 GMT",
        "merged_at": "Tuesday Aug 18, 2015 at 12:54 GMT"
    },
    {
        "key": "WT-2044",
        "number": 2121,
        "state": "closed",
        "title": "WT-2044: Fix Windows wtperf.exe build",
        "body": "Add missing file in SConstruct.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 14, 2015 at 12:42 GMT",
        "updated_at": "Friday Aug 14, 2015 at 12:51 GMT",
        "closed_at": "Friday Aug 14, 2015 at 12:51 GMT",
        "merged_at": "Friday Aug 14, 2015 at 12:51 GMT"
    },
    {
        "key": "WT-2038",
        "number": 2120,
        "state": "closed",
        "title": "WT-2038 Discard checkpoint lock handles asap",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Aug 14, 2015 at 06:22 GMT",
        "updated_at": "Friday Aug 14, 2015 at 11:06 GMT",
        "closed_at": "Friday Aug 14, 2015 at 11:06 GMT",
        "merged_at": "Friday Aug 14, 2015 at 11:06 GMT"
    },
    {
        "key": null,
        "number": 2119,
        "state": "closed",
        "title": "Minor cleanups to tailq use, s_define searching.",
        "body": "@sueloverso, for your review.\n\nIn reviewing #2118, I noticed a couple of tailq-remove loops that were more complex than necessary, and I wondered why s_define wasn't complaining after @michaelcahill's change, and figured out it wasn't doing anything useful for queue.h, so I cleaned that up as well.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 13, 2015 at 13:07 GMT",
        "updated_at": "Thursday Aug 13, 2015 at 13:28 GMT",
        "closed_at": "Thursday Aug 13, 2015 at 13:28 GMT",
        "merged_at": "Thursday Aug 13, 2015 at 13:28 GMT"
    },
    {
        "key": "WT-2038",
        "number": 2118,
        "state": "closed",
        "title": "WT-2038 Use TAILQ for all lists.",
        "body": "Otherwise remove is O(N), which may not show up until running real workloads (while holding locks).\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 13, 2015 at 05:59 GMT",
        "updated_at": "Thursday Aug 13, 2015 at 12:21 GMT",
        "closed_at": "Thursday Aug 13, 2015 at 12:21 GMT",
        "merged_at": "Thursday Aug 13, 2015 at 12:21 GMT"
    },
    {
        "key": "WT-1967",
        "number": 2117,
        "state": "closed",
        "title": "WT-1967 Remove a redundant check preventing pages being considered for eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2015 at 06:13 GMT",
        "updated_at": "Wednesday Aug 12, 2015 at 10:34 GMT",
        "closed_at": "Wednesday Aug 12, 2015 at 06:37 GMT",
        "merged_at": "Wednesday Aug 12, 2015 at 06:37 GMT"
    },
    {
        "key": "WT-2038",
        "number": 2116,
        "state": "closed",
        "title": "WT-2038 Fix cases where the next tree for eviction could be discarded",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 12, 2015 at 06:12 GMT",
        "updated_at": "Wednesday Aug 12, 2015 at 10:34 GMT",
        "closed_at": "Wednesday Aug 12, 2015 at 06:36 GMT",
        "merged_at": "Wednesday Aug 12, 2015 at 06:36 GMT"
    },
    {
        "key": "WT-2038",
        "number": 2115,
        "state": "closed",
        "title": "WT-2038 Avoid long scans holding the handle list lock.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 11, 2015 at 05:15 GMT",
        "updated_at": "Tuesday Aug 11, 2015 at 07:16 GMT",
        "closed_at": "Tuesday Aug 11, 2015 at 07:16 GMT",
        "merged_at": "Tuesday Aug 11, 2015 at 07:16 GMT"
    },
    {
        "key": "WT-2037",
        "number": 2114,
        "state": "closed",
        "title": "WT-2037 Only write a checkpoint to the log on close if it wasn't",
        "body": "recovery with an error.\n\n@michaelcahill Please review.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 10, 2015 at 21:12 GMT",
        "updated_at": "Tuesday Aug 11, 2015 at 01:22 GMT",
        "closed_at": "Tuesday Aug 11, 2015 at 01:22 GMT",
        "merged_at": "Tuesday Aug 11, 2015 at 01:22 GMT"
    },
    {
        "key": "WT-2036",
        "number": 2113,
        "state": "closed",
        "title": "WT-2036 Make handle sweeps more robust",
        "body": "Clear time-of-death in handles with more than one reference, don't sweep handles with the exclusive flag set.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 08, 2015 at 19:53 GMT",
        "updated_at": "Monday Aug 10, 2015 at 05:30 GMT",
        "closed_at": "Monday Aug 10, 2015 at 05:30 GMT",
        "merged_at": "Monday Aug 10, 2015 at 05:30 GMT"
    },
    {
        "key": "WT-2025",
        "number": 2112,
        "state": "closed",
        "title": "WT-2025: inline atomic functions.",
        "body": "@michaelcahill, @agorrod, @sue, @markbenvenuto:\n\nI thought it would be interesting to see how bad/good it was to inline the atomic functions, this branch builds pretty cleanly and appears to run.\n\nThe interesting things:\n- It's not ready to merge, I just hacked my way through it -- the macro-to-function-call changes are pretty easily reviewed, but the structure field changes would need to be carefully looked at.\n- We've made some mistakes, we're passing enum and ints to atomic functions, assuming they're 4B in size. **[Update: that's not correct, we asserted the size of the objects, so we'd catch a problem during the build on any machine/compiler where there was a problem.]**\n- We could probably use defines, or auto-build the inline functions, I didn't bother trying.\n- We need int32/uint32 variants because we do atomic instructions on both.\n- Clang doesn't complain if you pass a `volatile XXX` to a function expecting `XXX`, but flexelint does, so I'm casting those fields as part of passing them into the atomic functions. I'd probably want to fix that in the mix, there's no reason we can't have atomic variants that take `volatile XXX` as arguments.\n- I also didn't touch the Windows msvc.h file, it's scary inside.\n\nIn general, I like this change, it found several problems, and will ensure we don't get caught again on #2111, multiple macro evaluations.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 06, 2015 at 23:18 GMT",
        "updated_at": "Wednesday Aug 19, 2015 at 15:50 GMT",
        "closed_at": "Wednesday Aug 19, 2015 at 02:04 GMT",
        "merged_at": "Wednesday Aug 19, 2015 at 02:04 GMT"
    },
    {
        "key": "WT-2025",
        "number": 2111,
        "state": "closed",
        "title": "WT-2025 Pass simple arguments to compare-and-swap macros",
        "body": "They may re-read arguments and race.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 06, 2015 at 12:48 GMT",
        "updated_at": "Thursday Aug 06, 2015 at 13:15 GMT",
        "closed_at": "Thursday Aug 06, 2015 at 13:15 GMT",
        "merged_at": "Thursday Aug 06, 2015 at 13:15 GMT"
    },
    {
        "key": "WT-2034",
        "number": 2110,
        "state": "closed",
        "title": "WT-2034 Make shared cache adjustments gradually",
        "body": "Avoid pauses to application threads while eviction scrambles to make space.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 06, 2015 at 11:03 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 07:31 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 07:31 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 07:31 GMT"
    },
    {
        "key": "WT-2021",
        "number": 2109,
        "state": "closed",
        "title": "WT-2021 Fix a bug moving the oldest ID forward (introduced by WT-1967).",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 06, 2015 at 01:33 GMT",
        "updated_at": "Thursday Aug 06, 2015 at 02:05 GMT",
        "closed_at": "Thursday Aug 06, 2015 at 02:05 GMT",
        "merged_at": "Thursday Aug 06, 2015 at 02:05 GMT"
    },
    {
        "key": "WT-2032",
        "number": 2108,
        "state": "closed",
        "title": "WT-2032: WT_CURSOR.next configured with next_random=true on insert-only pages",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 05, 2015 at 22:18 GMT",
        "updated_at": "Thursday Aug 06, 2015 at 06:31 GMT",
        "closed_at": "Thursday Aug 06, 2015 at 06:31 GMT",
        "merged_at": "Thursday Aug 06, 2015 at 06:31 GMT"
    },
    {
        "key": "ER-19751",
        "number": 2107,
        "state": "closed",
        "title": "SERVER-19751 Retry pthread_create on EAGAIN or EINTR.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 05, 2015 at 04:56 GMT",
        "updated_at": "Wednesday Aug 05, 2015 at 11:07 GMT",
        "closed_at": "Wednesday Aug 05, 2015 at 11:07 GMT",
        "merged_at": "Wednesday Aug 05, 2015 at 11:07 GMT"
    },
    {
        "key": "WT-2025",
        "number": 2106,
        "state": "closed",
        "title": "WT-2025 Assert that cursors are positioned for inserts",
        "body": "Fix a possible race between two threads inserting into a clean page.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 04, 2015 at 07:26 GMT",
        "updated_at": "Wednesday Aug 05, 2015 at 10:54 GMT",
        "closed_at": "Wednesday Aug 05, 2015 at 10:54 GMT",
        "merged_at": "Wednesday Aug 05, 2015 at 10:54 GMT"
    },
    {
        "key": "ow-",
        "number": 2105,
        "state": "closed",
        "title": "row-insert-nolock review",
        "body": "@michaelcahill, for your consideration.\n",
        "base_ref": "row-insert-nolock",
        "created_at": "Monday Aug 03, 2015 at 20:17 GMT",
        "updated_at": "Monday Aug 03, 2015 at 23:14 GMT",
        "closed_at": "Monday Aug 03, 2015 at 23:14 GMT",
        "merged_at": "Monday Aug 03, 2015 at 23:14 GMT"
    },
    {
        "key": "WT-1481",
        "number": 2104,
        "state": "closed",
        "title": "WT-1481 Fix and clarify some sweep statistics.",
        "body": "@michaelcahill Please review these sweep stats changes.  See if the names/descriptions are more informative.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 03, 2015 at 19:10 GMT",
        "updated_at": "Wednesday Aug 12, 2015 at 10:34 GMT",
        "closed_at": "Wednesday Aug 12, 2015 at 10:34 GMT",
        "merged_at": "Wednesday Aug 12, 2015 at 10:34 GMT"
    },
    {
        "key": "WT-2023",
        "number": 2103,
        "state": "closed",
        "title": "WT-2023 Avoid bit shifts during read-write lock operations.",
        "body": "I hope this doesn't muddy the waters, but I've wondered this before.  Is there any reason not to avoid the shift operations entirely?\n",
        "base_ref": "mutex-overflow",
        "created_at": "Monday Aug 03, 2015 at 03:01 GMT",
        "updated_at": "Monday Aug 03, 2015 at 13:02 GMT",
        "closed_at": "Monday Aug 03, 2015 at 13:01 GMT",
        "merged_at": "Monday Aug 03, 2015 at 13:01 GMT"
    },
    {
        "key": "WT-2029",
        "number": 2102,
        "state": "closed",
        "title": "WT-2029 Improve scalability of statistics",
        "body": "An implementation for WT_STAT that uses 'per-thread' array counters to avoid scalability bottlenecks in some workloads.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 03, 2015 at 01:51 GMT",
        "updated_at": "Tuesday Aug 18, 2015 at 12:32 GMT",
        "closed_at": "Tuesday Aug 18, 2015 at 12:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2023",
        "number": 2101,
        "state": "closed",
        "title": "WT-2023: Mutex overflow simplify",
        "body": "@ddanderson, @michaelcahill, this change is the follow up on my comment in the conversation:\n\n> I think we could make \"overflow\" a simple padding byte again, by masking off the \"users\" field when we increment it so it never overflows.\n\nRather than masking when allocating tickets, I changed the code to atomically update just the ticket which should give us the correct overflow behavior (we already depend on that behavior elsewhere in this code). I **think** that's safe, emphasis on **think**.\n",
        "base_ref": "mutex-overflow",
        "created_at": "Sunday Aug 02, 2015 at 16:58 GMT",
        "updated_at": "Monday Aug 03, 2015 at 01:37 GMT",
        "closed_at": "Monday Aug 03, 2015 at 01:37 GMT",
        "merged_at": "Monday Aug 03, 2015 at 01:37 GMT"
    },
    {
        "key": null,
        "number": 2100,
        "state": "closed",
        "title": "Remove pad/overflow handling.",
        "body": "@ddanderson, @michaelcahill, this change is the follow up on my comment in the conversation:\n\n> I think we could make \"overflow\" a simple padding byte again, by masking off the \"users\" field when we increment it so it never overflows.\n\nRather than masking when allocating tickets, I changed the code to atomically update just the ticket which should give us the correct overflow behavior (we already depend on that behavior elsewhere in this code). I **think** that's safe, emphasis on **think**.\n",
        "base_ref": "master",
        "created_at": "Sunday Aug 02, 2015 at 16:51 GMT",
        "updated_at": "Sunday Aug 02, 2015 at 16:55 GMT",
        "closed_at": "Sunday Aug 02, 2015 at 16:55 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2023",
        "number": 2099,
        "state": "closed",
        "title": "WT-2023: Avoid the CAS instruction in the trylock functions.",
        "body": "@ddanderson, @michaelcahill, for your review.\n",
        "base_ref": "mutex-overflow",
        "created_at": "Sunday Aug 02, 2015 at 16:19 GMT",
        "updated_at": "Monday Aug 03, 2015 at 01:34 GMT",
        "closed_at": "Monday Aug 03, 2015 at 01:34 GMT",
        "merged_at": "Monday Aug 03, 2015 at 01:34 GMT"
    },
    {
        "key": "WT-2028",
        "number": 2098,
        "state": "closed",
        "title": "WT-2028 minor __evict_walk_file cleanup",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 31, 2015 at 20:51 GMT",
        "updated_at": "Monday Aug 03, 2015 at 01:41 GMT",
        "closed_at": "Monday Aug 03, 2015 at 01:41 GMT",
        "merged_at": "Monday Aug 03, 2015 at 01:41 GMT"
    },
    {
        "key": "WT-2007",
        "number": 2097,
        "state": "closed",
        "title": "WT-2007 Backport static log buffer fix.",
        "body": "@michaelcahill Please review this backport of the fix in WT-2007.  This addresses ENOMEM errors from logging during a commit transaction call.  There are a couple things to note here:\n1.  I backported the removal of the `log_buffer_grow` statistic field.  I don't know if there is a requirement that it continue to exist in the 3.0 branch.  Keeping it would mean we'd see the message about an unused statistic field (but reduces the size of the diff by a lot since half the changes are auto-generated statistic stuff).\n2.  Building on this branch, `s_all` modified `txn.i` and `lsm_cursor_bulk.c` for whitespace, etc. but I did not include those in my commit.\n",
        "base_ref": "mongodb-3.0",
        "created_at": "Friday Jul 31, 2015 at 19:20 GMT",
        "updated_at": "Monday Aug 03, 2015 at 05:31 GMT",
        "closed_at": "Monday Aug 03, 2015 at 05:31 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1983",
        "number": 2096,
        "state": "closed",
        "title": "WT-1983 wtperf_truncate - fix issues with uint64 -> int64 conversion",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 30, 2015 at 13:05 GMT",
        "updated_at": "Monday Aug 03, 2015 at 02:26 GMT",
        "closed_at": "Monday Aug 03, 2015 at 01:58 GMT",
        "merged_at": "Monday Aug 03, 2015 at 01:58 GMT"
    },
    {
        "key": "WT-1967",
        "number": 2095,
        "state": "closed",
        "title": "WT-1967 Don't allow last_running to move past a running transaction.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 30, 2015 at 12:33 GMT",
        "updated_at": "Monday Aug 03, 2015 at 02:04 GMT",
        "closed_at": "Monday Aug 03, 2015 at 02:04 GMT",
        "merged_at": "Monday Aug 03, 2015 at 02:04 GMT"
    },
    {
        "key": "WT-2025",
        "number": 2094,
        "state": "closed",
        "title": "WT-2025 SERVER-19573 Change row-store inserts to avoid page locking.",
        "body": "Also switch to always using an atomic operation to swap inserts into the skiplist.  This fixes a potential race where readers may see a partially initialized WT_INSERT object, because the spinlock we used in the past for all inserts did not imply a write barrier.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 29, 2015 at 01:52 GMT",
        "updated_at": "Tuesday Aug 04, 2015 at 00:19 GMT",
        "closed_at": "Tuesday Aug 04, 2015 at 00:19 GMT",
        "merged_at": "Tuesday Aug 04, 2015 at 00:19 GMT"
    },
    {
        "key": null,
        "number": 2093,
        "state": "closed",
        "title": "reconciliation locking",
        "body": "SERVER-19522, WT-2024\n\nAlex, Michael: I think there's a bug in reconciliation locking. I opened WT-2024 to explain it, and this is what I'd suggest as a fix. (I might be completely wrong about the bug, though, I may have missed something?)\n\nThe other change here is to lift the split-locking out of the internal-page reconciliation functions and into the upper-level function, so it's done with the rest of the locking, that seems safer and cleaner to me.\n\nFor your review and consideration, feel free to just discard all of this if I'm wrong.\n\n@michaelcahill, @agorrod \n",
        "base_ref": "intl-page-empty",
        "created_at": "Tuesday Jul 28, 2015 at 13:48 GMT",
        "updated_at": "Tuesday Jul 28, 2015 at 23:33 GMT",
        "closed_at": "Tuesday Jul 28, 2015 at 21:34 GMT",
        "merged_at": "Tuesday Jul 28, 2015 at 21:34 GMT"
    },
    {
        "key": null,
        "number": 2092,
        "state": "closed",
        "title": "Minor lint and clarification.",
        "body": "@michaelcahill, this is for your review, take it if you like it, discard it if you don't.\n\nIn short, I had to stare at this to convince myself `page` was safe, and I can see a future change where using `page` in some other way in this function would get us into trouble.\n",
        "base_ref": "intl-page-empty",
        "created_at": "Tuesday Jul 28, 2015 at 13:32 GMT",
        "updated_at": "Tuesday Jul 28, 2015 at 23:33 GMT",
        "closed_at": "Tuesday Jul 28, 2015 at 21:29 GMT",
        "merged_at": "Tuesday Jul 28, 2015 at 21:29 GMT"
    },
    {
        "key": "ER-19522",
        "number": 2091,
        "state": "closed",
        "title": "SERVER-19522 Try to evict internal pages with no useful child pages.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 28, 2015 at 06:15 GMT",
        "updated_at": "Tuesday Jul 28, 2015 at 23:51 GMT",
        "closed_at": "Tuesday Jul 28, 2015 at 23:51 GMT",
        "merged_at": "Tuesday Jul 28, 2015 at 23:51 GMT"
    },
    {
        "key": "WT-2023",
        "number": 2090,
        "state": "closed",
        "title": "WT-2023: Keep 16-bit values from overflowing into other fields.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 27, 2015 at 23:45 GMT",
        "updated_at": "Monday Aug 03, 2015 at 13:20 GMT",
        "closed_at": "Monday Aug 03, 2015 at 13:20 GMT",
        "merged_at": "Monday Aug 03, 2015 at 13:20 GMT"
    },
    {
        "key": "WT-1845",
        "number": 2089,
        "state": "closed",
        "title": "WT-1845 Allow read only transactions to commit after failure",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 27, 2015 at 03:39 GMT",
        "updated_at": "Monday Aug 03, 2015 at 03:18 GMT",
        "closed_at": "Monday Aug 03, 2015 at 03:18 GMT",
        "merged_at": "Monday Aug 03, 2015 at 03:18 GMT"
    },
    {
        "key": "ER-19340",
        "number": 2088,
        "state": "closed",
        "title": "SERVER-19340 Avoid type aliasing in the random number generator.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 27, 2015 at 02:09 GMT",
        "updated_at": "Tuesday Jul 28, 2015 at 23:36 GMT",
        "closed_at": "Tuesday Jul 28, 2015 at 23:36 GMT",
        "merged_at": "Tuesday Jul 28, 2015 at 23:36 GMT"
    },
    {
        "key": "WT-2022",
        "number": 2087,
        "state": "closed",
        "title": "WT-2022.  When non-existent index cursor is opened, release the base table.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 24, 2015 at 15:21 GMT",
        "updated_at": "Sunday Jul 26, 2015 at 23:39 GMT",
        "closed_at": "Sunday Jul 26, 2015 at 23:39 GMT",
        "merged_at": "Sunday Jul 26, 2015 at 23:39 GMT"
    },
    {
        "key": "WT-2020",
        "number": 2086,
        "state": "closed",
        "title": "WT-2020: clarify checksum error failure messages.",
        "body": "WT-2020: ready for review & merge by anybody.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 24, 2015 at 13:40 GMT",
        "updated_at": "Tuesday Jul 28, 2015 at 00:55 GMT",
        "closed_at": "Saturday Jul 25, 2015 at 03:38 GMT",
        "merged_at": "Saturday Jul 25, 2015 at 03:38 GMT"
    },
    {
        "key": "WT-2015",
        "number": 2085,
        "state": "closed",
        "title": "WT-2015: error path failure during block open.",
        "body": "WT-2015: ready for review & merge by anybody.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 24, 2015 at 13:15 GMT",
        "updated_at": "Monday Jul 27, 2015 at 05:55 GMT",
        "closed_at": "Monday Jul 27, 2015 at 05:55 GMT",
        "merged_at": "Monday Jul 27, 2015 at 05:55 GMT"
    },
    {
        "key": "WT-2012",
        "number": 2084,
        "state": "closed",
        "title": "WT-2012 Fix a bug updating the oldest ID",
        "body": "We weren't checking that the oldest ID doesn't move past the oldest named snapshot ID.\n\nFound by inspection.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 24, 2015 at 05:30 GMT",
        "updated_at": "Friday Jul 24, 2015 at 06:55 GMT",
        "closed_at": "Friday Jul 24, 2015 at 06:55 GMT",
        "merged_at": "Friday Jul 24, 2015 at 06:55 GMT"
    },
    {
        "key": "WT-2031",
        "number": 2083,
        "state": "closed",
        "title": "WT-2031 Log slot revamp",
        "body": "This is not ready to merge.  Some basic tests are working (ex_log and log-append.wtperf), but some examples and unit tests fail or hang still.  Creating a pull request in case you want to look at the changes so far.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 23, 2015 at 17:49 GMT",
        "updated_at": "Thursday Aug 27, 2015 at 00:36 GMT",
        "closed_at": "Thursday Aug 27, 2015 at 00:36 GMT",
        "merged_at": "Thursday Aug 27, 2015 at 00:36 GMT"
    },
    {
        "key": "WT-2017",
        "number": 2082,
        "state": "closed",
        "title": "WT-2017 Don't shutdown eviction server threads during runtime.",
        "body": "Once there has been enough workload for threads to be started leave\nthem running. Stopping/starting is expensive and distracting in a\ndebugger.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 23, 2015 at 07:20 GMT",
        "updated_at": "Friday Jul 24, 2015 at 01:11 GMT",
        "closed_at": "Friday Jul 24, 2015 at 01:11 GMT",
        "merged_at": "Friday Jul 24, 2015 at 01:11 GMT"
    },
    {
        "key": "WT-2018",
        "number": 2081,
        "state": "closed",
        "title": "WT-2018 - correct problems with wtperf icount and populate_threads being 0",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 23, 2015 at 05:44 GMT",
        "updated_at": "Friday Jul 24, 2015 at 04:11 GMT",
        "closed_at": "Friday Jul 24, 2015 at 04:11 GMT",
        "merged_at": "Friday Jul 24, 2015 at 04:11 GMT"
    },
    {
        "key": "WT-2019",
        "number": 2080,
        "state": "closed",
        "title": "WT-2019 Fix a logic bug tracking the maximum transaction ID in clean trees",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 23, 2015 at 05:27 GMT",
        "updated_at": "Thursday Jul 23, 2015 at 05:53 GMT",
        "closed_at": "Thursday Jul 23, 2015 at 05:53 GMT",
        "merged_at": "Thursday Jul 23, 2015 at 05:53 GMT"
    },
    {
        "key": "WT-1967",
        "number": 2079,
        "state": "closed",
        "title": "WT-1967 some fixes and suggestions",
        "body": "@keithbostic, I've been trying out the multi-cursor branch, here are a few fixes and suggestions (in the last four commits).  It includes a fix for the assertion failure you were seeing: that assertion is too strong now that we can do updates in the service of a page read.\n\nTake all of these changes with a grain of salt: feel free to pick and choose anything here that you like.\n\nThis branch does fix connection close, where there were some ordering problems (e.g., dropping the LAS table after closing the metadata), and also fixes the restore code where I believe the updates were loaded in reverse order.  It also includes a suggestion to use `value_format` to avoid a lot of serialization code that you might not like so much.\n\nI'm still seeing various failures after these changes -- I used this as an exercise to see how the branch was working and understand what is left to do.\n",
        "base_ref": "wt-1967-evict-any-multi-cursor",
        "created_at": "Wednesday Jul 22, 2015 at 09:02 GMT",
        "updated_at": "Monday Aug 03, 2015 at 01:54 GMT",
        "closed_at": "Monday Aug 03, 2015 at 00:33 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2016",
        "number": 2078,
        "state": "closed",
        "title": "WT-2016: wt_rwlock_t union packing",
        "body": "@keithbostic Here is a really trivial change to nest the `us` member in a struct in the union. I need this so that I can add padding into the struct for big-endian systems.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 22, 2015 at 03:20 GMT",
        "updated_at": "Wednesday Jul 22, 2015 at 03:32 GMT",
        "closed_at": "Wednesday Jul 22, 2015 at 03:32 GMT",
        "merged_at": "Wednesday Jul 22, 2015 at 03:32 GMT"
    },
    {
        "key": "WT-2014",
        "number": 2077,
        "state": "closed",
        "title": "WT-2014 Checkpoint file fixes",
        "body": "For WT-2014 and WT-2009, which came from durability testing with MongoDB.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 22, 2015 at 01:25 GMT",
        "updated_at": "Thursday Jul 23, 2015 at 04:55 GMT",
        "closed_at": "Thursday Jul 23, 2015 at 04:55 GMT",
        "merged_at": "Thursday Jul 23, 2015 at 04:55 GMT"
    },
    {
        "key": "WT-1989",
        "number": 2076,
        "state": "closed",
        "title": "WT-1989 Use size_t for the log slot size in memory.",
        "body": "Fixes:\nlog/log_slot.c:62:3: error: conversion to 'size_t' from 'wt_off_t' may change the sign of the result [-Werror=sign-conversion]\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 21, 2015 at 01:13 GMT",
        "updated_at": "Tuesday Jul 21, 2015 at 01:34 GMT",
        "closed_at": "Tuesday Jul 21, 2015 at 01:34 GMT",
        "merged_at": "Tuesday Jul 21, 2015 at 01:34 GMT"
    },
    {
        "key": "WT-2013",
        "number": 2075,
        "state": "closed",
        "title": "WT-2013 Add gcc asm definitions for ARM64",
        "body": "Developed by analogy, particularly with:\n\nhttp://lxr.free-electrons.com/source/arch/x86/include/asm/barrier.h\nhttp://lxr.free-electrons.com/source/arch/arm64/include/asm/barrier.h\n\nand\n\nhttp://lxr.free-electrons.com/source/arch/x86/include/asm/processor.h#L692\nhttp://lxr.free-electrons.com/source/arch/arm64/include/asm/processor.h#L130\n\nInterestingly, linux doesn't seem to use sleep on x86.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 20, 2015 at 23:14 GMT",
        "updated_at": "Tuesday Jul 21, 2015 at 13:50 GMT",
        "closed_at": "Tuesday Jul 21, 2015 at 13:50 GMT",
        "merged_at": "Tuesday Jul 21, 2015 at 13:50 GMT"
    },
    {
        "key": null,
        "number": 2074,
        "state": "closed",
        "title": "Encryption mismatch checks",
        "body": "Fix to detect the case when encryption is specified when reopening, but the system was originally started without encryption.  Also added tests for the same.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 20, 2015 at 16:10 GMT",
        "updated_at": "Monday Jul 20, 2015 at 17:41 GMT",
        "closed_at": "Monday Jul 20, 2015 at 17:41 GMT",
        "merged_at": "Monday Jul 20, 2015 at 17:41 GMT"
    },
    {
        "key": "WT-1865",
        "number": 2073,
        "state": "closed",
        "title": "WT-1865 - Performance degrades as more files are open",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 20, 2015 at 01:01 GMT",
        "updated_at": "Tuesday Jan 19, 2016 at 05:07 GMT",
        "closed_at": "Tuesday Jan 19, 2016 at 05:07 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1967",
        "number": 2072,
        "state": "closed",
        "title": "WT-1967: evict pages where updates are still required by older readers.",
        "body": "WT-1967: evict pages where updates are still required by older readers.\n\n@agorrod, @michaelcahill: this branch is a long way from working, but I think most of the pieces are here, and I'm pushing it so you can get an idea of where I'm heading.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jul 19, 2015 at 15:49 GMT",
        "updated_at": "Friday Aug 28, 2015 at 06:50 GMT",
        "closed_at": "Friday Aug 28, 2015 at 06:50 GMT",
        "merged_at": "Friday Aug 28, 2015 at 06:50 GMT"
    },
    {
        "key": "WT-1969",
        "number": 2071,
        "state": "closed",
        "title": "WT-1969 WT_REF.pindex_hint cleanup",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 17, 2015 at 12:34 GMT",
        "updated_at": "Tuesday Jul 21, 2015 at 00:15 GMT",
        "closed_at": "Tuesday Jul 21, 2015 at 00:15 GMT",
        "merged_at": "Tuesday Jul 21, 2015 at 00:15 GMT"
    },
    {
        "key": "WT-2002",
        "number": 2070,
        "state": "closed",
        "title": "WT-2002 If a file is corrupted, verify should not panic.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 17, 2015 at 07:18 GMT",
        "updated_at": "Friday Jul 17, 2015 at 15:14 GMT",
        "closed_at": "Friday Jul 17, 2015 at 15:14 GMT",
        "merged_at": "Friday Jul 17, 2015 at 15:14 GMT"
    },
    {
        "key": "WT-1996",
        "number": 2069,
        "state": "closed",
        "title": "WT-1996 If there is an error applying updates during a page rewrite, don't free the first update",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jul 17, 2015 at 04:01 GMT",
        "updated_at": "Tuesday Jul 21, 2015 at 00:56 GMT",
        "closed_at": "Tuesday Jul 21, 2015 at 00:56 GMT",
        "merged_at": "Tuesday Jul 21, 2015 at 00:56 GMT"
    },
    {
        "key": "ER-19445",
        "number": 2068,
        "state": "closed",
        "title": "SERVER-19445 Have the oldest transaction update the oldest tracked ID.",
        "body": "This will help keep the oldest tracked transation ID from falling too far\nbehind, particularly in single-threaded workloads.  That means we can keep\ntrimming obsolete updates, preventing pages from growing too large.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 17, 2015 at 02:37 GMT",
        "updated_at": "Friday Jul 17, 2015 at 03:15 GMT",
        "closed_at": "Friday Jul 17, 2015 at 03:15 GMT",
        "merged_at": "Friday Jul 17, 2015 at 03:15 GMT"
    },
    {
        "key": "WT-1989",
        "number": 2067,
        "state": "closed",
        "title": "WT-1989 Log scalability",
        "body": "@michaelcahill Please review this diff. It is essentially the \"patch2\" with a few changes.  With this patch, compared to develop I see the following performance (ops/sec) running Bruce's workload (on the AWS SSD).\n\n| Client threads: | Dev | Branch | difference |\n| --- | --- | --- | --- |\n| 8 | 109 | 92 | -16% |\n| 16 | 125 | 151 | +21% |\n| 24 | 117 | 143 | +22% |\n| 32 | 121 | 126 | +4% |\n| 64 | 120 | 111 | -8% |\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 16, 2015 at 16:49 GMT",
        "updated_at": "Tuesday Jul 21, 2015 at 00:14 GMT",
        "closed_at": "Tuesday Jul 21, 2015 at 00:14 GMT",
        "merged_at": "Tuesday Jul 21, 2015 at 00:14 GMT"
    },
    {
        "key": "WT-2009",
        "number": 2066,
        "state": "closed",
        "title": "WT-2009 Apply tracked metadata operations post-commit",
        "body": "In particular, don't remove dropped files until the metadata changes are durable.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 16, 2015 at 04:06 GMT",
        "updated_at": "Monday Jul 20, 2015 at 07:21 GMT",
        "closed_at": "Monday Jul 20, 2015 at 07:21 GMT",
        "merged_at": "Monday Jul 20, 2015 at 07:21 GMT"
    },
    {
        "key": null,
        "number": 2065,
        "state": "closed",
        "title": "s_all cleanup pass",
        "body": "@agorrod, a few more cleanups, for your review, just discard anything you don't want.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 15, 2015 at 13:12 GMT",
        "updated_at": "Wednesday Jul 15, 2015 at 22:31 GMT",
        "closed_at": "Wednesday Jul 15, 2015 at 22:31 GMT",
        "merged_at": "Wednesday Jul 15, 2015 at 22:31 GMT"
    },
    {
        "key": "WT-2008",
        "number": 2064,
        "state": "closed",
        "title": "WT-2008 Fix a bug in recovery where a file create went missing.",
        "body": "The problem was that a hard system crash could cause a file to not\nbe created, even though it had been synced. The solution is to do a\ndirectory sync each time a new file is created.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 15, 2015 at 07:07 GMT",
        "updated_at": "Thursday Jul 16, 2015 at 00:43 GMT",
        "closed_at": "Thursday Jul 16, 2015 at 00:43 GMT",
        "merged_at": "Thursday Jul 16, 2015 at 00:43 GMT"
    },
    {
        "key": "WT-2007",
        "number": 2063,
        "state": "closed",
        "title": "WT-2007 Add configuration knobs to set slots and memory.",
        "body": "@agorrod, this pull request adds in configuration knobs to set the slot memory and number of slots.  It is built on #2062.  It is minimally tested (I did run a large wtperf config and then reran changing the knob settings).\n",
        "base_ref": "log-buf-static-max",
        "created_at": "Tuesday Jul 14, 2015 at 20:59 GMT",
        "updated_at": "Monday Aug 03, 2015 at 01:54 GMT",
        "closed_at": "Wednesday Jul 15, 2015 at 01:53 GMT",
        "merged_at": null
    },
    {
        "key": "WT-2007",
        "number": 2062,
        "state": "closed",
        "title": "WT-2007 Statically allocate log slot buffers to a maximum size.",
        "body": "@agorrod, please review this branch for log slot buffer memory.  This one uses the same 256kb max size, but just statically allocates that right away.  It removes a bunch of code.  Please compare to #2061.  Only one (or none if we want another approach for now) should be merged.  The other should be closed and rejected.\n\nI tested both with a wtperf config that used value sizes of 100k to force log slot overflow.  \n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2015 at 17:35 GMT",
        "updated_at": "Wednesday Jul 15, 2015 at 14:21 GMT",
        "closed_at": "Wednesday Jul 15, 2015 at 14:20 GMT",
        "merged_at": "Wednesday Jul 15, 2015 at 14:20 GMT"
    },
    {
        "key": "WT-2007",
        "number": 2061,
        "state": "closed",
        "title": "WT-2007 Only grow log slot buffers to  a maximum size.",
        "body": "@agorrod Here is a branch that implements a simple maximum size.  I chose 256K as the maximum size which uses 32Mb of memory for log slot buffers.  This is the smallest code change.  Please compare this to the other pull request.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2015 at 17:31 GMT",
        "updated_at": "Tuesday Jul 14, 2015 at 23:34 GMT",
        "closed_at": "Tuesday Jul 14, 2015 at 23:34 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1967",
        "number": 2060,
        "state": "closed",
        "title": "WT-1967: Add support for a long-running, isolation=snapshot, reader thread",
        "body": "WT-1967: Add support for a long-running, isolation=snapshot, reader.\n\n@agorrod, if you want to see the long-running reader in action, this branch can do that.\n\nHere's the CONFIG:\n\n```\ncache=2\ncheckpoints=0\ncompression=none\ndata_source=file\nfile_type=row\ninternal_page_max=9\nleaf_page_max=9\nlogging=0\nlong_running_txn=1\nops=1000000\nrows=10000\nruns=1\nsalvage=0\nthreads=2\nverify=0\nwrite_pct=80\n```\n\nDo a quick mod like this:\n\n```\ndiff --git a/test/format/lrt.c b/test/format/lrt.c\nindex a00a4e0..3b9b856 100644\n--- a/test/format/lrt.c\n+++ b/test/format/lrt.c\n@@ -69,6 +69,8 @@ lrt(void *arg)\n\n                /* Sleep for some number of seconds. */\n                period = mmrand(NULL, 1, 10);\n+               fprintf(stderr, \"\\n\" \"%s \" \"%u\" \"\\n\",\n+                   pinned ? \"pinned\" : \"unpinned\", period);\n\n                /* Sleep for short periods so we don't make the run wait. */\n                while (period > 0 && !g.workers_finished) {\n```\n\nand run format, the whole thing freezes up whenever the reading cursor is set.\n\nIf you like this change, feel free to merge it into develop -- I've defaulted `long_running_txn` to 0% for now, so it won't affect any runs where we aren't specifically configuring for it.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2015 at 15:09 GMT",
        "updated_at": "Wednesday Jul 15, 2015 at 22:35 GMT",
        "closed_at": "Wednesday Jul 15, 2015 at 22:35 GMT",
        "merged_at": "Wednesday Jul 15, 2015 at 22:35 GMT"
    },
    {
        "key": "WT-1970",
        "number": 2059,
        "state": "closed",
        "title": "WT-1970: read -d command",
        "body": "WT-1970\n\n@agorrod, `read -d` is a bash extension, and I don't think we actually need it if we use a default xargs configuration.\n\nFor your review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2015 at 14:51 GMT",
        "updated_at": "Wednesday Jul 15, 2015 at 12:05 GMT",
        "closed_at": "Wednesday Jul 15, 2015 at 12:05 GMT",
        "merged_at": "Wednesday Jul 15, 2015 at 12:05 GMT"
    },
    {
        "key": "WT-2006",
        "number": 2058,
        "state": "closed",
        "title": "WT-2006: s_copyright fixes",
        "body": "WT-2006\n\n@agorrod, for your review.\n\n`s_copyright` wasn't running on FreeBSD, and checking it over I think I found some problems.\n\nNote, the final commit isn't a bug fix, but it reworks the script so we only create a single copy of the copyright template files.\n\nOne thing I didn't change: in the check() function, there's this code:\n\n```\n        # Skip files in which WiredTiger holds no rights. 3rdparty and\n        # node_modules are used by wtstats\n        if expr \"$1\" : '*3rdparty*' > /dev/null; then\n                return;\n        fi\n        if expr \"$1\" : '*node_modules*' > /dev/null; then\n                return;\n        fi\n```\n\nThere's already code in the parent find that uses sed to remove directories from the copyright list we check:\n\n```\n# Search for files, skipping some well-known 3rd party directories.\n(cd .. && find [a-z]* -name '*.[chi]' \\\n        -o -name '*.cxx' \\\n        -o -name '*.in' \\\n        -o -name '*.java' \\\n        -o -name '*.py' |\n    sed -e '/Makefile.in/d' \\\n        -e '/^build_posix\\//d' \\\n        -e '/api\\/leveldb\\/basho\\//d' \\\n        -e '/api\\/leveldb\\/hyperleveldb\\//d' \\\n        -e '/api\\/leveldb\\/leveldb\\//d' \\\n        -e '/api\\/leveldb\\/rocksdb\\//d' \\\n        -e '/test\\/3rdparty\\//d' \\\n        -e '/tools\\/wtperf_stats\\/3rdparty\\//d' \\\n        -e '/dist\\/__/d' \\\n        -e 's/^\\.\\///' |\n    xargs -P 20 -n 1 -I{} sh dist/s_copyright {})\n```\n\nWould it be simpler to put the `3rdparty` and `node_modules` checks with the others, so all the checks are in one place (and it's going to be faster to do that, instead of checking every individual file name for a match).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2015 at 13:38 GMT",
        "updated_at": "Wednesday Jul 15, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jul 15, 2015 at 01:59 GMT",
        "merged_at": "Wednesday Jul 15, 2015 at 01:59 GMT"
    },
    {
        "key": "WT-1980",
        "number": 2057,
        "state": "closed",
        "title": "WT-1980 Bug fix: return ordinary metadata cursor values.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2015 at 05:46 GMT",
        "updated_at": "Tuesday Jul 14, 2015 at 06:03 GMT",
        "closed_at": "Tuesday Jul 14, 2015 at 06:03 GMT",
        "merged_at": "Tuesday Jul 14, 2015 at 06:03 GMT"
    },
    {
        "key": "WT-2006",
        "number": 2056,
        "state": "closed",
        "title": "WT-2006 Have s_copyright cleanup its temporary files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 14, 2015 at 01:26 GMT",
        "updated_at": "Tuesday Jul 14, 2015 at 02:39 GMT",
        "closed_at": "Tuesday Jul 14, 2015 at 02:39 GMT",
        "merged_at": "Tuesday Jul 14, 2015 at 02:39 GMT"
    },
    {
        "key": "WT-1985",
        "number": 2055,
        "state": "closed",
        "title": "WT-1985. Integer packing and other fixes for Java",
        "body": "This set of commits adds more extensive packing tests (PackTest02, PackTest03) for Java and fixes various problems that came up in resolving the new tests:\n- The basic PackTest does positive/negative numbers, so needs to use 'q' (signed format).\n- Fixed bugs in packing/unpacking bytearrays: we must be aware of 'U' format; when length is provided in format, use it; do padding.\n- Fixed signed checking for getInt/Long/Short.\n- Added special case encoding for 8256 (to match Python and C), this is the original problem reported in WT-1985.\n- Fixed bugs in packing strings: embedded nulls; use length when provided.  Logic copied from packing.py.\n- Java's Cursor.reset() more completely resets the cursor - removes the state of any incompletely packed/unpacked items.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 13, 2015 at 19:57 GMT",
        "updated_at": "Tuesday Jul 14, 2015 at 03:15 GMT",
        "closed_at": "Tuesday Jul 14, 2015 at 03:15 GMT",
        "merged_at": "Tuesday Jul 14, 2015 at 03:15 GMT"
    },
    {
        "key": "WT-1962",
        "number": 2054,
        "state": "closed",
        "title": "WT-1962 Make the hot_backup_lock a read/write lock.",
        "body": "@michaelcahill please review this branch that changes the hot_backup_lock to a rwlock.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 10, 2015 at 22:00 GMT",
        "updated_at": "Monday Jul 13, 2015 at 04:10 GMT",
        "closed_at": "Monday Jul 13, 2015 at 04:10 GMT",
        "merged_at": "Monday Jul 13, 2015 at 04:10 GMT"
    },
    {
        "key": "ER-18899",
        "number": 2053,
        "state": "closed",
        "title": "SERVER-18899 followup to abstract copying a WT home directory into a function.",
        "body": "This commit makes a small change, but the main function is to put the correct JIRA ticket into the comment stream (the previous commit used a bad ticket id in the comment).\n\n@sueloverso, can you review?  This is the best I can do to fix the errant comment comment reference.  When develop is merged into master, perhaps the previous commit can be squashed into this one.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 08, 2015 at 19:15 GMT",
        "updated_at": "Thursday Jul 09, 2015 at 04:11 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 19:36 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 19:36 GMT"
    },
    {
        "key": null,
        "number": 2051,
        "state": "closed",
        "title": "Minor test suite refactor",
        "body": "Added copy_live_wiredtiger_home function, with two callers.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 08, 2015 at 17:11 GMT",
        "updated_at": "Wednesday Jul 08, 2015 at 23:24 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 17:28 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 17:28 GMT"
    },
    {
        "key": "WT-1998",
        "number": 2050,
        "state": "closed",
        "title": "WT-1998 WT-2000 Fixes for indexes with some rarely used key/value formats",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 08, 2015 at 07:03 GMT",
        "updated_at": "Wednesday Jul 08, 2015 at 08:39 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 08:38 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 08:38 GMT"
    },
    {
        "key": "WT-1980",
        "number": 2049,
        "state": "closed",
        "title": "WT-1980 Provide an API to query metadata meaningful to WT_SESSION::create",
        "body": "Note the connection to WT-1133: this change does not support getting the configuration of connections or sessions, or using a cursor to traverse a config string.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 08, 2015 at 06:02 GMT",
        "updated_at": "Monday Jul 13, 2015 at 06:08 GMT",
        "closed_at": "Monday Jul 13, 2015 at 06:08 GMT",
        "merged_at": "Monday Jul 13, 2015 at 06:08 GMT"
    },
    {
        "key": "WT-1993",
        "number": 2048,
        "state": "closed",
        "title": "WT-1993 Coverity CID 1310061: Program hangs (LOCK)",
        "body": "block_open.c:200: Returning without unlocking \"conn->block_lock.lock\".\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 08, 2015 at 04:11 GMT",
        "updated_at": "Wednesday Jul 08, 2015 at 19:43 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 19:41 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 19:41 GMT"
    },
    {
        "key": "WT-1985",
        "number": 2047,
        "state": "closed",
        "title": "WT-1985 More integer packing tests and fixes for python",
        "body": "@agorrod, here's a followup to #2036.  Can you review?\n\nYour previous comments:\n\n> It would be good if you can investigate the performance issue.\n\nThat's covered in WT-1988, I had two cursors open on the same page, they were never both in a state of reset, so the page couldn't be evicted, and there were some enforced pauses. Keith is reviewing some doc modifications extolling the virtues of cursor.reset(), and I added reset into the test case (as part of this pull request).\n\n> I also noticed that there are two test files in lang/python/wiredtiger related to packing intpack-test.py and packing-test.py. Does your new test case make those obsolete? If not could you move them into the test/suite directory, and make them conform with our other test cases?\n\nThanks for catching that. I moved/rewrote these, they are now covered by test/suite/test_intpack.py and test_pack.py.  They uncovered a few problems - I fixed one in this commit: using 'u' format can expose the hidden 'U' format to the python layer, so python pack/unpack must understand 'U'.  Other problems will be tracked in WT-1998, WT-2000.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 07, 2015 at 20:19 GMT",
        "updated_at": "Wednesday Jul 08, 2015 at 00:28 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 00:28 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 00:28 GMT"
    },
    {
        "key": "WT-1982",
        "number": 2046,
        "state": "closed",
        "title": "WT-1982 Avoid unnecessary read barriers in transaction code",
        "body": "Fix a 64-to-32-bit conversion warning while in the area.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 07, 2015 at 05:09 GMT",
        "updated_at": "Wednesday Jul 08, 2015 at 04:15 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 04:15 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 04:15 GMT"
    },
    {
        "key": "WT-1970",
        "number": 2045,
        "state": "closed",
        "title": "WT-1970 Speedup s_all",
        "body": "These changes make running `s_all` faster by parallelising scripts. Here are the results I saw:\n\n| Machine | develop | speedup-s_all |\n| --- | --- | --- |\n| tinderbox | 52 | 10 |\n| bengal | 40 | 14 |\n| AWS box | 60 | 15 |\n| Mac | 62 | 40 |\n\n@michaelcahill Could you take a look please? It changes the output from `s_all` - it now only reports errors.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 07, 2015 at 02:43 GMT",
        "updated_at": "Wednesday Jul 08, 2015 at 23:53 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 23:53 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 23:53 GMT"
    },
    {
        "key": "WT-1930",
        "number": 2044,
        "state": "closed",
        "title": "WT-1930 Add configuration option to disable sweep of old handles",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 07, 2015 at 01:54 GMT",
        "updated_at": "Wednesday Jul 15, 2015 at 06:53 GMT",
        "closed_at": "Wednesday Jul 15, 2015 at 06:53 GMT",
        "merged_at": "Wednesday Jul 15, 2015 at 06:53 GMT"
    },
    {
        "key": "WT-1988",
        "number": 2043,
        "state": "closed",
        "title": "WT-1988. Added a doc subsection about the interation between cursors and eviction",
        "body": ", @keithbostic, can you please review?\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 06, 2015 at 14:53 GMT",
        "updated_at": "Wednesday Jul 08, 2015 at 15:36 GMT",
        "closed_at": "Wednesday Jul 08, 2015 at 15:36 GMT",
        "merged_at": "Wednesday Jul 08, 2015 at 15:36 GMT"
    },
    {
        "key": "WT-1992",
        "number": 2042,
        "state": "closed",
        "title": "WT-1992: clean up metadata tracking error handling",
        "body": "@michaelcahill, @agorrod: for review and merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 03, 2015 at 21:34 GMT",
        "updated_at": "Monday Jul 06, 2015 at 00:04 GMT",
        "closed_at": "Sunday Jul 05, 2015 at 23:59 GMT",
        "merged_at": "Sunday Jul 05, 2015 at 23:59 GMT"
    },
    {
        "key": "WT-1989",
        "number": 2041,
        "state": "closed",
        "title": "WT-1989 Improvements to log slot freeing for thread scalability.",
        "body": "POC from BDL.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 02, 2015 at 21:42 GMT",
        "updated_at": "Tuesday Jul 21, 2015 at 00:13 GMT",
        "closed_at": "Tuesday Jul 21, 2015 at 00:13 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1986",
        "number": 2040,
        "state": "closed",
        "title": "WT-1986 Fix a race renaming temporary log files.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jul 02, 2015 at 02:33 GMT",
        "updated_at": "Thursday Jul 02, 2015 at 05:52 GMT",
        "closed_at": "Thursday Jul 02, 2015 at 05:52 GMT",
        "merged_at": "Thursday Jul 02, 2015 at 05:52 GMT"
    },
    {
        "key": "ow-",
        "number": 2039,
        "state": "closed",
        "title": "row-store __rec_txn_read() optimization",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2015 at 18:25 GMT",
        "updated_at": "Thursday Jul 02, 2015 at 03:42 GMT",
        "closed_at": "Thursday Jul 02, 2015 at 03:42 GMT",
        "merged_at": "Thursday Jul 02, 2015 at 03:42 GMT"
    },
    {
        "key": "ax-",
        "number": 2038,
        "state": "closed",
        "title": "track the tree's max-txn-ID in reconciliation, where the page's max-txn-ID is set.",
        "body": "@michaelcahill, I was staring at this code this morning, and it seemed like it would be easier (safer?) to set the tree's maximum transaction ID when we set/update the page's maximum transaction ID.\n\nThe \"safer\" part may be a misunderstanding on my part: the WT_BTREE.rec_max_txn field is used by sweep and close, but it's only set as part of the checkpoint operation.\n\nBut what if, by the time we get to checkpoint (WT_SYNC_CHECKPOINT), there aren't any leaf pages to write. Is it possible we won't update the tree's maximum transaction ID, since internal pages don't have a maximum transaction ID?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2015 at 16:04 GMT",
        "updated_at": "Monday Jul 06, 2015 at 00:46 GMT",
        "closed_at": "Monday Jul 06, 2015 at 00:46 GMT",
        "merged_at": "Monday Jul 06, 2015 at 00:46 GMT"
    },
    {
        "key": "WT-1987",
        "number": 2037,
        "state": "closed",
        "title": "WT-1987 Add a TEST_WRAPPER variable for running all tests with valgrind or similar",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2015 at 06:41 GMT",
        "updated_at": "Wednesday Jul 01, 2015 at 07:04 GMT",
        "closed_at": "Wednesday Jul 01, 2015 at 07:04 GMT",
        "merged_at": "Wednesday Jul 01, 2015 at 07:04 GMT"
    },
    {
        "key": "WT-1985",
        "number": 2036,
        "state": "closed",
        "title": "WT-1985 integer packing fixes for Python",
        "body": "Here are some fixes along with some tests for python.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 01, 2015 at 02:15 GMT",
        "updated_at": "Wednesday Jul 01, 2015 at 17:44 GMT",
        "closed_at": "Wednesday Jul 01, 2015 at 06:38 GMT",
        "merged_at": "Wednesday Jul 01, 2015 at 06:38 GMT"
    },
    {
        "key": "WT-1982",
        "number": 2035,
        "state": "closed",
        "title": "WT-1982 Track down cached overflow items that are being freed too early",
        "body": "... leading to reconciliation failing with WT_NOTFOUND.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 30, 2015 at 07:50 GMT",
        "updated_at": "Wednesday Jul 01, 2015 at 07:58 GMT",
        "closed_at": "Wednesday Jul 01, 2015 at 07:58 GMT",
        "merged_at": "Wednesday Jul 01, 2015 at 07:58 GMT"
    },
    {
        "key": null,
        "number": 2034,
        "state": "closed",
        "title": "Add ability to turn verify and salvage off in test/format.",
        "body": "This can be handy when reproducing failures that aren't uncovered\nwith verify/salvage, since it decreases the runtime for a single pass.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 30, 2015 at 01:32 GMT",
        "updated_at": "Tuesday Jun 30, 2015 at 01:47 GMT",
        "closed_at": "Tuesday Jun 30, 2015 at 01:47 GMT",
        "merged_at": "Tuesday Jun 30, 2015 at 01:47 GMT"
    },
    {
        "key": "WT-1983",
        "number": 2033,
        "state": "closed",
        "title": "WT-1983 Wtperf truncate",
        "body": "WT-1983 Wtperf truncate\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 29, 2015 at 23:48 GMT",
        "updated_at": "Thursday Jul 30, 2015 at 03:24 GMT",
        "closed_at": "Thursday Jul 30, 2015 at 02:39 GMT",
        "merged_at": "Thursday Jul 30, 2015 at 02:39 GMT"
    },
    {
        "key": "WT-1981",
        "number": 2032,
        "state": "closed",
        "title": "WT-1981 Signed int pack bug",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jun 29, 2015 at 06:03 GMT",
        "updated_at": "Tuesday Jun 30, 2015 at 01:19 GMT",
        "closed_at": "Tuesday Jun 30, 2015 at 01:19 GMT",
        "merged_at": "Tuesday Jun 30, 2015 at 01:19 GMT"
    },
    {
        "key": "WT-1964",
        "number": 2031,
        "state": "closed",
        "title": "WT-1964: In Java fix session/cursor close in different thread than open",
        "body": "Limit when we use a saved JNIEnv pointer (basically the JNI abstraction of a Java thread). When we have a JNIEnv pointer available from an explicit close call, use that. When we are implicitly closing a session or cursor, use the connection's JNIEnv pointer.  Add tests for this, and some code comments.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 26, 2015 at 20:17 GMT",
        "updated_at": "Monday Jun 29, 2015 at 06:19 GMT",
        "closed_at": "Monday Jun 29, 2015 at 06:19 GMT",
        "merged_at": "Monday Jun 29, 2015 at 06:19 GMT"
    },
    {
        "key": "WT-1962",
        "number": 2030,
        "state": "closed",
        "title": "WT-1962 Fix usage of log->prep_missed.",
        "body": "@michaelcahill or @agorrod please review this small diff.  While investigating WT-1962, I discovered we were clearing log->prep_missed at the wrong time.  I also moved where we incremented it to where a clearer, more readable location.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 25, 2015 at 16:50 GMT",
        "updated_at": "Friday Jun 26, 2015 at 06:27 GMT",
        "closed_at": "Friday Jun 26, 2015 at 06:27 GMT",
        "merged_at": "Friday Jun 26, 2015 at 06:27 GMT"
    },
    {
        "key": "ER-18838",
        "number": 2029,
        "state": "closed",
        "title": "SERVER-18838 During drops, don't remove files until the metadata is durable",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 25, 2015 at 06:49 GMT",
        "updated_at": "Friday Jun 26, 2015 at 01:15 GMT",
        "closed_at": "Thursday Jun 25, 2015 at 23:38 GMT",
        "merged_at": "Thursday Jun 25, 2015 at 23:38 GMT"
    },
    {
        "key": "ER-18875",
        "number": 2028,
        "state": "closed",
        "title": "SERVER-18875 Clean up deleted pages",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Jun 25, 2015 at 03:36 GMT",
        "updated_at": "Thursday Jun 25, 2015 at 04:41 GMT",
        "closed_at": "Thursday Jun 25, 2015 at 04:41 GMT",
        "merged_at": "Thursday Jun 25, 2015 at 04:41 GMT"
    },
    {
        "key": "ER-18899",
        "number": 2027,
        "state": "closed",
        "title": "SERVER-18899 Add unit test to simulate fsyncLock.",
        "body": "@michaelcahill Please review this PR to implement a test for the fsyncLock strategy.  In particular I currently do a shutil.copytree and that may have problems on Windows (based on the comment in test_durability01.py that I based this on).  I updated the doc because if skipping the WiredTiger.lock file is going to be an issue, it'll need to be documented in some clear way (non-Windows can do 'cp -r', Windows will have to walk over each file name and skip that one).\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2015 at 19:25 GMT",
        "updated_at": "Wednesday Jul 01, 2015 at 06:47 GMT",
        "closed_at": "Wednesday Jul 01, 2015 at 06:47 GMT",
        "merged_at": "Wednesday Jul 01, 2015 at 06:47 GMT"
    },
    {
        "key": "WT-1975",
        "number": 2026,
        "state": "closed",
        "title": "WT-1975 Wait for sync_lsn of earlier log files to complete for forced sync.",
        "body": "@michaelcahill Please review this fix.  As I was not able to repro the failure, I found this by code inspection.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2015 at 16:24 GMT",
        "updated_at": "Thursday Jun 25, 2015 at 01:55 GMT",
        "closed_at": "Thursday Jun 25, 2015 at 01:54 GMT",
        "merged_at": "Thursday Jun 25, 2015 at 01:54 GMT"
    },
    {
        "key": "WT-1978",
        "number": 2025,
        "state": "closed",
        "title": "WT-1978 Better checking and tests for index cursor comparison",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2015 at 13:50 GMT",
        "updated_at": "Thursday Jun 25, 2015 at 01:09 GMT",
        "closed_at": "Thursday Jun 25, 2015 at 00:51 GMT",
        "merged_at": "Thursday Jun 25, 2015 at 00:51 GMT"
    },
    {
        "key": "WT-1977",
        "number": 2024,
        "state": "closed",
        "title": "WT-1977 Improve the performance of getting snapshots with many sessions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 24, 2015 at 11:36 GMT",
        "updated_at": "Thursday Jun 25, 2015 at 18:57 GMT",
        "closed_at": "Wednesday Jun 24, 2015 at 23:52 GMT",
        "merged_at": "Wednesday Jun 24, 2015 at 23:52 GMT"
    },
    {
        "key": "WT-1966",
        "number": 2023,
        "state": "closed",
        "title": "WT-1966 Change how the shared cache assigns priority to participants.",
        "body": "The old code implicitly assumed at least 10 members. The new\ncode uses a pressure based on a percentage of the most active\nmember.\n\nrefs WT-1966\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 23, 2015 at 06:47 GMT",
        "updated_at": "Tuesday Jul 07, 2015 at 02:34 GMT",
        "closed_at": "Monday Jul 06, 2015 at 07:17 GMT",
        "merged_at": "Monday Jul 06, 2015 at 07:17 GMT"
    },
    {
        "key": "WT-1728",
        "number": 2022,
        "state": "closed",
        "title": "WT-1728 WT_SESSION.reset",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Jun 21, 2015 at 23:45 GMT",
        "updated_at": "Sunday Jul 05, 2015 at 23:45 GMT",
        "closed_at": "Tuesday Jun 23, 2015 at 04:31 GMT",
        "merged_at": "Tuesday Jun 23, 2015 at 04:31 GMT"
    },
    {
        "key": null,
        "number": 2021,
        "state": "closed",
        "title": "Avoid compiler complaints",
        "body": "@michaelcahill, just getting rid of a compiler/lint complaint, if you don't mind, no real change.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 18, 2015 at 17:00 GMT",
        "updated_at": "Monday Jun 22, 2015 at 00:35 GMT",
        "closed_at": "Monday Jun 22, 2015 at 00:35 GMT",
        "merged_at": "Monday Jun 22, 2015 at 00:35 GMT"
    },
    {
        "key": null,
        "number": 2020,
        "state": "closed",
        "title": "Develop",
        "body": "",
        "base_ref": "master",
        "created_at": "Monday Jun 15, 2015 at 04:08 GMT",
        "updated_at": "Thursday Jun 18, 2015 at 11:12 GMT",
        "closed_at": "Thursday Jun 18, 2015 at 11:12 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1963",
        "number": 2019,
        "state": "closed",
        "title": "WT-1963. Modified Java's next/prev/search/search_near to work with backup cursors",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Jun 12, 2015 at 17:56 GMT",
        "updated_at": "Monday Jun 15, 2015 at 19:08 GMT",
        "closed_at": "Friday Jun 12, 2015 at 19:02 GMT",
        "merged_at": "Friday Jun 12, 2015 at 19:02 GMT"
    },
    {
        "key": "ER-18829",
        "number": 2018,
        "state": "closed",
        "title": "SERVER-18829 Have pages start in the middle of the LRU queue for eviction",
        "body": "Also make sure that when eviction first needs to run, it can find some pages to\nevict.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 08, 2015 at 21:52 GMT",
        "updated_at": "Tuesday Jun 09, 2015 at 17:44 GMT",
        "closed_at": "Tuesday Jun 09, 2015 at 17:44 GMT",
        "merged_at": "Tuesday Jun 09, 2015 at 17:44 GMT"
    },
    {
        "key": null,
        "number": 2016,
        "state": "closed",
        "title": "Change WT_SESSION.verify to not error on leaked blocks, by default.",
        "body": "Reference WT-1959.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jun 06, 2015 at 17:24 GMT",
        "updated_at": "Monday Jun 08, 2015 at 16:42 GMT",
        "closed_at": "Monday Jun 08, 2015 at 16:42 GMT",
        "merged_at": "Monday Jun 08, 2015 at 16:42 GMT"
    },
    {
        "key": null,
        "number": 2015,
        "state": "closed",
        "title": "Move the statistics=(size) support into the block manager",
        "body": "@michaelcahill, I think this work should be in the block manager, for clarity.\n\nThoughts?\n",
        "base_ref": "develop",
        "created_at": "Saturday Jun 06, 2015 at 15:16 GMT",
        "updated_at": "Monday Jun 08, 2015 at 14:09 GMT",
        "closed_at": "Monday Jun 08, 2015 at 14:09 GMT",
        "merged_at": "Monday Jun 08, 2015 at 14:09 GMT"
    },
    {
        "key": null,
        "number": 2014,
        "state": "closed",
        "title": "AC_TRY_RUN is obsolete.",
        "body": "@michaelcahill, did you have a test you ran to integrate the AX_FUNC_POSIX_MEMALIGN macro, could we re-run that test?\n",
        "base_ref": "develop",
        "created_at": "Saturday Jun 06, 2015 at 12:56 GMT",
        "updated_at": "Saturday Jun 06, 2015 at 13:26 GMT",
        "closed_at": "Saturday Jun 06, 2015 at 13:26 GMT",
        "merged_at": "Saturday Jun 06, 2015 at 13:26 GMT"
    },
    {
        "key": null,
        "number": 2013,
        "state": "closed",
        "title": "Throttle worker threads based on eviction targets.",
        "body": "Reference WT-1744.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2015 at 22:02 GMT",
        "updated_at": "Thursday Jun 25, 2015 at 01:47 GMT",
        "closed_at": "Thursday Jun 25, 2015 at 01:47 GMT",
        "merged_at": "Thursday Jun 25, 2015 at 01:47 GMT"
    },
    {
        "key": null,
        "number": 2012,
        "state": "closed",
        "title": "Add a \"statistics=(size)\" mode to statistics cursors",
        "body": "Add a \"statistics=(size)\" mode to statistics cursors that just gets the filesize without opening anything.\n\nrefs SERVER-17078\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 05, 2015 at 20:02 GMT",
        "updated_at": "Saturday Jun 06, 2015 at 00:51 GMT",
        "closed_at": "Saturday Jun 06, 2015 at 00:50 GMT",
        "merged_at": "Saturday Jun 06, 2015 at 00:50 GMT"
    },
    {
        "key": null,
        "number": 2011,
        "state": "closed",
        "title": "Add draft changelog for 2.6.1 release.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 03, 2015 at 02:30 GMT",
        "updated_at": "Thursday Jun 04, 2015 at 04:45 GMT",
        "closed_at": "Thursday Jun 04, 2015 at 04:45 GMT",
        "merged_at": "Thursday Jun 04, 2015 at 04:45 GMT"
    },
    {
        "key": null,
        "number": 2010,
        "state": "closed",
        "title": "Lsm merge aggressive",
        "body": "refs WT-1955\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 02, 2015 at 05:06 GMT",
        "updated_at": "Thursday Jun 04, 2015 at 06:50 GMT",
        "closed_at": "Thursday Jun 04, 2015 at 06:29 GMT",
        "merged_at": "Thursday Jun 04, 2015 at 06:29 GMT"
    },
    {
        "key": null,
        "number": 2009,
        "state": "closed",
        "title": "Python PRNG update",
        "body": "@ddanderson, for your consideration:\n- use the standard seed values if no values specified,\n- this isn't thread safe, check for seed values that have gone to 0 (that's probably sufficient),\n- minor changes to make the code look like the C code.\n",
        "base_ref": "rand-8B",
        "created_at": "Saturday May 30, 2015 at 18:12 GMT",
        "updated_at": "Sunday Jun 07, 2015 at 21:27 GMT",
        "closed_at": "Sunday May 31, 2015 at 21:28 GMT",
        "merged_at": "Sunday May 31, 2015 at 21:28 GMT"
    },
    {
        "key": null,
        "number": 2008,
        "state": "closed",
        "title": "Avoid potential races in the PRNG.",
        "body": "@michaelcahill, @markbenvenuto, this is what I think we need to do in the PRNG.\n\nThe only interesting changes are in `src/support/rand.c`, everything else is changing callers of those functions.\n\nLet me know if I'm missing something, or if you think I've slowed things down somehow.\n",
        "base_ref": "develop",
        "created_at": "Saturday May 30, 2015 at 15:59 GMT",
        "updated_at": "Tuesday Jun 02, 2015 at 05:05 GMT",
        "closed_at": "Tuesday Jun 02, 2015 at 05:05 GMT",
        "merged_at": "Tuesday Jun 02, 2015 at 05:05 GMT"
    },
    {
        "key": "WT-147",
        "number": 2007,
        "state": "closed",
        "title": "WT-147 Create indices after populating primary table",
        "body": "Allow indices to be created at any time.  The hard part about this is the locking, since while the index is being created, we are holding schema lock and we have an exclusive lock on the index data handle. We want to use regular cursor operations to insert into the index; to do so, we need to have a way for a session re-get a lock (that that session is already holding). This is the motivation behind having an 'owner' session for a `dhandle`, and a reference count.  At the same time, we need to drop the schema lock during the inserts since the LSM work thread will occasionally need to create the schema lock during a split.  The locking part is in a separate commit in case this is the wrong approach.\n",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2015 at 14:01 GMT",
        "updated_at": "Thursday Sep 17, 2015 at 14:07 GMT",
        "closed_at": "Thursday Sep 17, 2015 at 14:06 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 2006,
        "state": "closed",
        "title": "Add fix for C2054 to lz4_compress",
        "body": "The new LZ4 code will not compile under windows as we are missing an override of \"inline\" to avoid C2054 errors.\n\n@agorrod and @markbenvenuto can you have a look at this? The logic here is the same as for zlib.\n",
        "base_ref": "develop",
        "created_at": "Friday May 29, 2015 at 06:55 GMT",
        "updated_at": "Friday May 29, 2015 at 12:48 GMT",
        "closed_at": "Friday May 29, 2015 at 12:48 GMT",
        "merged_at": "Friday May 29, 2015 at 12:48 GMT"
    },
    {
        "key": null,
        "number": 2005,
        "state": "closed",
        "title": "Lz4 inline fix",
        "body": "The new LZ4 code will not compile under windows as we are missing an override of \"inline\" to avoid C2054 errors.\n",
        "base_ref": "master",
        "created_at": "Friday May 29, 2015 at 06:53 GMT",
        "updated_at": "Friday May 29, 2015 at 12:48 GMT",
        "closed_at": "Friday May 29, 2015 at 06:54 GMT",
        "merged_at": null
    },
    {
        "key": "xn-",
        "number": 2004,
        "state": "closed",
        "title": "txn-release resets txn->isolation",
        "body": "@agorrod, I had a branch lying around from when we were talking about 7b6fe6a.\n\nThe one change I had that didn't get in was removing where we're clearing `txn->isolation` in `__wt_txn_release`.\n\nSince the session's isolation can change at any time, resetting here can't be meaningful, so I think it should go.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2015 at 22:27 GMT",
        "updated_at": "Friday May 29, 2015 at 11:19 GMT",
        "closed_at": "Friday May 29, 2015 at 11:19 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 2003,
        "state": "closed",
        "title": "Strip out the \"log=(recover=)\" configuration from the base configuration file.",
        "body": "@sueloverso, for your review.\n\nI don't see any easy way to create a configuration string to do this work, but it's only in one place, so it's probably OK to inline it?\n",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2015 at 12:26 GMT",
        "updated_at": "Thursday May 28, 2015 at 16:13 GMT",
        "closed_at": "Thursday May 28, 2015 at 16:13 GMT",
        "merged_at": "Thursday May 28, 2015 at 16:13 GMT"
    },
    {
        "key": null,
        "number": 2002,
        "state": "closed",
        "title": "Fix configure checks for posix_memalign",
        "body": "Add code from the autoconf archive to detect `posix_memalign` instead of relying on AC_CHECK_FUNCS.\n\nrefs WT-1951\n",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2015 at 05:03 GMT",
        "updated_at": "Thursday May 28, 2015 at 05:10 GMT",
        "closed_at": "Thursday May 28, 2015 at 05:10 GMT",
        "merged_at": "Thursday May 28, 2015 at 05:10 GMT"
    },
    {
        "key": null,
        "number": 2001,
        "state": "closed",
        "title": "Compact early exit",
        "body": "refs WT-1953\n",
        "base_ref": "develop",
        "created_at": "Thursday May 28, 2015 at 04:57 GMT",
        "updated_at": "Friday May 29, 2015 at 05:22 GMT",
        "closed_at": "Friday May 29, 2015 at 05:22 GMT",
        "merged_at": "Friday May 29, 2015 at 05:22 GMT"
    },
    {
        "key": null,
        "number": 2000,
        "state": "closed",
        "title": "If we have no config, explicitly check for flushing and clear txn_logsync",
        "body": "refs  WT-1949\n\n@michaelcahill Although this is a tiny diff, please carefully review.  I explain what is happening in the Jira ticket.  This feels a tiny bit hacky to me, but some of that is due to how the config code assumes the inheritance from the connection, and changes defaults based on that.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 27, 2015 at 20:34 GMT",
        "updated_at": "Thursday May 28, 2015 at 05:29 GMT",
        "closed_at": "Thursday May 28, 2015 at 05:29 GMT",
        "merged_at": "Thursday May 28, 2015 at 05:29 GMT"
    },
    {
        "key": null,
        "number": 1999,
        "state": "closed",
        "title": "Evict clean",
        "body": "@agorrod, @michaelcahill: if the cache is large enough but there are too many dirty pages, don't evict the pages, clean them and leave them in the cache; ref WT-1350.\n\nThe real changes are in cff63f7 and ac7ed39.\n\nI spent some time trying to do this work without acquiring an exclusive lock on the page, but eventually gave up on that approach for this (far simpler) solution. There is an advantage to doing it this way, too, we can select which pages we want to keep (I'm still evicting pages that split).\n\nIt's only lightly tested, but you both know eviction better than I do, I wanted to give you a chance to point out if there's a reason this approach won't work.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 27, 2015 at 19:13 GMT",
        "updated_at": "Friday Jun 05, 2015 at 22:00 GMT",
        "closed_at": "Friday Jun 05, 2015 at 22:00 GMT",
        "merged_at": "Friday Jun 05, 2015 at 22:00 GMT"
    },
    {
        "key": null,
        "number": 1998,
        "state": "closed",
        "title": "We were checking the wrong flags value for WT_SKIP_UPDATE_RESTORE",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 27, 2015 at 17:45 GMT",
        "updated_at": "Wednesday May 27, 2015 at 22:36 GMT",
        "closed_at": "Wednesday May 27, 2015 at 22:36 GMT",
        "merged_at": "Wednesday May 27, 2015 at 22:36 GMT"
    },
    {
        "key": null,
        "number": 1997,
        "state": "closed",
        "title": "Clear all transaction flags on release, not a subset.",
        "body": "Release is the last thing a transaction does - so all state should\nbe cleared upon release.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 27, 2015 at 01:44 GMT",
        "updated_at": "Thursday May 28, 2015 at 05:34 GMT",
        "closed_at": "Thursday May 28, 2015 at 04:39 GMT",
        "merged_at": "Thursday May 28, 2015 at 04:39 GMT"
    },
    {
        "key": null,
        "number": 1996,
        "state": "closed",
        "title": "Calculate a merge generation for bulk loaded LSM chunks.",
        "body": "Otherwise LSM tends to choose poor merges after a bulk load,\nwhich leads to degraded performance.\n\nRefs WT-1947\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 27, 2015 at 00:53 GMT",
        "updated_at": "Wednesday May 27, 2015 at 18:51 GMT",
        "closed_at": "Wednesday May 27, 2015 at 18:51 GMT",
        "merged_at": "Wednesday May 27, 2015 at 18:51 GMT"
    },
    {
        "key": null,
        "number": 1995,
        "state": "closed",
        "title": "Only skip metadata checkpoint if we really skipped it, not force.",
        "body": "WT-1944\n@michaelcahill I have put the flag back in to only skip idle checkpoints if it was actually skipped, not just based on the modified flag.  Your change in changeset ff56ae5dd686c is causing the second issue in WT-1944.  That change is too broad.  The symptom is that repeated runs of recovery are not forcing a metadata update even though the recovery code uses \"force=1\".  The change you put in loses the \"force\" setting and we never updated the metadata, and its checkpoint LSN never advanced.  Please review again.  If you don't like this approach we can discuss alternatives.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 26, 2015 at 18:14 GMT",
        "updated_at": "Thursday May 28, 2015 at 05:33 GMT",
        "closed_at": "Thursday May 28, 2015 at 05:33 GMT",
        "merged_at": "Thursday May 28, 2015 at 05:33 GMT"
    },
    {
        "key": null,
        "number": 1994,
        "state": "closed",
        "title": "Replace calls to fprintf in the logging and transaction code.",
        "body": "@ddanderson, would you please review and merge this one?\n\nIt's a trivial cleanup, but there's a change in dist/log.py that I thought might be worth a few seconds.\n\nThanks!\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 26, 2015 at 11:59 GMT",
        "updated_at": "Tuesday May 26, 2015 at 15:30 GMT",
        "closed_at": "Tuesday May 26, 2015 at 15:30 GMT",
        "merged_at": "Tuesday May 26, 2015 at 15:30 GMT"
    },
    {
        "key": null,
        "number": 1993,
        "state": "closed",
        "title": "Database creation",
        "body": "@michaelcahill, this is a set of changes around database creation. The bug fixes are:\n1. WT-1943, don't write the base configuration file if not also creating the database.\n2. Don't create the lock file unless also creating the database, so mis-typing a home directory to the `wt` command or other WiredTiger application doesn't litter a random directory with a lock file (this necessitated an additional change, backups now have to copy the lock file to the backup directory).\n3. Change \"is-new\" to test for the final result of database initialization (the creation/rename of the turtle file) instead of the creation of the WiredTiger lock file, so that if we crash in the middle of the process, a subsequent open doesn't incorrectly NOT set is-new.\n\nSome comments:\n- By not creating the WiredTiger lock file (and changing backup cursors to copy it instead), we could potentially have a problem with using a newer release to open a backup directory created with an older release because the lock file won't exist and the open will fail. The workaround is to create a lock file by hand, and I don't think the problem is worth worrying about.\n- I can't spot a path where the WiredTiger turtle file won't exist once the database is \"created\", please confirm that. It's a gaping hole in this approach if it's not true. (We should have created a \"creation is done\" file at the end of the initial creation and used that instead; we could still switch to that approach I suppose, but obviously that leads to an upgrade problem.)\n",
        "base_ref": "develop",
        "created_at": "Monday May 25, 2015 at 19:59 GMT",
        "updated_at": "Thursday May 28, 2015 at 04:19 GMT",
        "closed_at": "Thursday May 28, 2015 at 04:18 GMT",
        "merged_at": "Thursday May 28, 2015 at 04:18 GMT"
    },
    {
        "key": null,
        "number": 1992,
        "state": "closed",
        "title": "Add atomic implementations for PPC64 architecture.",
        "body": "Based on patch submitted in WT-1942\n\nI haven't tested that this even compiles on PPC64 - we need to figure\nout how to do that regularly before merging this change.\n",
        "base_ref": "develop",
        "created_at": "Monday May 25, 2015 at 09:54 GMT",
        "updated_at": "Monday Jun 22, 2015 at 00:36 GMT",
        "closed_at": "Monday Jun 22, 2015 at 00:36 GMT",
        "merged_at": "Monday Jun 22, 2015 at 00:36 GMT"
    },
    {
        "key": null,
        "number": 1991,
        "state": "closed",
        "title": "Sync the log directory when creating log files, not its parent",
        "body": "The logging code is the only caller of `__wt_open` with `WT_FILE_TYPE_DIRECTORY` and it passes in the correct path, but `__open_directory` was stripping the last component.\n\nrefs WT-1941\n",
        "base_ref": "develop",
        "created_at": "Friday May 22, 2015 at 04:35 GMT",
        "updated_at": "Friday May 22, 2015 at 13:51 GMT",
        "closed_at": "Friday May 22, 2015 at 13:51 GMT",
        "merged_at": "Friday May 22, 2015 at 13:51 GMT"
    },
    {
        "key": null,
        "number": 1990,
        "state": "closed",
        "title": "Snapshot running transaction",
        "body": "This is currently broken - start a conversation about what creating a named snapshot from a running transaction means\n",
        "base_ref": "named-snapshots",
        "created_at": "Friday May 22, 2015 at 02:56 GMT",
        "updated_at": "Friday May 22, 2015 at 06:01 GMT",
        "closed_at": "Friday May 22, 2015 at 06:01 GMT",
        "merged_at": "Friday May 22, 2015 at 06:01 GMT"
    },
    {
        "key": null,
        "number": 1989,
        "state": "closed",
        "title": "Partial logging",
        "body": "@michaelcahill @agorrod I did a quick implementation of a configuration setting to only log some tables and added support and config scripts for it to wtperf.  This is not yet ready to merge as it crashes when I run the mixed workload.  It passes the populate portion and a read-only workload just fine, but on a mixed read/update it segfaults.  I checked the printlog and see only the metadata and one file's commit records.\n\nThis is not yet ready to merge but if you can look through it for any issues (clearly there is something wrong that we didn't think of during the discussions causing the segfault).\n",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2015 at 20:14 GMT",
        "updated_at": "Friday May 29, 2015 at 06:22 GMT",
        "closed_at": "Friday May 29, 2015 at 06:22 GMT",
        "merged_at": "Friday May 29, 2015 at 06:22 GMT"
    },
    {
        "key": null,
        "number": 1988,
        "state": "closed",
        "title": "Split deepen for append",
        "body": "Avoid deep trees on append-only workloads, reference [verify failing but rows look fine](https://github.com/wiredtiger/wiredtiger-amazon/issues/62).\n\n@agorrod, @michaelcahill, I think this one is yours.\n\nI'll add some explanation and call out some of the specific parts of the change as well.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2015 at 13:27 GMT",
        "updated_at": "Friday May 22, 2015 at 07:40 GMT",
        "closed_at": "Friday May 22, 2015 at 07:40 GMT",
        "merged_at": "Friday May 22, 2015 at 07:40 GMT"
    },
    {
        "key": null,
        "number": 1987,
        "state": "closed",
        "title": "Map ENOENT to WT_NOTFOUND in log cursors.",
        "body": "http://build.wiredtiger.com:8080/job/wiredtiger-test-format/4201/console\n\nrefs WT-1936\n",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2015 at 06:03 GMT",
        "updated_at": "Friday May 22, 2015 at 04:39 GMT",
        "closed_at": "Thursday May 21, 2015 at 15:22 GMT",
        "merged_at": "Thursday May 21, 2015 at 15:22 GMT"
    },
    {
        "key": null,
        "number": 1986,
        "state": "closed",
        "title": "Export a function to get the oldest transaction ID",
        "body": "Export a function to get the oldest transaction ID that needs to be tracked for a given tree.  Managing cached overflow items was using the oldest transaction ID, but the meaning of that field changed.\n\nThis fixes a bug that was introduced by WT-1745, that requires a combination of many overflow values, eviction and checkpoints, but can lead to unexpected WT_NOTFOUND errors during reconciliation.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 21, 2015 at 06:02 GMT",
        "updated_at": "Friday May 22, 2015 at 04:39 GMT",
        "closed_at": "Thursday May 21, 2015 at 06:32 GMT",
        "merged_at": "Thursday May 21, 2015 at 06:32 GMT"
    },
    {
        "key": null,
        "number": 1985,
        "state": "closed",
        "title": "Added extractor tests and a small fix for customized extractors.",
        "body": "To fix WT-1940.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2015 at 18:22 GMT",
        "updated_at": "Friday May 22, 2015 at 01:36 GMT",
        "closed_at": "Friday May 22, 2015 at 01:36 GMT",
        "merged_at": "Friday May 22, 2015 at 01:36 GMT"
    },
    {
        "key": null,
        "number": 1984,
        "state": "closed",
        "title": "Remove the WT_ATOMIC_CAS_VAL family of macros",
        "body": "Use the boolean versions everywhere.  Having both makes my head hurt, and (unless I'm missing something) doesn't add any more functionality.\n\nrefs WT-1938\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2015 at 02:47 GMT",
        "updated_at": "Friday May 22, 2015 at 11:19 GMT",
        "closed_at": "Friday May 22, 2015 at 09:26 GMT",
        "merged_at": "Friday May 22, 2015 at 09:26 GMT"
    },
    {
        "key": null,
        "number": 1983,
        "state": "closed",
        "title": "Replace \"volatile\" keyword with a macro to read shared data",
        "body": "This is intended to stimulate some discussion.  I don't find \"volatile\" easy to maintain because we have to know when declaring a field how it will be used.  That said, calling out \"shared reads\" isn't necessarily easy either, and would be easy to forget.\n\nrefs WT-1938\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2015 at 02:46 GMT",
        "updated_at": "Wednesday Jul 01, 2015 at 06:47 GMT",
        "closed_at": "Wednesday Jul 01, 2015 at 06:47 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1982,
        "state": "closed",
        "title": "Add a read barrier to __wt_log_slot_join to avoid a hang.",
        "body": "Otherwise the compiler can decide not to refresh a local variable\nand we never see a state update.\n\nrefs WT-1938\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 20, 2015 at 01:17 GMT",
        "updated_at": "Wednesday May 20, 2015 at 02:51 GMT",
        "closed_at": "Wednesday May 20, 2015 at 02:50 GMT",
        "merged_at": "Wednesday May 20, 2015 at 02:50 GMT"
    },
    {
        "key": "ge-",
        "number": 1981,
        "state": "closed",
        "title": "Minor cleanups to page-release.",
        "body": "@michaelcahill, I took a look today at clearing WT_REF.page during page release -- in short, it's not going to happen, there's too much sync and eviction code that knows hazard pointers aren't necessary once the WT_REF is locked or the file is single-threaded, and expect WT_REF.page to be available.\n\nI did make the change so there's no chance a software bug will release a non-existent hazard pointer after WT_REF.page has been cleared.\n\nAnd, a couple of trivial cleanups I spotted along the way, both for your review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 19, 2015 at 21:31 GMT",
        "updated_at": "Wednesday May 20, 2015 at 02:56 GMT",
        "closed_at": "Wednesday May 20, 2015 at 02:56 GMT",
        "merged_at": "Wednesday May 20, 2015 at 02:56 GMT"
    },
    {
        "key": null,
        "number": 1980,
        "state": "closed",
        "title": "Idle checkpoints",
        "body": "refs WT-1936\n@michaelcahill Here are a few changes for the idle checkpoint advancing the log issue.  There are three items/commits in this pull request:\n1.  A new test that recreated the original problem.  It now passes.\n2.  I changed the handling of ENOENT in `log_scan` and txns and cursors.    This avoids the ENOMEM huge amount of memory we try to allocate.  (With just this change, the test still gets ENOENT but avoids the error messages.)\n3.  A change to skip writing the checkpoint log record.  This is the commit I'm least sure about.  That is, I implemented a specific flag for this situation.  There may be a better solution with already available information and this redundant or overkill.\n\nPlease review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 19, 2015 at 18:53 GMT",
        "updated_at": "Thursday May 21, 2015 at 00:30 GMT",
        "closed_at": "Thursday May 21, 2015 at 00:30 GMT",
        "merged_at": "Thursday May 21, 2015 at 00:30 GMT"
    },
    {
        "key": null,
        "number": 1979,
        "state": "closed",
        "title": "Fix a hang in __wt_log_slot_join",
        "body": "Mark log slot state volatile so optimizing compilers don't cache the first read value and get stuck.\n\nrefs WT-1938\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 19, 2015 at 05:07 GMT",
        "updated_at": "Tuesday May 19, 2015 at 06:40 GMT",
        "closed_at": "Tuesday May 19, 2015 at 06:39 GMT",
        "merged_at": "Tuesday May 19, 2015 at 06:39 GMT"
    },
    {
        "key": "WT-1935",
        "number": 1978,
        "state": "closed",
        "title": "Increment queue_ref count before checking flag. WT-1935",
        "body": "@agorrod Here's one change for closing the window on LSM shutdown for your consideration.  Feel free to toss if you don't like it or disagree with my earlier concern that the window exists.\n",
        "base_ref": "lsm-shutdown-race",
        "created_at": "Monday May 18, 2015 at 14:37 GMT",
        "updated_at": "Tuesday May 19, 2015 at 00:50 GMT",
        "closed_at": "Tuesday May 19, 2015 at 00:50 GMT",
        "merged_at": "Tuesday May 19, 2015 at 00:50 GMT"
    },
    {
        "key": null,
        "number": 1977,
        "state": "closed",
        "title": "Fix a race on shutdown in LSM.",
        "body": "A worker thread could push a new work unit during shutdown, which\ncould lead to a work unit being processed after the underlying tree\nwas freed.\n\nrefs WT-1935\n",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2015 at 06:51 GMT",
        "updated_at": "Tuesday May 19, 2015 at 01:07 GMT",
        "closed_at": "Tuesday May 19, 2015 at 01:07 GMT",
        "merged_at": "Tuesday May 19, 2015 at 01:07 GMT"
    },
    {
        "key": null,
        "number": 1976,
        "state": "closed",
        "title": "Don't checkpoint dead handles",
        "body": "We've seen failures that look like this:\n\n```\n2015-05-15T06:30:02.354+0000 E STORAGE  WiredTiger (2) [1431671402:354440][6611:0x2b3e7dfe7940], checkpoint-server: checkpoint server error: No such file or directory\n2015-05-15T06:30:02.354+0000 E STORAGE  WiredTiger (-31804) [1431671402:354533][6611:0x2b3e7dfe7940], checkpoint-server: the process must exit and restart: WT_PANIC: WiredTiger library panic\n```\n\nThis branch enhances `test/fops` to randomly do forced drops to exercise this path (it quickly reproduced the failure), plus adds the fix.\n",
        "base_ref": "develop",
        "created_at": "Monday May 18, 2015 at 02:12 GMT",
        "updated_at": "Monday May 18, 2015 at 02:24 GMT",
        "closed_at": "Monday May 18, 2015 at 02:24 GMT",
        "merged_at": "Monday May 18, 2015 at 02:24 GMT"
    },
    {
        "key": null,
        "number": 1975,
        "state": "closed",
        "title": "Add encryption and log compression to stress testing",
        "body": "Stress testing had block compression, this change adds log compression, with some refactoring.  Likewise, overall 'system' encryption is added.\n",
        "base_ref": "develop",
        "created_at": "Sunday May 17, 2015 at 18:43 GMT",
        "updated_at": "Monday May 18, 2015 at 16:37 GMT",
        "closed_at": "Monday May 18, 2015 at 16:37 GMT",
        "merged_at": "Monday May 18, 2015 at 16:37 GMT"
    },
    {
        "key": "dy-",
        "number": 1974,
        "state": "closed",
        "title": "block manager and already-existing files.",
        "body": "@michaelcahill, as discussed.\n\nrefs WT-1932\n",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2015 at 13:18 GMT",
        "updated_at": "Tuesday May 19, 2015 at 06:39 GMT",
        "closed_at": "Tuesday May 19, 2015 at 06:39 GMT",
        "merged_at": "Tuesday May 19, 2015 at 06:39 GMT"
    },
    {
        "key": null,
        "number": 1973,
        "state": "closed",
        "title": "Disable eviction in a tree while it is being marked dead.",
        "body": "refs SERVER-18460\n",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2015 at 04:44 GMT",
        "updated_at": "Friday May 15, 2015 at 05:55 GMT",
        "closed_at": "Friday May 15, 2015 at 05:55 GMT",
        "merged_at": "Friday May 15, 2015 at 05:55 GMT"
    },
    {
        "key": null,
        "number": 1972,
        "state": "closed",
        "title": "Never evict during an LRU walk, including when clearing the walk point.",
        "body": "Found via a stack trace in the referenced issue, but not the cause of the crash.\n\nrefs SERVER-18460\n",
        "base_ref": "develop",
        "created_at": "Friday May 15, 2015 at 04:27 GMT",
        "updated_at": "Friday May 15, 2015 at 04:44 GMT",
        "closed_at": "Friday May 15, 2015 at 04:35 GMT",
        "merged_at": "Friday May 15, 2015 at 04:35 GMT"
    },
    {
        "key": null,
        "number": 1971,
        "state": "closed",
        "title": "Don't create bloom filters on the oldest chunk unless configured.",
        "body": "The recent bulk load change meant that we sometimes created a bloom\nfilter on the oldest chunk when running compact.\n\nCaused performance to drop by 50% in wtperf medium lsm compact job.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2015 at 06:48 GMT",
        "updated_at": "Tuesday May 19, 2015 at 07:16 GMT",
        "closed_at": "Thursday May 14, 2015 at 15:04 GMT",
        "merged_at": "Thursday May 14, 2015 at 15:04 GMT"
    },
    {
        "key": null,
        "number": 1970,
        "state": "closed",
        "title": "Encryption related fixes for windows",
        "body": "@markbenvenuto, can you review these changes please?\n",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2015 at 02:24 GMT",
        "updated_at": "Thursday May 14, 2015 at 04:10 GMT",
        "closed_at": "Thursday May 14, 2015 at 03:25 GMT",
        "merged_at": "Thursday May 14, 2015 at 03:25 GMT"
    },
    {
        "key": null,
        "number": 1969,
        "state": "closed",
        "title": "Add an fsync before verifying tables",
        "body": "If we're closing a dirty tree in order to verify it (or any other exclusive operation), make sure the changes are stable on disk in case there is a crash.\n\nrefs SERVER-18316\n",
        "base_ref": "develop",
        "created_at": "Thursday May 14, 2015 at 01:58 GMT",
        "updated_at": "Thursday May 14, 2015 at 11:18 GMT",
        "closed_at": "Thursday May 14, 2015 at 04:15 GMT",
        "merged_at": "Thursday May 14, 2015 at 04:15 GMT"
    },
    {
        "key": null,
        "number": 1968,
        "state": "closed",
        "title": "Handle potential error condition from bzip.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2015 at 18:42 GMT",
        "updated_at": "Thursday May 14, 2015 at 01:51 GMT",
        "closed_at": "Thursday May 14, 2015 at 01:51 GMT",
        "merged_at": "Thursday May 14, 2015 at 01:51 GMT"
    },
    {
        "key": null,
        "number": 1967,
        "state": "closed",
        "title": "Stuff i noticed",
        "body": "@agorrod, just a couple of (really) minor cleanups, would you please review whenever the develop branch is open again? Thanks!\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2015 at 16:39 GMT",
        "updated_at": "Thursday May 14, 2015 at 02:13 GMT",
        "closed_at": "Thursday May 14, 2015 at 02:13 GMT",
        "merged_at": "Thursday May 14, 2015 at 02:13 GMT"
    },
    {
        "key": null,
        "number": 1966,
        "state": "closed",
        "title": "Stuff i noticed",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday May 13, 2015 at 16:37 GMT",
        "updated_at": "Thursday May 14, 2015 at 02:13 GMT",
        "closed_at": "Wednesday May 13, 2015 at 16:37 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1965,
        "state": "closed",
        "title": "Draft of 2.6.0 release",
        "body": "The changelog isn't complete yet. There were over 3000 lines in the git log - it's a huge release.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 13, 2015 at 08:00 GMT",
        "updated_at": "Friday May 15, 2015 at 01:28 GMT",
        "closed_at": "Friday May 15, 2015 at 01:28 GMT",
        "merged_at": "Friday May 15, 2015 at 01:28 GMT"
    },
    {
        "key": null,
        "number": 1964,
        "state": "closed",
        "title": "Ignore unknown extractors during WT_SESSION.create.",
        "body": "@michaelcahill, you said:\n\n> the usual pattern is to create the object, including setting the metadata, then try to open it (which does the validation). If the open fails, the create is rolled back.\n\nThis backs out a change to detect unknown extractors during WT_SESSION.create.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2015 at 12:06 GMT",
        "updated_at": "Wednesday May 13, 2015 at 16:00 GMT",
        "closed_at": "Wednesday May 13, 2015 at 16:00 GMT",
        "merged_at": "Wednesday May 13, 2015 at 16:00 GMT"
    },
    {
        "key": null,
        "number": 1962,
        "state": "closed",
        "title": "Fix a bug in checkpoint where we committed the transaction too early.",
        "body": "It's not safe to commit the transaction before the files have been\nsynced to disk - if we do that the checkpoint can be rolled forward\nin recovery before the checkpoint in the file has been updated.\n\nRefs SERVER-18316\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2015 at 06:25 GMT",
        "updated_at": "Wednesday May 13, 2015 at 01:49 GMT",
        "closed_at": "Wednesday May 13, 2015 at 01:49 GMT",
        "merged_at": "Wednesday May 13, 2015 at 01:49 GMT"
    },
    {
        "key": null,
        "number": 1961,
        "state": "closed",
        "title": "Disable file writes during fsync",
        "body": "Since some systems block writes during fsync under some conditions, treat fsync as part of the checkpoint, and don't try to evict dirty pages from a file while we are syncing it.\n\nCurrently only for testing, don't merge.\n\nrefs SERVER-18314, SERVER-17157\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2015 at 05:34 GMT",
        "updated_at": "Wednesday May 20, 2015 at 02:56 GMT",
        "closed_at": "Wednesday May 20, 2015 at 02:56 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1960,
        "state": "closed",
        "title": "Make cleanup check before deleting",
        "body": "Not ready to merge yet\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 12, 2015 at 01:01 GMT",
        "updated_at": "Wednesday May 13, 2015 at 05:57 GMT",
        "closed_at": "Wednesday May 13, 2015 at 05:57 GMT",
        "merged_at": "Wednesday May 13, 2015 at 05:57 GMT"
    },
    {
        "key": null,
        "number": 1959,
        "state": "closed",
        "title": "Windows test fix",
        "body": "Not ready to merge yet\n",
        "base_ref": "master",
        "created_at": "Tuesday May 12, 2015 at 01:00 GMT",
        "updated_at": "Tuesday May 12, 2015 at 01:00 GMT",
        "closed_at": "Tuesday May 12, 2015 at 01:00 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1926",
        "number": 1958,
        "state": "closed",
        "title": "WT-1926 Make WiredTiger work correctly with SWIG version 3",
        "body": "@ddanderson Can you review these changes to the test suite?  Several calls to wiredtiger.wiredtiger_open only had one arg and python was unhappy about that on my Mac.\n",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2015 at 20:27 GMT",
        "updated_at": "Tuesday Nov 17, 2015 at 03:23 GMT",
        "closed_at": "Tuesday Nov 17, 2015 at 03:23 GMT",
        "merged_at": null
    },
    {
        "key": "ER-18316",
        "number": 1957,
        "state": "closed",
        "title": "Sync the metadata file before updating turtle file. SERVER-18316",
        "body": "@michaelcahill Please review this fix for SERVER-18316.  I have asked Jonathan to try a patch with the failing script.\n",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2015 at 20:00 GMT",
        "updated_at": "Tuesday May 12, 2015 at 04:41 GMT",
        "closed_at": "Tuesday May 12, 2015 at 04:41 GMT",
        "merged_at": "Tuesday May 12, 2015 at 04:41 GMT"
    },
    {
        "key": null,
        "number": 1956,
        "state": "closed",
        "title": "Update test/format to use dd to make backup copies.",
        "body": "The hope is that using a direct IO dd command will uncover more crash-like problems.\n",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2015 at 06:52 GMT",
        "updated_at": "Wednesday May 13, 2015 at 01:55 GMT",
        "closed_at": "Wednesday May 13, 2015 at 01:55 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1955,
        "state": "closed",
        "title": "Ensure the metadata is flushed when closing an LSM bulk cursor.",
        "body": "Otherwise races with metadata operations can fail.\n\nRefs WT-1924\n",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2015 at 02:46 GMT",
        "updated_at": "Monday May 11, 2015 at 03:44 GMT",
        "closed_at": "Monday May 11, 2015 at 03:44 GMT",
        "merged_at": "Monday May 11, 2015 at 03:44 GMT"
    },
    {
        "key": null,
        "number": 1954,
        "state": "closed",
        "title": "Add a \"WT_\" prefix to the many TXN_* macros in use inside WiredTiger",
        "body": "Now that test/format mixes wt_internal.h with Berkeley DB's db.h, we were seeing conflicts over TXN_RUNNING.  Try to fix that problem in general, at least for \"TXN\" macros.\n\nrefs WT-1925\n",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2015 at 02:40 GMT",
        "updated_at": "Monday May 11, 2015 at 02:53 GMT",
        "closed_at": "Monday May 11, 2015 at 02:53 GMT",
        "merged_at": "Monday May 11, 2015 at 02:53 GMT"
    },
    {
        "key": null,
        "number": 1953,
        "state": "closed",
        "title": "Change all testutils functions to have a void return",
        "body": "As per suggestion by @keithbostic \n",
        "base_ref": "develop",
        "created_at": "Monday May 11, 2015 at 02:18 GMT",
        "updated_at": "Monday May 11, 2015 at 06:51 GMT",
        "closed_at": "Monday May 11, 2015 at 06:51 GMT",
        "merged_at": "Monday May 11, 2015 at 06:51 GMT"
    },
    {
        "key": null,
        "number": 1952,
        "state": "closed",
        "title": "Pull out the RNG functions into test_util.i.",
        "body": "@agorrod, @daveh86, the random number functions were common and needed some cleanup, so I moved them into test/test_util.i.\n",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2015 at 17:36 GMT",
        "updated_at": "Friday May 29, 2015 at 18:35 GMT",
        "closed_at": "Monday May 11, 2015 at 00:29 GMT",
        "merged_at": "Monday May 11, 2015 at 00:29 GMT"
    },
    {
        "key": null,
        "number": 1951,
        "state": "closed",
        "title": "Log more of what we're doing during the long waits",
        "body": "If this looks good, I'll have a Python port of this for you soon.\n",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2015 at 02:55 GMT",
        "updated_at": "Monday May 11, 2015 at 03:33 GMT",
        "closed_at": "Monday May 11, 2015 at 03:33 GMT",
        "merged_at": "Monday May 11, 2015 at 03:33 GMT"
    },
    {
        "key": null,
        "number": 1950,
        "state": "closed",
        "title": "Add a \"soft update\" of the oldest ID from application threads",
        "body": "In case eviction isn't running (e.g., during forced eviction checks).\n\nrefs WT-1907\n",
        "base_ref": "develop",
        "created_at": "Friday May 08, 2015 at 02:21 GMT",
        "updated_at": "Friday May 08, 2015 at 04:05 GMT",
        "closed_at": "Friday May 08, 2015 at 04:05 GMT",
        "merged_at": "Friday May 08, 2015 at 04:05 GMT"
    },
    {
        "key": null,
        "number": 1949,
        "state": "closed",
        "title": "Change to commit_transaction for background sync.",
        "body": "Alternative 2. @michaelcahill \n",
        "base_ref": "transaction-background",
        "created_at": "Friday May 08, 2015 at 01:40 GMT",
        "updated_at": "Wednesday May 13, 2015 at 19:26 GMT",
        "closed_at": "Wednesday May 13, 2015 at 19:25 GMT",
        "merged_at": "Wednesday May 13, 2015 at 19:25 GMT"
    },
    {
        "key": null,
        "number": 1948,
        "state": "closed",
        "title": "Add support for bulk load in LSM trees.",
        "body": "This allows us to load into a single btree, using btree bulk load\nsemantics (single threaded, in order, no logging). Once the load completes\nwe switch the chunk out for the LSM tree.\n\nIt's possible that we could avoid some of the switch logic when closing a\nbulk load cursor - since the file is flushed when closing the btree handle.\nIt's simpler to use the switch logic to update the state of the tree.\n\nRefs WT-1922 SERVER-18321\n",
        "base_ref": "develop",
        "created_at": "Thursday May 07, 2015 at 06:38 GMT",
        "updated_at": "Friday May 08, 2015 at 04:13 GMT",
        "closed_at": "Friday May 08, 2015 at 04:12 GMT",
        "merged_at": "Friday May 08, 2015 at 04:12 GMT"
    },
    {
        "key": null,
        "number": 1947,
        "state": "closed",
        "title": "Fixes for some minor encryption issues",
        "body": "",
        "base_ref": "encryption-api",
        "created_at": "Thursday May 07, 2015 at 01:55 GMT",
        "updated_at": "Thursday May 07, 2015 at 14:15 GMT",
        "closed_at": "Thursday May 07, 2015 at 14:14 GMT",
        "merged_at": "Thursday May 07, 2015 at 14:14 GMT"
    },
    {
        "key": null,
        "number": 1946,
        "state": "closed",
        "title": "Fix checkpoint visiting a page that was rewritten in memory",
        "body": "refs WT-1919\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2015 at 10:47 GMT",
        "updated_at": "Thursday May 07, 2015 at 18:32 GMT",
        "closed_at": "Thursday May 07, 2015 at 03:40 GMT",
        "merged_at": "Thursday May 07, 2015 at 03:40 GMT"
    },
    {
        "key": null,
        "number": 1945,
        "state": "closed",
        "title": "If \"bulk\" is set on an LSM cursor, avoid logging.",
        "body": "refs WT-1922\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2015 at 10:45 GMT",
        "updated_at": "Friday May 08, 2015 at 02:22 GMT",
        "closed_at": "Friday May 08, 2015 at 02:22 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1944,
        "state": "closed",
        "title": "If a random lookup lands on a deleted item, move to the next valid record",
        "body": "(Or the last record in the table if there is no valid record after the search point).  This avoids a call to search_near when there may be no key set.\n\nrefs WT-1921\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 06, 2015 at 04:11 GMT",
        "updated_at": "Thursday May 07, 2015 at 03:40 GMT",
        "closed_at": "Thursday May 07, 2015 at 03:40 GMT",
        "merged_at": "Thursday May 07, 2015 at 03:40 GMT"
    },
    {
        "key": "WT-1908",
        "number": 1943,
        "state": "closed",
        "title": "Add a background transaction sync mechanism. WT-1908",
        "body": "Not ready for merge.  @michaelcahill this is for your consideration, particularly on naming.  It is not tested, but I want your opinion before I travel too far down this road.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2015 at 20:16 GMT",
        "updated_at": "Thursday May 28, 2015 at 07:17 GMT",
        "closed_at": "Thursday May 28, 2015 at 07:17 GMT",
        "merged_at": "Thursday May 28, 2015 at 07:17 GMT"
    },
    {
        "key": null,
        "number": 1942,
        "state": "closed",
        "title": "Clean up log temporary buffer handling.",
        "body": "@sueloverso, here you go.\n",
        "base_ref": "encryption-api",
        "created_at": "Tuesday May 05, 2015 at 14:57 GMT",
        "updated_at": "Tuesday May 05, 2015 at 15:58 GMT",
        "closed_at": "Tuesday May 05, 2015 at 15:58 GMT",
        "merged_at": "Tuesday May 05, 2015 at 15:58 GMT"
    },
    {
        "key": null,
        "number": 1941,
        "state": "closed",
        "title": "Encryption api out buffer",
        "body": "",
        "base_ref": "master",
        "created_at": "Tuesday May 05, 2015 at 14:56 GMT",
        "updated_at": "Tuesday May 05, 2015 at 14:58 GMT",
        "closed_at": "Tuesday May 05, 2015 at 14:58 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1940,
        "state": "closed",
        "title": "Add testutils to all tests",
        "body": "Add the test_utils to all tests, currently they are only used by fops\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2015 at 04:53 GMT",
        "updated_at": "Friday May 08, 2015 at 07:09 GMT",
        "closed_at": "Friday May 08, 2015 at 07:09 GMT",
        "merged_at": "Friday May 08, 2015 at 07:09 GMT"
    },
    {
        "key": null,
        "number": 1939,
        "state": "closed",
        "title": "Testutils on all tests",
        "body": "Add the test_utils to all tests, currently they are only used by fops\n",
        "base_ref": "master",
        "created_at": "Tuesday May 05, 2015 at 04:52 GMT",
        "updated_at": "Tuesday May 05, 2015 at 04:52 GMT",
        "closed_at": "Tuesday May 05, 2015 at 04:52 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1938,
        "state": "closed",
        "title": "Testutils on all tests",
        "body": "Add the test_utils to all tests, currently they are only used by fops\n",
        "base_ref": "master",
        "created_at": "Tuesday May 05, 2015 at 04:52 GMT",
        "updated_at": "Tuesday May 05, 2015 at 04:52 GMT",
        "closed_at": "Tuesday May 05, 2015 at 04:52 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1937,
        "state": "closed",
        "title": "Disallow the cache_resident flag on LSM trees.",
        "body": "Refs WT-1905\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2015 at 04:46 GMT",
        "updated_at": "Wednesday May 06, 2015 at 10:51 GMT",
        "closed_at": "Wednesday May 06, 2015 at 10:51 GMT",
        "merged_at": "Wednesday May 06, 2015 at 10:51 GMT"
    },
    {
        "key": null,
        "number": 1936,
        "state": "closed",
        "title": "Fix a bug in handle close, where we could fail to clear WT_DHANDLE_OPEN.",
        "body": "Specifically if closing a checkpoint handle. This manifested by a\nsegfault opening a handle for a merge in LSM.\n\nRefs WT-1915\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2015 at 02:48 GMT",
        "updated_at": "Tuesday May 05, 2015 at 03:37 GMT",
        "closed_at": "Tuesday May 05, 2015 at 03:37 GMT",
        "merged_at": "Tuesday May 05, 2015 at 03:37 GMT"
    },
    {
        "key": null,
        "number": 1935,
        "state": "closed",
        "title": "Fix some issues with cache leaf size accounting for statistics.",
        "body": "More issues remain.\n\nRefs WT-1885\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2015 at 01:52 GMT",
        "updated_at": "Thursday May 07, 2015 at 03:42 GMT",
        "closed_at": "Thursday May 07, 2015 at 03:42 GMT",
        "merged_at": "Thursday May 07, 2015 at 03:42 GMT"
    },
    {
        "key": "in-",
        "number": 1934,
        "state": "closed",
        "title": "Fix the logic around in-memory splits",
        "body": "If we're trying one, don't allow any other kind of eviction.\n\nrefs WT-1916, WT-1917\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 05, 2015 at 01:15 GMT",
        "updated_at": "Tuesday May 05, 2015 at 03:38 GMT",
        "closed_at": "Tuesday May 05, 2015 at 03:38 GMT",
        "merged_at": "Tuesday May 05, 2015 at 03:38 GMT"
    },
    {
        "key": null,
        "number": 1933,
        "state": "closed",
        "title": "Fix for covert tests",
        "body": "Failed CID 1296558\n",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2015 at 06:05 GMT",
        "updated_at": "Monday May 04, 2015 at 07:39 GMT",
        "closed_at": "Monday May 04, 2015 at 07:39 GMT",
        "merged_at": "Monday May 04, 2015 at 07:39 GMT"
    },
    {
        "key": null,
        "number": 1932,
        "state": "closed",
        "title": "If we get part way through a btree open then fail, make sure the checkpoint is unloaded",
        "body": "Hopefully this will fix a hard-to-reproduce leak found recently by valgrind.\n\nrefs WT-1598\n",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2015 at 05:25 GMT",
        "updated_at": "Monday May 04, 2015 at 07:37 GMT",
        "closed_at": "Monday May 04, 2015 at 07:36 GMT",
        "merged_at": "Monday May 04, 2015 at 07:36 GMT"
    },
    {
        "key": "ng-",
        "number": 1931,
        "state": "closed",
        "title": "Avoid obsolete update checks during long-running transactions",
        "body": "There can potentially be long chains of updates that cannot be freed: there is no point repeatedly scanning them.\n\nrefs WT-1913\n",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2015 at 03:40 GMT",
        "updated_at": "Monday May 04, 2015 at 04:03 GMT",
        "closed_at": "Monday May 04, 2015 at 04:03 GMT",
        "merged_at": "Monday May 04, 2015 at 04:03 GMT"
    },
    {
        "key": null,
        "number": 1930,
        "state": "closed",
        "title": "Testutils memory leak fix",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2015 at 02:25 GMT",
        "updated_at": "Monday May 04, 2015 at 04:06 GMT",
        "closed_at": "Monday May 04, 2015 at 04:06 GMT",
        "merged_at": "Monday May 04, 2015 at 04:06 GMT"
    },
    {
        "key": null,
        "number": 1929,
        "state": "closed",
        "title": "Update wtperf.",
        "body": "Add support for creating an index on the main table.\nAdd support for different distributions via pareto random numbers.\n",
        "base_ref": "develop",
        "created_at": "Monday May 04, 2015 at 02:19 GMT",
        "updated_at": "Monday May 04, 2015 at 06:49 GMT",
        "closed_at": "Monday May 04, 2015 at 05:12 GMT",
        "merged_at": "Monday May 04, 2015 at 05:12 GMT"
    },
    {
        "key": null,
        "number": 1928,
        "state": "closed",
        "title": "LZ4 raw compression",
        "body": "Reference WT-1773.\n",
        "base_ref": "develop",
        "created_at": "Sunday May 03, 2015 at 16:28 GMT",
        "updated_at": "Monday May 11, 2015 at 23:56 GMT",
        "closed_at": "Monday May 11, 2015 at 23:56 GMT",
        "merged_at": "Monday May 11, 2015 at 23:56 GMT"
    },
    {
        "key": null,
        "number": 1927,
        "state": "closed",
        "title": "Manpage improvements",
        "body": "This removes a doubling of the word \"Version\" in the \"wiredtiger\" and \"wt\" manpages, and makes the section headers for the \"wt\" manpage more normal. I wanted to do the same for the wiredtiger manpage, but it'd be more disruptive to the structure of the docs they're generated from (so it remains a very weird looking manpage). Other options:\n1) Remove the wiredtiger.3 manpage\n2) Replace it with a pointer to generated docs in another format\n3) Generate both manpages a more traditional way - I'm willing to do the work on this\n",
        "base_ref": "develop",
        "created_at": "Saturday May 02, 2015 at 22:26 GMT",
        "updated_at": "Sunday May 03, 2015 at 23:21 GMT",
        "closed_at": "Sunday May 03, 2015 at 23:21 GMT",
        "merged_at": "Sunday May 03, 2015 at 23:21 GMT"
    },
    {
        "key": null,
        "number": 1926,
        "state": "closed",
        "title": "Use a prime number as the hash table size",
        "body": "Reference WT-1914.\n",
        "base_ref": "develop",
        "created_at": "Friday May 01, 2015 at 14:42 GMT",
        "updated_at": "Monday May 04, 2015 at 00:57 GMT",
        "closed_at": "Monday May 04, 2015 at 00:57 GMT",
        "merged_at": "Monday May 04, 2015 at 00:57 GMT"
    },
    {
        "key": null,
        "number": 1925,
        "state": "closed",
        "title": "Handle open locking review",
        "body": "@michaelcahill, this is my review from #1923.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 30, 2015 at 14:34 GMT",
        "updated_at": "Thursday Apr 30, 2015 at 23:07 GMT",
        "closed_at": "Thursday Apr 30, 2015 at 23:07 GMT",
        "merged_at": "Thursday Apr 30, 2015 at 23:07 GMT"
    },
    {
        "key": null,
        "number": 1924,
        "state": "closed",
        "title": "Move eviction outside transactions.",
        "body": "refs WT-1912\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 30, 2015 at 02:02 GMT",
        "updated_at": "Friday May 01, 2015 at 01:13 GMT",
        "closed_at": "Friday May 01, 2015 at 01:12 GMT",
        "merged_at": "Friday May 01, 2015 at 01:12 GMT"
    },
    {
        "key": null,
        "number": 1923,
        "state": "closed",
        "title": "Simplify handle locking",
        "body": "This is a step in the direction of removing the schema and table locks.  It eliminates a lot of locking code that has traditionally been difficult to modify.\n\nrefs WT-1598\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 28, 2015 at 06:15 GMT",
        "updated_at": "Thursday Apr 30, 2015 at 14:27 GMT",
        "closed_at": "Thursday Apr 30, 2015 at 14:27 GMT",
        "merged_at": "Thursday Apr 30, 2015 at 14:27 GMT"
    },
    {
        "key": null,
        "number": 1922,
        "state": "closed",
        "title": "The checkpoint ID is volatile, cache it so we don't keep reading it.",
        "body": "@michaelcahill, this instruction is about 5% of the in-memory wtperf run-time.\n\nI'm guessing this change might not be safe, so I put it on a separate branch to make it easy to discard.\n",
        "base_ref": "txn-refresh",
        "created_at": "Monday Apr 27, 2015 at 16:25 GMT",
        "updated_at": "Friday May 01, 2015 at 01:12 GMT",
        "closed_at": "Friday May 01, 2015 at 01:12 GMT",
        "merged_at": "Friday May 01, 2015 at 01:12 GMT"
    },
    {
        "key": null,
        "number": 1921,
        "state": "closed",
        "title": "Txn refresh",
        "body": "@michaelcahill, some minor improvements for your review.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 27, 2015 at 16:03 GMT",
        "updated_at": "Tuesday May 05, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 05, 2015 at 01:39 GMT",
        "merged_at": "Tuesday May 05, 2015 at 01:39 GMT"
    },
    {
        "key": null,
        "number": 1920,
        "state": "closed",
        "title": "Allow dead handles to be closed even if open handle count doesn't",
        "body": "exceed the minimum configured number.\n\nTidy some comments/naming/control flow in the sweep server at the\nsame time.\n",
        "base_ref": "tree-discard-background",
        "created_at": "Monday Apr 27, 2015 at 03:08 GMT",
        "updated_at": "Monday Apr 27, 2015 at 03:20 GMT",
        "closed_at": "Monday Apr 27, 2015 at 03:20 GMT",
        "merged_at": "Monday Apr 27, 2015 at 03:20 GMT"
    },
    {
        "key": null,
        "number": 1919,
        "state": "closed",
        "title": "Don't wait for a handle lock while holding the schema lock.",
        "body": "This change for __wt_session_get_btree mirrors a similar change made to\n__conn_dhandle_open_lock recently.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 27, 2015 at 01:02 GMT",
        "updated_at": "Monday Apr 27, 2015 at 02:10 GMT",
        "closed_at": "Monday Apr 27, 2015 at 02:10 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1918,
        "state": "closed",
        "title": "Fix a typo, add what will be a description section for pydoc",
        "body": "Starting to make \"pydoc wiredtiger\" give better results.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 26, 2015 at 03:09 GMT",
        "updated_at": "Monday Apr 27, 2015 at 03:23 GMT",
        "closed_at": "Monday Apr 27, 2015 at 03:23 GMT",
        "merged_at": "Monday Apr 27, 2015 at 03:23 GMT"
    },
    {
        "key": null,
        "number": 1917,
        "state": "closed",
        "title": "Row search simplify",
        "body": "@michaelcahill, I made a change I've been thinking about for awhile, splitting up the object types in the Btree cursor code and removing some of the `btree->type == BTREE_ROW` branches in the code, I thought it might make a difference.\n\nThe following branch gets me about 4% improvement in the row-store cursor lookup path (pixiebob, clang 3.3 with -O3, running a microbenchmark doing 100M WT_CURSOR.set_key and WT_CURSOR.search pairs).\n\nI can't get too excited about 4% -- I think it depends if you think this architecture is at least as clean, understandable and maintainable as the old one? If you like the old structure better, I'm happy to discard the branch, otherwise, I'm happy to take the 4%.\n\nObviously, we could keep going down this path (split up fixed-length vs. variable length column store, for example), this was just an experiment in making row-store searches faster.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 26, 2015 at 00:29 GMT",
        "updated_at": "Monday Aug 17, 2015 at 12:48 GMT",
        "closed_at": "Monday Aug 17, 2015 at 12:48 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1916,
        "state": "closed",
        "title": "Change the sort of the log's slot array from qsort to insertion sort",
        "body": "@sueloverso, if @michaelcahill takes the `sort-snapshot-insertion` branch, here are the changes (entirely untested!) to switch the log slot sort from qsort to insertion sort.\n",
        "base_ref": "sort-snapshot-insertion",
        "created_at": "Saturday Apr 25, 2015 at 14:30 GMT",
        "updated_at": "Monday Apr 27, 2015 at 12:55 GMT",
        "closed_at": "Monday Apr 27, 2015 at 05:23 GMT",
        "merged_at": "Monday Apr 27, 2015 at 05:23 GMT"
    },
    {
        "key": null,
        "number": 1915,
        "state": "closed",
        "title": "TC Malloc for WT",
        "body": "After considerable investigation, the default Windows allocator takes a critical section for allocators >= 16 KB which significantly impacts performance as compared to an alternate malloc implementation. I have added support for TCMalloc because it is what MongoDB vendors. This has shown improvement on several workloads for MongoDB. I did not investigate JEMalloc.\n\nSee  Jira WT-1904, SERVER-18079 for performance investigations.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2015 at 22:30 GMT",
        "updated_at": "Monday Apr 27, 2015 at 14:23 GMT",
        "closed_at": "Saturday Apr 25, 2015 at 13:07 GMT",
        "merged_at": "Saturday Apr 25, 2015 at 13:07 GMT"
    },
    {
        "key": "on-",
        "number": 1914,
        "state": "closed",
        "title": "Add insertion-sort to sort snapshots",
        "body": "@michaelcahill, we're spending cycles calling qsort() on typically small numbers of items, so I inlined the case where we have 2 items (wtperf's common case), and less than 11 items. A good implementation of qsort will simply do an insertion sort on small numbers of items anyway, but that still requires the qsort setup and then repeated calls to the qsort callback function.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 24, 2015 at 16:38 GMT",
        "updated_at": "Monday Apr 27, 2015 at 06:21 GMT",
        "closed_at": "Monday Apr 27, 2015 at 05:23 GMT",
        "merged_at": "Monday Apr 27, 2015 at 05:23 GMT"
    },
    {
        "key": "in-",
        "number": 1913,
        "state": "closed",
        "title": "Inline some page acquire/release tests for in-memory performance.",
        "body": "@michaelcahill, some more performance changes for in-memory objects.\n\nOne thing is I'm not bothering to set page generation values if eviction is (currently) turned off for a file, which worries me. I could turn that back on, even if eviction isn't configured at the moment, if you'd prefer. I looked around, and it didn't seem like the change would be dangerous, but I'm not familiar enough with that code to be confident.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2015 at 17:19 GMT",
        "updated_at": "Monday Apr 27, 2015 at 06:21 GMT",
        "closed_at": "Monday Apr 27, 2015 at 05:22 GMT",
        "merged_at": "Monday Apr 27, 2015 at 05:22 GMT"
    },
    {
        "key": null,
        "number": 1912,
        "state": "closed",
        "title": "Split __wt_txn_begin into two parts",
        "body": "@michaelcahill, would you please review this change?\n\nSome of my zoom profiles show us spending time in `__wt_config_gets_def` when creating auto-commit transactions, and it's pretty easy to avoid.\n\nThere's one subtle change here, I moved the `F_SET(txn, TXN_RUNNING);` code after the handling of `txn->isolation == TXN_ISO_SNAPSHOT`.\n\nIt looked safe and I think it's cleaner, but I wanted to call it out in case there was something I missed (in which case, I think it needs a comment).\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2015 at 15:51 GMT",
        "updated_at": "Friday Apr 24, 2015 at 07:34 GMT",
        "closed_at": "Friday Apr 24, 2015 at 07:34 GMT",
        "merged_at": "Friday Apr 24, 2015 at 07:34 GMT"
    },
    {
        "key": null,
        "number": 1911,
        "state": "closed",
        "title": "Change wiredtiger_config_validate to take a WT_EVENT_HANDLER as an argument",
        "body": "@michaelcahill, here are the changes to add a WT_EVENT_HANDLER to `wiredtiger_config_validate`.\n",
        "base_ref": "validate-configuration-string",
        "created_at": "Thursday Apr 23, 2015 at 12:51 GMT",
        "updated_at": "Friday Apr 24, 2015 at 01:06 GMT",
        "closed_at": "Friday Apr 24, 2015 at 01:06 GMT",
        "merged_at": "Friday Apr 24, 2015 at 01:06 GMT"
    },
    {
        "key": null,
        "number": 1910,
        "state": "closed",
        "title": "inmem_split_during_checkpoint",
        "body": "Relates to SERVER-16902. Under performance review and not ready to be pulled yet.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2015 at 06:01 GMT",
        "updated_at": "Monday May 04, 2015 at 05:31 GMT",
        "closed_at": "Monday May 04, 2015 at 05:31 GMT",
        "merged_at": "Monday May 04, 2015 at 05:31 GMT"
    },
    {
        "key": null,
        "number": 1909,
        "state": "closed",
        "title": "Lsm handle races",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 23, 2015 at 05:48 GMT",
        "updated_at": "Thursday Apr 23, 2015 at 06:34 GMT",
        "closed_at": "Thursday Apr 23, 2015 at 06:34 GMT",
        "merged_at": "Thursday Apr 23, 2015 at 06:34 GMT"
    },
    {
        "key": null,
        "number": 1908,
        "state": "closed",
        "title": "Create test utilities, modify FOPS test and add Windows scons test target",
        "body": "Test utilities are created to separate the directory creation/cleanup utilities.\n\nThese are piloted against the FOPS test\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2015 at 23:31 GMT",
        "updated_at": "Sunday May 03, 2015 at 23:23 GMT",
        "closed_at": "Sunday May 03, 2015 at 23:23 GMT",
        "merged_at": "Sunday May 03, 2015 at 23:23 GMT"
    },
    {
        "key": null,
        "number": 1907,
        "state": "closed",
        "title": "Config simplify",
        "body": "@michaelcahill, this branch discards `__wt_config_concat` in favor of `__wt_config_merge`, and cleans up some code in the load utility.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 22, 2015 at 18:17 GMT",
        "updated_at": "Thursday Apr 23, 2015 at 05:39 GMT",
        "closed_at": "Thursday Apr 23, 2015 at 05:39 GMT",
        "merged_at": "Thursday Apr 23, 2015 at 05:39 GMT"
    },
    {
        "key": null,
        "number": 1906,
        "state": "closed",
        "title": "WiredTiger 2.5.3 release",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday Apr 22, 2015 at 05:01 GMT",
        "updated_at": "Wednesday Apr 22, 2015 at 07:05 GMT",
        "closed_at": "Wednesday Apr 22, 2015 at 07:05 GMT",
        "merged_at": "Wednesday Apr 22, 2015 at 07:05 GMT"
    },
    {
        "key": "WT-2",
        "number": 1905,
        "state": "closed",
        "title": "Cut WiredTiger release WT-2.5.3",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Wednesday Apr 22, 2015 at 03:21 GMT",
        "updated_at": "Wednesday Apr 22, 2015 at 05:01 GMT",
        "closed_at": "Wednesday Apr 22, 2015 at 05:01 GMT",
        "merged_at": null
    },
    {
        "key": "WT-1897",
        "number": 1904,
        "state": "closed",
        "title": "Run recovery earlier. WT-1897",
        "body": "@michaelcahill Please review this change to run recovery earlier in the wiredtiger_open path.  I moved it before the async and sweep threads were started.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2015 at 19:47 GMT",
        "updated_at": "Wednesday Apr 22, 2015 at 04:58 GMT",
        "closed_at": "Wednesday Apr 22, 2015 at 04:58 GMT",
        "merged_at": "Wednesday Apr 22, 2015 at 04:58 GMT"
    },
    {
        "key": null,
        "number": 1903,
        "state": "closed",
        "title": "Validate configuration string naming.",
        "body": "@michaelcahill, here's the naming change you suggested -- it's pretty straight-forward.\n",
        "base_ref": "validate-configuration-string",
        "created_at": "Tuesday Apr 21, 2015 at 12:23 GMT",
        "updated_at": "Wednesday Apr 22, 2015 at 04:57 GMT",
        "closed_at": "Wednesday Apr 22, 2015 at 04:57 GMT",
        "merged_at": "Wednesday Apr 22, 2015 at 04:57 GMT"
    },
    {
        "key": "in-",
        "number": 1902,
        "state": "closed",
        "title": "Revert a change to split large in-memory pages.",
        "body": "Refs WT-1890 WT-1896\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 21, 2015 at 03:17 GMT",
        "updated_at": "Tuesday Apr 21, 2015 at 03:38 GMT",
        "closed_at": "Tuesday Apr 21, 2015 at 03:38 GMT",
        "merged_at": "Tuesday Apr 21, 2015 at 03:38 GMT"
    },
    {
        "key": null,
        "number": 1901,
        "state": "closed",
        "title": "Create a \"clear a single walk\" function.",
        "body": "Reference #1900.\n\n@michaelcahill, @agorrod, can one of you look at this branch?\n\nIf you like it, merge it, otherwise feel free to simply discard it.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2015 at 14:48 GMT",
        "updated_at": "Monday Apr 20, 2015 at 22:51 GMT",
        "closed_at": "Monday Apr 20, 2015 at 22:51 GMT",
        "merged_at": "Monday Apr 20, 2015 at 22:51 GMT"
    },
    {
        "key": null,
        "number": 1900,
        "state": "closed",
        "title": "Shut down the eviction server before closing file handles to avoid a race",
        "body": "refs WT-1893\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 20, 2015 at 03:28 GMT",
        "updated_at": "Monday Apr 20, 2015 at 14:46 GMT",
        "closed_at": "Monday Apr 20, 2015 at 07:05 GMT",
        "merged_at": "Monday Apr 20, 2015 at 07:05 GMT"
    },
    {
        "key": null,
        "number": 1899,
        "state": "closed",
        "title": "wiredtiger_open configuration rework.",
        "body": "`wiredtiger_open` configuration rework, reference 7abf905.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 19, 2015 at 16:20 GMT",
        "updated_at": "Tuesday Apr 21, 2015 at 11:13 GMT",
        "closed_at": "Tuesday Apr 21, 2015 at 11:12 GMT",
        "merged_at": "Tuesday Apr 21, 2015 at 11:12 GMT"
    },
    {
        "key": null,
        "number": 1898,
        "state": "closed",
        "title": "Fixes for decrypting blocks",
        "body": "The errors came to light when running a 'nop' encryptor with a 'nop' compressor.  Test case included.\n",
        "base_ref": "encryption-api",
        "created_at": "Friday Apr 17, 2015 at 20:53 GMT",
        "updated_at": "Monday Apr 20, 2015 at 14:49 GMT",
        "closed_at": "Monday Apr 20, 2015 at 14:48 GMT",
        "merged_at": "Monday Apr 20, 2015 at 14:48 GMT"
    },
    {
        "key": null,
        "number": 1897,
        "state": "closed",
        "title": "Update API documentation to tell explain session usage.",
        "body": "This allows users to account for internal WiredTiger session handle usage. We already allocate additional handles for those we use unconditionally. This allows users to do specific calculations based\non their session_max setting.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 17, 2015 at 04:38 GMT",
        "updated_at": "Friday Apr 17, 2015 at 11:21 GMT",
        "closed_at": "Friday Apr 17, 2015 at 11:21 GMT",
        "merged_at": "Friday Apr 17, 2015 at 11:21 GMT"
    },
    {
        "key": null,
        "number": 1896,
        "state": "closed",
        "title": "Fix LSM search_near landing on a deleted record",
        "body": "If an LSM search-near operation lands on a deleted item, make a copy of the key before stepping to the next record.\n\nrefs WT-1891\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 17, 2015 at 02:30 GMT",
        "updated_at": "Monday Apr 20, 2015 at 12:44 GMT",
        "closed_at": "Friday Apr 17, 2015 at 03:52 GMT",
        "merged_at": "Friday Apr 17, 2015 at 03:52 GMT"
    },
    {
        "key": "ge-",
        "number": 1895,
        "state": "closed",
        "title": "remove page-deleted count check from cursor-leave calls",
        "body": "@michaelcahill, I might be missing something, but is there any reason to check for deleted records found in page scan in the standard cursor-leave functions?\n\nWe have the explicit checks every time a cursor scan reaches the end of a page, so I'm not sure what scenario this would target. FTR, you added both tests (abc6cfb).\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 16, 2015 at 15:15 GMT",
        "updated_at": "Friday Apr 17, 2015 at 00:11 GMT",
        "closed_at": "Friday Apr 17, 2015 at 00:11 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1894,
        "state": "closed",
        "title": "Discard trees from cache in the background",
        "body": "We used to keep handles locked while freeing their pages from cache (either for drops or when sweeping old handles).  If an application thread attempted to open a cursor during one of these operations, it was forced to wait until the discard completed.\n\nWith this change, handles are marked \"dead\", and readers will no longer use them.  The sweep server will later discard dead trees from cache in the background, without holding any locks that application threads should block on.\n\nrefs SERVER-17907, SERVER-18014\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 16, 2015 at 07:38 GMT",
        "updated_at": "Monday Apr 27, 2015 at 07:18 GMT",
        "closed_at": "Monday Apr 27, 2015 at 07:17 GMT",
        "merged_at": "Monday Apr 27, 2015 at 07:17 GMT"
    },
    {
        "key": null,
        "number": 1893,
        "state": "closed",
        "title": "Fix a deadlock in LSM with schema operations.",
        "body": "There is special code in LSM to co-ordinate schema operations on\ntables (drop, rename, etc). The code does a dance dropping and\nacquiring locks, to allow utility operations to drain for the tree\nwhile waiting for it to close.\n\nWe were doing the dance with the schema and dhandle list locks. We\nneeded to include the table lock, or parallel cursor opens could block:\n\nThe cursor open is waiting for the table lock:\n__wt_spin_lock src/include/mutex.i:175\n__schema_add_table src/schema/schema_list.c:26\n__wt_schema_get_table src/schema/schema_list.c:98\n__wt_curtable_open src/third_party/wiredtiger/src/cursor/cur_table.c:875\n__wt_open_cursor src/session/session_api.c:240\n\nThe LSM table drop is waiting for the schema lock:\n__wt_spin_lock src/include/mutex.i:175\n__lsm_tree_close src/lsm/lsm_tree.c:107\n__wt_lsm_tree_drop src/lsm/lsm_tree.c:943\n__wt_schema_drop src/schema/schema_drop.c:174\n__drop_table src/schema/schema_drop.c:124\n__wt_schema_drop src/schema/schema_drop.c:176\n__session_drop src/session/session_api.c:528\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 16, 2015 at 06:25 GMT",
        "updated_at": "Thursday Apr 16, 2015 at 06:51 GMT",
        "closed_at": "Thursday Apr 16, 2015 at 06:51 GMT",
        "merged_at": "Thursday Apr 16, 2015 at 06:51 GMT"
    },
    {
        "key": null,
        "number": 1892,
        "state": "closed",
        "title": "Fix a bug in LSM where updates with overwrite could be skipped.",
        "body": "References JIRA BF-829\n\nThe issue was that we were not looking in all chunks of an LSM\ntree before deciding whether to apply an update (insert or remove).\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 16, 2015 at 04:14 GMT",
        "updated_at": "Friday Apr 17, 2015 at 12:04 GMT",
        "closed_at": "Thursday Apr 16, 2015 at 06:35 GMT",
        "merged_at": "Thursday Apr 16, 2015 at 06:35 GMT"
    },
    {
        "key": "in-",
        "number": 1890,
        "state": "closed",
        "title": "Allow in-memory splits during checkpoints",
        "body": "Working commit for code to split pages in memory during checkpoints. Please don't pull yet.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 15, 2015 at 05:45 GMT",
        "updated_at": "Wednesday Apr 22, 2015 at 01:08 GMT",
        "closed_at": "Monday Apr 20, 2015 at 22:47 GMT",
        "merged_at": "Monday Apr 20, 2015 at 22:47 GMT"
    },
    {
        "key": "ow-",
        "number": 1889,
        "state": "closed",
        "title": "Defend against row-search calls using a returned key",
        "body": "@michaelcahill, here's the fix for #1887.\n\nIt may be worth looking at why LSM is doing this and there may be an improvement to make there: I think this failure only happens if a search is repeated, that is, a search on a key returns an exact match, and the search is repeated without resetting the key (so I think the cursor is guaranteed to end up in the same location).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 14, 2015 at 17:04 GMT",
        "updated_at": "Thursday Apr 16, 2015 at 01:23 GMT",
        "closed_at": "Wednesday Apr 15, 2015 at 23:19 GMT",
        "merged_at": "Wednesday Apr 15, 2015 at 23:19 GMT"
    },
    {
        "key": null,
        "number": 1886,
        "state": "closed",
        "title": "Merge bulk cursor close with regular file cursor close",
        "body": "We were missing a decrement that kept bulk-loaded files pinned.  Found by @agorrod while testing #1878.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 14, 2015 at 06:32 GMT",
        "updated_at": "Thursday Apr 16, 2015 at 01:23 GMT",
        "closed_at": "Tuesday Apr 14, 2015 at 07:08 GMT",
        "merged_at": "Tuesday Apr 14, 2015 at 07:08 GMT"
    },
    {
        "key": null,
        "number": 1883,
        "state": "closed",
        "title": "Change to build format without installing Berkeley DB.",
        "body": "@michaelcahill, I wanted to divorce format from Berkeley DB installations, now that we're running on Windows. I don't think there's anything controversial in here, but a quick skim would be appreciated.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2015 at 19:39 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 00:05 GMT",
        "closed_at": "Monday Apr 13, 2015 at 23:21 GMT",
        "merged_at": "Monday Apr 13, 2015 at 23:21 GMT"
    },
    {
        "key": null,
        "number": 1882,
        "state": "closed",
        "title": "Generated tables for config subcategories are qualified by referencing method name.",
        "body": "Refs #1879.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2015 at 19:10 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 04:40 GMT",
        "closed_at": "Tuesday Apr 14, 2015 at 04:40 GMT",
        "merged_at": "Tuesday Apr 14, 2015 at 04:40 GMT"
    },
    {
        "key": null,
        "number": 1881,
        "state": "closed",
        "title": "Fix a bug in sweep reconfiguration",
        "body": "Reconfiguring sweep and then reconfiguring something else will cause the sweep configuration to fall back to its base values.\n\n@michaelcahill, we have made this mistake before, so I thought I'd re-use `cfg` instead of a local variable. I think that's OK, but can you take a quick look?\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2015 at 17:08 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 04:41 GMT",
        "closed_at": "Tuesday Apr 14, 2015 at 01:17 GMT",
        "merged_at": "Tuesday Apr 14, 2015 at 01:17 GMT"
    },
    {
        "key": null,
        "number": 1880,
        "state": "closed",
        "title": "Revert \"Flush files from the cache before closing as part of sweep.\"",
        "body": "Reverts wiredtiger/wiredtiger#1870\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2015 at 13:52 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 00:05 GMT",
        "closed_at": "Monday Apr 13, 2015 at 13:52 GMT",
        "merged_at": "Monday Apr 13, 2015 at 13:52 GMT"
    },
    {
        "key": null,
        "number": 1878,
        "state": "closed",
        "title": "Add functionality to test/thread to vary the number of operations on different tables, test sweep.",
        "body": "Add functionality to test/thread to vary the number of operations on different tables. Hopefully it'll let us construct workloads where tables are closed by sweep.\n\nRefs #1870\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2015 at 07:48 GMT",
        "updated_at": "Thursday Apr 16, 2015 at 01:24 GMT",
        "closed_at": "Tuesday Apr 14, 2015 at 13:10 GMT",
        "merged_at": "Tuesday Apr 14, 2015 at 13:10 GMT"
    },
    {
        "key": null,
        "number": 1877,
        "state": "closed",
        "title": "Add functionality to drop files at the end of a wtperf run.",
        "body": "Helps figure out how long a drop takes. Refs #1876 \n",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2015 at 05:49 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 04:42 GMT",
        "closed_at": "Monday Apr 13, 2015 at 06:54 GMT",
        "merged_at": "Monday Apr 13, 2015 at 06:54 GMT"
    },
    {
        "key": null,
        "number": 1875,
        "state": "closed",
        "title": "Allow forced eviction of pages already queued for eviction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Apr 13, 2015 at 03:00 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 04:41 GMT",
        "closed_at": "Tuesday Apr 14, 2015 at 04:41 GMT",
        "merged_at": "Tuesday Apr 14, 2015 at 04:41 GMT"
    },
    {
        "key": null,
        "number": 1874,
        "state": "closed",
        "title": "Disable fallocate on Windows",
        "body": " Since SetEndofFile does not ignore truncation requests like POSIX fallocate, after discussions with @keithbostic, we decided it was best to disable fallocate on Windows.\n\nWith #1873, and the change, I was able to get ~700 successful runs of test/format.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 12, 2015 at 23:24 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 00:05 GMT",
        "closed_at": "Monday Apr 13, 2015 at 19:12 GMT",
        "merged_at": "Monday Apr 13, 2015 at 19:12 GMT"
    },
    {
        "key": null,
        "number": 1873,
        "state": "closed",
        "title": "Ftruncate fixes",
        "body": "Two fixes when using ftruncate as the file-extension call:\n- The ftruncate call can't set WT_FH.size, otherwise we'll skip those blocks when allocating blocks from the file,\n- The file size has to be read inside of the lock being used to avoid races with writers.\n\nReference #1871.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 12, 2015 at 16:49 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 00:05 GMT",
        "closed_at": "Monday Apr 13, 2015 at 19:11 GMT",
        "merged_at": "Monday Apr 13, 2015 at 19:11 GMT"
    },
    {
        "key": null,
        "number": 1870,
        "state": "closed",
        "title": "Flush files from the cache before closing as part of sweep.",
        "body": "Only lightly tested.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 12, 2015 at 12:28 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 11:09 GMT",
        "closed_at": "Monday Apr 13, 2015 at 00:30 GMT",
        "merged_at": "Monday Apr 13, 2015 at 00:30 GMT"
    },
    {
        "key": null,
        "number": 1868,
        "state": "closed",
        "title": "Remove unnecessary error labels",
        "body": "@sueloverso, would you please do the review?\n\nThanks!\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2015 at 15:56 GMT",
        "updated_at": "Monday Apr 13, 2015 at 12:55 GMT",
        "closed_at": "Friday Apr 10, 2015 at 00:52 GMT",
        "merged_at": "Friday Apr 10, 2015 at 00:52 GMT"
    },
    {
        "key": null,
        "number": 1867,
        "state": "closed",
        "title": "fallocate should ignore requests to truncate the file",
        "body": "The Windows fallocate call will now ignore requests to truncate the file by checking if the new requested size is less than the current size of the file.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2015 at 15:41 GMT",
        "updated_at": "Monday Apr 13, 2015 at 02:33 GMT",
        "closed_at": "Friday Apr 10, 2015 at 14:42 GMT",
        "merged_at": "Friday Apr 10, 2015 at 14:42 GMT"
    },
    {
        "key": null,
        "number": 1864,
        "state": "closed",
        "title": "Add a table_count_idle option to wtperf.",
        "body": "The option causes wtperf to create table_count_idle tables before\npopulate, and to open/close a cursor on each of those tables at\nthe start of the workload phase.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 09, 2015 at 03:27 GMT",
        "updated_at": "Monday Apr 13, 2015 at 02:33 GMT",
        "closed_at": "Friday Apr 10, 2015 at 03:47 GMT",
        "merged_at": "Friday Apr 10, 2015 at 03:47 GMT"
    },
    {
        "key": null,
        "number": 1863,
        "state": "closed",
        "title": "Fix places where we were using the wrong link for traversing hash buckets.",
        "body": "@sueloverso, would you please do the review?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2015 at 18:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 08, 2015 at 19:33 GMT",
        "merged_at": "Wednesday Apr 08, 2015 at 19:33 GMT"
    },
    {
        "key": null,
        "number": 1862,
        "state": "closed",
        "title": "Enable test/fops for Windows, and add to CI",
        "body": "Added Windows shim for gettimeofday\n\nfops is added to CI system. Also, used cheaper test machines.\n\nBTW, on Windows, setvbuf does not accept 0 as a valid value.\n\n(New pull request because I forgot to run s_all on this branch, and force pushing the previous PR closed it.)\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2015 at 18:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 08, 2015 at 20:37 GMT",
        "merged_at": "Wednesday Apr 08, 2015 at 20:37 GMT"
    },
    {
        "key": null,
        "number": 1861,
        "state": "closed",
        "title": "KNF for Windows files",
        "body": "Now style.py checks the Windows files also.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2015 at 18:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 08, 2015 at 20:04 GMT",
        "merged_at": "Wednesday Apr 08, 2015 at 20:04 GMT"
    },
    {
        "key": null,
        "number": 1860,
        "state": "closed",
        "title": "test/format for Windows",
        "body": "- Fixed an issue where fallocate was setting fh->size (incorrectly copied from ftruncate implementation)\n- Send delete and copy output to :nul (aka /dev/null)\n- Skip BDB verification for now\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2015 at 18:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 08, 2015 at 19:52 GMT",
        "merged_at": "Wednesday Apr 08, 2015 at 19:52 GMT"
    },
    {
        "key": null,
        "number": 1859,
        "state": "closed",
        "title": "Enable test/fops for Windows, and add to CI",
        "body": "- Added Windows shim for gettimeofday\n\nfops is added to CI system. Also, used cheaper test machines.\n\nBTW, on Windows, setvbuf does not accept 0 as a valid value.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2015 at 18:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 08, 2015 at 18:23 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1858,
        "state": "closed",
        "title": "Sweep file handle minimum",
        "body": "@agorrod, here are the changes for #1856, that issue can be closed with the merge of this branch.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2015 at 12:12 GMT",
        "updated_at": "Friday Apr 10, 2015 at 11:33 GMT",
        "closed_at": "Friday Apr 10, 2015 at 00:57 GMT",
        "merged_at": "Friday Apr 10, 2015 at 00:57 GMT"
    },
    {
        "key": null,
        "number": 1855,
        "state": "closed",
        "title": "Initial commit for ex_stat.py",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 08, 2015 at 02:58 GMT",
        "updated_at": "Wednesday Apr 15, 2015 at 16:47 GMT",
        "closed_at": "Wednesday Apr 15, 2015 at 16:47 GMT",
        "merged_at": "Wednesday Apr 15, 2015 at 16:47 GMT"
    },
    {
        "key": null,
        "number": 1853,
        "state": "closed",
        "title": "Reconciliation can access free'd memory.",
        "body": "@agorrod, would you please do the review?\n#1852 can be closed when this one is merged.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 07, 2015 at 15:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 08, 2015 at 00:54 GMT",
        "merged_at": "Wednesday Apr 08, 2015 at 00:54 GMT"
    },
    {
        "key": "ch-",
        "number": 1849,
        "state": "closed",
        "title": "WT_CURSOR::search/search-near, near current position.",
        "body": "WT_CURSOR::search/search-near should check the current (pinned) page before restarting the search from the top of the tree.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 05, 2015 at 12:40 GMT",
        "updated_at": "Tuesday Apr 14, 2015 at 05:20 GMT",
        "closed_at": "Tuesday Apr 14, 2015 at 05:20 GMT",
        "merged_at": "Tuesday Apr 14, 2015 at 05:20 GMT"
    },
    {
        "key": null,
        "number": 1848,
        "state": "closed",
        "title": "Build indexes for the base configuration strings.",
        "body": "@michaelcahill, here's another branch that's been hanging around in my tree for awhile, cleaned up for your consideration.\n\nIn summary, I'm building an array of offsets into the static configuration arrays so that `__wt_config_get` can do a binary search instead of a linear walk.\n\nThis change is pretty ugly in one specific way: I'm prepending a magic key/value pair at the front of every base configuration string, but I couldn't think of anything better.\n\nIMNSHO, it would be great if the default configuration strings were an array of strings, one per configuration key, so a binary search would fall out of the design the same way it does for the API check function.\n\nI took a run at doing that: I created a WT_CFG structure to pass around instead of `const char *cfg[]`: \n\n```\nstruct __wt_cfg {\n    WT_CONFIG_ENTRY *base;      /* Base configuration */\n    const char *cfg[];          /* Other configuration */\n};\n```\n\nThat works well and I think it would be great if we'd done that from the start, but what scared me about that change was the sheer scope. We have `const char **cfg` wired into everything, everywhere, and lots of code just <b>knows</b> that cfg[0] is the base, cfg[1] is the application-specified config string, and so on and so forth. While I like that change, it'd take us a month to clean up.\n\nThe bad news is that as far as I can tell, linear searches of the configuration strings cost us somewhere between 10-15% <b>when it costs us anything at all</b>. This branch is about 13% faster when opening a statistics cursor, and doesn't gain us much of anything when opening a table cursor because we've reworked the cursor requests in the table open path to call `__wt_config_gets_def`, which gets no gain from this code because it doesn't search the base configuration.\n\n@sueloverso, I remember you had a test where cursor open was expensive. If you still have that around, I'd be interested in knowing about it, I'd like to run it against this branch and see if it makes any difference, maybe I'm missing something, and this branch is more useful than I think.\n\nAnyway, Michael, I'm prepared to discard this branch as not worth the effort, but wanted give you a chance to consider it.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 03, 2015 at 23:03 GMT",
        "updated_at": "Monday Apr 13, 2015 at 11:24 GMT",
        "closed_at": "Monday Apr 13, 2015 at 11:24 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1847,
        "state": "closed",
        "title": "Add shebang, make db dir if does not exist",
        "body": "",
        "base_ref": "master",
        "created_at": "Friday Apr 03, 2015 at 15:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Apr 03, 2015 at 23:08 GMT",
        "merged_at": "Friday Apr 03, 2015 at 23:08 GMT"
    },
    {
        "key": null,
        "number": 1843,
        "state": "closed",
        "title": "Change linear walk of configuration options at API layer to a binary search.",
        "body": "@michaelcahill, this is one of the config branches I had squirreled away -- instead of a linear walk of the API configuration options when we enter a method, a few changes allows us to do a binary search.\n\nPlease don't hesitate to discard this one if you don't think the complexity is worth it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2015 at 21:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 01, 2015 at 22:17 GMT",
        "merged_at": "Wednesday Apr 01, 2015 at 22:17 GMT"
    },
    {
        "key": null,
        "number": 1842,
        "state": "closed",
        "title": "Build fixes",
        "body": "Changes to remove the `pthread_np.h` include file from WiredTiger's build, and use the `x86intrin.h` include file to configure the vectorization instructions.\n\n@sueloverso, would you please confirm this build works on your laptop, and if it does, merge it?\n\n@agorrod, @michaelcahill: I added `pthread_np.h` to the build in commit 562ae1f, to support the use of `pthread_timedjoin_np`, as far as I can tell, we no longer use any pthread_XXX_np functions.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2015 at 20:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 01, 2015 at 20:48 GMT",
        "merged_at": "Wednesday Apr 01, 2015 at 20:48 GMT"
    },
    {
        "key": null,
        "number": 1841,
        "state": "closed",
        "title": "Reset eol if we continue.  Return NOTFOUND if checksum mismatch. #1840",
        "body": "@michaelcahill Please review.  The fix specifically for the test failure is reseting `eol` if we read the next log file.  I also added a fix so that if a checksum doesn't match and we asked specifically for a record we return `WT_NOTFOUND` (the case of a log cursor setting an invalid LSN and calling search()).  I also bumped up the keys in `test_cursor07.py` that showed the problem.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2015 at 19:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Apr 02, 2015 at 06:07 GMT",
        "merged_at": "Thursday Apr 02, 2015 at 06:07 GMT"
    },
    {
        "key": "in-",
        "number": 1839,
        "state": "closed",
        "title": "Add an initial implementation of named, in-memory snapshots",
        "body": "This implementation is mainly intended to flesh out the API.  It won't cope well with very large numbers of active snapshots, ignores some misuses of the interface and doesn't deal at all with the problem of converting snapshots to on-disk checkpoints.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 01, 2015 at 09:28 GMT",
        "updated_at": "Tuesday May 26, 2015 at 06:44 GMT",
        "closed_at": "Friday May 22, 2015 at 07:52 GMT",
        "merged_at": "Friday May 22, 2015 at 07:52 GMT"
    },
    {
        "key": null,
        "number": 1838,
        "state": "closed",
        "title": "Modify log_scan callback args to send in next LSN. #1837",
        "body": "@ddanderson Please review this change for the fix for log cursors and records that are compressed.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 31, 2015 at 21:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 01, 2015 at 17:48 GMT",
        "merged_at": "Wednesday Apr 01, 2015 at 17:48 GMT"
    },
    {
        "key": null,
        "number": 1836,
        "state": "closed",
        "title": "Add a __setitem__ to cursors in the Python API",
        "body": "Remove lots of boilerplate c.set_key ... c.set_value ... c.insert code.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 31, 2015 at 03:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 31, 2015 at 04:12 GMT",
        "merged_at": "Tuesday Mar 31, 2015 at 04:12 GMT"
    },
    {
        "key": null,
        "number": 1835,
        "state": "closed",
        "title": "Add a test case for a new bug in variable length column stores.",
        "body": "Refs #1834\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 31, 2015 at 03:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Mar 31, 2015 at 12:33 GMT",
        "merged_at": "Tuesday Mar 31, 2015 at 12:33 GMT"
    },
    {
        "key": "me-",
        "number": 1833,
        "state": "closed",
        "title": "Column store name-space gap handling.",
        "body": "@agorrod, this change avoids performance problems in column-store WT_CURSOR.next and reconciliation when applications create large gaps in the name-space.\n\nReference #1807.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 27, 2015 at 15:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 31, 2015 at 00:26 GMT",
        "merged_at": "Tuesday Mar 31, 2015 at 00:26 GMT"
    },
    {
        "key": null,
        "number": 1832,
        "state": "closed",
        "title": "Add an assert to the split free method.",
        "body": "It doesn't make sense for us to call split free while blocking it from freeing the memory immediately ourselves.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 27, 2015 at 01:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 27, 2015 at 03:18 GMT",
        "merged_at": "Friday Mar 27, 2015 at 03:18 GMT"
    },
    {
        "key": null,
        "number": 1831,
        "state": "closed",
        "title": "Eviction config cleanup",
        "body": "@michaelcahill, @agorrod -- this branch has the changes for #1686 (move the big eviction configuration knobs into the configuration file as undocumented values), and #1217 (push the existing eviction configuration knobs into the eviction sub configuration group), if you agree with these changes, I believe we can close both of those issues.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2015 at 22:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 27, 2015 at 12:06 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1830,
        "state": "closed",
        "title": "Encryption api",
        "body": "Not ready for merging.  Just creating for convenience for @ddanderson and I.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2015 at 16:56 GMT",
        "updated_at": "Tuesday May 12, 2015 at 05:19 GMT",
        "closed_at": "Tuesday May 12, 2015 at 05:19 GMT",
        "merged_at": "Tuesday May 12, 2015 at 05:19 GMT"
    },
    {
        "key": null,
        "number": 1829,
        "state": "closed",
        "title": "Revert \"Make LZ4 default off in scons builds for now.\"",
        "body": "LZ4 is not on by default in scons. It can only be enabled if a user specifies `--enable-lz4=<path_to_lz4_files>` where path_to_lz4_files contains these files\n\n`<path_to_lz4_files>\\include\\lz4.h`\n`<path_to_lz4_files>\\lib\\lz4.lib`\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2015 at 15:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 15:49 GMT",
        "merged_at": "Thursday Mar 26, 2015 at 15:49 GMT"
    },
    {
        "key": null,
        "number": 1828,
        "state": "closed",
        "title": "Split generation with safe",
        "body": "This branch has a fix for #1799 (8bdb29f) and a fix for a bug (found by inspection), where LSM calls the `__wt_btree_size_overflow` function without setting its split-generation (1b1371c).\n\nThere are also general changes to the macros that look at internal page WT_PAGE_INDEX values: the idea is any code acquiring a WT_PAGE_INDEX reference either uses a macro that makes it clear we believe it's \"safe\", or we assert the split-generation is set.\n\n@agorrod, @michaelcahill, would one of you please review?\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2015 at 15:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 27, 2015 at 00:13 GMT",
        "merged_at": "Friday Mar 27, 2015 at 00:13 GMT"
    },
    {
        "key": null,
        "number": 1827,
        "state": "closed",
        "title": "Use Standard C type uint64_t for zlib",
        "body": "Use the Standard C type uint64_t for zlib_compress.c instead of the posix type u_long.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2015 at 15:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 15:52 GMT",
        "merged_at": "Thursday Mar 26, 2015 at 15:52 GMT"
    },
    {
        "key": null,
        "number": 1826,
        "state": "closed",
        "title": "Add explicit size checks to public pack/unpack code",
        "body": "If all bytes are consumed and the next field is an integral type, we could read beyond the end of the buffer.\n\nrefs #1714\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2015 at 04:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 05:06 GMT",
        "merged_at": "Thursday Mar 26, 2015 at 05:06 GMT"
    },
    {
        "key": null,
        "number": 1824,
        "state": "closed",
        "title": "Fix include file paths in lang/{java,python}",
        "body": "@keithbostic noticed that an internal file that does `#include <3rdparty/...>` causes the python/java builds to fail. This is because the java `Makefile` and python `setup.py`did not have `-Isrc/include` on the build line. This commit this fixes that.\n\nIt probably worked up to now because the SWIG modules use `#include \"src/include/wt_internal.h\"` and the top level directory is on the build line and other include files are found directly on that directory. Blame the complexity of gcc/clang include rules for why including a file in a subdirectory behaves differently.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 26, 2015 at 00:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 01:11 GMT",
        "merged_at": "Thursday Mar 26, 2015 at 01:11 GMT"
    },
    {
        "key": null,
        "number": 1823,
        "state": "closed",
        "title": "Vectorize search",
        "body": "Add support for vector instructions in the Btree key comparison code.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2015 at 22:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Apr 01, 2015 at 11:46 GMT",
        "merged_at": "Wednesday Apr 01, 2015 at 11:46 GMT"
    },
    {
        "key": null,
        "number": 1821,
        "state": "closed",
        "title": "Use beginthreadex, and ensure we use the correct C calling conventions in all callbacks",
        "body": "Fixes #1791\n\nThere are a few changes:\n1. Use beginthreadex to allocate CRT TLS structures at thread creation instead of deferring their allocation. This is also better for Managed C++.\n2. Ensure all APIs use __stdcall and __cdecl as appropriate. By default under x64 MSVC this does not make a difference since __stdcall == __cdecl unlike on x86.\n3. Add a build variant to MCI system that ensures we use the correct calling conventions everywhere by forcing the default calling convention to __vectorcall. This ensures any missing calling convention annotations are build failures.\n\nNote: I cannot compile the tests, and python wrapper with the stronger warnings so I only verify calling convention compatibility against wiredtiger itself.\n\nTests:\nWindows with and without /Gv\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2015 at 18:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 03:54 GMT",
        "merged_at": "Thursday Mar 26, 2015 at 03:54 GMT"
    },
    {
        "key": null,
        "number": 1820,
        "state": "closed",
        "title": "Decrease the number of deflateCopy/deflateEnd calls.",
        "body": "@michaelcahill, saw a way to decrease the number of deflateCopy/deflateEnd calls, figured it might help when you benchmarked this against the other version.\n",
        "base_ref": "zlib-copy-streams",
        "created_at": "Wednesday Mar 25, 2015 at 17:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 25, 2015 at 23:08 GMT",
        "merged_at": "Wednesday Mar 25, 2015 at 23:08 GMT"
    },
    {
        "key": null,
        "number": 1819,
        "state": "closed",
        "title": "Split sweep into two passes",
        "body": "One pass walks the handle list without locking and finds candidate handles to close, and the second pass holding the handle list lock that removes dead handles.\n\nrefs #1814, #1811, #1808\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2015 at 05:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Wednesday Mar 25, 2015 at 13:42 GMT",
        "merged_at": "Wednesday Mar 25, 2015 at 13:42 GMT"
    },
    {
        "key": null,
        "number": 1818,
        "state": "closed",
        "title": "Check that every scenario has a unique name within its test.",
        "body": "refs #1813\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2015 at 03:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 25, 2015 at 03:37 GMT",
        "merged_at": "Wednesday Mar 25, 2015 at 03:37 GMT"
    },
    {
        "key": null,
        "number": 1817,
        "state": "closed",
        "title": "Switch to using \"safe mode\" LZ4 decompression",
        "body": "We rely on it to detect errors, which can make fast mode segfault.\n\nrefs #1800\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2015 at 01:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 25, 2015 at 03:51 GMT",
        "merged_at": "Wednesday Mar 25, 2015 at 03:51 GMT"
    },
    {
        "key": null,
        "number": 1816,
        "state": "closed",
        "title": "Use deflateCopy to copy zlib streams",
        "body": "We need to copy zlib streams for rollback in case the compressed size is too large.  It is not safe to do that by simply making a copy of the structure: use `deflateCopy` instead.\n\nrefs SERVER-17713\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 25, 2015 at 01:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 04:07 GMT",
        "merged_at": "Thursday Mar 26, 2015 at 04:07 GMT"
    },
    {
        "key": null,
        "number": 1815,
        "state": "closed",
        "title": "Zlib replace saved stream with restart",
        "body": "@michaelcahill, to test this, add code to force rollbacks and turn on the debugging code that compares the compressed result against the original source, then test/format will hit it pretty quickly.\n\n```\n--- a/ext/compressors/zlib/zlib_compress.c\n+++ b/ext/compressors/zlib/zlib_compress.c\n@@ -236,7 +236,7 @@ zlib_compress_raw(WT_COMPRESSOR *compressor, WT_SESSION *session,\n        ZLIB_OPAQUE opaque;\n        z_stream zs;\n        uint32_t curr_slot, last_slot;\n-       int ret;\n+       int ret, rbcnt;\n\n        curr_slot = last_slot = 0;\n        (void)split_pct;\n@@ -277,6 +277,7 @@ zlib_compress_raw(WT_COMPRESSOR *compressor, WT_SESSION *session,\n         * page results in forced eviction based on in-memory size, even though\n         * the data fits into a single on-disk block.\n         */\n+       rbcnt = 1;\n        while (zs.avail_out > 0 && zs.total_in <= zs.total_out * 20) {\n                /* Find the slot we will try to compress up to. */\n                if ((curr_slot = zlib_find_slot(\n@@ -290,7 +291,7 @@ zlib_compress_raw(WT_COMPRESSOR *compressor, WT_SESSION *session,\n                                    compressor, session, \"deflate\", ret));\n\n                /* Roll back if the last deflate didn't complete. */\n-               if (zs.avail_in > 0)\n+               if (zs.avail_in > 0 || ++rbcnt > 10)\n                        goto rollback;\n\n                last_slot = curr_slot;\n@@ -341,7 +342,7 @@ rollback:   if ((ret = deflateReset(&zs)) != Z_OK)\n                *result_lenp = 1;\n        }\n\n-#if 0\n+#if 1\n        /* Decompress the result and confirm it matches the original source. */\n        if (last_slot > 0) {\n                void *decomp;\n```\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2015 at 20:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 04:09 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1812,
        "state": "closed",
        "title": "Checkpoint closing files",
        "body": "These are fixes for SERVER-17587.  The basic idea is to rely on meta tracking to take care of flushing the metadata during any operation that needs to close a dirty tree.\n\nNote that this change relies on `__wt_meta_track_off` making the metadata stable.  That function checkpoints the metadata if logging is not enabled.  It is sufficient to fix the included test case, but deserves careful review to determine whether it does enough to make the metadata stable on disk before old checkpoints are freed in general.  (I suspect it doesn't, today, but keep in mind that we're closing a single tree for some exclusive operation such as verify -- there is no concurrent eviction).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2015 at 10:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 26, 2015 at 04:38 GMT",
        "merged_at": "Thursday Mar 26, 2015 at 04:38 GMT"
    },
    {
        "key": null,
        "number": 1811,
        "state": "closed",
        "title": "Change sweep to not wait on the dhandle list lock",
        "body": "There is a bug I can't see and missed in the review.\n\nOriginal comment:\nAvoid a deadlock between the sweep server and a checkpoint.\n\nThe sweep server was holding a handle exclusive and waiting on the handle list lock (in order to remove the handle from the list), a checkpoint was holding the handle list lock waiting for a read lock on the handle.  Found by examining a hang during automated testing.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2015 at 06:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Wednesday Mar 25, 2015 at 05:44 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1810,
        "state": "closed",
        "title": "Add statistics to track internal/overflow/leaf pages in cache.",
        "body": "It is often useful to know if a cache is full of internal pages. I could have added page count tracking, but byte count tracking seems more useful (enough to justify the extra performance overhead).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2015 at 05:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 24, 2015 at 13:23 GMT",
        "merged_at": "Tuesday Mar 24, 2015 at 13:23 GMT"
    },
    {
        "key": null,
        "number": 1809,
        "state": "closed",
        "title": "Revert \"Avoid a deadlock between the sweep server and a checkpoint.\"",
        "body": "Reverts wiredtiger/wiredtiger#1808\n\nThe change looks solid to me, but appears to be causing Jenkins failures. I can't reproduce them locally. Revert for now.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2015 at 05:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 24, 2015 at 05:51 GMT",
        "merged_at": "Tuesday Mar 24, 2015 at 05:51 GMT"
    },
    {
        "key": null,
        "number": 1808,
        "state": "closed",
        "title": "Avoid a deadlock between the sweep server and a checkpoint.",
        "body": "The sweep server was holding a handle exclusive and waiting on the handle list lock (in order to remove the handle from the list), a checkpoint was holding the handle list lock waiting for a read lock on the handle.  Found by examining a hang during automated testing.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2015 at 04:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Mar 24, 2015 at 05:07 GMT",
        "merged_at": "Tuesday Mar 24, 2015 at 05:07 GMT"
    },
    {
        "key": null,
        "number": 1806,
        "state": "closed",
        "title": "Set checkpoint LSN to existing log record. #1700",
        "body": "@michaelcahill Please review. Don't merge, but so we can talk. This changes the checkpoint LSN for #1700 from the next not-yet-allocated record, to the LSN of the last record.  I was mistaken - this change does not fix all the issues in #1183 where we cannot run recovery on an incremental backup and then continue.\n\nIn order to get that working we need to initialize the new `write_start_lsn` to the beginning of the last record in the log.  Currently we do not walk the last file looking for that although it would be more correct.  On initialization I set `write_start_lsn` to the same potential LSN when creating the new log file.  So there is a window where that LSN is pointing to the not-yet-written checkpoint record.\n\nWe could add code to do that walk, since it would only be done once at startup.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 24, 2015 at 00:27 GMT",
        "updated_at": "Wednesday Apr 15, 2015 at 23:47 GMT",
        "closed_at": "Wednesday Apr 15, 2015 at 23:47 GMT",
        "merged_at": "Wednesday Apr 15, 2015 at 23:47 GMT"
    },
    {
        "key": null,
        "number": 1804,
        "state": "closed",
        "title": "Add flags to wt_fopen/fclose. #1785",
        "body": "@keithbostic While the code is correct, I added macros for the `__wt_fopen` and `__wt_fclose` calls to better associate the connection between the fopen mode and the arg to fclose.  I agree that wrapping it in an entire new structure (that is different than the `WT_FH` but would be similar enough to be confusing) is overkill.  I think it is a modest improvement over the raw numbers there.  \n",
        "base_ref": "develop",
        "created_at": "Monday Mar 23, 2015 at 14:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 24, 2015 at 21:42 GMT",
        "merged_at": "Tuesday Mar 24, 2015 at 21:42 GMT"
    },
    {
        "key": null,
        "number": 1803,
        "state": "closed",
        "title": "Cut WiredTiger 2.5.2 release",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Monday Mar 23, 2015 at 05:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 24, 2015 at 02:20 GMT",
        "merged_at": "Tuesday Mar 24, 2015 at 02:20 GMT"
    },
    {
        "key": "nt-",
        "number": 1797,
        "state": "closed",
        "title": "Flush the turtle file to disk even if checkpoint-sync isn't configured",
        "body": "@michaelcahill, I think we want to always flush the turtle file to disk -- if there's a performance question here on the directory sync, we could hold an open handle in the connection for the underlying directory?\n",
        "base_ref": "develop",
        "created_at": "Saturday Mar 21, 2015 at 14:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Saturday Mar 21, 2015 at 20:20 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1796,
        "state": "closed",
        "title": "simplify __wt_close calls",
        "body": "@agorrod, a quick cleanup, would you be kind enough to review?\n\nThanks!\n",
        "base_ref": "develop",
        "created_at": "Saturday Mar 21, 2015 at 14:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 22, 2015 at 23:10 GMT",
        "merged_at": "Sunday Mar 22, 2015 at 23:10 GMT"
    },
    {
        "key": null,
        "number": 1795,
        "state": "closed",
        "title": "Clear \"ret\" in WT_ERR_TEST.",
        "body": "@michaelcahill, I got bitten today because `WT_ERR_TEST` doesn't clear ret (`WT_ERR_BUSY_OK` and `WT_ERR_NOTFOUND_OK` do).\n\nI changed `WT_ERR_TEST` to clear `ret` and then implemented the other functions using it.\n\nI don't feel strongly about this, if you don't like it, I'm good with just throwing it away.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2015 at 22:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 22, 2015 at 23:01 GMT",
        "merged_at": "Sunday Mar 22, 2015 at 23:01 GMT"
    },
    {
        "key": null,
        "number": 1794,
        "state": "closed",
        "title": "Switch uses of wiredtiger_strerror() for WT_SESSION.strerror().",
        "body": "@michaelcahill, this set of changes replaces WiredTiger calls to `wiredtiger_strerror` with calls to `WT_SESSION.strerror`.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2015 at 21:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 22, 2015 at 23:50 GMT",
        "merged_at": "Sunday Mar 22, 2015 at 23:50 GMT"
    },
    {
        "key": null,
        "number": 1793,
        "state": "closed",
        "title": "Additional config checks",
        "body": "@michaelcahill, this is a pass through the list of configuration options, doing additional configuration checks.\n\nAlong the way I merged the btree and log compressor lookup code and added checks for empty or \"none\" collator, compressor and extractor values to the underlying functions to guarantee it gets done.\n\nI would have liked to have created an underlying collator function that handles the collator's associated `metadata` lookup, but the 5 or so places we do that work are subtly different.\n\nI skipped the columns, source, type, colgroups and extensions configuration strings, I didn't see any obvious way to validate them -- if you can think of something useful we can do there, let me know.\n\nReference  #1755.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2015 at 17:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 22, 2015 at 22:43 GMT",
        "merged_at": "Sunday Mar 22, 2015 at 22:43 GMT"
    },
    {
        "key": null,
        "number": 1792,
        "state": "closed",
        "title": "Fix a race closing eviction helper threads",
        "body": "Close the main eviction thread first, so the number of helper threads can be read safely.\n\nPartial fix for #1698\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2015 at 11:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 22, 2015 at 23:02 GMT",
        "merged_at": "Sunday Mar 22, 2015 at 23:02 GMT"
    },
    {
        "key": null,
        "number": 1790,
        "state": "closed",
        "title": "Add LZ4 support to SCons",
        "body": "Adds LZ4 support to SCons. Verified it compiles and links on with VS 2013.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2015 at 02:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 03:15 GMT",
        "merged_at": "Friday Mar 20, 2015 at 03:15 GMT"
    },
    {
        "key": null,
        "number": 1789,
        "state": "closed",
        "title": "Visual Studio 2015 Preview support",
        "body": "VS 2015 defines timespec, but VS 2013 does not define it.\n\nBy using MSVC_USE_SCRIPT, you can choose which MSVC compiler to target.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2015 at 02:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 03:14 GMT",
        "merged_at": "Friday Mar 20, 2015 at 03:14 GMT"
    },
    {
        "key": null,
        "number": 1787,
        "state": "closed",
        "title": "Update the eviction server to not set stuck if it isn't full.",
        "body": "When only looking for pages to force out, the cache isn't really stuck.\nThe trouble is that if we set stuck the eviction server doesn't clear walks\nwhich can lead to it always holding a reference t othe page we (really) want\nto evict.\n\nRefs: #1777\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 20, 2015 at 00:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 00:57 GMT",
        "merged_at": "Friday Mar 20, 2015 at 00:57 GMT"
    },
    {
        "key": null,
        "number": 1786,
        "state": "closed",
        "title": "format dump script cleanup",
        "body": "@michaelcahill, it occurred to me, with the base config file format's dump script no longer needs to configure all of the shared libraries explicitly?\n\nMy shared-library-fu is weak, though, and I'm not sure how format is run everywhere, does this look correct to you?\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2015 at 21:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 04:21 GMT",
        "merged_at": "Friday Mar 20, 2015 at 04:21 GMT"
    },
    {
        "key": "se-",
        "number": 1785,
        "state": "closed",
        "title": "base-configuration fixes",
        "body": "@sueloverso, @michaelcahill:\n\nIf we crash half-way through creating the base-config, we have a partial base-config and we won't fix it up, if we crash after creating the  \"WiredTiger\" file but before writing the base-config, we'll never write the base-config.\n\nThis changes removes the ordering constraint between writing the \"WiredTiger\" file and writing the base configuration file. I think that's safe, but it does concern me. \n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2015 at 17:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Mar 23, 2015 at 04:22 GMT",
        "merged_at": "Monday Mar 23, 2015 at 04:22 GMT"
    },
    {
        "key": null,
        "number": 1783,
        "state": "closed",
        "title": "Use the configured collator when index cursor need to compare keys.",
        "body": "While in the area, add support for WT_CURSOR::compare and WT_CURSOR::equal to index cursors.\n\nrefs #1714\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2015 at 05:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 06:29 GMT",
        "merged_at": "Friday Mar 20, 2015 at 06:29 GMT"
    },
    {
        "key": null,
        "number": 1782,
        "state": "closed",
        "title": "Avoid EBUSY errors from truncate caused by checkpoints.",
        "body": "refs #1643\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2015 at 04:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 22:13 GMT",
        "merged_at": "Thursday Mar 19, 2015 at 22:13 GMT"
    },
    {
        "key": null,
        "number": 1781,
        "state": "closed",
        "title": "Add length checks to the WT_PACK_STREAM API",
        "body": "Lower layers treat size == 0 as unchecked.\n\nrefs #1714\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2015 at 02:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 02:53 GMT",
        "merged_at": "Thursday Mar 19, 2015 at 02:53 GMT"
    },
    {
        "key": null,
        "number": 1780,
        "state": "closed",
        "title": "Update the session get btree busy check:",
        "body": "Only wait for ebusy if requesting exclusive access.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 19, 2015 at 02:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 05:21 GMT",
        "merged_at": "Thursday Mar 19, 2015 at 05:21 GMT"
    },
    {
        "key": null,
        "number": 1776,
        "state": "closed",
        "title": "Fsync after writing WiredTiger file. #1775",
        "body": "@michaelcahill Please review this change for SERVER-17571.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2015 at 16:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 02:41 GMT",
        "merged_at": "Thursday Mar 19, 2015 at 02:41 GMT"
    },
    {
        "key": null,
        "number": 1774,
        "state": "closed",
        "title": "Change log alignment to 32 bytes. #1772",
        "body": "Not yet ready to merge.  But want to test log-related wtperf jobs with this.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2015 at 16:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 19:14 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1771,
        "state": "closed",
        "title": "LZ4 keith",
        "body": "@agorrod, some minor cleanups and I added LZ4 to format runs.\n\nWasn't sure if that was a good idea or not, is there any reason not to add LZ4 to the mix?\n\nAnyway, for your consideration -- if you don't want the test format runs, they're a separate commit so you can easily discard them.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2015 at 15:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 04:19 GMT",
        "merged_at": "Thursday Mar 19, 2015 at 04:19 GMT"
    },
    {
        "key": null,
        "number": 1770,
        "state": "closed",
        "title": "Incomplete change -- don't merge",
        "body": "This PR exists to test a Jenkins change that will reject= branches haven't updated auto-generated files.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2015 at 06:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 02:40 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1769,
        "state": "closed",
        "title": "Fix issues with unknown WT_UNUSED",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2015 at 05:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 18, 2015 at 05:11 GMT",
        "merged_at": "Wednesday Mar 18, 2015 at 05:11 GMT"
    },
    {
        "key": "on-",
        "number": 1767,
        "state": "closed",
        "title": "If the session-level attempt to lock a handle gets EBUSY, fall back to the slow path",
        "body": "The sweep server relies on there being a retry loop if an exclusive operation such as verify conflicts with a sweep.\n\nrefs #1404\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 18, 2015 at 02:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 18, 2015 at 05:56 GMT",
        "merged_at": "Wednesday Mar 18, 2015 at 05:56 GMT"
    },
    {
        "key": null,
        "number": 1765,
        "state": "closed",
        "title": "Fix microsecond to millisecond conversion if small value given. #1764",
        "body": "@markbenvenuto and @keithbostic can you review this change?  Mark, please compile to make sure I didn't mess anything up.  It seems that sleep with a 0 value has special meaning that does not seem to be what we intend with a small timeout value. \nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ms686298%28v=vs.85%29.aspx\n\nOr if I'm off-base we can just toss this branch.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 17, 2015 at 16:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 17, 2015 at 19:22 GMT",
        "merged_at": "Tuesday Mar 17, 2015 at 19:22 GMT"
    },
    {
        "key": null,
        "number": 1763,
        "state": "closed",
        "title": "Update the split deepen sanity check.",
        "body": "Allow a page that it using more than 1/4 of the cache to be split.\n\nRefs #1759\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2015 at 05:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Mar 16, 2015 at 15:51 GMT",
        "merged_at": "Monday Mar 16, 2015 at 15:51 GMT"
    },
    {
        "key": "ad-",
        "number": 1762,
        "state": "closed",
        "title": "Fix read-uncommitted cache checks",
        "body": "Look at whether a transaction ID is pinned, not whether the TXN_SNAPSHOT flag is set.\n\nFound by inspection when debugging a hung test/format config.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2015 at 03:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Mar 16, 2015 at 05:21 GMT",
        "merged_at": "Monday Mar 16, 2015 at 05:21 GMT"
    },
    {
        "key": null,
        "number": 1761,
        "state": "closed",
        "title": "Eviction server running out of hazard references.",
        "body": "So far only a test case - need to code up a fix.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 16, 2015 at 03:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Mar 16, 2015 at 15:11 GMT",
        "merged_at": "Monday Mar 16, 2015 at 15:11 GMT"
    },
    {
        "key": null,
        "number": 1758,
        "state": "closed",
        "title": "Pass a length with the image.",
        "body": "@agorrod, here's what I was suggesting for your consideration, just toss it if you don't like it.\n",
        "base_ref": "page-alloc-accounting",
        "created_at": "Saturday Mar 14, 2015 at 16:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 15, 2015 at 22:45 GMT",
        "merged_at": "Sunday Mar 15, 2015 at 22:45 GMT"
    },
    {
        "key": null,
        "number": 1757,
        "state": "closed",
        "title": "Update memory allocation accounting for new pages and realloc.",
        "body": "They used to not always account for alignment overhead.\n\nThis is a prototype implementation - not yet ready for merging (or verified to fix the underlying issue).\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2015 at 06:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 06:39 GMT",
        "merged_at": "Friday Mar 20, 2015 at 06:39 GMT"
    },
    {
        "key": null,
        "number": 1756,
        "state": "closed",
        "title": "LZ4 external compressor",
        "body": "Not yet ready for merge.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 13, 2015 at 04:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 18, 2015 at 02:59 GMT",
        "merged_at": "Wednesday Mar 18, 2015 at 02:59 GMT"
    },
    {
        "key": null,
        "number": 1755,
        "state": "closed",
        "title": "validating configuration values",
        "body": "@agorrod, @sueloverso @michaelcahill: I was thinking a bit more about #1536 and #1739 today, and thought something like this change might improve things.\n\nIn short, you can specify a function in `dist/api_dist.py` that is subsequently called to validate configuration values. The only values I implemented were `huffman_key` and `huffman_value`, as a proof-of-concept, but it could certainly apply to other configuration values like `block_compressor`, or `collator`.\n\nAs I said, I think this makes things better, but it doesn't solve all of the hard cases. For example, I can't think of any reasonable way to catch:\n\n```\nself.session.create('table:xxx', 'type=lsm,lsm=(bloom_config=(columns=(FOO,BAR)))')\n```\n\nwithout actually creating the underlying files when the LSM tree is created.\n\nIf `session.create` is the real problem here: we could probably figure out a way to execute the full `session.create` path without actually creating the file. It wouldn't be pretty, but as I said, if `session.create` is the real problem, that might be another way to attack it.\n\nIn #1536, agorrod commented:\n\n> Could we consider splitting out configuration validation from the various open methods?\n\nand after poking around this morning, I'm much less optimistic that would be possible -- catching the above error without actually creating the file (or at least, pretending to create the file), seems almost impossible to me.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2015 at 18:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 06:05 GMT",
        "merged_at": "Friday Mar 20, 2015 at 06:05 GMT"
    },
    {
        "key": null,
        "number": 1753,
        "state": "closed",
        "title": "Sweep api config",
        "body": "Not yet ready for merge - needs some test code.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2015 at 05:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 17, 2015 at 15:09 GMT",
        "merged_at": "Tuesday Mar 17, 2015 at 15:09 GMT"
    },
    {
        "key": null,
        "number": 1752,
        "state": "closed",
        "title": "Btree stats now report an accurate count of kv pairs in a btree.",
        "body": "Corrected some counts to take into account deleted entries.\nEntries that appear in internal pages (pointing to leaf pages or other internal pages) are no longer counted.\nAdded and modified tests to test this more rigorously.\nRefs #1733.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 12, 2015 at 02:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 12, 2015 at 18:33 GMT",
        "merged_at": "Thursday Mar 12, 2015 at 18:33 GMT"
    },
    {
        "key": null,
        "number": 1750,
        "state": "closed",
        "title": "Minor cleanups.",
        "body": "Minor cleanups to @michaelcahill's \"no-cache-ikey-before-splitting\" branch, ref #1747.\n",
        "base_ref": "no-cache-ikey-before-splitting",
        "created_at": "Wednesday Mar 11, 2015 at 21:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 11, 2015 at 22:51 GMT",
        "merged_at": "Wednesday Mar 11, 2015 at 22:51 GMT"
    },
    {
        "key": "no-",
        "number": 1749,
        "state": "closed",
        "title": "Support no-logging mode in wt command for debug. #1732",
        "body": "Here's a small change and doc changes (also fixes a typo in current docs which say `-r` and the real arg is `-R`) to turn off logging for debugging purposes.  @michaelcahill Please review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2015 at 15:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 12, 2015 at 00:24 GMT",
        "merged_at": "Thursday Mar 12, 2015 at 00:24 GMT"
    },
    {
        "key": null,
        "number": 1748,
        "state": "closed",
        "title": "Async api",
        "body": "@sueloverso, I've been meaning to futz a little with async operations (I've never written anything that used the API, and I wanted to take it out for a spin). Anyway, I changed test/format to do async operations along with cursor operations, and this branch has a couple of minor changes I made along the way, for your consideration.\n\n@michaelcahill, I don't plan to push the actual changes to format to support asynchronous threads. If you see value in testing asynchronous operations in format, and you want those changes to live on, let me know.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2015 at 13:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 13, 2015 at 12:02 GMT",
        "merged_at": "Friday Mar 13, 2015 at 12:02 GMT"
    },
    {
        "key": null,
        "number": 1747,
        "state": "closed",
        "title": "Don't cache an ikey before winning the race to split into a parent.",
        "body": "refs #1582\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2015 at 09:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 12, 2015 at 00:01 GMT",
        "merged_at": "Thursday Mar 12, 2015 at 00:01 GMT"
    },
    {
        "key": null,
        "number": 1746,
        "state": "closed",
        "title": "Track the checkpoint generation per file",
        "body": "To allow for finer grained visibility checks during checkpoints.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 11, 2015 at 03:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Mar 17, 2015 at 23:57 GMT",
        "merged_at": "Tuesday Mar 17, 2015 at 23:57 GMT"
    },
    {
        "key": null,
        "number": 1741,
        "state": "closed",
        "title": "Fix file sharing error in test_txn10",
        "body": "File locks on Windows are not advisory like they are on Posix so skip the copy of WiredTiger.lock.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2015 at 20:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 10, 2015 at 01:06 GMT",
        "merged_at": "Tuesday Mar 10, 2015 at 01:06 GMT"
    },
    {
        "key": "ER-17471",
        "number": 1740,
        "state": "closed",
        "title": "SERVER-17471: Use uint64_t instead of long since long is compiler specific",
        "body": "Change the usage of long to uint64_t since long is platform specific. Also, fix the __wt_cond_wait code to ensure we handle integer overflow when converting from 64-bit to 32-bit types.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2015 at 20:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Mar 10, 2015 at 01:02 GMT",
        "merged_at": "Tuesday Mar 10, 2015 at 01:02 GMT"
    },
    {
        "key": null,
        "number": 1739,
        "state": "closed",
        "title": "Add an API to validate configuration strings.",
        "body": "@michaelcahill, the MongoDB team asked for a way to validate configuration strings -- here's one approach for your consideration.\n\nI was torn between adding a WT_CONNECTION method, and another global, but eventually decided on the latter.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2015 at 20:38 GMT",
        "updated_at": "Friday Apr 24, 2015 at 07:37 GMT",
        "closed_at": "Friday Apr 24, 2015 at 07:37 GMT",
        "merged_at": "Friday Apr 24, 2015 at 07:37 GMT"
    },
    {
        "key": "se-",
        "number": 1738,
        "state": "closed",
        "title": "Remove pockets of case-sensitivity for configuration strings.",
        "body": "@michaelcahill, we talked about getting case-sensitivity consistency for WiredTiger configuration strings, and you indicated you'd prefer being globally case-sensitive rather than case-insensitive.\n\nHere are the changes to remove the relatively few places where we did case-sensitive comparisons of configuration strings.\n\nObviously, this raises portability questions, but those won't get better if we wait to make this change, and since we just recently modified the Huffman configuration code, it seems like making the change now is the right thing to do.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2015 at 16:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 11, 2015 at 22:52 GMT",
        "merged_at": "Wednesday Mar 11, 2015 at 22:52 GMT"
    },
    {
        "key": null,
        "number": 1737,
        "state": "closed",
        "title": "Move writing into log worker thread.",
        "body": "refs #1683\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 09, 2015 at 01:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 06:39 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1735,
        "state": "closed",
        "title": "When skipping a dirty page during a checkpoint, make sure the tree is marked dirty",
        "body": "refs SUPPORT-1248, SERVER-17506\n",
        "base_ref": "develop",
        "created_at": "Sunday Mar 08, 2015 at 21:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Sunday Mar 08, 2015 at 23:57 GMT",
        "merged_at": "Sunday Mar 08, 2015 at 23:57 GMT"
    },
    {
        "key": null,
        "number": 1734,
        "state": "closed",
        "title": "Statistics cursor reset",
        "body": "@michael, I think this is close to what we need for #1533, two questions:\n1. I couldn't think of any way to avoid copying the incoming configuration strings when the cursor is opened.\n2. I almost made the change to not initialize the cursor when opening it (if we wait until the first operation after cursor-reset to initialize the cursor, might as well wait until the first operation after cursor-open to initialize the cursor), but for some reason, that makes Python sad, I get;\n\n``````\nFile \"/b/bostic/wt.develop/lang/python/wiredtiger/__init__.py\", line 337, in __getitem__\nraise KeyError\nKeyError```\n``````\n",
        "base_ref": "develop",
        "created_at": "Sunday Mar 08, 2015 at 17:07 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 11, 2015 at 23:03 GMT",
        "merged_at": "Wednesday Mar 11, 2015 at 23:03 GMT"
    },
    {
        "key": null,
        "number": 1731,
        "state": "closed",
        "title": "Fix for the walk code",
        "body": "@michaelcahill, fixes for the walk code, reference SERVER-17345.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2015 at 21:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 08, 2015 at 23:15 GMT",
        "merged_at": "Sunday Mar 08, 2015 at 23:15 GMT"
    },
    {
        "key": null,
        "number": 1730,
        "state": "closed",
        "title": "Eviction processing simplification.",
        "body": "@michaelcahill, you wanted me to review empty-page handling in the context of support-1248 branch, and I did that -- I don't see any problems.\n\nWhile I was looking at it, I thought I'd take a run at removing the special processing for `WT_PM_REC_EMPTY` pages in the `WT_SYNC_CLOSE` case. Since that's the last use of parent/child page merging in eviction, a whole bunch of complexity in `evict_file.c` seems like it can go away.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2015 at 12:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 10, 2015 at 01:07 GMT",
        "merged_at": "Tuesday Mar 10, 2015 at 01:07 GMT"
    },
    {
        "key": null,
        "number": 1729,
        "state": "closed",
        "title": "Ignore empty child pages in column stores",
        "body": "When reconciling column store internal pages, deal with the \"ignore\" case.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 06, 2015 at 11:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 06, 2015 at 13:20 GMT",
        "merged_at": "Friday Mar 06, 2015 at 13:20 GMT"
    },
    {
        "key": null,
        "number": 1727,
        "state": "closed",
        "title": "Add a draft of the 2.5.1 release notes.",
        "body": "",
        "base_ref": "mongodb-3.0",
        "created_at": "Friday Mar 06, 2015 at 05:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Mar 09, 2015 at 00:00 GMT",
        "merged_at": "Monday Mar 09, 2015 at 00:00 GMT"
    },
    {
        "key": null,
        "number": 1725,
        "state": "closed",
        "title": "Eviction processing simplification.",
        "body": "@michaelcahill, you wanted me to review empty-page handling in the context of support-1248 branch, and I did that -- I don't see any problems.\n\nWhile I was looking at it, I thought I'd take a run at removing the special processing for `WT_PM_REC_EMPTY` pages in the `WT_SYNC_CLOSE` case. Since that's the last use of parent/child page merging in eviction, a whole bunch of complexity in `evict_file.c` seems like it can go away.\n",
        "base_ref": "support-1248",
        "created_at": "Thursday Mar 05, 2015 at 20:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 06, 2015 at 03:14 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1722,
        "state": "closed",
        "title": "Don't allow LSM bloom create to block waiting for space in the cache.",
        "body": "We are only accessing one page at a time, and allowing the bloom create to block can lead to LSM not making progress.\n\nRefs: #1720\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 05, 2015 at 05:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 05, 2015 at 06:33 GMT",
        "merged_at": "Thursday Mar 05, 2015 at 06:33 GMT"
    },
    {
        "key": null,
        "number": 1721,
        "state": "closed",
        "title": "Fixes for cases where WiredTiger could potentially lose records if a clean page were discarded",
        "body": "SUPPORT-1248\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 05, 2015 at 05:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 06, 2015 at 03:12 GMT",
        "merged_at": "Friday Mar 06, 2015 at 03:12 GMT"
    },
    {
        "key": null,
        "number": 1719,
        "state": "closed",
        "title": "Add fsync before closing log files and after header. #1717",
        "body": "@michaelcahill Please review.  I added fsync calls where we close the logging file handles anytime they may have been written and after writing the header.  For the header, it is important that most log files are pre-allocated so that we're not fsyncing on the mainline path.  But I believe that is not generally a problem.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 04, 2015 at 15:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Mar 05, 2015 at 06:32 GMT",
        "merged_at": "Thursday Mar 05, 2015 at 06:32 GMT"
    },
    {
        "key": null,
        "number": 1718,
        "state": "closed",
        "title": "Format compression config",
        "body": "@agorrod, here's what I was thinking we could do that would use `timer` as the maximum time instead of adding a new `timeout` variable.\n",
        "base_ref": "format-compression-config",
        "created_at": "Wednesday Mar 04, 2015 at 14:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 04, 2015 at 22:12 GMT",
        "merged_at": "Wednesday Mar 04, 2015 at 22:12 GMT"
    },
    {
        "key": null,
        "number": 1716,
        "state": "closed",
        "title": "Stop testing for compression library existance in test/format.",
        "body": "We now support builtin compression libraries, so it's possible to have compression without the separate libraries present.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2015 at 23:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Mar 04, 2015 at 23:23 GMT",
        "merged_at": "Wednesday Mar 04, 2015 at 23:23 GMT"
    },
    {
        "key": "st-",
        "number": 1715,
        "state": "closed",
        "title": "Change checkpoints to do first-fit allocation",
        "body": "@michaelcahilll, for your review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2015 at 21:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 10, 2015 at 01:10 GMT",
        "merged_at": "Tuesday Mar 10, 2015 at 01:10 GMT"
    },
    {
        "key": null,
        "number": 1713,
        "state": "closed",
        "title": "Fix a bug in the reconfigure API related to shared cache quotas.",
        "body": "While fixing the bug simplify the code flow for reconfigure and\ncaches/shared caches.\nrefs #1712\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 03, 2015 at 03:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 03, 2015 at 15:08 GMT",
        "merged_at": "Tuesday Mar 03, 2015 at 15:08 GMT"
    },
    {
        "key": null,
        "number": 1711,
        "state": "closed",
        "title": "Overflow statistics",
        "body": "@agorrod, ready for your review & merge.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 02, 2015 at 20:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 03, 2015 at 04:31 GMT",
        "merged_at": "Tuesday Mar 03, 2015 at 04:31 GMT"
    },
    {
        "key": null,
        "number": 1710,
        "state": "closed",
        "title": "When dumping indices, use raw mode",
        "body": "This fixes `wt dump` when the uri is an index.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 27, 2015 at 20:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 01, 2015 at 23:28 GMT",
        "merged_at": "Sunday Mar 01, 2015 at 23:28 GMT"
    },
    {
        "key": null,
        "number": 1707,
        "state": "closed",
        "title": "Add some paranoia",
        "body": "This is a diagnostic branch: http://build.wiredtiger.com:8080/job/wiredtiger-test-format-stress-sanitizer has been switched over to it to try to catch some hard-to-reproduce bugs.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 26, 2015 at 05:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Mar 03, 2015 at 04:50 GMT",
        "merged_at": "Tuesday Mar 03, 2015 at 04:50 GMT"
    },
    {
        "key": null,
        "number": 1706,
        "state": "closed",
        "title": "Several optimizations to large page eviction:",
        "body": "- Don't update the read generation on page in if it's set to oldest.\n- Clear the walk positions before the eviction server sleeps.\n- If only looking for pages that would block add them all to the queue.\n- If evicting dirty pages use the worker threads, not the server.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 26, 2015 at 04:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Mar 02, 2015 at 03:31 GMT",
        "merged_at": "Monday Mar 02, 2015 at 03:31 GMT"
    },
    {
        "key": null,
        "number": 1705,
        "state": "closed",
        "title": "Fix a bug in checkpoint, where it could get an EBUSY return.",
        "body": "The case that could return EBUSY was when checkpointing with a\nspecific target, while that target was open exclusively or for a bulk\nload.\n\nRefs #1404 #1589\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 26, 2015 at 02:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Feb 26, 2015 at 05:30 GMT",
        "merged_at": "Thursday Feb 26, 2015 at 05:30 GMT"
    },
    {
        "key": null,
        "number": 1704,
        "state": "closed",
        "title": "If the LSN given doesn't exist, don't return an error, but do force recovery",
        "body": "Also, fix recover.sh to grep the CONFIG.  #1700\n\n@michaelcahill Please review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 25, 2015 at 20:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 01, 2015 at 23:30 GMT",
        "merged_at": "Sunday Mar 01, 2015 at 23:30 GMT"
    },
    {
        "key": null,
        "number": 1699,
        "state": "closed",
        "title": "Fix a bug in reconciliation.",
        "body": "In cases where we decide to squeeze one more large entry onto a page,\nwe could have attempted to decrement space available negative.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 24, 2015 at 06:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 25, 2015 at 00:54 GMT",
        "merged_at": "Wednesday Feb 25, 2015 at 00:54 GMT"
    },
    {
        "key": null,
        "number": 1696,
        "state": "closed",
        "title": "Log wrlsn thread",
        "body": "Not yet ready to merge, but for ease of viewing the changes.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 24, 2015 at 02:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Mar 09, 2015 at 01:43 GMT",
        "merged_at": "Monday Mar 09, 2015 at 01:43 GMT"
    },
    {
        "key": null,
        "number": 1695,
        "state": "closed",
        "title": "Statistics sources handle overwrite",
        "body": "@michaelcahill, for your review -- I think the hard question is what code should be responsible for not overwriting and/or restoring the statistics-logging-threads open handle.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 24, 2015 at 00:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 24, 2015 at 04:51 GMT",
        "merged_at": "Tuesday Feb 24, 2015 at 04:51 GMT"
    },
    {
        "key": null,
        "number": 1692,
        "state": "closed",
        "title": "Clean up a couple of hard corners.",
        "body": "@michaelcahill, for your consideration. These aren't bug fixes (well, maybe the compaction change is a bug fix?), but I think they clarify things.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 23, 2015 at 14:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 24, 2015 at 01:45 GMT",
        "merged_at": "Tuesday Feb 24, 2015 at 01:45 GMT"
    },
    {
        "key": "nd-",
        "number": 1691,
        "state": "closed",
        "title": "Avoid eviction pinning the last page of append-only trees",
        "body": "If eviction is walking a file with only one live page (e.g., the last page), be careful to step over it, or eviction's hazard reference can make forced eviction stall.\n\nSERVER-17344\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 23, 2015 at 04:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 24, 2015 at 02:42 GMT",
        "merged_at": "Tuesday Feb 24, 2015 at 02:42 GMT"
    },
    {
        "key": null,
        "number": 1690,
        "state": "closed",
        "title": "Just open a cursor to force forward range truncates: don't dup and reset...",
        "body": "....\n",
        "base_ref": "force-forward-truncation",
        "created_at": "Monday Feb 23, 2015 at 03:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 23, 2015 at 04:25 GMT",
        "merged_at": "Monday Feb 23, 2015 at 04:25 GMT"
    },
    {
        "key": null,
        "number": 1689,
        "state": "closed",
        "title": "Get a local copy of the start/stop cursor keys before calling truncate.",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Sunday Feb 22, 2015 at 20:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 23, 2015 at 03:23 GMT",
        "merged_at": "Monday Feb 23, 2015 at 03:23 GMT"
    },
    {
        "key": "ge-",
        "number": 1688,
        "state": "closed",
        "title": "Changes in page-acquisition handling of forced-eviction",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Saturday Feb 21, 2015 at 17:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 24, 2015 at 03:40 GMT",
        "merged_at": "Tuesday Feb 24, 2015 at 03:40 GMT"
    },
    {
        "key": null,
        "number": 1687,
        "state": "closed",
        "title": "Force forward traversal in WT_SESSION.truncate.",
        "body": "@michaelcahill, here's the change we discussed for your review.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 20, 2015 at 16:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 23, 2015 at 04:26 GMT",
        "merged_at": "Monday Feb 23, 2015 at 04:26 GMT"
    },
    {
        "key": null,
        "number": 1685,
        "state": "closed",
        "title": "Mongo eviction whitespace, minor cleanup.",
        "body": "@michaelcahill, feel free to discard anything you don't like, it's all semantic sugar.\n",
        "base_ref": "mongo-eviction",
        "created_at": "Wednesday Feb 18, 2015 at 19:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Feb 19, 2015 at 00:38 GMT",
        "merged_at": "Thursday Feb 19, 2015 at 00:38 GMT"
    },
    {
        "key": null,
        "number": 1684,
        "state": "closed",
        "title": "Flip cache overhead to apply to the allocated bytes",
        "body": "Flip cache overhead to apply to the allocated bytes rather than the total size.  Include the overhead in stats so that tools (e.g., mongostat) report accurate cache full and dirty percentages.  This also makes eviction triggers and targets meaningful: with the default trigger of 95% and overhead 8%, eviction was previously never triggered until the cache was completely full.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 18, 2015 at 01:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 18, 2015 at 02:43 GMT",
        "merged_at": "Wednesday Feb 18, 2015 at 02:43 GMT"
    },
    {
        "key": null,
        "number": 1682,
        "state": "closed",
        "title": "TXN_API_END_RETRY cleanup.",
        "body": "@michaelcahill, Coverity complains about the `ret == 0` test at the end of the TXN_API_END_RETRY macro in half-a-dozen places in the code.\n\nI'm pretty sure we don't need the `ret == 0`, I think the only path to the loop's test is the `ret = 0; continue` statement above it, but please check me.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 17, 2015 at 16:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 17, 2015 at 23:32 GMT",
        "merged_at": "Tuesday Feb 17, 2015 at 23:32 GMT"
    },
    {
        "key": null,
        "number": 1681,
        "state": "closed",
        "title": "Improvements to eviction for MongoDB workloads",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 17, 2015 at 11:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Thursday Feb 19, 2015 at 05:39 GMT",
        "merged_at": "Thursday Feb 19, 2015 at 05:39 GMT"
    },
    {
        "key": null,
        "number": 1680,
        "state": "closed",
        "title": "Allow the maximum number of eviction threads to be reconfigured",
        "body": "This was previously permitted by the API, but the array of thread contexts was not correctly resized, leading to segfaults.\n\nrefs SERVER-17293\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 17, 2015 at 10:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Thursday Feb 19, 2015 at 01:52 GMT",
        "merged_at": "Thursday Feb 19, 2015 at 01:52 GMT"
    },
    {
        "key": null,
        "number": 1679,
        "state": "closed",
        "title": "Fix wtperf example to reflect incorporation into wtstats.",
        "body": "@keithbostic Please review these changes for wtperf docs.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 16, 2015 at 16:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 16, 2015 at 17:18 GMT",
        "merged_at": "Monday Feb 16, 2015 at 17:18 GMT"
    },
    {
        "key": null,
        "number": 1678,
        "state": "closed",
        "title": "Statistics cursor reset",
        "body": "@michael, I think this is close to what we need for #1533, two questions:\n1. I couldn't think of any way to avoid copying the incoming configuration strings when the cursor is opened.\n2. I almost made the change to not initialize the cursor when opening it (if we wait until the first operation after cursor-reset to initialize the cursor, might as well wait until the first operation after cursor-open to initialize the cursor), but for some reason, that makes Python sad, I get;\n\n``````\nFile \"/b/bostic/wt.develop/lang/python/wiredtiger/__init__.py\", line 337, in __getitem__\nraise KeyError\nKeyError```\n\n``````\n",
        "base_ref": "develop",
        "created_at": "Sunday Feb 15, 2015 at 19:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Mar 08, 2015 at 17:01 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1677,
        "state": "closed",
        "title": "WT_SESSION.truncate error mapping.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Feb 13, 2015 at 17:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 17, 2015 at 23:39 GMT",
        "merged_at": "Tuesday Feb 17, 2015 at 23:39 GMT"
    },
    {
        "key": null,
        "number": 1676,
        "state": "closed",
        "title": "wtstats tool: added support to parse wtperf files",
        "body": "wtperf stats go into a separate \"wtperf\" section in the sidebar.\n\nFiles of either type can be provided at the command line, even mixed in one call. The file type is determined when looking at the first line.\n\nFor example, this is a valid call to wtstats:\n\n```\npython wtstats.py ./WTPERF_RUN/monitor ../test/WiredTigerStat.fixture\n```\n\nAdding the wtperf if conditions all over the code is not very clean, I'd like to build two individual parser classes in the future and clean up that code.\n\nThis change would make the old `wtperf_stats` tool obsolete (entire `tools/wtperf_stats/` folder could be removed incl. nvd3 references). \n",
        "base_ref": "develop",
        "created_at": "Friday Feb 13, 2015 at 06:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Feb 16, 2015 at 15:39 GMT",
        "merged_at": "Monday Feb 16, 2015 at 15:39 GMT"
    },
    {
        "key": null,
        "number": 1675,
        "state": "closed",
        "title": "Remove HAVE_DIAGNOSTIC from the verify code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 12, 2015 at 21:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Feb 13, 2015 at 05:43 GMT",
        "merged_at": "Friday Feb 13, 2015 at 05:43 GMT"
    },
    {
        "key": null,
        "number": 1674,
        "state": "closed",
        "title": "Disable stats aggregation across checkpoints",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Feb 12, 2015 at 02:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Feb 12, 2015 at 03:06 GMT",
        "merged_at": "Thursday Feb 12, 2015 at 03:06 GMT"
    },
    {
        "key": null,
        "number": 1673,
        "state": "closed",
        "title": "Move server thread waits to the beginning of their loops",
        "body": "Check that we're still running before waiting.  This makes more sense to me, but also fixes a problem introduced recently where the checkpoint server could hang on shutdown if the signal from the closing thread got lost.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 12, 2015 at 02:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Feb 12, 2015 at 03:35 GMT",
        "merged_at": "Thursday Feb 12, 2015 at 03:35 GMT"
    },
    {
        "key": null,
        "number": 1671,
        "state": "closed",
        "title": "minor error handling cleanups to __wt_lsm_get_chunk_to_flush",
        "body": "@michaelcahill, for your review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 11, 2015 at 21:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 11, 2015 at 23:11 GMT",
        "merged_at": "Wednesday Feb 11, 2015 at 23:11 GMT"
    },
    {
        "key": null,
        "number": 1669,
        "state": "closed",
        "title": "Add test to detect file ID problems in recovery.  Refs #1622.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 11, 2015 at 15:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 18, 2015 at 21:26 GMT",
        "merged_at": "Wednesday Feb 18, 2015 at 21:26 GMT"
    },
    {
        "key": null,
        "number": 1668,
        "state": "closed",
        "title": "Improve LRU eviction of large pages",
        "body": "Don't give up because a large page has recent updates: push on and try to do eviction and restore updates.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 11, 2015 at 01:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Wednesday Feb 11, 2015 at 07:07 GMT",
        "merged_at": "Wednesday Feb 11, 2015 at 07:07 GMT"
    },
    {
        "key": null,
        "number": 1667,
        "state": "closed",
        "title": "Fix lint in LSM tree.",
        "body": "Into a branch so I can confirm it works before merging.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 10, 2015 at 23:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 10, 2015 at 23:51 GMT",
        "merged_at": "Tuesday Feb 10, 2015 at 23:51 GMT"
    },
    {
        "key": null,
        "number": 1666,
        "state": "closed",
        "title": "Allow 'wt' command to run with or without recovery. #1651",
        "body": "@michaelcahill Please review this diff to add the `-r` option to `wt` to run with or without recovery.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 10, 2015 at 18:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 16, 2015 at 06:16 GMT",
        "merged_at": "Monday Feb 16, 2015 at 06:16 GMT"
    },
    {
        "key": "ow-",
        "number": 1665,
        "state": "closed",
        "title": "Minor restructuring of fields in the WT_PAGE structure to reduce cache misses in the row-store search routine.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 10, 2015 at 17:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Feb 24, 2015 at 21:14 GMT",
        "merged_at": "Tuesday Feb 24, 2015 at 21:14 GMT"
    },
    {
        "key": null,
        "number": 1664,
        "state": "closed",
        "title": "split root pages evenly",
        "body": "@michaelcahill, here's the change we discussed; it seems to do what we expected (the internal page immediately under the root gets split instead of the root), but I don't see a performance improvement or much of any change, really. Thinking about it more, it seems like a defensive change more than anything else.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 10, 2015 at 17:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 18, 2015 at 02:46 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1663,
        "state": "closed",
        "title": "New chunk_count_limit is an integer. #1658 #1652",
        "body": "@agorrod When I looked at the change, it seemed odd that this was documented as a string type rather than an integer.  I explicitly set it to `type=int`.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 10, 2015 at 17:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 10, 2015 at 21:33 GMT",
        "merged_at": "Tuesday Feb 10, 2015 at 21:33 GMT"
    },
    {
        "key": null,
        "number": 1662,
        "state": "closed",
        "title": "Do hard resets in LSM",
        "body": "Not ready for merge: we're trying this to allow oplog cleanup under load.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 10, 2015 at 05:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Mar 20, 2015 at 05:47 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1661,
        "state": "closed",
        "title": "Fix a bug in LSM cursor open.",
        "body": "The bug caused us to re-open more cursors than necessary in open.\n\nRelated to fix: 439a655e\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 10, 2015 at 02:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 10, 2015 at 02:44 GMT",
        "merged_at": "Tuesday Feb 10, 2015 at 02:44 GMT"
    },
    {
        "key": "le-",
        "number": 1660,
        "state": "closed",
        "title": "Switch the block and file-handle from TAILQ structures to SLIST structures",
        "body": "@sueloverso, I'm guessing this is what you were really thinking about in your question about tail inserts -- if so, then I think we agree TAILQs aren't necessary, here's the obvious change for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 09, 2015 at 21:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Feb 10, 2015 at 00:04 GMT",
        "merged_at": "Tuesday Feb 10, 2015 at 00:04 GMT"
    },
    {
        "key": null,
        "number": 1659,
        "state": "closed",
        "title": "Anothing split fixup: don't create a remnant larger than the split size",
        "body": "(allowing room for a header).\n\nrefs #1655, #1656\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 09, 2015 at 06:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Feb 09, 2015 at 20:47 GMT",
        "merged_at": "Monday Feb 09, 2015 at 20:47 GMT"
    },
    {
        "key": null,
        "number": 1658,
        "state": "closed",
        "title": "Add a mode to LSM where we can limit the size of data in the tree.",
        "body": "A feature request to allow for a high insert throughput into a\ntable with a size limitation.\n\nAdds a new configuration option to WT_SESSION::create which is\nlsm=(chunk_count_limit=0), default to 0 which is disabled.\n\nRefs #1652\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 09, 2015 at 06:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Feb 10, 2015 at 05:48 GMT",
        "merged_at": "Tuesday Feb 10, 2015 at 05:48 GMT"
    },
    {
        "key": "le-",
        "number": 1656,
        "state": "closed",
        "title": "Don't double-count the on-disk header size when setting split boundaries",
        "body": "refs #1655\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 09, 2015 at 03:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Feb 09, 2015 at 05:27 GMT",
        "merged_at": "Monday Feb 09, 2015 at 05:27 GMT"
    },
    {
        "key": null,
        "number": 1653,
        "state": "closed",
        "title": "Fix a bug in table create. A crash could cause recovery to break.",
        "body": "Refs SERVER-17204\n\nThe bug is that we weren't doing an fsync of the file after it was\ncreated. Recovery assumes that if there are records for a particular\nfile, then it will exist on disk.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 09, 2015 at 01:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 09, 2015 at 03:55 GMT",
        "merged_at": "Monday Feb 09, 2015 at 03:55 GMT"
    },
    {
        "key": null,
        "number": 1650,
        "state": "closed",
        "title": "Remove obsolete updates every time we add a new update.",
        "body": "We used to only do the check when the cache was full. That\ncould lead to update chains growing immensely long, which is bad.\n\nRefs: #1647\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 09, 2015 at 00:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 09, 2015 at 03:56 GMT",
        "merged_at": "Monday Feb 09, 2015 at 03:56 GMT"
    },
    {
        "key": "st-",
        "number": 1649,
        "state": "closed",
        "title": "Fast-path eviction of dead pages",
        "body": "@michael, this change helps with SERVER-17183.\n",
        "base_ref": "develop",
        "created_at": "Sunday Feb 08, 2015 at 23:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 09, 2015 at 01:09 GMT",
        "merged_at": "Monday Feb 09, 2015 at 01:09 GMT"
    },
    {
        "key": null,
        "number": 1648,
        "state": "closed",
        "title": "shorten pass over deleted items",
        "body": "@agorrod, it occurred to me, we have a count of the deleted items, there's no reason to continue after we've found them all.\n",
        "base_ref": "develop",
        "created_at": "Saturday Feb 07, 2015 at 17:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Feb 08, 2015 at 22:06 GMT",
        "merged_at": "Sunday Feb 08, 2015 at 22:06 GMT"
    },
    {
        "key": "nt-",
        "number": 1645,
        "state": "closed",
        "title": "front-page/perf-tuning cleanup.",
        "body": "@michaelcahill, I thought this change made things a bit more intuitive:\n- I moved the LevelDB API link into the building & installing section on the front-page, and\n- Dropped the performance link from the front page and merge its content into the \"Writing Applications\" page.\n\nIt feels odd to me that performance tuning gets a front-page link, and that it's separate from the \"how to write WT apps\" page.\n\nAnyway, if you like this great, if you don't, discard it without a second thought.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 06, 2015 at 15:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 09, 2015 at 01:12 GMT",
        "merged_at": "Monday Feb 09, 2015 at 01:12 GMT"
    },
    {
        "key": null,
        "number": 1644,
        "state": "closed",
        "title": "Wtstats",
        "body": "Clean up the wtstats documentation and build procedures.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 06, 2015 at 13:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 10, 2015 at 23:21 GMT",
        "merged_at": "Tuesday Feb 10, 2015 at 23:21 GMT"
    },
    {
        "key": null,
        "number": 1642,
        "state": "closed",
        "title": "A slightly different approach to fixing the reconciliation split bug.",
        "body": "@agorrod, here's a slightly different approach, what do you think?\n\n(It's probably simplest to compare it to develop, and not to the rec-split-fix branch.)\n",
        "base_ref": "rec-split-fix",
        "created_at": "Thursday Feb 05, 2015 at 21:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Feb 05, 2015 at 22:52 GMT",
        "merged_at": "Thursday Feb 05, 2015 at 22:52 GMT"
    },
    {
        "key": null,
        "number": 1639,
        "state": "closed",
        "title": "For wt printlog, make operations into a JSON array.",
        "body": "Without that, any tool that parses JSON is almost certain to merge successive values of repeated fields.\nRefs #1438.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 05, 2015 at 18:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 09, 2015 at 01:13 GMT",
        "merged_at": "Monday Feb 09, 2015 at 01:13 GMT"
    },
    {
        "key": null,
        "number": 1637,
        "state": "closed",
        "title": "Add a simple test for log cursors.",
        "body": "Refs #1530\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 05, 2015 at 03:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Thursday Feb 05, 2015 at 18:59 GMT",
        "merged_at": "Thursday Feb 05, 2015 at 18:59 GMT"
    },
    {
        "key": null,
        "number": 1636,
        "state": "closed",
        "title": "added documentation for wtstats UI",
        "body": "some small clarifications and documentation for UI of wtstats tool. \n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 05, 2015 at 03:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Feb 05, 2015 at 16:34 GMT",
        "merged_at": "Thursday Feb 05, 2015 at 16:34 GMT"
    },
    {
        "key": null,
        "number": 1635,
        "state": "closed",
        "title": "Add name_hash and hash bucket queues for fh and block. #1634",
        "body": "Using hash buckets for the file handle and block lists saves us about 1.5-2.0 seconds off the test.  It was about 15.6 seconds and is now 13.6-14.0 seconds.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 04, 2015 at 20:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 09, 2015 at 01:16 GMT",
        "merged_at": "Monday Feb 09, 2015 at 01:16 GMT"
    },
    {
        "key": null,
        "number": 1633,
        "state": "closed",
        "title": "Don't free the disk image twice on error.",
        "body": "@agorrod, I think that if `__wt_delete_page_instantiate` fails in `__wt_cache_read`, we'll free the allocated disk image twice, and no good will come from that. Would you please take a look and see if I've missed anything?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 04, 2015 at 13:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Feb 05, 2015 at 06:08 GMT",
        "merged_at": "Thursday Feb 05, 2015 at 06:08 GMT"
    },
    {
        "key": null,
        "number": 1632,
        "state": "closed",
        "title": "Don't do a pass over the page index looking for deleted entries unless we found some in our initial pass.",
        "body": "@agorrod, would you please check me on this one? It seems to me we can skip a pass over the page index in the common case. Sorry about the re-format, but I had to shuffle things a little to avoid getting really deep clauses.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 04, 2015 at 13:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 04, 2015 at 23:41 GMT",
        "merged_at": "Wednesday Feb 04, 2015 at 23:41 GMT"
    },
    {
        "key": null,
        "number": 1631,
        "state": "closed",
        "title": "Keep filling pages in reconciliation until we hit a boundary.",
        "body": "This reverts some of a change for #1282 (without reverting\nthe functionality in that change, AFAI can tell).\n\nRefs #1630\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 04, 2015 at 06:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Thursday Feb 05, 2015 at 23:41 GMT",
        "merged_at": "Thursday Feb 05, 2015 at 23:41 GMT"
    },
    {
        "key": null,
        "number": 1629,
        "state": "closed",
        "title": "WT_SESSION.strerror",
        "body": "@michaelcahill, I've kind of decided I like this change -- if you still want it, maybe Don could review & fix Java as necessary?\n\nOne important note -- I changed the extension API to match the new WT_SESSION method. I'm not sure that's a good idea or not (regardless, I'm thinking the session API isn't widely enough used that we need to worry about backward compatibility).\n\nReference #1516.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 03, 2015 at 00:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 18, 2015 at 02:48 GMT",
        "merged_at": "Wednesday Feb 18, 2015 at 02:48 GMT"
    },
    {
        "key": null,
        "number": 1628,
        "state": "closed",
        "title": "Wrap calls to functions using pindex with WT_WITH_PAGE_INDEX.",
        "body": "@michaelcahill Using your split-gen branch, I wrapped all the places I saw that were vulnerable with `WT_WITH_PAGE_INDEX`.\n",
        "base_ref": "split-gen",
        "created_at": "Monday Feb 02, 2015 at 18:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Feb 03, 2015 at 03:59 GMT",
        "merged_at": "Tuesday Feb 03, 2015 at 03:59 GMT"
    },
    {
        "key": "ce-",
        "number": 1627,
        "state": "closed",
        "title": "Once we decide to force-evict a page, do it directly",
        "body": "(rather than setting read_gen and hoping page release agrees).\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 02, 2015 at 06:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 03, 2015 at 05:39 GMT",
        "merged_at": "Tuesday Feb 03, 2015 at 05:39 GMT"
    },
    {
        "key": null,
        "number": 1626,
        "state": "closed",
        "title": "split_gen paranoia",
        "body": "Always increment split_gen once per split, use the allocated value to check for existing readers.  Make sure that publishing a split_gen doesn't miss an update.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 02, 2015 at 06:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 04, 2015 at 01:26 GMT",
        "merged_at": "Wednesday Feb 04, 2015 at 01:26 GMT"
    },
    {
        "key": null,
        "number": 1625,
        "state": "closed",
        "title": "Split gen",
        "body": "",
        "base_ref": "master",
        "created_at": "Monday Feb 02, 2015 at 06:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 02, 2015 at 06:15 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1624,
        "state": "closed",
        "title": "If discarding a tree for sweep races with an update, give up the discard gracefully",
        "body": "refs #1618, SERVER-17048\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 02, 2015 at 05:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 04, 2015 at 02:17 GMT",
        "merged_at": "Wednesday Feb 04, 2015 at 02:17 GMT"
    },
    {
        "key": null,
        "number": 1623,
        "state": "closed",
        "title": "In recovery, track the maximum file ID in the metadata",
        "body": "... regardless of whether there are any updates to roll forward.\n\nPreviously, we tracked the largest file ID that was updated in the logs being rolled forward.  It was usually the case that the most recently created file was also the most recently updated, so that calculation usually worked and wasn't detected until the repro in SERVER-17142 that created tables, did a clean shutdown and restart, then created more tables and did a dirty shutdown and restart, which was rolling forward updates into the wrong tables.\n\nrefs SERVER-17142, SERVER-17131(?)\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 02, 2015 at 05:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 02, 2015 at 20:49 GMT",
        "merged_at": "Monday Feb 02, 2015 at 20:49 GMT"
    },
    {
        "key": null,
        "number": 1620,
        "state": "closed",
        "title": "Use reads to measure cache pressure with shared caches",
        "body": "We previously tracked writes, which were skewed by checkpoints.\n\nrefs #1569\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 30, 2015 at 06:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 02, 2015 at 05:52 GMT",
        "merged_at": "Monday Feb 02, 2015 at 05:52 GMT"
    },
    {
        "key": "in-",
        "number": 1619,
        "state": "closed",
        "title": "Use a single in-memory byte value.",
        "body": "Fixes for memory calculations, ref #1605. \n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 29, 2015 at 19:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Feb 03, 2015 at 04:01 GMT",
        "merged_at": "Tuesday Feb 03, 2015 at 04:01 GMT"
    },
    {
        "key": "ec-",
        "number": 1617,
        "state": "closed",
        "title": "rec-track cleanup",
        "body": "@michaelcahill, please skim & merge when things are quiet enough.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 29, 2015 at 14:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Feb 01, 2015 at 22:56 GMT",
        "merged_at": "Sunday Feb 01, 2015 at 22:56 GMT"
    },
    {
        "key": null,
        "number": 1616,
        "state": "closed",
        "title": "Use a copy of the oldest transaction ID when sweeping cached overflow items",
        "body": "Otherwise, we could free structures that are still hooked into the skiplist.\n\nrefs #1615\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 29, 2015 at 03:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Jan 29, 2015 at 14:18 GMT",
        "merged_at": "Thursday Jan 29, 2015 at 14:18 GMT"
    },
    {
        "key": null,
        "number": 1612,
        "state": "closed",
        "title": "Quit using a script to build include/serial.i.",
        "body": "@michaelcahill, there's not much point in the script that builds `serial.i` any more , is there?\n\nIf you agree, here's the branch to remove that script and a cleanup pass over the current `serial.i`.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 28, 2015 at 15:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Jan 28, 2015 at 23:24 GMT",
        "merged_at": "Wednesday Jan 28, 2015 at 23:24 GMT"
    },
    {
        "key": null,
        "number": 1611,
        "state": "closed",
        "title": "Improve cache accounting for updates",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 28, 2015 at 06:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Jan 28, 2015 at 07:00 GMT",
        "merged_at": "Wednesday Jan 28, 2015 at 07:00 GMT"
    },
    {
        "key": null,
        "number": 1610,
        "state": "closed",
        "title": "Avoid yielding in logging: it causes problems with large numbers of threads",
        "body": "refs SERVER-16914\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 28, 2015 at 04:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Wednesday Jan 28, 2015 at 05:11 GMT",
        "merged_at": "Wednesday Jan 28, 2015 at 05:11 GMT"
    },
    {
        "key": "ad-",
        "number": 1608,
        "state": "closed",
        "title": "read-lock spins",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 27, 2015 at 22:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Jan 28, 2015 at 05:11 GMT",
        "merged_at": "Wednesday Jan 28, 2015 at 05:11 GMT"
    },
    {
        "key": null,
        "number": 1607,
        "state": "closed",
        "title": "Windows Install Documentation",
        "body": "Here is some documentation on how to build on Windows that @keithbostic asked for. I added several features to the build PR #1606 in order to bring the Windows build closer to the Posix build.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 27, 2015 at 19:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 02, 2015 at 20:36 GMT",
        "merged_at": "Monday Feb 02, 2015 at 20:36 GMT"
    },
    {
        "key": null,
        "number": 1606,
        "state": "closed",
        "title": "Scons Improvements",
        "body": "This is a set of improvements to the Windows build that @keithbostic asked for\n1. Add various build flags to bring Windows build closer to parity like attach, diagnostic, and verbose.\n2. Renamed --enable-swig to --enable-python and update MCI config.\n3. Add a DLL, and linked some examples against it. @keithbostic Check the list of exported functions to see if they what you want\n4. Ensure python is 64-bit\n5. Add \"_scons check_\" for unit tests, and \"_scons install_\" targets\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 27, 2015 at 19:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 02, 2015 at 20:24 GMT",
        "merged_at": "Monday Feb 02, 2015 at 20:24 GMT"
    },
    {
        "key": null,
        "number": 1603,
        "state": "closed",
        "title": "Change recovery to start from the checkpoint LSN in the metadata",
        "body": "Don't assert that we see a checkpoint complete in the available log: if the application crashes in between syncing the metadata and writing the final checkpoint record, there is no need to roll anything forward but we don't have the final checkpoint.\n\nrefs #1529\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 27, 2015 at 00:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 27, 2015 at 00:36 GMT",
        "merged_at": "Tuesday Jan 27, 2015 at 00:36 GMT"
    },
    {
        "key": null,
        "number": 1602,
        "state": "closed",
        "title": "Restore default transaction_sync values. #1585 #1586",
        "body": "@michaelcahill This restores the old defaults of in-memory buffering instead of write-no-sync.  Please review.  It restores the performance of the `log_append.wtperf` workload also.\n",
        "base_ref": "log-write-os",
        "created_at": "Monday Jan 26, 2015 at 17:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Jan 26, 2015 at 22:49 GMT",
        "merged_at": "Monday Jan 26, 2015 at 22:49 GMT"
    },
    {
        "key": null,
        "number": 1599,
        "state": "closed",
        "title": "Grab the table list lock while building the list of handles to checkpoint",
        "body": "This avoids a potential deadlock during compact operations and/or checkpoints with a target list (and an assertion about lock ordering in diagnostic builds).\n\nNote that nested locking is not ideal: the medium-term fix here is #1598.\n\nrefs #1589\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 26, 2015 at 04:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Jan 26, 2015 at 16:26 GMT",
        "merged_at": "Monday Jan 26, 2015 at 16:26 GMT"
    },
    {
        "key": null,
        "number": 1597,
        "state": "closed",
        "title": "Free WT_REFs deleted by truncate",
        "body": "We were doing this when a page spontaneously became empty, but not if the \"fast truncate\" code kicked in.\n\nrefs SERVER-16921\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 26, 2015 at 04:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 27, 2015 at 00:41 GMT",
        "merged_at": "Tuesday Jan 27, 2015 at 00:41 GMT"
    },
    {
        "key": null,
        "number": 1596,
        "state": "closed",
        "title": "eviction statistics cleanup.",
        "body": "@michaelcahill, @agorrod: This cleans up some stuff in the eviction statistics (SERVER-17020 flagged the problem).\n\nI don't think there's anything that's actually a behavioral problem, so this is just a cleanup to make statistics more usable.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 23, 2015 at 21:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Jan 27, 2015 at 00:47 GMT",
        "merged_at": "Tuesday Jan 27, 2015 at 00:47 GMT"
    },
    {
        "key": null,
        "number": 1595,
        "state": "closed",
        "title": "Close Thread Handle after thread join on Windows",
        "body": "On Windows after a thread exits, there is still one last remaining reference to the thread handle, and a program is required to call CloseHandle to free the last reference otherwise there is handle leak. The last reference allows thread creators to check on the status of thread, etc.\n\nFixes SERVER-17025\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 23, 2015 at 20:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Jan 26, 2015 at 18:55 GMT",
        "merged_at": "Monday Jan 26, 2015 at 18:55 GMT"
    },
    {
        "key": null,
        "number": 1594,
        "state": "closed",
        "title": "Fixes related to indices.",
        "body": "Fix drop index on a newly opened session - #1567.\nFix opening a cursor on a index name that doesn't exist.\nTest cases to trigger these.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 23, 2015 at 14:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 23, 2015 at 19:09 GMT",
        "merged_at": "Friday Jan 23, 2015 at 19:09 GMT"
    },
    {
        "key": null,
        "number": 1593,
        "state": "closed",
        "title": "Don't allow cache tracking to wrap negative.",
        "body": "Involves some complexity due to atomic operations.\n\nReferences #1587 and BF-773\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 23, 2015 at 06:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 23, 2015 at 18:32 GMT",
        "merged_at": "Friday Jan 23, 2015 at 18:32 GMT"
    },
    {
        "key": null,
        "number": 1590,
        "state": "closed",
        "title": "Memory allocation",
        "body": "This is the set of changes to remove the memory allocation adjustment code, replacing it with a new configuration string that adjusts the cache size by a percentage. See #1564.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 22, 2015 at 22:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Jan 27, 2015 at 02:02 GMT",
        "merged_at": "Tuesday Jan 27, 2015 at 02:02 GMT"
    },
    {
        "key": null,
        "number": 1588,
        "state": "closed",
        "title": "Python SWIG renaming to avoid naming conflicts",
        "body": "This change prepends underscores to methods that could have name conflicts with WT internal names.  These methods were exposed for conflict because we created public C names by 'extending' classes in SWIG. SWIG's wrapper naming for such methods apparently follows a different convention than the usual `\"_wrap_<PythonName>_<FunctionName>\"`, and uses `\"<CTypeName>_<FunctionName\"`, e.g. `\"__wt_cursor_equals\"`.\n\nThe fix is patterned after @agorrod's fix, but macro-ized.\n\nAlso includes a dist/s_lang checker to make sure there are no potential conflicts.\n\nReverts @keithbostic's workaround to rename the conflicting name on the C side.\n\nRefs #1574.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 22, 2015 at 17:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Saturday Jan 24, 2015 at 14:33 GMT",
        "merged_at": "Saturday Jan 24, 2015 at 14:33 GMT"
    },
    {
        "key": "te-",
        "number": 1586,
        "state": "closed",
        "title": "Add log code to ensure write-no-sync. #1585",
        "body": "@michaelcahill Here are code changes to ensure that write-no-sync is enforced when the configuration is `log=(enabled),transaction_sync=(enable,method=none)`.  Please review.  Here are some things of note:\n- I changed the default from in-memory buffer to the write-no-sync setting.\n- I fixed the tune-durability documentation to correct the setting for `begin_transaction` as well as fix the discussion about the default.  See if you agree/like the doc wording changes too.\n- If you don't agree with the default setting change, the doc will need rework.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 21, 2015 at 18:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Jan 26, 2015 at 22:53 GMT",
        "merged_at": "Monday Jan 26, 2015 at 22:53 GMT"
    },
    {
        "key": null,
        "number": 1579,
        "state": "closed",
        "title": "Aggressive compaction",
        "body": "@michaelcahill, this change is for your consideration -- basically, I changed compaction in the develop branch to make more passes over the object, as long as it looks like there's work to be done.\n\nThis change tries to compensate by making compaction move more data in each pass if it looks like that might work.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 19, 2015 at 19:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Jan 25, 2015 at 23:32 GMT",
        "merged_at": "Sunday Jan 25, 2015 at 23:32 GMT"
    },
    {
        "key": null,
        "number": 1578,
        "state": "closed",
        "title": "Put the local build directories to the front of the sys path.",
        "body": "Refs #1577.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 18, 2015 at 02:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 20, 2015 at 21:53 GMT",
        "merged_at": "Tuesday Jan 20, 2015 at 21:53 GMT"
    },
    {
        "key": null,
        "number": 1576,
        "state": "closed",
        "title": "Fix a deadlock opening statistics cursors.",
        "body": "Refs #1575 and JIRA SERVER-16738\n",
        "base_ref": "develop",
        "created_at": "Saturday Jan 17, 2015 at 22:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 20, 2015 at 15:45 GMT",
        "merged_at": "Tuesday Jan 20, 2015 at 15:45 GMT"
    },
    {
        "key": null,
        "number": 1572,
        "state": "closed",
        "title": "Avoid Python name clash with cursor equals.",
        "body": "@ddanderson Could you review this please? The Python API is failing to build sometimes because of a symbol clash on __wt_cursor_equals.\n\nI could reproduce the build failure on my mac, but I can't run the Python tests there (not sure why), so this is not fully tested.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jan 17, 2015 at 13:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Saturday Jan 17, 2015 at 17:01 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1570,
        "state": "closed",
        "title": "Fix a bug in raw compression, where we were overflowing memory.",
        "body": "We weren't growing the buffer enough when adding new items in.\n\nRefs SERVER-16664\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 16, 2015 at 21:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 16, 2015 at 23:12 GMT",
        "merged_at": "Friday Jan 16, 2015 at 23:12 GMT"
    },
    {
        "key": null,
        "number": 1568,
        "state": "closed",
        "title": "Don't allow \"readonly\" to be reconfigured on cursors.",
        "body": "refs #1467\n",
        "base_ref": "cursor-reconfigure",
        "created_at": "Friday Jan 16, 2015 at 18:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 16, 2015 at 20:13 GMT",
        "merged_at": "Friday Jan 16, 2015 at 20:13 GMT"
    },
    {
        "key": null,
        "number": 1566,
        "state": "closed",
        "title": "Add log thread to fsync and close log files. #1560",
        "body": "@michaelcahill Here are changes for a logging thread to fsync and close files.  However, running the log.wtperf config with stats turned on shows that with this thread we're hitting the case where creating a new log file yields waiting for the previous closed one to begin to get processed and we don't in the current code.  I.e. I'm about 750K yields/sec for the previous log file with this and 0 yields in the develop branch.  Additionally, this branch runs about 33% worse than develop for the log.wtperf workload.\n\nSo this is a start and I think it works correctly, but I don't think we should merge yet.  I think we need to chain the log files to close and try to avoid that yield.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 16, 2015 at 03:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 16, 2015 at 20:20 GMT",
        "merged_at": "Friday Jan 16, 2015 at 20:20 GMT"
    },
    {
        "key": null,
        "number": 1565,
        "state": "closed",
        "title": "When deepening the tree, force the new parent page memory size to 5% of its current value.",
        "body": "When deepening the tree, force the new parent page memory size to 5% of its current value, reference #1564.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 15, 2015 at 23:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Friday Jan 16, 2015 at 15:27 GMT",
        "merged_at": "Friday Jan 16, 2015 at 15:27 GMT"
    },
    {
        "key": null,
        "number": 1563,
        "state": "closed",
        "title": "Don't look at a page after it may be freed during split.",
        "body": "During the process of doing a split we switch the ref to WT_REF_MEM - after which it's no longer safe to refer to the page. Shuffle the code so that we don't.\n\nSERVER-16868\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 15, 2015 at 22:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Thursday Jan 15, 2015 at 22:38 GMT",
        "merged_at": "Thursday Jan 15, 2015 at 22:38 GMT"
    },
    {
        "key": null,
        "number": 1562,
        "state": "closed",
        "title": "Don't look at a page after it may be freed during split.",
        "body": "During the process of doing a split we switch the ref to\nWT_REF_MEM - after which it's no longer safe to refer to the page.\nShuffle the code so that we don't.\nSERVER-16868\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 15, 2015 at 22:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Jan 15, 2015 at 22:28 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1561,
        "state": "closed",
        "title": "Struct alignment and packing for MSVC",
        "body": "@keithbostic Here is the alignment and packing changes. \n\nI also updated the sed scripts. I have one long line as a result but it works. I also wanted to remove WT_GCC_ATTRIBUTE entirely so WT_GCC_FUNC_ATTRIBUTE is now translated into WT_GCC_FUNC_DECL_ATTRIBUTE in exern.h.\n\nTested - Clang 3.5, VS 2013 \n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 15, 2015 at 20:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Feb 02, 2015 at 20:10 GMT",
        "merged_at": "Monday Feb 02, 2015 at 20:10 GMT"
    },
    {
        "key": null,
        "number": 1558,
        "state": "closed",
        "title": "Update the sync_lsn after sync'ing and closing an earlier log file.",
        "body": "Update the sync_lsn after sync'ing and closing an earlier log file and\nmake sure archive doesn't try to remove a file that is still in use.\nRefs #1555 .\n\n@michaelcahill We should talk this over.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 14, 2015 at 16:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Jan 14, 2015 at 20:28 GMT",
        "merged_at": "Wednesday Jan 14, 2015 at 20:28 GMT"
    },
    {
        "key": null,
        "number": 1557,
        "state": "closed",
        "title": "Don't free refs to deleted pages until the new split page has been ...",
        "body": "...switched into place.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 14, 2015 at 15:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Jan 14, 2015 at 15:50 GMT",
        "merged_at": "Wednesday Jan 14, 2015 at 15:50 GMT"
    },
    {
        "key": null,
        "number": 1554,
        "state": "closed",
        "title": "Add a temporary hack to quit splitting a page if we're not making progress.",
        "body": "Add a temporary hack to quit splitting a page if we're not making progress.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 13, 2015 at 21:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 13, 2015 at 22:04 GMT",
        "merged_at": "Tuesday Jan 13, 2015 at 22:04 GMT"
    },
    {
        "key": null,
        "number": 1553,
        "state": "closed",
        "title": "Special case the root when deepening the tree.",
        "body": "Special-case the root; if it's putting cache pressure on the system, split it even if there aren't many entries.\n\nDrop __split_deepen_per_child back to 100, that way if we split, we split big.\n",
        "base_ref": "slow-deepen-split",
        "created_at": "Tuesday Jan 13, 2015 at 17:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 13, 2015 at 17:45 GMT",
        "merged_at": "Tuesday Jan 13, 2015 at 17:45 GMT"
    },
    {
        "key": null,
        "number": 1552,
        "state": "closed",
        "title": "Slow deepen split",
        "body": "@michael, I think this one is ready to merge if you agree with the change.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 13, 2015 at 16:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 13, 2015 at 17:54 GMT",
        "merged_at": "Tuesday Jan 13, 2015 at 17:54 GMT"
    },
    {
        "key": null,
        "number": 1550,
        "state": "closed",
        "title": "Be more aggressive about starting eviction threads.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 13, 2015 at 15:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 13, 2015 at 16:36 GMT",
        "merged_at": "Tuesday Jan 13, 2015 at 16:36 GMT"
    },
    {
        "key": null,
        "number": 1549,
        "state": "closed",
        "title": "Fixes for some MongoDB pauses",
        "body": "SERVER-16662, SERVER-16790\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 13, 2015 at 15:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 13, 2015 at 16:39 GMT",
        "merged_at": "Tuesday Jan 13, 2015 at 16:39 GMT"
    },
    {
        "key": null,
        "number": 1548,
        "state": "closed",
        "title": "Free deleted internal pages",
        "body": "Workloads that delete repeatedly from the beginning of the tree can leave many references to deleted pages. There was a bug where truncate was re-creating those pages as empty pages.\n\nThere is another issue that we never clean up internal pages with those deleted refs. This patch adds code into the internal split routine to clean up those refs if splitting a page. We could do this in a more general place (possibly when setting a WT_REF_DELETED in the normal path?).\n\nFor now this helps with my workload (SERVER-16775). I was seeing quite a deep tree in this workload, so I think it's also worth testing SERVER-16697 with this branch.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 13, 2015 at 04:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Jan 13, 2015 at 17:06 GMT",
        "merged_at": "Tuesday Jan 13, 2015 at 17:06 GMT"
    },
    {
        "key": null,
        "number": 1547,
        "state": "closed",
        "title": "Fix test/checkpoint skipping dirty pages",
        "body": "When restoring updates that could not be evicted, mark pages with the oldest possible first dirty transaction.  This guarantees that such pages can never be skipped by a checkpoint.\n\nrefs #1521\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 12, 2015 at 22:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Jan 12, 2015 at 23:53 GMT",
        "merged_at": "Monday Jan 12, 2015 at 23:53 GMT"
    },
    {
        "key": "OR-",
        "number": 1544,
        "state": "closed",
        "title": "Python: include WT_NOTFOUND as an error returned from CURSOR->compare.",
        "body": "This code in wiredtiger.i looks wrong:\n\n```\n/* Cursor compare can return any of -1, 0, 1 or WT_NOTFOUND. */\n%define COMPARE_OK(m)\n%exception m {\n        $action\n        if ((result < -1 || result > 1) && result != WT_NOTFOUND)\n                SWIG_ERROR_IF_NOT_SET(result);\n}\n%enddef\n```\n\nI don't think compare can return WT_NOTFOUND -- but, COMPARE_OK is used for search-near, too, not just compare.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 12, 2015 at 15:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Jan 12, 2015 at 15:34 GMT",
        "merged_at": "Monday Jan 12, 2015 at 15:34 GMT"
    },
    {
        "key": null,
        "number": 1543,
        "state": "closed",
        "title": "Add MCI project definition",
        "body": "This PR adds a MCI project file so we can add the wiredtiger develop branch into our CI system. The work is being tracked in https://jira.mongodb.org/browse/BUILD-479. Let me know if you have any questions or concerns.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 11, 2015 at 20:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Jan 12, 2015 at 15:52 GMT",
        "merged_at": "Monday Jan 12, 2015 at 15:52 GMT"
    },
    {
        "key": null,
        "number": 1542,
        "state": "closed",
        "title": "Fix memory leak: WT_TABLE.nindices wasn't being incremented in all cases.",
        "body": "Fix memory leak: WT_TABLE.nindices wasn't being incremented in all cases, reference #1474.\n\n@michaelcahill, this one is probably yours to review.  This fixes the test case in #1474, and passes the test suite, but I'm not 100% sure it's correct. Basically, the test case results in our opening an index but not incrementing `table->nindices`, resulting in failure to discard the index when the table is closed.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jan 11, 2015 at 19:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Jan 12, 2015 at 17:57 GMT",
        "merged_at": "Monday Jan 12, 2015 at 17:57 GMT"
    },
    {
        "key": null,
        "number": 1541,
        "state": "closed",
        "title": "Add support for the WT_CURSOR.equals method.",
        "body": "@michaelcahill, @agorrod: here's support for WT_CURSOR.compare_equal.\n\nI made the obvious change for Java documentation, but I have not built the Java API (my Java build is busted for some reason I can't figure out).\n\nI think this is ready to merge once it's reviewed and the Java changes added.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jan 10, 2015 at 18:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 16, 2015 at 21:08 GMT",
        "merged_at": "Friday Jan 16, 2015 at 21:08 GMT"
    },
    {
        "key": null,
        "number": 1540,
        "state": "closed",
        "title": "Fix huffman config and add huffman tests. #1536",
        "body": "@keithbostic  Please review these changes for huffman.  I added a test for all the valid huffman config settings as well as invalid ones.\n\nThere was one minor bug fix to reset `ret` after reading the utf file.\n\nOne outstanding issue is I found in my test that I could not use hex in the frequency file as shown in the docs.  SCNu64 does not read hex.  You'll notice `test_huffman01.py` writes decimal.  We can fix the documentation or assume the values are hex, fix the code and document that requirement.\nhttp://source.wiredtiger.com/2.5.0/huffman.html\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 09, 2015 at 16:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Feb 04, 2015 at 01:09 GMT",
        "merged_at": "Wednesday Feb 04, 2015 at 01:09 GMT"
    },
    {
        "key": null,
        "number": 1537,
        "state": "closed",
        "title": "Release Python's global lock (GIL) during sleep.",
        "body": "This should fix the deadlock issue seen during test_async.py by Mark Benvenuto and Jonathan Reams.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 09, 2015 at 00:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 09, 2015 at 16:14 GMT",
        "merged_at": "Friday Jan 09, 2015 at 16:14 GMT"
    },
    {
        "key": null,
        "number": 1535,
        "state": "closed",
        "title": "Simplify error path in clsm_close. Refs #1527.",
        "body": "Simple change, but create a pull request out of paranoia.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 06, 2015 at 23:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 06, 2015 at 23:22 GMT",
        "merged_at": "Tuesday Jan 06, 2015 at 23:22 GMT"
    },
    {
        "key": null,
        "number": 1532,
        "state": "closed",
        "title": "Overhaul of wtstats tool, see #1365.",
        "body": "Removed nvd3 dependencies, Python script now parses stat file and outputs JSON into template. Template generated via node.js application as single html file, fully self-contained without any dynamic loading (can be viewed offline). \n\nAdded UI features like stats grouping, search, zoom, pan, log/linear scale, absolute/relative time axis. \n\nSee ./tools/template/README.md for details on how to build template. \n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 06, 2015 at 07:07 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Jan 16, 2015 at 18:24 GMT",
        "merged_at": "Friday Jan 16, 2015 at 18:24 GMT"
    },
    {
        "key": null,
        "number": 1531,
        "state": "closed",
        "title": "Fix recovery after a fake checkpoint with logging enabled",
        "body": "refs BF-747\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 06, 2015 at 01:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 06, 2015 at 01:58 GMT",
        "merged_at": "Tuesday Jan 06, 2015 at 01:58 GMT"
    },
    {
        "key": null,
        "number": 1528,
        "state": "closed",
        "title": "Cache a maximum of 2MB per session for scratch buffers",
        "body": " (configurable via an undocumented \"session_scratch_max\" config).\n\nSERVER-16623\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 05, 2015 at 05:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Jan 06, 2015 at 00:12 GMT",
        "merged_at": "Tuesday Jan 06, 2015 at 00:12 GMT"
    },
    {
        "key": null,
        "number": 1526,
        "state": "closed",
        "title": "Fix errors in java examples preventing them from running.",
        "body": "Refs #1524.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 02, 2015 at 22:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Jan 12, 2015 at 19:59 GMT",
        "merged_at": "Monday Jan 12, 2015 at 19:59 GMT"
    },
    {
        "key": null,
        "number": 1523,
        "state": "closed",
        "title": "Test and fix recovery with logging toggled on and off",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 30, 2014 at 10:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 30, 2014 at 15:41 GMT",
        "merged_at": "Tuesday Dec 30, 2014 at 15:41 GMT"
    },
    {
        "key": "nd-",
        "number": 1519,
        "state": "closed",
        "title": "Rework \"wt stat\" command-line arguments.",
        "body": "@sueloverso, would you please do the review on this one, I think you were the last person other than me in/around the stat code?\n\nI think it's ready to go, but it needs thought to confirm I'm not misunderstanding the problem in some way or introducing backward compatibility problems. Obviously, no hurry.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 29, 2014 at 15:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 29, 2014 at 16:45 GMT",
        "merged_at": "Monday Dec 29, 2014 at 16:45 GMT"
    },
    {
        "key": null,
        "number": 1516,
        "state": "closed",
        "title": "Windows error string support.",
        "body": "@markbenvenuto: this is the structure I'm thinking will work, would you please take a look and tell me what you think?\n\nIf you agree with this approach, I think what's left is to add the mapping for the Windows' System Error Codes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 24, 2014 at 16:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Jan 06, 2015 at 23:44 GMT",
        "merged_at": "Tuesday Jan 06, 2015 at 23:44 GMT"
    },
    {
        "key": null,
        "number": 1515,
        "state": "closed",
        "title": "Skip Unix specific permissions test on Windows",
        "body": "Skip Unix specific permissions test on Windows\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 23, 2014 at 20:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 23, 2014 at 20:44 GMT",
        "merged_at": "Tuesday Dec 23, 2014 at 20:44 GMT"
    },
    {
        "key": null,
        "number": 1514,
        "state": "closed",
        "title": "Fix json formatting of printlog to be valid json",
        "body": "wt print log does not output valid json. It adds unnecessary commas after a the last field in an object, and after the last closing brace in an array of objects.\n\nA few fields were also missing commas.\n\nAdhoc test with ex_log, and by validating the output throw [jq](http://stedolan.github.io/jq/).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 23, 2014 at 19:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Dec 23, 2014 at 22:50 GMT",
        "merged_at": "Tuesday Dec 23, 2014 at 22:50 GMT"
    },
    {
        "key": null,
        "number": 1512,
        "state": "closed",
        "title": "Candidate for 2.5.0 release changelog",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 23, 2014 at 06:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 24, 2014 at 00:26 GMT",
        "merged_at": "Wednesday Dec 24, 2014 at 00:26 GMT"
    },
    {
        "key": "kg-",
        "number": 1511,
        "state": "closed",
        "title": "Remove version numbering from the pkg-config file.",
        "body": "We don't create include files that are named by version.  Programs linked using -lwiredtiger will follow the symlink to wiredtiger-a.b.c.so, so their referred library name is forever stamped as wiredtiger-a.b.c.so, which won't conflict even when we ship wiredtiger-a.b.d.so .\nRefs #1458.\n\nNote: jenkins job wiredtiger-configure-combinations has been adjusted to test building programs using pkg-config (under all tested configurations).\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 22, 2014 at 16:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 22, 2014 at 21:48 GMT",
        "merged_at": "Monday Dec 22, 2014 at 21:48 GMT"
    },
    {
        "key": null,
        "number": 1510,
        "state": "closed",
        "title": "Use \"none\" for configurations in documentation but store empty defaults....",
        "body": "This is both more efficient than storing \"none\" and backwards compatible.\n\nrefs #1417\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 22, 2014 at 05:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 23, 2014 at 04:27 GMT",
        "merged_at": "Tuesday Dec 23, 2014 at 04:27 GMT"
    },
    {
        "key": null,
        "number": 1508,
        "state": "closed",
        "title": "Avoid EBUSY returns to verify and salvage caused by checkpoints",
        "body": "  The \"fix\" involves blocking checkpoints while salvage or verify are in progress.\n\nrefs #1404, SERVER-16457\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 22, 2014 at 02:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 22, 2014 at 04:51 GMT",
        "merged_at": "Monday Dec 22, 2014 at 04:51 GMT"
    },
    {
        "key": null,
        "number": 1507,
        "state": "closed",
        "title": "Have extractor configuration checking match collator.",
        "body": "Clean up - no intended functionality change.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 22, 2014 at 02:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 22, 2014 at 04:07 GMT",
        "merged_at": "Monday Dec 22, 2014 at 04:07 GMT"
    },
    {
        "key": null,
        "number": 1506,
        "state": "closed",
        "title": "Fix a bug where a custom extractor terminate was being called twice.",
        "body": "Resolves issue #1503.\n\nClarify the custom extractor and collator terminate documentation while\nI'm here.\n",
        "base_ref": "develop",
        "created_at": "Sunday Dec 21, 2014 at 23:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Dec 21, 2014 at 23:55 GMT",
        "merged_at": "Sunday Dec 21, 2014 at 23:55 GMT"
    },
    {
        "key": null,
        "number": 1504,
        "state": "closed",
        "title": "Add __wt_getenv to workaround caching in MSVC CRT's getenv implementation",
        "body": "MSVC CRT's getenv caches the environment variables it returns after the first call. I had to switch to the Windows API to avoid the CRT caching.\n\nImplemented __wt_getenv which now allocates memory, and updated callers.\n\nTest: Mac OS X 10.10 & Windows 8.1 compile, and unit test suite runs\nAlso, adhoc tests for WIREDTIGER_CONFIG with wt.exe.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 19, 2014 at 22:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Dec 21, 2014 at 22:42 GMT",
        "merged_at": "Sunday Dec 21, 2014 at 22:42 GMT"
    },
    {
        "key": null,
        "number": 1502,
        "state": "closed",
        "title": "Skip test_schema03.py on Window since rlimits are unix specific",
        "body": "I need to catch the resource module load since it does not exist in the Windows version of python.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 19, 2014 at 18:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Dec 21, 2014 at 22:35 GMT",
        "merged_at": "Sunday Dec 21, 2014 at 22:35 GMT"
    },
    {
        "key": null,
        "number": 1501,
        "state": "closed",
        "title": "Page yield",
        "body": "Add sleep to avoid yield spin.  SERVER-16269\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 19, 2014 at 17:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 31, 2014 at 00:51 GMT",
        "merged_at": "Wednesday Dec 31, 2014 at 00:51 GMT"
    },
    {
        "key": null,
        "number": 1500,
        "state": "closed",
        "title": "Use the eviction server to write pages with READGEN_OLDEST set.",
        "body": "Even before the eviction trigger has been reached. This should mean\nthat we clear those pages out of cache earlier, and hopefully will\nsave application threads from doing the evictions (at least sometimes).\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 19, 2014 at 04:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 22, 2014 at 05:04 GMT",
        "merged_at": "Monday Dec 22, 2014 at 05:04 GMT"
    },
    {
        "key": null,
        "number": 1499,
        "state": "closed",
        "title": "Don't try to write leaves from the sweep server",
        "body": "Previously, this was done without locking the handle, and so could race with LSM discarding a handle.\n\nWe know the handle has been idle, so there is a good chance that a checkpoint has run since the last update and the write leaves was wasted effort.  If not, this change will keep the handle locked for longer preventing new opens, but it has been idle for a while anyway.\n\nrefs #1495, #1497 (maybe)\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 19, 2014 at 01:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Dec 19, 2014 at 01:54 GMT",
        "merged_at": "Friday Dec 19, 2014 at 01:54 GMT"
    },
    {
        "key": null,
        "number": 1498,
        "state": "closed",
        "title": "fix test_salvage.py on Windows",
        "body": "Use file size to check for EOF instead of depending on return from file.read.\n\nVerified test passes on Windows 8.1, OmniOS, and MacOS X 10.10\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 18, 2014 at 20:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Dec 18, 2014 at 22:30 GMT",
        "merged_at": "Thursday Dec 18, 2014 at 22:30 GMT"
    },
    {
        "key": "on-",
        "number": 1496,
        "state": "closed",
        "title": "Don't try to set and clear session->split_gen in WT_INTL_FOREACH",
        "body": "There are too many of those loops to ensure that none of them skip clearing it.  Instead, make sure all calls are wrapped in `WT_WITH_PAGE_INDEX`.\n\nrefs SERVER-16546\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 18, 2014 at 05:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Dec 18, 2014 at 23:36 GMT",
        "merged_at": "Thursday Dec 18, 2014 at 23:36 GMT"
    },
    {
        "key": null,
        "number": 1494,
        "state": "closed",
        "title": "Skip test_priv01.py on Windows since it is Unix specific",
        "body": "Since Windows does not support POSIX style privileges, I am skipping this test on Windows.\n\nLet me know if there are any issues.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 17, 2014 at 22:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Dec 18, 2014 at 22:31 GMT",
        "merged_at": "Thursday Dec 18, 2014 at 22:31 GMT"
    },
    {
        "key": null,
        "number": 1493,
        "state": "closed",
        "title": "Windows - Implement a custom version of snprintf",
        "body": "Windows needs to match the truncation behavior of C99 standard snprintf until MSVC supports snprintf.\n\nThe Windows CRT function _snprintf does not truncate strings. I have updated _wt_vsnprintf to truncate, and created a wt wrapper called _wt_snprintf.\n\nThis became an issue while testing wtperf, and I saw an issue in the config.c configuration parser.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 17, 2014 at 22:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 23:12 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 23:12 GMT"
    },
    {
        "key": null,
        "number": 1492,
        "state": "closed",
        "title": "Windows Build fix",
        "body": "Remove deleted file from SConstruct.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 17, 2014 at 22:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 23:07 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 23:07 GMT"
    },
    {
        "key": null,
        "number": 1491,
        "state": "closed",
        "title": "Check the block header checksum before we clear it.",
        "body": "Check the block header checksum before we clear it, it should be the same as the passed-in checksum, and if just those 4 bytes are corrupted, we wouldn't noticed. SERVER-16457.\n\nI also rephrased the code to assume success is the faster path.\n\n@agorrod, would please review this one and merge if you're happy with it?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 17, 2014 at 22:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 22:37 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 22:37 GMT"
    },
    {
        "key": "te-",
        "number": 1489,
        "state": "closed",
        "title": "Detect write-write conflicts before no-overwrite cursors decide to skip an update",
        "body": "refs SERVER-16351\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 17, 2014 at 04:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 05:04 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 05:04 GMT"
    },
    {
        "key": null,
        "number": 1488,
        "state": "closed",
        "title": "Revert default configuration value changes.",
        "body": "They hurt our backward compatibility.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 17, 2014 at 02:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 02:43 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 02:43 GMT"
    },
    {
        "key": null,
        "number": 1486,
        "state": "closed",
        "title": "Some more configuration changes with respect to the \"none\" value.",
        "body": "@agorrod, would you please do the review on this one?\n\nI tried to separately commit each change, let me know if anything doesn't make sense.\n\nReference #1417.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 16, 2014 at 21:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 01:31 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 01:31 GMT"
    },
    {
        "key": null,
        "number": 1485,
        "state": "closed",
        "title": "Python packing cleanup",
        "body": "Refs #1429.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 16, 2014 at 21:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 05:37 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 05:37 GMT"
    },
    {
        "key": null,
        "number": 1484,
        "state": "closed",
        "title": "Atomically create all log files and move them into place. #1482",
        "body": "@michaelcahill Please review this fix for the log read error that Dmitri reported.  \n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 16, 2014 at 19:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 00:37 GMT",
        "merged_at": "Wednesday Dec 17, 2014 at 00:37 GMT"
    },
    {
        "key": null,
        "number": 1477,
        "state": "closed",
        "title": "Fix use of 'compressed' flag for printlog.",
        "body": "Also added printlog call to test case for log compression.\nRefs #1472.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 15, 2014 at 16:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 15, 2014 at 17:08 GMT",
        "merged_at": "Monday Dec 15, 2014 at 17:08 GMT"
    },
    {
        "key": null,
        "number": 1476,
        "state": "closed",
        "title": "use format as a simple recovery tester",
        "body": "Add a simple test of recovery -- on timed runs, the monitor thread optionally indirects through a NULL and core dumps, then we verify the object.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 15, 2014 at 16:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Dec 22, 2014 at 05:05 GMT",
        "merged_at": "Monday Dec 22, 2014 at 05:05 GMT"
    },
    {
        "key": null,
        "number": 1473,
        "state": "closed",
        "title": "Allow printlog to work without recovery.",
        "body": "It now works even if compression or a custom path are setup.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 15, 2014 at 05:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Dec 15, 2014 at 14:38 GMT",
        "merged_at": "Monday Dec 15, 2014 at 14:38 GMT"
    },
    {
        "key": null,
        "number": 1470,
        "state": "closed",
        "title": "Free scratch buffer with scr_free instead of buf_free",
        "body": "I also now allocate the scratch buffer to the correct size to avoid unnecessary growth in buf_fmt.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 12, 2014 at 21:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Dec 12, 2014 at 22:34 GMT",
        "merged_at": "Friday Dec 12, 2014 at 22:34 GMT"
    },
    {
        "key": null,
        "number": 1467,
        "state": "closed",
        "title": "Add support for a WT_CURSOR.reconfigure method.",
        "body": "Add support for a WT_CURSOR.reconfigure method, reference #1381.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 12, 2014 at 00:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Friday Jan 16, 2015 at 20:34 GMT",
        "merged_at": "Friday Jan 16, 2015 at 20:34 GMT"
    },
    {
        "key": null,
        "number": 1466,
        "state": "closed",
        "title": "Use dhandle hash lists in more places.  Adjust sweep timings. #1460",
        "body": "@agorrod Please review this set of changes.  I implemented a few of the dhandle list walk optimizations that I mentioned in #1460.  I also took a compromise position on the sweep timings, setting them to 30 seconds TOD and 10 second sweep period.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 11, 2014 at 20:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Tuesday Dec 16, 2014 at 01:14 GMT",
        "merged_at": "Tuesday Dec 16, 2014 at 01:14 GMT"
    },
    {
        "key": null,
        "number": 1465,
        "state": "closed",
        "title": "Minor cleanup. #1447",
        "body": "@agorrod Here are the minor cleanup changes I mentioned the other day relating to the change in #1447.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 11, 2014 at 20:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 15, 2014 at 14:39 GMT",
        "merged_at": "Monday Dec 15, 2014 at 14:39 GMT"
    },
    {
        "key": null,
        "number": 1464,
        "state": "closed",
        "title": "Changed python test suite to allow for shorter runs by default.",
        "body": "Changed python test suite to allow for shorter runs by default, with a --long (or -l) option for the complete runs.  Txn02 in particular now runs only a small number of scenarios by default.  Also added a `@longtest(\"description\")` decorator for individual test methods. When a method is marked this way, it only runs  with the --long option.  Refs #1461.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 11, 2014 at 20:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Dec 14, 2014 at 23:26 GMT",
        "merged_at": "Sunday Dec 14, 2014 at 23:26 GMT"
    },
    {
        "key": null,
        "number": 1462,
        "state": "closed",
        "title": "Update handle sweep timing. #1460",
        "body": "- Have session and connection sweeps wait the same amount of time.\n- Reduce handle keep-alive from 60 to 10 seconds\n- Reduce sweep wait period to 5 seconds\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 11, 2014 at 03:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Dec 14, 2014 at 23:22 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1459,
        "state": "closed",
        "title": "Add a WT_SESSION.app_private field for applications to use in callbacks taking a WT_SESSION handle.",
        "body": "@michaelcahill, is there anything else needed?\n\nReference #1423.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 10, 2014 at 22:07 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Dec 12, 2014 at 02:26 GMT",
        "merged_at": "Friday Dec 12, 2014 at 02:26 GMT"
    },
    {
        "key": null,
        "number": 1457,
        "state": "closed",
        "title": "Change timing to allow archive thread to complete on tests that do archive.",
        "body": "Since this can make each test run substantially longer, reduce the number of tests that are doing archive from ~4000 to something under 100. Refs #1452.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 10, 2014 at 00:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 10, 2014 at 01:09 GMT",
        "merged_at": "Wednesday Dec 10, 2014 at 01:09 GMT"
    },
    {
        "key": null,
        "number": 1456,
        "state": "closed",
        "title": "Allow sweep to reclaim more handles",
        "body": "In particular, \n1. close stale trees in cache even if the data handle is cached in multiple sessions;\n2. only mark handles \"in use\" for the purposes of sweeps if a cursor is opened on them -- not just due to periodic operations such as checkpoints or gathering statistics.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 10, 2014 at 00:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 10, 2014 at 03:04 GMT",
        "merged_at": "Wednesday Dec 10, 2014 at 03:04 GMT"
    },
    {
        "key": null,
        "number": 1455,
        "state": "closed",
        "title": "Force drop",
        "body": "From @ddanderson: refs #1436.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 09, 2014 at 23:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 09, 2014 at 23:47 GMT",
        "merged_at": "Tuesday Dec 09, 2014 at 23:47 GMT"
    },
    {
        "key": null,
        "number": 1454,
        "state": "closed",
        "title": "Separate the btree maximum key/value sizes from the underlying page size",
        "body": "Separate the btree maximum key/value sizes from the underlying page size, reference #1282.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 09, 2014 at 21:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 15, 2014 at 01:26 GMT",
        "merged_at": "Monday Dec 15, 2014 at 01:26 GMT"
    },
    {
        "key": "ON-",
        "number": 1453,
        "state": "closed",
        "title": "SESSION->drop with \"force\" of nonexistent index/colgroup should be silent.",
        "body": "Refs #1436.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 09, 2014 at 21:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 09, 2014 at 23:19 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1450,
        "state": "closed",
        "title": "Python testing: prepend third party libraries we supply to the front of the os.path list.",
        "body": "This way, we'll reliably get our versions of third party libraries.  Refs #1394.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 09, 2014 at 18:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 09, 2014 at 22:01 GMT",
        "merged_at": "Tuesday Dec 09, 2014 at 22:01 GMT"
    },
    {
        "key": null,
        "number": 1449,
        "state": "closed",
        "title": "Improve and simplify the LSM switch logic",
        "body": "it is fine to keep writing into a chunk while it is being switched, until either it hits the hard chunk size limit or a switch transaction ID is chosen that is larger than the writer's.  Fixes an assertion failure introduced by #1432 that could write to an old chunk after the switch completed.\n\nrefs #1432, #1418\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 09, 2014 at 02:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 10, 2014 at 00:03 GMT",
        "merged_at": "Wednesday Dec 10, 2014 at 00:03 GMT"
    },
    {
        "key": null,
        "number": 1448,
        "state": "closed",
        "title": "Handle nonexistent objects for drops of indices/colgroups/lsm with 'force'.",
        "body": "Fixes #1436.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 08, 2014 at 17:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 08, 2014 at 23:04 GMT",
        "merged_at": "Monday Dec 08, 2014 at 23:04 GMT"
    },
    {
        "key": null,
        "number": 1447,
        "state": "closed",
        "title": "If there are only two LSM worker threads, don't let the cache get full.",
        "body": "Allow the first thread to do flushes as well as switches and drops\nif there are only two threads.\n\nRefs #1441, but this is a hang seen from that test/format configuration,\nnot a segfault.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 08, 2014 at 07:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:41 GMT",
        "closed_at": "Monday Dec 08, 2014 at 23:52 GMT",
        "merged_at": "Monday Dec 08, 2014 at 23:52 GMT"
    },
    {
        "key": null,
        "number": 1445,
        "state": "closed",
        "title": "Printlog json",
        "body": "printlog's strings now use JSON Unicode; we can see null bytes and other non-printable chars in keys/values.  Fixes the main complaint of #1438.\n",
        "base_ref": "log-compress",
        "created_at": "Friday Dec 05, 2014 at 19:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 08, 2014 at 05:57 GMT",
        "merged_at": "Monday Dec 08, 2014 at 05:57 GMT"
    },
    {
        "key": null,
        "number": 1444,
        "state": "closed",
        "title": "Force evict many deletes",
        "body": "Looking at this, it occurred to me maybe we could maintain a count of deleted items in the cursor, which might address Alex's point by covering more obscure delete patterns, and we'd only need to check if the page should be pushed out when we switch pages?\n\nThis branch has been very lightly tested, it's mostly to show you what I mean.\n\nI wasn't part of your and Alex's discussions on this one, so I may simply not understand the issues -- if this is just wrong-headed, feel free to delete this branch without further discussion.\n",
        "base_ref": "force-evict-many-deletes",
        "created_at": "Friday Dec 05, 2014 at 15:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 08, 2014 at 02:54 GMT",
        "merged_at": "Monday Dec 08, 2014 at 02:54 GMT"
    },
    {
        "key": null,
        "number": 1443,
        "state": "closed",
        "title": "Cursor open optimize",
        "body": "Several optimizations that are aimed at improving the performance of opening cursors when there are lots of tables.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 05, 2014 at 05:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 09, 2014 at 03:41 GMT",
        "merged_at": "Tuesday Dec 09, 2014 at 03:41 GMT"
    },
    {
        "key": null,
        "number": 1442,
        "state": "closed",
        "title": "Force evict a page if we see many deletes while scanning",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Dec 05, 2014 at 02:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 08, 2014 at 04:50 GMT",
        "merged_at": "Monday Dec 08, 2014 at 04:50 GMT"
    },
    {
        "key": "RI-",
        "number": 1440,
        "state": "closed",
        "title": "Add a URI-specific version of wt_conn_btree_apply.",
        "body": "@keithbostic and @michaelcahill please review this.  This fixes the specific issue in #1439.\n\nThis cuts the time in my test from 84 seconds to about 4.5 seconds for 3000 tables.  I created a new, slightly different version,`__wt_conn_btree_apply_uri` that applies the function to any dhandle that matches the URI.  This avoids walking the entire `conn->dhandle` list to then walk the session list to then call the function on all URIs and have it be a no-op since the URI does not match the one we're interested in.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 04, 2014 at 20:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Dec 05, 2014 at 00:37 GMT",
        "merged_at": "Friday Dec 05, 2014 at 00:37 GMT"
    },
    {
        "key": null,
        "number": 1437,
        "state": "closed",
        "title": "Log compress",
        "body": "These commits implement log compression to address #1359 .  This does not currently include an option to checkpoint just the header.\n\nThere are some fixes to existing code as well:\n -- in block compression, if snappy compress returns a buf larger than the original, we'll use it! https://github.com/wiredtiger/wiredtiger/commit/428fa167621a8c64ee40429853f9d9c31f62df34\n -- use time.sleep(0), not yield: https://github.com/wiredtiger/wiredtiger/commit/9058f6a54b7022d5346622c3656ef874676f5d10\n\nThe second fix above now has some txn tests completing that used to return early. It may make the test suite run longer (20% longer for me).\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 04, 2014 at 18:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 09, 2014 at 18:13 GMT",
        "merged_at": "Tuesday Dec 09, 2014 at 18:13 GMT"
    },
    {
        "key": null,
        "number": 1433,
        "state": "closed",
        "title": "python format",
        "body": "Change the Python scripts to follow Python indenting standards (4 spaceindents, spaces only).\n\n@michaelcahill: this change appears to work, and  doesn't change the formats of any files created by the scripts.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 04, 2014 at 01:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Dec 04, 2014 at 06:24 GMT",
        "merged_at": "Thursday Dec 04, 2014 at 06:24 GMT"
    },
    {
        "key": null,
        "number": 1432,
        "state": "closed",
        "title": "Create WT_LSM_TREE_SWITCH_INPROGRESS flag",
        "body": "This is for #1418.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 03, 2014 at 22:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Thursday Dec 04, 2014 at 00:35 GMT",
        "merged_at": "Thursday Dec 04, 2014 at 00:35 GMT"
    },
    {
        "key": null,
        "number": 1431,
        "state": "closed",
        "title": "None config",
        "body": "@michaelcahill, I thought we might want this one (as Alex said, it's a cleaner way to get around default configurations in binaries).\n\nI think it's OK, my only concern is it's dangerous for some reason to modify `value.len` in `__config_process_value()`.\n\nReference #1417.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 03, 2014 at 20:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Monday Dec 08, 2014 at 03:33 GMT",
        "merged_at": "Monday Dec 08, 2014 at 03:33 GMT"
    },
    {
        "key": null,
        "number": 1430,
        "state": "closed",
        "title": "Revert error return value changes.",
        "body": "Changes in #1204, #1288 mistakenly changed the values for some error defines, which breaks backward compatibility.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 03, 2014 at 18:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 03, 2014 at 22:19 GMT",
        "merged_at": "Wednesday Dec 03, 2014 at 22:19 GMT"
    },
    {
        "key": null,
        "number": 1429,
        "state": "closed",
        "title": "python: improve code readability of packing.py functions",
        "body": "",
        "base_ref": "master",
        "created_at": "Wednesday Dec 03, 2014 at 16:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Wednesday Dec 17, 2014 at 05:38 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1428,
        "state": "closed",
        "title": "Add a forced eviction check to look for excessively large skip lists.",
        "body": "Large skip lists can cause performance problems - treat a large skip list as though it's grown the page too large.\n\nThis helps with the performance degradation seen in:\nhttps://jira.mongodb.org/browse/SERVER-16296\n\nI'm not sure how much I like this solution, and there are some magic numbers in there that should be thought about carefully before deciding to merge (and possibly exposing as configurable).\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 03, 2014 at 05:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 08, 2014 at 04:50 GMT",
        "merged_at": null
    },
    {
        "key": "in-",
        "number": 1427,
        "state": "closed",
        "title": "Fixes for in-memory splits",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 03, 2014 at 04:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Dec 03, 2014 at 04:58 GMT",
        "merged_at": "Wednesday Dec 03, 2014 at 04:58 GMT"
    },
    {
        "key": null,
        "number": 1426,
        "state": "closed",
        "title": "Evict rename",
        "body": "Rename some files in the btree directory, and create new evict and reconcile sub-directories.\n\nDon't merge this until after the 2.4.2 release has been cut.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 03, 2014 at 03:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Dec 04, 2014 at 06:29 GMT",
        "merged_at": "Thursday Dec 04, 2014 at 06:29 GMT"
    },
    {
        "key": "in-",
        "number": 1422,
        "state": "closed",
        "title": "Instantiate a full key for the parent ref of a page during in-memory splits",
        "body": "The original page's key may have been truncated and may not be valid after the split.\n\nAlso, take care to free the original key if it was instantiated, fixing a leak found by address sanitizer.\n\nrefs #1419, #1421\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 02, 2014 at 04:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 02, 2014 at 04:59 GMT",
        "merged_at": "Tuesday Dec 02, 2014 at 04:59 GMT"
    },
    {
        "key": null,
        "number": 1419,
        "state": "closed",
        "title": "Split right",
        "body": "Changes to split the large insert lists that result from append-only workloads.\n",
        "base_ref": "develop",
        "created_at": "Sunday Nov 30, 2014 at 16:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Tuesday Dec 02, 2014 at 01:55 GMT",
        "merged_at": "Tuesday Dec 02, 2014 at 01:55 GMT"
    },
    {
        "key": null,
        "number": 1416,
        "state": "closed",
        "title": "LSM checkpoint fixes",
        "body": "Fix a number of issues found while testing LSM with frequent application checkpoints.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 28, 2014 at 04:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Nov 28, 2014 at 04:34 GMT",
        "merged_at": "Friday Nov 28, 2014 at 04:34 GMT"
    },
    {
        "key": null,
        "number": 1415,
        "state": "closed",
        "title": "Add some wtperf workloads that turn logging on.",
        "body": "@sueloverso Could you take a look at these workloads please? This is related to #1414, it would be nice to figure out if there is a performance drop caused by the log subsystem.\n\nIt occurred to me that maybe we should play with value sizes as well. Maybe a larger one would be better?\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 28, 2014 at 02:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Dec 01, 2014 at 20:10 GMT",
        "merged_at": "Monday Dec 01, 2014 at 20:10 GMT"
    },
    {
        "key": null,
        "number": 1413,
        "state": "closed",
        "title": "Install swig generated python files for the python test suite",
        "body": "Install swig generated python files for the python test suite\n\nI used to use a batch file for this purpose. This is the right way of doing it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 26, 2014 at 20:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 26, 2014 at 21:51 GMT",
        "merged_at": "Wednesday Nov 26, 2014 at 21:51 GMT"
    },
    {
        "key": null,
        "number": 1412,
        "state": "closed",
        "title": "Fix ex_stat compilation on Windows",
        "body": "Fix ex_stat compilation on Windows\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 26, 2014 at 20:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 26, 2014 at 22:44 GMT",
        "merged_at": "Wednesday Nov 26, 2014 at 22:44 GMT"
    },
    {
        "key": null,
        "number": 1411,
        "state": "closed",
        "title": "Wtstats changes",
        "body": "@michaelcahill Please review these changes for wtstats.  Here's what I added:\n- support that if you give it a directory it looks for all WiredTigerStat files in the directory, or uses whatever file you give it.\n- added --all arg that will generate HTML files for the overall stats (what we do now), and a separate HTML file for each prefix group and an HTML file for each grouping.\n- First pass at (hopefully!) useful groupings of stats.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 26, 2014 at 20:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Nov 28, 2014 at 04:19 GMT",
        "merged_at": "Friday Nov 28, 2014 at 04:19 GMT"
    },
    {
        "key": null,
        "number": 1410,
        "state": "closed",
        "title": "Ensure LSM handles aren't closed while the LSM manager is looking at them",
        "body": "Take the dhandle lock, but minimize the amount of time we are holding it for.\n\nThis is similar to #1409 but holds the dhandle lock for a shorter period. There could be a lot of trees open, and the manager can allocate memory inside the loop, so I think it's best to avoid holding the handle lock for the entire operation.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 26, 2014 at 02:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 26, 2014 at 23:35 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1409,
        "state": "closed",
        "title": "The LSM manager thread needs the handle list to walk the list of LSM trees",
        "body": "Found by debugging:\n\nhttp://build.wiredtiger.com:8080/job/wiredtiger-linux-directio/2603/\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 26, 2014 at 02:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 26, 2014 at 23:34 GMT",
        "merged_at": "Wednesday Nov 26, 2014 at 23:34 GMT"
    },
    {
        "key": null,
        "number": 1406,
        "state": "closed",
        "title": "Fixup LSM workers, so evicting old chunks doesn't stop checkpoints.",
        "body": "This change has two fixes:\n- Ensure there are enough work units on the queue for checkpoints.\n- Don't leave chunk reference counts out of wack.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 25, 2014 at 01:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Nov 25, 2014 at 02:23 GMT",
        "merged_at": "Tuesday Nov 25, 2014 at 02:23 GMT"
    },
    {
        "key": "re-",
        "number": 1403,
        "state": "closed",
        "title": "Just pre-allocate log files instead of recycling. #1373",
        "body": "@michaelcahill Please review this modified branch for log files.  The code is cleaner to dis-associate archiving from prepping log files for use (other than they happen in the archive code path).  This is built on the other branch for the rest of the change.\n\nI'm only lukewarm on the `prepare` name.  \n",
        "base_ref": "log-recycle",
        "created_at": "Monday Nov 24, 2014 at 19:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Nov 25, 2014 at 19:39 GMT",
        "merged_at": "Tuesday Nov 25, 2014 at 19:39 GMT"
    },
    {
        "key": null,
        "number": 1402,
        "state": "closed",
        "title": "Sweep eviction improvements",
        "body": "Improve interactions between sweep and eviction by not holding the handle list lock while walking files.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 24, 2014 at 05:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 24, 2014 at 07:01 GMT",
        "merged_at": "Monday Nov 24, 2014 at 07:01 GMT"
    },
    {
        "key": null,
        "number": 1401,
        "state": "closed",
        "title": "Update the wtperf Jenkins runner script.",
        "body": "Only run each benchmark once - we will see more variance in the Jenkins plots, but each performance test cycle will take about a quater of the time.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 24, 2014 at 04:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 24, 2014 at 18:21 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1400,
        "state": "closed",
        "title": "Fix some issues with the recent changes to handle locking",
        "body": "1. bump the reference count before dropping the handle list lock.  Otherwise, a handle sweep could free the handle from under us in between.\n2. hold the handle exclusive until sweep is finished with it.  Previously it could have been re-acquired in between, and the locking situation was unclear.\n\nrefs #1391, #1392\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 24, 2014 at 01:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 24, 2014 at 03:45 GMT",
        "merged_at": "Monday Nov 24, 2014 at 03:45 GMT"
    },
    {
        "key": null,
        "number": 1399,
        "state": "closed",
        "title": "Switch to holding the checkpoint lock when opening a bulk cursor.",
        "body": "This avoids a spurious EBUSY without adding more complexity to checkpoints.\n\nrefs #1397\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 21, 2014 at 19:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Nov 21, 2014 at 20:29 GMT",
        "merged_at": "Friday Nov 21, 2014 at 20:29 GMT"
    },
    {
        "key": null,
        "number": 1398,
        "state": "closed",
        "title": "Don't fail to open bulk cursors because a checkpoint is running",
        "body": "If a checkpoint runs in between creating a table and opening a bulk cursor, allow the bulk load to proceed by having checkpoint treat empty tables as busy.\n\nrefs #1397\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 21, 2014 at 18:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Nov 21, 2014 at 20:30 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1390,
        "state": "closed",
        "title": "Add support for immutable indices.",
        "body": "Refs #1344\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 18, 2014 at 05:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Nov 18, 2014 at 23:48 GMT",
        "merged_at": "Tuesday Nov 18, 2014 at 23:48 GMT"
    },
    {
        "key": null,
        "number": 1389,
        "state": "closed",
        "title": "Add fsync to the turtle file and the to the directory when renaming it into place",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 18, 2014 at 03:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 19, 2014 at 01:20 GMT",
        "merged_at": "Wednesday Nov 19, 2014 at 01:20 GMT"
    },
    {
        "key": null,
        "number": 1388,
        "state": "closed",
        "title": "First part of recycling log files.  Have archiving move them aside and reset them. #1373",
        "body": "Not yet ready to merge.  Did a bunch of refactoring of log code along the way.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 17, 2014 at 20:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Dec 04, 2014 at 06:37 GMT",
        "merged_at": "Thursday Dec 04, 2014 at 06:37 GMT"
    },
    {
        "key": null,
        "number": 1387,
        "state": "closed",
        "title": "Refactor the fallocate call.",
        "body": "@sueloverso, here's a (very lightly tested) branch to refactor the fallocate call.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 17, 2014 at 18:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 17, 2014 at 20:54 GMT",
        "merged_at": "Monday Nov 17, 2014 at 20:54 GMT"
    },
    {
        "key": null,
        "number": 1386,
        "state": "closed",
        "title": "Check for fallocate at runtime",
        "body": "On linux, if during configure, we find posix_fallocate, but not fallocate,\nwe try the syscall for fallocate to see if it works.  Going back as far as\nRHEL 5.5, the syscall is in fact there and working, but not in libc.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 17, 2014 at 14:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 17, 2014 at 15:18 GMT",
        "merged_at": "Monday Nov 17, 2014 at 15:18 GMT"
    },
    {
        "key": null,
        "number": 1384,
        "state": "closed",
        "title": "Sync the metadata before swapping the turtle file into place.",
        "body": "This was always the intention, and it used to happen, but a change move the fsync outside the checkpoint/schema lock (336dc23) left out the fsync of the metadata.\n\nrefs #1383.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 17, 2014 at 01:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 17, 2014 at 03:27 GMT",
        "merged_at": "Monday Nov 17, 2014 at 03:27 GMT"
    },
    {
        "key": null,
        "number": 1382,
        "state": "closed",
        "title": "fix durability support on OS X",
        "body": "OS X fsync isn't sufficient, use fcntl(F_FULLFSYNC) instead; note that F_FULLFSYNC isn't supported on all OS X filesystems, fallback to fsync if F_FULLFSYNC fails.\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 15, 2014 at 15:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 17, 2014 at 01:16 GMT",
        "merged_at": "Monday Nov 17, 2014 at 01:16 GMT"
    },
    {
        "key": null,
        "number": 1380,
        "state": "closed",
        "title": "Reduce the impact of checkpoints on cursor operations",
        "body": "This is an experimental branch that tries to reduce the impact of locking during checkpoints on ordinary operations.  In particular, checkpoints used to hold the schema lock, which blocked concurrent threads from opening tables until the checkpoint completed.  With this change, most cursor and table opens would be able to proceed during a checkpoint.\n\nThese changes are not ready for merge.  They need further cleanup, and there is still an occasional failure in test/fops, where a cursor open sees a table without its column group.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 13, 2014 at 10:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Nov 18, 2014 at 23:52 GMT",
        "merged_at": "Tuesday Nov 18, 2014 at 23:52 GMT"
    },
    {
        "key": "le-",
        "number": 1379,
        "state": "closed",
        "title": "Fix for adjusting variable-length sizes",
        "body": "When adjusting variable-length sizes, odd things can happen on the encoding boundaries.  Play it safe and iterate until we know the final size.\n\nJIRA-16118\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 13, 2014 at 03:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Nov 13, 2014 at 04:21 GMT",
        "merged_at": "Thursday Nov 13, 2014 at 04:21 GMT"
    },
    {
        "key": null,
        "number": 1377,
        "state": "closed",
        "title": "Allow unicode typed objects in Python with S/s formats.  refs #1187.",
        "body": "This is exposed by the subtle difference in Python between 'Hello\\u1571' and u'Hello\\u1571', or equivalently, unicode('Hello\\u1571').  The latter two are of type unicode, which must be converted back to string to allow the SWIG layer to work. This is purely a Python problem.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 12, 2014 at 20:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 12, 2014 at 21:45 GMT",
        "merged_at": "Wednesday Nov 12, 2014 at 21:45 GMT"
    },
    {
        "key": null,
        "number": 1376,
        "state": "closed",
        "title": "Add a macro to access a connection statistic's value.",
        "body": "@sueloverso, could we do something like this and remove the need for the additional copy of the checkpoint values?\n",
        "base_ref": "checkpoint-timers",
        "created_at": "Wednesday Nov 12, 2014 at 19:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 12, 2014 at 21:04 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1375,
        "state": "closed",
        "title": "Add checkpoint timer stats. #1374",
        "body": "Implement min, max, total and most recent times for checkpoints in the stats.\n@keithbostic can you please review.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 12, 2014 at 19:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 12, 2014 at 20:58 GMT",
        "merged_at": "Wednesday Nov 12, 2014 at 20:58 GMT"
    },
    {
        "key": null,
        "number": 1372,
        "state": "closed",
        "title": "Format timer",
        "body": "@michaelcahill, changes to support timer-limited runs in format, some minor cleanups.\n\nThe reason I didn't just push this is that I changed how we're calculating how often to checkpoint and/or close/open session/cursors, and I thought that might be worth a quick look.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 11, 2014 at 18:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 12, 2014 at 22:44 GMT",
        "merged_at": "Wednesday Nov 12, 2014 at 22:44 GMT"
    },
    {
        "key": null,
        "number": 1371,
        "state": "closed",
        "title": "Lsm merge simplify",
        "body": "Refs #1368\n\nShuffle LSM merge code so error handling is a bit simpler, and handle bloom creation consistently.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 11, 2014 at 05:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Tuesday Nov 11, 2014 at 14:23 GMT",
        "merged_at": "Tuesday Nov 11, 2014 at 14:23 GMT"
    },
    {
        "key": null,
        "number": 1370,
        "state": "closed",
        "title": "Incremental backup",
        "body": "@michaelcahill  I still have a test or two to write, but here is the basic code and a unit test.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 10, 2014 at 21:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Nov 18, 2014 at 23:51 GMT",
        "merged_at": "Tuesday Nov 18, 2014 at 23:51 GMT"
    },
    {
        "key": null,
        "number": 1369,
        "state": "closed",
        "title": "Fix __wt_open to handle new WT_FILE_TYPE_DIRECTORY",
        "body": "Windows __wt_open lacks support for WT_FILE_TYPE_DIRECTORY.\n\nSince you cannot sync a directory on Windows, I modified __wt_open to return a WT_FH, but to leave the file handles uninitialized since they are never used.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 10, 2014 at 18:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 18:59 GMT",
        "merged_at": "Monday Nov 10, 2014 at 18:59 GMT"
    },
    {
        "key": null,
        "number": 1367,
        "state": "closed",
        "title": "Fix an extra semicolon in os_fsync.c",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Nov 10, 2014 at 14:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 14:53 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1366,
        "state": "closed",
        "title": "Fix LSM trees with custom collators: use the same customize path as for btrees",
        "body": "refs #1361\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 10, 2014 at 06:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 11:36 GMT",
        "merged_at": "Monday Nov 10, 2014 at 11:36 GMT"
    },
    {
        "key": null,
        "number": 1364,
        "state": "closed",
        "title": "Add Python NVD3 build 0.11.0 to our source tree.",
        "body": "This saves requiring a particualr version being installed on a users computer.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 10, 2014 at 03:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 04:04 GMT",
        "merged_at": "Monday Nov 10, 2014 at 04:04 GMT"
    },
    {
        "key": "on-",
        "number": 1363,
        "state": "closed",
        "title": "Add the python-nvd3 library we need for statistics graphing.",
        "body": "This isn't ready for merge yet. In the least we need to update the WiredTiger third party licence information.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 10, 2014 at 03:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 03:49 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1362,
        "state": "closed",
        "title": "Rename the log \"user bytes\" statistic to \"payload bytes\"",
        "body": "The former has confused a few people, I hope the new wording is clearer.\n\n@sueloverso, can you please review this one?\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 10, 2014 at 02:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 14:23 GMT",
        "merged_at": "Monday Nov 10, 2014 at 14:23 GMT"
    },
    {
        "key": "te-",
        "number": 1358,
        "state": "closed",
        "title": "Minor rework of the checkpoint write-leaf code.",
        "body": "@agorrod, @michaelcahill -- I changed it so we don't do a synchronous flush until after all leaf pages for all files have been written, in a checkpoint with multiple files, that should give the asynchronous flush more time to work before we have to wait.\n\nMichael, I also changed it to not release the handle until after the synchronous flush. There's probably something obvious I'm missing, but I couldn't convince myself it was safe, that the handle couldn't be collected out from under us, and I didn't see any reason it would make a performance difference.\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 08, 2014 at 15:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Sunday Nov 09, 2014 at 23:46 GMT",
        "merged_at": "Sunday Nov 09, 2014 at 23:46 GMT"
    },
    {
        "key": null,
        "number": 1357,
        "state": "closed",
        "title": "Java async close",
        "body": "Java close cleanups (for connection/session/cursor) now occur as part of a typemap to ensure that they occur when the call to 'close' has completed.  This fixes #1332.\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 08, 2014 at 12:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 00:08 GMT",
        "merged_at": "Monday Nov 10, 2014 at 00:08 GMT"
    },
    {
        "key": null,
        "number": 1356,
        "state": "closed",
        "title": "If a server thread exits with an error, panic.",
        "body": "@michaelcahill, the obvious set of changes to panic if a server thread exits with an error.\nReference #1355.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 07, 2014 at 23:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 10, 2014 at 00:09 GMT",
        "merged_at": "Monday Nov 10, 2014 at 00:09 GMT"
    },
    {
        "key": "ng-",
        "number": 1352,
        "state": "closed",
        "title": "Do checkpoints without a long-running transaction",
        "body": "If we're logging and taking an ordinary checkpoint, don't require transactional consistency across files.\n\nThis is a first step, and we should talk it through some more, but for ordinary checkpoints (not named, across the whole database, with logging), recovery will hide from users whether the checkpoint uses a transactional snapshot.\n\nWe could take this change further by using read-committed isolation within each file, but that requires some more thought and better testing of recovery.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 07, 2014 at 06:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Tuesday Dec 02, 2014 at 04:29 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1351,
        "state": "closed",
        "title": "Flush checkpoint handles prior to taking schema lock.",
        "body": "This should save time when flushing again while holding the schema lock.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 07, 2014 at 05:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Friday Nov 07, 2014 at 06:36 GMT",
        "merged_at": "Friday Nov 07, 2014 at 06:36 GMT"
    },
    {
        "key": null,
        "number": 1348,
        "state": "closed",
        "title": "Simplify the directory/file sync loop",
        "body": "@sueloverso, if you like this change please merge, otherwise discard it.\n\nBasically `did_sync` was bugging me, so I thought we could break out at the bottom of the loop instead?\n\nAnd, there were a few places where we ignored error returns (the call to `__wt_cond_wait`, and after `__wt_directory_sync` failed, we still cleared SLOT_SYNC_DIR from the slot).\n\nAnyway, for your consideration.\n",
        "base_ref": "directory-sync-log-files",
        "created_at": "Thursday Nov 06, 2014 at 15:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Nov 06, 2014 at 15:16 GMT",
        "merged_at": "Thursday Nov 06, 2014 at 15:16 GMT"
    },
    {
        "key": null,
        "number": 1346,
        "state": "closed",
        "title": "Draft change log for 2.4.1 release.",
        "body": "@michaelcahill Could you review the change log?\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 06, 2014 at 00:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Nov 06, 2014 at 04:36 GMT",
        "merged_at": "Thursday Nov 06, 2014 at 04:36 GMT"
    },
    {
        "key": null,
        "number": 1345,
        "state": "closed",
        "title": "Fixed an error in doc processing for multiple languages.",
        "body": "This should address #1341.  Run dist/s_docs to test it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 05, 2014 at 16:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Nov 06, 2014 at 01:41 GMT",
        "merged_at": "Thursday Nov 06, 2014 at 01:41 GMT"
    },
    {
        "key": null,
        "number": 1343,
        "state": "closed",
        "title": "Use the log sync setting to decide whether to sync the directory on log file creation",
        "body": "(Previously, the checkpoint_sync setting caused a directory sync on log file creation, which doesn't make much sense).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 04, 2014 at 23:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Sunday Nov 09, 2014 at 18:45 GMT",
        "merged_at": "Sunday Nov 09, 2014 at 18:45 GMT"
    },
    {
        "key": null,
        "number": 1342,
        "state": "closed",
        "title": "Use builtin reader/writer lock on Windows",
        "body": "Several reader writer functions on Windows such as [TryAcquireSRWLockShared](http://msdn.microsoft.com/en-us/library/windows/desktop/dd405524%28v=vs.85%29.aspx) are only available on Windows 7/2008R2 or later. To support Windows Vista/2008 and before, I am switching the Windows build to use the new builtin reader/writer lock.\n\nBuild: Mac OS 10.9, Windows 8.1, Ran s_all\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 04, 2014 at 18:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 05, 2014 at 12:29 GMT",
        "merged_at": "Wednesday Nov 05, 2014 at 12:29 GMT"
    },
    {
        "key": null,
        "number": 1340,
        "state": "closed",
        "title": "Custom extractors lint",
        "body": "@michaelcahill: some flexelint complaints, for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 04, 2014 at 12:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Nov 05, 2014 at 00:26 GMT",
        "merged_at": "Wednesday Nov 05, 2014 at 00:26 GMT"
    },
    {
        "key": null,
        "number": 1339,
        "state": "closed",
        "title": "SConstruct cleanup",
        "body": "- Use Substfile instead of hand written code\n- Add more error checks, and dependencies\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 03, 2014 at 21:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 03, 2014 at 23:32 GMT",
        "merged_at": "Monday Nov 03, 2014 at 23:32 GMT"
    },
    {
        "key": null,
        "number": 1338,
        "state": "closed",
        "title": "Statistics review/cleanup.",
        "body": "@sueloverso, @agorrod: I owed Sue a review on #1313, can one of you please review these changes?\n\nThe primary change is to use Python subclasses so we don't have to remember to set a prefix in the description, but I also made some other changes while I was in the area. I tried to use a separate commit per change, it should be pretty easy to revert any specific changes you don't like.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 03, 2014 at 17:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 03, 2014 at 17:49 GMT",
        "merged_at": "Monday Nov 03, 2014 at 17:49 GMT"
    },
    {
        "key": null,
        "number": 1337,
        "state": "closed",
        "title": "If we have an empty page with skipped updates after reconciliation, don't write the image",
        "body": "refs #1335\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 03, 2014 at 06:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Nov 03, 2014 at 06:22 GMT",
        "merged_at": "Monday Nov 03, 2014 at 06:22 GMT"
    },
    {
        "key": null,
        "number": 1336,
        "state": "closed",
        "title": "Fix conflicts between sweep and exclusive operations",
        "body": "refs #1309\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 03, 2014 at 02:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Tuesday Nov 04, 2014 at 01:53 GMT",
        "merged_at": "Tuesday Nov 04, 2014 at 01:53 GMT"
    },
    {
        "key": null,
        "number": 1335,
        "state": "closed",
        "title": "Fix when reconciliation of large page results in a single, small page.",
        "body": "In the case of a workload where we're forcibly evicting a large page, but most of the page is discarded during reconciliation and the page doesn't split into multiple chunks, we were quitting, leaving the page in place.  Instead, instantiate the page and swap it into place to replace the previous version. Reference #1317.\n\n@michaelcahill, I think this is ready for review.\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 01, 2014 at 17:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Sunday Nov 02, 2014 at 22:59 GMT",
        "merged_at": "Sunday Nov 02, 2014 at 22:59 GMT"
    },
    {
        "key": null,
        "number": 1334,
        "state": "closed",
        "title": "Fix the check for the end of a log file",
        "body": "When searching for the end of a log file, check the whole 32-bit length for a non-zero value.  It's reasonably likely that the first, low-order byte of the length will be zero, since we pad to 128 bytes by default.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 30, 2014 at 23:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Friday Oct 31, 2014 at 01:02 GMT",
        "merged_at": "Friday Oct 31, 2014 at 01:02 GMT"
    },
    {
        "key": null,
        "number": 1333,
        "state": "closed",
        "title": "Make explicit calls ascii versions of Windows functions",
        "body": "Windows API allows you to choose whether to call the ASCII, or Unicode versions of their APIs. You can either call the API with A or W if you want to be explicit or let preprocessor defines dictate which version is chosen.\n\nCurrently, WT is uses the naked API calls like CreateFile which can either become CreateFileA or CreateFileW depending on preprocessor defines. With change, I have chosen to explicitly call the ascii versions to be clear. \n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 30, 2014 at 19:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Oct 30, 2014 at 19:36 GMT",
        "merged_at": "Thursday Oct 30, 2014 at 19:36 GMT"
    },
    {
        "key": null,
        "number": 1329,
        "state": "closed",
        "title": "Oracle Solaris fixes",
        "body": "Small fixes to enable building on Oracle Solaris 11.2\n\nsed does not allow a space between ! and d\ntr requires square brackets around the arguments\n\nHave validated the fixes on MacOS 10.9, and Oracle Solaris 11.2.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 29, 2014 at 21:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Oct 29, 2014 at 21:36 GMT",
        "merged_at": "Wednesday Oct 29, 2014 at 21:36 GMT"
    },
    {
        "key": null,
        "number": 1328,
        "state": "closed",
        "title": "pthread printf",
        "body": "Unless someone can think of a system with an opaque pthread_t that we're likely to run on, let's just simplify this for now, and deal with the opaque pthread_t case when we get there.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 29, 2014 at 19:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Oct 30, 2014 at 02:17 GMT",
        "merged_at": "Thursday Oct 30, 2014 at 02:17 GMT"
    },
    {
        "key": null,
        "number": 1326,
        "state": "closed",
        "title": "Fix Windows Compile",
        "body": "Use correct format specifier\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 29, 2014 at 15:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Oct 29, 2014 at 15:48 GMT",
        "merged_at": "Wednesday Oct 29, 2014 at 15:48 GMT"
    },
    {
        "key": "on-",
        "number": 1325,
        "state": "closed",
        "title": "Update WiredTiger stat graph generator to expect non-cleared stats.",
        "body": "Can revert to previous behaivor with --clear flag.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 29, 2014 at 07:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Oct 30, 2014 at 05:29 GMT",
        "merged_at": "Thursday Oct 30, 2014 at 05:29 GMT"
    },
    {
        "key": null,
        "number": 1324,
        "state": "closed",
        "title": "Commit release snapshot",
        "body": "Release snapshot for open cursors on transaction commit. Get a new snapshot the first time any cursor in a session is used again.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 28, 2014 at 23:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Oct 29, 2014 at 02:23 GMT",
        "merged_at": "Wednesday Oct 29, 2014 at 02:23 GMT"
    },
    {
        "key": null,
        "number": 1322,
        "state": "closed",
        "title": "Be tolerant of missing keys on an update with an index. #1319",
        "body": "@michaelcahill Here is one possible fix for the WT_NOTFOUND issue when doing an update instead of an insert.  Please review.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 28, 2014 at 19:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Oct 29, 2014 at 04:43 GMT",
        "merged_at": "Wednesday Oct 29, 2014 at 04:43 GMT"
    },
    {
        "key": null,
        "number": 1320,
        "state": "closed",
        "title": "Readwrite locks split",
        "body": "@michaelcahill, this is the code to change read/write locks to no longer track if an exclusive lock was acquired by the caller, instead track in the code if we acquired an exclusive lock and choose the correct unlock call based on that information.\n\nI'm still planning to write some test code for this work, but wanted to push it so you can look at it (I'll also call out a few of the changes for special attention).\n",
        "base_ref": "readwrite-locks",
        "created_at": "Tuesday Oct 28, 2014 at 12:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Oct 29, 2014 at 04:41 GMT",
        "merged_at": "Wednesday Oct 29, 2014 at 04:41 GMT"
    },
    {
        "key": null,
        "number": 1314,
        "state": "closed",
        "title": "Add a new WT_SESSION::transaction_range_pin method.",
        "body": "Can be used by applications to identify sessions that are keeping\ntransaction IDs pinned.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 27, 2014 at 00:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Oct 27, 2014 at 01:51 GMT",
        "merged_at": "Monday Oct 27, 2014 at 01:51 GMT"
    },
    {
        "key": null,
        "number": 1312,
        "state": "closed",
        "title": "read/write locks",
        "body": "A new implementation of read/write locks for POSIX systems, hopefully solving the problem that POSIX pthreads implementations generally disallow any thread but the original locker from unlocking a read/write lock.\n\nReference #1277.\n\nNot ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Saturday Oct 25, 2014 at 20:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Wednesday Oct 29, 2014 at 04:42 GMT",
        "merged_at": "Wednesday Oct 29, 2014 at 04:42 GMT"
    },
    {
        "key": null,
        "number": 1310,
        "state": "closed",
        "title": "Enhancements for MongoDB",
        "body": "Changes to help detect and fix some problems when running the MongoDB test suite.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 24, 2014 at 06:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Monday Oct 27, 2014 at 03:37 GMT",
        "merged_at": "Monday Oct 27, 2014 at 03:37 GMT"
    },
    {
        "key": null,
        "number": 1308,
        "state": "closed",
        "title": "Ensure that there are switch work units for LSM trees that need them.",
        "body": "Two cases where switches may be needed are:\n    \\* Failed switches that still have NEED_SWITCH set\n    \\* If a thread is blocked waiting for a switch.\n\nReferences #1305\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 23, 2014 at 04:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:57 GMT",
        "closed_at": "Thursday Oct 23, 2014 at 22:35 GMT",
        "merged_at": "Thursday Oct 23, 2014 at 22:35 GMT"
    },
    {
        "key": null,
        "number": 1304,
        "state": "closed",
        "title": "Fixup LSM drop:",
        "body": "- If a bloom drop succeeded but the chunk drop failed, we could skip the\n  metadata update. Which would lead to a confused LSM tree after restart.\n- Handle the case where an LSM tree is missing obsolete files more gracefully.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 22, 2014 at 04:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 22, 2014 at 05:42 GMT",
        "merged_at": "Wednesday Oct 22, 2014 at 05:42 GMT"
    },
    {
        "key": null,
        "number": 1303,
        "state": "closed",
        "title": "Add long transaction support to wtperf.",
        "body": "Enabled by adding ops_per_txn to thread configuration groups.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 21, 2014 at 22:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 22, 2014 at 14:31 GMT",
        "merged_at": "Wednesday Oct 22, 2014 at 14:31 GMT"
    },
    {
        "key": null,
        "number": 1301,
        "state": "closed",
        "title": "Remove dead code from __checkpoint_worker",
        "body": "Remove dead code from the __checkpoint_worker preamble, we should never be asked to checkpoint a file for which there's no metadata entry.\n\n@agorrod, @michaelcahill -- I was looking at f597615 and something occurred to me. In `__checkpoint_worker` there's this code:\n\n```\n/*\n * Get the list of checkpoints for this file.  If there's no reference\n * to the file in the metadata (the file is dead), then discard it from\n * the cache without bothering to write any dirty pages.\n */\nif ((ret = __wt_meta_ckptlist_get(\n    session, dhandle->name, &ckptbase)) == WT_NOTFOUND) {\n        WT_ASSERT(session, session->dhandle->session_ref == 0);\n        return (__wt_cache_op(session, NULL, WT_SYNC_DISCARD));\n}\n```\n\nIs it possible a change on a file's page might not be globally visible after its metadata entry has been removed?\n\n`WT_SESSION.drop` of an object closes the open handles before it removes the object from the metadata, which means that if the object has been modified, we're going through the checkpoint code as part of closing open handles while there's still a metadata entry, so there's no problem there.\n\nIs there any way you can remove an object from the metadata without closing all of its open handles? (Closing open handles is key, of course, because a checkpoint looks for open handles, not entries in the metadata.)\n\nIf the answer is \"no\", I think this code is dead and should be removed, we should never be checkpointing an object that doesn't appear in the metadata.\n\nIf it's possible to remove an object from the metadata without closing all open handles first, I think there's a problem, because the new check in `__evict_file` could return EBUSY on a file being discarded via the `__checkpoint_worker` function.\n\nThis code has been in the tree since this function was first written, and I'm suspicious it's a holdover from when checkpoint was more involved in discarding files from the cache. So my guess... is that this code is dead.\n\nReference #1299.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 21, 2014 at 13:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 22, 2014 at 00:36 GMT",
        "merged_at": "Wednesday Oct 22, 2014 at 00:36 GMT"
    },
    {
        "key": null,
        "number": 1299,
        "state": "closed",
        "title": "If a checkpoint operation fails on a tree, make sure it ends up marked dirty",
        "body": "When discarding a tree, if there are updates that are too recent to discard, fail with EBUSY rather than asserting.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 21, 2014 at 04:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 21, 2014 at 04:43 GMT",
        "merged_at": "Tuesday Oct 21, 2014 at 04:43 GMT"
    },
    {
        "key": null,
        "number": 1298,
        "state": "closed",
        "title": "Json load lint",
        "body": "Resolve lint and coverity issues with recent changes for JSON loading.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 20, 2014 at 17:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 20, 2014 at 19:53 GMT",
        "merged_at": "Monday Oct 20, 2014 at 19:53 GMT"
    },
    {
        "key": null,
        "number": 1297,
        "state": "closed",
        "title": "Take more care clearing WT_CURSTD_VALUE_INT",
        "body": "Now that we use it internally to decide when to make copies of values.  In particular, clear it when leaving LSM operations that don't return a value, and when entering file operations that don't take a value.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 20, 2014 at 06:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 20, 2014 at 21:35 GMT",
        "merged_at": "Monday Oct 20, 2014 at 21:35 GMT"
    },
    {
        "key": null,
        "number": 1295,
        "state": "closed",
        "title": "Java exceptions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Oct 20, 2014 at 01:07 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Thursday Oct 30, 2014 at 21:19 GMT",
        "merged_at": "Thursday Oct 30, 2014 at 21:19 GMT"
    },
    {
        "key": "ng-",
        "number": 1291,
        "state": "closed",
        "title": "Improvements for long-running transactions",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Oct 18, 2014 at 02:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 20, 2014 at 01:01 GMT",
        "merged_at": "Monday Oct 20, 2014 at 01:01 GMT"
    },
    {
        "key": null,
        "number": 1290,
        "state": "closed",
        "title": "Change linked CRT default.",
        "body": "Statically linked CRT is now the default.\nDynamically linked CRT is an option.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 17, 2014 at 20:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 17, 2014 at 21:01 GMT",
        "merged_at": "Friday Oct 17, 2014 at 21:01 GMT"
    },
    {
        "key": null,
        "number": 1289,
        "state": "closed",
        "title": "Fix _wt_epoch",
        "body": "Fix _wt_epoch\n\nCleanup SConstruct, and add more details to os_open errors\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 17, 2014 at 19:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 17, 2014 at 19:35 GMT",
        "merged_at": "Friday Oct 17, 2014 at 19:35 GMT"
    },
    {
        "key": null,
        "number": 1288,
        "state": "closed",
        "title": "Rename WT_DEADLOCK to WT_ROLLBACK, reference #1204.",
        "body": "Reference #1204.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 17, 2014 at 11:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:40 GMT",
        "closed_at": "Sunday Oct 19, 2014 at 22:14 GMT",
        "merged_at": "Sunday Oct 19, 2014 at 22:14 GMT"
    },
    {
        "key": null,
        "number": 1287,
        "state": "closed",
        "title": "Port all examples, most tests, and wtperf to Windows",
        "body": "Added windows_shim to emulate most posix functions\n\nPorting format found several issues.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 17, 2014 at 00:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 17, 2014 at 00:14 GMT",
        "merged_at": "Friday Oct 17, 2014 at 00:14 GMT"
    },
    {
        "key": null,
        "number": 1286,
        "state": "closed",
        "title": "Windows Fixes",
        "body": "- _aligned_malloc is required to be paired with _aligned_free which different then the POSIX so the CRT cannot support aligned memory allocation as wired tiger requires\n- Fix WT_LEADING_ZEROS by copying the assembly copy of __builtin_clzll.\n- Only test_compact.py, and test_backup03.py fail have the only unknown failures now\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 16, 2014 at 23:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 16, 2014 at 23:59 GMT",
        "merged_at": "Thursday Oct 16, 2014 at 23:59 GMT"
    },
    {
        "key": null,
        "number": 1285,
        "state": "closed",
        "title": "Add changelog for 2.4.0",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Oct 16, 2014 at 00:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 16, 2014 at 04:12 GMT",
        "merged_at": "Thursday Oct 16, 2014 at 04:12 GMT"
    },
    {
        "key": null,
        "number": 1284,
        "state": "closed",
        "title": "Introduce new typedefs for pthread typedefs in platform agnostic code",
        "body": "Currently the Windows port creates typedefs for pthread typedefs instead of WT using platform agnostic typedefs for its platform agnostic code.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 15, 2014 at 23:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Oct 19, 2014 at 21:46 GMT",
        "merged_at": "Sunday Oct 19, 2014 at 21:46 GMT"
    },
    {
        "key": null,
        "number": 1281,
        "state": "closed",
        "title": "Fix error in Windows CRC calculation for unaligned buffers.",
        "body": "The error would only show up if buffers are unaligned to 4 byte boundary.  (Tested with unaligned buffers under OSX).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 14, 2014 at 15:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 14, 2014 at 16:31 GMT",
        "merged_at": "Tuesday Oct 14, 2014 at 16:31 GMT"
    },
    {
        "key": null,
        "number": 1278,
        "state": "closed",
        "title": "Fallocate restructure - Windows Support",
        "body": "Add a second file handle to only do allocation and truncation.\n",
        "base_ref": "fallocate-restructure",
        "created_at": "Monday Oct 13, 2014 at 23:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 13, 2014 at 23:54 GMT",
        "merged_at": "Monday Oct 13, 2014 at 23:54 GMT"
    },
    {
        "key": null,
        "number": 1276,
        "state": "closed",
        "title": "Fix Windows os_dir.c, and os_ftruncate.c. Correctly enable hardware chksum",
        "body": "Fix Windows os_dir.c. @michaelcahill was correct that this function was not returning the correct list of files. I need to append *. I used a WT_ITEM for the buffer. Let me know if you would like me to change it.\n\nFix missing return in os_ftruncate.c.\nCorrectly enable hardware chksum. I had disabled debugging a chksum error which had nothing to do with the chksum code.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 13, 2014 at 20:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 13, 2014 at 22:01 GMT",
        "merged_at": "Monday Oct 13, 2014 at 22:01 GMT"
    },
    {
        "key": null,
        "number": 1275,
        "state": "closed",
        "title": "add config validation for Windows config",
        "body": "Based on @keithbostic s_win file, I added the script to s_all. I also moved os_win_wiredtiger_config.h to build_win/wiredtiger_config.h, and fixed up all the scripts, and files.\n\nBuild: MacOS & Windows\nScripts: MacOS\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 13, 2014 at 17:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 13, 2014 at 19:06 GMT",
        "merged_at": "Monday Oct 13, 2014 at 19:06 GMT"
    },
    {
        "key": null,
        "number": 1274,
        "state": "closed",
        "title": "Basecfg version",
        "body": "@michaelcahill, @agorrod, here's a first attempt at adding versioning and upgrade support to the base configuration file, reference #1244.\n\nWould you please take a look and then let's talk it over?\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 12, 2014 at 20:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 15, 2014 at 23:19 GMT",
        "merged_at": "Wednesday Oct 15, 2014 at 23:19 GMT"
    },
    {
        "key": null,
        "number": 1273,
        "state": "closed",
        "title": "Fallocate restructure",
        "body": "@michaelcahill, would you please review this pair of changes? I don't like the way this is structured, much, but I couldn't think of anything cleaner\n\nI think the commit comments explain what's going on, and I'm going to add a few specific review notes to the code as well.\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 12, 2014 at 13:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 13, 2014 at 23:19 GMT",
        "merged_at": "Monday Oct 13, 2014 at 23:19 GMT"
    },
    {
        "key": null,
        "number": 1272,
        "state": "closed",
        "title": "MSVC & Clang Warning Cleanup",
        "body": "Ran the code through MSVC & Clang. It helped fine some bugs.\n\nImplemented fallocate, and fixed ftruncate to handle mapped files by returning EBUSY.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 10, 2014 at 22:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 10, 2014 at 22:47 GMT",
        "merged_at": "Friday Oct 10, 2014 at 22:47 GMT"
    },
    {
        "key": null,
        "number": 1271,
        "state": "closed",
        "title": "chksum with MSVC Intrinsics",
        "body": "Add a version of chksum that uses MSVC intrinsics to compute CRC32 similar to the GCC version.\n\nThe intrinsics are documented here:\nhttps://software.intel.com/sites/landingpage/IntrinsicsGuide/\nhttp://msdn.microsoft.com/en-us/library/hskdteyh.aspx\n\nThe predefined MSVC macros are documented here:\nhttp://msdn.microsoft.com/en-us/library/b0084kay.aspx\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 10, 2014 at 21:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday Oct 10, 2014 at 22:41 GMT",
        "merged_at": "Friday Oct 10, 2014 at 22:41 GMT"
    },
    {
        "key": null,
        "number": 1270,
        "state": "closed",
        "title": "Fix backup on Windows by using O_BINARY",
        "body": "Use Binary mode for reading & writing files on Windows instead of text mode.\n\nFor reference\nhttp://msdn.microsoft.com/en-us/library/ktss1a9b.aspx\n\nBuilt on Mac OS 10.9\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 10, 2014 at 19:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 10, 2014 at 19:45 GMT",
        "merged_at": "Friday Oct 10, 2014 at 19:45 GMT"
    },
    {
        "key": null,
        "number": 1269,
        "state": "closed",
        "title": "posix_fallocate fails on Solaris except for UFS",
        "body": "Reference #1267.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 09, 2014 at 19:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 09, 2014 at 20:29 GMT",
        "merged_at": "Thursday Oct 09, 2014 at 20:29 GMT"
    },
    {
        "key": null,
        "number": 1268,
        "state": "closed",
        "title": "Minor Windows SConstruct & Build fixes",
        "body": "Minor SConstruct fixes, and formatting\n\nos_thread.c build fix\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 09, 2014 at 19:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 09, 2014 at 19:13 GMT",
        "merged_at": "Thursday Oct 09, 2014 at 19:13 GMT"
    },
    {
        "key": null,
        "number": 1266,
        "state": "closed",
        "title": "Windows port",
        "body": "Currently, these changes are based onto of my earlier pull request. Let me know if you like me to rebase after the first pull request is merged.\n\nAdd SCons support for building wildtiger.lib & wt.exe\n\nChecked in a special header called os_win_wiredtiger_config.h since scons cannot generate the autotools config.h header\n\nAdded:\n\n```\nos_win directory full of Windows OS versions of WT OS compat layer\nos_windows.h for Windows (windows.h is already reserved by the OS)\nmsvc.h for the compiler\n```\n\nIn terms of preprocessor defines,\n_WIN32 is Windows\n_MVC_VER is the Microsoft Visual C compiler\n\nTest framework update will be sent in a separate pull request\n\nI will happy to address any KNF style issues myself. I tried to\n\nTwo hacky changes:\n1. err.c - I inlined the ifdefs into this file for Windows\n2. filename.c - I also inlined the platform ifdefs into this file\n\nTodos left\n\n```\nfallocate, and dlopen for standalone dlls\ncrc intrinsic support\n```\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 09, 2014 at 00:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 09, 2014 at 12:34 GMT",
        "merged_at": "Thursday Oct 09, 2014 at 12:34 GMT"
    },
    {
        "key": null,
        "number": 1265,
        "state": "closed",
        "title": "Add reads from a checkpoint.",
        "body": "@michaelcahill, some changes I've been meaning to do for awhile, to read from checkpoints (and block checkpoint deletion in the engine so we know that works).\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 08, 2014 at 19:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 13, 2014 at 00:07 GMT",
        "merged_at": "Monday Oct 13, 2014 at 00:07 GMT"
    },
    {
        "key": null,
        "number": 1263,
        "state": "closed",
        "title": "Add additional parameter to map/unmap functions to maintain more context",
        "body": "In order to map a file in Windows, a file mapping must be created on a file first. A File Mapping is represented by an HANDLE, and I have treated it as a void\\* **cookie** that must be passed around the various map/unmap functions to remain platform neutral.\n\nBuilt on MacOS 10.9.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 08, 2014 at 15:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 09, 2014 at 12:34 GMT",
        "merged_at": "Thursday Oct 09, 2014 at 12:34 GMT"
    },
    {
        "key": null,
        "number": 1262,
        "state": "closed",
        "title": "Truncate with mapping",
        "body": "These are the changes for #1254.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 07, 2014 at 20:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 07, 2014 at 22:58 GMT",
        "merged_at": "Tuesday Oct 07, 2014 at 22:58 GMT"
    },
    {
        "key": "in-",
        "number": 1260,
        "state": "closed",
        "title": "Have LSM compact wait for in-progress merges to complete. #1259",
        "body": "@michaelcahill Please review these changes to compact and merging.  I found that compact was thinking all the work was done much sooner than it actually was, returning too early and not completing the compact/merges, when other merges were in progress.  \n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 07, 2014 at 18:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 07, 2014 at 23:26 GMT",
        "merged_at": "Tuesday Oct 07, 2014 at 23:26 GMT"
    },
    {
        "key": null,
        "number": 1258,
        "state": "closed",
        "title": "Java doc examples",
        "body": "Add (somewhat general) multiple language doc support, and added java language doc for 19 pages under 'Writing WiredTiger applications in Java', with references to new java example files.\n\nKnown deficiencies: from the Java documentation, there are about 40 @ref 'C' versions of documentation, that in most cases should be to the Java pages. That can be done on a case by case basis (will do next). Javadoc @refs (pulled in via @copydoc) also do not yet reference these pages or java examples.  I haven't figured out how to hook into @copydoc to get this done.  I guess it's possible to do a post processing step on the doc tree.\n\nWanted to get this out for review in the meantime, it's rather usable as is.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 06, 2014 at 20:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 15, 2014 at 01:15 GMT",
        "merged_at": "Wednesday Oct 15, 2014 at 01:15 GMT"
    },
    {
        "key": null,
        "number": 1257,
        "state": "closed",
        "title": "Add WT_STATIC_ASSERT calls to the atomic operation macros so we don't choose the wrong macro.",
        "body": "@markbenvenuto, @michaelcahill: I have exactly no confidence we'll not change the size of some structure field and get the choice of macro wrong, so I've added `WT_STATIC_ASSERT` calls to the gcc versions of these macros. We might want to do the same thing for Windows (although, obviously, if gcc and MSVC use different sizes for the fields, we will need different macro names, but at least we'll catch the failure).\n\nI stared at this for awhile, and couldn't think of anything else that might work that wasn't hugely ugly and/or invasive, I'd love to hear a better idea.\n",
        "base_ref": "develop",
        "created_at": "Saturday Oct 04, 2014 at 17:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 06, 2014 at 12:15 GMT",
        "merged_at": "Monday Oct 06, 2014 at 12:15 GMT"
    },
    {
        "key": null,
        "number": 1256,
        "state": "closed",
        "title": "Add size specific atomics for 1, 4 & 8 byte atomic operations",
        "body": "Some compilers use size specific intrinsics for atomics instead of GCC/Clang's automatic size derivation.\n\nI added macros for 1, 4, and 8 byte atomics. I did not find any use of 2 byte atomics so I did not add any at this time. I could add them for uniformity.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 03, 2014 at 18:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Saturday Oct 04, 2014 at 14:00 GMT",
        "merged_at": "Saturday Oct 04, 2014 at 14:00 GMT"
    },
    {
        "key": "ne-",
        "number": 1255,
        "state": "closed",
        "title": "Create a os shim for one-time initialization",
        "body": "I created a shim for one-time initialization to remove global.c's dependency on pthread.\n\nThe only downside of this implementation is that you cannot support multiple different one time init functions (i.e., _wt_global_once) in a process since pthread_once_t is a static of __wt_once. Let me know is this is an unsuitable design limitation.\n\nTested on MacOS.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 03, 2014 at 18:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Saturday Oct 04, 2014 at 12:32 GMT",
        "merged_at": "Saturday Oct 04, 2014 at 12:32 GMT"
    },
    {
        "key": null,
        "number": 1253,
        "state": "closed",
        "title": "Introduce a new type to replace off_t called wt_off_t",
        "body": "Introduce a new type to replace off_t called wt_off_t since off_t is 32-bits on Windows regardless of target architecture.\n\nKey changes are in:\nsrc/include/wiredtiger.in.\nverify_build.h basically remains the same for now. I will add Windows exceptions later.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 02, 2014 at 22:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 02, 2014 at 23:29 GMT",
        "merged_at": "Thursday Oct 02, 2014 at 23:29 GMT"
    },
    {
        "key": null,
        "number": 1248,
        "state": "closed",
        "title": "Lsm threads",
        "body": "Not yet ready to merge.  Allow reconfigure and stop/start LSM threads.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 24, 2014 at 00:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 25, 2014 at 22:14 GMT",
        "merged_at": "Thursday Sep 25, 2014 at 22:14 GMT"
    },
    {
        "key": null,
        "number": 1243,
        "state": "closed",
        "title": "Fix a bug in configuration parsing for lists.",
        "body": "Introduced by the configuration folding change. We were attempting\nto parse sub-configs of empty settings.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 22, 2014 at 03:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Tuesday Sep 23, 2014 at 01:56 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1241,
        "state": "closed",
        "title": "Reconciliation boundary initialization cleanup.",
        "body": "This is a relatively minor cleanup, once it's passed the merge tests, I'm going to merge it.\n",
        "base_ref": "develop",
        "created_at": "Sunday Sep 21, 2014 at 13:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Sep 21, 2014 at 14:16 GMT",
        "merged_at": "Sunday Sep 21, 2014 at 14:16 GMT"
    },
    {
        "key": null,
        "number": 1238,
        "state": "closed",
        "title": "Remove lsm=(merge_threads) configuration option.",
        "body": "It's been replaced by lsm_manager=(worker_thread_max). Update\nall places it was used in our tree, and add note to upgrade doc.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 19, 2014 at 02:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 22, 2014 at 16:08 GMT",
        "merged_at": "Monday Sep 22, 2014 at 16:08 GMT"
    },
    {
        "key": null,
        "number": 1235,
        "state": "closed",
        "title": "Cursor uri protect",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 18, 2014 at 08:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Monday Sep 22, 2014 at 12:14 GMT",
        "merged_at": "Monday Sep 22, 2014 at 12:14 GMT"
    },
    {
        "key": "ow-",
        "number": 1232,
        "state": "closed",
        "title": "Fix row-search error handling.",
        "body": "@sueloverso, would you please review & merge this change when you're happy with it?\n\nThank you!\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 17, 2014 at 21:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 18, 2014 at 18:16 GMT",
        "merged_at": "Thursday Sep 18, 2014 at 18:16 GMT"
    },
    {
        "key": null,
        "number": 1231,
        "state": "closed",
        "title": "Lsm cleanup",
        "body": "@agorrod This isn't ready to merge yet as I'm still making changes, but I'm creating this so that you can easily look at the code so far.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 17, 2014 at 01:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 18, 2014 at 22:55 GMT",
        "merged_at": "Thursday Sep 18, 2014 at 22:55 GMT"
    },
    {
        "key": null,
        "number": 1227,
        "state": "closed",
        "title": "Close debug",
        "body": "Not ready for merge.  But to make it easy to discuss and see the changes.  I modified my original change to get rid of the special return call and instead sprinkled `WT_ASSERT` anywhere we return EBUSY.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 15, 2014 at 15:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 25, 2014 at 18:41 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1226,
        "state": "closed",
        "title": "Fix a hang in LSM compact. Refs #1225",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Sep 15, 2014 at 02:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 15, 2014 at 02:51 GMT",
        "merged_at": "Monday Sep 15, 2014 at 02:51 GMT"
    },
    {
        "key": null,
        "number": 1224,
        "state": "closed",
        "title": "Fix shared variable collisions in random number generation.",
        "body": "Reference #1223.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 13, 2014 at 13:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 15, 2014 at 00:25 GMT",
        "merged_at": "Monday Sep 15, 2014 at 00:25 GMT"
    },
    {
        "key": null,
        "number": 1219,
        "state": "closed",
        "title": "Review where we're passing WT_CONNECTION_IMPL instead of WT_SESSION_IMPL",
        "body": "@sueloverso, here are the changes that largely limit passing `WT_CONNECTION_IMPL` to the `__wt_connection_XXX` functions.\n\nI ended up searching `include/extern.h` for functions that took WT_CONNECTION_IMPL as an argument, and searching for all uses of `WT_CONNECTION_IMPL.default_session`, and switching to passing WT_SESSION_IMPL in the cases where I thought it made sense to do so.\n\nPlease review and merge if/when you think it's right!\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 12, 2014 at 11:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 15, 2014 at 15:54 GMT",
        "merged_at": "Monday Sep 15, 2014 at 15:54 GMT"
    },
    {
        "key": null,
        "number": 1218,
        "state": "closed",
        "title": "Move cascading string comparisons into a switch statement.",
        "body": "Cursor open should be as light weight as possible.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 12, 2014 at 08:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Sep 12, 2014 at 12:10 GMT",
        "merged_at": "Friday Sep 12, 2014 at 12:10 GMT"
    },
    {
        "key": null,
        "number": 1215,
        "state": "closed",
        "title": "Support custom key extractors for indexes",
        "body": "Not yet ready for merge: this currently just changes the `WT_EXTRACTOR` API to allow for multiple keys.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 11, 2014 at 11:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Tuesday Nov 04, 2014 at 05:22 GMT",
        "merged_at": "Tuesday Nov 04, 2014 at 05:22 GMT"
    },
    {
        "key": null,
        "number": 1214,
        "state": "closed",
        "title": "Reconfigure cleanup",
        "body": "@agorrod, @sue -- this is the last piece of #1172.\n\nNow we're merging the configuration strings, I changed the underlying reconfigure functions to error in the case of not-found being returned for a configuration string, because we're supposed to have all of them, all the time, now.\n\nSue, you agreed to do the review.  (I tried to keep the commits separate so it's not a monolithic chunk.)\n\nAlex, I'm copying you on this one because there were a couple of functions I wasn't sure how to fix. Specifically, this chunk in `__wt_cache_config`:\n\n```\n/*\n * If not using a shared cache configure the cache size, otherwise\n * check for a reserved size.\n */\nif (!F_ISSET(conn, WT_CONN_CACHE_POOL) &&\n    (ret = __wt_config_gets(session, cfg, \"cache_size\", &cval)) == 0)\n        conn->cache_size = (uint64_t)cval.val;\n\nif (F_ISSET(conn, WT_CONN_CACHE_POOL) &&\n    (ret = __wt_config_gets(session, cfg,\n    \"shared_cache.reserve\", &cval)) == 0 && cval.val != 0)\n        cache->cp_reserved = (uint64_t)cval.val;\nelse if ((ret = __wt_config_gets(session, cfg,\n    \"shared_cache.chunk\", &cval)) == 0)\n        cache->cp_reserved = (uint64_t)cval.val;\nWT_RET_NOTFOUND_OK(ret);\n```\n\nand pretty much all of `__wt_cache_pool_config`.  I'll try and catch up with you tonight and talk those over.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 10, 2014 at 22:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 11, 2014 at 16:50 GMT",
        "merged_at": "Thursday Sep 11, 2014 at 16:50 GMT"
    },
    {
        "key": null,
        "number": 1213,
        "state": "closed",
        "title": "Force all",
        "body": "@agorrod Please review this.  It contains moving the one line for the aggressive we talked about last night.  I added the LSM table name to a bunch of verbose output.  I added a loop in flush so that when we force a flush we make sure to flush all chunks.  I think this will make the medium-compact run consistently better performance.\n\nThe code is still doing unexpected things in medium-lsm-multi that impact performance.  The compacts do not fully merge with multiple tables and I haven't yet figured out why.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 09, 2014 at 20:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 11, 2014 at 23:45 GMT",
        "merged_at": "Thursday Sep 11, 2014 at 23:45 GMT"
    },
    {
        "key": null,
        "number": 1212,
        "state": "closed",
        "title": "Fastpath the 'Q' format.",
        "body": "@michaelcahill, looking at Dimitri's test case this morning, it occurred to me it might be worth fast-pathing the Q format, assuming applications use record numbers as primary keys.  Here's the obvious change, but feel free to discard it if you don't think it's worthwhile.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 09, 2014 at 17:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Sep 10, 2014 at 02:27 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1206,
        "state": "closed",
        "title": "Add force flag to checkpoint last chunk. #1200",
        "body": "@agorrod Here's a fix that recovers the performance for medium-lsm-compact.wtperf.  The problem, as described in #1200 was that the final chunk was not checkpointed.  This fix adds a force flag to the flush work unit that compact pushes onto the work queue and the force flag changes the end chunk looked for by the flush code.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 08, 2014 at 20:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 08, 2014 at 23:52 GMT",
        "merged_at": "Monday Sep 08, 2014 at 23:52 GMT"
    },
    {
        "key": null,
        "number": 1205,
        "state": "closed",
        "title": "Config merge",
        "body": "@michaelcahill, here's the code to do config merges separately from config collapse.\n\nReference #1172.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 08, 2014 at 19:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Sep 09, 2014 at 11:58 GMT",
        "merged_at": "Tuesday Sep 09, 2014 at 11:58 GMT"
    },
    {
        "key": null,
        "number": 1203,
        "state": "closed",
        "title": "WT_WITH_SCHEMA_LOCK, WT_SESSION_SCHEMA_LOCKED don't need to spin",
        "body": "@agorrod, would you please review?\n\nReference #1202.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 05, 2014 at 11:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 08, 2014 at 00:15 GMT",
        "merged_at": "Monday Sep 08, 2014 at 00:15 GMT"
    },
    {
        "key": null,
        "number": 1197,
        "state": "closed",
        "title": "Move LSM manager initialization into main thread.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Sep 04, 2014 at 02:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 04, 2014 at 02:26 GMT",
        "merged_at": "Thursday Sep 04, 2014 at 02:26 GMT"
    },
    {
        "key": null,
        "number": 1195,
        "state": "closed",
        "title": "Use a condition variable in LSM worker threads to sleep when there is no work to do",
        "body": "@agorrod, can you please review?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 03, 2014 at 01:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Sep 03, 2014 at 04:03 GMT",
        "merged_at": "Wednesday Sep 03, 2014 at 04:03 GMT"
    },
    {
        "key": null,
        "number": 1184,
        "state": "closed",
        "title": "Turn off autobrief for pages in the documentation, do a pass for naming structure",
        "body": "Here's my suggested fix for the auto brief issue raised in #1150.\n\nWhat I've done is added a filter that transforms `*.dox` files on-the-fly to use javadoc-style comments, and turned off `JAVADOC_AUTOBRIEF`.  That should mean we can keep doing what we've been doing, and there will never be brief sections in the reference guide, but the API docs will be unchanged.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 29, 2014 at 03:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 29, 2014 at 12:48 GMT",
        "merged_at": "Friday Aug 29, 2014 at 12:48 GMT"
    },
    {
        "key": null,
        "number": 1182,
        "state": "closed",
        "title": "Change format to test incremental backup.",
        "body": "@michaelcahill, I think this one is yours.\n\nThe interesting changes are the incremental backup, of course, but also how we're rolling die to figure out when to do the next checkpoint operation, we've tweaked that over time and this change might break that.\n\nOne new feature is the ability to set a timer for the runs, I'd suggest our stress runs should include some longer runs, maybe 10-20 minutes?   Right now we don't do longer runs by default (the default is still randomly picking numbers of operations), but I could easily change that if you want.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 28, 2014 at 12:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 13:51 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1181,
        "state": "closed",
        "title": "Don't reset cursors during transaction begin or commit",
        "body": "This is an API change to allow cursors to iterate and perform explicit transaction on each record (assuming the transactions commit).\n\nThe main reason we didn't do this before was that we cleared the `snap_min` value published by the transaction when it committed, which is the mechanism that protects old versions of data.  Cursors could be pointing to an older version of some record at begin / commit time, so this change has to take that into account and only reset the published `snap_min` value if no cursors are positioned.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 27, 2014 at 21:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday Aug 29, 2014 at 04:33 GMT",
        "merged_at": "Friday Aug 29, 2014 at 04:33 GMT"
    },
    {
        "key": null,
        "number": 1180,
        "state": "closed",
        "title": "Fix session management for shared caches.",
        "body": "- Each participant now has a manager thread\n- Each participant has a shared cache session\n\nRefs issue #1176\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 27, 2014 at 02:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Aug 27, 2014 at 04:33 GMT",
        "merged_at": "Wednesday Aug 27, 2014 at 04:33 GMT"
    },
    {
        "key": null,
        "number": 1178,
        "state": "closed",
        "title": "Add a page to the documentation describing transactional durabililty.",
        "body": "refs #1150\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 25, 2014 at 02:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 25, 2014 at 22:39 GMT",
        "merged_at": "Monday Aug 25, 2014 at 22:39 GMT"
    },
    {
        "key": null,
        "number": 1177,
        "state": "closed",
        "title": "Add more information and examples for the log cursors",
        "body": "@sueloverso, I tried to add more information to the log cursor docs, please merge this if you like it.\n\nA few additional items I was unclear on, or thought we should do more:\n- The record/operations types overlap and that was confusing to me, they definitely need more documentation if we expect applications to use them. I started to try and write that, but quickly lost track.\n- Auto-generating the record/operations types scared me.  The values can't change or log files would break, so adding new values could break the world. Should we hard-code them instead?\n- @michaelcahill, now that applications can see the transaction IDs, should we change it so we don't re-use transaction IDs in the logging case?\n- I can't think of a way an application can use the file ID, it's not mapped to anything useful (and in the case of a table on top of several files, it's worse).  Should we even return it?\n- I'd suggest changing `WT_LOGREC_MESSAGE` to `WT_LOGREC_APPLICATION`, and make it really obvious what's going on.\n",
        "base_ref": "log-printf",
        "created_at": "Saturday Aug 23, 2014 at 18:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 25, 2014 at 22:24 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1175,
        "state": "closed",
        "title": "Add log_printf call to ex_log.  Plus some fixes for it. #1171",
        "body": "@michaelcahill Please review this change to add `log_printf` to the example program.  It also required a few fixes inside the code.  Specifically, on non-commit records, instead of returning the entire raw record, the code now returns just the actual record (i.e. skipping over the header and record type) to the caller.  I think this is ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 21, 2014 at 20:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 25, 2014 at 22:13 GMT",
        "merged_at": "Monday Aug 25, 2014 at 22:13 GMT"
    },
    {
        "key": null,
        "number": 1174,
        "state": "closed",
        "title": "Fixes for MongoDB collators",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Aug 21, 2014 at 00:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Aug 21, 2014 at 02:06 GMT",
        "merged_at": "Thursday Aug 21, 2014 at 02:06 GMT"
    },
    {
        "key": null,
        "number": 1173,
        "state": "closed",
        "title": "Add log_size configuration for checkpoints. #1170",
        "body": "Here are some changes to add log_size for checkpoints, in addition to supporting wait.  @agorrod or @keithbostic please review.  There is a bit of a layering violation in log.c where it uses two checkpoint fields in the connection.  I could create a checkpoint owned function instead.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 20, 2014 at 21:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 25, 2014 at 22:26 GMT",
        "merged_at": "Monday Aug 25, 2014 at 22:26 GMT"
    },
    {
        "key": null,
        "number": 1169,
        "state": "closed",
        "title": "Fix salvage merge",
        "body": "@michaelcahill, I think this is ready for your review & merge.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 19, 2014 at 21:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 25, 2014 at 00:52 GMT",
        "merged_at": "Monday Aug 25, 2014 at 00:52 GMT"
    },
    {
        "key": "rd-",
        "number": 1166,
        "state": "closed",
        "title": "Add discard-filter support",
        "body": "Not yet ready for merge.\n\nReference #1164.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 15, 2014 at 14:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Mar 19, 2015 at 13:48 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1165,
        "state": "closed",
        "title": "Add WT_COLLATOR::customize, allowing collators to be customized",
        "body": "This works for specific data sources, or with application-managed metadata.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 15, 2014 at 08:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 18, 2014 at 05:49 GMT",
        "merged_at": "Monday Aug 18, 2014 at 05:49 GMT"
    },
    {
        "key": "er-",
        "number": 1161,
        "state": "closed",
        "title": "Add a new per-session flag, WT_SESSION_CAN_WAIT",
        "body": "@michaelcahill, here's the change we discussed, plus a couple of semi-related odds-and-ends (all on separate commits, so you can cherry-pick or revert easily if you want).\n\nReference #1152.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 13, 2014 at 14:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 15, 2014 at 06:27 GMT",
        "merged_at": "Friday Aug 15, 2014 at 06:27 GMT"
    },
    {
        "key": null,
        "number": 1160,
        "state": "closed",
        "title": "Add flags to page release, respect WT_READ_NO_GEN to avoid forced eviction",
        "body": "FTR, this is what I had in mind instead of #1134.\n\nrefs #1128, #1134\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 13, 2014 at 00:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday Aug 15, 2014 at 13:46 GMT",
        "merged_at": "Friday Aug 15, 2014 at 13:46 GMT"
    },
    {
        "key": null,
        "number": 1159,
        "state": "closed",
        "title": "Start eviction workers based on the dirty target",
        "body": "... rather than when the cache becomes over 100% full.  Eviction workers can hurt some read-only workloads.\n\nrefs #1158\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 12, 2014 at 05:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 18, 2014 at 00:31 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1156,
        "state": "closed",
        "title": "Replace lexical defines with inline functions",
        "body": "@michaelcahill, this is a minor change to replace the WT_LEX_CMP #defines inline functions.  For some reason I can't figure out, the #defines confuse zoom, it claims the comparison functions aren't taking as much time as they are, and inlining them seems to fix that problem.  We might as well be consistent and use inlined functions instead of a mixture of inlined functions and #defines, anyway.\n\nThis shouldn't affect performance (and if anything slows down, well, that tells us to convert the existing lexicographic inlined functions to #defines!)\n\nIt's a pull request in case you're planning a release, but otherwise, this can be merged as soon as it passes the usual tests.\n",
        "base_ref": "develop",
        "created_at": "Sunday Aug 10, 2014 at 17:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 11, 2014 at 00:13 GMT",
        "merged_at": "Monday Aug 11, 2014 at 00:13 GMT"
    },
    {
        "key": null,
        "number": 1155,
        "state": "closed",
        "title": "Add replay code to Hyperleveldb port. #1106",
        "body": "@michaelcahill Here's a first pass at implementing the ReplayIterator code for the Hyperleveldb port.  Let's discuss it next time we talk as I may have taken a few liberties or made some assumptions along the way.  While it builds cleanly, I didn't see any obvious test code, so it is not yet ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 07, 2014 at 18:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Aug 28, 2014 at 00:50 GMT",
        "merged_at": "Thursday Aug 28, 2014 at 00:50 GMT"
    },
    {
        "key": null,
        "number": 1154,
        "state": "closed",
        "title": "Add JSON loading to cursors and wt load utility. refs #740.",
        "body": "Allow set_key and set_value on JSON cursors.  The argument is a string\nthat is interpreted as JSON and must match the format created by a JSON\ndump cursor or the 'wt dump -j' command.\n\nAdd -j option to 'wt load' utility to allow loading JSON.\n\nSmall adjustment to Python interface so that JSON cursor key/values inputs\nare always treated as strings.\n\nAdded doc and Python tests for JSON cursors and wt load -j.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 07, 2014 at 01:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 15, 2014 at 00:55 GMT",
        "merged_at": "Wednesday Oct 15, 2014 at 00:55 GMT"
    },
    {
        "key": null,
        "number": 1149,
        "state": "closed",
        "title": "Add nvd3 wtperf example to doc. #1147",
        "body": "@keithbostic take a look at this and see if you like the direction it is taking for the wtperf charts.  We might want to choose a different sample config to run and display.  But the infrastructure is here.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 04, 2014 at 19:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 08, 2014 at 02:16 GMT",
        "merged_at": "Friday Aug 08, 2014 at 02:16 GMT"
    },
    {
        "key": null,
        "number": 1148,
        "state": "closed",
        "title": "Add a section to docs for async operations. #1139",
        "body": "@keithbostic Please take a first pass at reviewing these pages.  There is a spelling warning about `OPTYPE` that is coming from `WT_ASYNC_OPTYPE`, but I suspect that I am missing something to get that whole string accepted rather than just the `OPTYPE` substring.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 04, 2014 at 18:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Tuesday Aug 05, 2014 at 16:12 GMT",
        "merged_at": "Tuesday Aug 05, 2014 at 16:12 GMT"
    },
    {
        "key": null,
        "number": 1147,
        "state": "closed",
        "title": "Add a wtperf page to the documentation.",
        "body": "@agorrod, @michaelcahill -- I took a run at adding a wtperf page to the documentation, I thought it might be useful for people wanting to simulate workloads (and maybe we'll have to debug fewer homegrown specials?)\n\nI included a list of wtperf configuration options in the page (output by the new -Q option to wtperf). I don't see any easy way to automatically build that list, since wtperf might not be built when we're building the documentation, so that's probably a new step in the release-generation process.\n\nI also did some minor surgery to the front-page of the documentation, splitting up the admin and programming  information.\n\nI thought the next step might be to move some of the statistics logging/visualization information to the same page (https://github.com/wiredtiger/wiredtiger/wiki/WiredTiger-statistics), giving programmers a way to simulate workloads and actually visualize what's happening?\n\nAnyway, if you think this is a good idea, take it, if this isn't worth the effort or will buy us more trouble than it's worth, I'm happy to discard it.\n",
        "base_ref": "develop",
        "created_at": "Saturday Aug 02, 2014 at 14:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Monday Aug 04, 2014 at 07:55 GMT",
        "merged_at": "Monday Aug 04, 2014 at 07:55 GMT"
    },
    {
        "key": null,
        "number": 1146,
        "state": "closed",
        "title": "Grab the live lock when loading a checkpoint in diagnostic mode",
        "body": "@keithbostic's alternative to #1142\n\nrefs #1102\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 01, 2014 at 02:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 01, 2014 at 04:30 GMT",
        "merged_at": "Friday Aug 01, 2014 at 04:30 GMT"
    },
    {
        "key": null,
        "number": 1145,
        "state": "closed",
        "title": "Load live lock diagnostic",
        "body": "@keithbostic's alternative approach to #1142, adds a comment and only acquires the lock in diagnostic builds.\n",
        "base_ref": "master",
        "created_at": "Friday Aug 01, 2014 at 02:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 01, 2014 at 02:29 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1144,
        "state": "closed",
        "title": "Make checkpoint cache handles, not a list of URIs, when flushing leaf pages.",
        "body": "Original references is #1114 and #1136, current reference is #1142.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 31, 2014 at 17:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 01, 2014 at 01:31 GMT",
        "merged_at": "Friday Aug 01, 2014 at 01:31 GMT"
    },
    {
        "key": null,
        "number": 1143,
        "state": "closed",
        "title": "Start and stop eviction worker threads based on demand.",
        "body": "Refs #1116\n\nNot yet ready for merge\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 31, 2014 at 07:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Monday Aug 11, 2014 at 05:05 GMT",
        "merged_at": "Monday Aug 11, 2014 at 05:05 GMT"
    },
    {
        "key": null,
        "number": 1142,
        "state": "closed",
        "title": "Lock the available list when opening a block checkpoint",
        "body": "Reference #1102.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 31, 2014 at 05:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 01, 2014 at 04:30 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1141,
        "state": "closed",
        "title": "Cache metadata reference when creating internal sessions.",
        "body": "@michaelcahill, I tried to change things so we always, where possible, cache a reference to the metadata when creating an internal session.\n\nA couple of notes:\n- We can't open the metadata handle when opening the connection default session and the cache-pool session, the metadata file may not exist; the connection default session opens the metadata explicitly after creating the metadata file, the cache-pool session does nothing special.\n- The txn recovery code doesn't open an \"internal\" session, it opens a normal one.  I wasn't sure if that was deliberate or not, wanted to call it out, just in case.\n\nReference #1073.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 30, 2014 at 19:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 01, 2014 at 04:54 GMT",
        "merged_at": "Friday Aug 01, 2014 at 04:54 GMT"
    },
    {
        "key": null,
        "number": 1140,
        "state": "closed",
        "title": "Bulk skiptest",
        "body": "@michaelcahill Please review this branch.  We may want to throw it away.  When running bulk01 without diagnostic I see:\n\n```\ntest_bulk01.test_bulk_load_row_order.test_bulk_load_row_order_nocheck ... skipped 'requires a diagnostic build'\ntest_bulk01.test_bulk_load_row_order.test_bulk_load_row_order_nocheck ... skipped 'requires a diagnostic build'\n\n----------------------------------------------------------------------\nRan 26 tests in 0.134s\n\nOK (skipped=2)\nERROR in test_bulk_load_row_order.2\nERROR in test_bulk_load_row_order.3\n```\n\nThe reason is that `skipTest` raises an exception.  With this change we get rid of the exception, and its errors, but lose the fact that the tests were skipped:\n\n```\ntest_bulk01.test_bulk_load_row_order.test_bulk_load_row_order_nocheck ... ok\ntest_bulk01.test_bulk_load_row_order.test_bulk_load_row_order_nocheck ... ok\n\n----------------------------------------------------------------------\nRan 26 tests in 0.126s\n\nOK\n```\n\nI think that is better than errors, but we do lose information.\n\nAn alternative I considered, but couldn't figure out how to make work was a decorator of the form:\n`@unittest.skipUnless(conn.diagnostic_build(), 'reason')`\nbut there is no way to access a connection at that level, nor could I figure out where else to put diagnostic_build to make it globally accessible.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 30, 2014 at 19:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday Jul 30, 2014 at 23:48 GMT",
        "merged_at": null
    },
    {
        "key": "id-",
        "number": 1138,
        "state": "closed",
        "title": "Merge the mid-level of the bulk code into the cursor level.",
        "body": "@michaelcahill, if you recall there are 3 chunks of bulk-load code for historical reasons: there used to be a big chunk of btree bulk-load code that I removed almost entirely when I integrated bulk-load into reconciliation.   The stubs that are left do little other than check the key-sort order (row-store), or count up the duplicates (variable-length column-store).\n\nIn short, we have 3 chunks of bulk-load code at the moment, the cursor layer, the reconciliation layer, and some random stuff in the middle.   This branch puts most of the random stuff in the middle into the cursor layer.\n\nThis means the cursor layer owns checking the row-store key sort order (which feels reasonable to me), but also does the duplicate counting for variable-length column-store, which I'm less comfortable with.\n\nAnyway, I thought this might be a way to simplify the layering, feel free to discard it if you disagree.\n",
        "base_ref": "skip-bulk-sort-check",
        "created_at": "Monday Jul 28, 2014 at 18:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jul 28, 2014 at 22:43 GMT",
        "merged_at": "Monday Jul 28, 2014 at 22:43 GMT"
    },
    {
        "key": null,
        "number": 1137,
        "state": "closed",
        "title": "Add draft changelog notes for upcoming 2.3.0 release.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Jul 28, 2014 at 08:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Jul 29, 2014 at 06:24 GMT",
        "merged_at": "Tuesday Jul 29, 2014 at 06:24 GMT"
    },
    {
        "key": null,
        "number": 1136,
        "state": "closed",
        "title": "Don't hold the checkpoint lock when flushing leaf pages",
        "body": "@agorrod, @michaelcahill, an attempt to avoid holding the checkpoint lock until after flushing the leaf pages.\n\nIt's only lightly tested, but so far seems to work.\n\nI have a couple of open questions I'll comment on in the code.\n\nAnyway, if you get a chance, please let me know what you think and if this approach seems good to you.\n\nReference #1114.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 26, 2014 at 00:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday Jul 30, 2014 at 02:45 GMT",
        "merged_at": "Wednesday Jul 30, 2014 at 02:45 GMT"
    },
    {
        "key": "in-",
        "number": 1135,
        "state": "closed",
        "title": "Add a cursor configuration to skip the in-order key check in a row-store bulk load.",
        "body": "@agorrod, here are the changes to skip the in-order key check.  I also exploded the bulk-load cursor routines into one function per type of insert, so this should be about as fast as our current bulk load implementation is going to get.\n\nI'm going to run a quick performance test just to satisfy my curiosity, but you should test it on the workload you think is the right one -- if it's faster for you and you agree with the approach, I think it's ready to merge.\n\nReference #1127.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 25, 2014 at 16:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jul 30, 2014 at 01:36 GMT",
        "merged_at": "Wednesday Jul 30, 2014 at 01:36 GMT"
    },
    {
        "key": null,
        "number": 1134,
        "state": "closed",
        "title": "Don't task the eviction server with forced eviction",
        "body": "@michaelcahill, @agorrod:\n\nI took a look at #1128, and I'd suggest using Alex's `WT_SESSION_NO_CACHE_CHECK` flag instead of the `WT_READ_NO_GEN` flag, that allows us to be more specific as to which threads should and should not be pulled into forced eviction.   (For example, threads walking for compaction set `WT_READ_NO_GEN` in their tree-walk, but it seems to me they should be tasked with forced eviction.)\n\nI check for threads we don't want to highjack for eviction (either the no-eviction flag is set on the session, or the thread is holding the schema lock) in two new places:\n- the page release function (which was the focus of #1128), and\n- the page acquire function (there's no point in releasing our reference just to find out we're not going to be able to forcibly evict the page anyway).\n\nAre there any other places we should check?\n\n@michaelcahill, I think this change is ready for merge if you approve of the approach.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 25, 2014 at 15:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday Aug 15, 2014 at 11:26 GMT",
        "merged_at": null
    },
    {
        "key": "ta-",
        "number": 1131,
        "state": "closed",
        "title": "Serialize checkpoints in the data-source handle.",
        "body": "@michaelcahill, ready to merge if you approve.\n\nReference #1129.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 24, 2014 at 16:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Jul 25, 2014 at 13:01 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1126,
        "state": "closed",
        "title": "Replace checkpoint lock with btree handle lock to serialize with bulk load.",
        "body": "Reference #1114.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 22, 2014 at 16:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jul 24, 2014 at 01:02 GMT",
        "merged_at": "Thursday Jul 24, 2014 at 01:02 GMT"
    },
    {
        "key": null,
        "number": 1123,
        "state": "closed",
        "title": "Force a checkpoint at the end of recovery so that the checkpoint LSN",
        "body": "in the metadata matches the checkpoint record in the log. #1115 \n\n@michaelcahill Here is one solution to fixing the issue.  I ended up forcing a checkpoint at the end of recovery instead of just writing the checkpoint log record.  That keeps the metadata checkpoint LSN in sync with what is actually in the log.  The alternative of closing the files at the end of recovery was a much larger and involved change that I abandoned.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 17, 2014 at 18:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Jul 29, 2014 at 00:02 GMT",
        "merged_at": "Tuesday Jul 29, 2014 at 00:02 GMT"
    },
    {
        "key": "st-",
        "number": 1122,
        "state": "closed",
        "title": "Do the fast-append test before we search the leaf page.",
        "body": "@michaelcahill, one more \"interesting\" change.\n\nOnce the fast-append code is factored out of the general insert-list search function, we can do the fast-append check before doing the leaf page binary search.\n\nI made this a separate branch because it implies an additional comparison in the case where we end up in the last page of the tree, but we're not appending, and a lot fewer comparisons in the case of appending a bunch of data to the tree, and I thought that deserved some more thought.   (It's only the last page because the internal page binary search loop will turn off the appending flag if we're not at the end of the tree.)\n",
        "base_ref": "row-search-slim",
        "created_at": "Thursday Jul 17, 2014 at 16:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Jul 18, 2014 at 02:23 GMT",
        "merged_at": "Friday Jul 18, 2014 at 02:23 GMT"
    },
    {
        "key": null,
        "number": 1121,
        "state": "closed",
        "title": "Row search cleanups.",
        "body": "@michaelcahill, some (hopefully) minor row-search cleanups that have been on my list for awhile.\n\nThere are a couple of possibly interesting changes (which is why I didn't just merge this branch), I'll call them out separately in the code.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 17, 2014 at 15:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday Jul 18, 2014 at 02:48 GMT",
        "merged_at": "Friday Jul 18, 2014 at 02:48 GMT"
    },
    {
        "key": null,
        "number": 1120,
        "state": "closed",
        "title": "Lsm shared workers",
        "body": "Move to a model where there is a single set of worker threads for all LSM trees, rather than each tree having a set of worker threads.\n\nThis branch isn't ready for review yet, just opening a pull request so I can easily review the changes at the moment.\n\nReferences #1113 \n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 17, 2014 at 07:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday Aug 29, 2014 at 03:45 GMT",
        "merged_at": "Friday Aug 29, 2014 at 03:45 GMT"
    },
    {
        "key": null,
        "number": 1119,
        "state": "closed",
        "title": "Fix a bug when packing structures that include the packed size.",
        "body": "refs #1104\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 16, 2014 at 23:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jul 17, 2014 at 04:25 GMT",
        "merged_at": "Thursday Jul 17, 2014 at 04:25 GMT"
    },
    {
        "key": null,
        "number": 1118,
        "state": "closed",
        "title": "Bulk checkpoint changes",
        "body": "@michaelcahill, (so far) these are changes I made while staring at the bulk-load & checkpoint code for #1114. There's nothing tricky here yet, it's just cleanup.  If you want to review/merge, that'd be cool with me, I can open a new branch.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 15, 2014 at 21:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jul 16, 2014 at 16:43 GMT",
        "merged_at": "Wednesday Jul 16, 2014 at 16:43 GMT"
    },
    {
        "key": null,
        "number": 1117,
        "state": "closed",
        "title": "Log cursor",
        "body": "Implement log cursors.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 15, 2014 at 19:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 01, 2014 at 11:17 GMT",
        "merged_at": "Friday Aug 01, 2014 at 11:17 GMT"
    },
    {
        "key": null,
        "number": 1110,
        "state": "closed",
        "title": "Inline strcmp calls in the standard cursor functions",
        "body": "@michaelcahill, I noticed zoom was complaining that strcmp in get/set key was taking up a big chunk of time, and it turns out that clang isn't inlining the calls.  Here's a rework of that, ready to merge if you agree.\n\nThere are some minor cleanups along the way:\n- always set `fmt` at the start of the function, based on `WT_CURSOR_RAW_OK`\n- always check `S` first, then `u`, then `r`\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 12, 2014 at 20:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jul 14, 2014 at 04:58 GMT",
        "merged_at": "Monday Jul 14, 2014 at 04:58 GMT"
    },
    {
        "key": "ow-",
        "number": 1109,
        "state": "closed",
        "title": "Simplify the row-store internal search loop",
        "body": "@michaelcahill, this is the change to pull the comparison against an index of 0 out of the internal page binary search loop.\n\nIt looks to me like this change simplifies things, including tests after the loop exits.\n\nI don't think there's any way we can get out of the loop without either an exact match or base set to `(correct-slot + 1)`, but I'd like it if someone else stared at this carefully.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 11, 2014 at 21:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jul 14, 2014 at 03:43 GMT",
        "merged_at": "Monday Jul 14, 2014 at 03:43 GMT"
    },
    {
        "key": null,
        "number": 1108,
        "state": "closed",
        "title": "Enhance checkpoints when LSM trees are present.",
        "body": "Don't do checkpoints of chunks from an LSM tree, implement an LSM tree\nspecific checkpoint operation.\n\nRefs #1107\n\nNot yet ready for review.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 11, 2014 at 06:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jul 28, 2014 at 01:01 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1103,
        "state": "closed",
        "title": "encode values",
        "body": "Encode the location/length of simple values in the WT_ROW pointer, along with the key.\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 07, 2014 at 18:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jul 14, 2014 at 03:50 GMT",
        "merged_at": "Monday Jul 14, 2014 at 03:50 GMT"
    },
    {
        "key": null,
        "number": 1101,
        "state": "closed",
        "title": "Linear search.",
        "body": "Experimental branch, not ready for merge.\nReference #1030.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 03, 2014 at 18:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jul 28, 2014 at 00:53 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1099,
        "state": "closed",
        "title": "Revert change to not evict in the server thread if application threads wait",
        "body": "It makes a read-heavy multi-threaded workload slower.\n\nReferences #1098 \n",
        "base_ref": "develop",
        "created_at": "Thursday Jul 03, 2014 at 04:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jul 03, 2014 at 05:14 GMT",
        "merged_at": "Thursday Jul 03, 2014 at 05:14 GMT"
    },
    {
        "key": null,
        "number": 1097,
        "state": "closed",
        "title": "Improve error handling in LSM merge finalizing.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 02, 2014 at 23:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jul 03, 2014 at 04:30 GMT",
        "merged_at": "Thursday Jul 03, 2014 at 04:30 GMT"
    },
    {
        "key": null,
        "number": 1091,
        "state": "closed",
        "title": "Create testing documentation",
        "body": "This change adds a \"testing\" page to the documentation.\n\nThe initial commit is just a conversion of @ddanderson's wiki page: comments and patches requested to extend this to describe the range of testing we do to WiredTiger, included automated / continuous integration testing, regression testing, performance testing, release compatibility testing, and so on.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 01, 2014 at 02:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jul 02, 2014 at 15:22 GMT",
        "merged_at": "Wednesday Jul 02, 2014 at 15:22 GMT"
    },
    {
        "key": "on-",
        "number": 1090,
        "state": "closed",
        "title": "Convert fast on-page row-store key access from per-page to per-key.",
        "body": "Reference #1030, #1038.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 30, 2014 at 18:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jul 02, 2014 at 02:37 GMT",
        "merged_at": "Wednesday Jul 02, 2014 at 02:37 GMT"
    },
    {
        "key": null,
        "number": 1089,
        "state": "closed",
        "title": "Add statistics to track eviction server candidate list sizes.",
        "body": "Also back out a few bits of eviction-under-load that weren't helping.\n\nThis branch doesn't improve my overall throughput on the #1068 workload.\n",
        "base_ref": "eviction-under-load",
        "created_at": "Friday Jun 27, 2014 at 09:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jul 02, 2014 at 02:32 GMT",
        "merged_at": "Wednesday Jul 02, 2014 at 02:32 GMT"
    },
    {
        "key": "se-",
        "number": 1088,
        "state": "closed",
        "title": "Keith & Sue's modifications to close-stats",
        "body": "@agorrod, for your consideration, ref #1086.\n",
        "base_ref": "close-stats",
        "created_at": "Thursday Jun 26, 2014 at 15:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Thursday Jun 26, 2014 at 22:27 GMT",
        "merged_at": "Thursday Jun 26, 2014 at 22:27 GMT"
    },
    {
        "key": null,
        "number": 1087,
        "state": "closed",
        "title": "Eviction under load",
        "body": "While looking at #1068, one thing I noticed is that the eviction server thread can get \"stuck\" in eviction (particularly splits), and that other threads stall.  This branch attempts to address that in two ways:\n1. if other threads are waiting to do eviction, the server thread just wakes them up and keeps scanning for more pages to add to the queue; and\n2. an idea of Keith's: application threads only get involved with eviction when their session is quiet if they have missed in the cache recently while it was full.\n\nFor me, this branch helps quite a lot with the workload from #1068 (separately or together with #1082).\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 26, 2014 at 08:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jul 02, 2014 at 06:00 GMT",
        "merged_at": "Wednesday Jul 02, 2014 at 06:00 GMT"
    },
    {
        "key": null,
        "number": 1086,
        "state": "closed",
        "title": "Close stats",
        "body": "Add a new statistics_log=(on_close=bool) option to wiredtiger_open.\n\nReference #1085.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 25, 2014 at 09:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Jun 27, 2014 at 00:38 GMT",
        "merged_at": "Friday Jun 27, 2014 at 00:38 GMT"
    },
    {
        "key": null,
        "number": 1085,
        "state": "closed",
        "title": "Dump the final statistics in wtperf before closing the connection.",
        "body": "@agorrod, @sueloverso: there's a change I keep around and apply periodically, to print out the connection's statistics in wtperf before closing the connection.\n\nIf there's a better solution, if this is the wrong approach or a bad idea, just discard the branch.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 24, 2014 at 21:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Jun 27, 2014 at 00:55 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1084,
        "state": "closed",
        "title": "LevelDB copyright",
        "body": "@michaelcahill, I believe these changes take care of the LevelDB copyright issues, for your review.\n\nReference #1028.\n",
        "base_ref": "leveldb-api",
        "created_at": "Tuesday Jun 24, 2014 at 15:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Jun 24, 2014 at 23:43 GMT",
        "merged_at": "Tuesday Jun 24, 2014 at 23:43 GMT"
    },
    {
        "key": null,
        "number": 1083,
        "state": "closed",
        "title": "Add draft ChangeLog for 2.2.1 release.",
        "body": "@michaelcahill Could you review this changelog please?\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 24, 2014 at 06:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jun 25, 2014 at 00:32 GMT",
        "merged_at": "Wednesday Jun 25, 2014 at 00:32 GMT"
    },
    {
        "key": null,
        "number": 1082,
        "state": "closed",
        "title": "Split memory management",
        "body": "Some attempts to address #1079 -- just for discussion at this point.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 20, 2014 at 11:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday Jul 02, 2014 at 02:24 GMT",
        "merged_at": "Wednesday Jul 02, 2014 at 02:24 GMT"
    },
    {
        "key": null,
        "number": 1081,
        "state": "closed",
        "title": "Builtin extensions",
        "body": "Allow extensions to be built into WiredTiger, rather than loaded from a shared library.\n\nNot yet ready for merge..\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 20, 2014 at 02:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jul 02, 2014 at 02:26 GMT",
        "merged_at": "Wednesday Jul 02, 2014 at 02:26 GMT"
    },
    {
        "key": null,
        "number": 1077,
        "state": "closed",
        "title": "LSM tree lock flag",
        "body": "@agorrod, while I was looking at this, I noticed there was a trivial bug in the LSM tree lock routine (the no-schema flag gets left set if the lock call fails), and based on your email I thought this might be more useful/clearer?\n\nAnyway, seriously, I only coded it up because that was the fastest way to suggest it, feel free to discard the change out of hand without any thought at all, this may just be a horrible idea.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 18, 2014 at 21:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jun 19, 2014 at 05:03 GMT",
        "merged_at": "Thursday Jun 19, 2014 at 05:03 GMT"
    },
    {
        "key": "er-",
        "number": 1076,
        "state": "closed",
        "title": "Add per-txn sync configuration support. #1074",
        "body": "@michaelcahill Please review these changes for per-operation sync needed for the LevelDB work.  I also added a piece to one of the Python txn tests.\n- One minor naming point - I kept the config name as `transaction_sync`.  Pro: It is consistently named with the `wiredtiger_open` synchronization value.  Con: It feels long and redundant on the `begin_transaction` API.\n- This option could have gone on the `commit_transaction` API instead of `begin_transaction`.   It seemed a toss-up so I chose `begin_transaction` because there are already a bunch of configuration items for the user to consider.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 18, 2014 at 16:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Jun 20, 2014 at 00:38 GMT",
        "merged_at": "Friday Jun 20, 2014 at 00:38 GMT"
    },
    {
        "key": null,
        "number": 1075,
        "state": "closed",
        "title": "Fix races switching out LSM chunks",
        "body": "Change LSM to set an transaction ID when chunks are switched out, rather than bumping it on every update.  This fixes races where chunks could be dirtied after they were flushed to disk in some test/format workloads.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 18, 2014 at 06:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jun 18, 2014 at 20:42 GMT",
        "merged_at": "Wednesday Jun 18, 2014 at 20:42 GMT"
    },
    {
        "key": null,
        "number": 1071,
        "state": "closed",
        "title": "Invisible update changes.",
        "body": "Ready for review.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 13, 2014 at 19:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jun 16, 2014 at 05:15 GMT",
        "merged_at": "Monday Jun 16, 2014 at 05:15 GMT"
    },
    {
        "key": null,
        "number": 1063,
        "state": "closed",
        "title": "LSM compact improvements",
        "body": "I'm seeing two things when I try to run `medium-lsm-compact.wtperf` (after #1053):\n1. There is an active chunk in the tree when compact starts.  We don't do anything to force it to disk until the connection is closed after the compact.  Then when we reopen in read-only mode, we get aggressive and merge all over again, just to get this one small chunk merged into the tree.\n2. Compact sometimes gives up early.  I _think_ what happens is that the merging thread gets stuck somewhere outside the main loop (like closing the bulk cursor and writing all the internal nodes for a merged chunk).  That doesn't increment the merge activity counter, so compact thinks that merges are done.\n\nI don't like my solution for 1 -- wtperf can force this chunk to disk by closing and reopening the connection before the compact.  A better solution would be for LSM compact to force all chunks to be on disk before kicking off the compaction.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 12, 2014 at 07:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jun 16, 2014 at 02:11 GMT",
        "merged_at": "Monday Jun 16, 2014 at 02:11 GMT"
    },
    {
        "key": null,
        "number": 1060,
        "state": "closed",
        "title": "Lsm snapshot update check only, review changes.",
        "body": "@agorrod, here are my suggestions for your consideration.\n\nFirst, I would move the `WT_CBT_CONFLICT_CHECK` into the `WT_CURSOR` structure (with a minor name change so it's not too long).  It seems to me the `WT_CURSOR_BTREE` flags are more about things going on in the structure itself rather than the operation the cursor is performing, and it seems to me like we're creating a \"conflict check\" cursor operation here.  I realize that's a fine line to draw, and I don't mind at all if you and @michaelcahill decide I'm on the wrong side of that line.\n\nSecond, I think we have to check if `cbt->ins` is non-NULL before indirecting through it, if the row-search routine returns an exact match from somewhere other than an insert list, I would expect `cbt->ins` to be NULL.\n\nThird, while looking at the lsm changes, I tossed in a couple of gratuitous white-space cleanups as a separate commit.\n",
        "base_ref": "lsm-snapshot-update-check-only",
        "created_at": "Wednesday Jun 11, 2014 at 20:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Thursday Jun 12, 2014 at 01:57 GMT",
        "merged_at": "Thursday Jun 12, 2014 at 01:57 GMT"
    },
    {
        "key": null,
        "number": 1057,
        "state": "closed",
        "title": "Support snapshots in LSM via update checks, rather than actual updates.",
        "body": "The current code inserts updates into old chunks, in order to check for\nconflicts with snapshot transactions. It's enough to do the conflict check\nwithout actually updating, and doing a check saves some mess with tracking\nwhen it's OK to checkpoint non-primary chunks.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 11, 2014 at 05:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Thursday Jun 12, 2014 at 02:50 GMT",
        "merged_at": "Thursday Jun 12, 2014 at 02:50 GMT"
    },
    {
        "key": "en-",
        "number": 1056,
        "state": "closed",
        "title": "Don't free created internal pages from deepen-split until it's safe. ",
        "body": "@michaelcahill, this has the changes we discussed, I believe it's ready to merge.\n\nI believe this merge closes #1048.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 10, 2014 at 18:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday Jun 11, 2014 at 06:10 GMT",
        "merged_at": "Wednesday Jun 11, 2014 at 06:10 GMT"
    },
    {
        "key": null,
        "number": 1051,
        "state": "closed",
        "title": "Fix some LSM latency issues",
        "body": "- have merge threads periodically check whether the tree needs to be switched in case the checkpoint thread is blocked; and\n- don't turn on os_cache_dirty_max by default for LSM.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 05, 2014 at 11:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Thursday Jun 05, 2014 at 17:55 GMT",
        "merged_at": "Thursday Jun 05, 2014 at 17:55 GMT"
    },
    {
        "key": null,
        "number": 1050,
        "state": "closed",
        "title": "Row store internal page search optimizations.",
        "body": "@michaelcahill, I think this one is ready for merge if you agree with the changes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 04, 2014 at 15:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jun 05, 2014 at 12:13 GMT",
        "merged_at": "Thursday Jun 05, 2014 at 12:13 GMT"
    },
    {
        "key": null,
        "number": 1049,
        "state": "closed",
        "title": "Json doc",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 04, 2014 at 14:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jun 04, 2014 at 17:14 GMT",
        "merged_at": "Wednesday Jun 04, 2014 at 17:14 GMT"
    },
    {
        "key": null,
        "number": 1046,
        "state": "closed",
        "title": "Remove references to Value from LevelDB. It's not present in 1.13.",
        "body": "@michaelcahill When I tried to build the LevelDB API against 1.13, I saw the following:\n\n```\n../../../api/leveldb/leveldb_wt.cc:28:16: error: 'leveldb::Value' has not been declared\n using leveldb::Value;\n                ^\n../../../api/leveldb/leveldb_wt.cc:291:26: error: 'Value' has not been declared\n        const Slice& key, Value* value);\n                          ^\n../../../api/leveldb/leveldb_wt.cc:501:25: error: 'Value' has not been declared\n       const Slice& key, Value* value)\n                         ^\n../../../api/leveldb/leveldb_wt.cc: In member function 'virtual leveldb::Status DbImpl::Get(const leveldb::ReadOptions&, const leveldb::Slice&, int*)':\n../../../api/leveldb/leveldb_wt.cc:515:9: error: request for member 'assign' in '* value', which is of non-class type 'int'\n  value->assign((const char *)item.data, item.size);\n         ^\n```\n\nI checked in the leveldb/db.h on my system (1.13) and `leveldb::Value` doesn't appear. Am I missing something?\n",
        "base_ref": "leveldb-api",
        "created_at": "Tuesday Jun 03, 2014 at 04:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Jun 03, 2014 at 05:14 GMT",
        "merged_at": "Tuesday Jun 03, 2014 at 05:14 GMT"
    },
    {
        "key": null,
        "number": 1045,
        "state": "closed",
        "title": "Fix a bug in recovery with missing files",
        "body": "(e.g., after a hotbackup that raced with file creation).\n\nrefs #1042\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 03, 2014 at 03:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jun 05, 2014 at 18:48 GMT",
        "merged_at": "Thursday Jun 05, 2014 at 18:48 GMT"
    },
    {
        "key": null,
        "number": 1044,
        "state": "closed",
        "title": "Lsm throttle tune",
        "body": "This is an attempt to avoid the big LSM throttle variance early in an LSM populate referenced in #1041 - [here](https://github.com/wiredtiger/wiredtiger/issues/1041#issuecomment-44903625)\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 03, 2014 at 02:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Jun 03, 2014 at 03:38 GMT",
        "merged_at": "Tuesday Jun 03, 2014 at 03:38 GMT"
    },
    {
        "key": "to-",
        "number": 1040,
        "state": "closed",
        "title": "Cursors should be reset after an auto-commit failure.",
        "body": "@michaelcahill, here's the change for #672.  What you suggested (calling `WT_SESSION::rollback`), looked correct to me, although I abstracted out the call to avoid API macro confusion.\n\nThere's a related test suite fix (duplicating a cursor after a failed implicit transaction no longer succeeds), and related documentation update (only successful implicit transactions leave the cursors positioned/available).\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 02, 2014 at 14:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Tuesday Jun 03, 2014 at 15:56 GMT",
        "merged_at": "Tuesday Jun 03, 2014 at 15:56 GMT"
    },
    {
        "key": "ow-",
        "number": 1038,
        "state": "closed",
        "title": "Avoid row-store leaf page key cell unpack",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 30, 2014 at 13:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday Jun 25, 2014 at 01:53 GMT",
        "merged_at": "Wednesday Jun 25, 2014 at 01:53 GMT"
    },
    {
        "key": null,
        "number": 1035,
        "state": "closed",
        "title": "Add some paranoia to wtperf's copying and randomizing of values.",
        "body": "refs #1032\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 28, 2014 at 22:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 29, 2014 at 15:07 GMT",
        "merged_at": "Thursday May 29, 2014 at 15:07 GMT"
    },
    {
        "key": null,
        "number": 1034,
        "state": "closed",
        "title": "Reorder configuration settings. #1010",
        "body": "Here is the basic change needed for the configuration reordering.  I took Keith's suggestions about error'ing if it exists at creation and file renaming.  However, I'm concerned about the file renaming.  We already have a release out there with `.basecfg` and I changed it to `.createcfg`.  I did not add back-compatibility code to look for the old name.  That seemed more painful than the rename is worth, to me.  All tests passed, which means we don't have any tests that specifically test config ordering.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 28, 2014 at 16:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 30, 2014 at 02:44 GMT",
        "merged_at": "Friday May 30, 2014 at 02:44 GMT"
    },
    {
        "key": null,
        "number": 1033,
        "state": "closed",
        "title": "Add an app_private field to the WT_ASYNC_OP handle.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday May 28, 2014 at 05:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday May 28, 2014 at 15:09 GMT",
        "merged_at": "Wednesday May 28, 2014 at 15:09 GMT"
    },
    {
        "key": null,
        "number": 1029,
        "state": "closed",
        "title": "Minor async lint",
        "body": "@sueloverso, lint has a couple of minor complaints about the async_api.c code, for your consideration.\n",
        "base_ref": "develop",
        "created_at": "Friday May 23, 2014 at 13:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday May 27, 2014 at 14:38 GMT",
        "merged_at": "Tuesday May 27, 2014 at 14:38 GMT"
    },
    {
        "key": null,
        "number": 1028,
        "state": "closed",
        "title": "Add a LevelDB API to WiredTiger",
        "body": "This branch adds a LevelDB API, with flavors for some forks (Basho's LevelDB, HyperLevelDB and RocksDB).\n",
        "base_ref": "develop",
        "created_at": "Friday May 23, 2014 at 05:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Jul 15, 2014 at 02:50 GMT",
        "merged_at": "Tuesday Jul 15, 2014 at 02:50 GMT"
    },
    {
        "key": null,
        "number": 1027,
        "state": "closed",
        "title": "Get the change log into the documentation",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 23, 2014 at 05:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 23, 2014 at 06:49 GMT",
        "merged_at": "Friday May 23, 2014 at 06:49 GMT"
    },
    {
        "key": null,
        "number": 1026,
        "state": "closed",
        "title": "Metadata cleanup",
        "body": "Here are some more radical changes to the utilities and metadata handling...\n",
        "base_ref": "dump-metadata",
        "created_at": "Friday May 23, 2014 at 03:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 23, 2014 at 04:39 GMT",
        "merged_at": "Friday May 23, 2014 at 04:39 GMT"
    },
    {
        "key": null,
        "number": 1025,
        "state": "closed",
        "title": "Allow the metadata to be dumped, use \"metadata:\" consistently",
        "body": "There is some overlap with #1022.\n\nrefs #1021\n",
        "base_ref": "develop",
        "created_at": "Friday May 23, 2014 at 01:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 23, 2014 at 04:52 GMT",
        "merged_at": "Friday May 23, 2014 at 04:52 GMT"
    },
    {
        "key": null,
        "number": 1022,
        "state": "closed",
        "title": "Make the utilities more user friendly for dumping metadata.",
        "body": "Specifically:\n- Tell users who try to use dump what to do.\n- Support metadata: uri in list command.\n\nReferences #1021 \n",
        "base_ref": "develop",
        "created_at": "Friday May 23, 2014 at 00:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 23, 2014 at 01:32 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1020,
        "state": "closed",
        "title": "Dumping the metadata file",
        "body": "@agorrod, I tried to dump a metadata file today using `wt dump file:WiredTiger.wt` and I couldn't, wt kept insisting the object didn't exist.\n\nI eventually figured out that `metadata:` was a magic string (is that documented anywhere?), but even knowing that I couldn't find a way to convince wt to display the contents of the metadata file.   Maybe I'm just missing something, and all we need to do is document the `metadata:` string?\n\nAnyway, by the time I figured out what was going on, I had these changes done, so if there isn't a way to dump the metadata file, maybe this is the right fix?\n\nIt removes the magic of `metadata:`, and just matches against the metadata file's URI.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 22, 2014 at 19:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 22, 2014 at 23:07 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1018,
        "state": "closed",
        "title": "Close files in a separate thread.",
        "body": "Not ready to merge, this is just a placeholder for now.\n\nReference #844, #957.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 20, 2014 at 15:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 22, 2014 at 03:28 GMT",
        "merged_at": "Thursday May 22, 2014 at 03:28 GMT"
    },
    {
        "key": null,
        "number": 1015,
        "state": "closed",
        "title": "Updated java exception clauses",
        "body": "This should resolve #1011, adding exception clauses to all applicable methods in the WT API.\n",
        "base_ref": "develop",
        "created_at": "Friday May 16, 2014 at 01:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 22, 2014 at 10:12 GMT",
        "merged_at": "Thursday May 22, 2014 at 10:12 GMT"
    },
    {
        "key": null,
        "number": 1013,
        "state": "closed",
        "title": "Compression can fail",
        "body": "@michaelcahill, this is ready for your review.\n\nI tested it by changing the zlib `WT_ZLIB_RESERVED` value back to 12, and it seems to work OK.\n\nOnce this is merged, I think we can close both #1007 (fixed), and #1008 (no longer needed).\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 14, 2014 at 13:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday May 14, 2014 at 23:42 GMT",
        "merged_at": "Wednesday May 14, 2014 at 23:42 GMT"
    },
    {
        "key": null,
        "number": 1008,
        "state": "closed",
        "title": "Raw compression fixes",
        "body": "Reference #1007.\n",
        "base_ref": "develop",
        "created_at": "Monday May 12, 2014 at 12:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday May 14, 2014 at 23:42 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 1006,
        "state": "closed",
        "title": "Async java",
        "body": "Add java support for async API.  Includes a test case that is similar to python's test_async01.py.\n",
        "base_ref": "develop",
        "created_at": "Monday May 12, 2014 at 00:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday May 14, 2014 at 04:40 GMT",
        "merged_at": "Wednesday May 14, 2014 at 04:40 GMT"
    },
    {
        "key": null,
        "number": 1004,
        "state": "closed",
        "title": "Stat log reconfig",
        "body": "Allow reconfigure of statistics logging. Doesn't include documentation updates yet.\n",
        "base_ref": "develop",
        "created_at": "Friday May 09, 2014 at 06:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday May 12, 2014 at 02:05 GMT",
        "merged_at": "Monday May 12, 2014 at 02:05 GMT"
    },
    {
        "key": null,
        "number": 1003,
        "state": "closed",
        "title": "Row skip append check",
        "body": "@michaelcahill, this change gives me about 1-2% on medium-btree wtperf runs on the AWS benchmarking machine.\n\nI think a possible down-side is `btree->appending` could be a hot cache line if a workload alternates between appending and inserting randomly, but on the other hand, it should never be set for read-only workloads.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 08, 2014 at 19:07 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 08, 2014 at 23:40 GMT",
        "merged_at": "Thursday May 08, 2014 at 23:40 GMT"
    },
    {
        "key": "Re-",
        "number": 1001,
        "state": "closed",
        "title": "Re-enable eviction of dirty pages during checkpoints",
        "body": "Fix the race that meant pages could be written after the root.\n\nrefs #954, #963.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 08, 2014 at 04:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday May 09, 2014 at 05:53 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 998,
        "state": "closed",
        "title": "LSM logging fixes",
        "body": "The most significant \"fix\" here is to save the configuration used to create a database, including the `logging` setting.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 07, 2014 at 06:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 08, 2014 at 01:59 GMT",
        "merged_at": "Thursday May 08, 2014 at 01:59 GMT"
    },
    {
        "key": null,
        "number": 997,
        "state": "closed",
        "title": "Add ability to reconfigure the checkpoint server",
        "body": "References issue #577 \n",
        "base_ref": "develop",
        "created_at": "Wednesday May 07, 2014 at 06:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 08, 2014 at 00:36 GMT",
        "merged_at": "Thursday May 08, 2014 at 00:36 GMT"
    },
    {
        "key": "le-",
        "number": 993,
        "state": "closed",
        "title": "A somewhat different approach to --enable-verbose: inline __wt_verbose()",
        "body": "@agorrod: Alex, I noticed we quite a few WT_UNUSED statements (and lint reports even more than gcc does, it complains when variables are written but never subsequently read).\n\nHere's a slightly different approach for your consideration: I inlined the `__wt_verbose` call (inlined so the flag test wouldn't require a function call), and then all of the WT_UNUSED magic can go in one place, neither gcc or lint complain if you call a function and that function doesn't use the variables you pass it.\n\nThis also makes the verbose calls look like normal calls so we don't need the `WT_VERBOSE_{ERR,RET,TRET}` macros, we can fall back to the usual `WT_{ERR,RET,TRET}` calls.\n\nThis is a bigger change, but I think it's actually a simpler change and we'll avoid having to mark random variables as WT_UNUSED in the future.\n\nOne downside to this approach is we're inlining:\n\n```\nva_start(ap, fmt);\nret = __wt_eventv(session, 1, 0, NULL, 0, fmt, ap);\nva_end(ap);\n```\n\nin every function that calls `__wt_verbose`.\n",
        "base_ref": "optional-verbose",
        "created_at": "Monday May 05, 2014 at 14:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday May 06, 2014 at 23:53 GMT",
        "merged_at": "Tuesday May 06, 2014 at 23:53 GMT"
    },
    {
        "key": "le-",
        "number": 992,
        "state": "closed",
        "title": "Add --enable-verbose option, disabled by default.",
        "body": "Still need to update the documentation.\n",
        "base_ref": "develop",
        "created_at": "Monday May 05, 2014 at 09:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday May 07, 2014 at 00:00 GMT",
        "merged_at": "Wednesday May 07, 2014 at 00:00 GMT"
    },
    {
        "key": null,
        "number": 990,
        "state": "closed",
        "title": "Simplify test/checkpoint",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday May 05, 2014 at 01:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday May 05, 2014 at 01:47 GMT",
        "merged_at": "Monday May 05, 2014 at 01:47 GMT"
    },
    {
        "key": "ow-",
        "number": 988,
        "state": "closed",
        "title": "Cache the associated value when unpacking key cells during row-store search.",
        "body": "",
        "base_ref": "fast-row-store-return",
        "created_at": "Saturday May 03, 2014 at 13:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Saturday May 03, 2014 at 14:19 GMT",
        "merged_at": null
    },
    {
        "key": "ow-",
        "number": 987,
        "state": "closed",
        "title": "Row-store return.",
        "body": "Trying to speed up row-store key/value return after tree searches.\n",
        "base_ref": "develop",
        "created_at": "Friday May 02, 2014 at 22:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Monday May 05, 2014 at 01:08 GMT",
        "merged_at": "Monday May 05, 2014 at 01:08 GMT"
    },
    {
        "key": null,
        "number": 986,
        "state": "closed",
        "title": "Fast memcmp",
        "body": "Experimental branch that uses the GNU C library memcmp function.\n",
        "base_ref": "develop",
        "created_at": "Friday May 02, 2014 at 19:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 02, 2014 at 19:26 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 985,
        "state": "closed",
        "title": "Add trace functionality to WiredTiger API.",
        "body": "Possible only in diagnostic, with 'api_trace' connection configuration string.\n\nI'm not sure how much I like this, but it's functionality I've wanted occasionally. Ideally we'd print out the parameters to the API calls as well (so we could potentially reconstruct applications), but that's a much more invasive change.\n",
        "base_ref": "develop",
        "created_at": "Friday May 02, 2014 at 03:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 02, 2014 at 06:08 GMT",
        "merged_at": "Friday May 02, 2014 at 06:08 GMT"
    },
    {
        "key": null,
        "number": 983,
        "state": "closed",
        "title": "Async python",
        "body": "Add python support to async branch.\n",
        "base_ref": "async",
        "created_at": "Thursday May 01, 2014 at 17:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 01, 2014 at 17:42 GMT",
        "merged_at": "Thursday May 01, 2014 at 17:42 GMT"
    },
    {
        "key": null,
        "number": 982,
        "state": "closed",
        "title": "Optionally skip block cleanup and leak memory on connection close.",
        "body": "@agorrod, I think this does what you wanted, if you agree, please merge and close #845.\n\nOne thing that occurred to me: we could have `__wt_free_int()` check the new connection flag and not free any memory once we've started closing the connection, but my concern is we might slow down the common free path with an additional main memory fetch, and that seemed like a bad idea.  Do you agree, or is an additional memory fetch in the free function no big deal, sine we're about to call the underlying library free function anyway?  @fedorova, any thoughts?\n",
        "base_ref": "develop",
        "created_at": "Thursday May 01, 2014 at 14:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Thursday May 01, 2014 at 15:38 GMT",
        "merged_at": "Thursday May 01, 2014 at 15:38 GMT"
    },
    {
        "key": null,
        "number": 981,
        "state": "closed",
        "title": "Disable prefix compression by default.",
        "body": "Create a pull request.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 01, 2014 at 12:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 02, 2014 at 00:41 GMT",
        "merged_at": "Friday May 02, 2014 at 00:41 GMT"
    },
    {
        "key": "in-",
        "number": 980,
        "state": "closed",
        "title": "Take the cache size into account when calculating the maximum size of a page in-memory",
        "body": "Use that calculation in the decision to deepen internal pages.\n\nrefs #486\n",
        "base_ref": "develop",
        "created_at": "Thursday May 01, 2014 at 03:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Friday May 02, 2014 at 01:37 GMT",
        "merged_at": "Friday May 02, 2014 at 01:37 GMT"
    },
    {
        "key": null,
        "number": 978,
        "state": "closed",
        "title": "Defer allocating a transaction ID until an update is made.",
        "body": "References #975\nUseful for read-only workloads that use explicit transactions.\n\nNot yet ready for review/merge. I haven't tested to see if it helps my workload yet.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 30, 2014 at 00:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Wednesday Apr 30, 2014 at 03:16 GMT",
        "merged_at": "Wednesday Apr 30, 2014 at 03:16 GMT"
    },
    {
        "key": null,
        "number": 977,
        "state": "closed",
        "title": "Some additional buffer management cleanup.",
        "body": "@michaelcahill, this is the rest of the change for #971.\n\nThere are two changes here:\n1. Instead of explicitly checking if we're looking at non-local data before growing the buffer, I've changed the buffer grow function to copy non-local data into place.  This feels cleaner to me, if you're growing a buffer, and you currently point to non-local data, it seems intuitive that you'd want the original data and growth to happen in a local buffer.\n   \n   This slightly complicates the buffer grow front-end, it has to check both the size and if the data is non-local to the buffer.\n   \n   I've updated the three cases in the code where we care about this, the special-case code just goes away.\n2. I set `WT_ITEM.size` to 0 in the buffer initialization routines, before calling the buffer grow function; I doubt it's necessary, but it seems safer to me.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 29, 2014 at 14:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Apr 30, 2014 at 03:19 GMT",
        "merged_at": "Wednesday Apr 30, 2014 at 03:19 GMT"
    },
    {
        "key": null,
        "number": 974,
        "state": "closed",
        "title": "WT_ITEM cleanup",
        "body": "@michaelcahill: this is ready for review and merge, I think, it passes the usual tests.\n\nObviously, there are some relatively tricky changes, both in the cursor/schema code and in the code that now expects the block manager to set `WT_ITEM.{data,size}`, hopefully I didn't miss too many of the special cases.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 29, 2014 at 02:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Tuesday Apr 29, 2014 at 06:05 GMT",
        "merged_at": "Tuesday Apr 29, 2014 at 06:05 GMT"
    },
    {
        "key": null,
        "number": 970,
        "state": "closed",
        "title": "Changes to speed up retrieving a key from a leaf page.",
        "body": "@michaelcahill, can you please review this one?\n\nIt passes all of our tests, but it's a little nasty.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 24, 2014 at 23:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Apr 25, 2014 at 10:54 GMT",
        "merged_at": "Friday Apr 25, 2014 at 10:54 GMT"
    },
    {
        "key": "ro-",
        "number": 968,
        "state": "closed",
        "title": "Support zero-length data items in LSM, reference #540.",
        "body": "replacing #966 -- we want to branch / merge against develop.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 21, 2014 at 23:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Tuesday Apr 22, 2014 at 02:29 GMT",
        "merged_at": "Tuesday Apr 22, 2014 at 02:29 GMT"
    },
    {
        "key": "ro-",
        "number": 967,
        "state": "closed",
        "title": "Support zero-length data items in LSM",
        "body": "I'm putting this one into the system, but it's not ready to merge.\n\nIt's a hack, but it mostly works.  I think there's something I don't understand about how LSM cursors get used -- I think LSM cursors are being called from somewhere outside of the application level, but I'm not seeing where.\n\nReference #540.\n",
        "base_ref": "lsm-use-local-value",
        "created_at": "Sunday Apr 20, 2014 at 15:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Apr 21, 2014 at 23:40 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 966,
        "state": "closed",
        "title": "overwriting/leaking the application's WT_ITEM value",
        "body": "@michaelcahill, @agorrod: here's a possible fix.\n\nI'm expecting overwrite to usually be set which means this lookup never happens, so I didn't avoid the memory allocation inside `__clsm_lookup`; if that's wrong we could cache a WT_ITEM somewhere, or use a scratch buffer instead.\n\nReference #965.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 20, 2014 at 13:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Monday Apr 21, 2014 at 23:34 GMT",
        "merged_at": "Monday Apr 21, 2014 at 23:34 GMT"
    },
    {
        "key": null,
        "number": 963,
        "state": "closed",
        "title": "Fix fast checkpoints",
        "body": "#954 introduced test/format failures that were not detected before the merge.  Fix them here.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 17, 2014 at 07:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:08 GMT",
        "closed_at": "Tuesday Apr 29, 2014 at 08:23 GMT",
        "merged_at": "Tuesday Apr 29, 2014 at 08:23 GMT"
    },
    {
        "key": null,
        "number": 959,
        "state": "closed",
        "title": "Checkpoint test",
        "body": "Add code to verify that valid checkpoints are being created\n",
        "base_ref": "checkpoint-optimizations",
        "created_at": "Tuesday Apr 15, 2014 at 06:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Apr 17, 2014 at 06:02 GMT",
        "merged_at": "Thursday Apr 17, 2014 at 06:02 GMT"
    },
    {
        "key": null,
        "number": 954,
        "state": "closed",
        "title": "Checkpoint optimizations",
        "body": "Here are initial versions of some of the changes we have discussed to improve checkpoint performance under heavy write load.\n\n@agorrod, can you please run the wtperf workload against these to see how they perform.\n\nThese changes are _not_ ready for merge, regardless, but let's see whether the performance benefits are big enough to make fixing them worthwhile.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 10, 2014 at 06:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Thursday Apr 17, 2014 at 06:19 GMT",
        "merged_at": "Thursday Apr 17, 2014 at 06:19 GMT"
    },
    {
        "key": null,
        "number": 953,
        "state": "closed",
        "title": "Async.kv",
        "body": "Overlap with cursor usage.\n",
        "base_ref": "async",
        "created_at": "Thursday Apr 10, 2014 at 01:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Apr 10, 2014 at 02:08 GMT",
        "merged_at": "Thursday Apr 10, 2014 at 02:08 GMT"
    },
    {
        "key": null,
        "number": 952,
        "state": "closed",
        "title": "Json dump",
        "body": "This branch adds 'json' config option to cursor, to create JSON output.\nOutput items appear for example as:\n\n```\n\"key0\" : 123\n```\n\nand values as:\n\n```\n\"value0\" : \"string part\"\n\"value1\" : 234\"\n```\n\nThat is, columns, separated by newlines.  If columns are named, those names are used instead of key0, value0, etc.\n\nCan be used with index cursors as well as table cursors.\nNew `wt jsondump` utility that uses json cursors.  refs #740.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 09, 2014 at 20:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday May 22, 2014 at 18:01 GMT",
        "merged_at": "Thursday May 22, 2014 at 18:01 GMT"
    },
    {
        "key": null,
        "number": 951,
        "state": "closed",
        "title": "Fix the problem where a truncated/deleted page might split.",
        "body": "Fix the problem where a truncated/deleted page might split (meaning there's no single place the truncate abort can go to find the list of WT_UPDATE structures).  The primary change is to replace the WT_REF.txnid field with the WT_REF.page_del field.  The new field holds both the transaction ID, and, if necessary, an array of WT_UPDATE structures so abort can find them even after the page splits.\n\nReference #948.\n",
        "base_ref": "new-split-fast-delete",
        "created_at": "Wednesday Apr 09, 2014 at 16:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Apr 10, 2014 at 02:19 GMT",
        "merged_at": "Thursday Apr 10, 2014 at 02:19 GMT"
    },
    {
        "key": null,
        "number": 950,
        "state": "closed",
        "title": "Reduce leaf page size",
        "body": "@michaelcahill: I dropped the default leaf page size to 32KB (since the size applies before block compression, the actual I/O size will be roughly half that?).  If you'd rather go even smaller before considering compression, as I said, I have no objection.\n\nI also changed format to focus on smaller key/value items, we really shouldn't be spending so much time on overflow items.   But, could we add a couple of stress tests that focus on overflow key/value items so they do get tested?\n\nReference #791.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 08, 2014 at 18:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Apr 09, 2014 at 11:14 GMT",
        "merged_at": "Wednesday Apr 09, 2014 at 11:14 GMT"
    },
    {
        "key": "st-",
        "number": 948,
        "state": "closed",
        "title": "Clean up the fast-delete code (review after merging the new-split branch).",
        "body": "@michaelcahill, I tried to clean up the last XXXKEITH flag, the fast-delete code.\n\nI think it's mostly right, but there's at least one unsolved problem.\n\nFirst, would you please review the `__wt_tree_walk_delete_rollback`, `__tree_walk_delete` and `__wt_page_parent_modify_set` functions?   They're small, but the comments explain what's going on, and it would be good to make sure I'm not missing something in the solution.\n\nSecond, there's a problem if an instantiated page splits:\n- thread X starts transaction,\n- page gets marked WT_REF_DELETED by thread X's fast-truncate,\n- page gets instantiated by thread Y, converting WT_REF_DELETED to key/value items that have WT_UPDATE structures marked \"deleted\",\n- page is forcibly evicted and split into N different pages, the WT_UPDATE structures are saved/restored, but on multiple pages,\n- thread X aborts its transaction, and is shocked to find that the WT_REF it's holding has changed to WT_REF_SPLIT.\n\nI suppose we could flag the page so it can't split (this shouldn't be a common case, I can't imagine it's a performance problem to disallow forcible eviction of pages entirely deleted by a fast-truncate call), but I don't like it much, it feels ugly.\n\nAnother possible solution might be to update the rollback information as part of instantiating a fast-truncate page (probably by adding individual update references), so when the transaction rolls back the right thing happens.   The obvious problem there is that a different thread/transaction instantiated the page from the thread/transaction that did the original delete.   We could add updates to the current session/transaction pair, but that means we'd somehow have to figure out during rollback that the transaction we're rolling back has modifications in two different sessions, so that's not looking good, either.\n\nAnyway, I'm hoping you have a better solution, let's talk when you have a few.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 08, 2014 at 14:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Apr 10, 2014 at 04:34 GMT",
        "merged_at": "Thursday Apr 10, 2014 at 04:34 GMT"
    },
    {
        "key": null,
        "number": 947,
        "state": "closed",
        "title": "Delay freeing the checkpoint's alloc/discard lists until the resolution step",
        "body": "@agorrod, I'm wondering if we're on the right track with delaying the cleanup of the alloc/discard lists, but the trick is to clear the WT_BTREE.checkpointing flag sooner?   This is a branch, it's probably a needless complication to the code if it doesn't help.\n\nDelay freeing the checkpoint's alloc/discard lists until the resolution step, that should help eviction continue sooner.\n\nReference #924.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 07, 2014 at 19:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Friday Apr 11, 2014 at 03:49 GMT",
        "merged_at": "Friday Apr 11, 2014 at 03:49 GMT"
    },
    {
        "key": null,
        "number": 946,
        "state": "closed",
        "title": "Fix a race between reconciliation and freeing obsolete updates on a page.",
        "body": "Now that reconciliation scans to the end of update lists, it is not safe for it to run concurrently with freeing obsolete updates.  Use an atomic page flag rather than a mutex to protect access: there is no real need to block update operations if there is contention, this is just trimming old memory.\n",
        "base_ref": "new-split",
        "created_at": "Friday Apr 04, 2014 at 12:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Apr 04, 2014 at 12:30 GMT",
        "merged_at": "Friday Apr 04, 2014 at 12:30 GMT"
    },
    {
        "key": null,
        "number": 945,
        "state": "closed",
        "title": "minor optimization for save/restore of removed overflow keys, matching the one for values.",
        "body": "Don't write removed overflow keys that are associated with removed, overflow value items, when doing save/restore reconciliation for eviction.\n\n@michaelcahill -- probably not worth doing at all, to be honest, but in the process of writing up why we didn't do it, I thought of a way to do it.\n",
        "base_ref": "new-split",
        "created_at": "Thursday Apr 03, 2014 at 21:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Apr 03, 2014 at 22:52 GMT",
        "merged_at": "Thursday Apr 03, 2014 at 22:52 GMT"
    },
    {
        "key": null,
        "number": 943,
        "state": "closed",
        "title": "New split fixes",
        "body": "This branch is not ready for merging -- the last two commits in particular need to be cleaned up and simplified.  That said, I haven't seen any of the recent test failures after applying these changes.  I'm pushing them for wider testing and to make them easier to review (once the code changes are cleaned up).\n",
        "base_ref": "new-split",
        "created_at": "Thursday Apr 03, 2014 at 10:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Apr 04, 2014 at 02:19 GMT",
        "merged_at": "Friday Apr 04, 2014 at 02:19 GMT"
    },
    {
        "key": null,
        "number": 942,
        "state": "closed",
        "title": "Generate Linux man pages when generating docs.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Apr 03, 2014 at 05:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Apr 04, 2014 at 03:54 GMT",
        "merged_at": "Friday Apr 04, 2014 at 03:54 GMT"
    },
    {
        "key": null,
        "number": 941,
        "state": "closed",
        "title": "shorten the parent page lock duration when splitting",
        "body": "@michaelcahill: I moved the child page discard and the building of the split page's replacement WT_REF structures outside of the parent page lock in the split code.  I doubt there are many workloads this will help, but I wanted to make the change while I still remembered how it all worked.   It's slightly  more complicated this way, but it means almost no heavy-weight operations while holding the parent locked.\n",
        "base_ref": "new-split",
        "created_at": "Wednesday Apr 02, 2014 at 16:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Apr 02, 2014 at 23:23 GMT",
        "merged_at": "Wednesday Apr 02, 2014 at 23:23 GMT"
    },
    {
        "key": null,
        "number": 939,
        "state": "closed",
        "title": "Fix some memory leaks, add support for dumping offsets in objects.",
        "body": "",
        "base_ref": "new-split",
        "created_at": "Tuesday Apr 01, 2014 at 23:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Apr 01, 2014 at 23:47 GMT",
        "merged_at": "Tuesday Apr 01, 2014 at 23:47 GMT"
    },
    {
        "key": null,
        "number": 935,
        "state": "closed",
        "title": "Move WT_PAGE.parent, WT_PAGE.ref_hint into WT_REF structure.",
        "body": "@michaelcahill: as I mentioned earlier, I think the right solution to the split problem we're seeing is to move the WT_PAGE.parent pointer into the WT_REF structure.  That allows splits to complete without acquiring hazard pointers on the children, since the children aren't modified.\n\nI took a run at this change to see how harsh it would be, and this branch is the result.  It runs reasonably well (format and the test suite), but isn't yet stable.  I'm happy to throw it away if you hate this approach, or to re-implement parts of it if you only want parts, or whatever.\n\nThe reason the change is so large is because once a WT_REF can identify the page in which it's located, big parts of the btree layer naturally switch from passing around, or operating on, WT_PAGEs, and instead pass around or operate on WT_REFs.  For example, the eviction list is now an array of WT_REFs, the tree-walk code returns a WT_REF, the page get, release and discard functions all take WT_REFs.\n\nIn summary, this change:\n- switches big parts of the btree layer from using WT_PAGE structures to using WT_REF structures,\n- is slightly space negative (the WT_REF structure grows to 48B from 44B in develop, the WT_PAGE structure shrinks from 88B in develop to 72B),\n- removes the need for split to acquire hazard references on child pages in order to fix up their parent pointers,\n- removes the need for searching for a page's \"current\" WT_REF structure (except for a single place in the tree-walk code),\n- is roughly code neutral, so far I've removed slightly more lines of code than I added.\n\nAs I said, I'm happy to throw this away if you don't like it -- once you've taken a look, let's talk.\n",
        "base_ref": "new-split",
        "created_at": "Saturday Mar 29, 2014 at 22:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Mar 31, 2014 at 03:25 GMT",
        "merged_at": "Monday Mar 31, 2014 at 03:25 GMT"
    },
    {
        "key": null,
        "number": 934,
        "state": "closed",
        "title": "Release 2.1.2",
        "body": "This is so we can review the changes we want to cherry-pick into a 2.1.2 release prior to merging the new-split branch into develop.\n",
        "base_ref": "master",
        "created_at": "Friday Mar 28, 2014 at 05:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Mar 28, 2014 at 06:29 GMT",
        "merged_at": "Friday Mar 28, 2014 at 06:29 GMT"
    },
    {
        "key": null,
        "number": 933,
        "state": "closed",
        "title": "Add an async API",
        "body": "Just tracking Sue's work for now, this is not ready to commit.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 27, 2014 at 23:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday May 06, 2014 at 01:43 GMT",
        "merged_at": "Tuesday May 06, 2014 at 01:43 GMT"
    },
    {
        "key": null,
        "number": 931,
        "state": "closed",
        "title": "Make sure there is no forced eviction during checkpoints",
        "body": "We were checking that forced eviction didn't start after a checkpoint, but not that forced eviction had completed when a checkpoint started.\n",
        "base_ref": "new-split",
        "created_at": "Thursday Mar 27, 2014 at 10:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Mar 27, 2014 at 10:56 GMT",
        "merged_at": "Thursday Mar 27, 2014 at 10:56 GMT"
    },
    {
        "key": null,
        "number": 930,
        "state": "closed",
        "title": "Individually allocate WT_REF structures and move them when deepening the tree.",
        "body": "A problem in the new-split branch is WT_REF structures remain with the internal parent page, even when the tree deepens, and the memory footprint of that page continues to increase even as the tree deepens. The current algorithms go south: they view a large internal page as a reason to deepen the tree, and no good comes the internal page never decreasing in size.\n\nA different approach: allocate WT_REF structures individually (even when reading pages from disk), and move the memory footprint for the WT_REF structures to the new children pages when the tree is deepened.\n",
        "base_ref": "new-split",
        "created_at": "Wednesday Mar 26, 2014 at 22:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Mar 27, 2014 at 05:57 GMT",
        "merged_at": "Thursday Mar 27, 2014 at 05:57 GMT"
    },
    {
        "key": null,
        "number": 929,
        "state": "closed",
        "title": "Make extent list management more efficient during checkpoints",
        "body": "Before merging extent lists, check if one is bigger than the other, and walk through the smaller one.  This requires that we track sizes for the temporary avail list we build during checkpoints, otherwise we can't make the size tracking match up after the merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 26, 2014 at 04:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Mar 26, 2014 at 09:15 GMT",
        "merged_at": "Wednesday Mar 26, 2014 at 09:15 GMT"
    },
    {
        "key": null,
        "number": 927,
        "state": "closed",
        "title": "Add max latency and min throughput settings. #926",
        "body": "@keithbostic - I whipped this up (fair warning - pre-caffeinated...).  See if it is in the ballpark of what you had in mind.  A few things:\n1.  This requires sample_interval be set to be effective.  But I don't explicitly check and complain if the user doesn't do that.  It just does nothing.\n2.  max_latency units are seconds.  That might be too large and we might want usecs or msecs.  I chose seconds because all other current wtperf time units are seconds.\n3.  I changed the internal meaning of `cur_reads` etc to be per-second rather than per-interval.  I suspect people will look at the `monitor` output file and set min_throughput to some value similar to those.  The only use of the cur_ variables was to display them per-second anyway.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 24, 2014 at 13:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Mar 25, 2014 at 00:36 GMT",
        "merged_at": "Tuesday Mar 25, 2014 at 00:36 GMT"
    },
    {
        "key": null,
        "number": 925,
        "state": "closed",
        "title": "Some minor fixes for checkpoints and eviction with new splits",
        "body": "@keithbostic, can you please review?  I hope these changes are clear, and I've been testing them today.\n",
        "base_ref": "new-split",
        "created_at": "Friday Mar 21, 2014 at 11:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Mar 21, 2014 at 14:25 GMT",
        "merged_at": "Friday Mar 21, 2014 at 14:25 GMT"
    },
    {
        "key": null,
        "number": 923,
        "state": "closed",
        "title": "Rename verbose ckpt to checkpoint, add some more messages to it.",
        "body": "The messages relate to the volume of data being written in checkpoints.\n\nI found these helpful when debugging an issue that stalled throughput during checkpoints.\n\nI was surprised we have 'ckpt' in the API - I know the abbreviation, but I don't think it's obvious to others. I'm happy to revert the name change if it's not worth the API change.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 20, 2014 at 01:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Mar 23, 2014 at 23:06 GMT",
        "merged_at": "Sunday Mar 23, 2014 at 23:06 GMT"
    },
    {
        "key": "on-",
        "number": 922,
        "state": "closed",
        "title": "Don't leak blocks when reconciliation fails after resetting on-page overflow cells.",
        "body": "@michaelcahill -- this is a cleanup, delaying changing on-page cells from \"overflow\" to \"removed overflow\" until we're actually removing the blocks at the end of a successful reconciliation.\n",
        "base_ref": "new-split-overflow-update",
        "created_at": "Wednesday Mar 19, 2014 at 20:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Mar 19, 2014 at 21:31 GMT",
        "merged_at": "Wednesday Mar 19, 2014 at 21:31 GMT"
    },
    {
        "key": null,
        "number": 919,
        "state": "closed",
        "title": "Append removed overflow objects to the saved WT_UPDATE chain.",
        "body": "@michaelcahill: I went with your idea, I think it's a better solution.\n\nThis first diff is just support for column-store, I'm going to take a run at row-store next.\n",
        "base_ref": "new-split-overflow",
        "created_at": "Tuesday Mar 18, 2014 at 16:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Mar 19, 2014 at 22:12 GMT",
        "merged_at": "Wednesday Mar 19, 2014 at 22:12 GMT"
    },
    {
        "key": null,
        "number": 918,
        "state": "closed",
        "title": "Support multiple eviction threads",
        "body": "Add a new connection configuration, `eviction_workers`, that configures a number of additional threads to help keep the cache use bounded without slowing down application threads.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 18, 2014 at 05:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday May 02, 2014 at 01:05 GMT",
        "merged_at": "Friday May 02, 2014 at 01:05 GMT"
    },
    {
        "key": null,
        "number": 917,
        "state": "closed",
        "title": "Walk bug when descending the tree and the target page splits.",
        "body": "@michaelcahill: here's the fix I'm proposing for the walk problem.\n\nI also got rid of the PAGE_SWAP macro, and moved the restart code to the beginning of the first loop, that way it should at least try to work with reverse splits.\n",
        "base_ref": "new-split-overflow",
        "created_at": "Monday Mar 17, 2014 at 23:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Mar 18, 2014 at 00:09 GMT",
        "merged_at": "Tuesday Mar 18, 2014 at 00:09 GMT"
    },
    {
        "key": "re-",
        "number": 916,
        "state": "closed",
        "title": "Instead of writing overflow records, figure it out when re-instantiating the page",
        "body": "@michaelcahill: here's another approach.\n",
        "base_ref": "new-split-overflow",
        "created_at": "Monday Mar 17, 2014 at 17:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Mar 17, 2014 at 21:53 GMT",
        "merged_at": "Monday Mar 17, 2014 at 21:53 GMT"
    },
    {
        "key": null,
        "number": 915,
        "state": "closed",
        "title": "Remove volatile declaration from checkpointing field.",
        "body": "@michaelcahill: I don't see any reason the checkpointing field needs to be declared volatile.\n",
        "base_ref": "develop",
        "created_at": "Sunday Mar 16, 2014 at 18:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Mar 16, 2014 at 22:37 GMT",
        "merged_at": "Sunday Mar 16, 2014 at 22:37 GMT"
    },
    {
        "key": null,
        "number": 914,
        "state": "closed",
        "title": "checkpoint can race with splits",
        "body": "Possible solution for #913, don't try and split pages during the leaf-page pass of checkpoint.\n\nThis means forced eviction and checkpoints will be completely incompatible.\n",
        "base_ref": "new-split-overflow",
        "created_at": "Sunday Mar 16, 2014 at 18:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Mar 17, 2014 at 05:26 GMT",
        "merged_at": "Monday Mar 17, 2014 at 05:26 GMT"
    },
    {
        "key": null,
        "number": 912,
        "state": "closed",
        "title": "Handle removed overflow records during reconciliation.",
        "body": "@michaelcahill:\n\nI still don't understand the path by which we can see removed overflow records during reconciliation -- assuming that's correct, I think this is the fix.  In summary, do a better job of preserving the state of the evicted page during save/restore by copying any original, on-page key/value pair into the new page.\n\nRef #911.\n",
        "base_ref": "new-split",
        "created_at": "Sunday Mar 16, 2014 at 15:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Mar 19, 2014 at 22:33 GMT",
        "merged_at": "Wednesday Mar 19, 2014 at 22:33 GMT"
    },
    {
        "key": null,
        "number": 910,
        "state": "closed",
        "title": "Update the metadata cursor implementation.",
        "body": "Move it into it's own cursor implementation, add a special search\nroutine that can search the metadata for the metadata table.\n\nThis is prototype code - I haven't tested the new functionality yet. It is not ready to be merged.\n\nReferences issue #908 \n",
        "base_ref": "develop",
        "created_at": "Friday Mar 14, 2014 at 07:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday May 07, 2014 at 03:05 GMT",
        "merged_at": "Wednesday May 07, 2014 at 03:05 GMT"
    },
    {
        "key": "ed-",
        "number": 907,
        "state": "closed",
        "title": "more simplification of forced-eviction from page-in function",
        "body": "@agorrod, this change gets rid of the WT_PAGE_EVICT_FORCE flag entirely (its only effect, AFAICT, is to wake up the eviction server once per forced page eviction).\n\nIf you don't like this change, feel free to discard it.  (I'm pushing it to you, you have a better sense of what's needed in eviction than I do.)\n",
        "base_ref": "new-split",
        "created_at": "Wednesday Mar 12, 2014 at 14:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Mar 13, 2014 at 00:23 GMT",
        "merged_at": "Thursday Mar 13, 2014 at 00:23 GMT"
    },
    {
        "key": null,
        "number": 906,
        "state": "closed",
        "title": "Shared cache config",
        "body": "References #893 \n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 12, 2014 at 06:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Mar 14, 2014 at 05:12 GMT",
        "merged_at": "Friday Mar 14, 2014 at 05:12 GMT"
    },
    {
        "key": null,
        "number": 904,
        "state": "closed",
        "title": "Disable merges during checkpoints, make sure we visit all pages when evicting a file",
        "body": "refs #898\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 10, 2014 at 12:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Mar 10, 2014 at 13:33 GMT",
        "merged_at": "Monday Mar 10, 2014 at 13:33 GMT"
    },
    {
        "key": null,
        "number": 901,
        "state": "closed",
        "title": "Add an async API",
        "body": "This is currently just a skeleton, with no implementation -- it is just intended for discussion.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 06, 2014 at 07:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Mar 27, 2014 at 23:38 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 900,
        "state": "closed",
        "title": "Use hazard references to prevent child pages being evicted during reconciliation of their parent",
        "body": "It used to be that the `WT_REF_EVICT_WALK` state implicitly prevented eviction from underneath an internal page that is being reconciled.  Now that all threads just use hazard references to prevent pages going away, reconciliation should do the same when examining the child page of an internal page.\n\nrefs #896, #898, #899\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 06, 2014 at 01:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Friday Mar 07, 2014 at 03:25 GMT",
        "merged_at": "Friday Mar 07, 2014 at 03:25 GMT"
    },
    {
        "key": null,
        "number": 895,
        "state": "closed",
        "title": "Fix the check for whether updates can be evicted, vs whether the page is marked clean.",
        "body": "@keithbostic, I was thinking about this overnight, and I'm pretty sure that this is the logic we want here.\n\nPlease take a look and let's talk: the subtlety is that when a checkpoint comes through, its `__wt_txn_visible` check succeeding doesn't mean that an update is visible to all transactions.\n",
        "base_ref": "new-split",
        "created_at": "Tuesday Mar 04, 2014 at 22:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Mar 07, 2014 at 13:14 GMT",
        "merged_at": "Friday Mar 07, 2014 at 13:14 GMT"
    },
    {
        "key": null,
        "number": 890,
        "state": "closed",
        "title": "Support eviction of pages that include unresolved changes.",
        "body": "@agorrod, @michaelcahill: this branch evicts pages that include unresolved changes.\n\nThe idea is to make it possible to \"evict\" any page at any time, regardless of unresolved changes, writing out the blocks we can, keeping the blocks we have to keep, and splitting the page in memory.\n\nIt's not ready for merge, but I'm pushing it so we can talk about the approach.\n",
        "base_ref": "new-split",
        "created_at": "Monday Mar 03, 2014 at 19:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Mar 04, 2014 at 13:16 GMT",
        "merged_at": "Tuesday Mar 04, 2014 at 13:16 GMT"
    },
    {
        "key": null,
        "number": 889,
        "state": "closed",
        "title": "In python, flush during callbacks to write to sys streams. refs #883.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Mar 03, 2014 at 19:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Mar 03, 2014 at 23:17 GMT",
        "merged_at": "Monday Mar 03, 2014 at 23:17 GMT"
    },
    {
        "key": null,
        "number": 888,
        "state": "closed",
        "title": "Fix a bug regarding when clean pages can be evicted",
        "body": "refs #884\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 28, 2014 at 06:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Feb 28, 2014 at 06:21 GMT",
        "merged_at": "Friday Feb 28, 2014 at 06:21 GMT"
    },
    {
        "key": null,
        "number": 887,
        "state": "closed",
        "title": "Make sure all chunks involved in a merge have Bloom filters",
        "body": "Fix a race where a chunk is merged and removed from the tree during creation of a Bloom filter.\n\nrefs #809\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 28, 2014 at 02:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Feb 28, 2014 at 03:53 GMT",
        "merged_at": "Friday Feb 28, 2014 at 03:53 GMT"
    },
    {
        "key": "ct-",
        "number": 886,
        "state": "closed",
        "title": "evict-walk-hazard changes",
        "body": "@michaelcahill  -- I removed a WT_PUBLISH, thought you should look at it.\n",
        "base_ref": "evict-walk-hazard",
        "created_at": "Thursday Feb 27, 2014 at 15:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Feb 27, 2014 at 22:16 GMT",
        "merged_at": "Thursday Feb 27, 2014 at 22:16 GMT"
    },
    {
        "key": null,
        "number": 885,
        "state": "closed",
        "title": "Use hazard pointers for eviction walks",
        "body": "Remove all the code associated with `WT_REF_EVICT_WALK`.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 27, 2014 at 10:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Mar 05, 2014 at 05:18 GMT",
        "merged_at": "Wednesday Mar 05, 2014 at 05:18 GMT"
    },
    {
        "key": "ng-",
        "number": 878,
        "state": "closed",
        "title": "Fix a long-standing bug where a page could be marked clean (and evicted)...",
        "body": "... when it contained uncommitted changes.\n\nrefs #835, #818(?), #581\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 21, 2014 at 04:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Feb 23, 2014 at 22:27 GMT",
        "merged_at": "Sunday Feb 23, 2014 at 22:27 GMT"
    },
    {
        "key": null,
        "number": 877,
        "state": "closed",
        "title": "Improve LSM performance with wtperf tests 1-4",
        "body": "@sueloverso, when you get a chance, can you please kick off tests 1-4 (and voxer, if you like) on this branch?\n\nThanks!\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 20, 2014 at 11:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Feb 26, 2014 at 15:45 GMT",
        "merged_at": "Wednesday Feb 26, 2014 at 15:45 GMT"
    },
    {
        "key": null,
        "number": 876,
        "state": "closed",
        "title": "Split.",
        "body": "Experimental branch, looking at doing splits differently.\n\n@agorrod, @michaelcahill: this branch isn't ready for review, I'm pushing it just to make it easier to build/run on different machines.   (Feel free to review of course, all comments welcome, but I'm not asking for review yet.)\n\nThe state is I can split into parent pages as part of eviction, but I cannot deepen the tree permanently, that is, I haven't tried to write the code to split internal pages that grow too large.  This tree mostly runs and passes tests, but I busted the overflow tracking code somewhere, so test/format runs fail if there are significant numbers of overflow items.   I also haven't run anything other than single-threaded tests, yet.\n",
        "base_ref": "develop",
        "created_at": "Sunday Feb 16, 2014 at 18:50 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Apr 06, 2014 at 10:05 GMT",
        "merged_at": "Sunday Apr 06, 2014 at 10:05 GMT"
    },
    {
        "key": null,
        "number": 875,
        "state": "closed",
        "title": "Add ability for wtperf to run with multiple databases in different threa...",
        "body": "...ds.\n\nThis can be handy when testing shared cache behavior or generating different\nI/O workloads.\n",
        "base_ref": "config-parse-api",
        "created_at": "Friday Feb 14, 2014 at 05:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Feb 26, 2014 at 06:09 GMT",
        "merged_at": "Wednesday Feb 26, 2014 at 06:09 GMT"
    },
    {
        "key": null,
        "number": 873,
        "state": "closed",
        "title": "Add configuration parsing to the public API.",
        "body": "Don't remove it from the extension API for now - to match the value\npacking code. Updated inline documentation, but not the official\ndocumentation - since I suspect this will change before it's merged.\nUpdate wtperf usage of configuration parsing API.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 13, 2014 at 03:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Feb 26, 2014 at 07:34 GMT",
        "merged_at": "Wednesday Feb 26, 2014 at 07:34 GMT"
    },
    {
        "key": null,
        "number": 872,
        "state": "closed",
        "title": "Add a script that can graph wtperf monitor using NVD3.",
        "body": "@michaelcahill \n\nCould you do a review of this script please? It pretty much works for me, though the y-axis scale chosen by nvd3 seems to be off in the graphs I generate.\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 07, 2014 at 05:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Feb 10, 2014 at 22:57 GMT",
        "merged_at": "Monday Feb 10, 2014 at 22:57 GMT"
    },
    {
        "key": null,
        "number": 867,
        "state": "closed",
        "title": "Add ability to create multiple tables to wtperf.",
        "body": "Implemented by new table_count configuration option. Wtperf will create\ntable_count number of tables, and populate each with the full set of data,\nthen workload operations will be spread randomly over the set of tables.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 04, 2014 at 06:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Feb 11, 2014 at 02:34 GMT",
        "merged_at": "Tuesday Feb 11, 2014 at 02:34 GMT"
    },
    {
        "key": null,
        "number": 865,
        "state": "closed",
        "title": "zlib fixes",
        "body": "Fix some issues with zlib and raw compression.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 31, 2014 at 06:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Feb 02, 2014 at 23:31 GMT",
        "merged_at": "Sunday Feb 02, 2014 at 23:31 GMT"
    },
    {
        "key": null,
        "number": 861,
        "state": "closed",
        "title": "Set the memory_page_max of LSM chunks to double the chunk size",
        "body": "This is so that application threads don't try forced eviction as soon as the \"no eviction\" flag is cleared by the LSM worker thread.\n\nrefs #859 (discovered during testing)\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 30, 2014 at 06:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jan 30, 2014 at 07:00 GMT",
        "merged_at": "Thursday Jan 30, 2014 at 07:00 GMT"
    },
    {
        "key": null,
        "number": 860,
        "state": "closed",
        "title": "plot multiple wtperf monitor and latency files",
        "body": "@keithbostic please review this large change to wtperf_graph.py.  There is one bug fix - the original had the insert and update columns reversed for the monitor.png.  One gratuitous change - I made the ops/sec units in thousands rather than hundreds.  The rest of the changes are to support parsing a list of monitor files and generating related output with the same suffix.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 29, 2014 at 18:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jan 29, 2014 at 20:02 GMT",
        "merged_at": "Wednesday Jan 29, 2014 at 20:02 GMT"
    },
    {
        "key": null,
        "number": 857,
        "state": "closed",
        "title": "Initial changes to get some basho_bench/riak like tests running in wtperf.",
        "body": "Here's a small set of changes to get riak-like tests running in wtperf.  There are a couple minor things:\n1.  Right now populate is blazingly fast compared to riak because we only doing inserts instead of empty read followed by an update, and also because populate is sequential, and riak is not.  It seems the random populate does not guarantee a full keyspace.  We may want more of a random shuffle instead.  For instance, the fruit config finished populating 25M items in 160 seconds rather than 45 minutes.\n2.  When running tests 2, 3, 4 after running test 1, I append to the existing test.stat.  @keithbostic I do not do the same for the latency log file, 'monitor' because having separate latency charts for each seems best.  For now, the script I run just moves the 'monitor' file aside after the test completes.\n3.  It isn't clear we really need the random_value config, but given the bug found and different behaviors of random data versus all the same data, it seemed reasonable.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 27, 2014 at 20:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Jan 28, 2014 at 02:23 GMT",
        "merged_at": "Tuesday Jan 28, 2014 at 02:23 GMT"
    },
    {
        "key": null,
        "number": 855,
        "state": "closed",
        "title": "Add support for zlib compression",
        "body": "As well as supporting another commonly-used compression library, this extension also includes a simple implementation of raw compression that tries to pack records into disk pages more efficiently.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 22, 2014 at 23:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jan 23, 2014 at 07:09 GMT",
        "merged_at": "Thursday Jan 23, 2014 at 07:09 GMT"
    },
    {
        "key": "in-",
        "number": 851,
        "state": "closed",
        "title": "Improve in-memory merge efficiency when there is a lot of forced eviction",
        "body": "Focus near the top of a stack of pages, merge as soon as we see a good candidate.\n\nNOTE: this pull request needs testing before deciding whether it is worth merging.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 21, 2014 at 01:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jan 30, 2014 at 23:49 GMT",
        "merged_at": "Thursday Jan 30, 2014 at 23:49 GMT"
    },
    {
        "key": null,
        "number": 849,
        "state": "closed",
        "title": "Levyx Inc. Helium support.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Saturday Jan 18, 2014 at 16:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jan 20, 2014 at 15:09 GMT",
        "merged_at": "Monday Jan 20, 2014 at 15:09 GMT"
    },
    {
        "key": "ry-",
        "number": 848,
        "state": "closed",
        "title": "Include memory-mapped space in our cache calculation.",
        "body": "This branch is only intended for testing.  Please don't merge without further discussion.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 17, 2014 at 06:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Mar 05, 2014 at 04:55 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 847,
        "state": "closed",
        "title": "Do direct I/O reads on checkpoints to reduce the VM pressure of LSM workloads",
        "body": "This branch is not intended to be merged without more discussion.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 17, 2014 at 06:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Feb 27, 2014 at 02:00 GMT",
        "merged_at": "Thursday Feb 27, 2014 at 02:00 GMT"
    },
    {
        "key": null,
        "number": 846,
        "state": "closed",
        "title": "Return if another thread already is in compact.",
        "body": "@agorrod please review this.  In thinking about riak calling compact yesterday, I discovered that if multiple threads call compact on the same URI, all of them end up in the library a long time.  If that is by design, then ignore this.  But it seems that if one thread already gave merging the kickstart, the only thing this one is doing is hanging around and sleeping.  However, the one thing I'm not sure of is returning 0 immediately as that may imply to the caller that all compacting is complete.  But the use case I had in mind in riak was more \"fire and forget\" just to kick off merging.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 15, 2014 at 21:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jan 15, 2014 at 22:22 GMT",
        "merged_at": "Wednesday Jan 15, 2014 at 22:22 GMT"
    },
    {
        "key": null,
        "number": 843,
        "state": "closed",
        "title": "Add a new mode to eviction that only considers internal pages.",
        "body": "The mode is triggered when we are force evicting pages, and the cache\nis not yet full. If we don't merge internal pages while doing forced\neviction we can end up with very deep chains of WT_REC_SPLIT pages.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 14, 2014 at 02:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jan 15, 2014 at 05:46 GMT",
        "merged_at": "Wednesday Jan 15, 2014 at 05:46 GMT"
    },
    {
        "key": null,
        "number": 842,
        "state": "closed",
        "title": "Attempt to catch LSM merge races",
        "body": "refs #809\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 13, 2014 at 07:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jan 13, 2014 at 07:27 GMT",
        "merged_at": "Monday Jan 13, 2014 at 07:27 GMT"
    },
    {
        "key": null,
        "number": 841,
        "state": "closed",
        "title": "Autoconf 1.14",
        "body": "@agorrod, @michaelcahill, @sueloverso -- here's a set of changes that mostly makes the tree build with automake 1.14.\n\nIt's not complete, I'm just pushing this branch so we have something to talk about.\n\nThe big change I saw is configuring automake with `subdir-objects`.  Automake 1.14 wants object files built in the source directories (it will be the default in automake 2.0, and you get a warning error if you don't do so in 1.14).\n\nThis change means that if you build in build_posix (as I do), you get a tree under build_posix that mirrors the source tree:\n\n```\nsrc/support\nsrc/support/.deps\nsrc/support/.deps/.dirstamp\nsrc/support/.deps/cksum.Plo\nsrc/support/.deps/err.Plo\nsrc/support/.deps/filename.Plo\n...\nsrc/support/.deps/stat.Plo\nsrc/support/.dirstamp\nsrc/support/.libs\nsrc/support/.libs/cksum.o\nsrc/support/.libs/err.o\nsrc/support/.libs/filename.o\n...\nsrc/support/cksum.lo\nsrc/support/cksum.o\nsrc/support/err.lo\nsrc/support/err.o\nsrc/support/filename.lo\nsrc/support/filename.o\n```\n\nIf you build in the top-level directory (as some of you do?), you get those files in the source tree itself, alongside the C language source files.\n\nI don't think we care where people downloading our distributions build their files, but this might be a problem for us, if we want to work in trees where we build in the top-level, suddenly the source directories have a lot more stuff.\n\nI didn't get Java to build, but I think everything else is working.  There's some magic in the Java build I didn't figure out, specifically, `$(JAVASRC)` isn't working with automake 1.14.   I had to make a change in test/format to not use `$(top_srcdir)` to find a source file (see 6d8c107), and I suspect a similar change is going to be necessary for Java.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jan 11, 2014 at 21:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Jan 13, 2014 at 02:50 GMT",
        "merged_at": "Monday Jan 13, 2014 at 02:50 GMT"
    },
    {
        "key": null,
        "number": 840,
        "state": "closed",
        "title": "Split the btree page search loops into two parts.",
        "body": "This change splits the btree search loops into two parts, a default comparison loop and an application-specified collator comparison loop, and gets me about 5% improvement in random search performance.\n\nReference #839.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 10, 2014 at 21:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jan 13, 2014 at 02:50 GMT",
        "merged_at": "Monday Jan 13, 2014 at 02:50 GMT"
    },
    {
        "key": "ty-",
        "number": 838,
        "state": "closed",
        "title": "Additional empty-value support: add a new page-header flag if all of the values are empty.",
        "body": "@michaelcahill: here's the changes we discussed for a page will all-empty values.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 09, 2014 at 21:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Jan 10, 2014 at 00:22 GMT",
        "merged_at": "Friday Jan 10, 2014 at 00:22 GMT"
    },
    {
        "key": "ow-",
        "number": 837,
        "state": "closed",
        "title": "Avoid unpacking the key cell multiple times when returning key/value pairs from row-store pages.",
        "body": "Another approach.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 09, 2014 at 18:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Friday Jan 10, 2014 at 05:48 GMT",
        "merged_at": "Friday Jan 10, 2014 at 05:48 GMT"
    },
    {
        "key": null,
        "number": 836,
        "state": "closed",
        "title": "Cell unpack optimizations",
        "body": "These changes help with #562 to get back some of the regressions in 2.0.x performance vs 1.4.2.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 09, 2014 at 07:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Jan 10, 2014 at 05:49 GMT",
        "merged_at": null
    },
    {
        "key": "ow-",
        "number": 834,
        "state": "closed",
        "title": "Avoid second pass over row-store leaf pages when they're read.",
        "body": "@michaelcahill, @sue: this change avoids the second pass when reading in row-store leaf pages, as long as there aren't any zero-length values on the page.\n\nMichael: we could do a bit better and avoid the second pass in all cases, but I think it would cost us 4B in the page header, I don't see any way to do it without growing that structure.  Let me know what you think, if we should just grow that structure.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 08, 2014 at 23:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jan 08, 2014 at 23:28 GMT",
        "merged_at": "Wednesday Jan 08, 2014 at 23:28 GMT"
    },
    {
        "key": "re-",
        "number": 833,
        "state": "closed",
        "title": "Minor re-working of checksum error handling.",
        "body": "@michaelcahill, would you please review and merge if you agree with these changes?\n\nAll the details are in the commit message.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 08, 2014 at 17:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Jan 08, 2014 at 23:38 GMT",
        "merged_at": "Wednesday Jan 08, 2014 at 23:38 GMT"
    },
    {
        "key": null,
        "number": 832,
        "state": "closed",
        "title": "Improve scalability of durable log writes",
        "body": "refs #831.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 08, 2014 at 06:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Jan 09, 2014 at 17:44 GMT",
        "merged_at": "Thursday Jan 09, 2014 at 17:44 GMT"
    },
    {
        "key": null,
        "number": 830,
        "state": "closed",
        "title": "Fix errors that crash the Java VM when a cursor is explicitly closed.",
        "body": "The java test suite now passes cleanly. refs #649\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 06, 2014 at 02:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Jan 06, 2014 at 02:16 GMT",
        "merged_at": "Monday Jan 06, 2014 at 02:16 GMT"
    },
    {
        "key": null,
        "number": 828,
        "state": "closed",
        "title": "Java auto close3",
        "body": "In the java 'autoclose' work, some errors were introduced by some final refactoring - these were never adequately tested.  This branch fixes those errors so that our java tests pass again.\n",
        "base_ref": "master",
        "created_at": "Saturday Dec 28, 2013 at 15:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Saturday Dec 28, 2013 at 15:33 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 825,
        "state": "closed",
        "title": "log.c typo",
        "body": "@sueloverso, I think this is a typo, but wanted you to check me.\n\nThe reason I was looking at this code was the rework from uint32_t to size_t -- basically rdup_len and reclen are declared uint32_t's, but should probably be size_t?  I looked around but couldn't convince myself that size_t was that much better, so I left it alone, but we are calling functions that now take size_t with uint32_t args.\n",
        "base_ref": "develop",
        "created_at": "Sunday Dec 22, 2013 at 16:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Dec 30, 2013 at 15:12 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 824,
        "state": "closed",
        "title": "Parallel test",
        "body": "These changes add the '--parallel N' option to run.py for the test suite ( #788 ).  In order for it to work, you'll need to install some additional python modules as described in the 'Parallel testing' section of:\n\n  https://github.com/wiredtiger/wiredtiger/wiki/HOWTO:RunTheTestSuite\n\nBefore installing these, please verify that run.py continues to work without the --parallel option.  That is, basic non-parallel testing should still be possible without any additional modules.  That sort of testing is also possible with python's -S option, which has python forget about anything site-installed.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 19, 2013 at 19:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Dec 20, 2013 at 01:18 GMT",
        "merged_at": "Friday Dec 20, 2013 at 01:18 GMT"
    },
    {
        "key": null,
        "number": 822,
        "state": "closed",
        "title": "Tweaks to LSM merging and throttling",
        "body": "Try to get to a steady state more quickly and avoid unnecessary throttling.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 19, 2013 at 04:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Dec 19, 2013 at 05:00 GMT",
        "merged_at": "Thursday Dec 19, 2013 at 05:00 GMT"
    },
    {
        "key": null,
        "number": 821,
        "state": "closed",
        "title": "Add --dir option to run.py to allow WT_TEST directory to be changed.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 18, 2013 at 18:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Dec 19, 2013 at 12:03 GMT",
        "merged_at": "Thursday Dec 19, 2013 at 12:03 GMT"
    },
    {
        "key": null,
        "number": 819,
        "state": "closed",
        "title": "Add automatic throttling for LSM based on merge speed. Update merge_threads",
        "body": "The automatic throttling starts if there are too many chunks in an LSM tree\nthat have never been merged.\n\nIncrease the default number of LSM merge threads to 2 from 1. Since one\nmerge thread can now be pretty much dedicated to creating bloom filters.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 18, 2013 at 06:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Dec 18, 2013 at 09:23 GMT",
        "merged_at": "Wednesday Dec 18, 2013 at 09:23 GMT"
    },
    {
        "key": null,
        "number": 817,
        "state": "closed",
        "title": "Add a WT_SESSION::create lsm=(merge_min=X) configuration option.",
        "body": "Fix for issue #815 \n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 17, 2013 at 06:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Dec 17, 2013 at 22:22 GMT",
        "merged_at": "Tuesday Dec 17, 2013 at 22:22 GMT"
    },
    {
        "key": null,
        "number": 814,
        "state": "closed",
        "title": "Alternative dhandle refcount fix",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 17, 2013 at 00:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Dec 17, 2013 at 01:06 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 812,
        "state": "closed",
        "title": "If a session already has a reference to a dhandle, don't add another.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Monday Dec 16, 2013 at 22:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Dec 17, 2013 at 02:36 GMT",
        "merged_at": "Tuesday Dec 17, 2013 at 02:36 GMT"
    },
    {
        "key": null,
        "number": 811,
        "state": "closed",
        "title": "huge key/value support.",
        "body": "Here's a first set of changes for #808.\n\nIt works and passes the usual tests, but there's still a fair amount of cleanup left to do.  For example, I changed __wt_write() to take a size_t instead of a uint32_t, but I haven't yet made the corresponding change to __wt_read(), and there are a bunch of places where I cast values without working through if it's the \"right\" place to do the  conversion.\n\nI wanted everyone to get a sense of what's going on here so we can stop digging if this is a bad idea.  There's a lot of fiddly changes in here, we're going to spend some amount of time over the next 6 months futzing with various interfaces so we're consistently using size_t when talking  about buffers/objects in memory, and using uint32_t when writing to/from pages.   As another example, we should get rid of almost all of the uses of uint32_t in the block manager code: the primary use is as the length of an address, which is really a size_t, since it's an object in memory.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 16, 2013 at 18:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Dec 17, 2013 at 01:12 GMT",
        "merged_at": "Tuesday Dec 17, 2013 at 01:12 GMT"
    },
    {
        "key": null,
        "number": 806,
        "state": "closed",
        "title": "Switch to atomic flags for LSM chunks, to avoid racing when setting merge flags",
        "body": "",
        "base_ref": "develop",
        "created_at": "Thursday Dec 12, 2013 at 01:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Dec 12, 2013 at 01:50 GMT",
        "merged_at": "Thursday Dec 12, 2013 at 01:50 GMT"
    },
    {
        "key": null,
        "number": 805,
        "state": "closed",
        "title": "Spinlock stats",
        "body": "@michaelcahill, @agorrod:\n\nThese changes fix some breakage with the --with-spinlock=pthread_logging configuration statistics (wtperf opens/closes the connection, and so we were losing statistics across that open/close, because we use static variables inside the library to remember where spinlock information is).\n\nIt also extends the work in two ways: first, you now get statistics for all of the __wt_spin_trylock() calls, and second, you get totals, so you know how many lock acquisitions are being made from a particular place in the code.\n\nIf you don't think this is useful, feel free to push back, I'm not wedded to the changes (one downside, it creates a lot more graphs, we may need to consider ways to trim back the amount of log data we're writing).\n\nIt works fine with the GNUplot script (I made one minor change to always treat anything with \"spinlock\" in the title as a per-second value), but when I run against Michael's D3 script I get errors:\n\n```\nair:stats {53} python wtstats.py logs/*\nTraceback (most recent call last):\n  File \"wtstats.py\", line 175, in <module>\n    chart.add_serie(y=values, x=xdata, name=title)\n  File \"/Library/Python/2.7/site-packages/python_nvd3-0.11.0-py2.7.egg/nvd3/NVD3Chart.py\", line 194, in add_serie\n    serie = [{'x': x[i], 'y': y} for i, y in enumerate(y)]\nIndexError: list index out of range\n```\n\nI'm actually kind of interested in seeing this data plotted with Michael's work: we should be able to see a pretty interesting group of graphs, associated with a single spinlock, on a single page.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2013 at 23:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Dec 16, 2013 at 12:13 GMT",
        "merged_at": "Monday Dec 16, 2013 at 12:13 GMT"
    },
    {
        "key": null,
        "number": 804,
        "state": "closed",
        "title": "Fix LSM compact so it doesn't try to compact the file inside an LSM tree",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2013 at 21:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Dec 11, 2013 at 22:39 GMT",
        "merged_at": "Wednesday Dec 11, 2013 at 22:39 GMT"
    },
    {
        "key": null,
        "number": 803,
        "state": "closed",
        "title": "Coverity + lint",
        "body": "@agorrod: the latest build kicked out a Coverity complaint and minor lint.\n\nNone of this is interesting for the release, take or or not, I'm just getting it into the queue.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2013 at 13:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Dec 11, 2013 at 22:45 GMT",
        "merged_at": "Wednesday Dec 11, 2013 at 22:45 GMT"
    },
    {
        "key": null,
        "number": 802,
        "state": "closed",
        "title": "Drop partial results after an interrupted LSM merge.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 11, 2013 at 04:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Dec 11, 2013 at 06:05 GMT",
        "merged_at": "Wednesday Dec 11, 2013 at 06:05 GMT"
    },
    {
        "key": null,
        "number": 800,
        "state": "closed",
        "title": "Using a closed {Cursor,Session,Connection} handle in Python",
        "body": "will not crash the VM on use. ref #485\n\nUses the event callback for close to give notification on close\nof a handle.  For explicit calls to close(), we set the SWIG 'this'\nattribute on the containing object to None.\n\nOn uses of a handle as an input argument, we check to see if it is\nNone, or if its 'this' attribute is None, and issue the\nappropriate exception.\n\nIncludes a set of test cases that parallel Java test cases for the same.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 10, 2013 at 21:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Dec 18, 2013 at 06:23 GMT",
        "merged_at": "Wednesday Dec 18, 2013 at 06:23 GMT"
    },
    {
        "key": null,
        "number": 799,
        "state": "closed",
        "title": "Remove call to instantiate a deleted overflow key during reconciliation.",
        "body": "I don't believe it's possible for a key/value pair to be deleted without instantiating the key, which makes this call to __wt_row_leaf_key_work unnecessary; assert the fact.\n\n@michaelcahill: this call went in as part of #310, and there's wording there https://github.com/wiredtiger/wiredtiger/issues/310#issuecomment-9075481:\n\n> Truncate is key to this failure: it's the only way, in the current engine, to modify a key/value pair without caching the key's value in memory.\n\nI reviewed truncate, and I don't believe truncate can ever delete a row without instantiating its key.   If you agree (and can't think of any other path where we can remove a row without instantiating the key), I think we should make this change.\n",
        "base_ref": "overflow-key",
        "created_at": "Tuesday Dec 10, 2013 at 20:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Dec 10, 2013 at 22:53 GMT",
        "merged_at": "Tuesday Dec 10, 2013 at 22:53 GMT"
    },
    {
        "key": null,
        "number": 798,
        "state": "closed",
        "title": "Python auto close",
        "body": "Using a closed {Cursor,Session,Connection} handles in Python will not crash the VM.  Ref #485.\n",
        "base_ref": "master",
        "created_at": "Tuesday Dec 10, 2013 at 18:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Dec 10, 2013 at 21:36 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 797,
        "state": "closed",
        "title": "Overflow key delete race.",
        "body": "Don't let reconciliation delete overflow keys out from under readers instantiating them.  #789\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 10, 2013 at 16:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday Dec 11, 2013 at 00:46 GMT",
        "merged_at": "Wednesday Dec 11, 2013 at 00:46 GMT"
    },
    {
        "key": null,
        "number": 792,
        "state": "closed",
        "title": "Compact lsm",
        "body": "Enhance the SESSION::compact API to work with LSM trees.\n\nAlso add a new timeout configuration to the compact API.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 06, 2013 at 05:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday Dec 11, 2013 at 04:47 GMT",
        "merged_at": "Wednesday Dec 11, 2013 at 04:47 GMT"
    },
    {
        "key": "ON-",
        "number": 786,
        "state": "closed",
        "title": "Move LSM configuration options to be a group in WT_SESSION->create API.",
        "body": "This pull request isn't ready to be merged yet, but I wanted to see the results of testing.\n\nWe need to update some Jenkins jobs in co-ordination with merging this pull request. The particular jobs are: perf-med-lsm, perf-med-lsm-sleep, perf-update-lsm.\n\nThis pull request addresses issue #379 \n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 03, 2013 at 07:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Dec 04, 2013 at 00:14 GMT",
        "merged_at": "Wednesday Dec 04, 2013 at 00:14 GMT"
    },
    {
        "key": "ON-",
        "number": 785,
        "state": "closed",
        "title": "Add a new lsm_chunk_max configuration option to WT_SESSION->create.",
        "body": "This is designed to resolve issue #781 \n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 03, 2013 at 04:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Dec 03, 2013 at 06:18 GMT",
        "merged_at": "Tuesday Dec 03, 2013 at 06:18 GMT"
    },
    {
        "key": null,
        "number": 783,
        "state": "closed",
        "title": "Thread group",
        "body": "@agorrod: Alex, here you go, for your review and merge when you're happy.  It's only lightly tested so far, but I'll keep running it and see if anything looks strange.\n\nPlease let me know if I misunderstood where you wanted to go with the API.\n\nI updated the runners scripts.\n\nI don't think this will break any Jenkins scripts, but I can't be 100% positive, I did update some of the standard run outputs to reflect the fact there are potentially multiple independent workload configurations running.\n\nMost of the change is pretty straight-forward, but I'm going to note a couple of places in the code that I think are worth checking.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 03, 2013 at 00:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Dec 03, 2013 at 07:27 GMT",
        "merged_at": "Tuesday Dec 03, 2013 at 07:27 GMT"
    },
    {
        "key": null,
        "number": 780,
        "state": "closed",
        "title": "Fine grained durability testing",
        "body": "Opening a pull request for Sue's work on testing fine-grained durability.\n\nAdd printlog. refs #710\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 02, 2013 at 05:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Dec 06, 2013 at 04:51 GMT",
        "merged_at": "Friday Dec 06, 2013 at 04:51 GMT"
    },
    {
        "key": null,
        "number": 778,
        "state": "closed",
        "title": "Dhandle changes",
        "body": "@michaelcahill, @sueloverso:\n\nHere's a possibility for #737.\n\nI added an in-use counter and a time-of-death time stamp (time_t) to the WT_DATA_HANDLE structure.\n\nWhen a WT_SESSION handle acquires a new reference to a data-source, it atomically updates the in-use counter.   When a WT_SESSION handle releases the data-source, it decrements the in-use counter; if the counter goes to zero, the thread that did the decrement sets the time-of-death time stamp.\n\nWhenever a WT_SESSION takes the schema lock in order to acquire a new reference, it reads the time, and if it's been at least 20 seconds since the last scan, the thread walks the list of WT_SESSION handles looking for handles where the in-use counter is 0 and the time-of-death timestamp is at least a minute in the past, and discards references to those handles.\n\nI'm not in love with this change or anything, but it simplifies our sweeping code a bit, and it avoids sweeping more than a few times a minute, a change I'd like to have.\n\nThe cost is obvious -- two atomic updates, one on handle acquisition and one on handle close.\n\nAnyway, I'm happy to just throw this away if nobody likes it.\n\nThe change mostly works (but don't pull it even if you like it, there's some path to acquiring a reference I didn't find, so it eventually asserts and drops core because the in-use counter goes negative).\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 30, 2013 at 22:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Dec 05, 2013 at 07:20 GMT",
        "merged_at": "Thursday Dec 05, 2013 at 07:20 GMT"
    },
    {
        "key": null,
        "number": 774,
        "state": "closed",
        "title": "Switch wtperf from aggregating to sampling for latency measurements.",
        "body": "@keithbostic \n\nI've been thinking about the aggregation in wtperf and I had a look at the LinkBench implementation. They implemented a scheme that measures latency for a sample of operations, rather than averaging over a set of operations.\n\nI'm not tied to this change - so if you prefer aggregation I'm happy to throw it away.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 27, 2013 at 11:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Nov 28, 2013 at 05:12 GMT",
        "merged_at": "Thursday Nov 28, 2013 at 05:12 GMT"
    },
    {
        "key": null,
        "number": 771,
        "state": "closed",
        "title": "Wtperf changes.",
        "body": "Branch for #745; not yet ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 21, 2013 at 17:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday Nov 27, 2013 at 04:35 GMT",
        "merged_at": "Wednesday Nov 27, 2013 at 04:35 GMT"
    },
    {
        "key": null,
        "number": 770,
        "state": "closed",
        "title": "Give statistics' integer IDs separate namespaces.",
        "body": "@agorrod : I did this by giving each group of statistics its own base value.\n\nWould you please review and merge if you're happy with the change?\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 19, 2013 at 14:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Nov 19, 2013 at 21:59 GMT",
        "merged_at": "Tuesday Nov 19, 2013 at 21:59 GMT"
    },
    {
        "key": null,
        "number": 769,
        "state": "closed",
        "title": "LSM optimizations",
        "body": "1. improve merge algorithm, particularly when there are multiple merge threads;\n2. get incrementally more aggressive about merging, rather than all or nothing;\n3. avoid the checkpoint lock in common LSM paths.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Nov 19, 2013 at 03:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Nov 19, 2013 at 05:06 GMT",
        "merged_at": "Tuesday Nov 19, 2013 at 05:06 GMT"
    },
    {
        "key": null,
        "number": 768,
        "state": "closed",
        "title": "Start tuning the WT_SESSION_IMPL cache of WT_EXT and WT_SIZE structures.",
        "body": "@michaelcahill:\n\nIncrease the pre-alloc of WT_EXT/WT_SIZE structures from 5/2 to 5/5 in the write/free paths, and from 100/10 to 250/250 in the checkpoint path.\n\nTurn off cache limits: checkpoints can take tens of thousands of WT_EXT structures and hundreds of WT_SIZE structures, we want to cache everything until the checkpoint completes.  Add a cleanup call after the checkpoint so we don't tie down megabytes of memory between checkpoints.\n\nSplit the previous pre-allocate function into two parts, it's simpler as a function to pre-allocate entries and a separate function to take an entry for use.\n\nRemove the tracking of \"memory allocations while locked\"; there are extent lists we read while not holding any locks, and they can be really, really large requiring the allocation of tens of thousands of WT_EXT structures, they make the statistic meaningless.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 18, 2013 at 19:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Nov 19, 2013 at 04:43 GMT",
        "merged_at": "Tuesday Nov 19, 2013 at 04:43 GMT"
    },
    {
        "key": null,
        "number": 767,
        "state": "closed",
        "title": "Add a WT_SIZE structure cache to the WT_SESSION_IMPL handle.",
        "body": "Create a cache of WT_SIZE structures in the WT_SESSION_IMPL handle so we (hopefully) never call malloc while holding the block manager's live lock, and minimize modifying the WT_BLOCK structure's cache lines.\n\n@michaelcahill, here's the parallel change to cache WT_SIZE structures in the same way we're now caching WT_EXT structures.\n",
        "base_ref": "develop",
        "created_at": "Monday Nov 18, 2013 at 01:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Nov 18, 2013 at 02:47 GMT",
        "merged_at": "Monday Nov 18, 2013 at 02:47 GMT"
    },
    {
        "key": null,
        "number": 765,
        "state": "closed",
        "title": "Moving the WT_EXT structure cache to the session handle.",
        "body": "@michaelcahill: I've been looking at contention in the block manager, and I found what I think may be an interesting path: when a block needs to be put onto a list, we need a WT_EXT structure for that purpose.  We cache WT_EXT structures on a per-file basis, but when I run an wtperf update runner (for example, update-btree.wtperf) on an SSD, I'm seeing 500 to a thousand allocations a second during parts of the run, while holding the file write locked:\n\n![report 010](https://f.cloud.github.com/assets/1393186/1559306/a731b574-4fc8-11e3-921b-d38767093439.png)\n\nThis change  moves the WT_EXT structure cache into the WT_SESSION_IMPL handle so we can allocate those structures without holding the file's lock.\n",
        "base_ref": "develop",
        "created_at": "Sunday Nov 17, 2013 at 20:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Sunday Nov 17, 2013 at 23:08 GMT",
        "merged_at": "Sunday Nov 17, 2013 at 23:08 GMT"
    },
    {
        "key": null,
        "number": 764,
        "state": "closed",
        "title": "Minor mutex cleanups.",
        "body": "@michaelcahill, just some minor cleanups in the mutex code, but I wanted you to take a look before it went in.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 15, 2013 at 14:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Nov 15, 2013 at 23:33 GMT",
        "merged_at": "Friday Nov 15, 2013 at 23:33 GMT"
    },
    {
        "key": "ne-",
        "number": 761,
        "state": "closed",
        "title": "Change compaction into one-pass over the cache.",
        "body": "@michaelcahill, this change builds on the page-leaf-cell branch.  I believe that now that reconciliation does page locking so compaction doesn't race when looking at page modification structures, it's possible to do compaction in a single-pass: set the compaction-in-progress flag and make sure we don't race with eviction or checkpoints.  Obviously, that has a couple of advantages, it's going to be faster for big cache data sets, and we don't have to turn off eviction of the file while we're reviewing the in-memory pages.\n\nI've put it on a separate branch because I'm not 100% sure that what I'm doing with eviction is OK -- it looks right to me, but I'm prepared to find out I've forgotten about something and this can't work.\n",
        "base_ref": "page-leaf-cell",
        "created_at": "Wednesday Nov 13, 2013 at 16:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Nov 14, 2013 at 00:17 GMT",
        "merged_at": "Thursday Nov 14, 2013 at 00:17 GMT"
    },
    {
        "key": null,
        "number": 759,
        "state": "closed",
        "title": "Compaction changes.",
        "body": "More compaction changes.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 13, 2013 at 00:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Nov 14, 2013 at 00:43 GMT",
        "merged_at": "Thursday Nov 14, 2013 at 00:43 GMT"
    },
    {
        "key": null,
        "number": 758,
        "state": "closed",
        "title": "Switch log code from busy wait loops to condition variables.",
        "body": "This helps with highly multi-threaded workloads. I found that I needed to add condition variables to both the slot notify/wait code, and the log_release co-ordination to see any benefit. Adding them to one or the other caused performance to degrade.\n\n@sueloverso \n\nCould you take a look at this please? I remember you telling me that condition variables performed worse with a workload you tested with. This change is beneficial for the workloads I'm concentrating on, could you retest to see if it is negative for your workload?\n\nMichael committed a change to the WiredTiger condition variable implementation a while ago that meant we could skip notifications. Hopefully that will mean this change helps your workload as well.\n",
        "base_ref": "fine-grained-durability",
        "created_at": "Tuesday Nov 12, 2013 at 07:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Nov 14, 2013 at 19:25 GMT",
        "merged_at": "Thursday Nov 14, 2013 at 19:25 GMT"
    },
    {
        "key": null,
        "number": 756,
        "state": "closed",
        "title": "Compression review.",
        "body": "Compression review.\n",
        "base_ref": "develop",
        "created_at": "Saturday Nov 09, 2013 at 15:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Nov 11, 2013 at 02:18 GMT",
        "merged_at": "Monday Nov 11, 2013 at 02:18 GMT"
    },
    {
        "key": null,
        "number": 755,
        "state": "closed",
        "title": "Avoid eviction deadlocks",
        "body": "Don't block the oldest reader in the system forever.  Try harder to evict when we aren't keeping the oldest ID pinned.\n\nrefs #754\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 08, 2013 at 02:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Nov 08, 2013 at 04:41 GMT",
        "merged_at": "Friday Nov 08, 2013 at 04:41 GMT"
    },
    {
        "key": null,
        "number": 752,
        "state": "closed",
        "title": "Eviction and performance tweaks",
        "body": "@agorrod, here are some changes I've been thinking about for a while that should help make eviction more efficient.  Can you please let me know whether they help with the LinkBench workload?\n\nThanks,\nMichaek.\n",
        "base_ref": "fine-grained-durability",
        "created_at": "Thursday Nov 07, 2013 at 00:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Nov 07, 2013 at 23:23 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 751,
        "state": "closed",
        "title": "Fix a deadlock in LSM",
        "body": "Move the LSM tree rwlock inside the schema lock to avoid a deadlock (see #749).\n\nThe big issue here is that we need to grab the schema lock before calling `__clsm_open_cursors`, because that function reads the LSM tree structure (so it needs a read lock), but it will probably also need the schema lock because it is opening some chunks for the first time in this session.  It is unclear what impact this will have on performance.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 06, 2013 at 06:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Nov 06, 2013 at 07:36 GMT",
        "merged_at": "Wednesday Nov 06, 2013 at 07:36 GMT"
    },
    {
        "key": null,
        "number": 741,
        "state": "closed",
        "title": "Diagnostic fix for checkpoint reads",
        "body": "It is okay for checkpoint reads to see a page that is discarded in the live system.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 28, 2013 at 07:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 28, 2013 at 15:37 GMT",
        "merged_at": "Monday Oct 28, 2013 at 15:37 GMT"
    },
    {
        "key": null,
        "number": 485,
        "state": "closed",
        "title": "Automatic cleanup in Java API",
        "body": "When a connection is closed, all of the C objects it \"owns\" are also cleaned up. We need to add some code to the Java API, so that we can't attempt to use those C objects any longer.\n\nThis will require some smarts in the SWIG layer.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 25, 2013 at 04:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Thursday Nov 21, 2013 at 03:29 GMT",
        "merged_at": "Thursday Nov 21, 2013 at 03:29 GMT"
    },
    {
        "key": null,
        "number": 735,
        "state": "closed",
        "title": "Minor bug fixes in eviction.",
        "body": "@michaelcahill, here's the branch with the 3 changes we discussed.\n\nThere's another change in there as well: in `__evict_walk` we used an integer counter to start each eviction file handle traversal immediately after the handle where we ended the last walk, but if we're sweeping handles, that's not going to work any more.  I changed it to use an address in the WT_DATA_HANDLE structure instead, I think it's less work and probably more reliable.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 24, 2013 at 23:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Friday Oct 25, 2013 at 00:23 GMT",
        "merged_at": "Friday Oct 25, 2013 at 00:23 GMT"
    },
    {
        "key": null,
        "number": 734,
        "state": "closed",
        "title": "Use the event handler to capture stderr, stdout for python.",
        "body": "Cleaned up test suite infrastructure a bit using this.\nAny verbose messages from the infrastructure itself do not get captured.\nrefs #649\n\ntest_reconfig.py needed special treatment.  Verbose output from\nthreads is not necessarily flushed until the connection is closed;\nwe reopen the connection to force the flush so that the test should\npass on all platforms.\nrefs #698\n",
        "base_ref": "java-auto-close",
        "created_at": "Thursday Oct 24, 2013 at 15:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 24, 2013 at 22:16 GMT",
        "merged_at": "Thursday Oct 24, 2013 at 22:16 GMT"
    },
    {
        "key": null,
        "number": 733,
        "state": "closed",
        "title": "Log buffering",
        "body": "Add buffering into the log consolidation code. When there are concurrent writes present, force writes through the log consolidation code.\n",
        "base_ref": "fine-grained-durability",
        "created_at": "Thursday Oct 24, 2013 at 10:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 25, 2013 at 10:57 GMT",
        "merged_at": "Friday Oct 25, 2013 at 10:57 GMT"
    },
    {
        "key": null,
        "number": 731,
        "state": "closed",
        "title": "Some cleanups for wtperf.",
        "body": "Note -- this branch isn't yet ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 23, 2013 at 23:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 24, 2013 at 03:16 GMT",
        "merged_at": "Thursday Oct 24, 2013 at 03:16 GMT"
    },
    {
        "key": null,
        "number": 729,
        "state": "closed",
        "title": "wtperf lint",
        "body": "@sueloverso, I did a lint pass on wtperf, can you please skim & merge?\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 22, 2013 at 16:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 22, 2013 at 18:55 GMT",
        "merged_at": "Tuesday Oct 22, 2013 at 18:55 GMT"
    },
    {
        "key": null,
        "number": 728,
        "state": "closed",
        "title": "Minor handle cleanup/restructuring",
        "body": "@michaelcahill: staring at this code last night, I did some cleanup.\n\nUnless I'm missing something, the only function that should ever be passed a checkpoint handle is `__wt_checkpoint_close`, in the WiredTiger handle close path, and the right thing to do is to deal with checkpoint handles there and nowhere else.   This change is basically a bunch of asserts that we never see checkpoint handles except in that function.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 22, 2013 at 12:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 22, 2013 at 23:06 GMT",
        "merged_at": "Tuesday Oct 22, 2013 at 23:06 GMT"
    },
    {
        "key": null,
        "number": 726,
        "state": "closed",
        "title": "Remove restart return from overflow reads.",
        "body": "@michaelcahill: here's a possible fix -- I want to do a few more things before we pull it (and there's a specific issue I'll flag separately that I think is true but needs confirmation).\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 18, 2013 at 16:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Oct 21, 2013 at 02:31 GMT",
        "merged_at": "Monday Oct 21, 2013 at 02:31 GMT"
    },
    {
        "key": null,
        "number": 724,
        "state": "closed",
        "title": "Some LSM optimizations",
        "body": "Avoid one possible source of long application delays, and make the behavior with multiple merge threads more predictable.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 17, 2013 at 01:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Oct 17, 2013 at 04:27 GMT",
        "merged_at": "Thursday Oct 17, 2013 at 04:27 GMT"
    },
    {
        "key": null,
        "number": 723,
        "state": "closed",
        "title": "Switch the update serialization function to an atomic instruction instead of acquiring/releasing a spinlock.",
        "body": "@michaelcahill: Is it safe to not acquire the serialization mutex when looking for obsolete WT_UPDATE entries, if we switch to an atomic instruction as our update mechanism?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 16, 2013 at 15:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 16, 2013 at 23:14 GMT",
        "merged_at": "Wednesday Oct 16, 2013 at 23:14 GMT"
    },
    {
        "key": null,
        "number": 719,
        "state": "closed",
        "title": "More simplification of serial functions",
        "body": "@keithbostic, these changes follow on from #718 -- I think we can always set up next pointers before calling serialized functions.  Can you please take a look?\n\nThanks,\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 15, 2013 at 05:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Oct 15, 2013 at 13:49 GMT",
        "merged_at": "Tuesday Oct 15, 2013 at 13:49 GMT"
    },
    {
        "key": null,
        "number": 718,
        "state": "closed",
        "title": "avoid memory barriers inside serialization functions.",
        "body": "If we set the WT_UPDATE/WT_INSERT forward pointers before calling the serialization function, we can potentially avoid the additional memory barrier inside the serialization function.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 15, 2013 at 00:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Oct 15, 2013 at 02:08 GMT",
        "merged_at": "Tuesday Oct 15, 2013 at 02:08 GMT"
    },
    {
        "key": null,
        "number": 717,
        "state": "closed",
        "title": "Statistics checkpoint",
        "body": "Rework the statistics logging code to aggregate information from any open handles, so, for example, the statistics from open checkpoint handles will be logged.\n\nRef #709.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 11, 2013 at 20:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 14, 2013 at 04:01 GMT",
        "merged_at": "Monday Oct 14, 2013 at 04:01 GMT"
    },
    {
        "key": "un-",
        "number": 715,
        "state": "closed",
        "title": "Split statistics macros into two parts: run-time and everything else.",
        "body": "@michaelcahill: I spent 20 minutes trying to figure out why I couldn't get any statistics for a file until I remembered that it's all triggered off statistics being configured.\n\nThis change splits the statistics macros into two flavors: run-time and everything else, that way if you open a statistics cursor on a URI without configuring run-time statistics, you can still get information about the underlying table/file.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 10, 2013 at 12:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Oct 21, 2013 at 18:36 GMT",
        "merged_at": "Monday Oct 21, 2013 at 18:36 GMT"
    },
    {
        "key": "er-",
        "number": 708,
        "state": "closed",
        "title": "Track the per-page contribution to the cache's dirty byte count.",
        "body": "If this is non-zero when a page is being discarded, fix the cache's count.\n\nrefs #635, #699\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 08, 2013 at 05:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 08, 2013 at 07:12 GMT",
        "merged_at": "Tuesday Oct 08, 2013 at 07:12 GMT"
    },
    {
        "key": null,
        "number": 707,
        "state": "closed",
        "title": "Shorter serialization locks",
        "body": "@michaelcahill, @agorrod, @sueloverso:\n\nOne of the things I was curious about with the mutex-logging branch was how much we were blocking ourselves in the serialization function -- it turns out, there's some evidence we're doing it a fair amount.   The following two graphs are wtperf, running with a modified update-lsm config:\n\n```\n--- a/bench/wtperf/runners/update-lsm.wtperf\n+++ b/bench/wtperf/runners/update-lsm.wtperf\n@@ -1,13 +1,13 @@\n # wtperf options file: lsm with inserts/updates, in memory\n-conn_config=\"cache_size=1G\"\n+conn_config=\"cache_size=500MB,statistics_log=(wait=15)\"\n table_config=\"lsm_chunk_size=20MB,type=lsm\"\n-icount=5000000\n+icount=50000000\n report_interval=5\n checkpoint_interval=0\n stat_interval=4\n run_time=120\n populate_threads=1\n-read_threads=2\n-insert_threads=2\n-update_threads=2\n+read_threads=6\n+insert_threads=4\n+update_threads=4\n verbose=1\n```\n\nHere's the current code:\n\n![current](https://f.cloud.github.com/assets/1393186/1282539/a4909538-2f75-11e3-8845-73c631d71c47.png)\n\nAnd here's a hacked up version that releases the serialization mutex more quickly:\n\n![shorter serialization](https://f.cloud.github.com/assets/1393186/1282542/a887442a-2f75-11e3-81c9-27b8ebb3a4c4.png)\n\nOf course, these runs are in the spinlock logging branch, which makes things noticeably slower.\n\nThe original idea (IIRC), behind holding the serialization lock longer was two-fold:\n\nFirst, we thought the various atomic instructions inside it (like updating the page and cache memory footprints) were less likely to collide if we put them inside of a bigger lock;\n\nSecond, there were some things we did that weren't atomic instructions, and some lock was required, might as well use the one we were already holding.\n\nOver time, the second reason has gradually been eroded, there's only the first one left.\n\nThat said, just because we're no longer colliding as much on the serialization lock doesn't mean we're not now colliding all over the place on a bunch of other atomic instructions.\n\n@sueloverso, is there a standard update- or insert-heavy test you could run before and after this branch that would tell us if shortening the length of time we hold the serialization lock translates into faster throughput?\n\nThe interesting changes:\n\nI'm marking the page dirty after releasing the serialization spinlock.\n\nI'm not incrementing the page's memory footprint until after releasing the serialization spinlock:\n\n```\n/*\n * Increment in-memory footprint after releasing the mutex: that's safe\n * because the structures we added cannot be discarded while visible to\n * any running transaction, and we're a running transaction, which means\n * there can be no corresponding delete until we complete.\n */\n```\n\n@michaelcahill, is that reasoning correct?\n\nFinally, the reason I made this change off the cache-dirty-bytes branch is because it's the only branch where I trust the page/cache memory footprint behavior, which is kind of a requirement for this change.   @agorrod is still not yet happy with that branch, so there's a possible issue there.\n",
        "base_ref": "cache-dirty-bytes",
        "created_at": "Monday Oct 07, 2013 at 17:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 09, 2013 at 04:49 GMT",
        "merged_at": "Wednesday Oct 09, 2013 at 04:49 GMT"
    },
    {
        "key": null,
        "number": 706,
        "state": "closed",
        "title": "Add spinlock logging to statistics.",
        "body": "Add support for tracking which spinlocks block other spinlocks and displaying it as part of the logged statistics.\n\n@michaelcahill -- I've been thinking of ways to try and get a handle on what threads are blocking other threads, and why, and I came up with this.\n\nI added an array to each spinlock structure.  If an attempt to acquire a spinlock blocks, we increment a slot in the array, tracking the code path that was holding the spinlock we couldn't acquire.   Then, I tied it into the statistics-logging stuff, so we can track it over time.\n\nIt's not too invasive to the code, the big downside is there's an additional memory flush as part of acquiring a spinlock, which slows things down.  If you decide this is worth keeping around, we should make it separately configurable from statistics logging, we shouldn't be doing this unless explicitly requested by the application, it's more for us than for anybody else.\n\nHere's the the output looks like, from a wtperf run with a slightly modified update-lsm.wtperf configuration.  The code in __evict_lru() at line 634 blocks itself periodically in this run\n\n```\n    619 static int\n    620 __evict_lru(WT_SESSION_IMPL *session, int clean)\n    621 {\n    622         WT_CACHE *cache;\n    623         WT_DECL_RET;\n    624         WT_EVICT_ENTRY *evict;\n    625         uint64_t cutoff;\n    626         uint32_t i, candidates;\n    627\n    628         cache = S2C(session)->cache;\n    629\n    630         /* Get some more pages to consider for eviction. */\n    631         WT_RET(__evict_walk(session, &candidates, clean));\n    632\n    633         /* Sort the list into LRU order and restart. */\n    634         __wt_spin_lock(session, &cache->evict_lock);\n```\n\n![report 080](https://f.cloud.github.com/assets/1393186/1277265/13226c52-2eb7-11e3-8f03-851189318a2e.png)\n\nOr, here's the pattern for where inserts block other inserts:\n\n![report 069](https://f.cloud.github.com/assets/1393186/1277269/650009e4-2eb7-11e3-935b-163515c8e0b4.png)\n\nI looked around for a tool that would give me this information, but I couldn't find anything, maybe there's something out there I didn't find?   And, of course, I'm absolutely prepared to have you hate this.  Heck, I don't like it much, myself.  :-)\n",
        "base_ref": "mutex-cleanup",
        "created_at": "Sunday Oct 06, 2013 at 18:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 16, 2013 at 00:17 GMT",
        "merged_at": "Wednesday Oct 16, 2013 at 00:17 GMT"
    },
    {
        "key": null,
        "number": 705,
        "state": "closed",
        "title": "Always cache the last key returned for use in scans.",
        "body": "Otherwise, we can do huge amounts of unnecessary work in __cursor_row_slot_return when scanning some pages.  This change speeds up test_backup03 by over 20% (by speeding up \"wt dump\").\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 04, 2013 at 16:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 04, 2013 at 17:14 GMT",
        "merged_at": "Friday Oct 04, 2013 at 17:14 GMT"
    },
    {
        "key": null,
        "number": 704,
        "state": "closed",
        "title": "Mutex cleanup",
        "body": "@sue, would you please review this one?\n\nI moved the serialization lock from WT_CONNECTION into WT_BTREE, the btree code is the only user (and it might reduce contention when we have a workload with lots of files being modified, for example, LSM).\n\nAnd, if we're using pthread locking for spinlocks, lock initialization can fail and we don't want to destroy uninitialized memory, track if the lock was ever initialized.\n\nThank you!\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 04, 2013 at 16:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Oct 07, 2013 at 14:00 GMT",
        "merged_at": "Monday Oct 07, 2013 at 14:00 GMT"
    },
    {
        "key": null,
        "number": 591,
        "state": "closed",
        "title": "Automatically create bloom filters if merges stop",
        "body": "If LSM merges decide not to choose a set of the most recent chunks to merge, it should create bloom filters for them instead.  Either remove the `lsm_bloom_newest` setting, or at least default it to true, and move the work into the merge thread.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 04, 2013 at 13:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Oct 15, 2013 at 00:13 GMT",
        "merged_at": "Tuesday Oct 15, 2013 at 00:13 GMT"
    },
    {
        "key": null,
        "number": 702,
        "state": "closed",
        "title": "Hardware cksum",
        "body": "If the hardware supports it, do CRC instructions, if not use software CRC.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 03, 2013 at 15:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 04, 2013 at 22:14 GMT",
        "merged_at": "Friday Oct 04, 2013 at 22:14 GMT"
    },
    {
        "key": null,
        "number": 700,
        "state": "closed",
        "title": "support eviction of clean internal pages that have children",
        "body": "@michaelcahill, you suggested it might be possible to attempt to evict a clean internal page with children.\n\nLooking at this again, I don't think it's possible.   There's code in __rec_review():\n\n```\n/*\n * Fail if any page in the top-level page's subtree won't be merged into\n * its parent, the page that cannot be merged must be evicted first.\n * The test is necessary but should not fire much: the eviction code is\n * biased for leaf pages, an internal page shouldn't be selected for\n * eviction until its children have been evicted.\n */\nmod = page->modify;\nif (!top && (mod == NULL || !F_ISSET(mod,\n    WT_PM_REC_EMPTY | WT_PM_REC_SPLIT | WT_PM_REC_SPLIT_MERGE)))\n        return (EBUSY);\n```\n\nwhich willl fail if we ever get here with a clean internal page with children.\n\nIn other words, __wt_rec_evict() must discard a full tree in the case of a dirty page because there might be split, empty or split-merge pages below it that are being discarded as well; __wt_rec_evict() only has to discard the single page in the case of a clean page, there can't be anything below it.\n\nThere is some cost in making this change: we would have to walk clean internal pages when they're evicted, looking for children, which we don't have to do now.   That said, internal pages are supposed to be small, it's not that big a cost.\n\nSo:\n1. We could relax this code so clean internal pages with children can be evicted, but I don't see much value in doing that work.  I think the LRU bias for leaf pages, coupled with the fact that the parent is going to be visited every time the leaf page is visited, will pretty much guarantee it never happens.\n2. We could pull this branch, just to make sure we don't introduce a bug in the future.\n3. We could add a DIAGNOSTIC check of clean internal pages so we catch any bugs we introduce in the future.\n4. We could just discard this branch.\n\nI don't like the first option much, but the others are all fine with me.   Your choice?\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 03, 2013 at 12:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Oct 04, 2013 at 04:11 GMT",
        "merged_at": "Friday Oct 04, 2013 at 04:11 GMT"
    },
    {
        "key": null,
        "number": 682,
        "state": "closed",
        "title": "wtperf failure: accessing a freed page",
        "body": "I'm running a script over the wtperf configs and the 3rd iteration of evict-lsm took a segv.\n\n```\n(gdb) bt\n#0  0x00000000004432c5 in __wt_tree_walk (session=0xd17060, \n    pagep=0x7fb9401c3358, flags=16) at ../src/btree/bt_walk.c:242\n#1  0x0000000000431ff6 in __evict_walk_file (session=0xd17060, \n    slotp=0x7fb9f041bd5c, clean=1) at ../src/btree/bt_evict.c:826\n#2  0x0000000000431ac5 in __evict_walk (session=0xd17060, \n    entriesp=0x7fb9f041bdc0, clean=1) at ../src/btree/bt_evict.c:750\n#3  0x00000000004316a6 in __evict_lru (session=0xd17060, clean=1)\n    at ../src/btree/bt_evict.c:631\n#4  0x0000000000430bb3 in __evict_worker (session=0xd17060)\n    at ../src/btree/bt_evict.c:252\n#5  0x00000000004307cc in __wt_cache_evict_server (arg=0xd17060)\n    at ../src/btree/bt_evict.c:160\n#6  0x00007fb9f10e4c6b in start_thread () from /lib64/libpthread.so.0\n#7  0x00007fb9f0a1d5ed in clone () from /lib64/libc.so.6\n\n241                     if ((prev && slot == 0) ||\n242                         (!prev && slot == page->entries - 1)) {\n\n(gdb) p *page\nCannot access memory at address 0x7f9239e9e4819bd6\n```\n\nNot sure how reproducible it is, but clearly doesn't happen every time since the other 2 iterations passed. \n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 03, 2013 at 03:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Thursday Oct 03, 2013 at 11:21 GMT",
        "merged_at": "Thursday Oct 03, 2013 at 11:21 GMT"
    },
    {
        "key": null,
        "number": 699,
        "state": "closed",
        "title": "Cache dirty bytes",
        "body": "@agorrod, this is the best fix I can come up with for the cache dirty-bytes problem.\n\nI think you're the best reviewer.\n\nThe commit explains what I did.\n\nMy primary concern is we could fall far enough behind (because we're not reconciling the page), that the cache would have a seriously incorrect count of dirty bytes.   Could that happen in a new tree, where we're just frantically inserting new data?\n\nIf that's a problem, I was thinking of doing something like this:\n\n```\ndiff --git a/src/include/btree.i b/src/include/btree.i\nindex aa63fe0..45428fd 100644\n--- a/src/include/btree.i\n+++ b/src/include/btree.i\n@@ -282,6 +282,8 @@ __wt_page_modify_init(WT_SESSION_IMPL *session, WT_PAGE *page)\n static inline void\n __wt_page_only_modify_set(WT_SESSION_IMPL *session, WT_PAGE *page)\n {\n+   int64_t diff;\n+\n    /*\n     * We depend on atomic-add being a write barrier, that is, a barrier to\n     * ensure all changes to the page are flushed before updating the page\n@@ -300,6 +302,20 @@ __wt_page_only_modify_set(WT_SESSION_IMPL *session, WT_PAGE *page)\n         */\n        if (F_ISSET(&session->txn, TXN_RUNNING))\n            page->modify->disk_snap_min = session->txn.snap_min;\n+   } else {\n+       /*\n+        * Make sure the cache's dirty-byte information for this page\n+        * isn't too far from reality -- if we're off by more than 10%,\n+        * fix it.\n+        */\n+       diff = page->memory_footprint -\n+           page->modify->last_memory_footprint;\n+       if (diff < 0)\n+           diff = -diff;\n+       if (diff > (int64_t)page->memory_footprint / 10) {\n+           __wt_cache_dirty_decr(session, page);\n+           __wt_cache_dirty_incr(session, page);\n+       }\n    }\n }\n```\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 01, 2013 at 00:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday Oct 09, 2013 at 03:07 GMT",
        "merged_at": "Wednesday Oct 09, 2013 at 03:07 GMT"
    },
    {
        "key": null,
        "number": 696,
        "state": "closed",
        "title": "Add a reference count to LSM chunks",
        "body": "The reference count is used to ensure that chunks can't be freed while worker threads are accessing them.\n\nReferences issue #693 \n",
        "base_ref": "develop",
        "created_at": "Monday Sep 30, 2013 at 06:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Oct 01, 2013 at 13:00 GMT",
        "merged_at": "Tuesday Oct 01, 2013 at 13:00 GMT"
    },
    {
        "key": null,
        "number": 695,
        "state": "closed",
        "title": "Generation cleanup",
        "body": "This is a set of changes to simplify the page clean/dirty code, and fix a few bugs along the way.\n\nIt's not ready to pull, I'm creating the pull request to make it easier to review.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 28, 2013 at 01:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 30, 2013 at 04:05 GMT",
        "merged_at": "Monday Sep 30, 2013 at 04:05 GMT"
    },
    {
        "key": null,
        "number": 694,
        "state": "closed",
        "title": "skip the same prefix bytes on the child page that we skipped on the parent page",
        "body": "@michaelcahill, it occurred to me we should be able to skip the same prefix bytes on the child page we skip on the parent page, that is, there's no reason to clear the low/high prefix byte counts when we descend the tree.  It's not going to make a performance difference, I don't think, because the first 2 comparisons on the child page would reset the values, but it still seems like the clean thing to do.\n\nIt's a little scary caching information across a page switch (!!?), but I can't think of any reason it's not going to work, if it didn't work, it seems to me there's tree corruption.\n\nWanted to get a review, though, just in case there's some edge case I'm not thinking of, or there's a race when switching pages that could mess with this?\n\nRef #595.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 25, 2013 at 00:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Oct 02, 2013 at 22:53 GMT",
        "merged_at": "Wednesday Oct 02, 2013 at 22:53 GMT"
    },
    {
        "key": null,
        "number": 692,
        "state": "closed",
        "title": "dhandle locking during close",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 18, 2013 at 22:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 19, 2013 at 00:19 GMT",
        "merged_at": "Thursday Sep 19, 2013 at 00:19 GMT"
    },
    {
        "key": null,
        "number": 686,
        "state": "closed",
        "title": "test_backup03 failure with LSM files",
        "body": "@michaelcahill, I'm generating a pull request so it's easy to look at the changes, it's not ready to pull yet.\n\nReference #684.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 13, 2013 at 18:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Sep 16, 2013 at 00:41 GMT",
        "merged_at": "Monday Sep 16, 2013 at 00:41 GMT"
    },
    {
        "key": null,
        "number": 685,
        "state": "closed",
        "title": "minor code change (on the wrong branch)",
        "body": "minor code change (on the wrong branch), I'm just going to merge and delete.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 13, 2013 at 12:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Sep 13, 2013 at 13:01 GMT",
        "merged_at": "Friday Sep 13, 2013 at 13:01 GMT"
    },
    {
        "key": null,
        "number": 681,
        "state": "closed",
        "title": "Bulk handles",
        "body": "@michaelcahill: I'm ready to merge this if you agree with the change.   The other fixes in this area are probably going to be tricker.\n\nRef #679.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 12, 2013 at 15:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 12, 2013 at 23:50 GMT",
        "merged_at": "Thursday Sep 12, 2013 at 23:50 GMT"
    },
    {
        "key": null,
        "number": 674,
        "state": "closed",
        "title": "Hot backup of files that are being bulk loaded",
        "body": "@agorrod, @michaelcahill: the fixes to allow hot-backups to run concurrently with bulk-loading files.\n\nRef #653, #570.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 11, 2013 at 01:11 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday Sep 11, 2013 at 03:08 GMT",
        "merged_at": "Wednesday Sep 11, 2013 at 03:08 GMT"
    },
    {
        "key": null,
        "number": 673,
        "state": "closed",
        "title": "Cursor insert change",
        "body": "@michaelcahill, here are the changes we discussed.\n\nAll of our tests appear to run, but there are a couple of changes that worry me, I'll comment them in the diff.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 10, 2013 at 16:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Sep 11, 2013 at 02:24 GMT",
        "merged_at": "Wednesday Sep 11, 2013 at 02:24 GMT"
    },
    {
        "key": "pt-",
        "number": 671,
        "state": "closed",
        "title": "wtperf ckpt-lsm config panic",
        "body": "update not found for: 00000000000014372158, range: 17181384 an insert is likely more than ten percent behind reads Error: WT_NOTFOUND: item not found\nI dug into the failure that came across with the ckpt-lsm configuration from Friday.  Here is where the original error occurred.  Note that there were many (> 100) of the \"update not found\" messages beforehand.  The cursor.search error is the real one.\n\nupdate not found for: 00000000000008750865, range: 17181455 an insert is likely more than ten percent behind reads Error: WT_NOTFOUND: item not found\nupdate not found for: 00000000000000220284, range: 17181455 an insert is likely more than ten percent behind reads Error: WT_NOTFOUND: item not found\nupdate not found for: 00000000000001304256, range: 17182459 an insert is likely more than ten percent behind reads Error: WT_NOTFOUND: item not found\nfile:test-000210.lsm, cursor.search: encountered an illegal file format or internal value\nfile:test-000210.lsm, cursor.search: the WiredTiger library cannot continue; the process must exit and restart\nupdate failed for: 00000000000000141872, range: 19835621 Error: WT_PANIC: WiredTiger library panic\n\nThe failing WT_TEST home dir no longer exists on the AWS box.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 10, 2013 at 05:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Sep 10, 2013 at 06:24 GMT",
        "merged_at": "Tuesday Sep 10, 2013 at 06:24 GMT"
    },
    {
        "key": null,
        "number": 669,
        "state": "closed",
        "title": " clean up conn_dhandle_get() error handling",
        "body": "@sueloverso, would you please review this one, and pull it if you agree?\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 09, 2013 at 14:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 09, 2013 at 15:28 GMT",
        "merged_at": "Monday Sep 09, 2013 at 15:28 GMT"
    },
    {
        "key": null,
        "number": 668,
        "state": "closed",
        "title": "Lsm checkpoint lock",
        "body": "Ensure that LSM is holding the checkpoint lock before doing things that can interfere with (or be interfered upon) checkpoint operations.\n\nReferences #664 \n",
        "base_ref": "develop",
        "created_at": "Monday Sep 09, 2013 at 09:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Sep 10, 2013 at 00:14 GMT",
        "merged_at": "Tuesday Sep 10, 2013 at 00:14 GMT"
    },
    {
        "key": null,
        "number": 667,
        "state": "closed",
        "title": "Column group overwrite config",
        "body": "@michaelcahill, with this change, I can remove the code that sets the overwrite configuration for the column groups to false, and the test suite passes.\n\nThe required change is because the table WT_CURSOR.insert code was relying on a duplicate-key error from the primary cursor to decide if the operation was an insert or an update so that it could remove the index entries in the case of an update.   I've added an additional primary search in the WT_CURSOR.insert case since we can no longer rely on that error.\n\nThis change fixes #614.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 07, 2013 at 21:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Sep 10, 2013 at 00:22 GMT",
        "merged_at": "Tuesday Sep 10, 2013 at 00:22 GMT"
    },
    {
        "key": null,
        "number": 666,
        "state": "closed",
        "title": "Create a temporary WT environment directory used only for arg parsing, remove it when complete.  refs #633",
        "body": "This replaces the configure/reconfigure dance that we did previously.\n\nExample fixed by this change:  ./wtperf -M -o \"conn_config=\\\"statistics_log=(wait=60)\\\"\"\nmay potentially fix other config options that cannot be 'reconfigured'.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 06, 2013 at 19:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Sep 12, 2013 at 17:56 GMT",
        "merged_at": "Thursday Sep 12, 2013 at 17:56 GMT"
    },
    {
        "key": null,
        "number": 643,
        "state": "closed",
        "title": "test/format failure: illegal cell and page type combination",
        "body": "Just saw an interesting test/format failure that I'd like to chase further:\n\n```\n270: table, variable-length column-store                                     \nt, file:wt.wt, session.checkpoint: illegal cell and page type combination: cell 8 on page at [write-check] is a value/ovfl,rm cell on a row-store leaf page\nt, session.checkpoint: table:wt: WT_ERROR: non-specific WiredTiger error\nt: session.compact: WT_ERROR: non-specific WiredTiger error\n############################################\n#  RUN PARAMETERS\n############################################\n# bitcnt not applicable to this run\ncache=40\ncompression=snappy\ndata_extend=0\ndata_source=table\ndelete_pct=7\ndictionary=1\nfile_type=row-store\nhot_backups=0\nhuffman_key=0\nhuffman_value=0\ninsert_pct=34\ninternal_key_truncation=0\ninternal_page_max=13\nkey_gap=16\nkey_max=64\nkey_min=12\nleaf_page_max=12\nops=5000\nprefix=1\nrepeat_data_pct=49\nreverse=0\nrows=100\nruns=0\nsplit_pct=52\nthreads=20\nvalue_max=256\nvalue_min=19\n# wiredtiger_config not applicable to this run\nwrite_pct=45\n```\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 04, 2013 at 03:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday Sep 04, 2013 at 04:20 GMT",
        "merged_at": "Wednesday Sep 04, 2013 at 04:20 GMT"
    },
    {
        "key": null,
        "number": 656,
        "state": "closed",
        "title": "test/format failure: checkpoint ranges never verified",
        "body": "This issue is reproduced with the following configuration:\n\n```\n############################################\n#  RUN PARAMETERS\n############################################\n# bitcnt not applicable to this run\ncache=30\ncompression=none\ndata_extend=0\ndata_source=table\ndelete_pct=7\ndictionary=1\nfile_type=row-store\nhot_backups=0\nhuffman_key=0\nhuffman_value=0\ninsert_pct=50\ninternal_key_truncation=0\ninternal_page_max=13\nkey_gap=16\nkey_max=64\nkey_min=12\nleaf_page_max=12\nops=500000\nprefix=1\nrepeat_data_pct=30\nreverse=0\nrows=100\nruns=0\nsplit_pct=52\nthreads=20\nvalue_max=256\nvalue_min=19\n# wiredtiger_config not applicable to this run\nwrite_pct=45\n```\n\nThe configuration is very similar to that in issue #639, but the symptoms are different. I've seen two types of failure:\n\n```\n  10: table, row-store                                                        \nt, file:wt.wt, session.checkpoint: illegal cell and page type combination: cell 4 on page at [write-check] is a value/ovfl,rm cell on a row-store leaf page\nt: session.checkpoint: WT_ERROR: non-specific WiredTiger error\n```\n\nand:\n\n```\n  12: table, row-store                                                        \nt, file:wt.wt, session.verify: checkpoint ranges never verified: 15       \nt, file:wt.wt, session.verify: file ranges never verified: 669\nt: session.verify: table:wt: post-ops verify: WT_ERROR: non-specific WiredTiger error\n```\n\nRunning on a machine with SSDs, the failure generally happens after less than 20 iterations of test/format.\n\nIf I disable the in-memory page split code, I no longer see a failure.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 03, 2013 at 01:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Sep 03, 2013 at 05:18 GMT",
        "merged_at": "Tuesday Sep 03, 2013 at 05:18 GMT"
    },
    {
        "key": null,
        "number": 660,
        "state": "closed",
        "title": "Metadata cursor",
        "body": "@michaelcahill, here's a possible implementation of the metadata cursor, ref #659.   If this is what you had in mind, cool, otherwise, point me at what you're thinking and I'll fix it.\n\nOne thing if you're tempted to merge this change: I'm getting an error \"Unreferenced page: see docs/pages.html for the list\", for the page I created, but I don't see how to fix it.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 02, 2013 at 23:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Sep 03, 2013 at 04:59 GMT",
        "merged_at": "Tuesday Sep 03, 2013 at 04:59 GMT"
    },
    {
        "key": "ad-",
        "number": 658,
        "state": "closed",
        "title": "test/format failure: ins_head->head[i] != NULL",
        "body": "A test/format core dump, an assert in the `__split_row_page_inmem` code.\n\n```\nt, file:wt.wt, session.checkpoint: ../src/btree/rec_split.c, 176: ins_head->head[i] != NULL\n\n#4  0x000000000043454d in __wt_assert (session=0x8eda30, error=0, \n    file_name=0x676015 \"../src/btree/rec_split.c\", line_number=176, \n    fmt=0x676012 \"%s\") at ../src/support/err.c:408\n#5  0x0000000000453e4c in __split_row_page_inmem (session=0x8eda30, \n    orig=0x7fffc40015a0) at ../src/btree/rec_split.c:176\n#6  0x0000000000454168 in __wt_split_page_inmem (session=0x8eda30, \n    page=0x7fffc40015a0) at ../src/btree/rec_split.c:248\n#7  0x0000000000451843 in __wt_rec_evict (session=0x8eda30, \n    page=0x7fffc40015a0, exclusive=0) at ../src/btree/rec_evict.c:71\n#8  0x000000000043e967 in __wt_evict_page (session=0x8eda30, \n    page=0x7fffc40015a0) at ../src/btree/bt_evict.c:355\n#9  0x0000000000450823 in __wt_page_release (session=0x8eda30, \n    page=0x7fffc40015a0) at ../src/include/btree.i:537\n#10 0x00000000004508b9 in __wt_page_swap_func (session=0x8eda30, \n    out=0x7fffc40015a0, in=0x7fffc4013750, inref=0x7fffc40137f8, \n    file=0x675c44 \"../src/btree/bt_walk.c\", line=338)\n    at ../src/include/btree.i:574\n#11 0x0000000000451239 in __wt_tree_walk (session=0x8eda30, \n    pagep=0x7fffe6bfca30, flags=132) at ../src/btree/bt_walk.c:337\n#12 0x000000000043eed4 in __wt_sync_file (session=0x8eda30, syncop=1)\n    at ../src/btree/bt_evict.c:535\n```\n\nHere's the insert-head/tail information:\n\n```\n(gdb) frame 6\n#6  0x0000000000454168 in __wt_split_page_inmem (session=0x8eda30, \n    page=0x7fffc40015a0) at ../src/btree/rec_split.c:248\n248     return (__split_row_page_inmem(session, page));\n(gdb) down\n#5  0x0000000000453e4c in __split_row_page_inmem (session=0x8eda30, \n    orig=0x7fffc40015a0) at ../src/btree/rec_split.c:176\n176     WT_ASSERT(session, ins_head->head[i] != NULL);\n(gdb) p *ins_head\n$1 = {head = {0x7fffec017060, 0x7fffec017060, 0x7fffb4009b60, 0x7fffc0016550, \n    0x7fffc0016550, 0x7fffc0016550, 0x0, 0x0, 0x0, 0x0}, tail = {\n    0x7fffc0016550, 0x7fffc0016550, 0x7fffc0016550, 0x7fffc0016550, \n    0x7fffc0016550, 0x7fffc0016550, 0x0, 0x0, 0x0, 0x0}}\n(gdb) p i\n$2 = 6\n(gdb) p ins\n$3 = (WT_INSERT *) 0x7fffc0016550\n```\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 02, 2013 at 01:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday Sep 03, 2013 at 01:18 GMT",
        "merged_at": "Tuesday Sep 03, 2013 at 01:18 GMT"
    },
    {
        "key": null,
        "number": 655,
        "state": "closed",
        "title": "Make it OK if a filesystem doesn't support some posix_fadvise flags.",
        "body": "Specifically flags related to preloading data.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 30, 2013 at 05:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Sep 03, 2013 at 13:19 GMT",
        "merged_at": "Tuesday Sep 03, 2013 at 13:19 GMT"
    },
    {
        "key": null,
        "number": 652,
        "state": "closed",
        "title": "Loosen the conditional to allocate txnid_max array.",
        "body": "@agorrod Please review.  This changes the conditional to call __wt_realloc_def that caused the segv in #650.  \n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 28, 2013 at 19:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Aug 28, 2013 at 20:31 GMT",
        "merged_at": "Wednesday Aug 28, 2013 at 20:31 GMT"
    },
    {
        "key": null,
        "number": 651,
        "state": "closed",
        "title": "overflow record tracking cleanup",
        "body": "@michaelcahill, @agorrod \n\nI'm going to take a run at speeding up our handling over overflow items, based on #330.\n\nAs you know, the problem is if we're tracking overflow objects in reconciliation, we do linear walks/searches of potentially (really!) big lists of overflow items.\n\nThe first step was to separate out the list of addresses we're tracking for discard from the list of overflow objects (the list of addresses is never searched or processed, it's a list of 1 or 2 addresses that get discarded when the page is successfully reconciled).  That's the list that's making us allocate the tracking memory most of the time, and we only need on the order of 20B since a typical address is 7-8 bytes when using a POSIX file system.\n\nI've committed that change and the next step will be to replace the current overflow tracking software with some kind of skiplist based on the overflow item's hash.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 28, 2013 at 18:24 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Sep 02, 2013 at 01:33 GMT",
        "merged_at": "Monday Sep 02, 2013 at 01:33 GMT"
    },
    {
        "key": null,
        "number": 649,
        "state": "closed",
        "title": "Auto close handler",
        "body": "Add a handler to the WT_EVENT_HANDLER structure that receives a callback whenever WiredTiger automatically closes a handle.\n\nAlso add a stub implementation to the Python API. Nothing in the Java API yet.\n\nNot yet ready to merge, but I wanted to get it through a round of testing.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 28, 2013 at 10:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Friday Oct 25, 2013 at 01:13 GMT",
        "merged_at": "Friday Oct 25, 2013 at 01:13 GMT"
    },
    {
        "key": null,
        "number": 648,
        "state": "closed",
        "title": "Add transaction_log_sync support for config.",
        "body": "@michaelcahill I modified the sync connection config string to be checkpoint_sync per our call last week and added a transactional sync configuration to allow the user to select fsync, dsync or no syncing.  This is off the fine-grained-durability branch.  Merge into that branch please, after review.\n",
        "base_ref": "fine-grained-durability",
        "created_at": "Tuesday Aug 27, 2013 at 18:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Aug 28, 2013 at 03:04 GMT",
        "merged_at": "Wednesday Aug 28, 2013 at 03:04 GMT"
    },
    {
        "key": null,
        "number": 647,
        "state": "closed",
        "title": "Retry if releasing lock reduced nchunks. (#646)",
        "body": "@agorrod or @michaelcahill here is one possibility for a fix for the parallel-pop-lsm config for wtperf.  It allows the relevant values of skip_chunks to get recomputed when lsm_tree->nchunks changes, thus avoiding the segv.  However, I know this area only enough to be dangerous.  It does pass the failing wtperf config, make check and run.py.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 26, 2013 at 22:48 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Tuesday Aug 27, 2013 at 01:45 GMT",
        "merged_at": "Tuesday Aug 27, 2013 at 01:45 GMT"
    },
    {
        "key": null,
        "number": 645,
        "state": "closed",
        "title": "Skiplist common prefix",
        "body": "@michaelcahill: here are the changes that I believe resolve #596.\n\nThey've only been lightly tested, but appear to do what we expected; results from pixiebob:\n\n```\n 0 additional prefix bytes: old  3.73, new 3.27 (2.68%)\n 5 additional prefix bytes: old  4.55, new 3.67 (19.34%)\n10 additional prefix bytes: old  5.41, new 3.95 (26.99%)\n25 additional prefix bytes: old  7.67, new 4.55 (40.68%)\n50 additional prefix bytes: old 11.83, new 5.51 (53.42%)\n```\n\nI also swapped the meanings of `skiphigh` and `skiplow` in the code, it made a little more sense to me to update skiphigh when the search key was smaller than the tree key, please check me on that, though.\n\nI didn't see anywhere else we should change, let me know if there are other places to think about.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 26, 2013 at 19:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Monday Aug 26, 2013 at 23:59 GMT",
        "merged_at": "Monday Aug 26, 2013 at 23:59 GMT"
    },
    {
        "key": null,
        "number": 638,
        "state": "closed",
        "title": "Modify update atomic",
        "body": "Simplify the serialization functions by moving the handling of newly allocated structures into their callers, using atomic swaps.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 22, 2013 at 22:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Aug 26, 2013 at 03:15 GMT",
        "merged_at": "Monday Aug 26, 2013 at 03:15 GMT"
    },
    {
        "key": null,
        "number": 634,
        "state": "closed",
        "title": "Shuffle configuration of table and connection config in wtperf.",
        "body": "I've been meaning to change the way URIs are specified in wtperf for a while - so that it's more consistent with the recommended URI format for WiredTiger (using a table: uri, and a type specifier for the underlying data source).\n\nThat led to this pull request. The most significant change is that table and connection configuration strings now get appended to the existing values. If it doesn't work that way it is necessary to specify all of the table or connection configuration options.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 22, 2013 at 11:07 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 23, 2013 at 00:24 GMT",
        "merged_at": "Friday Aug 23, 2013 at 00:24 GMT"
    },
    {
        "key": "ng-",
        "number": 632,
        "state": "closed",
        "title": "Fix some clang-analyzer warnings",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 21, 2013 at 02:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Aug 21, 2013 at 02:55 GMT",
        "merged_at": "Wednesday Aug 21, 2013 at 02:55 GMT"
    },
    {
        "key": null,
        "number": 629,
        "state": "closed",
        "title": "Only switch LSM chunks if all changes are globally visible",
        "body": "This fixes a long-standing deficiency in LSM with transactions, and is a step towards making LSM fully transaction safe.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 20, 2013 at 07:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 23, 2013 at 01:18 GMT",
        "merged_at": "Friday Aug 23, 2013 at 01:18 GMT"
    },
    {
        "key": null,
        "number": 627,
        "state": "closed",
        "title": "WT_EXTENSION_API.transaction_id_init: durable transaction IDs",
        "body": "@michaelcahill, here are the changes we discussed to allow data sources to make transaction IDs durable.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 16, 2013 at 14:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 16, 2013 at 21:05 GMT",
        "merged_at": null
    },
    {
        "key": "op-",
        "number": 626,
        "state": "closed",
        "title": "Track the top-level WT_REF before any eviction operation",
        "body": "refs #625\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 16, 2013 at 03:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 16, 2013 at 03:54 GMT",
        "merged_at": "Friday Aug 16, 2013 at 03:54 GMT"
    },
    {
        "key": null,
        "number": 624,
        "state": "closed",
        "title": "Prefix compression min",
        "body": "Add the WT_SESSION.create prefix_compression_min string configuring the number of bytes that must be gained before prefix compression activates, with a default of 4.\n\nQuit documenting the WT_SESSION.key_gap configuration string: it's only used when instantiating keys as the result of a reverse cursor scan, I don't think it's interesting enough to surface to applications, at this point.\n\nRef: #622.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 14, 2013 at 18:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Aug 15, 2013 at 00:23 GMT",
        "merged_at": "Thursday Aug 15, 2013 at 00:23 GMT"
    },
    {
        "key": null,
        "number": 623,
        "state": "closed",
        "title": "Worker threads last",
        "body": "@agorrod, would you please do the review & merge of this change?\n\nIt's pretty simple, it just moves the start of the worker threads to the end of the wiredtiger_open call.\n\nThis resolves issue #619.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 14, 2013 at 15:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Aug 15, 2013 at 02:04 GMT",
        "merged_at": "Thursday Aug 15, 2013 at 02:04 GMT"
    },
    {
        "key": null,
        "number": 620,
        "state": "closed",
        "title": "Periodically close session and connection dhandles that are no longer",
        "body": "used. (#586)\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 13, 2013 at 19:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Aug 14, 2013 at 19:21 GMT",
        "merged_at": "Wednesday Aug 14, 2013 at 19:21 GMT"
    },
    {
        "key": null,
        "number": 618,
        "state": "closed",
        "title": "Wtperf enhancements",
        "body": "wtperf enhancements that include:\n- -o option1=value2[,option2=value2,...]  using standard config parsing\n- -O optionfile  (each line is set of option=value)\n- created a single place to add new options\n- whittled down the command line params to just essentials (most subsumed by -o ...)\n- included a sample optionfile small.wtperf, though -S -M -L options are still present\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 08, 2013 at 18:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 16, 2013 at 04:56 GMT",
        "merged_at": "Friday Aug 16, 2013 at 04:56 GMT"
    },
    {
        "key": null,
        "number": 617,
        "state": "closed",
        "title": "Split hot pages",
        "body": "This isn't ready to be merged yet. I'm creating a pull request so that I can easily review the changes.\n\nSpecifically the skip-list manipulation that removes the last element isn't right yet.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 08, 2013 at 07:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Thursday Aug 15, 2013 at 01:31 GMT",
        "merged_at": "Thursday Aug 15, 2013 at 01:31 GMT"
    },
    {
        "key": null,
        "number": 613,
        "state": "closed",
        "title": "Forced eviction tweak",
        "body": "@agorrod, this is the only idea I've had, and it isn't perfect.\n\nIt attempt to evict any page that hasn't yet been modified by the current transaction.  There are likely to be a lot of failures, because the page may contain recent updates that some running transaction needs to read.  OTOH, if I tighten up the forced eviction check to only try pages with globally visible changes, I don't think it will ever try...\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 02, 2013 at 04:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Wednesday Aug 14, 2013 at 23:43 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 612,
        "state": "closed",
        "title": "Cursor flags",
        "body": "More changes for #607:\n- if a key or value has been copied on entry, it shouldn't be cleared because of a deadlock\n- after a NOTFOUND from any operation, but particularly at the end of iteration, cursors should behave as if they are reset\n- don't clear the key after a successful remove: it causes problems for loops conditions using compare\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 01, 2013 at 13:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:58 GMT",
        "closed_at": "Friday Aug 02, 2013 at 00:49 GMT",
        "merged_at": "Friday Aug 02, 2013 at 00:49 GMT"
    },
    {
        "key": null,
        "number": 611,
        "state": "closed",
        "title": "Cursor success/failure handling.",
        "body": "@michaelcahill, here are the changes we discussed as remaining work for issue #607.\n\nThis passes the test suite, \"make check\", and smoke runs of both format and wtperf, but it needs careful review.\n\nI'm going to add some comments in the diff to try and point out the changes I think are most likely to be wrong.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 30, 2013 at 16:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Thursday Aug 01, 2013 at 11:22 GMT",
        "merged_at": "Thursday Aug 01, 2013 at 11:22 GMT"
    },
    {
        "key": null,
        "number": 608,
        "state": "closed",
        "title": "Cursor scoping",
        "body": "Clarify when applications have to keep key/value buffers valid.\n\ncloses #607\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 29, 2013 at 02:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Jul 29, 2013 at 14:45 GMT",
        "merged_at": "Monday Jul 29, 2013 at 14:45 GMT"
    },
    {
        "key": null,
        "number": 605,
        "state": "closed",
        "title": "Fine grained durability",
        "body": "Add support for logging and recovery, to give transaction-level durability.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 26, 2013 at 03:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Thursday Nov 21, 2013 at 06:48 GMT",
        "merged_at": "Thursday Nov 21, 2013 at 06:48 GMT"
    },
    {
        "key": null,
        "number": 604,
        "state": "closed",
        "title": "Increase the likelihood of being able to evict hot pages.",
        "body": "Specifically pages that grow larger than the configured maximum.\nAlso, don't attempt eviction unless it's possible that we'll succeed.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 23, 2013 at 05:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Jul 29, 2013 at 03:24 GMT",
        "merged_at": "Monday Jul 29, 2013 at 03:24 GMT"
    },
    {
        "key": "ow-",
        "number": 602,
        "state": "closed",
        "title": "Row-store leaf-page key retrieval.",
        "body": "@michaelcahill, this is a set of changes to clean up key retrieval on row-store leaf pages.\n\nIn short, one of the underlying functions copied data for historical reasons and there was some undocumented magic in the paths to accessing row-store leaf pages.   I think I've teased it all apart, but it could use a review.   I don't think it's worth going deeply, but  flagging any comments or code changes that don't make sense to you would be welcome.\n\nThanks!\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 20, 2013 at 17:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Jul 22, 2013 at 01:16 GMT",
        "merged_at": "Monday Jul 22, 2013 at 01:16 GMT"
    },
    {
        "key": null,
        "number": 598,
        "state": "closed",
        "title": "Fix \"make install\" of Python.",
        "body": "Remove old code and restructure the Python sources under lang/python to simplify the installation step.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 17, 2013 at 00:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jul 17, 2013 at 00:56 GMT",
        "merged_at": "Wednesday Jul 17, 2013 at 00:56 GMT"
    },
    {
        "key": null,
        "number": 597,
        "state": "closed",
        "title": "Don't drop core if the user passes a NULL pointer to WT_CURSOR.get_value()",
        "body": "@michaelcahill, this change is based on @agorrod  issue #579.\n\nI went ahead and pushed the change to avoid dropping core if a statistics cursor's get-value argument is NULL, but I'm less confident this change is complete (and I wanted you to have a chance to Just Say No).\n\nI couldn't think of any reason it's better to drop core, although it might be harder to debug the case where the application is unintentionally passing a NULL pointer to WT_CURSOR.get_value().\n",
        "base_ref": "develop",
        "created_at": "Monday Jul 15, 2013 at 19:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Sep 04, 2013 at 16:26 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 595,
        "state": "closed",
        "title": "Track how many bytes match in each lexical comparison and don't check prefix bytes we know will match.",
        "body": "@michaelcahill, @agorrod:\n\nA change that went into Berkeley DB awhile back was to track how many bytes matched when searching through keys on a page, that is, if you're searching through a page for the user key \"abXXX\", where every key on the page has the prefix \"ab\", you quickly figure it out and start future comparisons 2 bytes into the strings.\n\nI wrote a test program that loads 5M records in sorted order, where the key is a 0-padded 10 character integer, preceded by some number of prefix bytes.  So, the keys are 0000000001 to 0005000000, and then I add some number of prefix bytes, which would make the keys be something like abc0000000001 to abc0005000000.  (Since all of the keys have at least 3 leading 0's, there are always 3 matching bytes.)\n\nThe timed phase of the program is a WT_CURSOR.search call for every key in the table.\n\nResults from pixiebob:\n\n```\n 0 additional prefix bytes: old  5.88, new 5.83 (0.85%)\n 5 additional prefix bytes: old  6.52, new 6.42 (1.53%)\n10 additional prefix bytes: old  6.96, new 6.81 (2.16%)\n20 additional prefix bytes: old  7.92, new 7.67 (3.16%)\n25 additional prefix bytes: old  8.57, new 8.22 (4.08%)\n50 additional prefix bytes: old 10.77, new 9.91 (7.99%)\n```\n\nObviously, it's no big deal if there aren't strings of prefix bytes, if someone stores URL's in a table, this will pay off.\n\nWhat I think is happening is that by starting the search further into the string we're avoiding some number of memory fetches -- I can't imagine the number of comparisons we make matters.\n\nProbabilistically, even starting the search a few bytes into the string should mean we average fewer memory fetches to find the mismatched bytes, but I'm not sure if that's always true, based on what the compiler and/or hardware are doing with byte alignment.  (I also asked @fedorova if she could shed some light here.)\n\nI'm inclined to pull this change into the tree, because it's really cheap (3 new uint32_t variables, and a couple of additions/subtractions and a comparison or two in each loop iteration), I don't think it will slow the loop down even when it's not gaining us performance.    Sasha may have something useful to say there as well.\n\nWe could probably figure out if this optimization will win on a page-by-page basis, when we read pages into memory, but I didn't look at that in any detail.\n",
        "base_ref": "develop",
        "created_at": "Sunday Jul 14, 2013 at 19:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Jul 15, 2013 at 02:38 GMT",
        "merged_at": "Monday Jul 15, 2013 at 02:38 GMT"
    },
    {
        "key": "on-",
        "number": 594,
        "state": "closed",
        "title": "Reference on-page internal keys instead of copying them to allocated memory.",
        "body": "@michaelcahill, @agorrod: here are the changes for #592.\n\nI did a couple of things differently than we discussed in the issue.\n\nThe simple change was I'm no longer Huffman encoding keys on internal pages.  As mentioned in the issue, I think the argument that \"instantiating the keys in allocated memory is likely to cost us more memory than Huffman encoding will buy us back\", is a good one.  I included overflow keys in that decision too, I'm not Huffman encoding any keys, including overflow keys.   To encode overflow keys but not normal keys would have required more complexity, and I didn't think the use case was common enough to do the work.\n\nThe more complex change is I didn't allocate a separate structure that references the on-page keys.  Instead, I expanded the union in the WT_REF structure to include a page offset/size pair (in the same 8B we have the WT_IKEY pointer), and I'm using a bit in the page offset to figure out if it's the WT_IKEY reference or the offset/size pair.   It's a hack, but it saves us another 8B per internal-page key (in my smoke tests, I'm seeing internal pages require anywhere from 25% to 75% less memory).\n\nThere is an unused 4B in the WT_REF structure because of padding, but I'd like to leave that alone, it could be useful someday.\n\nAnyway, if you both could take a look at 468b533 (the changes in include/btree.i and include/btmem.h are the most interesting), and let me know what you think and/or if you can think of a better flag I could use in the WT_REF structure to make this work.\n\nAs a side-effect, this makes our tree only support little-endian systems.  We could obviously make it work on big-endian as well, but I didn't bother (does anybody care about PowerPC any more, and/or does anybody run bi-endian ARMs in big-endian mode?)\n\nFinally, the changes in dc6e9f9 are to clean up our version processing: I incremented the btree minor version and dropped the previous versions off the back of the supported revisions list, this is a real format change.\n\nAlex, would you be my reviewer?   I'd also be interested in knowing if this makes the test case you found run any better?\n\nOne review request: I'm not confident in my understanding of btree/rec_merge.c, would you please carefully check my changes in there?  I doubt my test runs are going through that code much, if at all.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jul 13, 2013 at 23:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Jul 15, 2013 at 15:57 GMT",
        "merged_at": "Monday Jul 15, 2013 at 15:57 GMT"
    },
    {
        "key": null,
        "number": 512,
        "state": "closed",
        "title": "LSM code checking WT_CURSTD_OVERWRITE",
        "body": "Alex, I didn't want to forget this one, so I'm opening an issue.\n\nI'm confused why __clsm_update and __clsm_remove check the cursor's WT_CURSTD_OVERWRITE flag.\n\nThe code in each that does:\n\n```\n        if (F_ISSET(cursor, WT_CURSTD_OVERWRITE) ||\n            (ret = __clsm_search(cursor)) == 0)\n```\n\nshould maybe be:\n\n```\n        if ((ret = __clsm_search(cursor)) == 0)\n```\n\nbut that's bad for __clsm_remove, because LSM searches are more expensive.\n\nIs there a reason we can't change the semantics of WT_CURSOR::remove to  ignore the possibility the key doesn't exist, and then LSM doesn't have to do a search first.\n\nIf that isn't OK, we could at least make that the default and add a new config option to return failure if the key doesn't exist?\n\nThis isn't an issue for the Basho/Riak tests, I'm told all of its get/put/del cursors are setting overwrite.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 18, 2013 at 07:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday Jun 19, 2013 at 01:30 GMT",
        "merged_at": "Wednesday Jun 19, 2013 at 01:30 GMT"
    },
    {
        "key": null,
        "number": 578,
        "state": "closed",
        "title": "Memrata: transactions",
        "body": "I'm creating a pull request just so it's easy to look at the changes -- this isn't ready to pull.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 14, 2013 at 17:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Aug 08, 2013 at 12:18 GMT",
        "merged_at": "Thursday Aug 08, 2013 at 12:18 GMT"
    },
    {
        "key": null,
        "number": 576,
        "state": "closed",
        "title": "Another set of memrata changes, upgrade to version 4.2.",
        "body": "Another set of memrata changes, upgrade to version 4.2.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 10, 2013 at 15:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Jun 10, 2013 at 15:55 GMT",
        "merged_at": "Monday Jun 10, 2013 at 15:55 GMT"
    },
    {
        "key": "me-",
        "number": 575,
        "state": "closed",
        "title": "KVS library version 4.1 (upgrade to use the KVS name-spaces).",
        "body": "KVS library version 4.1 (upgrade to use the KVS name-spaces).\n",
        "base_ref": "develop",
        "created_at": "Sunday Jun 09, 2013 at 18:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Sunday Jun 09, 2013 at 18:31 GMT",
        "merged_at": "Sunday Jun 09, 2013 at 18:31 GMT"
    },
    {
        "key": null,
        "number": 570,
        "state": "closed",
        "title": "Add a test that attempts a backup while a bulk load is happening.",
        "body": "Currently if a table is being bulk loaded when a backup cursor is opened, the cursor_open call will return EBUSY.\n\nIt's not clear what the correct solution is. Checkpoint creates a special empty file in this situation. The options I see:\n- Have backup skip any files being bulk loaded (not sure if this has metadata consequences?)\n- Continue to have backup cursor_open return EBUSY when a table is being bulk loaded.\n- Your good idea goes here.\n\nIt's also worth noting that this issue isn't specific to bulk loaded files. It will happen any time a handle is open with the WT_DHANDLE_EXCLUSIVE flag. Other cases where we do that are with rename, compact, etc\n",
        "base_ref": "develop",
        "created_at": "Thursday Jun 06, 2013 at 01:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Thursday Aug 29, 2013 at 03:42 GMT",
        "merged_at": null
    },
    {
        "key": "64-",
        "number": 568,
        "state": "closed",
        "title": "Change transaction IDs to 64-bits, remove code that deals with wrapping.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 05, 2013 at 07:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Jun 06, 2013 at 12:46 GMT",
        "merged_at": "Thursday Jun 06, 2013 at 12:46 GMT"
    },
    {
        "key": null,
        "number": 567,
        "state": "closed",
        "title": "Metadata move",
        "body": "@michaelcahill, these are the changes to move management of data-source metadata entries down into the data-source code.\n\nI'd like to talk over a few different questions after you get a chance to look it over.\n1. There's some question how I'm using the name-space -- right now I'm stuffing in a new record with a key of `memrata:WiredTiger.maxid`, which is safe from applications, but potentially surprising to the WiredTiger engine.\n2. I exported 4 metadata functions (search, insert, remove and update), where insert fails if the record already exists, but update uses the underlying cursor.insert method with \"overwrite\" configured, and so will either insert a new record or update an existing one.  That doesn't quite match standard cursor.update behavior, of course.\n   \n   We could export cursor open/close interface to the metadata file instead of 4 specific functions: then the extension can configure the cursor behavior it wants and there's nothing surprising in update inserting new records, plus extensions can do metadata scans should they need to.\n3. I am unhappy I have to do work for session.rename inside the extension.  It seems wrong to me that the extension has to futz with its names because the WiredTiger schema layer is renaming a table.\n   \n   If session.create chose the URI and then returned it to the table code (rather than the table code choosing the name the underlying source has to use), the schema level could ignore \"source=XXX\" during renames, and the extension code wouldn't have to do any work.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 04, 2013 at 17:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jun 05, 2013 at 07:15 GMT",
        "merged_at": "Wednesday Jun 05, 2013 at 07:15 GMT"
    },
    {
        "key": null,
        "number": 565,
        "state": "closed",
        "title": "Update checkpoint code to get and release handles, so that LSM cannot",
        "body": "drop tables while a checkpoint is in progress.\n\nRefs #543\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 04, 2013 at 05:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jun 04, 2013 at 06:33 GMT",
        "merged_at": "Tuesday Jun 04, 2013 at 06:33 GMT"
    },
    {
        "key": null,
        "number": 563,
        "state": "closed",
        "title": "Add a new __wt_realloc_def macro to simplify array management",
        "body": "Our interface to `realloc` is somewhat complex, requiring the already-allocated size to be tracked, along with a calculation of the new size in bytes.\n\nThis branch adds a `__wt_realloc_def` macro, matching `__wt_calloc_def`, that uses the type of the pointer to determine the element size, so that only a number of elements is required.  It is a no-op if enough space is already allocated, and includes a common policy for growing the array without excessive reallocation.\n\nThis simplifies many existing uses of `__wt_realloc` and avoids several classes of bugs, including using the wrong element type in `sizeof` calculations.\n",
        "base_ref": "develop",
        "created_at": "Friday May 31, 2013 at 05:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday May 31, 2013 at 11:24 GMT",
        "merged_at": "Friday May 31, 2013 at 11:24 GMT"
    },
    {
        "key": "al-",
        "number": 559,
        "state": "closed",
        "title": "Create a more general-purpose block-manager preload call",
        "body": "Create a more general-purpose block-manager preload call and pre-load individual pages instead of using the page locations to guess at the right file chunks.\n\n@agorrod @michaelcahill \n\nAlex, Michael: I took another look at the cache warming code today.\n\nThere are two problems with it, I think: it's going to behave badly if a file isn't bulk-loaded (potentially attempting to load really big chunks of a file into the cache), second, putting a flag into the WT_SESSION_IMPL and then noticing that flag in the middle of the block manager read function is a pretty evil violation of layering.\n\nI can't think of any way to really figure out what's going on underneath, the place where we know the tree is bulk-loaded and what blocks are interesting for a pre-load is far away from any place where we could save that information and get it back when we open the tree again.\n\nSo, this new branch is an alternate approach:\n\nI added code to walk the checkpoint's root page and call a new block-manager function to pre-load in the second level of the tree.   We could walk further down the tree than just the second level, of course, but loading the second level is going to pre-load a lot of pages: even for a small block size like 4KB, we'll pre-load somewhere between 400 and 500 pages (a block address on a btree page starts out at 7B).\n\nI've also changed it so we pre-load all trees, not just mapped checkpoints, using posix_fadvise if it's available, and otherwise doing the read.\n\n```\n        /* Check for a mapped block. */\n        mapped = bm->map != NULL && offset + size <= (off_t)bm->maplen;\n        if (mapped)\n                WT_RET(__wt_mmap_preload(\n                    session, (uint8_t *)bm->map + offset, size));\n        else {\n#ifdef HAVE_POSIX_FADVISE\n                if ((ret = posix_fadvise(block->fh->fd,\n                    (off_t)offset, (off_t)size, POSIX_FADV_WILLNEED)) != 0)\n                        WT_RET_MSG(\n                            session, ret, \"%s: posix_fadvise\", block->name);\n#else\n                WT_DECL_ITEM(tmp);\n                WT_RET(__wt_scr_alloc(session, size, &tmp));\n                ret = __wt_block_read_off(\n                    session, block, tmp, offset, size, cksum);\n                __wt_scr_free(&tmp);\n                WT_RET(ret);\n#endif\n        }\n```\n\nI should point out this change will pre-load leaf pages, if the tree is small.\n\nThis change means we're doing individual system calls to pre-load each page, instead of one big call for a range of pages, on the other hand, we're not actually reading any pages into memory to figure out the shape of the tree.\n\nI don't know what test the original change helped, or how much it helped, but I'd be a lot more comfortable with this approach instead of what we have in the tree at the moment.\n",
        "base_ref": "warm-cache-compress",
        "created_at": "Tuesday May 28, 2013 at 15:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 29, 2013 at 05:41 GMT",
        "merged_at": "Wednesday May 29, 2013 at 05:41 GMT"
    },
    {
        "key": null,
        "number": 558,
        "state": "closed",
        "title": "Update backup to use __wt_schema_worker. Stop LSM drops during backups.",
        "body": "I opened a new pull request for this because there are two outstanding issues:\n\n1) I am no longer checking for illegal URIs in the target list (test_backup.test_illegal_objects)\n2) There is a subtlety to the WiredTiger.backup file I think I'm missing. I create the file, and think the contents are the same as they were before, but when I attempt to access a table that is copied I see `wt: table:test_backup.1: No such object exists`. To see this run the new test_backup03, but uncomment three lines from line 98.\n",
        "base_ref": "hot-backup",
        "created_at": "Monday May 27, 2013 at 12:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 28, 2013 at 05:21 GMT",
        "merged_at": "Tuesday May 28, 2013 at 05:21 GMT"
    },
    {
        "key": null,
        "number": 556,
        "state": "closed",
        "title": "Hot backup",
        "body": "Michael, this branch adds hot-backup support to test/format; it's not yet ready to pull, though.\n\nHowever, opening two databases in a single application (test/format opens a second database in order to verify the hot backup, in RUNDIR/BACKUP), triggered a bug in all of our compressors, where we had a static WT_EXTENSION_API reference.\n\nIf you open a database, open a second database, then close the second database, the close zero's out the information referenced by the static handle, and then the first database connection fails the next time it uses the extension api handle.\n",
        "base_ref": "develop",
        "created_at": "Saturday May 25, 2013 at 18:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday May 30, 2013 at 23:12 GMT",
        "merged_at": "Thursday May 30, 2013 at 23:12 GMT"
    },
    {
        "key": null,
        "number": 555,
        "state": "closed",
        "title": "Turtle race",
        "body": "Michael, this is the bug fix for #554.\n\nI re-ordered the turtle file create and the metadata file create so the existence of a turtle file implies a known-good metadata file.   This means I have to generate the default metadata configuration information when the the metadata file is created (instead of reading it from the turtle file), but that doesn't seem awful, and I was able to isolate all of that work in the turtle routines instead sharing it between the turtle and metadata routines.  This also simplifies wiredtiger_open() a little.\n\nI think this is ready to pull if you agree with the solution.\n",
        "base_ref": "develop",
        "created_at": "Saturday May 25, 2013 at 15:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday May 27, 2013 at 04:12 GMT",
        "merged_at": "Monday May 27, 2013 at 04:12 GMT"
    },
    {
        "key": null,
        "number": 552,
        "state": "closed",
        "title": "Fixed forced eviction with indexes.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday May 24, 2013 at 01:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Tuesday May 28, 2013 at 07:45 GMT",
        "merged_at": "Tuesday May 28, 2013 at 07:45 GMT"
    },
    {
        "key": null,
        "number": 550,
        "state": "closed",
        "title": "LSM trees don't support named checkpoints",
        "body": "LSM trees don't support named checkpoints: disallow attempts, add documentation, and change test/format to not attempt it.   Ref #546.\n\n@michaelcahill \n\nMichael, I couldn't think of any cleaner way to make sure nobody creates named LSM checkpoints, can you please review and pull if you agree with this approach?\n",
        "base_ref": "develop",
        "created_at": "Thursday May 23, 2013 at 14:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday May 24, 2013 at 03:18 GMT",
        "merged_at": "Friday May 24, 2013 at 03:18 GMT"
    },
    {
        "key": null,
        "number": 549,
        "state": "closed",
        "title": "Logging",
        "body": "I'm opening this pull request to make it easier to see what is on the logging branch.  It is not yet ready to merge.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 23, 2013 at 01:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jul 17, 2013 at 16:39 GMT",
        "merged_at": "Wednesday Jul 17, 2013 at 16:39 GMT"
    },
    {
        "key": null,
        "number": 548,
        "state": "closed",
        "title": "Lsm many threads",
        "body": "This isn't ready to merge yet, but I'd like it to be tested.\n\nPerformance tuning based on running MapKeeper/YCSB benchmark on a slow machine.\n",
        "base_ref": "develop",
        "created_at": "Monday May 20, 2013 at 09:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 22, 2013 at 04:05 GMT",
        "merged_at": "Wednesday May 22, 2013 at 04:05 GMT"
    },
    {
        "key": null,
        "number": 547,
        "state": "closed",
        "title": "more O_DIRECT changes.",
        "body": "Michael, this is one approach to fixing the bug Mark reported (I obviously haven't reproduced it, though).\n\nWhat I think is going on is that direct I/O on his system disallows any write that's smaller than 4KB (which makes sense, I guess, since such writes are known to have problems).  Obviously, he could configure allocation_size=4KB, but that won't work for our default files, in this case, WiredTiger.wt.\n\nWhat I did was require the page allocation sizes after direct I/O is configured be both at least as large as the buffer alignment, and a multiple of the buffer alignment.  The latter might be overkill, but I don't see why that would be sure to work when blocks smaller than the alignment size don't work.\n",
        "base_ref": "develop",
        "created_at": "Friday May 17, 2013 at 16:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Friday May 24, 2013 at 02:10 GMT",
        "merged_at": "Friday May 24, 2013 at 02:10 GMT"
    },
    {
        "key": null,
        "number": 545,
        "state": "closed",
        "title": "Relax types",
        "body": "Michael, I think this is what you want, it allows application created data-sources to be configured as a \"type\" underneath a table, column-group or index.\n\nI also put a check at the top-level API to ensure applications don't try and layer LSM on top of anything -- I'm less confident you want that check in there, so it's a separate commit.\n\nPlease let me know if I still don't understand this.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 16, 2013 at 15:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday May 17, 2013 at 02:37 GMT",
        "merged_at": "Friday May 17, 2013 at 02:37 GMT"
    },
    {
        "key": null,
        "number": 542,
        "state": "closed",
        "title": "Add name hash to avoid excessive strcmp on common path.",
        "body": "Michael,\n\nHere's the name hash change for avoiding excessive strcmp calls on the dhandle name.  You had mentioned another place you thought would benefit from this.  There are a lot of places where we walk a list doing a strcmp.  Which one did you have in mind? \n",
        "base_ref": "develop",
        "created_at": "Wednesday May 15, 2013 at 15:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday May 16, 2013 at 00:17 GMT",
        "merged_at": "Thursday May 16, 2013 at 00:17 GMT"
    },
    {
        "key": null,
        "number": 541,
        "state": "closed",
        "title": "Update README",
        "body": "Fix broken link in README\n",
        "base_ref": "master",
        "created_at": "Wednesday May 15, 2013 at 13:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Wednesday May 15, 2013 at 23:33 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 539,
        "state": "closed",
        "title": "Fix a bug where clean pages could be evicted when they contained updates required for a running transaction",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday May 14, 2013 at 14:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 15, 2013 at 06:00 GMT",
        "merged_at": "Wednesday May 15, 2013 at 06:00 GMT"
    },
    {
        "key": null,
        "number": 538,
        "state": "closed",
        "title": "Preload internal pages into file system cache with compression.",
        "body": "Previously the functionality only worked without compression enabled.\n\nI've tested this branch with the YCSB workload that was failing with the earlier preload code.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 14, 2013 at 03:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 29, 2013 at 11:07 GMT",
        "merged_at": "Wednesday May 29, 2013 at 11:07 GMT"
    },
    {
        "key": "ff-",
        "number": 537,
        "state": "closed",
        "title": "Fix an off-by-one error in the transaction used for eviction.",
        "body": "  We track the oldest ID that can _not_ be written.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 14, 2013 at 01:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 14, 2013 at 05:04 GMT",
        "merged_at": "Tuesday May 14, 2013 at 05:04 GMT"
    },
    {
        "key": null,
        "number": 536,
        "state": "closed",
        "title": "Clear pages from the LRU queue as soon as they are locked.",
        "body": "Threads getting pages to evict look inside the WT_PAGE structure before switching the WT_REF state, so it isn't safe to evict a page that is queued.\n",
        "base_ref": "develop",
        "created_at": "Monday May 13, 2013 at 03:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday May 13, 2013 at 04:55 GMT",
        "merged_at": "Monday May 13, 2013 at 04:55 GMT"
    },
    {
        "key": null,
        "number": 534,
        "state": "closed",
        "title": "file extension",
        "body": "Michael, here are a set of changes that use posix_fallocate or ftruncate to extend files.\n\nSmoke testing with wtperf -S on bengal makes me think they are potentially useful for LSM on an ext4 filesystem, but I don't have good evidence for that claim, yet.\n\nA couple comments:\n1. I implemented this a couple of times, once with the work being done in the os_rw:__wt_write() function and once where it is now, in the block_write.c:__wt_block_write_off() function.  The advantage of doing it in __wt_write() is that it just happens for all file types, of course.   I ended up leaving the change in __wt_block_write_off because otherwise we extend the file when we write the description block at the beginning of the file, which I didn't much like.  See the next comment...\n2. We truncate the file during verification and when we load a checkpoint for writing, so there's some noise going back-and-forth between an extended file and a truncated one.  I think that's probably OK, and unavoidable given the tension between keeping files small, and not extending them block-by-block.\n   \n   This does mean that if you load a bunch of records and then write a checkpoint and close the handle, the file will be left much longer than it might otherwise be: if you then open it and close it again, it will be truncated, and left truncated.    That's not intuitive, but it seems to me that if you're configuring this option, bigger files shouldn't surprise you.\n\nI've tucked a few comments into the diff as well, if you decide this is interesting enough to review & incorporate into develop.\n",
        "base_ref": "develop",
        "created_at": "Saturday May 11, 2013 at 19:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 14, 2013 at 12:50 GMT",
        "merged_at": "Tuesday May 14, 2013 at 12:50 GMT"
    },
    {
        "key": null,
        "number": 533,
        "state": "closed",
        "title": "Use the allocation size for the file \"desc\" block.",
        "body": "This is important for direct I/O, so that reads and writes are aligned as expected.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 09, 2013 at 11:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday May 10, 2013 at 16:23 GMT",
        "merged_at": "Friday May 10, 2013 at 16:23 GMT"
    },
    {
        "key": null,
        "number": 532,
        "state": "closed",
        "title": "Call destroy functions on error. (#531)",
        "body": "Fix leak on error path.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 08, 2013 at 17:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday May 09, 2013 at 02:10 GMT",
        "merged_at": "Thursday May 09, 2013 at 02:10 GMT"
    },
    {
        "key": null,
        "number": 530,
        "state": "closed",
        "title": "Terminate method",
        "body": "Michael, I figured you'd want a diff that's easy to look at, so here's the pull request.\n- I didn't add a WT_EXTRACTOR.terminate method, did you want one?\n- I'm no longer using `wiredtiger_extension_terminate()` for any purpose, and, I don't see much call for it in most applications because the handle.terminate method will be sufficient.   That said, I figured it couldn't hurt to leave it in?\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 07, 2013 at 15:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday May 09, 2013 at 03:03 GMT",
        "merged_at": "Thursday May 09, 2013 at 03:03 GMT"
    },
    {
        "key": null,
        "number": 529,
        "state": "closed",
        "title": "Merge doesn't need to clear pages from the eviction queue or clear the eviction position",
        "body": "We're using the same locking scheme as normal eviction, so we can't evict `btree->evict_page` (it will be in state `WT_REF_EVICT_WALK`), and discarding the merged pages should deal with clearing anything that needs to be cleared.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 07, 2013 at 02:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 07, 2013 at 06:49 GMT",
        "merged_at": "Tuesday May 07, 2013 at 06:49 GMT"
    },
    {
        "key": "it-",
        "number": 528,
        "state": "closed",
        "title": "Add functionality to evict some split-merge subtrees.",
        "body": "This code is broken at the moment. The pull request is here to allow for simpler review and comments at the moment. refs #523 \n",
        "base_ref": "develop",
        "created_at": "Monday May 06, 2013 at 09:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Aug 28, 2013 at 04:52 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 522,
        "state": "closed",
        "title": "Have configure check for header and library when bzip is enabled.",
        "body": "This is pretty simple, but I'm never confident about my autoconf fu.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 01, 2013 at 07:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 01, 2013 at 22:27 GMT",
        "merged_at": "Wednesday May 01, 2013 at 22:27 GMT"
    },
    {
        "key": null,
        "number": 520,
        "state": "closed",
        "title": "LSM statistics",
        "body": "Alex, here's what I was suggesting when we talked the other night.  Basically, I added an automatically generated function that aggregates data-source statistics (hopefully it will be usable by table at some point, not just LSM).   I then re-worked the LSM statistics code to open each underlying source and call that function to aggregate its statistics into a new data-source stats structure.\n\nI also made another change: Michael's change to guess what statistics should be scaled per second isn't going to work, the heuristic isn't good enough.   I've changed it so we automatically generate a list of the statistics we want to scale per second and stuffed that list into the tools/statlog.py script.   I don't like this change much, it's pretty ugly, but I think it will work.\n\nCan you please do a review?\n\nI'm going to comment in the diff on a few things I changed that I think might be worth a closer look when you review.\n\nAnd, if you hate this change, feel free to just say no to all or any of it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 01, 2013 at 00:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday May 03, 2013 at 07:12 GMT",
        "merged_at": "Friday May 03, 2013 at 07:12 GMT"
    },
    {
        "key": null,
        "number": 519,
        "state": "closed",
        "title": "Have merge threads concentrate on separate generations.",
        "body": "I have opened this pull request to run this change through testing and to make it easier to see.  There is no need to review or merge until we have more results from testing with Riak.\n\nThanks!\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 30, 2013 at 13:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 15, 2013 at 23:52 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 518,
        "state": "closed",
        "title": "Scale to events per second in statistics graphs",
        "body": "Hi Keith,\n\nCan you please take a look at this change?  I find operations / second much easier to think about (it means the \"wait\" config isn't a factor in interpreting the graphs), but there are a few statistics that don't make sense to scale (e.g., number of bytes in the cache, number of files currently open).  The solution isn't great, but I haven't come up with anything better.\n\nThanks,\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Monday Apr 29, 2013 at 12:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:07 GMT",
        "closed_at": "Monday Apr 29, 2013 at 14:02 GMT",
        "merged_at": "Monday Apr 29, 2013 at 14:02 GMT"
    },
    {
        "key": "en-",
        "number": 516,
        "state": "closed",
        "title": "open-cursor counts, LSM statistics re-enable",
        "body": "Michael, this change adds stats to track the number of open cursors, and to dump LSM statistics if \"lsm:\" is specified to a statistics_log \"sources\" configuration.\n",
        "base_ref": "develop",
        "created_at": "Sunday Apr 28, 2013 at 16:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Apr 29, 2013 at 03:26 GMT",
        "merged_at": "Monday Apr 29, 2013 at 03:26 GMT"
    },
    {
        "key": null,
        "number": 515,
        "state": "closed",
        "title": "fix a bug where checkpoints are being deleted while hot backups are running",
        "body": "First, handle close checkpoints files and so can discard underlying checkpoint blocks, it needs to check if a hot backup is in progress.  Second, checkpoint needs to lock out the start of a hot backup once it checks the hot-backup flag, otherwise the hot backup could start while the checkpoint is still deleting file blocks.\n\nMichael, this is a little more convoluted than I'd like, mostly because I didn't want to acquire any new locks in the handle close path.\n\nThe primary fix here is changing the checkpoint code to check the \"hot backup in progress\" flag when coming from the \"handle close\" path, otherwise we can delete checkpoints out from underneath a hot backup.\n\nThe other fix is avoiding a possible race -- if we don't block starting a hot backup while completing the checkpoint, it seems to me a new hot backup could catch up with the checkpoint while it's still mucking with the file blocks, and no good would result from that.\n\nI kept thinking I could do this work with the metadata_lock spinlock instead of creating a new lock, but it kept getting messy, so I created a new spinlock instead.\n\n@michaelcahill \n",
        "base_ref": "develop",
        "created_at": "Friday Apr 26, 2013 at 16:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday May 02, 2013 at 23:31 GMT",
        "merged_at": "Thursday May 02, 2013 at 23:31 GMT"
    },
    {
        "key": null,
        "number": 514,
        "state": "closed",
        "title": "Changes to improve latency of LSM operations",
        "body": "",
        "base_ref": "develop",
        "created_at": "Friday Apr 26, 2013 at 11:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Apr 29, 2013 at 05:47 GMT",
        "merged_at": "Monday Apr 29, 2013 at 05:47 GMT"
    },
    {
        "key": null,
        "number": 508,
        "state": "closed",
        "title": "Changes to tune eviction loops based on profiling.",
        "body": "Track more pages, but only sort the maximum number of entries we have actually seen.\n\nAlex, can you please take a look?\n\nThanks,\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 24, 2013 at 08:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 07, 2013 at 05:08 GMT",
        "merged_at": "Tuesday May 07, 2013 at 05:08 GMT"
    },
    {
        "key": "st-",
        "number": 507,
        "state": "closed",
        "title": "Track the largest key seen in an LSM tree to fast-path append-only workloads.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 24, 2013 at 08:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Apr 29, 2013 at 03:12 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 506,
        "state": "closed",
        "title": "Introduce a condition variable for application threads waiting for eviction candidates.",
        "body": "Application eviction used to poll, but it's hard to get the polling\ninterval right for all cases.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 24, 2013 at 06:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Apr 24, 2013 at 07:48 GMT",
        "merged_at": "Wednesday Apr 24, 2013 at 07:48 GMT"
    },
    {
        "key": null,
        "number": 505,
        "state": "closed",
        "title": "Move forced eviction into application threads",
        "body": "Hi Alex,\n\nHere is something to think about -- we're already actively evicting pages in application threads in some circumstances, so we could do forced eviction the same way.\n\nFor busy pages, there is no guarantee this will succeed, but that has always been true of forced eviction.\n\nIt does eliminate a lot of code, so see what you think.\n\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 24, 2013 at 03:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 07, 2013 at 02:14 GMT",
        "merged_at": "Tuesday May 07, 2013 at 02:14 GMT"
    },
    {
        "key": null,
        "number": 504,
        "state": "closed",
        "title": "Memrata",
        "body": "The memrata branch isn't ready to pull yet, I'm creating a request to make it easier to look at.\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 19, 2013 at 20:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Apr 23, 2013 at 07:45 GMT",
        "merged_at": "Tuesday Apr 23, 2013 at 07:45 GMT"
    },
    {
        "key": null,
        "number": 503,
        "state": "closed",
        "title": "Sharedlib",
        "body": "Michael, these are the changes to move the Berkeley DB KVS test code into a shared library.\n\nCan you please review these?\n\nIn particular, I'm hoping there's something better we could do in configure.ac.in that wouldn't require us to all install Berkeley DB into /usr/local, although I guess that isn't an awful thing?\n",
        "base_ref": "data-source",
        "created_at": "Thursday Apr 18, 2013 at 16:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Apr 19, 2013 at 06:51 GMT",
        "merged_at": "Friday Apr 19, 2013 at 06:51 GMT"
    },
    {
        "key": null,
        "number": 501,
        "state": "closed",
        "title": "Make some fixes to eviction dirty count validation routine.",
        "body": "This should fix the issues with Dirty validate seeing NULL or invalid btree handles.\n\nOne case I'm not sure about is the btree->bulk_load_ok flag. I think that in that case the btree handle should be valid, and it's possible that there will be dirty pages in cache, so the handle should be checked.\n",
        "base_ref": "lsm-ckpt-experiments",
        "created_at": "Monday Apr 15, 2013 at 01:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Apr 16, 2013 at 03:35 GMT",
        "merged_at": "Tuesday Apr 16, 2013 at 03:35 GMT"
    },
    {
        "key": null,
        "number": 498,
        "state": "closed",
        "title": "Data source",
        "body": "Initial changes to make data-source work.\n",
        "base_ref": "develop",
        "created_at": "Thursday Apr 04, 2013 at 00:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Apr 19, 2013 at 07:38 GMT",
        "merged_at": "Friday Apr 19, 2013 at 07:38 GMT"
    },
    {
        "key": null,
        "number": 497,
        "state": "closed",
        "title": "Add a test case for statistics logging.",
        "body": "I bumped into a crash (that has been fixed) in statistics logging. I figured a Python test case would be useful.\n\nWhile I was there.. Waiting 5 seconds (i.e the smallest logging interval) for each different test isn't practical in the test suite. I dropped the minimum to 1 second. I figured if I wanted it to be 1 second for this case, other people probably will too.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Apr 03, 2013 at 07:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Apr 03, 2013 at 20:50 GMT",
        "merged_at": "Wednesday Apr 03, 2013 at 20:50 GMT"
    },
    {
        "key": null,
        "number": 496,
        "state": "closed",
        "title": "Enhance forced eviction to allow multiple pages to be queued.",
        "body": "This implementation creates a queue of forced pages during the eviction pass (but shares the regular eviction queue).\n\nIt'd be possible to do the following instead:\n- Section off a part of the regular eviction queue for forced candidates\n- Create a separate queue for forced candidates\n\nGiven that having pages queued for forced eviction is relatively infrequent, allocating a queue (array) when we have forced eviction candidates and the eviction server isn't regularly running seems like a reasonable compromise for keeping the code a bit simpler.\n\nRefs issue #491\n",
        "base_ref": "develop",
        "created_at": "Tuesday Apr 02, 2013 at 04:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Apr 03, 2013 at 00:58 GMT",
        "merged_at": "Wednesday Apr 03, 2013 at 00:58 GMT"
    },
    {
        "key": null,
        "number": 494,
        "state": "closed",
        "title": "Switch to generic \"data handle\" caching and locking",
        "body": "Until now, we have had special code for btree handles, tables, indexes and LSM trees.  Unify those various lists into generic \"data handles\" that share naming, locking, caching, configuration and statistics.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 26, 2013 at 02:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Apr 02, 2013 at 02:29 GMT",
        "merged_at": "Tuesday Apr 02, 2013 at 02:29 GMT"
    },
    {
        "key": null,
        "number": 492,
        "state": "closed",
        "title": "Support logging the statistics of a type of object based on a partial URI.",
        "body": "Michael, the \"interesting\" thing here is walking the list of handles while holding the schema lock, and opening a cursor to get the statistics while holding that lock.\n\nWe could get trickier so we hold the lock for a shorter period of time: if you think that's worth doing let's talk it over and I'll make that change.   I thought about it, but I don't think opening/closing files, and/or checkpoints, are that frequent with respect to stats logging?\n\nOtherwise I think this change is good to go.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 25, 2013 at 22:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Mar 26, 2013 at 01:39 GMT",
        "merged_at": "Tuesday Mar 26, 2013 at 01:39 GMT"
    },
    {
        "key": null,
        "number": 489,
        "state": "closed",
        "title": "Stat objects",
        "body": "Add the statistics_log.objects configuration string to wiredtiger_open: it's a list of underlying objects on which statistics are reported by the stat logging thread.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 21, 2013 at 14:17 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Mar 25, 2013 at 06:55 GMT",
        "merged_at": "Monday Mar 25, 2013 at 06:55 GMT"
    },
    {
        "key": null,
        "number": 487,
        "state": "closed",
        "title": "LSM checkpoint experiments",
        "body": "Open a pull request to make these changes easier to track and test.\n\nThe goal here is to improve LSM checkpoint behavior when there are multiple busy LSM trees open in the same database.\n",
        "base_ref": "basho",
        "created_at": "Wednesday Mar 20, 2013 at 06:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Apr 24, 2013 at 02:13 GMT",
        "merged_at": "Wednesday Apr 24, 2013 at 02:13 GMT"
    },
    {
        "key": null,
        "number": 483,
        "state": "closed",
        "title": "Tweak merge to build better trees with random insert workloads.",
        "body": "Here are some changes to merge.\n\nThey don't current work, please do **not** merge without more testing.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 15, 2013 at 09:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Mar 19, 2013 at 12:55 GMT",
        "merged_at": "Tuesday Mar 19, 2013 at 12:55 GMT"
    },
    {
        "key": null,
        "number": 482,
        "state": "closed",
        "title": "Try harder to cleanup after a failed wiredtiger_open call.",
        "body": "With the current code we can start the eviction server during an open call, run into an error and not stop the eviction server when exiting.\n\nThis leads to badness, since we do free the session and connection objects and the eviction server crashes.\n\nReferences issue #427 \n",
        "base_ref": "develop",
        "created_at": "Friday Mar 15, 2013 at 00:07 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Mar 18, 2013 at 16:23 GMT",
        "merged_at": "Monday Mar 18, 2013 at 16:23 GMT"
    },
    {
        "key": "no-",
        "number": 481,
        "state": "closed",
        "title": "Make WT_ASSERT a no-op when not in DIAGNOSTIC mode.",
        "body": "This isn't ready to be merged yet, but I wanted to get a round of testing started.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 14, 2013 at 05:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Mar 14, 2013 at 15:33 GMT",
        "merged_at": "Thursday Mar 14, 2013 at 15:33 GMT"
    },
    {
        "key": null,
        "number": 480,
        "state": "closed",
        "title": "Less allocation",
        "body": "Michael, this branch allocates the WT_ROW, WT_COL and WT_REF page chunks at the same time as the WT_PAGE is allocated, and caches 100 WT_EXT structures to avoid allocation.   (I chose 100 for no particular reason, I don't see much reason to make it configurable, though.  I'm having a hard time imagining a workload that frees 1,000 chunks, then allocates 1,000 chunks, and repeats.  Thoughts?)\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 13, 2013 at 20:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Mar 15, 2013 at 03:48 GMT",
        "merged_at": "Friday Mar 15, 2013 at 03:48 GMT"
    },
    {
        "key": null,
        "number": 479,
        "state": "closed",
        "title": "Add optional insert throttling for LSM trees.",
        "body": "Addresses issue #446.\n\nAn alternative implementation would be to add some statistics - probably those output in the new VERBOSE message. Adding statistics would facilitate applications implementing throttling (and save us guessing what a reasonable throttling policy is).\n",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 13, 2013 at 10:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Apr 19, 2013 at 07:37 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 478,
        "state": "closed",
        "title": "Use generation numbers to avoid polling global transaction state if nothing has changed.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Mar 13, 2013 at 02:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Mar 13, 2013 at 23:46 GMT",
        "merged_at": "Wednesday Mar 13, 2013 at 23:46 GMT"
    },
    {
        "key": null,
        "number": 477,
        "state": "closed",
        "title": "Stop accessing the btree child page size directly from LSM code.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Mar 12, 2013 at 21:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Mar 13, 2013 at 05:08 GMT",
        "merged_at": "Wednesday Mar 13, 2013 at 05:08 GMT"
    },
    {
        "key": null,
        "number": 475,
        "state": "closed",
        "title": "Split merge memory",
        "body": "Michael, here are the changes to do better cache accounting on split-merge pages; I think they're ready to pull.\n",
        "base_ref": "develop",
        "created_at": "Thursday Mar 07, 2013 at 17:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Mar 07, 2013 at 23:44 GMT",
        "merged_at": "Thursday Mar 07, 2013 at 23:44 GMT"
    },
    {
        "key": null,
        "number": 472,
        "state": "closed",
        "title": "posix_fadvise, sync_file_range",
        "body": "Replace os_cache_max configuration and behavior with calls to: (1) discard any page read from the system cache, (2) immediately schedule all page writes to the disk, and (3) periodically discard any pages written from the system cache.  In all three cases, nothing happens if O_DIRECT is configured.\n\nMichael, I've verified these changes individually work to limit WT's effect on the system cache.\n\nI have not verified there's no performance impact (I can't imagine they won't be faster than O_DIRECT, but if O_DIRECT is not configured, I've added what I believe is a relatively cheap system call per read and write, plus a relatively expensive system call per 1,000 writes).\n\nI'd like talk this over with you, specifically if we need to verify the performance impact and what that might look like.\n\nAlso, I've hard-coded the cache clean up at every 1,000 writes, which I don't really like, but I also can't think of any way to quantify it, if we were to make it tunable.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 04, 2013 at 18:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Mar 08, 2013 at 00:05 GMT",
        "merged_at": "Friday Mar 08, 2013 at 00:05 GMT"
    },
    {
        "key": null,
        "number": 470,
        "state": "closed",
        "title": "Rework hazard pointer coupling during cursor walks to be more efficient.",
        "body": "Michael, here is the change I mentioned, it passes the test suite and runs test/format.\n\nIt appears to reduce the number of hazard references required for cursor traversal by about 50% (which should have a positive impact on checkpoints, not just cursor operations).\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 01, 2013 at 00:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Mar 01, 2013 at 01:35 GMT",
        "merged_at": "Friday Mar 01, 2013 at 01:35 GMT"
    },
    {
        "key": null,
        "number": 469,
        "state": "closed",
        "title": "Changes to minimize the impact of checkpoints on other threads",
        "body": "These changes:\n- move fsync out of the checkpoint transaction,\n- avoid attempts to write pages that have already been written in the checkpoint, and\n- discourage use of direct I/O by hinting to the OS to drop buffers from cache instead.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 28, 2013 at 06:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Mar 04, 2013 at 00:52 GMT",
        "merged_at": "Monday Mar 04, 2013 at 00:52 GMT"
    },
    {
        "key": null,
        "number": 468,
        "state": "closed",
        "title": "Page read generation",
        "body": "Ignore the page read generation unless we're actually evicting, increment the read generation in steps so we (hopefully) only set it every N times we access the page.\n\nMichael, the questions here: we won't evict any page until at least the second time we see it, and whether or not incrementing the read-generation in steps does what it's supposed to do (or if there's a better measurement we could create of what \"in the future\" means for page read generations).\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 27, 2013 at 19:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Feb 28, 2013 at 01:07 GMT",
        "merged_at": "Thursday Feb 28, 2013 at 01:07 GMT"
    },
    {
        "key": null,
        "number": 466,
        "state": "closed",
        "title": "Add a reference count to tables, only free if the table is not in use.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 26, 2013 at 03:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Feb 26, 2013 at 06:30 GMT",
        "merged_at": "Tuesday Feb 26, 2013 at 06:30 GMT"
    },
    {
        "key": null,
        "number": 465,
        "state": "closed",
        "title": "Internal split page 0th key changes.",
        "body": "Instead of fixing up the 0th key on split internal pages during the final merge, maintain a correct key on every split page we created.  Reference #457.\n",
        "base_ref": "develop",
        "created_at": "Monday Feb 25, 2013 at 23:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Feb 27, 2013 at 00:04 GMT",
        "merged_at": "Wednesday Feb 27, 2013 at 00:04 GMT"
    },
    {
        "key": null,
        "number": 464,
        "state": "closed",
        "title": "Create a thread to do automatic checkpoints.",
        "body": "Add a thread that checkpoints periodically as part of wiredtiger_open.\n\nNot sure if there are other useful configuration options?\n\nI also added a \"wiredtiger_open has finished\" flag that I'm using to gateway the server threads, let me know if you don't like that.\n",
        "base_ref": "develop",
        "created_at": "Saturday Feb 23, 2013 at 14:27 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Sunday Feb 24, 2013 at 23:16 GMT",
        "merged_at": "Sunday Feb 24, 2013 at 23:16 GMT"
    },
    {
        "key": "un-",
        "number": 463,
        "state": "closed",
        "title": "Make run-time statistics optional.",
        "body": "Michael, here are the changes to make statistics optional.\n\nThere are two issues I want to note.\n\nFirst, you and I talked about statistics_log implying statistics, and I ended up going the other way.  The reason is because having the statistics boolean affect statistics_log means you can configure statistics logging, and then turn it on/off using the statistics boolean.  That seemed more intuitive and simple to me; if you disagree, let's talk it over and I'll fix it.\n\nSecond, there's a nasty side-effect of this change.  We now have two classes of statistics, those available when the run-time statistics aren't configured (btree file row count, for example), and those that aren't.   I didn't try to address the problem in this change, I wasn't sure how to solve it: we could ignore the problem, we could document it (\"some statistics are always available\", or \"some statistics are run-time only\", here's a list), or we could split up the structures into run-time and not-run-time, and configure the stat cursor to return one set or the other (we already have something a little like this in \"statistics_fast\").\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 22, 2013 at 20:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Feb 25, 2013 at 23:51 GMT",
        "merged_at": "Monday Feb 25, 2013 at 23:51 GMT"
    },
    {
        "key": null,
        "number": 461,
        "state": "closed",
        "title": "Add support for streaming pack / unpack to the API.",
        "body": "Some APIs (including SQL) need to pack / unpack fields one at a time.  Add a stream-like API for this.\n",
        "base_ref": "develop",
        "created_at": "Thursday Feb 21, 2013 at 04:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Feb 26, 2013 at 01:29 GMT",
        "merged_at": "Tuesday Feb 26, 2013 at 01:29 GMT"
    },
    {
        "key": null,
        "number": 460,
        "state": "closed",
        "title": "Add support for \"pack streams\"",
        "body": "API layers (including a SQL layer) need to be able to pack / unpack fields individually.  This change adds a set of methods to support this.\n",
        "base_ref": "master",
        "created_at": "Thursday Feb 21, 2013 at 04:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Feb 21, 2013 at 04:28 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 459,
        "state": "closed",
        "title": "Statistics log",
        "body": "Michael, here are the changes to create a statistics logging thread.\n\nThe things I think are worth review:\n1. The commit b64190ecc736bbd98276087ce586e1e7f61cfec3: this change was because I needed to create a default configuration string value that had whitespace in it, and so I needed to put quotes around it when putting it into the config_def.c file.   I am not sure at all that I put this change in the right place, this one needs to be checked pretty carefully.\n2. The commit 7501ecc748ff26ab577b80f4c9c9a49c9bcce6b0: this change is because when we search subcategories, if we \"process\" each intermediate value, the value type can change (ITEM_ID types get reset to ITEM_NUM).  Essentially, this means booleans don't work if they're in subcategories.\n3. I gave the statistics logging thread its own session, that looked right to me but I wanted to mention it.   In general, it's probably worth looking at how I created the statistics logging thread, I may have misunderstood how that's supposed to work.\n4. As far as I know, there's no way to say \"did the user configure this subcategory at all\", so I had to tuck a boolean into the statistics_log subcategory that always has to be set if you want to configure statistics logging.   If there's a way to figure that out, then I could get rid of that extra boolean.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 20, 2013 at 17:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Thursday Feb 21, 2013 at 04:49 GMT",
        "merged_at": "Thursday Feb 21, 2013 at 04:49 GMT"
    },
    {
        "key": null,
        "number": 458,
        "state": "closed",
        "title": "typo.",
        "body": "Fix typo in a comment.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 20, 2013 at 15:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Feb 20, 2013 at 15:21 GMT",
        "merged_at": "Wednesday Feb 20, 2013 at 15:21 GMT"
    },
    {
        "key": null,
        "number": 456,
        "state": "closed",
        "title": "Typos.  Fix WT_ATOMIC_CAS in _lint case to be more accurate.",
        "body": "Fix a few typos.  Corrected WT_ATOMIC_CAS for _lint.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Feb 19, 2013 at 19:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Feb 19, 2013 at 19:32 GMT",
        "merged_at": "Tuesday Feb 19, 2013 at 19:32 GMT"
    },
    {
        "key": null,
        "number": 453,
        "state": "closed",
        "title": "Java",
        "body": "Java API for WiredTiger\n",
        "base_ref": "develop",
        "created_at": "Friday Feb 15, 2013 at 04:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Feb 21, 2013 at 05:28 GMT",
        "merged_at": "Thursday Feb 21, 2013 at 05:28 GMT"
    },
    {
        "key": null,
        "number": 452,
        "state": "closed",
        "title": "Include the default file configuration when opening a file.",
        "body": "The defaults are included because underlying objects have persistent configuration information stored in the metadata file.  If defaults are included in the configuration, we can add new configuration strings without upgrading the metadata file or writing special code in case a configuration string isn't initialized, as long as the new configuration string has an appropriate default value.\n\nMichael, can you please look this over, and then we can talk?   (Or if you just love the change, merge it in, it passes the usual tests).\n\nMost of the interesting changes and questions are in conn/conn_btree.c:\n1. I quit passing a cfg[] array plus a config string, and instead I'm just passing a created cfg array, and storing that cfg array in the btree handle for the life of the handle.   I know you have strong feelings about this, but the way I'm rationalizing the change is that the cfg array represents the total \"open state\" of the object, so it makes sense to me to do it that way.\n   \n   Obviously, that's potentially more expensive when digging out configuration values.   We could collapse the whole thing, but that seems even more expensive, so I didn't do it.\n2. Is this the right place for this change?   I chose it because it's where we retrieve the metadata file's configuration, obviously I could push it higher up into the API or lower down into the btree code, but I think the metadata file configuration information would have to tag along for consistency.\n3. In __conn_btree_open(), I made a change to not discard the configuration until after __wt_conn_btree_sync_and_close() has returned, that made sense to me, there's no reason sync might not need the configuration?\n4. In __wt_conn_btree_discard_single(), I kept the session to btree handle mapping around longer than before, I can't see any reason that's not OK, and it made things simpler.\n\nOne change in conn/conn_api.c:wiredtiger_open(): we weren't specifying the key/value formats when creating the metadata file explicitly, I think that was a bug, but I wanted to call it out.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 13, 2013 at 16:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Mar 11, 2013 at 04:38 GMT",
        "merged_at": "Monday Mar 11, 2013 at 04:38 GMT"
    },
    {
        "key": null,
        "number": 451,
        "state": "closed",
        "title": "Remove no_cache support.",
        "body": "Remove support for the no-cache configuration, revert back to maintaining only a pair of hazard pointers at most (a parent/child pair), rather than the full stack of hazard pointers (one per level of the tree).\n\nAlex, I don't think there's anything here you need to review, I just pulled \"no_cache\" out of the LSM cursor create call and everything else was pretty obvious.\n\nMichael, you might want to look at my new routine __wt_bt_swap/__wt_page_swap_func in btree.i, and, of course, where I'm using it in bt_walk.c, row_srch.c and col_srch.c, I think the rest if pretty innocent.\n\nI tucked in one other change in this branch, removing the split-percentage and overflow-size checking whenever WT_COMPRESSOR::compress_raw is configured, this should move compress_raw toward a true page-layout function, as we discussed.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 06, 2013 at 19:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Wednesday Feb 06, 2013 at 23:26 GMT",
        "merged_at": "Wednesday Feb 06, 2013 at 23:26 GMT"
    },
    {
        "key": "it-",
        "number": 450,
        "state": "closed",
        "title": "Try to merge split-merge pages to minimize deepening the in-memory tree",
        "body": "Here are some changes that allow eviction to consider merging a set of split-merge pages.  They are passing tests, but could use careful review and discussion about the heuristics for when to try this.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Feb 06, 2013 at 12:42 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Friday Feb 08, 2013 at 06:35 GMT",
        "merged_at": "Friday Feb 08, 2013 at 06:35 GMT"
    },
    {
        "key": null,
        "number": 449,
        "state": "closed",
        "title": "Add __wt_cache_pages_dirty and make naming consistent.",
        "body": "Add calls to functions where needed.\n",
        "base_ref": "develop",
        "created_at": "Thursday Jan 31, 2013 at 21:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Jan 31, 2013 at 22:46 GMT",
        "merged_at": "Thursday Jan 31, 2013 at 22:46 GMT"
    },
    {
        "key": null,
        "number": 440,
        "state": "closed",
        "title": "Hang under LevelDB benchmark \"small\" config with 4 or more threads.",
        "body": "Hi guys, \n\nI got some more info on why we hang when running the \"small\" config of LevelDB Bench with four or more threads.\n\nTo reproduce:\n\n```\nenv LD_LIBRARY_PATH=../wt-dev-branch/build_posix/.libs:../wt-dev-branch/build_posix /ext/compressors/snappy/.libs/ TEST_TMPDIR= ./db_bench_wiredtiger --cache_size=6537216 --threads=4 --db=/tmpfs/leveldb --benchmarks=fillrandom,overwrite,readrandom\n```\n\nThe benchmark goes fine through the first two phases (fillrandom and overwrite), but then goes into an infinite loop in readrandom.\n\nExamining the stack trace gives me the following: \n#1  0x00007ffff795fdf9 in __wt_cache_full_check (session=0x6499b0) at ../src/include/cache.i:69\n#2  __wt_page_in_func (session=0x6499b0, parent=0x7fffe4308a10, ref=0x7fffe4308ad0) at ../src/btree/bt_page.c:42\n#3  0x00007ffff7984e40 in __wt_row_search (session=0x6499b0, cbt=0x7fffe41d5ed0, is_modify=0) at ../src/btree/row_srch.c:174\n#4  0x00007ffff795301d in __wt_btcur_search (cbt=0x7fffe41d5ed0) at ../src/btree/bt_cursor.c:146\n#5  0x00007ffff798e052 in __curfile_search (cursor=0x7fffe41d5ed0) at ../src/cursor/cur_file.c:133\n#6  0x00007ffff7995b81 in __clsm_search (cursor=0x7fffe41caa50) at ../src/lsm/lsm_cursor.c:581\n#7  0x0000000000404077 in leveldb::Benchmark::ReadRandom(leveldb::(anonymous namespace)::ThreadState*) ()\n#8  0x000000000040897e in leveldb::Benchmark::ThreadBody(void*) ()\n#9  0x0000000000432a3a in leveldb::(anonymous namespace)::StartThreadWrapper(void*) ()\n#10 0x00007ffff6f07d86 in start_thread () from /lib64/libpthread.so.0\n#11 0x00007ffff6c4066d in clone () from /lib64/libc.so.6\n\nI checked every thread, and every one of them is stuck in the same place in an infinite loop. If we look at the code where we loop, we see the following:\n\n```\n    for (wake = 0;; wake = (wake + 1) % 100) {\n            WT_RET(__wt_eviction_check(session, &lockout, wake == 0));\n            if (!lockout || F_ISSET(session,\n                WT_SESSION_NO_CACHE_CHECK | WT_SESSION_SCHEMA_LOCKED))\n                    return (0);\n            if (F_ISSET(btree,\n                WT_BTREE_BULK | WT_BTREE_NO_CACHE | WT_BTREE_NO_EVICTION))\n                    return (0);\n            if ((ret = __wt_evict_lru_page(session, 1)) == EBUSY)\n                    __wt_yield();\n            else\n                    WT_RET_NOTFOUND_OK(ret);\n    }\n```\n\nWhat happens is that we drop all the way down to the last \"else\" statement, but don't return, because the ret value is actually WT_RET_NOTFOUND, so we stay in the loop forever. It appears that we can't find a page to evict. \n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 29, 2013 at 05:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Tuesday Jan 29, 2013 at 06:22 GMT",
        "merged_at": "Tuesday Jan 29, 2013 at 06:22 GMT"
    },
    {
        "key": null,
        "number": 445,
        "state": "closed",
        "title": "Don't translate errno. #443.",
        "body": "Apply Keith's diff to remove the translation of errno into WT_NOTFOUND.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 28, 2013 at 21:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jan 29, 2013 at 00:21 GMT",
        "merged_at": "Tuesday Jan 29, 2013 at 00:21 GMT"
    },
    {
        "key": null,
        "number": 444,
        "state": "closed",
        "title": "mmap support",
        "body": "Michael, this is the first part of the mmap changes: I needed a per-checkpoint structure in which to store the mapping.   In summary, I've added a new structure, WT_BM, which is the per-checkpoint handle.  The WT_BM also has a list of methods the upper-level btree engine uses to call into the block manager.  The list of methods is the change we'd need for pluggable block managers; with this change, adding a second block manager should be relatively straight-forward (assuming it has roughly similar characteristics to the current block manager code).   I didn't bother creating the extension structures, but it's pretty clear how that would work.\n\nAnyway, I've created the pull request so you can easily take a look if you're interested in this change.\n",
        "base_ref": "develop",
        "created_at": "Saturday Jan 26, 2013 at 18:25 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jan 30, 2013 at 23:19 GMT",
        "merged_at": "Wednesday Jan 30, 2013 at 23:19 GMT"
    },
    {
        "key": null,
        "number": 441,
        "state": "closed",
        "title": "Allow LSM trees to discard the btree handle from the active chunk.",
        "body": "Otherwise pages will stay pinned in cache for the old active chunks.\n",
        "base_ref": "develop",
        "created_at": "Friday Jan 25, 2013 at 02:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jan 30, 2013 at 23:16 GMT",
        "merged_at": "Wednesday Jan 30, 2013 at 23:16 GMT"
    },
    {
        "key": "ct-",
        "number": 439,
        "state": "closed",
        "title": "evict-empty, second set of changes.",
        "body": "Michael, this change removes the need for the code in your commit 989e2ffbcfe66b096199729cdac7bddc9d8d3aa0 by detecting the empty, instantiated page during the internal page's reconciliation.\n\nThis isn't going to be any faster, really, than your change, but it fixes #345 (the fast-delete page leak), and it cleans up internal page reconciliation: the previous code did a lot of testing of the variables set by __rec_child_modify(), and now there's an explicit status passed back.  It is still kind of magical, but at least the magic is in one place.\n\nWould you please do the review, and especially check if you agree with me we can simply discard the backing leaf page in __rec_child_deleted()?   That's the fix for #345: I'm not sure why I didn't think of it at the time, but I can't think of any reason we'd ever need that leaf page once we decide the backing page isn't visible to any running transaction.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 23, 2013 at 18:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Jan 24, 2013 at 00:45 GMT",
        "merged_at": "Thursday Jan 24, 2013 at 00:45 GMT"
    },
    {
        "key": null,
        "number": 438,
        "state": "closed",
        "title": "Empty evict",
        "body": "The changes for #437.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 22, 2013 at 19:55 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jan 22, 2013 at 22:42 GMT",
        "merged_at": "Tuesday Jan 22, 2013 at 22:42 GMT"
    },
    {
        "key": null,
        "number": 433,
        "state": "closed",
        "title": "Compaction can't run at the same time as checkpoint.",
        "body": "Michael here's two minor fixes to compaction.\n\nFirst, I don't believe there's anything that would stop a checkpoint from reconciling a page at the same time compaction is reading the reconciliation information for the page, and that's going to lead to a core dump.   Maybe I'm missing something, though.\n\nSecond, compaction should visit all of the pages in the cache, both leaf and internal.\n\nI also updated the statistics to count compaction, and test/format now calls compaction once per thread.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jan 15, 2013 at 14:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jan 16, 2013 at 05:04 GMT",
        "merged_at": "Wednesday Jan 16, 2013 at 05:04 GMT"
    },
    {
        "key": null,
        "number": 394,
        "state": "closed",
        "title": "WT_REF_READING vs. WT_REF_LOCKED",
        "body": "This is a prerequisite to #345.\n\nAn item I've had on my cleanup list for a long time is the fact the fast-delete code uses the flag WT_REF_READING as a general purpose short-term lock of the WT_REF structure, which isn't correct (it may be OK to use the flag in that way, but it shouldn't be named WT_REF_READING in that case).  This is similar, if not the same, as how we use WT_REF_LOCKED.\n\nI think we can go in a few different ways:\n1. Merge WT_REF_LOCKED and WT_REF_READING into a new flag (maybe WT_REF_EXCLUSIVE, or WT_REF_PINNED), that's either a short-term or long-term lock of the WT_REF and which explicitly doesn't carry any additional information other than some thread of control has exclusive access to this WT_REF until the status changes.   Then, eviction, fast-delete and page-read all use this state for their own purposes.\n   \n   I think this approach works, but only because I don't see any place in the code that uses WT_REF_LOCKED as a state to mean \"eviction owns this WT_REF\".  If such places exist, then this doesn't work unless we can get rid of them.\n2. Rename WT_REF_LOCKED to be WT_REF_EVICTION (where it means eviction has the WT_REF locked down), then rename WT_REF_READING to be WT_REF_LOCKED (where WT_REF_LOCKED means a short-term lock of the WT_REF, used by fast-cell delete and page-read). \n   \n   2(a) would be, I suppose, rename WT_REF_LOCKED to be WT_REF_EVICTION, add WT_REF_FAST_DELETE, and keep WT_REF_READING around, then we have 3 possible states, not 2.   I don't see real value in having this additional state, myself.\n3. Your good idea goes here.\n\nMichael, Alex, I need some feedback on this one.\n\nHere's where and how I think the WT_REF_LOCKED and WT_REF_READING flags are currently used:\n- __debug_ref: print out information on the two flags\n- __wt_evict_list_clr_page: eviction asserts a page is in the locked state\n- __evict_get_page: eviction switches a page from WT_REF_MEM to WT_REF_LOCKED\n- __wt_evict_lru_page: eviction asserts a page is in the locked state\n- __wt_page_in_func: readers ignore WT_REF_LOCKED, WT_REF_READING pages\n- __wt_cache_read: Readers switch a page from WT_REF_DISK or WT_REF_DELETED to WT_REF_READING \n- __tree_walk_delete: Cursor delete switches a page from WT_REF_DISK to WT_REF_READING (short-term lock), then sets the page to WT_REF_DELETED.\n- __tree_walk_read: Cursor read skips deleted pages, switches a page from WT_REF_DELETED to WT_REF_READING (short-term lock), so it can check if the deletion is visible.\n- __wt_ref_evict: Eviction asserts the page is in WT_REF_LOCKED state\n- __rec_discard_tree: Eviction asserts the page is in WT_REF_LOCKED state\n- __rec_review: Eviction ignores pages already in the WT_REF_LOCKED or WT_REF_READING stateso\n- __rec_excl_clear: Eviction asserts a page is locked when returning it to availability\n- __hazard_exclusive: Eviction switches a page from WT_REF_MEM to WT_REF_LOCKED.\n- __rec_page_modified: Reconciliation switches a page from WT_REF_DELETED to WT_REF_READING (short-term lock), waits for pages currently set to WT_REF_READING (can't distinguish between pages being read, or pages in fast-delete).\n- include/btmem.h: definitions, the comments are wrong.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 14, 2013 at 13:10 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Tuesday Jan 15, 2013 at 06:15 GMT",
        "merged_at": "Tuesday Jan 15, 2013 at 06:15 GMT"
    },
    {
        "key": "er-",
        "number": 432,
        "state": "closed",
        "title": "Add the ability to specify a per-connection base size to participants in",
        "body": "a shared cache.\n",
        "base_ref": "develop",
        "created_at": "Monday Jan 14, 2013 at 06:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jan 15, 2013 at 04:59 GMT",
        "merged_at": "Tuesday Jan 15, 2013 at 04:59 GMT"
    },
    {
        "key": null,
        "number": 430,
        "state": "closed",
        "title": "Disable forced eviction if eviction is disabled for the whole tree.",
        "body": "Otherwise, we can't create in-memory LSM chunks.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jan 09, 2013 at 06:21 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jan 09, 2013 at 06:38 GMT",
        "merged_at": "Wednesday Jan 09, 2013 at 06:38 GMT"
    },
    {
        "key": null,
        "number": 429,
        "state": "closed",
        "title": "Some fixes and enhancements to forced eviction",
        "body": "",
        "base_ref": "evict-large-pages",
        "created_at": "Wednesday Jan 09, 2013 at 05:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jan 09, 2013 at 05:33 GMT",
        "merged_at": "Wednesday Jan 09, 2013 at 05:33 GMT"
    },
    {
        "key": null,
        "number": 428,
        "state": "closed",
        "title": "Add a forced eviction mode that uses a new page state",
        "body": "instead of re-using the locked state and tracking other information in\nthe eviction server.\n",
        "base_ref": "evict-large-pages",
        "created_at": "Tuesday Jan 08, 2013 at 08:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jan 08, 2013 at 23:56 GMT",
        "merged_at": "Tuesday Jan 08, 2013 at 23:56 GMT"
    },
    {
        "key": "ty-",
        "number": 423,
        "state": "closed",
        "title": "Tweaks to the dirty-disable branch",
        "body": "Hi Keith,\n\nHere are a few changes to your fixes for eviction during checkpoints (a branch on a branch).\n\nThe first change is mostly cosmetic: as far as I can see, there is no need for a round trip to the eviction server thread to wait for LRU eviction to complete before starting a checkpoint.  Any pages selected for LRU eviction will be locked while `evict_lock` is held, and the checkpoint walk will wait for the locked state to be resolved before attempting to evict any parent pages.\n\nThe next thing I realized is that your check in `__rec_review` of whether an ancestor page is in some state other than `WT_REF_MEM` is sufficient on its own.  That is, we don't need to completely avoid eviction of dirty pages anywhere in the file for the whole of the internal node checkpoint.\n\nThe reason is a little subtle: as mentioned above, any eviction \"ahead of\" the checkpoint will cause the checkpoint walk to pause until it is done.  Any eviction \"behind\" the checkpoint will read using the checkpoint transaction snapshot, so no newer changes can be evicted anyway.\n\nThe tradeoffs with this change are:\n1. application threads can help out with checkpoint in the unlikely event that an internal node ends up on the LRU queue;\n2. it simplifies the code (less checking for whether writes are disabled); but\n3. there could be more wasted work in eviction threads, where reconciliation starts then gives up when there is no chance of them being evicted successfully.\n\nIf 3. is measurable, I'm inclined to address it by tweaking the pages that are put on the LRU queue and keeping the complexity out of `__rec_review`.\n\nPlease take a look and let's talk when I come online in your afternoon / evening.  I think we're close -- both versions are running hundreds of iterations of that test/format config, and the performance testing is looking pretty good (still a slight dip at the end of checkpoints, but as discussed previously, that could be contention for the block manager mutex).\n",
        "base_ref": "dirty-disable",
        "created_at": "Thursday Jan 03, 2013 at 11:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Jan 04, 2013 at 02:55 GMT",
        "merged_at": "Friday Jan 04, 2013 at 02:55 GMT"
    },
    {
        "key": "st-",
        "number": 422,
        "state": "closed",
        "title": "Fast-path \"S\" and \"u\" formats in cursor.get_key and cursor.get_value.",
        "body": "Michael, here are a couple of simple changes to inline \"S\" and \"u\" formats based on Sue's email on the LevelDB benchmark (strings are  obvious, and apparently \"u\" is used by LSM).\n\nIf you want another approach, or I missed a reason this isn't OK, or you want other formats included, I'm happy to own that work, just let me know.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 28, 2012 at 17:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jan 02, 2013 at 23:57 GMT",
        "merged_at": "Wednesday Jan 02, 2013 at 23:57 GMT"
    },
    {
        "key": null,
        "number": 420,
        "state": "closed",
        "title": "Dirty disable",
        "body": "Michael, I'm creating a pull request to make it easy to look at this change. \n\nI'll also annotate a few places in the diff so it's easier to understand.\n\nI believe this branch fixes the problems described in #419, but at the cost of losing much of the power of two-pass checkpoints (it prevents eviction of any page with any modification structure associated with it during the internal-page phase of the checkpoint).\n\nI'm still trying to think of a better fix, but I've got nothing so far.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 27, 2012 at 20:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Jan 04, 2013 at 03:17 GMT",
        "merged_at": "Friday Jan 04, 2013 at 03:17 GMT"
    },
    {
        "key": null,
        "number": 418,
        "state": "closed",
        "title": "Add code in to prioritize eviction of large pages.",
        "body": "Add code in to prioritize eviction of pages larger than a certain threshold. This avoids taking a performance hit when a huge page needs to be reconciled.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 21, 2012 at 04:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Wednesday Jan 09, 2013 at 05:34 GMT",
        "merged_at": "Wednesday Jan 09, 2013 at 05:34 GMT"
    },
    {
        "key": null,
        "number": 417,
        "state": "closed",
        "title": "Do compaction in the calling thread instead of interrupting the eviction thread",
        "body": "Michael, this branch has the obvious set of changes to do compaction in the calling thread instead of interrupting the eviction thread.\n\nThere's nothing tricky here, but there's also nothing to prevent a checkpoint thread and a compaction thread from running at the same time.\n\nI don't think a checkpoint thread in WT_SYNC_LEAF mode will collide with compaction; both threads of control are walking the cache, acquiring hazard pointers, that should be safe.\n\nA checkpoint thread in WT_SYNC_INTERNAL mode is a little scarier.    I think it's safe, but I'd appreciate it if you'd consider it?\n\nThanks.\n\n@michaelcahill \n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 19, 2012 at 16:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Jan 03, 2013 at 03:00 GMT",
        "merged_at": "Thursday Jan 03, 2013 at 03:00 GMT"
    },
    {
        "key": null,
        "number": 415,
        "state": "closed",
        "title": "Add panic calls to appropriate places in LSM.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Dec 18, 2012 at 03:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Dec 19, 2012 at 01:37 GMT",
        "merged_at": "Wednesday Dec 19, 2012 at 01:37 GMT"
    },
    {
        "key": "on-",
        "number": 414,
        "state": "closed",
        "title": "Allow non-conflicting updates to complete.",
        "body": "As part of checkpoint tuning, I coded up a version of the change under discussion in #407 to test its impact on the workload.  We're generally running with a single update thread, so the effect is minimal, and #407 considers some more restructuring than this change, but I'm posting it here in case it's a step in the right direction and saves someone else reimplementing it.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 17, 2012 at 12:53 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Dec 19, 2012 at 05:18 GMT",
        "merged_at": "Wednesday Dec 19, 2012 at 05:18 GMT"
    },
    {
        "key": null,
        "number": 413,
        "state": "closed",
        "title": "Concurrent checkpoints",
        "body": "Track the changes to allow out-of-cache workloads to run in parallel with checkpoints.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 14, 2012 at 02:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Dec 19, 2012 at 05:50 GMT",
        "merged_at": "Wednesday Dec 19, 2012 at 05:50 GMT"
    },
    {
        "key": null,
        "number": 411,
        "state": "closed",
        "title": "Add a __wt_panic function that shuts down all of the WiredTiger APIs.",
        "body": "Michael, this is the change that adds the __wt_panic function and shuts down the WiredTiger APIs.\n\nRef #215.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 10, 2012 at 18:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Dec 11, 2012 at 23:23 GMT",
        "merged_at": "Tuesday Dec 11, 2012 at 23:23 GMT"
    },
    {
        "key": null,
        "number": 410,
        "state": "closed",
        "title": "Update LSM error handling for drop, rename and truncate.",
        "body": "Hi Michael,\n\nI've made some changes to the error handling. I think they are definite improvements. I've got two remaining concerns, I wanted to check in to ensure they are valid before I chase them down (hence the pull request).\n\n1) Should drop and rename be updating the WT_CONNECTION::lsmqh queue? If so, would that belong in the lsm_dsrc.c:__lsm_drop and lsm_dsrc.c:__lsm_rename functions?\n2) I'm concerned about the state of things if a call to __lsm_tree_close (or any subsequent calls in the schema level functions) fails. At that stage, I suspect we really want to free any resources we can and remove the LSM tree from the connection list (so a new one can be created). Alternatively, do we need a call to __lsm_tree_start_worker in the error handling code?\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 10, 2012 at 01:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Dec 10, 2012 at 06:20 GMT",
        "merged_at": "Monday Dec 10, 2012 at 06:20 GMT"
    },
    {
        "key": "ow-",
        "number": 408,
        "state": "closed",
        "title": "Replace the row-key-serial function with CAS instruction.",
        "body": "Replace the row-key-serial function with CAS instruction.\n",
        "base_ref": "develop",
        "created_at": "Saturday Dec 08, 2012 at 01:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Dec 10, 2012 at 06:04 GMT",
        "merged_at": "Monday Dec 10, 2012 at 06:04 GMT"
    },
    {
        "key": null,
        "number": 405,
        "state": "closed",
        "title": "Mtx cleanup",
        "body": "Michael, Alex, here are the changes to return error codes from the mutex functions instead of aborting in place (this is the first part of the changes for #215).\n\nAlex, would you please do the review and pull the changes when you're happy with them?\n\nThe interesting changes are mostly in the LSM code (although there are a couple of changes in conn_btree.c that are potentially tricky, and in how the eviction server is triggered).\n\nI also fixed a few minor LSM locking problems I spotted by inspection when I was looking at some error cases, I put them on separate commits to make them easier to review.\n\nMichael, once this change is in the tree, I'll add some kind of system-wide panic implementation, that will close out #215.\n",
        "base_ref": "develop",
        "created_at": "Friday Dec 07, 2012 at 17:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Sunday Dec 09, 2012 at 22:09 GMT",
        "merged_at": "Sunday Dec 09, 2012 at 22:09 GMT"
    },
    {
        "key": null,
        "number": 404,
        "state": "closed",
        "title": "Add check for any calls to strtouq. #390",
        "body": "Keith, please review this.  It works for the current tree and all the test cases I manually tried to detect/allow through.  Did I miss any edge cases?\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2012 at 21:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Dec 06, 2012 at 21:54 GMT",
        "merged_at": "Thursday Dec 06, 2012 at 21:54 GMT"
    },
    {
        "key": null,
        "number": 403,
        "state": "closed",
        "title": "Minor changes to fix uri table display. #397",
        "body": "Table was not displaying correctly.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2012 at 20:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Dec 06, 2012 at 21:00 GMT",
        "merged_at": "Thursday Dec 06, 2012 at 21:00 GMT"
    },
    {
        "key": null,
        "number": 402,
        "state": "closed",
        "title": "Remove unused statistics config.  Other minor doc edits. #397",
        "body": "I removed the unused statistics config type from everywhere and have a few minor corrections.\nThis is probably the end of my doc survey changes.  The only thing left that I really want, but\nnot sure what it should really say is a description of the cursor::get_value varargs.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2012 at 20:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Dec 06, 2012 at 20:46 GMT",
        "merged_at": "Thursday Dec 06, 2012 at 20:46 GMT"
    },
    {
        "key": null,
        "number": 401,
        "state": "closed",
        "title": "update can ignore write generations in a few cases",
        "body": "Michael, I was looking at your changes to speed up the insert path when a page write generation number changes underfoot, and I think we can do a similar test in the case of updating an existing key/value pair.\n\nBasically, if we're the first update on an update list, or the transaction isn't a snapshot transaction, there's no reason we can't proceed even if the page's write generation number has changed, in other words, there are cases where there is either no update on the list or we don't care what updates are on the list, and the test is cheap enough to do in the serialized function.\n\nIf you agree, here's the change.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2012 at 18:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Dec 07, 2012 at 19:54 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 400,
        "state": "closed",
        "title": "Doc mods1",
        "body": "Rename hazard reference -> hazard pointer.  A few other minor doc edits.\n",
        "base_ref": "develop",
        "created_at": "Thursday Dec 06, 2012 at 17:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Dec 06, 2012 at 17:15 GMT",
        "merged_at": "Thursday Dec 06, 2012 at 17:15 GMT"
    },
    {
        "key": null,
        "number": 399,
        "state": "closed",
        "title": "Stats reorg",
        "body": "Michael,  I had a clean-up item that was waiting on your stats commit, to fix up the line between the btree and block-manager statistics.  While I was in there, I decided I liked the way Alex broke out the LSM  statistics, so I kind of went wild.\n\nThe only \"interesting\" things:\n1. I changed it so we're maintaining roughly the same information in both the connection and data-source cache statistics.  For example, previously we were tracking \"evicted pages\" for the data-source in bt_evict.c, and \"clean evictions\" plus \"dirty evictions\" for the connection in rec_evict.c, and there were a couple of other similar-but-not-quite-the-same fields.\n   \n   I changed evicted page tracking  to be the same (clean & dirty in both cases), and moved all the statistics gathering into rec_evict.c.\n   \n   The other changes were pretty simple naming changes, or tracking various statistics in both the connection and the data-source (rather than in just one of them).\n2. I renamed the cursor statistics to match the cursor method names.\n3. I made the split between the btree and block manager statistics cleaner: it's now block_XXX and btree_XXX (it used to be file_XXX for both). \n\nAnyway, if you hate it, let me know and I'll go back and do just the minimal change, otherwise please pull it in.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 05, 2012 at 19:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Dec 06, 2012 at 16:14 GMT",
        "merged_at": "Thursday Dec 06, 2012 at 16:14 GMT"
    },
    {
        "key": null,
        "number": 398,
        "state": "closed",
        "title": "Doc fixes and modification. #397",
        "body": "This is a first set of doc mods that fix some minor things.  Most of the changes should be obvious.\n\nHere are a few that may be noteworthy.  The cursor uri tables (3 copies!) were different from each other.  I brought them up to date.  It appears that the one in data_sources.dox is \"the master\" although I probably would have expected the master to be in wiredtiger.in.  I also moved table: alphabetically.\n\nI changed hazard reference to hazard pointer because when I tried searching for that, it does not search well (Google tries very hard to make it harvard reference) and hazard pointer immediately is fruitful.\n\nFor cursor_rand, apparently having both a section and subpage with the same name doesn't really work and the section wins, so it was a link to itself.\n\nThings I did not fix:\n1.  Why does the TOC have  Data Sources -> Cursor Operations?  I couldn't figure out how/why that is there.\n2.  Cursor random is given unusual prominence given its specialized nature.\n3.  The cursor_ops page never discusses get_value or retrieving values.\nThe WT_CURSOR page for get_value() does not discuss the varargs.\nIs the varargs discussed somewhere?  It is shown on the data_sources page.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 05, 2012 at 18:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Dec 05, 2012 at 19:03 GMT",
        "merged_at": "Wednesday Dec 05, 2012 at 19:03 GMT"
    },
    {
        "key": null,
        "number": 396,
        "state": "closed",
        "title": "Prioritize errors so system errors aren't lost. #388",
        "body": "Check for non-fatal errors that could mask system errors in WT_TRET and WT_TRET_NOTFOUND_OK.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Dec 05, 2012 at 15:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Dec 05, 2012 at 15:40 GMT",
        "merged_at": "Wednesday Dec 05, 2012 at 15:40 GMT"
    },
    {
        "key": null,
        "number": 389,
        "state": "closed",
        "title": "Typo.",
        "body": "Fixed a typo.\n",
        "base_ref": "develop",
        "created_at": "Monday Dec 03, 2012 at 17:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Dec 03, 2012 at 17:44 GMT",
        "merged_at": "Monday Dec 03, 2012 at 17:44 GMT"
    },
    {
        "key": null,
        "number": 386,
        "state": "closed",
        "title": "Table dump is broken.",
        "body": "Michael, we broke table dump awhile back.\n\nI think I've fixed it, but it needs review -- I've put a couple of comments in the diff on places I think need checking.\n\nI've also added a test so we catch it next time.\n\n@michaelcahill \n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 29, 2012 at 19:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Nov 29, 2012 at 23:01 GMT",
        "merged_at": "Thursday Nov 29, 2012 at 23:01 GMT"
    },
    {
        "key": null,
        "number": 385,
        "state": "closed",
        "title": "Trickle",
        "body": "Add a method for tracking dirty pages in the cache.\n",
        "base_ref": "develop",
        "created_at": "Thursday Nov 29, 2012 at 01:23 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Nov 30, 2012 at 05:03 GMT",
        "merged_at": "Friday Nov 30, 2012 at 05:03 GMT"
    },
    {
        "key": "te-",
        "number": 384,
        "state": "closed",
        "title": "Move the write-generation from the block layer into the btree layer.",
        "body": "Michael, this is the change to move the write-generation from the block layer into the btree layer.\n\n@michaelcahill \n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 28, 2012 at 22:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Nov 30, 2012 at 01:55 GMT",
        "merged_at": "Friday Nov 30, 2012 at 01:55 GMT"
    },
    {
        "key": null,
        "number": 383,
        "state": "closed",
        "title": "Simplify and speed up the test_compress test",
        "body": "Simplify and speed up the test_compress test, add a test run without compression (better testing of no compression than \"nop\").\n\nMichael, I took a look at this test because it takes forever to run, mostly because we were opening/closing a cursor on every insert, and inserting 10,000 40KB K/V pairs.\n\nAnyway, I'm not just pushing this change into the tree because I removed a whole bunch of magic from the test.  I couldn't see any point in it, but maybe I'm missing something.\n\nCan you please take a fast look at the original, particularly the magic at the end of the script, and if you agree it's not necessary, pull my version into the tree?\n\nThanks.\n\n@michaelcahill \n",
        "base_ref": "develop",
        "created_at": "Wednesday Nov 28, 2012 at 16:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Nov 28, 2012 at 23:53 GMT",
        "merged_at": "Wednesday Nov 28, 2012 at 23:53 GMT"
    },
    {
        "key": "ed-",
        "number": 382,
        "state": "closed",
        "title": "support fixed-size block targets for compression",
        "body": "Reference #324.\n",
        "base_ref": "develop",
        "created_at": "Friday Nov 16, 2012 at 15:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Nov 26, 2012 at 06:41 GMT",
        "merged_at": "Monday Nov 26, 2012 at 06:41 GMT"
    },
    {
        "key": null,
        "number": 378,
        "state": "closed",
        "title": "Shared cache config",
        "body": "",
        "base_ref": "shared-cache",
        "created_at": "Wednesday Nov 07, 2012 at 08:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Nov 07, 2012 at 21:25 GMT",
        "merged_at": "Wednesday Nov 07, 2012 at 21:25 GMT"
    },
    {
        "key": null,
        "number": 377,
        "state": "closed",
        "title": "Shared cache evict",
        "body": "Update shared cache implementation to work within eviction threads.\n",
        "base_ref": "shared-cache",
        "created_at": "Thursday Nov 01, 2012 at 23:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Nov 08, 2012 at 07:54 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 376,
        "state": "closed",
        "title": "Shared cache",
        "body": "Add an implementation for sharing a cache between multiple database connections within a single process.\n\nIssue [#146]\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 29, 2012 at 05:28 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Nov 12, 2012 at 03:49 GMT",
        "merged_at": "Monday Nov 12, 2012 at 03:49 GMT"
    },
    {
        "key": null,
        "number": 375,
        "state": "closed",
        "title": "Fix a bug in __wt_cond_wait - it now returns after the timeout is",
        "body": "expired.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 24, 2012 at 01:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 24, 2012 at 01:49 GMT",
        "merged_at": "Wednesday Oct 24, 2012 at 01:49 GMT"
    },
    {
        "key": "ma-",
        "number": 369,
        "state": "closed",
        "title": "Support LSM as a backing source for schema-level objects (tables, column groups and indices)",
        "body": "These changes allow schema-level objects to be backed by data sources other than files. In particular, LSM support is added, but these changes will make it easy to add support for more data sources in future.\n\nThis pull request is to track and test the change prior to commit.\n",
        "base_ref": "develop",
        "created_at": "Thursday Oct 18, 2012 at 07:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Oct 19, 2012 at 04:15 GMT",
        "merged_at": "Friday Oct 19, 2012 at 04:15 GMT"
    },
    {
        "key": "ma-",
        "number": 368,
        "state": "closed",
        "title": "Support LSM as a backing source for schema-level objects (tables, column groups and indices)",
        "body": "These changes allow schema-level objects to be backed by data sources other than files.  In particular, LSM support is added, but these changes will make it easy to add support for more data sources in future.\n\nThis pull request is to track and test the change prior to commit.\n",
        "base_ref": "master",
        "created_at": "Thursday Oct 18, 2012 at 07:45 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Oct 18, 2012 at 07:46 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 366,
        "state": "closed",
        "title": "Fix for checkpoints where the first checkpoint to delete is fake",
        "body": "Here is a test case:\n\n``` python\nimport wiredtiger, wttest\nfrom helper import key_populate, value_populate\n\nclass test_f(wttest.WiredTigerTestCase):\n    uri = 'table:x'\n\n    def test_f(self):\n        self.session.create(self.uri, 'key_format=S,value_format=S')\n\n        self.session.checkpoint('')\n        curs1 = self.session.open_cursor(self.uri, None)\n        for i in xrange(10):\n            curs1.set_key(str(i) + \"TEST_KEY\")\n            curs1.set_value(\"TEST_VAL\")\n            curs1.insert()\n        curs1.close()\n\n        curs1 = self.session.open_cursor(self.uri, None, 'checkpoint=WiredTigerCheckpoint')\n        for i in xrange(10):\n            curs1.set_key(str(i) + \"TEST_KEY\")\n            self.assertEqual(curs1.search(), wiredtiger.WT_NOTFOUND)\n        curs1.close()\n\n        # Pin the original checkpoint\n        sess2 = self.conn.open_session()\n        curs2 = sess2.open_cursor(self.uri, None, 'checkpoint=WiredTigerCheckpoint')\n\n        # Take a new checkpoint, make sure the data is there.\n        self.session.checkpoint('')\n        curs1 = self.session.open_cursor(self.uri, None, 'checkpoint=WiredTigerCheckpoint')\n        for i in xrange(10):\n            curs1.set_key(str(i) + \"TEST_KEY\")\n            self.assertEqual(curs1.search(), 0)\n        curs1.close()\n\n        # Release the pinned cursor / session\n        curs2.close()\n        sess2.close()\n\n        # Add more data\n        curs3 = self.session.open_cursor(self.uri, None)\n        for i in xrange(10, 20):\n            curs3.set_key(str(i) + \"TEST_KEY\")\n            curs3.set_value(\"TEST_VAL\")\n            curs3.insert()\n        curs3.close()\n\n        self.session.checkpoint('')\n\nif __name__ == '__main__':\n   wttest.run()\n```\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 17, 2012 at 03:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Wednesday Oct 17, 2012 at 12:15 GMT",
        "merged_at": null
    },
    {
        "key": "On-",
        "number": 365,
        "state": "closed",
        "title": "On-line compaction",
        "body": "On-line compaction feature, ref #248.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Oct 16, 2012 at 22:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 17, 2012 at 11:44 GMT",
        "merged_at": "Wednesday Oct 17, 2012 at 11:44 GMT"
    },
    {
        "key": null,
        "number": 364,
        "state": "closed",
        "title": "Add advanced tuning options for LSM bloom filters.",
        "body": "Add two new bloom configuration options  lsm_bloom_newest and lsm_bloom_oldest.\n\nUpdate the code to handle bloom filter existence and creation a bit better (hopefully).\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 15, 2012 at 05:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Oct 15, 2012 at 07:19 GMT",
        "merged_at": "Monday Oct 15, 2012 at 07:19 GMT"
    },
    {
        "key": null,
        "number": 357,
        "state": "closed",
        "title": "LSM tuning",
        "body": "A collection of changes to improve LSM performance.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 10, 2012 at 02:47 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 10, 2012 at 03:39 GMT",
        "merged_at": "Wednesday Oct 10, 2012 at 03:39 GMT"
    },
    {
        "key": null,
        "number": 356,
        "state": "closed",
        "title": "Simplify eviction",
        "body": "These changes unify the check for the \"cache full\" into one call, shared by both reads an updates.\n\nUpdate operations now check that the cache is not full before they start, which means we can avoid \"forced eviction\" of hot pages entirely. When the cache becomes full because of inserts, application threads will block before their next update operation, giving eviction time to proceed without forcefully locking a page.\n\nAnother change is to collect a fixed number of pages each time an eviction walk is triggered, independent of the number of open file handles. This should help in cases where eviction spends a lot of time collecting candidate pages that are then thrown away.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 10, 2012 at 02:46 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 10, 2012 at 05:22 GMT",
        "merged_at": "Wednesday Oct 10, 2012 at 05:22 GMT"
    },
    {
        "key": null,
        "number": 355,
        "state": "closed",
        "title": "Simplify eviction",
        "body": "These changes unify the check for the \"cache full\" into one call, shared by both reads an updates.\n\nUpdate operations now check that the cache is not full before they start, which means we can avoid \"forced eviction\" of hot pages entirely.  When the cache becomes full because of inserts, application threads will block before their next update operation, giving eviction time to proceed without forcefully locking a page.\n\nAnother change is to collect a fixed number of pages each time an eviction walk is triggered, independent of the number of open file handles.  This should help in cases where eviction spends a lot of time collecting candidate pages that are then thrown away.\n",
        "base_ref": "master",
        "created_at": "Wednesday Oct 10, 2012 at 02:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 10, 2012 at 02:45 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 354,
        "state": "closed",
        "title": "Add a new statistics cursor type \"statistics:lsm\".",
        "body": "Update ex_stat.c to demonstrate usage.\nUpdate ex_test_perf.c to have a statistics thread.\n",
        "base_ref": "develop",
        "created_at": "Monday Oct 08, 2012 at 06:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Oct 08, 2012 at 10:33 GMT",
        "merged_at": "Monday Oct 08, 2012 at 10:33 GMT"
    },
    {
        "key": null,
        "number": 353,
        "state": "closed",
        "title": "Track the changes to fix #310 (second version)",
        "body": "Opened a pull request to track the second set of changes that fix #310.\n\nThis isn't yet ready to pull, the main purpose here is to make it easy to see the changes, and to get them automatically tested.\n",
        "base_ref": "develop",
        "created_at": "Sunday Oct 07, 2012 at 20:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Oct 11, 2012 at 10:55 GMT",
        "merged_at": "Thursday Oct 11, 2012 at 10:55 GMT"
    },
    {
        "key": "ce-",
        "number": 352,
        "state": "closed",
        "title": "Force-feed a bitmap into a bulk load",
        "body": "This change is currently a kludge both because of the API and because of the 32-bit limits it introduces on Bloom filter sizes.\n\nOTOH, this is a huge win for larger LSM merges, which otherwise have to copy ~10M bits with separate calls to `cursor->set_value` and `cursor->insert`.\n\nThis change is not ready to go, but we should discuss what to do with it.\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 05, 2012 at 07:52 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 10, 2012 at 09:43 GMT",
        "merged_at": "Wednesday Oct 10, 2012 at 09:43 GMT"
    },
    {
        "key": "ma-",
        "number": 351,
        "state": "closed",
        "title": "Checkpoint the metadata after successful schema-level operations.",
        "body": "Otherwise, if process exits without closing the connection or running a\ncheckpoint, created objects exist but there is no record in the metadata.\n\nrefs #350\n",
        "base_ref": "develop",
        "created_at": "Friday Oct 05, 2012 at 07:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Tuesday Oct 09, 2012 at 05:04 GMT",
        "merged_at": "Tuesday Oct 09, 2012 at 05:04 GMT"
    },
    {
        "key": null,
        "number": 348,
        "state": "closed",
        "title": "Make it possible to stack serialization function calls.",
        "body": "Michael, can you please review & pull this one?   There's a relatively long comment in the commit.\n\nI think the only interesting changes are in bt_sync.c and bt_evict.c, the changes to the eviction server and checkpoint thread, I might have messed up the wake/sleep synchronization.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 03, 2012 at 17:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Oct 04, 2012 at 00:29 GMT",
        "merged_at": "Thursday Oct 04, 2012 at 00:29 GMT"
    },
    {
        "key": null,
        "number": 347,
        "state": "closed",
        "title": "Save two strcmp calls in fast pass cursor set_key. Tidy some flags.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 03, 2012 at 05:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 03, 2012 at 05:55 GMT",
        "merged_at": "Wednesday Oct 03, 2012 at 05:55 GMT"
    },
    {
        "key": null,
        "number": 346,
        "state": "closed",
        "title": "LSM tuning",
        "body": "Various changes to improve the performance of LSM loads, and particularly of merges.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Oct 03, 2012 at 04:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Oct 03, 2012 at 05:03 GMT",
        "merged_at": "Wednesday Oct 03, 2012 at 05:03 GMT"
    },
    {
        "key": null,
        "number": 344,
        "state": "closed",
        "title": "Track the changes to fix #310 (first version)",
        "body": "Opened a pull request to track the changes that fix #310.   The main purpose here is to make it easy to see the changes, and to get them automatically tested.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2012 at 07:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Oct 11, 2012 at 10:52 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 343,
        "state": "closed",
        "title": "If no space can be allocated in the cache, abort transactions.",
        "body": "This allows test/format configurations with small cache sizes and large page sizes to make progress.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2012 at 06:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Sep 28, 2012 at 07:17 GMT",
        "merged_at": "Friday Sep 28, 2012 at 07:17 GMT"
    },
    {
        "key": null,
        "number": 342,
        "state": "closed",
        "title": "Lsm metadata lock",
        "body": "Update the LSM code to use the metadata lock where appropriate.\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 28, 2012 at 05:32 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Sep 28, 2012 at 06:36 GMT",
        "merged_at": "Friday Sep 28, 2012 at 06:36 GMT"
    },
    {
        "key": null,
        "number": 341,
        "state": "closed",
        "title": "Lsm checkpoint thread",
        "body": "Add a new worker thread to LSM that checkpoints chunks once they become read only.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 26, 2012 at 11:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Sep 26, 2012 at 22:46 GMT",
        "merged_at": "Wednesday Sep 26, 2012 at 22:46 GMT"
    },
    {
        "key": null,
        "number": 340,
        "state": "closed",
        "title": "Abort transactions if the cache is so full that they cannot make progress",
        "body": "This allows WiredTiger to work in caches where the number of pages is small\nenough that an old snapshot could block itself from evicting in order to read\nnew pages.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 26, 2012 at 02:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Sep 26, 2012 at 05:05 GMT",
        "merged_at": "Wednesday Sep 26, 2012 at 05:05 GMT"
    },
    {
        "key": null,
        "number": 339,
        "state": "closed",
        "title": "Implement minor merges for LSM trees, prefer them to major merges.",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 25, 2012 at 23:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Sep 26, 2012 at 10:37 GMT",
        "merged_at": "Wednesday Sep 26, 2012 at 10:37 GMT"
    },
    {
        "key": null,
        "number": 337,
        "state": "closed",
        "title": "Add support for cursors that operate outside of cache",
        "body": "",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 25, 2012 at 07:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Sep 26, 2012 at 07:16 GMT",
        "merged_at": "Wednesday Sep 26, 2012 at 07:16 GMT"
    },
    {
        "key": null,
        "number": 336,
        "state": "closed",
        "title": "Lsm checkpoint open",
        "body": "Fix LSM code so that it reliably opens cursors on checkpoints once chunks have been written to disk.\n\nA couple of other related fixes, including ensuring that session->drop releases all handle locks on error.\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 24, 2012 at 04:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Sep 24, 2012 at 23:03 GMT",
        "merged_at": "Monday Sep 24, 2012 at 23:03 GMT"
    },
    {
        "key": null,
        "number": 335,
        "state": "closed",
        "title": "Skips",
        "body": "I put the dictionary code behind a skip list so we can have large dictionaries without incurring a linear search cost.   Alex, would you please review?\n\nThanks,\n--keith\n\n@agorrod \n@michaelcahill \n",
        "base_ref": "develop",
        "created_at": "Friday Sep 21, 2012 at 13:29 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Sunday Sep 23, 2012 at 23:00 GMT",
        "merged_at": "Sunday Sep 23, 2012 at 23:00 GMT"
    },
    {
        "key": "lk-",
        "number": 332,
        "state": "closed",
        "title": "bulk-load blocks checkpoint",
        "body": "Michael, I think this one is ready to go.   I've flagged a few spots in the code where I'd specifically like review, but otherwise, if you agree with the commit description, it's probably OK.\n\nReference #321.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 20, 2012 at 16:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Sep 21, 2012 at 02:21 GMT",
        "merged_at": "Friday Sep 21, 2012 at 02:21 GMT"
    },
    {
        "key": null,
        "number": 331,
        "state": "closed",
        "title": "Autocommit",
        "body": "These changes implement auto-commit for updates, #309.\n\nKeith, apart from looking at the implementation, the main thing here is the effect on eviction with pathologically small caches (e.g., 3 pages and 20 threads).  With the old implicit transaction code, there was code to try to make progress in this case in eviction, by constantly updating the transaction snapshot if a thread had not yet read a page.\n\nNow that auto-commit allocates transaction IDs at the start of an update operation, trying to update the snapshot has minimal impact when all of the threads are waiting on eviction.  Instead, what I've done is change the calculation in test/format to make sure there is at least one internal page and one leaf page per thread.  Let me know if you think that's unreasonable.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Sep 19, 2012 at 11:56 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Sep 21, 2012 at 02:23 GMT",
        "merged_at": "Friday Sep 21, 2012 at 02:23 GMT"
    },
    {
        "key": null,
        "number": 328,
        "state": "closed",
        "title": "Fix a race when starting the LSM worker thread. It was possible for",
        "body": "the thread to exit immediately if it started fast enough.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 18, 2012 at 06:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Sep 18, 2012 at 06:42 GMT",
        "merged_at": "Tuesday Sep 18, 2012 at 06:42 GMT"
    },
    {
        "key": null,
        "number": 325,
        "state": "closed",
        "title": "Add support for LSM trees",
        "body": "Adds a new URI scheme, \"lsm:\", for creating an LSM tree.\nLSM trees create and use Bloom filters internally to reduce unnecessary I/O.\nrefs #168\n",
        "base_ref": "develop",
        "created_at": "Friday Sep 14, 2012 at 04:37 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Sep 14, 2012 at 13:56 GMT",
        "merged_at": "Friday Sep 14, 2012 at 13:56 GMT"
    },
    {
        "key": null,
        "number": 323,
        "state": "closed",
        "title": "Test concurrent bulk loads",
        "body": "This is a combination of Alex's changes to test bulk loads in test/fops, and some fixes to handle locking to make that test pass.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Sep 11, 2012 at 23:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Sep 11, 2012 at 23:03 GMT",
        "merged_at": "Tuesday Sep 11, 2012 at 23:03 GMT"
    },
    {
        "key": null,
        "number": 318,
        "state": "closed",
        "title": "Dictionary",
        "body": "Alex, I think the dictionary implementation is ready to pull, it has been running overnight.\n\nI think it's pretty low-risk (dictionaries don't happen unless you explicitly configure them), but if this doesn't make it into 1.3, there are two bug fixes we should separately bring into the release (16779b66a573beb8b200470687a7c9dc6dc1d220 and 0ea5fb6b83c7239d72e2016ab251b92c250cdaa5).\n",
        "base_ref": "develop",
        "created_at": "Monday Sep 10, 2012 at 13:14 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Sep 12, 2012 at 01:59 GMT",
        "merged_at": "Wednesday Sep 12, 2012 at 01:59 GMT"
    },
    {
        "key": null,
        "number": 315,
        "state": "closed",
        "title": "replace cursor.equals with cursor.compare, rework session.truncate",
        "body": "replace cursor.equals with cursor.compare, rework session.truncate, ref #314\n\nMichael, the one thing I think you might want to consider here: cursor.equals used to work (maybe?) for other cursor types than file and table (if you recall, cursor.equals retrieved raw cursors and then did a byte comparison, that said, I don't think we ever actually tested it ).  I don't see much use for cursor comparison in other types of objects, so I didn't try and make cursor.compare work for anything other than file or table types.  Let me know if you disagree with that.\n",
        "base_ref": "develop",
        "created_at": "Saturday Sep 08, 2012 at 00:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Sep 11, 2012 at 02:30 GMT",
        "merged_at": "Tuesday Sep 11, 2012 at 02:30 GMT"
    },
    {
        "key": null,
        "number": 312,
        "state": "closed",
        "title": "Fast truncate support",
        "body": "Fast truncate support, ref #247.\n",
        "base_ref": "develop",
        "created_at": "Thursday Sep 06, 2012 at 17:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Sep 07, 2012 at 01:26 GMT",
        "merged_at": "Friday Sep 07, 2012 at 01:26 GMT"
    },
    {
        "key": null,
        "number": 311,
        "state": "closed",
        "title": "Add lsm support to dump utility. ",
        "body": "Fix LSM open so a new chunk isn't automatically created. Update test/format so LSM databases can be\ncreated.\n",
        "base_ref": "lsm",
        "created_at": "Wednesday Sep 05, 2012 at 06:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Sep 05, 2012 at 11:49 GMT",
        "merged_at": "Wednesday Sep 05, 2012 at 11:49 GMT"
    },
    {
        "key": null,
        "number": 307,
        "state": "closed",
        "title": "Add bloom filter implementation and test.",
        "body": "The bloom filters will be used internally by the LSM implementation.\n\nI've been testing by running the following bash script from the build/test/bloom folder:\n\n```\n#!/bin/bash\n\ncache=1000\nops=100000\necho \"Cache size: $cache, Number of items: $ops\"\nfor k in 2 4 6 10; do\n    for f in 2 4 8 10 12; do\n        seed=$RANDOM\n        rm -f WiredTiger* my_bloom.wt \n        kbs=$((($ops * $f)/(8 * 1024)))\n        cmd_out=`(time ./t -c $cache -k $k -f $f -o $ops -s $seed) 2>&1 | grep -v -e real -e sys -e \"^$\" | tr \"\\\\n\" \", \"`\n        fps=`echo $cmd_out | cut -d ',' -f 3`\n        tm=`echo $cmd_out | cut -d ',' -f 4 | cut -d ' ' -f 2`\n        echo \"k: $k, f: $f, space: $kbs kb, fp:$fps, time: $tm, seed: $seed\"\n    done\ndone\n```\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 29, 2012 at 06:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Aug 30, 2012 at 02:21 GMT",
        "merged_at": "Thursday Aug 30, 2012 at 02:21 GMT"
    },
    {
        "key": null,
        "number": 304,
        "state": "closed",
        "title": "64  bit bitstring API",
        "body": "Hi Keith,\n\nI updated the bitstring implementation to support 64 bit string lengths. The change seems pretty simple, but it touches code I'm nervous about (in btree). Could you do a review and pull if it's OK?\n\nAlso, while I was doing this I came came across the gcc __builtin_ffs, which turns into a single processor instruction. Should we think about using that in the _bit_ffs implementation?\n\nThanks,\nAlex\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 22, 2012 at 06:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Aug 27, 2012 at 05:43 GMT",
        "merged_at": "Monday Aug 27, 2012 at 05:43 GMT"
    },
    {
        "key": null,
        "number": 303,
        "state": "closed",
        "title": "Add a test that runs checkpoints in one thread, while doing concurrent operations in a number of other threads.",
        "body": "Hi Michael,\n\nI've created a test that does concurrent checkpoints. It's reasonably basic at the moment in that it doesn't play with isolation level settings.\n\nI've created a pull request rather than just pushing because:\n1) It takes a while for the test to run (15 seconds on my machine), and it doesn't uncover any issues.\n2) I'm not entirely sure you want to add multi threaded tests to the Python suite :)\n- Alex\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 20, 2012 at 05:43 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Sep 07, 2012 at 01:46 GMT",
        "merged_at": "Friday Sep 07, 2012 at 01:46 GMT"
    },
    {
        "key": null,
        "number": 302,
        "state": "closed",
        "title": "Create checkpoints on empty tables.",
        "body": "If the application does a checkpoint (regardless whether it's named or internal), a checkpoint by the name must exist.  This is complicated by the fact that this applies to empty row-store files as well which we go to some effort to avoid writing.  Ref #301.\n\nRe-work the checkpoint code to skip unmodified objects when closing a file (whatever checkpoints we have at that point are sufficient), and to skip unmodified objects when the checkpoint we're taking is named the same as the last checkpoint we have and we're not deleting other checkpoints (which might free up space).\n\nRemove the recent change that made the __wt_page_modify_set function also mark the tree dirty: this is incorrect because the \"dirty page\" flag climbs the tree during reconciliation: that doesn't mean the tree\nis no longer \"clean\", the process of checkpointing is what cleans the tree.\n\nChange the btree salvage functions  to set the tree and page dirty flags when instantiating new pages (it doesn't matter whether we do or not, because currently the tree flag only matters to the checkpoint function, but it's consistent with the way we handle other \"dirty\" operations).\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 16, 2012 at 20:02 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Aug 17, 2012 at 02:38 GMT",
        "merged_at": "Friday Aug 17, 2012 at 02:38 GMT"
    },
    {
        "key": null,
        "number": 299,
        "state": "closed",
        "title": "Add hash functions to repository",
        "body": "Related issue is #286\n\nKeith: Could you review the license headers in both src/support/hash_city.c and src/support/hash_fnv.c please?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 15, 2012 at 07:39 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Aug 15, 2012 at 15:18 GMT",
        "merged_at": "Wednesday Aug 15, 2012 at 15:18 GMT"
    },
    {
        "key": null,
        "number": 298,
        "state": "closed",
        "title": "Clean up test output if an exception is raised: only report it once.",
        "body": "Hi Alex,\n\nCan you please take a look at this one and let me know if you see any problems?\n\nWhen I'm testing manually, I tend to run \"run.py -v 2\", and it has long annoyed me that failing tests are reported twice: once for the real failure, and once because they write an exception trace to stderr.  This is my attempt to fix that, but I haven't checked it with other verbosity levels.\n\nThanks!\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 14, 2012 at 02:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Aug 14, 2012 at 07:35 GMT",
        "merged_at": "Tuesday Aug 14, 2012 at 07:35 GMT"
    },
    {
        "key": "ng-",
        "number": 297,
        "state": "closed",
        "title": "Make cursors long-lived objects",
        "body": "Michael, this passes tests and I've updated all of the documentation.\n\nIt's probably worth doing a fast review of session/session_api.c, specifically:\n1. I've disallowed session.reconfigure if there are transactions running,\n2. session.txn_begin resets cursors -- I doubt that's necessary, but it seemed safer.\n",
        "base_ref": "develop",
        "created_at": "Monday Aug 13, 2012 at 18:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Aug 15, 2012 at 04:42 GMT",
        "merged_at": "Wednesday Aug 15, 2012 at 04:42 GMT"
    },
    {
        "key": "ad-",
        "number": 290,
        "state": "closed",
        "title": "Add support for read-committed isolation #289",
        "body": "Operations have transactionally-consistent reads, wherre the snapshot is\nupdated automatically (when the session reads its first page).\n\nAdd a session-level \"isolation\" setting replacing the one in open_cursor that\nwas never implemented.  This setting applies to both non-transactional\noperations and is the default isolation level for transactions in the session\nif non \"isolation\" setting is specified to WT_SESSION::begin_transaction.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Aug 08, 2012 at 01:03 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Friday Aug 10, 2012 at 16:04 GMT",
        "merged_at": "Friday Aug 10, 2012 at 16:04 GMT"
    },
    {
        "key": null,
        "number": 288,
        "state": "closed",
        "title": "Optimize the configuration checking code.",
        "body": "Split the description string into a set of structures, to reduce the number\nof string comparisons and manipulation that's required. Issue #279.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Aug 07, 2012 at 07:33 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Aug 08, 2012 at 01:24 GMT",
        "merged_at": "Wednesday Aug 08, 2012 at 01:24 GMT"
    },
    {
        "key": "ad-",
        "number": 285,
        "state": "closed",
        "title": "Change to identify read-only objects.",
        "body": "Add an \"was object ever modified\" flag to the btree handle, and use it to avoid writing read-only objects during internal checkpoints, issue #272.\n\nMichael, the problem in #272 was I was talking about writing the data file itself and didn't realize you were talking about writing the schema file (and, because the schema file was written, the turtle file).\n\nWhat's happening here is we're creating dirty files because that's what we want to reconcile, and we're checkpointing empty files because they're dirty.  This is a little tricky, because we have to checkpoint these files if the checkpoint is named, it's only if it's a close or an internal checkpoint that we don't have to do any work.\n\nThis is actually a performance change, because it allows us to ignore read-only objects during internal checkpoints, that is, unless there's a reason to checkpoint an unmodified object, we can skip walking it just to figure out that there aren't any dirty pages.\n\nHere's a fix for your review. I'll add a few comments into the diff to flag the interesting parts.\n",
        "base_ref": "develop",
        "created_at": "Friday Aug 03, 2012 at 15:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Monday Aug 06, 2012 at 00:14 GMT",
        "merged_at": "Monday Aug 06, 2012 at 00:14 GMT"
    },
    {
        "key": null,
        "number": 281,
        "state": "closed",
        "title": "Cache resident",
        "body": "Michael, can you please take a look and see what you think?\n\nI added a \"cache_resident\" configuration flag, that turns off page eviction and quits maintaining hazard references.   It gives me almost 15% performance improvement on pixiebob in simple, in-memory tests, seems useful for highly contentious objects that are relatively small compared to the memory available.\n\nI've put a couple of comments in the diffs where a change wasn't obvious.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 02, 2012 at 22:26 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Aug 06, 2012 at 00:19 GMT",
        "merged_at": "Monday Aug 06, 2012 at 00:19 GMT"
    },
    {
        "key": null,
        "number": 280,
        "state": "closed",
        "title": "Some optimizations for __wt_config_gets_defno, for #279",
        "body": "If we're dealing with a simple stack of config strings, just parse the application string rather than the full list of defaults.\n",
        "base_ref": "develop",
        "created_at": "Thursday Aug 02, 2012 at 00:04 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Aug 03, 2012 at 00:23 GMT",
        "merged_at": "Friday Aug 03, 2012 at 00:23 GMT"
    },
    {
        "key": null,
        "number": 278,
        "state": "closed",
        "title": "Add the ability to access unnamed checkpoints, issue #271.",
        "body": "Michael, would you please review and pull if you agree with these changes?\n\nI've added a few specific comments in the diff; additionally, the following may be interesting:\n- I've split __wt_session_get_btree into two functions, one of which checks the configuration strings for \"checkpoint\" entries, and one of which does the actual work; it might be worth a brief review of the places I call them both to be sure I didn't make a mistake, also, this set of changes collided with your recent changes to how table files are opened, so there's some question.\n- FYI, there was a bug in the previous code, we didn't refuse to allow named checkpoints in the presence of an open backup cursor.\n- Please skim txn/txn_ckpt.c, that's where the semantic changes are, specifically check if the loop to lock the checkpoints being deleted looks correct to you.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 31, 2012 at 22:00 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Aug 01, 2012 at 23:04 GMT",
        "merged_at": "Wednesday Aug 01, 2012 at 23:04 GMT"
    },
    {
        "key": null,
        "number": 273,
        "state": "closed",
        "title": "add support for a reserved checkpoint name that opens the object's last checkpoint.",
        "body": "Changes for #271: add support for a reserved checkpoint name\"wiretiger.last\" that opens the object's last checkpoint.\n\nMichael, this branch is my first cut at adding support for opening the \"last\" checkpoint.  I've inlined some comments/questions for you in the diff.\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 27, 2012 at 19:18 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jul 31, 2012 at 21:21 GMT",
        "merged_at": null
    },
    {
        "key": "st-",
        "number": 268,
        "state": "closed",
        "title": "Next set of changes for fast-path session.truncate.",
        "body": "Michael, can you please review the changes in btree/bt_curnext.c?  Specifically, I'm now recording the page's write-generation number as part of cursor.next/prev operations.  I can't think of any reason that's not OK to do, but it makes me want a second opinion.   (Technically, I don't even think the read has any ordering constraints, as the cursor has the page pretty well \"pinned\", but I did use WT_ORDERED_READ.\n\nEverything else is pretty straight-forward, and it passes the test suite, once you agree on that chunk of code, I'll merge it (or you can).\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 24, 2012 at 18:59 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jul 25, 2012 at 02:55 GMT",
        "merged_at": "Wednesday Jul 25, 2012 at 02:55 GMT"
    },
    {
        "key": null,
        "number": 267,
        "state": "closed",
        "title": "next_random tests",
        "body": "Hello all, I've almost created all scenarios outlined in original issue. Can you kindly go through my code and see if a)- it looks okay b)- I've indeed covered all scenarios\n\nOne problem that I'm facing is that when I open up a new empty table using \"next_random\" I'm still able to call \"cursor.next()\" and I don't see any \"Operation not supported\" exception being raised. I think, as per the comment by Michael, an exception should be raised --if I understood that correctly.\n\nSo right now all tests are passing, however, if I uncomment line 137---141 empty table test will fail. \n\nPlease let me know your feedback and I will include all of your feedback in those tests. I look forward to hearing from you (and sorry about delay)\n",
        "base_ref": "develop",
        "created_at": "Sunday Jul 22, 2012 at 10:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Saturday Jul 28, 2012 at 16:27 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 263,
        "state": "closed",
        "title": "Trim obsolete updates to reduce memory footprint",
        "body": "Changes for #223, for the record.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 17, 2012 at 05:57 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jul 17, 2012 at 10:52 GMT",
        "merged_at": "Tuesday Jul 17, 2012 at 10:52 GMT"
    },
    {
        "key": null,
        "number": 258,
        "state": "closed",
        "title": "Cursor dup",
        "body": "Michael, here are the changes for cursor duplication -- go ahead and merge them if you agree.\n\nI did a smoke test,  but there aren't any test-suite tests that test duplicate cursors as far as I can tell (and, in fact, it looks like there's an internal implementation of cursor duplication, that is, we're not actually supporting \"real\" cursor duplication from Python)?\n",
        "base_ref": "develop",
        "created_at": "Friday Jul 06, 2012 at 16:22 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Jul 09, 2012 at 07:47 GMT",
        "merged_at": "Monday Jul 09, 2012 at 07:47 GMT"
    },
    {
        "key": null,
        "number": 257,
        "state": "closed",
        "title": "snapshot python test code review",
        "body": "Hey, sorry pretty new to Github and still trying to learn it. Can you kindly review my code again? I've included all of your suggestions. Please let me know if you want me to change anything.\n\nBy the way, your suggestion of avoiding forking utilities and also avoiding sort and comp was really good--I'm actually sorry I didn't realize that when I was programming the snapshot-test.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jul 04, 2012 at 05:41 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jul 17, 2012 at 10:56 GMT",
        "merged_at": "Tuesday Jul 17, 2012 at 10:56 GMT"
    },
    {
        "key": null,
        "number": 256,
        "state": "closed",
        "title": "[Develop] Kindly review snapshot python test",
        "body": "Hey, hope you're doing well. Can you kindly review my code again? I've included all of your suggestions. Please let me know if you want me to change anything. \n\nBy the way, your suggestion of avoiding forking utilities and also avoiding sort and comp was really good--I'm actually sorry I didn't realize that when I was programming the snapshot-test. \n",
        "base_ref": "master",
        "created_at": "Tuesday Jul 03, 2012 at 16:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jul 04, 2012 at 00:25 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 255,
        "state": "closed",
        "title": "Backup",
        "body": "Michael, I think I've finished the hot backup implementation, and it passes basic smoke tests.   It's not ready to pull yet, but I wanted to give you a chance to skim the code and read the documentation to make sure we're in agreement on the design.\n\nI'm going to start working on the test suite changes next.\n\nCloses #236.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 03, 2012 at 14:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Jul 06, 2012 at 06:11 GMT",
        "merged_at": "Friday Jul 06, 2012 at 06:11 GMT"
    },
    {
        "key": null,
        "number": 254,
        "state": "closed",
        "title": "Can you please review this change to simplify locking?",
        "body": "The basic idea is to push most locking up to the API and use schema_lock to\nprotect any calls that access the connection's list of btree handles.\nCheckpoint needs to access the list of handles anyway, so this also serializes\ncheckpoints.\n\nThe old \"general purpose\" connection spinlock has been renamed \"api_lock\" for\nclarity: it protects other lists in the connection, including the list of\nsession handles.\n\nThis change is a little noisy: I'm still using a flag in the session to mark\nthat the session has the schema lock -- the assertions are there to make sure I\ngot all of the paths.\n\nLet me know what you think, this removes some code that has been bugging me,\nand causing hangs in automated testing.\n\nThanks,\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jul 03, 2012 at 02:12 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jul 03, 2012 at 16:00 GMT",
        "merged_at": "Tuesday Jul 03, 2012 at 16:00 GMT"
    },
    {
        "key": null,
        "number": 253,
        "state": "closed",
        "title": "Sending a pull request",
        "body": "Hi, added snapshot tests. Please review. \n",
        "base_ref": "master",
        "created_at": "Sunday Jul 01, 2012 at 18:01 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jul 04, 2012 at 00:25 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 252,
        "state": "closed",
        "title": "Checkpoint has to flush the metadata file",
        "body": "Checkpoint has to flush the metadata file, but only after it's flushed all of the other files (in summary, we walk the set of files and checkpoint each of them, which updates WiredTiger.wt, then we checkpoint WiredTiger.wt, which updates WiredTiger.turtle, which is flushed to disk).\n\nMichael, in short, we're not flushing the metadata file after checkpoint. I didn't track it back, but my guess is we lost the schema file flush somewhere along the line of doing all the checkpoint code shuffling.\n\nThis is my second try -- I originally changed the __wt_conn_btree_apply and __wt_meta_btree_apply functions to apply the specified function to the meta-data file, after applying it to all other files, but that gets mess in __wt_meta_btree_apply, and doesn't handle the case where the checkpoint has a target list of files.   So, in this branch I've added a specific checkpoint of the metadata file in __wt_txn_checkpoint() itself immediately before the call to __wt_meta_track_off.\n\nI've closed that pull request and deleted the branch from github.\n\nI've tested this change with named and unnamed checkpoints of the complete database and a target list, and it seems to work.\n\nI'm not all that confident on my btree handling locking (or lack thereof), so please check that closely.   I think it's right, but I'm weak on my understanding of that stuff.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 29, 2012 at 15:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Jul 02, 2012 at 06:24 GMT",
        "merged_at": "Monday Jul 02, 2012 at 06:24 GMT"
    },
    {
        "key": null,
        "number": 251,
        "state": "closed",
        "title": "Ckpt meta flush",
        "body": "Checkpoint has to flush the metadata file, but only after it's flushed all of the other files (in summary, we walk the set of files and checkpoint each of them, which updates WiredTiger.wt, then we checkpoint WiredTiger.wt, which updates WiredTiger.turtle, which is flushed to disk).\n\nMichael, in short, we're not flushing the metadata file after checkpoint.  I didn't track it back, but my guess is we lost the schema file flush somewhere along the line of doing all the checkpoint code shuffling.\n\nMy fix was to change the __wt_conn_btree_apply and __wt_meta_btree_apply functions to apply the specified function to the meta-data file, after applying it to all other files.  I'm not sure if this is the right fix (I don't know what general purpose use you have planned for the __wt_conn_btree_apply and __wt_meta_btree_apply functions and if this change screws that up).  The alternative I considered was changing the __wt_txn_checkpoint() itself to flush the meta-data file immediately before the call to __wt_meta_track_off, that might be simpler, but it requires additional locking and handle manipulation inside of __wt_txn_checkpoint.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 29, 2012 at 14:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Jun 29, 2012 at 15:32 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 250,
        "state": "closed",
        "title": "Row key ref",
        "body": "Michael, I suggest we merge the places where we have fast-track code for getting a reference to a key into a function.\n\nThis change does that (I merged your changes separately so you can create a patch for the master more easily).\n\nThe significant change in this diff is replacing the code in __wt_kv_return() and __wt_row_search() with a new inline function named __wt_row_key_ref(), that tries to fast-track getting a reference to the key, and falls back to __wt_row_key() if there's no fast-track path available.\n\nI replaced a bunch of code in salvage to use the new routine, too, obviously that's less interesting.\n\nThere are no bug fixes or performance improvements in this change, it's purely semantic sugar to move a bunch of code into a common function.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 27, 2012 at 16:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Jun 28, 2012 at 00:58 GMT",
        "merged_at": "Thursday Jun 28, 2012 at 00:58 GMT"
    },
    {
        "key": null,
        "number": 249,
        "state": "closed",
        "title": "Return keys from all operations: don't keep pointing to the application's key.",
        "body": "Keith, can you please review this change to always return keys?  In particular, are there common cases where this will introduce copying that could be avoided?\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 27, 2012 at 11:31 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jun 27, 2012 at 15:38 GMT",
        "merged_at": "Wednesday Jun 27, 2012 at 15:38 GMT"
    },
    {
        "key": null,
        "number": 246,
        "state": "closed",
        "title": "Random lookup in a tree",
        "body": "Michael, I've pushed a new branch with the changes for issue #143.\n\nHopefully it's right this time, please review and merge.\n\nI've done the code for the table cursors, but it's a lot uglier than I'd like and I'm actually hoping I've missed something a little more elegant.   It's smoke-tested, and appears to work, but it's not pretty.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 22, 2012 at 16:06 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Jun 25, 2012 at 02:03 GMT",
        "merged_at": "Monday Jun 25, 2012 at 02:03 GMT"
    },
    {
        "key": null,
        "number": 243,
        "state": "closed",
        "title": "Cursor.random",
        "body": "Michael, I took a run at WT_CURSOR::random today, would you please take a look?\n\nSpecific comments:\n- I created a new \"specialized functions\" area in the cursor method documentation instead of including this call in the standard list.  I hate to leave it undocumented, but I also hate to put it in the middle of the normal calls.\n- I didn't implement it for col-store files, I can't imagine any use for it there.\n- I didn't implement it for table cursors -- can you give me a hint on how to do that?   (Presumably, we do the cursor lookup on the primary key, but I don't see any obvious templates for doing that, and my first couple of attempts ended in tears.)\n\nThis should close #143.\n",
        "base_ref": "develop",
        "created_at": "Wednesday Jun 20, 2012 at 17:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday Jun 21, 2012 at 13:10 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 241,
        "state": "closed",
        "title": "Config",
        "body": "Add WT_CONNECTION::config and WT_CURSOR::config methods\n\nWT_CONNECTION::config supports the cache_size, error_prefix, eviction_target, eviction_trigger, and verbose strings.\n\nWT_CURSOR::config supports the append and overwrite strings.\n\nCloses #239.\n",
        "base_ref": "develop",
        "created_at": "Tuesday Jun 19, 2012 at 22:38 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday Jun 20, 2012 at 10:55 GMT",
        "merged_at": "Wednesday Jun 20, 2012 at 10:55 GMT"
    },
    {
        "key": null,
        "number": 240,
        "state": "closed",
        "title": "Checkpoint",
        "body": "Merge the session.checkpoint and session.sync methods: everything is a checkpoint now.\nCloses #235.\n",
        "base_ref": "develop",
        "created_at": "Monday Jun 18, 2012 at 23:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Jun 19, 2012 at 06:52 GMT",
        "merged_at": "Tuesday Jun 19, 2012 at 06:52 GMT"
    },
    {
        "key": null,
        "number": 238,
        "state": "closed",
        "title": "Environment variable configuration",
        "body": "Hi Keith,\n\nCan you please take a look at this change and let me know what you think?\n\nThe basic idea is to read a WIREDTIGER_CONFIG environment variable and layer that into the wiredtiger_open config.  The primary motivation is to be able to easily test different configurations -- e.g., run \"make check\" with direct I/O.  That said, this may be useful in other places: it's been in the back of my head for a while.\n\nOne thing to think through is security.  I _think_ you can always get the same effect by writing a WiredTiger.config file, since you need write permissions to open a database.  That said, there might be some reason to lock down the configuration (by making the config file read-only, say), in which case this change would make it easy to get around that.\n\nThanks,\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Friday Jun 08, 2012 at 04:08 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Jun 15, 2012 at 07:45 GMT",
        "merged_at": "Friday Jun 15, 2012 at 07:45 GMT"
    },
    {
        "key": null,
        "number": 228,
        "state": "closed",
        "title": "Session size",
        "body": "Michael, I thought I'd knock off the method to return the size of an underlying object.\n",
        "base_ref": "develop",
        "created_at": "Sunday May 27, 2012 at 14:58 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday May 28, 2012 at 01:11 GMT",
        "merged_at": null
    },
    {
        "key": null,
        "number": 227,
        "state": "closed",
        "title": "Snapshot resolve",
        "body": "Extents free'd up by deleting snapshots cannot immediately be made available for re-allocation, if we allocate a block but then crash before updating the metadata's snapshot information, we might overwrite a block referenced by a snapshot in the system.  Closes #226.\n",
        "base_ref": "develop",
        "created_at": "Saturday May 26, 2012 at 15:34 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday May 28, 2012 at 02:45 GMT",
        "merged_at": "Monday May 28, 2012 at 02:45 GMT"
    },
    {
        "key": null,
        "number": 224,
        "state": "closed",
        "title": "Reconcile err",
        "body": "Primarily a set of changes to make write errors not leak pages (and, in extreme cases, corrupt the underlying files); once this change is in place, we should be able to exit reconciliation early, allowing reconciliation to give up as soon as it skips an uncommitted update, for eviction writes.   This closes Issue #218.\n",
        "base_ref": "develop",
        "created_at": "Friday May 25, 2012 at 12:40 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday May 25, 2012 at 13:31 GMT",
        "merged_at": "Friday May 25, 2012 at 13:31 GMT"
    },
    {
        "key": null,
        "number": 214,
        "state": "closed",
        "title": "Hazard page check",
        "body": "The check to see if a page needs to be forcibly evicted is performed within the serialization wrap-up function (and, if the page does need to be forcibly evicted, the thread additionally schedules the eviction and wakes the eviction server at the same time).  The problem is the thread is holding a hazard reference: if the eviction server not only wakes up attempts to evict the page before the thread releases the hazard reference, the eviction attempt will fail, and the cycle will repeat infinitely in the tcbench program, at least on pixiebob (the problem won't occur if the eviction thread doesn't make significant progress before the thread releases its hazard reference).  This is unlikely to be an interesting performance problem, but it does affect simple benchmarks where a single thread of control is inserting data as quickly as possible, especially if the inserts are in ascending or descending order.\n    Instead of checking for forcible eviction when a page is modified, this check when a hazard reference is being released.  Further, instead of doing \"size check, then schedule eviction, then wake eviction server, then release hazard reference\" do \"size check, schedule eviction, release hazard reference, wake eviction server\"; this is required because we can't release the hazard reference before scheduling the eviction: if the hazard reference is the last one on the page, the page might be gone before we schedule the eviction.\n    This simplifies some things: we no longer call the routine to schedule an eviction inside a serialization function (there's no significance to that other than simplifying the world a bit).\n    Finally, I removed the check for general cache size checking at the same time as we were checking the individual page size.  We check the general cache size every time we read a page into memory, I don't\nsee why that isn't going to be sufficient.\n",
        "base_ref": "develop",
        "created_at": "Saturday May 19, 2012 at 21:13 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Tuesday May 22, 2012 at 05:02 GMT",
        "merged_at": "Tuesday May 22, 2012 at 05:02 GMT"
    },
    {
        "key": null,
        "number": 213,
        "state": "closed",
        "title": "Feature/transactions",
        "body": "Hi Keith,\n\nThis pull request relates to #138: adding support for non-durable transactions.\n\nI plan to add one further change to this branch, adding and improving some comments.  It is probably worth waiting for that commit before starting a detailed review, but I wanted to flag that the changes are complete and passing tests.\n\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Friday May 18, 2012 at 11:49 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Thursday May 24, 2012 at 11:40 GMT",
        "merged_at": "Thursday May 24, 2012 at 11:40 GMT"
    },
    {
        "key": null,
        "number": 212,
        "state": "closed",
        "title": "Max session",
        "body": "Michael, would you please review and merge if you agree?\n\nOf particular interest: the comment in __wt_page_hazard_check(), please make sure you agree with the barrier logic.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 16, 2012 at 22:54 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 22, 2012 at 08:09 GMT",
        "merged_at": "Tuesday May 22, 2012 at 08:09 GMT"
    },
    {
        "key": null,
        "number": 211,
        "state": "closed",
        "title": "Snapshot",
        "body": "Michael, here's what I'm suggesting for moving the snapshot code into the session layer.\n\nThe key changes are (1) always provide a WT_SNAPSHOT structure to the btree layer, affects sync and salvage, and (2) snapshot the underlying file in the session/connection layers, it's no longer a side-effect of closing the handle.\n\nThe conn/conn_btree.c changes are probably the most interesting: __wt_conn_btree_sync_and_close is a hack, but I'm hoping the call to that function from __wt_session_release_btree might eventually go away and simplify the world a bit.\n\nI created a new file session/session_salvage.c, there's some session-specific salvage work, now.\n",
        "base_ref": "develop",
        "created_at": "Monday May 14, 2012 at 15:35 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday May 14, 2012 at 22:39 GMT",
        "merged_at": "Monday May 14, 2012 at 22:39 GMT"
    },
    {
        "key": null,
        "number": 208,
        "state": "closed",
        "title": "Handler",
        "body": "Michael, the changes for the event handlers turned out to be more complicated than I thought -- would you please briefly review?  (I'm just worried there's something tricky going on here that I don't know about.)\n\nIt should only take you a few minutes to review and merge, read the commit messages and you're done, unless you disagree with the argument.\n",
        "base_ref": "develop",
        "created_at": "Friday May 04, 2012 at 18:30 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday May 08, 2012 at 01:49 GMT",
        "merged_at": "Tuesday May 08, 2012 at 01:49 GMT"
    },
    {
        "key": null,
        "number": 207,
        "state": "closed",
        "title": "Handle locking",
        "body": "Hi Keith,\n\nHere is a set of changes that deserve some critical review.  They fix a bunch of problems, specifically:\n- they make it possible to close handles that other sessions have cached, which has been a long-term issue;\n- verify no longer does an ordinary open of the file after it completes, so it shouldn't be truncated (though to be honest, I haven't checked this by hand yet); and\n- they get rid of btree handles from the schema layer, which is one step closer to splitting btree handles into low-level and high-level pieces, and also gets the schema layer closer to being able to work with other data sources underneath (e.g., LSM trees).\n\nThat said, there is still some fragile code.  Specifically, closing handles before dropping them is painful because we have to lock all of the open snapshot handless in order to close a tree before dropping it, but then the drop code itself needs locks to guarantee exclusive access.  And of course if something goes wrong in the middle, we have to clean it all up.\n\nSo, your suggestions for further cleanup and/or simplification are much appreciated.  Thanks!\n\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Friday May 04, 2012 at 09:51 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Wednesday May 09, 2012 at 11:45 GMT",
        "merged_at": "Wednesday May 09, 2012 at 11:45 GMT"
    },
    {
        "key": null,
        "number": 205,
        "state": "closed",
        "title": "Turtle",
        "body": "Michael, this turned out to be  a lot easier than I anticipated, I think it's done and ready for your review.\n\nThe only things that are a little screwy are that the object WiredTiger.wt no longer shows up in the \"wt list\" command because there's no entry for WiredTiger.wt in WiredTiger.wt itself (I hacked \"wt list -s\" (list the snapshots) and \"wt list -v\" (list the configuration entries) to display information about WiredTiger.wt anyway, because I want to see more in-depth information in those cases).\n\nIf we want to make it look like the schema file still has entries for the WiredTiger.wt file itself, I think we'd have to change the utilities to call an in-library function in order to walk the schema information (right now, they all open a cursor on WiredTiger.wt directly, and walk it).   If the utilities called into the library to walk the schema file, we could pretty easily tack on a couple of extra entries from the turtle file and it would all work as it did before.   That's not hard to do, I don't think, but I didn't bother.\n",
        "base_ref": "develop",
        "created_at": "Thursday May 03, 2012 at 16:19 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday May 04, 2012 at 01:15 GMT",
        "merged_at": "Friday May 04, 2012 at 01:15 GMT"
    },
    {
        "key": null,
        "number": 204,
        "state": "closed",
        "title": "Snapshot1",
        "body": "Michael, this is the last of my snapshot changes.\n\nThe reason I'm not pushing into develop is the changes I made to meta/meta_snapshot.c: basically, I changed it to be a lot more file oriented, that is, I'm passing around filename/snapshot pairs instead of URI/snapshot pairs (and I pulled out the use of the WT_BTREE handle -> name/filename fields as well).\n\nTake a look and if you don't like this, let's talk it over and I'll fix it.\n",
        "base_ref": "develop",
        "created_at": "Wednesday May 02, 2012 at 17:16 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 02, 2012 at 23:33 GMT",
        "merged_at": "Wednesday May 02, 2012 at 23:33 GMT"
    },
    {
        "key": null,
        "number": 202,
        "state": "closed",
        "title": "Snapshot locking",
        "body": "Hi Keith,\n\nCan you please review these changes to add locking for snapshot operations.\n\nIn particular, there is an API change in here so drop operations only have a single \"snapshot\" config key, with an optional structure argument to specify ranges (all, from or to).  The example code should make this clear: let me know if you don't like it, but I think it's cleaner to have a single config key indicating that we're dropping snapshots.\n\nThe rest of the changes relate to locking snapshots, tracking the locks and releasing them when finishing tracking.  It's passing tests.\n\nThanks,\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Tuesday May 01, 2012 at 12:44 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Wednesday May 02, 2012 at 06:16 GMT",
        "merged_at": "Wednesday May 02, 2012 at 06:16 GMT"
    },
    {
        "key": null,
        "number": 201,
        "state": "closed",
        "title": "Fileevict",
        "body": "Michael, these are the changes I'm proposing based on issue #177.\n\nCan you review and decide if you like this approach?\n",
        "base_ref": "develop",
        "created_at": "Friday Apr 27, 2012 at 19:15 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Monday Apr 30, 2012 at 22:24 GMT",
        "merged_at": "Monday Apr 30, 2012 at 22:24 GMT"
    },
    {
        "key": null,
        "number": 197,
        "state": "closed",
        "title": "Snapshot",
        "body": "",
        "base_ref": "develop",
        "created_at": "Sunday Apr 22, 2012 at 23:36 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Friday Apr 27, 2012 at 00:00 GMT",
        "merged_at": "Friday Apr 27, 2012 at 00:00 GMT"
    },
    {
        "key": null,
        "number": 188,
        "state": "closed",
        "title": "Feature/eviction fixes",
        "body": "Today I have been running test/format in threaded mode against the current tree to try to reproduce some failures that have been reported.  The CONFIG file looks like this:\n\nbzip=0\nfile_type=row\ndelete_pct=0\ncache=3\nruns=100\nrows=100000\nops=50000\n\nI'm running \"./t -t 8\" but the failures don't seem too dependent on the number of threads.\n\nThe changes in this branch make this test run, but I am not happy with them: I'm publishing them in case the failures are blocking anyone.\n\nThe failures I saw were related to a thread pulling an invalid page off the eviction list.  With multiple evicting threads, a parent page could be chosen for eviction before its children that are also on the list.  In that case, if the parent finished evicting its children, an invalid page pointer could be left on the list.\n\nEven after clearing child pages from the LRU queue, there were still cases where a page pointer was found on the LRU queue in a strange state (e.g., with a non-NULL parent but a NULL ref).  I don't yet fully understand this, but holding the lru_lock while walking files appears to fix it.  The problem is that I don't want to do that (which is why the WT_REF_EVICT_WALK state was introduced).\n\nAnyway, I'm not proposing that these changes be merged, only making them available here for any followup work on this bug.\n",
        "base_ref": "develop",
        "created_at": "Friday Mar 30, 2012 at 11:05 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Apr 03, 2012 at 22:36 GMT",
        "merged_at": "Tuesday Apr 03, 2012 at 22:36 GMT"
    },
    {
        "key": null,
        "number": 185,
        "state": "closed",
        "title": "Eviction tuning",
        "body": "Can you please review these changes to improve the performance of eviction for read-only workloads?\n\nThe main new idea is to keep the current eviction point pinned in memory, so it can be read by application threads but not evicted.  I'm using a new WT_REF state, WT_REF_EVICT_NEXT to do that.\n\nThe result is that the eviction server can be doing a walk while application threads are still evict evicting.  I've also tweaked the size of the queue and have the eviction server stop evicting when the queue is half empty to go and look for more pages.\n\nLet me know what you think -- these changes make a read-only workload around 3x faster on the 32-core test machine I've been using.\n\nMichael.\n",
        "base_ref": "develop",
        "created_at": "Monday Mar 19, 2012 at 06:20 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:59 GMT",
        "closed_at": "Tuesday Mar 20, 2012 at 11:04 GMT",
        "merged_at": "Tuesday Mar 20, 2012 at 11:04 GMT"
    },
    {
        "key": null,
        "number": 183,
        "state": "closed",
        "title": "Add missing setup step to README",
        "body": "",
        "base_ref": "master",
        "created_at": "Friday Mar 16, 2012 at 21:09 GMT",
        "updated_at": "Thursday Apr 09, 2015 at 01:06 GMT",
        "closed_at": "Friday Mar 16, 2012 at 21:33 GMT",
        "merged_at": null
    }
]